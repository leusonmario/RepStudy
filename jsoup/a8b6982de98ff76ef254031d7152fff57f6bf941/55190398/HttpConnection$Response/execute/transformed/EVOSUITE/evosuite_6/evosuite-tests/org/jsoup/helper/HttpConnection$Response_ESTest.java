/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 02 13:54:56 GMT 2021
 */

package org.jsoup.helper;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileDescriptor;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PrintStream;
import java.io.UnsupportedEncodingException;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.UnknownServiceException;
import java.nio.channels.FileChannel;
import java.util.Collection;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.function.BiConsumer;
import java.util.function.BiFunction;
import java.util.function.UnaryOperator;
import javax.net.ssl.HostnameVerifier;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.jsoup.Connection;
import org.jsoup.helper.HttpConnection;
import org.jsoup.nodes.Document;
import org.jsoup.parser.Parser;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HttpConnection$Response_ESTest extends HttpConnection$Response_ESTest_scaffolding {

  @Test(timeout = 11000)
  public void test00()  throws Throwable  {
      String string0 = "l=#HD(";
  }

  @Test(timeout = 11000)
  public void test01()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertNotNull(httpConnection_Request0);
      
      int int0 = 58;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      String string0 = "--";
      String string1 = "org.jsoup.helper.HttpConnection$Response$2";
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.timeout(int0);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request0.timeout());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request1.timeout());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.parserDefined);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertEquals(58, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertNotNull(httpConnection_Request1);
      
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request0.timeout(int0);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request0.timeout());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(58, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertFalse(httpConnection_Request2.parserDefined);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertNotNull(httpConnection_Request2);
      
      HttpConnection.Request httpConnection_Request3 = httpConnection_Request2.parser(httpConnection_Request0.parser);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request0.timeout());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(58, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request3.timeout());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertTrue(httpConnection_Request3.followRedirects());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.parserDefined);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(58, httpConnection_Request3.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.parserDefined);
      assertNotNull(httpConnection_Request3);
      
      HttpConnection.KeyVal httpConnection_KeyVal0 = new HttpConnection.KeyVal();
      assertNull(httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertNull(httpConnection_KeyVal0.value());
      assertNotNull(httpConnection_KeyVal0);
      
      String string2 = "";
      HttpConnection.KeyVal httpConnection_KeyVal1 = httpConnection_KeyVal0.value(string2);
      assertNull(httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("", httpConnection_KeyVal0.value());
      assertEquals("", httpConnection_KeyVal1.value());
      assertFalse(httpConnection_KeyVal1.hasInputStream());
      assertNull(httpConnection_KeyVal1.key());
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertSame(httpConnection_KeyVal1, httpConnection_KeyVal0);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(httpConnection_KeyVal1);
      
      URL uRL0 = MockURL.getHttpExample();
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertNotNull(uRL0);
      
      HttpConnection.Request httpConnection_Request4 = httpConnection_Request2.data((Connection.KeyVal) httpConnection_KeyVal1);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request0.timeout());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(58, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertNull(httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("", httpConnection_KeyVal0.value());
      assertEquals("", httpConnection_KeyVal1.value());
      assertFalse(httpConnection_KeyVal1.hasInputStream());
      assertNull(httpConnection_KeyVal1.key());
      assertEquals(58, httpConnection_Request4.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertTrue(httpConnection_Request4.followRedirects());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertSame(httpConnection_KeyVal1, httpConnection_KeyVal0);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.parserDefined);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertTrue(httpConnection_Request4.validateTSLCertificates);
      assertEquals(58, httpConnection_Request4.timeoutMilliseconds);
      assertTrue(httpConnection_Request4.parserDefined);
      assertTrue(httpConnection_Request4.followRedirects);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertNotNull(httpConnection_Request4);
      
      HttpConnection.Request httpConnection_Request5 = httpConnection_Request3.data((Connection.KeyVal) httpConnection_KeyVal0);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request0.timeout());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(58, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request3.timeout());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertTrue(httpConnection_Request3.followRedirects());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertNull(httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("", httpConnection_KeyVal0.value());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertEquals(58, httpConnection_Request5.timeout());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request5.postDataCharset());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertTrue(httpConnection_Request5.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertTrue(httpConnection_Request5.followRedirects());
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request5);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.parserDefined);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(58, httpConnection_Request3.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.parserDefined);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertTrue(httpConnection_Request5.validateTSLCertificates);
      assertEquals(58, httpConnection_Request5.timeoutMilliseconds);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertTrue(httpConnection_Request5.parserDefined);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertTrue(httpConnection_Request5.followRedirects);
      assertNotNull(httpConnection_Request5);
      
      String string3 = "http";
      httpConnection_KeyVal0.key = string3;
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("http", httpConnection_KeyVal0.key());
      assertEquals("", httpConnection_KeyVal0.value());
      
      HttpConnection.Request httpConnection_Request6 = (HttpConnection.Request)httpConnection_Request2.url(uRL0);
      assertFalse(httpConnection_Request6.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request6.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request6.method());
      assertEquals("UTF-8", httpConnection_Request6.postDataCharset());
      assertFalse(httpConnection_Request6.ignoreContentType());
      assertEquals(1048576, httpConnection_Request6.maxBodySize());
      assertTrue(httpConnection_Request6.followRedirects());
      assertTrue(httpConnection_Request6.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request0.timeout());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(58, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertSame(httpConnection_Request6, httpConnection_Request4);
      assertSame(httpConnection_Request6, httpConnection_Request3);
      assertSame(httpConnection_Request6, httpConnection_Request0);
      assertSame(httpConnection_Request6, httpConnection_Request1);
      assertSame(httpConnection_Request6, httpConnection_Request5);
      assertSame(httpConnection_Request6, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request6);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request6);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertTrue(httpConnection_Request6.validateTSLCertificates);
      assertTrue(httpConnection_Request6.followRedirects);
      assertFalse(httpConnection_Request6.ignoreContentType);
      assertTrue(httpConnection_Request6.parserDefined);
      assertEquals(58, httpConnection_Request6.timeoutMilliseconds);
      assertFalse(httpConnection_Request6.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request6.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.parserDefined);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertNotNull(httpConnection_Request6);
      
      String string4 = "KXf";
      int int1 = 200;
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(int1);
      assertEquals(0, byteArrayOutputStream0.size());
      assertEquals("", byteArrayOutputStream0.toString());
      assertFalse(int1 == int0);
      assertNotNull(byteArrayOutputStream0);
      
      String string5 = "w'9|\\mc`v}";
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertNotNull(httpConnection_Response0);
      
      int int2 = (-1);
      HttpConnection.Response.MAX_REDIRECTS = int2;
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request4, httpConnection_Response0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Too many redirects occurred trying to load URL null
         //
         verifyException("org.jsoup.helper.HttpConnection$Response", e);
      }
  }

  @Test(timeout = 11000)
  public void test02()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertNotNull(httpConnection_Request0);
      
      int int0 = 41;
      String string0 = "--";
      String string1 = "org.jsoup.helper.HttpConnection$Response$2";
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.timeout(int0);
      assertEquals(41, httpConnection_Request0.timeout());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(41, httpConnection_Request1.timeout());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertEquals(41, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.parserDefined);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(41, httpConnection_Request1.timeoutMilliseconds);
      assertNotNull(httpConnection_Request1);
      
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request1.parser(httpConnection_Request0.parser);
      assertEquals(41, httpConnection_Request0.timeout());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(41, httpConnection_Request1.timeout());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(41, httpConnection_Request2.timeout());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertEquals(41, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.parserDefined);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(41, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertEquals(41, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertNotNull(httpConnection_Request2);
      
      String string2 = "";
      URL uRL0 = MockURL.getHttpExample();
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http", uRL0.getProtocol());
      assertNotNull(uRL0);
      
      HttpConnection.Request httpConnection_Request3 = (HttpConnection.Request)httpConnection_Request1.url(uRL0);
      assertEquals(41, httpConnection_Request0.timeout());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(41, httpConnection_Request1.timeout());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http", uRL0.getProtocol());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertEquals(41, httpConnection_Request3.timeout());
      assertTrue(httpConnection_Request3.followRedirects());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertEquals(41, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.parserDefined);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(41, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.parserDefined);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.followRedirects);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertEquals(41, httpConnection_Request3.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertNotNull(httpConnection_Request3);
      
      String string3 = "KXf";
      httpConnection_Request3.ignoreHttpErrors = httpConnection_Request0.validateTSLCertificates;
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(41, httpConnection_Request0.timeout());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(41, httpConnection_Request1.timeout());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http", uRL0.getProtocol());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertEquals(41, httpConnection_Request3.timeout());
      assertTrue(httpConnection_Request3.ignoreHttpErrors());
      assertTrue(httpConnection_Request3.followRedirects());
      
      int int1 = 0;
      Random.setNextRandom(int1);
      assertFalse(int1 == int0);
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertNotNull(httpConnection_Response0);
      
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request1, httpConnection_Response0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Could not find: www.someFakeButWellFormedURL.org
         //
         verifyException("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection", e);
      }
  }

  @Test(timeout = 11000)
  public void test03()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertNotNull(httpConnection_Request0);
      
      String string0 = "-";
      String string1 = "org.jsoup.helper.HttpConnection$Response$2";
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.parser(httpConnection_Request0.parser);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertNotNull(httpConnection_Request1);
      
      HttpConnection.KeyVal httpConnection_KeyVal0 = HttpConnection.KeyVal.create(string1, httpConnection_Request0.postDataCharset);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("UTF-8", httpConnection_KeyVal0.value());
      assertEquals("org.jsoup.helper.HttpConnection$Response$2", httpConnection_KeyVal0.key());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(string1, string0);
      assertFalse(string1.equals((Object)string0));
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertNotNull(httpConnection_KeyVal0);
      
      String string2 = "";
      HttpConnection.KeyVal httpConnection_KeyVal1 = httpConnection_KeyVal0.key(string1);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("UTF-8", httpConnection_KeyVal0.value());
      assertEquals("org.jsoup.helper.HttpConnection$Response$2", httpConnection_KeyVal0.key());
      assertEquals("org.jsoup.helper.HttpConnection$Response$2", httpConnection_KeyVal1.key());
      assertEquals("UTF-8", httpConnection_KeyVal1.value());
      assertFalse(httpConnection_KeyVal1.hasInputStream());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertSame(httpConnection_KeyVal1, httpConnection_KeyVal0);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertNotNull(httpConnection_KeyVal1);
      
      String string3 = "BT%'xar";
      httpConnection_KeyVal1.value = string3;
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals("BT%'xar", httpConnection_KeyVal0.value());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("org.jsoup.helper.HttpConnection$Response$2", httpConnection_KeyVal0.key());
      assertEquals("org.jsoup.helper.HttpConnection$Response$2", httpConnection_KeyVal1.key());
      assertFalse(httpConnection_KeyVal1.hasInputStream());
      assertEquals("BT%'xar", httpConnection_KeyVal1.value());
      
      URL uRL0 = MockURL.getHttpExample();
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getRef());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNotNull(uRL0);
      
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request1.data((Connection.KeyVal) httpConnection_KeyVal0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals("BT%'xar", httpConnection_KeyVal0.value());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("org.jsoup.helper.HttpConnection$Response$2", httpConnection_KeyVal0.key());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(string1, string3);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertNotNull(httpConnection_Request2);
      
      httpConnection_KeyVal0.key = httpConnection_KeyVal1.value;
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals("BT%'xar", httpConnection_KeyVal0.value());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("BT%'xar", httpConnection_KeyVal0.key());
      assertEquals("BT%'xar", httpConnection_KeyVal1.key());
      assertFalse(httpConnection_KeyVal1.hasInputStream());
      assertEquals("BT%'xar", httpConnection_KeyVal1.value());
      
      HttpConnection.Request httpConnection_Request3 = (HttpConnection.Request)httpConnection_Request0.url(uRL0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getRef());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals(3000, httpConnection_Request3.timeout());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.parserDefined);
      assertNotNull(httpConnection_Request3);
      
      String string4 = "KXf";
      HttpConnection.KeyVal httpConnection_KeyVal2 = HttpConnection.KeyVal.create(httpConnection_Request2.postDataCharset, string4);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals("BT%'xar", httpConnection_KeyVal0.value());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("BT%'xar", httpConnection_KeyVal0.key());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals("KXf", httpConnection_KeyVal2.value());
      assertFalse(httpConnection_KeyVal2.hasInputStream());
      assertEquals("UTF-8", httpConnection_KeyVal2.key());
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertNotSame(string1, string3);
      assertNotSame(string1, string4);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertNotSame(httpConnection_KeyVal0, httpConnection_KeyVal2);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertNotSame(string4, string0);
      assertNotSame(string4, string2);
      assertNotSame(string4, string3);
      assertNotSame(string4, string1);
      assertNotSame(httpConnection_KeyVal2, httpConnection_KeyVal0);
      assertNotSame(httpConnection_KeyVal2, httpConnection_KeyVal1);
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string4));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string1));
      assertFalse(httpConnection_KeyVal2.equals((Object)httpConnection_KeyVal0));
      assertFalse(httpConnection_KeyVal2.equals((Object)httpConnection_KeyVal1));
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertNotNull(httpConnection_KeyVal2);
      
      httpConnection_Request3.ignoreHttpErrors = httpConnection_Request0.validateTSLCertificates;
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getRef());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals(3000, httpConnection_Request3.timeout());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertTrue(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      
      Random.setNextRandom(httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.ignoreHttpErrors);
      
      HttpConnection.Response.serialiseRequestUrl(httpConnection_Request3);
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getRef());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals(3000, httpConnection_Request3.timeout());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertTrue(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.parserDefined);
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertNotNull(httpConnection_Response0);
      
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request0, httpConnection_Response0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Could not find: www.someFakeButWellFormedURL.org
         //
         verifyException("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection", e);
      }
  }

  @Test(timeout = 11000)
  public void test04()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertNotNull(httpConnection_Request0);
      
      boolean boolean0 = false;
      URL uRL0 = MockURL.getFileExample();
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertNotNull(uRL0);
      
      httpConnection_Request0.url = uRL0;
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertEquals("some", httpConnection_Request0.url.getHost());
      assertNull(httpConnection_Request0.url.getQuery());
      assertNull(httpConnection_Request0.url.getUserInfo());
      assertEquals((-1), httpConnection_Request0.url.getPort());
      assertEquals((-1), httpConnection_Request0.url.getDefaultPort());
      assertEquals("file", httpConnection_Request0.url.getProtocol());
      assertEquals("some", httpConnection_Request0.url.getAuthority());
      assertNull(httpConnection_Request0.url.getRef());
      
      HttpConnection.Request httpConnection_Request1 = (HttpConnection.Request)httpConnection_Request0.ignoreHttpErrors(boolean0);
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.parserDefined);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertNotNull(httpConnection_Request1);
      
      httpConnection_Request0.validateTLSCertificates(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.parserDefined);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request1);
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // Only http & https protocols supported
         //
         verifyException("org.jsoup.helper.HttpConnection$Response", e);
      }
  }

  @Test(timeout = 11000)
  public void test05()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertNotNull(httpConnection_Request0);
      
      URL uRL0 = MockURL.getFileExample();
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertNotNull(uRL0);
      
      httpConnection_Request0.url = uRL0;
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("some", httpConnection_Request0.url.getHost());
      assertEquals("some", httpConnection_Request0.url.getAuthority());
      assertNull(httpConnection_Request0.url.getUserInfo());
      assertNull(httpConnection_Request0.url.getQuery());
      assertEquals((-1), httpConnection_Request0.url.getPort());
      assertNull(httpConnection_Request0.url.getRef());
      assertEquals((-1), httpConnection_Request0.url.getDefaultPort());
      assertEquals("file", httpConnection_Request0.url.getProtocol());
      
      HttpConnection.Request httpConnection_Request1 = (HttpConnection.Request)httpConnection_Request0.ignoreHttpErrors(httpConnection_Request0.followRedirects);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertTrue(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request1.parserDefined);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertNotNull(httpConnection_Request1);
      
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request1);
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // Only http & https protocols supported
         //
         verifyException("org.jsoup.helper.HttpConnection$Response", e);
      }
  }

  @Test(timeout = 11000)
  public void test06()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertNotNull(httpConnection_Request0);
      
      boolean boolean0 = false;
      boolean boolean1 = true;
      HttpConnection.Request httpConnection_Request1 = (HttpConnection.Request)httpConnection_Request0.ignoreContentType(boolean1);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.ignoreContentType());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertFalse(boolean1 == boolean0);
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.parserDefined);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertNotNull(httpConnection_Request1);
      
      String string0 = HttpConnection.Response.getRequestCookieString(httpConnection_Request1);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.ignoreContentType());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertEquals("", string0);
      assertFalse(boolean1 == boolean0);
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.parserDefined);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertNotNull(string0);
      
      HostnameVerifier hostnameVerifier0 = HttpConnection.Response.getInsecureVerifier();
      assertNotNull(hostnameVerifier0);
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertNotNull(httpConnection_Response0);
      
      HttpConnection.Response httpConnection_Response1 = new HttpConnection.Response(httpConnection_Response0);
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.charset());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertEquals(1, httpConnection_Response1.numRedirects);
      assertNotNull(httpConnection_Response1);
      
      int int0 = 1;
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>(int0);
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, hashMap0.size());
      assertNotNull(hashMap0);
      
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      assertEquals(0, linkedList0.size());
      assertNotNull(linkedList0);
      
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      assertTrue(linkedHashSet0.isEmpty());
      assertEquals(0, linkedHashSet0.size());
      assertFalse(linkedHashSet0.contains(string0));
      assertNotNull(linkedHashSet0);
      
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) linkedHashSet0, locale_FilteringMode0);
      assertEquals(0, linkedList0.size());
      assertTrue(linkedHashSet0.isEmpty());
      assertEquals(0, linkedHashSet0.size());
      assertEquals(0, list0.size());
      assertTrue(list0.isEmpty());
      assertFalse(linkedHashSet0.contains(string0));
      assertFalse(list0.contains(string0));
      assertNotNull(list0);
      
      List<String> list1 = hashMap0.put(httpConnection_Response0.LOCATION, list0);
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(1, hashMap0.size());
      assertFalse(hashMap0.isEmpty());
      assertEquals(0, linkedList0.size());
      assertTrue(linkedHashSet0.isEmpty());
      assertEquals(0, linkedHashSet0.size());
      assertEquals(0, list0.size());
      assertTrue(list0.isEmpty());
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertFalse(linkedHashSet0.contains(string0));
      assertFalse(list0.contains(string0));
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertNull(list1);
      
      httpConnection_Response1.processResponseHeaders(hashMap0);
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.charset());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertEquals(1, hashMap0.size());
      assertFalse(hashMap0.isEmpty());
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertEquals(1, httpConnection_Response1.numRedirects);
      
      String string1 = httpConnection_Response0.contentType();
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertNull(string1);
      
      int int1 = httpConnection_Response1.statusCode();
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.charset());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertEquals(0, int1);
      assertFalse(int1 == int0);
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertEquals(1, httpConnection_Response1.numRedirects);
      
      // Undeclared exception!
      try { 
        HttpConnection.Response.createConnection(httpConnection_Response0.req);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.helper.HttpConnection$Response", e);
      }
  }

  @Test(timeout = 11000)
  public void test07()  throws Throwable  {
      String string0 = "\"R-Q";
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertNotNull(httpConnection_Response0);
      
      boolean boolean0 = false;
      httpConnection_Response0.executed = boolean0;
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>(httpConnection_Response0.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, hashMap0.size());
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertNotNull(hashMap0);
      
      LinkedList<String> linkedList0 = new LinkedList<String>();
      assertEquals(0, linkedList0.size());
      assertFalse(linkedList0.contains(string0));
      assertNotNull(linkedList0);
      
      List<String> list0 = hashMap0.put(httpConnection_Response0.contentType, linkedList0);
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertFalse(hashMap0.isEmpty());
      assertEquals(1, hashMap0.size());
      assertEquals(0, linkedList0.size());
      assertFalse(linkedList0.contains(string0));
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertNull(list0);
      
      String string1 = "d{nTu`@>T[";
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      assertEquals(0, linkedList1.size());
      assertNotNull(linkedList1);
      
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>(linkedList1);
      assertEquals(0, linkedList1.size());
      assertEquals(0, linkedList2.size());
      assertTrue(linkedList2.equals((Object)linkedList1));
      assertNotNull(linkedList2);
      
      LinkedList<String> linkedList3 = new LinkedList<String>();
      assertEquals(0, linkedList3.size());
      assertFalse(linkedList3.contains(string0));
      assertTrue(linkedList3.equals((Object)linkedList0));
      assertNotNull(linkedList3);
      
      LinkedList<String> linkedList4 = new LinkedList<String>();
      assertEquals(0, linkedList4.size());
      assertFalse(linkedList4.contains(string0));
      assertTrue(linkedList4.equals((Object)linkedList3));
      assertTrue(linkedList4.equals((Object)linkedList0));
      assertNotNull(linkedList4);
      
      boolean boolean1 = linkedList4.offerLast(httpConnection_Response0.LOCATION);
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(1, linkedList4.size());
      assertNotSame(linkedList4, linkedList3);
      assertNotSame(linkedList4, linkedList0);
      assertFalse(linkedList4.contains(string0));
      assertTrue(boolean1);
      assertFalse(linkedList4.equals((Object)linkedList3));
      assertFalse(linkedList4.equals((Object)linkedList0));
      assertFalse(boolean1 == boolean0);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      
      boolean boolean2 = linkedList4.add(string0);
      assertEquals(2, linkedList4.size());
      assertNotSame(string0, string1);
      assertNotSame(linkedList4, linkedList3);
      assertNotSame(linkedList4, linkedList0);
      assertTrue(linkedList4.contains(string0));
      assertFalse(linkedList4.contains(string1));
      assertTrue(boolean2);
      assertFalse(string0.equals((Object)string1));
      assertFalse(linkedList4.equals((Object)linkedList3));
      assertFalse(linkedList4.equals((Object)linkedList0));
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      
      List<String> list1 = hashMap0.put(string1, linkedList4);
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertFalse(hashMap0.isEmpty());
      assertEquals(2, hashMap0.size());
      assertEquals(2, linkedList4.size());
      assertNotSame(string1, string0);
      assertNotSame(linkedList4, linkedList3);
      assertNotSame(linkedList4, linkedList0);
      assertTrue(linkedList4.contains(string0));
      assertFalse(linkedList4.contains(string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(linkedList4.equals((Object)linkedList3));
      assertFalse(linkedList4.equals((Object)linkedList0));
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertNull(list1);
      
      httpConnection_Response0.processResponseHeaders(hashMap0);
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertFalse(hashMap0.isEmpty());
      assertEquals(2, hashMap0.size());
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      
      // Undeclared exception!
      try { 
        HttpConnection.Response.getRequestCookieString(httpConnection_Response0.req);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.helper.HttpConnection$Response", e);
      }
  }

  @Test(timeout = 11000)
  public void test08()  throws Throwable  {
      String string0 = "\"R-Q";
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertNotNull(httpConnection_Response0);
      
      boolean boolean0 = false;
      httpConnection_Response0.executed = boolean0;
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>(httpConnection_Response0.MAX_REDIRECTS);
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertNotNull(hashMap0);
      
      String string1 = "d{nTu`@>T[";
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      assertEquals(0, linkedList0.size());
      assertNotNull(linkedList0);
      
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>(linkedList0);
      assertEquals(0, linkedList0.size());
      assertEquals(0, linkedList1.size());
      assertTrue(linkedList1.equals((Object)linkedList0));
      assertNotNull(linkedList1);
      
      LinkedList<String> linkedList2 = new LinkedList<String>();
      assertEquals(0, linkedList2.size());
      assertFalse(linkedList2.contains(string1));
      assertNotNull(linkedList2);
      
      LinkedList<String> linkedList3 = new LinkedList<String>();
      assertEquals(0, linkedList3.size());
      assertFalse(linkedList3.contains(string1));
      assertTrue(linkedList3.equals((Object)linkedList2));
      assertNotNull(linkedList3);
      
      boolean boolean1 = linkedList3.add(string0);
      assertEquals(1, linkedList3.size());
      assertNotSame(string0, string1);
      assertNotSame(linkedList3, linkedList2);
      assertFalse(linkedList3.contains(string1));
      assertTrue(linkedList3.contains(string0));
      assertTrue(boolean1);
      assertFalse(string0.equals((Object)string1));
      assertFalse(linkedList3.equals((Object)linkedList2));
      assertFalse(boolean1 == boolean0);
      
      List<String> list0 = hashMap0.put(string1, linkedList3);
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(1, hashMap0.size());
      assertFalse(hashMap0.isEmpty());
      assertEquals(1, linkedList3.size());
      assertNotSame(string1, string0);
      assertNotSame(linkedList3, linkedList2);
      assertFalse(linkedList3.contains(string1));
      assertTrue(linkedList3.contains(string0));
      assertFalse(string1.equals((Object)string0));
      assertFalse(linkedList3.equals((Object)linkedList2));
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertNull(list0);
      
      httpConnection_Response0.processResponseHeaders(hashMap0);
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(1, hashMap0.size());
      assertFalse(hashMap0.isEmpty());
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      
      // Undeclared exception!
      try { 
        HttpConnection.Response.getRequestCookieString(httpConnection_Response0.req);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.helper.HttpConnection$Response", e);
      }
  }

  @Test(timeout = 11000)
  public void test09()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      boolean boolean0 = true;
      boolean boolean1 = true;
      boolean boolean2 = FileSystemHandling.setPermissions(evoSuiteFile0, boolean0, boolean1, boolean0);
      assertFalse(boolean2);
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertNotNull(httpConnection_Request0);
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.parser(httpConnection_Request0.parser);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertNotNull(httpConnection_Request1);
      
      boolean boolean3 = true;
      HttpConnection.Request httpConnection_Request2 = (HttpConnection.Request)httpConnection_Request1.followRedirects(boolean3);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.followRedirects());
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertFalse(boolean3 == boolean2);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertNotNull(httpConnection_Request2);
      
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      assertEquals("", byteArrayOutputStream0.toString());
      assertEquals(0, byteArrayOutputStream0.size());
      assertNotNull(byteArrayOutputStream0);
      
      HttpConnection.Response.writePost(httpConnection_Request2, byteArrayOutputStream0, httpConnection_Request0.postDataCharset);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(9, byteArrayOutputStream0.size());
      assertEquals("--UTF-8--", byteArrayOutputStream0.toString());
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertFalse(boolean3 == boolean2);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      
      HttpConnection.Response.initUnSecureTSL();
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertNotNull(httpConnection_Response0);
      
      String string0 = httpConnection_Response0.charset();
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertNull(string0);
      
      HttpConnection.Request httpConnection_Request3 = (HttpConnection.Request)httpConnection_Request2.followRedirects(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request1.followRedirects());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertFalse(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request3.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request3.timeout());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertFalse(boolean3 == boolean2);
      assertFalse(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertFalse(httpConnection_Request2.followRedirects);
      assertEquals(3000, httpConnection_Request3.timeoutMilliseconds);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.parserDefined);
      assertFalse(httpConnection_Request3.followRedirects);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertNotNull(httpConnection_Request3);
      
      HttpConnection.Response.writePost(httpConnection_Request3, byteArrayOutputStream0, httpConnection_Response0.statusMessage);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request1.followRedirects());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertFalse(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertEquals(9, byteArrayOutputStream0.size());
      assertEquals("--UTF-8--", byteArrayOutputStream0.toString());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertFalse(httpConnection_Request3.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request3.timeout());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertFalse(boolean3 == boolean2);
      assertFalse(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertFalse(httpConnection_Request2.followRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(3000, httpConnection_Request3.timeoutMilliseconds);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.parserDefined);
      assertFalse(httpConnection_Request3.followRedirects);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      
      HttpConnection.Response httpConnection_Response1 = new HttpConnection.Response();
      assertNull(httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.charset());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response1.executed);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNotNull(httpConnection_Response1);
      
      Connection.Request connection_Request0 = httpConnection_Response1.req;
      assertNull(connection_Request0);
      
      // Undeclared exception!
      try { 
        HttpConnection.Response.getRequestCookieString(connection_Request0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.helper.HttpConnection$Response", e);
      }
  }

  @Test(timeout = 11000)
  public void test10()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertNotNull(httpConnection_Request0);
      
      HttpConnection.Response.initUnSecureTSL();
  }

  @Test(timeout = 11000)
  public void test11()  throws Throwable  {
      HostnameVerifier hostnameVerifier0 = HttpConnection.Response.getInsecureVerifier();
      assertNotNull(hostnameVerifier0);
      
      HttpConnection.Response.initUnSecureTSL();
      HttpConnection.Response.initUnSecureTSL();
      int int0 = 200;
  }

  @Test(timeout = 11000)
  public void test12()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertNotNull(httpConnection_Request0);
      
      HttpConnection.KeyVal httpConnection_KeyVal0 = HttpConnection.KeyVal.create(httpConnection_Request0.postDataCharset, httpConnection_Request0.postDataCharset);
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("UTF-8", httpConnection_KeyVal0.value());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertNotNull(httpConnection_KeyVal0);
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.data((Connection.KeyVal) httpConnection_KeyVal0);
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("UTF-8", httpConnection_KeyVal0.value());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertNotNull(httpConnection_Request1);
      
      String string0 = HttpConnection.Response.setOutputContentType(httpConnection_Request1);
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("UTF-8", httpConnection_KeyVal0.value());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertNull(string0);
      
      String string1 = "w\"[[EZ%ON/EHiIY;lR";
      String string2 = "Zg";
      File file0 = MockFile.createTempFile(string1, string2);
      assertTrue(file0.isAbsolute());
      assertTrue(file0.canRead());
      assertTrue(file0.canWrite());
      assertTrue(file0.isFile());
      assertEquals(0L, file0.getFreeSpace());
      assertEquals(0L, file0.length());
      assertTrue(file0.exists());
      assertEquals(0L, file0.getTotalSpace());
      assertEquals(1392409281320L, file0.lastModified());
      assertTrue(file0.canExecute());
      assertFalse(file0.isDirectory());
      assertEquals("/tmp/w\"[[EZ%ON/EHiIY;lR0Zg", file0.toString());
      assertEquals("/tmp/w\"[[EZ%ON", file0.getParent());
      assertFalse(file0.isHidden());
      assertEquals(0L, file0.getUsableSpace());
      assertEquals("EHiIY;lR0Zg", file0.getName());
      assertNotSame(string1, string2);
      assertNotSame(string2, string1);
      assertFalse(string1.equals((Object)string2));
      assertFalse(string2.equals((Object)string1));
      assertNotNull(file0);
      
      MockPrintStream mockPrintStream0 = new MockPrintStream(file0);
      assertFalse(string1.equals((Object)string2));
      assertFalse(string2.equals((Object)string1));
      assertNotNull(mockPrintStream0);
      
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) mockPrintStream0;
      Object object0 = new Object();
      assertNotNull(object0);
      
      objectArray0[1] = object0;
      objectArray0[2] = (Object) string0;
      objectArray0[3] = (Object) string2;
      objectArray0[5] = (Object) file0;
      objectArray0[7] = (Object) file0;
      objectArray0[8] = (Object) httpConnection_Request0;
      PrintStream printStream0 = mockPrintStream0.format(string2, objectArray0);
      assertTrue(file0.isAbsolute());
      assertTrue(file0.canRead());
      assertTrue(file0.canWrite());
      assertTrue(file0.isFile());
      assertEquals(0L, file0.getFreeSpace());
      assertTrue(file0.exists());
      assertEquals(0L, file0.getTotalSpace());
      assertEquals(1392409281320L, file0.lastModified());
      assertEquals(2L, file0.length());
      assertTrue(file0.canExecute());
      assertFalse(file0.isDirectory());
      assertEquals("/tmp/w\"[[EZ%ON/EHiIY;lR0Zg", file0.toString());
      assertEquals("/tmp/w\"[[EZ%ON", file0.getParent());
      assertFalse(file0.isHidden());
      assertEquals(0L, file0.getUsableSpace());
      assertEquals("EHiIY;lR0Zg", file0.getName());
      assertSame(printStream0, mockPrintStream0);
      assertNotSame(string1, string2);
      assertNotSame(string2, string1);
      assertSame(mockPrintStream0, printStream0);
      assertFalse(string1.equals((Object)string2));
      assertFalse(string2.equals((Object)string1));
      assertEquals(9, objectArray0.length);
      assertNotNull(printStream0);
      
      boolean boolean0 = true;
      MockPrintStream mockPrintStream1 = new MockPrintStream(printStream0, boolean0, httpConnection_KeyVal0.value);
      assertFalse(mockPrintStream1.equals((Object)printStream0));
      assertFalse(mockPrintStream1.equals((Object)mockPrintStream0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string2.equals((Object)string1));
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(9, objectArray0.length);
      assertNotNull(mockPrintStream1);
      
      Locale locale0 = Locale.ROOT;
      assertEquals("", locale0.getLanguage());
      assertEquals("", locale0.getISO3Language());
      assertEquals("", locale0.getCountry());
      assertEquals("", locale0.toString());
      assertEquals("", locale0.getISO3Country());
      assertEquals("", locale0.getVariant());
      assertNotNull(locale0);
      
      String string3 = "?";
      PrintStream printStream1 = mockPrintStream1.format(locale0, string3, objectArray0);
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("UTF-8", httpConnection_KeyVal0.value());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertEquals("", locale0.getLanguage());
      assertEquals("", locale0.getISO3Language());
      assertEquals("", locale0.getCountry());
      assertEquals("", locale0.toString());
      assertEquals("", locale0.getISO3Country());
      assertEquals("", locale0.getVariant());
      assertTrue(file0.isAbsolute());
      assertTrue(file0.canRead());
      assertTrue(file0.canWrite());
      assertTrue(file0.isFile());
      assertEquals(0L, file0.getFreeSpace());
      assertTrue(file0.exists());
      assertEquals(0L, file0.getTotalSpace());
      assertEquals(1392409281320L, file0.lastModified());
      assertEquals(3L, file0.length());
      assertTrue(file0.canExecute());
      assertFalse(file0.isDirectory());
      assertEquals("/tmp/w\"[[EZ%ON/EHiIY;lR0Zg", file0.toString());
      assertEquals("/tmp/w\"[[EZ%ON", file0.getParent());
      assertFalse(file0.isHidden());
      assertEquals(0L, file0.getUsableSpace());
      assertEquals("EHiIY;lR0Zg", file0.getName());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(printStream0, printStream1);
      assertSame(printStream0, mockPrintStream0);
      assertNotSame(printStream0, mockPrintStream1);
      assertNotSame(mockPrintStream1, printStream0);
      assertSame(mockPrintStream1, printStream1);
      assertNotSame(mockPrintStream1, mockPrintStream0);
      assertNotSame(string1, string3);
      assertNotSame(string1, string2);
      assertNotSame(string3, string1);
      assertNotSame(string3, string2);
      assertNotSame(string2, string1);
      assertNotSame(string2, string3);
      assertSame(printStream1, mockPrintStream1);
      assertNotSame(printStream1, printStream0);
      assertNotSame(printStream1, mockPrintStream0);
      assertSame(mockPrintStream0, printStream0);
      assertNotSame(mockPrintStream0, printStream1);
      assertNotSame(mockPrintStream0, mockPrintStream1);
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string3));
      assertFalse(mockPrintStream0.equals((Object)mockPrintStream1));
      assertFalse(printStream0.equals((Object)mockPrintStream1));
      assertFalse(mockPrintStream1.equals((Object)printStream0));
      assertFalse(mockPrintStream1.equals((Object)mockPrintStream0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertFalse(printStream1.equals((Object)printStream0));
      assertFalse(printStream1.equals((Object)mockPrintStream0));
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(9, objectArray0.length);
      assertNotNull(printStream1);
      
      HttpConnection.Response.writePost(httpConnection_Request1, printStream1, string2);
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("UTF-8", httpConnection_KeyVal0.value());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals("", locale0.getLanguage());
      assertEquals("", locale0.getISO3Language());
      assertEquals("", locale0.getCountry());
      assertEquals("", locale0.toString());
      assertEquals("", locale0.getISO3Country());
      assertEquals("", locale0.getVariant());
      assertTrue(file0.isAbsolute());
      assertTrue(file0.canRead());
      assertTrue(file0.canWrite());
      assertTrue(file0.isFile());
      assertEquals(0L, file0.getFreeSpace());
      assertTrue(file0.exists());
      assertEquals(0L, file0.getTotalSpace());
      assertEquals(1392409281320L, file0.lastModified());
      assertTrue(file0.canExecute());
      assertEquals(70L, file0.length());
      assertFalse(file0.isDirectory());
      assertEquals("/tmp/w\"[[EZ%ON/EHiIY;lR0Zg", file0.toString());
      assertEquals("/tmp/w\"[[EZ%ON", file0.getParent());
      assertFalse(file0.isHidden());
      assertEquals(0L, file0.getUsableSpace());
      assertEquals("EHiIY;lR0Zg", file0.getName());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNotSame(string1, string3);
      assertNotSame(string1, string2);
      assertNotSame(string2, string1);
      assertNotSame(string2, string3);
      assertSame(mockPrintStream0, printStream0);
      assertNotSame(mockPrintStream0, printStream1);
      assertNotSame(mockPrintStream0, mockPrintStream1);
      assertNotSame(printStream0, printStream1);
      assertSame(printStream0, mockPrintStream0);
      assertNotSame(printStream0, mockPrintStream1);
      assertNotSame(mockPrintStream1, printStream0);
      assertSame(mockPrintStream1, printStream1);
      assertNotSame(mockPrintStream1, mockPrintStream0);
      assertNotSame(string3, string1);
      assertNotSame(string3, string2);
      assertSame(printStream1, mockPrintStream1);
      assertNotSame(printStream1, printStream0);
      assertNotSame(printStream1, mockPrintStream0);
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string3));
      assertFalse(mockPrintStream0.equals((Object)printStream1));
      assertFalse(mockPrintStream0.equals((Object)mockPrintStream1));
      assertFalse(printStream0.equals((Object)printStream1));
      assertFalse(printStream0.equals((Object)mockPrintStream1));
      assertFalse(mockPrintStream1.equals((Object)printStream0));
      assertFalse(mockPrintStream1.equals((Object)mockPrintStream0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertFalse(printStream1.equals((Object)printStream0));
      assertFalse(printStream1.equals((Object)mockPrintStream0));
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(9, objectArray0.length);
  }

  @Test(timeout = 11000)
  public void test13()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertNotNull(httpConnection_Request0);
      
      HttpConnection.KeyVal httpConnection_KeyVal0 = new HttpConnection.KeyVal();
      assertNull(httpConnection_KeyVal0.value());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertNull(httpConnection_KeyVal0.key());
      assertNotNull(httpConnection_KeyVal0);
      
      String string0 = "nowrap";
      httpConnection_KeyVal0.key = string0;
      assertNull(httpConnection_KeyVal0.value());
      assertEquals("nowrap", httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      
      PipedInputStream pipedInputStream0 = new PipedInputStream(httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(0, pipedInputStream0.available());
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertNotNull(pipedInputStream0);
      
      httpConnection_KeyVal0.stream = (InputStream) pipedInputStream0;
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertNull(httpConnection_KeyVal0.value());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("nowrap", httpConnection_KeyVal0.key());
      assertEquals(0, pipedInputStream0.available());
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.data((Connection.KeyVal) httpConnection_KeyVal0);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertNull(httpConnection_KeyVal0.value());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("nowrap", httpConnection_KeyVal0.key());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request1.parserDefined);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertNotNull(httpConnection_Request1);
      
      String string1 = HttpConnection.Response.setOutputContentType(httpConnection_Request1);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertNull(httpConnection_KeyVal0.value());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("nowrap", httpConnection_KeyVal0.key());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNotSame(string1, string0);
      assertEquals("--------------------------------", string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request1.parserDefined);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertNotNull(string1);
      
      String string2 = "param";
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(string2);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertNotNull(mockFileOutputStream0);
      
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertNotNull(dataOutputStream0);
      
      // Undeclared exception!
      try { 
        HttpConnection.Response.writePost(httpConnection_Request0, dataOutputStream0, httpConnection_KeyVal0.value);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.net.URLEncoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test14()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      boolean boolean1 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertFalse(boolean1);
      assertFalse(boolean1 == boolean0);
      
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertNotNull(httpConnection_Request0);
      
      String string0 = "a*-i,,6Iiozqs{Q";
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      assertEquals(0, pipedInputStream0.available());
      assertNotNull(pipedInputStream0);
      
      HttpConnection.KeyVal httpConnection_KeyVal0 = HttpConnection.KeyVal.create(httpConnection_Request0.postDataCharset, string0, (InputStream) pipedInputStream0);
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(0, pipedInputStream0.available());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertEquals("a*-i,,6Iiozqs{Q", httpConnection_KeyVal0.value());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertNotNull(httpConnection_KeyVal0);
      
      String string1 = "{ntu`@>p";
      HttpConnection.KeyVal httpConnection_KeyVal1 = httpConnection_KeyVal0.value(string1);
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(0, pipedInputStream0.available());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertEquals("{ntu`@>p", httpConnection_KeyVal0.value());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("UTF-8", httpConnection_KeyVal1.key());
      assertEquals("{ntu`@>p", httpConnection_KeyVal1.value());
      assertTrue(httpConnection_KeyVal1.hasInputStream());
      assertNotSame(string0, string1);
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertNotSame(string1, string0);
      assertSame(httpConnection_KeyVal1, httpConnection_KeyVal0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertNotNull(httpConnection_KeyVal1);
      
      HttpConnection.KeyVal httpConnection_KeyVal2 = httpConnection_KeyVal1.inputStream(httpConnection_KeyVal0.stream);
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(0, pipedInputStream0.available());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertEquals("{ntu`@>p", httpConnection_KeyVal0.value());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("UTF-8", httpConnection_KeyVal1.key());
      assertEquals("{ntu`@>p", httpConnection_KeyVal1.value());
      assertTrue(httpConnection_KeyVal1.hasInputStream());
      assertEquals("{ntu`@>p", httpConnection_KeyVal2.value());
      assertTrue(httpConnection_KeyVal2.hasInputStream());
      assertEquals("UTF-8", httpConnection_KeyVal2.key());
      assertNotSame(string0, string1);
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal2);
      assertNotSame(string1, string0);
      assertSame(httpConnection_KeyVal1, httpConnection_KeyVal2);
      assertSame(httpConnection_KeyVal1, httpConnection_KeyVal0);
      assertSame(httpConnection_KeyVal2, httpConnection_KeyVal1);
      assertSame(httpConnection_KeyVal2, httpConnection_KeyVal0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertNotNull(httpConnection_KeyVal2);
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.data((Connection.KeyVal) httpConnection_KeyVal2);
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(0, pipedInputStream0.available());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertEquals("{ntu`@>p", httpConnection_KeyVal0.value());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("UTF-8", httpConnection_KeyVal1.key());
      assertEquals("{ntu`@>p", httpConnection_KeyVal1.value());
      assertTrue(httpConnection_KeyVal1.hasInputStream());
      assertEquals("{ntu`@>p", httpConnection_KeyVal2.value());
      assertTrue(httpConnection_KeyVal2.hasInputStream());
      assertEquals("UTF-8", httpConnection_KeyVal2.key());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(string0, string1);
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal2);
      assertNotSame(string1, string0);
      assertSame(httpConnection_KeyVal1, httpConnection_KeyVal2);
      assertSame(httpConnection_KeyVal1, httpConnection_KeyVal0);
      assertSame(httpConnection_KeyVal2, httpConnection_KeyVal1);
      assertSame(httpConnection_KeyVal2, httpConnection_KeyVal0);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.parserDefined);
      assertTrue(httpConnection_Request1.followRedirects);
      assertNotNull(httpConnection_Request1);
      
      boolean boolean2 = true;
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(httpConnection_KeyVal0.value, boolean2);
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertNotNull(mockFileOutputStream0);
      
      String string2 = "AfterFrameset";
      try { 
        HttpConnection.Response.writePost(httpConnection_Request1, mockFileOutputStream0, string2);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Simulated IOException
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  @Test(timeout = 11000)
  public void test15()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertNotNull(httpConnection_Request0);
      
      int int0 = 58;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      String string0 = "--";
      String string1 = "org.jsoup.helper.HttpConnection$Response$2";
      HttpConnection.Request httpConnection_Request1 = (HttpConnection.Request)httpConnection_Request0.cookie(string0, string1);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.parserDefined);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertNotNull(httpConnection_Request1);
      
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://www.someFakeButWellFormedURL.org/fooExample?http=");
      boolean boolean0 = NetworkHandling.createRemoteTextFile(evoSuiteURL0, string0);
      assertNotSame(string0, string1);
      assertTrue(boolean0);
      assertFalse(string0.equals((Object)string1));
      
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request1.parser(httpConnection_Request0.parser);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertNotNull(httpConnection_Request2);
      
      HttpConnection.KeyVal httpConnection_KeyVal0 = new HttpConnection.KeyVal();
      assertNull(httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertNull(httpConnection_KeyVal0.value());
      assertNotNull(httpConnection_KeyVal0);
      
      String string2 = "";
      HttpConnection.KeyVal httpConnection_KeyVal1 = httpConnection_KeyVal0.value(string2);
      assertNull(httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("", httpConnection_KeyVal0.value());
      assertEquals("", httpConnection_KeyVal1.value());
      assertNull(httpConnection_KeyVal1.key());
      assertFalse(httpConnection_KeyVal1.hasInputStream());
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertSame(httpConnection_KeyVal1, httpConnection_KeyVal0);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertNotNull(httpConnection_KeyVal1);
      
      URL uRL0 = MockURL.getHttpExample();
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getUserInfo());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertNotNull(uRL0);
      
      HttpConnection.Request httpConnection_Request3 = httpConnection_Request2.data((Connection.KeyVal) httpConnection_KeyVal0);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertNull(httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("", httpConnection_KeyVal0.value());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertEquals(3000, httpConnection_Request3.timeout());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(3000, httpConnection_Request3.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.parserDefined);
      assertTrue(httpConnection_Request3.followRedirects);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertNotNull(httpConnection_Request3);
      
      String string3 = "http";
      httpConnection_KeyVal0.key = string3;
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("", httpConnection_KeyVal0.value());
      assertEquals("http", httpConnection_KeyVal0.key());
      
      HttpConnection.Request httpConnection_Request4 = (HttpConnection.Request)httpConnection_Request1.url(uRL0);
      assertEquals(3000, httpConnection_Request4.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getUserInfo());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(string0, string3);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string1, string3);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertEquals(3000, httpConnection_Request4.timeoutMilliseconds);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertTrue(httpConnection_Request4.validateTSLCertificates);
      assertTrue(httpConnection_Request4.followRedirects);
      assertTrue(httpConnection_Request4.parserDefined);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertNotNull(httpConnection_Request4);
      
      String string4 = "KXf";
      HttpConnection.Response httpConnection_Response0 = HttpConnection.Response.execute((Connection.Request) httpConnection_Request4);
      assertEquals(3000, httpConnection_Request4.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(200, httpConnection_Response0.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getUserInfo());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(string0, string4);
      assertNotSame(string0, string3);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string1, string3);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertNotSame(string1, string4);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string4));
      assertEquals(3000, httpConnection_Request4.timeoutMilliseconds);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertTrue(httpConnection_Request4.validateTSLCertificates);
      assertTrue(httpConnection_Request4.followRedirects);
      assertTrue(httpConnection_Request4.parserDefined);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertTrue(httpConnection_Response0.executed);
      assertEquals(200, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertNotNull(httpConnection_Response0);
      
      String string5 = httpConnection_Response0.body();
      assertEquals(3000, httpConnection_Request4.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(200, httpConnection_Response0.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getUserInfo());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(string5, string4);
      assertNotSame(string5, string2);
      assertNotSame(string5, string0);
      assertNotSame(string5, string3);
      assertNotSame(string5, string1);
      assertNotSame(string0, string5);
      assertNotSame(string0, string4);
      assertNotSame(string0, string3);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string1, string3);
      assertNotSame(string1, string5);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertNotSame(string1, string4);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertEquals("--", string5);
      assertFalse(string5.equals((Object)string4));
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)string1));
      assertTrue(string5.equals((Object)string0));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string4));
      assertEquals(3000, httpConnection_Request4.timeoutMilliseconds);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertTrue(httpConnection_Request4.validateTSLCertificates);
      assertTrue(httpConnection_Request4.followRedirects);
      assertTrue(httpConnection_Request4.parserDefined);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertTrue(httpConnection_Response0.executed);
      assertEquals(200, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertNotNull(string5);
      
      String string6 = httpConnection_Response0.charset();
      assertEquals(3000, httpConnection_Request4.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(200, httpConnection_Response0.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getUserInfo());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(string0, string5);
      assertNotSame(string0, string4);
      assertNotSame(string0, string3);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string1, string3);
      assertNotSame(string1, string5);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertNotSame(string1, string4);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string3));
      assertTrue(string0.equals((Object)string5));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string5));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string4));
      assertEquals(3000, httpConnection_Request4.timeoutMilliseconds);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertTrue(httpConnection_Request4.validateTSLCertificates);
      assertTrue(httpConnection_Request4.followRedirects);
      assertTrue(httpConnection_Request4.parserDefined);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertTrue(httpConnection_Response0.executed);
      assertEquals(200, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertNull(string6);
      
      HttpURLConnection httpURLConnection0 = HttpConnection.Response.createConnection(httpConnection_Response0.req);
      assertEquals(3000, httpConnection_Request4.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(200, httpConnection_Response0.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertFalse(httpURLConnection0.getAllowUserInteraction());
      assertTrue(httpURLConnection0.getDoInput());
      assertTrue(httpURLConnection0.getFollowRedirects());
      assertEquals((-1), httpURLConnection0.getContentLength());
      assertTrue(httpURLConnection0.getUseCaches());
      assertFalse(httpURLConnection0.getInstanceFollowRedirects());
      assertEquals(3000, httpURLConnection0.getReadTimeout());
      assertFalse(httpURLConnection0.getDefaultAllowUserInteraction());
      assertEquals("GET", httpURLConnection0.getRequestMethod());
      assertFalse(httpURLConnection0.getDoOutput());
      assertEquals(0L, httpURLConnection0.getIfModifiedSince());
      assertNull(httpURLConnection0.getContentEncoding());
      assertEquals(3000, httpURLConnection0.getConnectTimeout());
      assertTrue(httpURLConnection0.getDefaultUseCaches());
      assertEquals("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection:http://www.someFakeButWellFormedURL.org/fooExample?http=", httpURLConnection0.toString());
      assertNull(httpURLConnection0.getContentType());
      assertFalse(httpURLConnection0.usingProxy());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getUserInfo());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(string0, string5);
      assertNotSame(string0, string4);
      assertNotSame(string0, string3);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string1, string3);
      assertNotSame(string1, string5);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertNotSame(string1, string4);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string3));
      assertTrue(string0.equals((Object)string5));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string5));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string4));
      assertEquals(3000, httpConnection_Request4.timeoutMilliseconds);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertTrue(httpConnection_Request4.validateTSLCertificates);
      assertTrue(httpConnection_Request4.followRedirects);
      assertTrue(httpConnection_Request4.parserDefined);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertTrue(httpConnection_Response0.executed);
      assertEquals(200, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertNotNull(httpURLConnection0);
      
      int int1 = 200;
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(int1);
      assertEquals(0, byteArrayOutputStream0.size());
      assertEquals("", byteArrayOutputStream0.toString());
      assertFalse(int1 == int0);
      assertNotNull(byteArrayOutputStream0);
      
      String string7 = "w'9|\\mc`v}";
      boolean boolean1 = httpConnection_Response0.hasHeader(string7);
      assertEquals(3000, httpConnection_Request4.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(200, httpConnection_Response0.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getUserInfo());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(string0, string7);
      assertNotSame(string0, string5);
      assertNotSame(string0, string4);
      assertNotSame(string0, string3);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string1, string3);
      assertNotSame(string1, string5);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertNotSame(string1, string4);
      assertNotSame(string1, string7);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertNotSame(string7, string4);
      assertNotSame(string7, string2);
      assertNotSame(string7, string1);
      assertNotSame(string7, string5);
      assertNotSame(string7, string0);
      assertNotSame(string7, string3);
      assertFalse(boolean1);
      assertFalse(string0.equals((Object)string7));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string3));
      assertTrue(string0.equals((Object)string5));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string5));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string4));
      assertFalse(string1.equals((Object)string7));
      assertFalse(string7.equals((Object)string4));
      assertFalse(string7.equals((Object)string2));
      assertFalse(string7.equals((Object)string1));
      assertFalse(string7.equals((Object)string5));
      assertFalse(string7.equals((Object)string0));
      assertFalse(string7.equals((Object)string3));
      assertFalse(boolean1 == boolean0);
      assertEquals(3000, httpConnection_Request4.timeoutMilliseconds);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertTrue(httpConnection_Request4.validateTSLCertificates);
      assertTrue(httpConnection_Request4.followRedirects);
      assertTrue(httpConnection_Request4.parserDefined);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertTrue(httpConnection_Response0.executed);
      assertEquals(200, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      
      String string8 = "(K!4buN|pi2 p'";
      HttpConnection.Response.writePost(httpConnection_Request4, byteArrayOutputStream0, string8);
      assertEquals(3000, httpConnection_Request4.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals("--(K!4buN|pi2 p'--", byteArrayOutputStream0.toString());
      assertEquals(18, byteArrayOutputStream0.size());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getUserInfo());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(string0, string7);
      assertNotSame(string0, string5);
      assertNotSame(string0, string4);
      assertNotSame(string0, string3);
      assertNotSame(string0, string8);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string1, string3);
      assertNotSame(string1, string5);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertNotSame(string1, string4);
      assertNotSame(string1, string7);
      assertNotSame(string1, string8);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertNotSame(string8, string4);
      assertNotSame(string8, string0);
      assertNotSame(string8, string7);
      assertNotSame(string8, string1);
      assertNotSame(string8, string3);
      assertNotSame(string8, string5);
      assertNotSame(string8, string2);
      assertFalse(string0.equals((Object)string7));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string3));
      assertTrue(string0.equals((Object)string5));
      assertFalse(string0.equals((Object)string8));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string5));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string4));
      assertFalse(string1.equals((Object)string7));
      assertFalse(string1.equals((Object)string8));
      assertFalse(int1 == int0);
      assertFalse(string8.equals((Object)string4));
      assertFalse(string8.equals((Object)string0));
      assertFalse(string8.equals((Object)string7));
      assertFalse(string8.equals((Object)string1));
      assertFalse(string8.equals((Object)string3));
      assertFalse(string8.equals((Object)string5));
      assertFalse(string8.equals((Object)string2));
      assertEquals(3000, httpConnection_Request4.timeoutMilliseconds);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertTrue(httpConnection_Request4.validateTSLCertificates);
      assertTrue(httpConnection_Request4.followRedirects);
      assertTrue(httpConnection_Request4.parserDefined);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      
      HttpConnection.Response httpConnection_Response1 = HttpConnection.Response.execute(httpConnection_Response0.req);
      assertEquals(3000, httpConnection_Request4.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(200, httpConnection_Response0.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertNull(httpConnection_Response1.charset());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.contentType());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getUserInfo());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertNotSame(string0, string7);
      assertNotSame(string0, string5);
      assertNotSame(string0, string4);
      assertNotSame(string0, string3);
      assertNotSame(string0, string8);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string1, string3);
      assertNotSame(string1, string5);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertNotSame(string1, string4);
      assertNotSame(string1, string7);
      assertNotSame(string1, string8);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertFalse(string0.equals((Object)string7));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string3));
      assertTrue(string0.equals((Object)string5));
      assertFalse(string0.equals((Object)string8));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string5));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string4));
      assertFalse(string1.equals((Object)string7));
      assertFalse(string1.equals((Object)string8));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertEquals(3000, httpConnection_Request4.timeoutMilliseconds);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertTrue(httpConnection_Request4.validateTSLCertificates);
      assertTrue(httpConnection_Request4.followRedirects);
      assertTrue(httpConnection_Request4.parserDefined);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertTrue(httpConnection_Response0.executed);
      assertEquals(200, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertTrue(httpConnection_Response1.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNotNull(httpConnection_Response1);
      
      String string9 = httpConnection_Response1.body();
      assertEquals(3000, httpConnection_Request4.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(200, httpConnection_Response0.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertNull(httpConnection_Response1.charset());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.contentType());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getUserInfo());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertNotSame(string0, string7);
      assertNotSame(string0, string9);
      assertNotSame(string0, string5);
      assertNotSame(string0, string4);
      assertNotSame(string0, string3);
      assertNotSame(string0, string8);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string1, string3);
      assertNotSame(string1, string5);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertNotSame(string1, string4);
      assertNotSame(string1, string7);
      assertNotSame(string1, string9);
      assertNotSame(string1, string8);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertNotSame(string9, string7);
      assertNotSame(string9, string1);
      assertNotSame(string9, string8);
      assertNotSame(string9, string0);
      assertNotSame(string9, string3);
      assertNotSame(string9, string4);
      assertNotSame(string9, string5);
      assertNotSame(string9, string2);
      assertEquals("--", string9);
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertFalse(string0.equals((Object)string7));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string3));
      assertTrue(string0.equals((Object)string5));
      assertFalse(string0.equals((Object)string8));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string5));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string4));
      assertFalse(string1.equals((Object)string7));
      assertFalse(string1.equals((Object)string8));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertFalse(string9.equals((Object)string7));
      assertTrue(string9.equals((Object)string0));
      assertFalse(string9.equals((Object)string1));
      assertTrue(string9.equals((Object)string5));
      assertFalse(string9.equals((Object)string8));
      assertFalse(string9.equals((Object)string3));
      assertFalse(string9.equals((Object)string4));
      assertFalse(string9.equals((Object)string2));
      assertEquals(3000, httpConnection_Request4.timeoutMilliseconds);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertTrue(httpConnection_Request4.validateTSLCertificates);
      assertTrue(httpConnection_Request4.followRedirects);
      assertTrue(httpConnection_Request4.parserDefined);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertTrue(httpConnection_Response0.executed);
      assertEquals(200, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertTrue(httpConnection_Response1.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNotNull(string9);
      
      LinkedHashMap<String, List<String>> linkedHashMap0 = HttpConnection.Response.createHeaderMap(httpURLConnection0);
      assertEquals(3000, httpConnection_Request4.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(200, httpConnection_Response0.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertFalse(httpURLConnection0.getAllowUserInteraction());
      assertTrue(httpURLConnection0.getDoInput());
      assertTrue(httpURLConnection0.getFollowRedirects());
      assertEquals((-1), httpURLConnection0.getContentLength());
      assertTrue(httpURLConnection0.getUseCaches());
      assertFalse(httpURLConnection0.getInstanceFollowRedirects());
      assertEquals(3000, httpURLConnection0.getReadTimeout());
      assertFalse(httpURLConnection0.getDefaultAllowUserInteraction());
      assertEquals("GET", httpURLConnection0.getRequestMethod());
      assertFalse(httpURLConnection0.getDoOutput());
      assertEquals(0L, httpURLConnection0.getIfModifiedSince());
      assertNull(httpURLConnection0.getContentEncoding());
      assertEquals(3000, httpURLConnection0.getConnectTimeout());
      assertTrue(httpURLConnection0.getDefaultUseCaches());
      assertEquals("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection:http://www.someFakeButWellFormedURL.org/fooExample?http=", httpURLConnection0.toString());
      assertNull(httpURLConnection0.getContentType());
      assertFalse(httpURLConnection0.usingProxy());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getUserInfo());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertTrue(linkedHashMap0.isEmpty());
      assertEquals(0, linkedHashMap0.size());
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertNotSame(string0, string7);
      assertNotSame(string0, string9);
      assertNotSame(string0, string5);
      assertNotSame(string0, string4);
      assertNotSame(string0, string3);
      assertNotSame(string0, string8);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string1, string3);
      assertNotSame(string1, string5);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertNotSame(string1, string4);
      assertNotSame(string1, string7);
      assertNotSame(string1, string9);
      assertNotSame(string1, string8);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertFalse(string0.equals((Object)string7));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string3));
      assertTrue(string0.equals((Object)string5));
      assertFalse(string0.equals((Object)string8));
      assertTrue(string0.equals((Object)string9));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string5));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string4));
      assertFalse(string1.equals((Object)string7));
      assertFalse(string1.equals((Object)string9));
      assertFalse(string1.equals((Object)string8));
      assertEquals(3000, httpConnection_Request4.timeoutMilliseconds);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertTrue(httpConnection_Request4.validateTSLCertificates);
      assertTrue(httpConnection_Request4.followRedirects);
      assertTrue(httpConnection_Request4.parserDefined);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertTrue(httpConnection_Response0.executed);
      assertEquals(200, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertNotNull(linkedHashMap0);
      
      Parser parser0 = Parser.htmlParser();
      assertFalse(parser0.isTrackErrors());
      assertNotNull(parser0);
      
      HttpConnection.Request httpConnection_Request5 = httpConnection_Request4.parser(parser0);
      assertEquals(3000, httpConnection_Request5.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request5.postDataCharset());
      assertTrue(httpConnection_Request5.validateTLSCertificates());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertTrue(httpConnection_Request5.followRedirects());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request4.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getUserInfo());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertFalse(parser0.isTrackErrors());
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(string0, string7);
      assertNotSame(string0, string9);
      assertNotSame(string0, string5);
      assertNotSame(string0, string4);
      assertNotSame(string0, string3);
      assertNotSame(string0, string8);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string1, string3);
      assertNotSame(string1, string5);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertNotSame(string1, string4);
      assertNotSame(string1, string7);
      assertNotSame(string1, string9);
      assertNotSame(string1, string8);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertFalse(string0.equals((Object)string7));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string3));
      assertTrue(string0.equals((Object)string5));
      assertFalse(string0.equals((Object)string8));
      assertTrue(string0.equals((Object)string9));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string5));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string4));
      assertFalse(string1.equals((Object)string7));
      assertFalse(string1.equals((Object)string9));
      assertFalse(string1.equals((Object)string8));
      assertEquals(3000, httpConnection_Request5.timeoutMilliseconds);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertTrue(httpConnection_Request5.parserDefined);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertTrue(httpConnection_Request5.followRedirects);
      assertTrue(httpConnection_Request5.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request4.timeoutMilliseconds);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertTrue(httpConnection_Request4.validateTSLCertificates);
      assertTrue(httpConnection_Request4.followRedirects);
      assertTrue(httpConnection_Request4.parserDefined);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertNotNull(httpConnection_Request5);
      
      Document document0 = httpConnection_Response1.parse();
      assertEquals(3000, httpConnection_Request4.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample?http=", document0.location());
      assertEquals(1, document0.childNodeSize());
      assertEquals(0, document0.siblingIndex());
      assertEquals(Document.QuirksMode.noQuirks, document0.quirksMode());
      assertFalse(document0.isBlock());
      assertEquals("#root", document0.tagName());
      assertEquals("#document", document0.nodeName());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample?http=", document0.baseUri());
      assertFalse(document0.updateMetaCharsetElement());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(200, httpConnection_Response0.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertEquals("UTF-8", httpConnection_Response1.charset());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.contentType());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getUserInfo());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertNotSame(string0, string7);
      assertNotSame(string0, string9);
      assertNotSame(string0, string5);
      assertNotSame(string0, string4);
      assertNotSame(string0, string3);
      assertNotSame(string0, string8);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string1, string3);
      assertNotSame(string1, string5);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertNotSame(string1, string4);
      assertNotSame(string1, string7);
      assertNotSame(string1, string9);
      assertNotSame(string1, string8);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertFalse(string0.equals((Object)string7));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string3));
      assertTrue(string0.equals((Object)string5));
      assertFalse(string0.equals((Object)string8));
      assertTrue(string0.equals((Object)string9));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string5));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string4));
      assertFalse(string1.equals((Object)string7));
      assertFalse(string1.equals((Object)string9));
      assertFalse(string1.equals((Object)string8));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertEquals(3000, httpConnection_Request4.timeoutMilliseconds);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertTrue(httpConnection_Request4.validateTSLCertificates);
      assertTrue(httpConnection_Request4.followRedirects);
      assertTrue(httpConnection_Request4.parserDefined);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertTrue(httpConnection_Response0.executed);
      assertEquals(200, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertTrue(httpConnection_Response1.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNotNull(document0);
      
      byte[] byteArray0 = httpConnection_Response1.bodyAsBytes();
      assertEquals(3000, httpConnection_Request4.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(200, httpConnection_Response0.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertEquals("UTF-8", httpConnection_Response1.charset());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.contentType());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getUserInfo());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertNotSame(string0, string7);
      assertNotSame(string0, string9);
      assertNotSame(string0, string5);
      assertNotSame(string0, string4);
      assertNotSame(string0, string3);
      assertNotSame(string0, string8);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string1, string3);
      assertNotSame(string1, string5);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertNotSame(string1, string4);
      assertNotSame(string1, string7);
      assertNotSame(string1, string9);
      assertNotSame(string1, string8);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertArrayEquals(new byte[] {(byte)45, (byte)45}, byteArray0);
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertFalse(string0.equals((Object)string7));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string3));
      assertTrue(string0.equals((Object)string5));
      assertFalse(string0.equals((Object)string8));
      assertTrue(string0.equals((Object)string9));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string5));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string4));
      assertFalse(string1.equals((Object)string7));
      assertFalse(string1.equals((Object)string9));
      assertFalse(string1.equals((Object)string8));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertEquals(3000, httpConnection_Request4.timeoutMilliseconds);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertTrue(httpConnection_Request4.validateTSLCertificates);
      assertTrue(httpConnection_Request4.followRedirects);
      assertTrue(httpConnection_Request4.parserDefined);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertTrue(httpConnection_Response0.executed);
      assertEquals(200, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertTrue(httpConnection_Response1.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(2, byteArray0.length);
      assertNotNull(byteArray0);
      
      String string10 = httpConnection_Response1.body();
      assertEquals(3000, httpConnection_Request4.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(200, httpConnection_Response0.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertEquals("UTF-8", httpConnection_Response1.charset());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.contentType());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getUserInfo());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertNotSame(string10, string8);
      assertNotSame(string10, string5);
      assertNotSame(string10, string3);
      assertNotSame(string10, string0);
      assertNotSame(string10, string4);
      assertNotSame(string10, string2);
      assertNotSame(string10, string1);
      assertNotSame(string10, string7);
      assertNotSame(string10, string9);
      assertNotSame(string0, string10);
      assertNotSame(string0, string7);
      assertNotSame(string0, string9);
      assertNotSame(string0, string5);
      assertNotSame(string0, string4);
      assertNotSame(string0, string3);
      assertNotSame(string0, string8);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string1, string3);
      assertNotSame(string1, string5);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertNotSame(string1, string4);
      assertNotSame(string1, string10);
      assertNotSame(string1, string7);
      assertNotSame(string1, string9);
      assertNotSame(string1, string8);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertEquals("--", string10);
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertFalse(string10.equals((Object)string8));
      assertTrue(string10.equals((Object)string9));
      assertTrue(string10.equals((Object)string5));
      assertFalse(string10.equals((Object)string3));
      assertFalse(string10.equals((Object)string4));
      assertFalse(string10.equals((Object)string2));
      assertFalse(string10.equals((Object)string1));
      assertFalse(string10.equals((Object)string7));
      assertTrue(string10.equals((Object)string0));
      assertFalse(string0.equals((Object)string7));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string3));
      assertTrue(string0.equals((Object)string5));
      assertFalse(string0.equals((Object)string8));
      assertTrue(string0.equals((Object)string9));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string5));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string4));
      assertFalse(string1.equals((Object)string7));
      assertFalse(string1.equals((Object)string9));
      assertFalse(string1.equals((Object)string8));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertEquals(3000, httpConnection_Request4.timeoutMilliseconds);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertTrue(httpConnection_Request4.validateTSLCertificates);
      assertTrue(httpConnection_Request4.followRedirects);
      assertTrue(httpConnection_Request4.parserDefined);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertTrue(httpConnection_Response0.executed);
      assertEquals(200, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertTrue(httpConnection_Response1.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNotNull(string10);
      
      String string11 = httpConnection_Response0.statusMessage();
      assertEquals(3000, httpConnection_Request4.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(200, httpConnection_Response0.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getUserInfo());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertNotSame(string0, string10);
      assertNotSame(string0, string7);
      assertNotSame(string0, string9);
      assertNotSame(string0, string5);
      assertNotSame(string0, string4);
      assertNotSame(string0, string3);
      assertNotSame(string0, string8);
      assertNotSame(string0, string2);
      assertNotSame(string0, string11);
      assertNotSame(string0, string1);
      assertNotSame(string11, string8);
      assertNotSame(string11, string5);
      assertNotSame(string11, string10);
      assertNotSame(string11, string9);
      assertNotSame(string11, string7);
      assertNotSame(string11, string1);
      assertNotSame(string11, string4);
      assertNotSame(string11, string2);
      assertNotSame(string11, string0);
      assertNotSame(string11, string3);
      assertNotSame(string1, string3);
      assertNotSame(string1, string11);
      assertNotSame(string1, string5);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertNotSame(string1, string4);
      assertNotSame(string1, string10);
      assertNotSame(string1, string7);
      assertNotSame(string1, string9);
      assertNotSame(string1, string8);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertEquals("OK", string11);
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertFalse(string0.equals((Object)string7));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string3));
      assertTrue(string0.equals((Object)string5));
      assertTrue(string0.equals((Object)string10));
      assertFalse(string0.equals((Object)string8));
      assertTrue(string0.equals((Object)string9));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string11.equals((Object)string8));
      assertFalse(string11.equals((Object)string5));
      assertFalse(string11.equals((Object)string10));
      assertFalse(string11.equals((Object)string9));
      assertFalse(string11.equals((Object)string7));
      assertFalse(string11.equals((Object)string1));
      assertFalse(string11.equals((Object)string4));
      assertFalse(string11.equals((Object)string2));
      assertFalse(string11.equals((Object)string0));
      assertFalse(string11.equals((Object)string3));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string5));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string4));
      assertFalse(string1.equals((Object)string10));
      assertFalse(string1.equals((Object)string7));
      assertFalse(string1.equals((Object)string9));
      assertFalse(string1.equals((Object)string8));
      assertEquals(3000, httpConnection_Request4.timeoutMilliseconds);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertTrue(httpConnection_Request4.validateTSLCertificates);
      assertTrue(httpConnection_Request4.followRedirects);
      assertTrue(httpConnection_Request4.parserDefined);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertTrue(httpConnection_Response0.executed);
      assertEquals(200, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertNotNull(string11);
      
      String string12 = HttpConnection.Response.setOutputContentType(httpConnection_Request4);
      assertEquals(3000, httpConnection_Request4.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getUserInfo());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(string0, string10);
      assertNotSame(string0, string7);
      assertNotSame(string0, string9);
      assertNotSame(string0, string5);
      assertNotSame(string0, string4);
      assertNotSame(string0, string3);
      assertNotSame(string0, string8);
      assertNotSame(string0, string2);
      assertNotSame(string0, string11);
      assertNotSame(string0, string1);
      assertNotSame(string1, string3);
      assertNotSame(string1, string11);
      assertNotSame(string1, string5);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertNotSame(string1, string4);
      assertNotSame(string1, string10);
      assertNotSame(string1, string7);
      assertNotSame(string1, string9);
      assertNotSame(string1, string8);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertFalse(string0.equals((Object)string7));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string3));
      assertTrue(string0.equals((Object)string5));
      assertTrue(string0.equals((Object)string10));
      assertFalse(string0.equals((Object)string8));
      assertTrue(string0.equals((Object)string9));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string11));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string11));
      assertFalse(string1.equals((Object)string5));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string4));
      assertFalse(string1.equals((Object)string10));
      assertFalse(string1.equals((Object)string7));
      assertFalse(string1.equals((Object)string9));
      assertFalse(string1.equals((Object)string8));
      assertEquals(3000, httpConnection_Request4.timeoutMilliseconds);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertTrue(httpConnection_Request4.validateTSLCertificates);
      assertTrue(httpConnection_Request4.followRedirects);
      assertTrue(httpConnection_Request4.parserDefined);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertNull(string12);
      
      HttpURLConnection httpURLConnection1 = HttpConnection.Response.createConnection(httpConnection_Response1.req);
      assertEquals(3000, httpConnection_Request4.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(200, httpConnection_Response0.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals((-1), httpURLConnection1.getContentLength());
      assertFalse(httpURLConnection1.getAllowUserInteraction());
      assertEquals(3000, httpURLConnection1.getReadTimeout());
      assertNull(httpURLConnection1.getContentEncoding());
      assertFalse(httpURLConnection1.getInstanceFollowRedirects());
      assertFalse(httpURLConnection1.usingProxy());
      assertNull(httpURLConnection1.getContentType());
      assertFalse(httpURLConnection1.getDefaultAllowUserInteraction());
      assertTrue(httpURLConnection1.getUseCaches());
      assertEquals(0L, httpURLConnection1.getIfModifiedSince());
      assertTrue(httpURLConnection1.getDefaultUseCaches());
      assertEquals(3000, httpURLConnection1.getConnectTimeout());
      assertFalse(httpURLConnection1.getDoOutput());
      assertEquals("GET", httpURLConnection1.getRequestMethod());
      assertTrue(httpURLConnection1.getFollowRedirects());
      assertTrue(httpURLConnection1.getDoInput());
      assertEquals("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection:http://www.someFakeButWellFormedURL.org/fooExample?http=", httpURLConnection1.toString());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertEquals("UTF-8", httpConnection_Response1.charset());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.contentType());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getUserInfo());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertNotSame(string0, string10);
      assertNotSame(string0, string7);
      assertNotSame(string0, string9);
      assertNotSame(string0, string5);
      assertNotSame(string0, string4);
      assertNotSame(string0, string3);
      assertNotSame(string0, string8);
      assertNotSame(string0, string2);
      assertNotSame(string0, string11);
      assertNotSame(string0, string1);
      assertNotSame(string1, string3);
      assertNotSame(string1, string11);
      assertNotSame(string1, string5);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertNotSame(string1, string4);
      assertNotSame(string1, string10);
      assertNotSame(string1, string7);
      assertNotSame(string1, string9);
      assertNotSame(string1, string8);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertNotSame(httpURLConnection1, httpURLConnection0);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertFalse(string0.equals((Object)string7));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string3));
      assertTrue(string0.equals((Object)string5));
      assertTrue(string0.equals((Object)string10));
      assertFalse(string0.equals((Object)string8));
      assertTrue(string0.equals((Object)string9));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string11));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string11));
      assertFalse(string1.equals((Object)string5));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string4));
      assertFalse(string1.equals((Object)string10));
      assertFalse(string1.equals((Object)string7));
      assertFalse(string1.equals((Object)string9));
      assertFalse(string1.equals((Object)string8));
      assertFalse(httpURLConnection1.equals((Object)httpURLConnection0));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertEquals(3000, httpConnection_Request4.timeoutMilliseconds);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertTrue(httpConnection_Request4.validateTSLCertificates);
      assertTrue(httpConnection_Request4.followRedirects);
      assertTrue(httpConnection_Request4.parserDefined);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertTrue(httpConnection_Response0.executed);
      assertEquals(200, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertTrue(httpConnection_Response1.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNotNull(httpURLConnection1);
      
      HttpConnection.Response httpConnection_Response2 = HttpConnection.Response.execute((Connection.Request) httpConnection_Request4, httpConnection_Response0);
      assertEquals(3000, httpConnection_Request4.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(200, httpConnection_Response0.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(200, httpConnection_Response2.statusCode());
      assertNull(httpConnection_Response2.charset());
      assertNull(httpConnection_Response2.contentType());
      assertEquals(Connection.Method.GET, httpConnection_Response2.method());
      assertEquals("OK", httpConnection_Response2.statusMessage());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getUserInfo());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertNotSame(httpConnection_Response0, httpConnection_Response2);
      assertNotSame(string0, string10);
      assertNotSame(string0, string7);
      assertNotSame(string0, string9);
      assertNotSame(string0, string5);
      assertNotSame(string0, string4);
      assertNotSame(string0, string3);
      assertNotSame(string0, string8);
      assertNotSame(string0, string2);
      assertNotSame(string0, string11);
      assertNotSame(string0, string1);
      assertNotSame(string1, string3);
      assertNotSame(string1, string11);
      assertNotSame(string1, string5);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertNotSame(string1, string4);
      assertNotSame(string1, string10);
      assertNotSame(string1, string7);
      assertNotSame(string1, string9);
      assertNotSame(string1, string8);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertNotSame(httpConnection_Response2, httpConnection_Response0);
      assertNotSame(httpConnection_Response2, httpConnection_Response1);
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertFalse(string0.equals((Object)string7));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string3));
      assertTrue(string0.equals((Object)string5));
      assertTrue(string0.equals((Object)string10));
      assertFalse(string0.equals((Object)string8));
      assertTrue(string0.equals((Object)string9));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string11));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string11));
      assertFalse(string1.equals((Object)string5));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string4));
      assertFalse(string1.equals((Object)string10));
      assertFalse(string1.equals((Object)string7));
      assertFalse(string1.equals((Object)string9));
      assertFalse(string1.equals((Object)string8));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response1));
      assertEquals(3000, httpConnection_Request4.timeoutMilliseconds);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertTrue(httpConnection_Request4.validateTSLCertificates);
      assertTrue(httpConnection_Request4.followRedirects);
      assertTrue(httpConnection_Request4.parserDefined);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertTrue(httpConnection_Response0.executed);
      assertEquals(200, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Response2.executed);
      assertEquals(1, httpConnection_Response2.numRedirects);
      assertEquals(200, httpConnection_Response2.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNotNull(httpConnection_Response2);
  }

  @Test(timeout = 11000)
  public void test16()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertNotNull(httpConnection_Request0);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      String string0 = "--";
      String string1 = "org.jsoup.helper.HttpConnection$Response$2";
      HttpConnection.Request httpConnection_Request1 = (HttpConnection.Request)httpConnection_Request0.cookie(string0, string1);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.parserDefined);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertNotNull(httpConnection_Request1);
      
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://www.someFakeButWellFormedURL.org/fooExample?http=");
      boolean boolean0 = NetworkHandling.createRemoteTextFile(evoSuiteURL0, string0);
      assertNotSame(string0, string1);
      assertTrue(boolean0);
      assertFalse(string0.equals((Object)string1));
      
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request0.parser(httpConnection_Request0.parser);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.parserDefined);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertNotNull(httpConnection_Request2);
      
      HttpConnection.KeyVal httpConnection_KeyVal0 = new HttpConnection.KeyVal();
      assertNull(httpConnection_KeyVal0.value());
      assertNull(httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertNotNull(httpConnection_KeyVal0);
      
      String string2 = "";
      String string3 = httpConnection_KeyVal0.toString();
      assertNull(httpConnection_KeyVal0.value());
      assertNull(httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertNotSame(string3, string0);
      assertNotSame(string3, string2);
      assertNotSame(string3, string1);
      assertEquals("null=null", string3);
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertNotNull(string3);
      
      HttpConnection.KeyVal httpConnection_KeyVal1 = httpConnection_KeyVal0.value(string2);
      assertEquals("", httpConnection_KeyVal0.value());
      assertNull(httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("", httpConnection_KeyVal1.value());
      assertNull(httpConnection_KeyVal1.key());
      assertFalse(httpConnection_KeyVal1.hasInputStream());
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertNotSame(string2, string1);
      assertNotSame(string2, string3);
      assertNotSame(string2, string0);
      assertSame(httpConnection_KeyVal1, httpConnection_KeyVal0);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string3));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(httpConnection_KeyVal1);
      
      URL uRL0 = MockURL.getHttpExample();
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertNotNull(uRL0);
      
      HttpConnection.Request httpConnection_Request3 = httpConnection_Request2.data((Connection.KeyVal) httpConnection_KeyVal0);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals("", httpConnection_KeyVal0.value());
      assertNull(httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals(3000, httpConnection_Request3.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertTrue(httpConnection_Request3.followRedirects());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.parserDefined);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.followRedirects);
      assertTrue(httpConnection_Request3.parserDefined);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request3.timeoutMilliseconds);
      assertNotNull(httpConnection_Request3);
      
      String string4 = "http";
      httpConnection_KeyVal0.key = string4;
      assertEquals("http", httpConnection_KeyVal0.key());
      assertEquals("", httpConnection_KeyVal0.value());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      
      HttpConnection.Request httpConnection_Request4 = (HttpConnection.Request)httpConnection_Request0.url(uRL0);
      assertEquals(3000, httpConnection_Request4.timeout());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      assertTrue(httpConnection_Request4.followRedirects());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertEquals(3000, httpConnection_Request4.timeoutMilliseconds);
      assertTrue(httpConnection_Request4.followRedirects);
      assertTrue(httpConnection_Request4.validateTSLCertificates);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertTrue(httpConnection_Request4.parserDefined);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertNotNull(httpConnection_Request4);
      
      String string5 = "KXf";
      HttpConnection.Response httpConnection_Response0 = HttpConnection.Response.execute((Connection.Request) httpConnection_Request4);
      assertEquals(3000, httpConnection_Request4.timeout());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      assertTrue(httpConnection_Request4.followRedirects());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertEquals(200, httpConnection_Response0.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertEquals(3000, httpConnection_Request4.timeoutMilliseconds);
      assertTrue(httpConnection_Request4.followRedirects);
      assertTrue(httpConnection_Request4.validateTSLCertificates);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertTrue(httpConnection_Request4.parserDefined);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(200, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertTrue(httpConnection_Response0.executed);
      assertNotNull(httpConnection_Response0);
      
      String string6 = httpConnection_Response0.charset();
      assertEquals(3000, httpConnection_Request4.timeout());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      assertTrue(httpConnection_Request4.followRedirects());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertEquals(200, httpConnection_Response0.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertEquals(3000, httpConnection_Request4.timeoutMilliseconds);
      assertTrue(httpConnection_Request4.followRedirects);
      assertTrue(httpConnection_Request4.validateTSLCertificates);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertTrue(httpConnection_Request4.parserDefined);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(200, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertTrue(httpConnection_Response0.executed);
      assertNull(string6);
      
      HttpURLConnection httpURLConnection0 = HttpConnection.Response.createConnection(httpConnection_Response0.req);
      assertEquals(3000, httpConnection_Request4.timeout());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      assertTrue(httpConnection_Request4.followRedirects());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertEquals(200, httpConnection_Response0.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertFalse(httpURLConnection0.getDoOutput());
      assertEquals("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection:http://www.someFakeButWellFormedURL.org/fooExample?http=", httpURLConnection0.toString());
      assertEquals("GET", httpURLConnection0.getRequestMethod());
      assertFalse(httpURLConnection0.getDefaultAllowUserInteraction());
      assertEquals(3000, httpURLConnection0.getReadTimeout());
      assertTrue(httpURLConnection0.getUseCaches());
      assertEquals(3000, httpURLConnection0.getConnectTimeout());
      assertFalse(httpURLConnection0.getAllowUserInteraction());
      assertFalse(httpURLConnection0.getInstanceFollowRedirects());
      assertFalse(httpURLConnection0.usingProxy());
      assertTrue(httpURLConnection0.getFollowRedirects());
      assertNull(httpURLConnection0.getContentType());
      assertTrue(httpURLConnection0.getDoInput());
      assertNull(httpURLConnection0.getContentEncoding());
      assertEquals(0L, httpURLConnection0.getIfModifiedSince());
      assertEquals((-1), httpURLConnection0.getContentLength());
      assertTrue(httpURLConnection0.getDefaultUseCaches());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertEquals(3000, httpConnection_Request4.timeoutMilliseconds);
      assertTrue(httpConnection_Request4.followRedirects);
      assertTrue(httpConnection_Request4.validateTSLCertificates);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertTrue(httpConnection_Request4.parserDefined);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(200, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertTrue(httpConnection_Response0.executed);
      assertNotNull(httpURLConnection0);
      
      int int0 = 200;
      String string7 = "w'9|\\mc`v}";
      boolean boolean1 = httpConnection_Response0.hasHeader(string7);
      assertEquals(3000, httpConnection_Request4.timeout());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      assertTrue(httpConnection_Request4.followRedirects());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertEquals(200, httpConnection_Response0.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertNotSame(string7, string4);
      assertNotSame(string7, string2);
      assertNotSame(string7, string3);
      assertNotSame(string7, string1);
      assertNotSame(string7, string5);
      assertNotSame(string7, string0);
      assertFalse(boolean1);
      assertFalse(string7.equals((Object)string4));
      assertFalse(string7.equals((Object)string2));
      assertFalse(string7.equals((Object)string3));
      assertFalse(string7.equals((Object)string1));
      assertFalse(string7.equals((Object)string5));
      assertFalse(string7.equals((Object)string0));
      assertFalse(boolean1 == boolean0);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertEquals(3000, httpConnection_Request4.timeoutMilliseconds);
      assertTrue(httpConnection_Request4.followRedirects);
      assertTrue(httpConnection_Request4.validateTSLCertificates);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertTrue(httpConnection_Request4.parserDefined);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(200, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertTrue(httpConnection_Response0.executed);
      
      String string8 = "(K!4buN|pi2 p'";
      HttpConnection.Response httpConnection_Response1 = HttpConnection.Response.execute(httpConnection_Response0.req);
      assertEquals(3000, httpConnection_Request4.timeout());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      assertTrue(httpConnection_Request4.followRedirects());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertEquals(200, httpConnection_Response0.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.contentType());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertEquals(3000, httpConnection_Request4.timeoutMilliseconds);
      assertTrue(httpConnection_Request4.followRedirects);
      assertTrue(httpConnection_Request4.validateTSLCertificates);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertTrue(httpConnection_Request4.parserDefined);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(200, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertTrue(httpConnection_Response0.executed);
      assertTrue(httpConnection_Response1.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertNotNull(httpConnection_Response1);
      
      String string9 = httpConnection_Response1.body();
      assertEquals(3000, httpConnection_Request4.timeout());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      assertTrue(httpConnection_Request4.followRedirects());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertEquals(200, httpConnection_Response0.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.contentType());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertNotSame(string9, string0);
      assertNotSame(string9, string1);
      assertNotSame(string9, string2);
      assertNotSame(string9, string3);
      assertNotSame(string9, string8);
      assertNotSame(string9, string7);
      assertNotSame(string9, string4);
      assertNotSame(string9, string5);
      assertEquals("--", string9);
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertFalse(string9.equals((Object)string1));
      assertFalse(string9.equals((Object)string2));
      assertFalse(string9.equals((Object)string3));
      assertFalse(string9.equals((Object)string8));
      assertFalse(string9.equals((Object)string7));
      assertFalse(string9.equals((Object)string4));
      assertTrue(string9.equals((Object)string0));
      assertFalse(string9.equals((Object)string5));
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertEquals(3000, httpConnection_Request4.timeoutMilliseconds);
      assertTrue(httpConnection_Request4.followRedirects);
      assertTrue(httpConnection_Request4.validateTSLCertificates);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertTrue(httpConnection_Request4.parserDefined);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(200, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertTrue(httpConnection_Response0.executed);
      assertTrue(httpConnection_Response1.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertNotNull(string9);
      
      byte[] byteArray0 = httpConnection_Response1.bodyAsBytes();
      assertEquals(3000, httpConnection_Request4.timeout());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      assertTrue(httpConnection_Request4.followRedirects());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertEquals(200, httpConnection_Response0.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.contentType());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertArrayEquals(new byte[] {(byte)45, (byte)45}, byteArray0);
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertEquals(3000, httpConnection_Request4.timeoutMilliseconds);
      assertTrue(httpConnection_Request4.followRedirects);
      assertTrue(httpConnection_Request4.validateTSLCertificates);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertTrue(httpConnection_Request4.parserDefined);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(200, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertTrue(httpConnection_Response0.executed);
      assertTrue(httpConnection_Response1.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertEquals(2, byteArray0.length);
      assertNotNull(byteArray0);
      
      HttpConnection.Response.serialiseRequestUrl(httpConnection_Request3);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals("http", httpConnection_KeyVal0.key());
      assertEquals("", httpConnection_KeyVal0.value());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals(3000, httpConnection_Request3.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertTrue(httpConnection_Request3.followRedirects());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.parserDefined);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.followRedirects);
      assertTrue(httpConnection_Request3.parserDefined);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request3.timeoutMilliseconds);
  }

  @Test(timeout = 11000)
  public void test17()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertNotNull(httpConnection_Request0);
      
      Parser parser0 = Parser.xmlParser();
      assertFalse(parser0.isTrackErrors());
      assertNotNull(parser0);
      
      boolean boolean0 = true;
      String string0 = Parser.unescapeEntities(httpConnection_Request0.postDataCharset, boolean0);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals("UTF-8", string0);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertNotNull(string0);
      
      HttpConnection.Request httpConnection_Request1 = new HttpConnection.Request();
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(httpConnection_Request1.equals((Object)httpConnection_Request0));
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertNotNull(httpConnection_Request1);
      
      HttpConnection.KeyVal httpConnection_KeyVal0 = new HttpConnection.KeyVal();
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertNull(httpConnection_KeyVal0.value());
      assertNull(httpConnection_KeyVal0.key());
      assertNotNull(httpConnection_KeyVal0);
      
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request1.data((Connection.KeyVal) httpConnection_KeyVal0);
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertNull(httpConnection_KeyVal0.value());
      assertNull(httpConnection_KeyVal0.key());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertNotSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertNotSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertFalse(httpConnection_Request1.equals((Object)httpConnection_Request0));
      assertFalse(httpConnection_Request2.equals((Object)httpConnection_Request0));
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertNotNull(httpConnection_Request2);
      
      HttpConnection.Request httpConnection_Request3 = (HttpConnection.Request)httpConnection_Request2.maxBodySize(httpConnection_Request1.timeoutMilliseconds);
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(3000, httpConnection_Request1.maxBodySize());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertNull(httpConnection_KeyVal0.value());
      assertNull(httpConnection_KeyVal0.key());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(3000, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request3.timeout());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(3000, httpConnection_Request3.maxBodySize());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertNotSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertNotSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertNotSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertFalse(httpConnection_Request1.equals((Object)httpConnection_Request0));
      assertFalse(httpConnection_Request2.equals((Object)httpConnection_Request0));
      assertFalse(httpConnection_Request3.equals((Object)httpConnection_Request0));
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(3000, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(3000, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertFalse(httpConnection_Request3.parserDefined);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertEquals(3000, httpConnection_Request3.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request3.timeoutMilliseconds);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertNotNull(httpConnection_Request3);
      
      String string1 = "h5";
      MockPrintStream mockPrintStream0 = new MockPrintStream(string1);
      assertFalse(string1.equals((Object)string0));
      assertNotNull(mockPrintStream0);
      
      // Undeclared exception!
      try { 
        HttpConnection.Response.writePost(httpConnection_Request3, mockPrintStream0, httpConnection_KeyVal0.key);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.net.URLEncoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test18()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertNotNull(httpConnection_Request0);
      
      int int0 = 58;
      String string0 = "--";
      Connection.Method connection_Method0 = Connection.Method.PUT;
      HttpConnection.Request httpConnection_Request1 = (HttpConnection.Request)httpConnection_Request0.method(connection_Method0);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(Connection.Method.PUT, httpConnection_Request0.method());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.PUT, httpConnection_Request1.method());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request1.parserDefined);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertNotNull(httpConnection_Request1);
      
      String string1 = "org.jsoup.helper.HttpConGection$Response$2";
      HttpConnection.Request httpConnection_Request2 = (HttpConnection.Request)httpConnection_Request0.cookie(string0, string1);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(Connection.Method.PUT, httpConnection_Request0.method());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.PUT, httpConnection_Request2.method());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.parserDefined);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertNotNull(httpConnection_Request2);
      
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://www.someFakeButWellFormedURL.org/fooExample?http=");
      boolean boolean0 = NetworkHandling.createRemoteTextFile(evoSuiteURL0, string0);
      assertNotSame(string0, string1);
      assertTrue(boolean0);
      assertFalse(string0.equals((Object)string1));
      
      HttpConnection.Request httpConnection_Request3 = httpConnection_Request0.timeout(int0);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(Connection.Method.PUT, httpConnection_Request0.method());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(58, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.PUT, httpConnection_Request3.method());
      assertTrue(httpConnection_Request3.followRedirects());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertEquals(58, httpConnection_Request3.timeout());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertEquals(58, httpConnection_Request3.timeoutMilliseconds);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.parserDefined);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertNotNull(httpConnection_Request3);
      
      HttpConnection.Request httpConnection_Request4 = httpConnection_Request3.parser(httpConnection_Request0.parser);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(Connection.Method.PUT, httpConnection_Request0.method());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(58, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.PUT, httpConnection_Request3.method());
      assertTrue(httpConnection_Request3.followRedirects());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertEquals(58, httpConnection_Request3.timeout());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertEquals(Connection.Method.PUT, httpConnection_Request4.method());
      assertTrue(httpConnection_Request4.followRedirects());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals(58, httpConnection_Request4.timeout());
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.parserDefined);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertEquals(58, httpConnection_Request3.timeoutMilliseconds);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.followRedirects);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertTrue(httpConnection_Request4.validateTSLCertificates);
      assertEquals(58, httpConnection_Request4.timeoutMilliseconds);
      assertTrue(httpConnection_Request4.parserDefined);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertTrue(httpConnection_Request4.followRedirects);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertNotNull(httpConnection_Request4);
      
      HttpConnection.KeyVal httpConnection_KeyVal0 = new HttpConnection.KeyVal();
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertNull(httpConnection_KeyVal0.value());
      assertNull(httpConnection_KeyVal0.key());
      assertNotNull(httpConnection_KeyVal0);
      
      HttpConnection.KeyVal httpConnection_KeyVal1 = httpConnection_KeyVal0.value(httpConnection_Request3.postDataCharset);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(Connection.Method.PUT, httpConnection_Request0.method());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(58, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.PUT, httpConnection_Request3.method());
      assertTrue(httpConnection_Request3.followRedirects());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertEquals(58, httpConnection_Request3.timeout());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("UTF-8", httpConnection_KeyVal0.value());
      assertNull(httpConnection_KeyVal0.key());
      assertNull(httpConnection_KeyVal1.key());
      assertEquals("UTF-8", httpConnection_KeyVal1.value());
      assertFalse(httpConnection_KeyVal1.hasInputStream());
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertSame(httpConnection_KeyVal1, httpConnection_KeyVal0);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.parserDefined);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertEquals(58, httpConnection_Request3.timeoutMilliseconds);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.followRedirects);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertNotNull(httpConnection_KeyVal1);
      
      URL uRL0 = MockURL.getHttpExample();
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNotNull(uRL0);
      
      HttpConnection.Request httpConnection_Request5 = httpConnection_Request4.data((Connection.KeyVal) httpConnection_KeyVal0);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(Connection.Method.PUT, httpConnection_Request0.method());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(58, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.PUT, httpConnection_Request3.method());
      assertTrue(httpConnection_Request3.followRedirects());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertEquals(58, httpConnection_Request3.timeout());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertEquals(Connection.Method.PUT, httpConnection_Request4.method());
      assertTrue(httpConnection_Request4.followRedirects());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals(58, httpConnection_Request4.timeout());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("UTF-8", httpConnection_KeyVal0.value());
      assertNull(httpConnection_KeyVal0.key());
      assertTrue(httpConnection_Request5.followRedirects());
      assertTrue(httpConnection_Request5.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request5.postDataCharset());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request5.timeout());
      assertEquals(Connection.Method.PUT, httpConnection_Request5.method());
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request5);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request5);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.parserDefined);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertEquals(58, httpConnection_Request3.timeoutMilliseconds);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.followRedirects);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertTrue(httpConnection_Request4.validateTSLCertificates);
      assertEquals(58, httpConnection_Request4.timeoutMilliseconds);
      assertTrue(httpConnection_Request4.parserDefined);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertTrue(httpConnection_Request4.followRedirects);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertEquals(58, httpConnection_Request5.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertTrue(httpConnection_Request5.parserDefined);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertTrue(httpConnection_Request5.followRedirects);
      assertTrue(httpConnection_Request5.validateTSLCertificates);
      assertNotNull(httpConnection_Request5);
      
      String string2 = "http";
      httpConnection_KeyVal0.key = string2;
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("UTF-8", httpConnection_KeyVal0.value());
      assertEquals("http", httpConnection_KeyVal0.key());
      
      HttpConnection.Request httpConnection_Request6 = (HttpConnection.Request)httpConnection_Request3.url(uRL0);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(Connection.Method.PUT, httpConnection_Request0.method());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(58, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request6.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request6.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request6.postDataCharset());
      assertFalse(httpConnection_Request6.ignoreContentType());
      assertTrue(httpConnection_Request6.followRedirects());
      assertFalse(httpConnection_Request6.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request6.timeout());
      assertEquals(Connection.Method.PUT, httpConnection_Request6.method());
      assertEquals(Connection.Method.PUT, httpConnection_Request3.method());
      assertTrue(httpConnection_Request3.followRedirects());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertEquals(58, httpConnection_Request3.timeout());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request6);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request6, httpConnection_Request5);
      assertSame(httpConnection_Request6, httpConnection_Request4);
      assertSame(httpConnection_Request6, httpConnection_Request3);
      assertSame(httpConnection_Request6, httpConnection_Request1);
      assertSame(httpConnection_Request6, httpConnection_Request2);
      assertSame(httpConnection_Request6, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request5);
      assertSame(httpConnection_Request3, httpConnection_Request6);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request6.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request6.maxBodySizeBytes);
      assertEquals(58, httpConnection_Request6.timeoutMilliseconds);
      assertTrue(httpConnection_Request6.parserDefined);
      assertTrue(httpConnection_Request6.followRedirects);
      assertFalse(httpConnection_Request6.ignoreContentType);
      assertTrue(httpConnection_Request6.validateTSLCertificates);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.parserDefined);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertEquals(58, httpConnection_Request3.timeoutMilliseconds);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.followRedirects);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertNotNull(httpConnection_Request6);
      
      String string3 = "gKX";
      HttpConnection.Request httpConnection_Request7 = (HttpConnection.Request)httpConnection_Request6.cookie(httpConnection_KeyVal1.key, httpConnection_KeyVal0.key);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(Connection.Method.PUT, httpConnection_Request0.method());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(58, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request6.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request6.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request6.postDataCharset());
      assertFalse(httpConnection_Request6.ignoreContentType());
      assertTrue(httpConnection_Request6.followRedirects());
      assertFalse(httpConnection_Request6.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request6.timeout());
      assertEquals(Connection.Method.PUT, httpConnection_Request6.method());
      assertEquals(58, httpConnection_Request7.timeout());
      assertFalse(httpConnection_Request7.ignoreHttpErrors());
      assertEquals(Connection.Method.PUT, httpConnection_Request7.method());
      assertTrue(httpConnection_Request7.validateTLSCertificates());
      assertTrue(httpConnection_Request7.followRedirects());
      assertEquals(1048576, httpConnection_Request7.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request7.postDataCharset());
      assertFalse(httpConnection_Request7.ignoreContentType());
      assertEquals(Connection.Method.PUT, httpConnection_Request3.method());
      assertTrue(httpConnection_Request3.followRedirects());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertEquals(58, httpConnection_Request3.timeout());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("UTF-8", httpConnection_KeyVal0.value());
      assertEquals("http", httpConnection_KeyVal0.key());
      assertEquals("http", httpConnection_KeyVal1.key());
      assertEquals("UTF-8", httpConnection_KeyVal1.value());
      assertFalse(httpConnection_KeyVal1.hasInputStream());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request7);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request6);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request6, httpConnection_Request5);
      assertSame(httpConnection_Request6, httpConnection_Request7);
      assertSame(httpConnection_Request6, httpConnection_Request4);
      assertSame(httpConnection_Request6, httpConnection_Request3);
      assertSame(httpConnection_Request6, httpConnection_Request1);
      assertSame(httpConnection_Request6, httpConnection_Request2);
      assertSame(httpConnection_Request6, httpConnection_Request0);
      assertSame(httpConnection_Request7, httpConnection_Request6);
      assertSame(httpConnection_Request7, httpConnection_Request5);
      assertSame(httpConnection_Request7, httpConnection_Request2);
      assertSame(httpConnection_Request7, httpConnection_Request3);
      assertSame(httpConnection_Request7, httpConnection_Request4);
      assertSame(httpConnection_Request7, httpConnection_Request0);
      assertSame(httpConnection_Request7, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request5);
      assertSame(httpConnection_Request3, httpConnection_Request6);
      assertSame(httpConnection_Request3, httpConnection_Request7);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertSame(httpConnection_KeyVal1, httpConnection_KeyVal0);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request6.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request6.maxBodySizeBytes);
      assertEquals(58, httpConnection_Request6.timeoutMilliseconds);
      assertTrue(httpConnection_Request6.parserDefined);
      assertTrue(httpConnection_Request6.followRedirects);
      assertFalse(httpConnection_Request6.ignoreContentType);
      assertTrue(httpConnection_Request6.validateTSLCertificates);
      assertEquals(1048576, httpConnection_Request7.maxBodySizeBytes);
      assertEquals(58, httpConnection_Request7.timeoutMilliseconds);
      assertTrue(httpConnection_Request7.validateTSLCertificates);
      assertFalse(httpConnection_Request7.ignoreContentType);
      assertTrue(httpConnection_Request7.parserDefined);
      assertFalse(httpConnection_Request7.ignoreHttpErrors);
      assertTrue(httpConnection_Request7.followRedirects);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.parserDefined);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertEquals(58, httpConnection_Request3.timeoutMilliseconds);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.followRedirects);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertNotNull(httpConnection_Request7);
      
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request6);
        fail("Expecting exception: UnknownServiceException");
      
      } catch(UnknownServiceException e) {
         //
         // protocol doesn't support output
         //
         verifyException("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection", e);
      }
  }

  @Test(timeout = 11000)
  public void test19()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertNotNull(httpConnection_Request0);
      
      int int0 = 58;
      String string0 = "--";
      String string1 = "org.jsoup.helper.HttpConnection$Response$2";
      HttpConnection.Request httpConnection_Request1 = (HttpConnection.Request)httpConnection_Request0.cookie(string0, string1);
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.parserDefined);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertNotNull(httpConnection_Request1);
      
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://www.someFakeButWellFormedURL.org/fooExample?http=");
      boolean boolean0 = NetworkHandling.createRemoteTextFile(evoSuiteURL0, string0);
      assertNotSame(string0, string1);
      assertTrue(boolean0);
      assertFalse(string0.equals((Object)string1));
      
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request0.timeout(int0);
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(58, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(58, httpConnection_Request2.timeout());
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertFalse(httpConnection_Request2.parserDefined);
      assertTrue(httpConnection_Request2.followRedirects);
      assertNotNull(httpConnection_Request2);
      
      HttpConnection.Request httpConnection_Request3 = httpConnection_Request2.parser(httpConnection_Request0.parser);
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(58, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(58, httpConnection_Request2.timeout());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request3.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.parserDefined);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request2.parserDefined);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.followRedirects);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.parserDefined);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertEquals(58, httpConnection_Request3.timeoutMilliseconds);
      assertNotNull(httpConnection_Request3);
      
      HttpConnection.KeyVal httpConnection_KeyVal0 = new HttpConnection.KeyVal();
      assertNull(httpConnection_KeyVal0.value());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertNull(httpConnection_KeyVal0.key());
      assertNotNull(httpConnection_KeyVal0);
      
      String string2 = "";
      HttpConnection.KeyVal httpConnection_KeyVal1 = httpConnection_KeyVal0.value(string2);
      assertEquals("", httpConnection_KeyVal0.value());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertNull(httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal1.hasInputStream());
      assertNull(httpConnection_KeyVal1.key());
      assertEquals("", httpConnection_KeyVal1.value());
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertSame(httpConnection_KeyVal1, httpConnection_KeyVal0);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(httpConnection_KeyVal1);
      
      URL uRL0 = MockURL.getHttpExample();
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getRef());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNotNull(uRL0);
      
      HttpConnection.Request httpConnection_Request4 = httpConnection_Request3.data((Connection.KeyVal) httpConnection_KeyVal0);
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(58, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(58, httpConnection_Request2.timeout());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request3.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertEquals("", httpConnection_KeyVal0.value());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertNull(httpConnection_KeyVal0.key());
      assertEquals(58, httpConnection_Request4.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertTrue(httpConnection_Request4.followRedirects());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.parserDefined);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request2.parserDefined);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.followRedirects);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.parserDefined);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertEquals(58, httpConnection_Request3.timeoutMilliseconds);
      assertEquals(58, httpConnection_Request4.timeoutMilliseconds);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertTrue(httpConnection_Request4.followRedirects);
      assertTrue(httpConnection_Request4.validateTSLCertificates);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertTrue(httpConnection_Request4.parserDefined);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertNotNull(httpConnection_Request4);
      
      String string3 = "http";
      httpConnection_KeyVal0.key = string3;
      assertEquals("", httpConnection_KeyVal0.value());
      assertEquals("http", httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      
      HttpConnection.Request httpConnection_Request5 = (HttpConnection.Request)httpConnection_Request2.url(uRL0);
      assertTrue(httpConnection_Request5.followRedirects());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request5.postDataCharset());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertEquals(58, httpConnection_Request5.timeout());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertTrue(httpConnection_Request5.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(58, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(58, httpConnection_Request2.timeout());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getRef());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertTrue(httpConnection_Request5.followRedirects);
      assertTrue(httpConnection_Request5.validateTSLCertificates);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertTrue(httpConnection_Request5.parserDefined);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertEquals(58, httpConnection_Request5.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.parserDefined);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request2.parserDefined);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.followRedirects);
      assertNotNull(httpConnection_Request5);
      
      String string4 = "KXf";
      HttpConnection.Response httpConnection_Response0 = HttpConnection.Response.execute((Connection.Request) httpConnection_Request5);
      assertTrue(httpConnection_Request5.followRedirects());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request5.postDataCharset());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertEquals(58, httpConnection_Request5.timeout());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertTrue(httpConnection_Request5.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(58, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertEquals(200, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(58, httpConnection_Request2.timeout());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getRef());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertTrue(httpConnection_Request5.followRedirects);
      assertTrue(httpConnection_Request5.validateTSLCertificates);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertTrue(httpConnection_Request5.parserDefined);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertEquals(58, httpConnection_Request5.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.parserDefined);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(200, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertTrue(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertTrue(httpConnection_Request2.parserDefined);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.followRedirects);
      assertNotNull(httpConnection_Response0);
      
      String string5 = httpConnection_Response0.charset();
      assertTrue(httpConnection_Request5.followRedirects());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request5.postDataCharset());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertEquals(58, httpConnection_Request5.timeout());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertTrue(httpConnection_Request5.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(58, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertEquals(200, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(58, httpConnection_Request2.timeout());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getRef());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertTrue(httpConnection_Request5.followRedirects);
      assertTrue(httpConnection_Request5.validateTSLCertificates);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertTrue(httpConnection_Request5.parserDefined);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertEquals(58, httpConnection_Request5.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.parserDefined);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(200, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertTrue(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertTrue(httpConnection_Request2.parserDefined);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.followRedirects);
      assertNull(string5);
      
      String string6 = httpConnection_Response0.statusMessage();
      assertTrue(httpConnection_Request5.followRedirects());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request5.postDataCharset());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertEquals(58, httpConnection_Request5.timeout());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertTrue(httpConnection_Request5.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(58, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertEquals(200, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(58, httpConnection_Request2.timeout());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getRef());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(string6, string1);
      assertNotSame(string6, string0);
      assertNotSame(string6, string2);
      assertNotSame(string6, string3);
      assertNotSame(string6, string4);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertEquals("OK", string6);
      assertFalse(string6.equals((Object)string1));
      assertFalse(string6.equals((Object)string0));
      assertFalse(string6.equals((Object)string2));
      assertFalse(string6.equals((Object)string3));
      assertFalse(string6.equals((Object)string4));
      assertTrue(httpConnection_Request5.followRedirects);
      assertTrue(httpConnection_Request5.validateTSLCertificates);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertTrue(httpConnection_Request5.parserDefined);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertEquals(58, httpConnection_Request5.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.parserDefined);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(200, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertTrue(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertTrue(httpConnection_Request2.parserDefined);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.followRedirects);
      assertNotNull(string6);
  }

  @Test(timeout = 11000)
  public void test20()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.parserDefined);
      assertNotNull(httpConnection_Request0);
      
      int int0 = 41;
      String string0 = "--";
      String string1 = "org.jsoup.helper.HttpConnection$Response$2";
      HttpConnection.Request httpConnection_Request1 = (HttpConnection.Request)httpConnection_Request0.cookie(string0, string1);
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.parserDefined);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertNotNull(httpConnection_Request1);
      
      HttpConnection.Request httpConnection_Request2 = new HttpConnection.Request();
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertFalse(httpConnection_Request2.equals((Object)httpConnection_Request0));
      assertFalse(httpConnection_Request2.equals((Object)httpConnection_Request1));
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertFalse(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertNotNull(httpConnection_Request2);
      
      HttpConnection.Request httpConnection_Request3 = httpConnection_Request2.parser(httpConnection_Request0.parser);
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertTrue(httpConnection_Request3.followRedirects());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request3.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertNotSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(httpConnection_Request0, httpConnection_Request2);
      assertNotSame(httpConnection_Request2, httpConnection_Request0);
      assertNotSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertNotSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertNotSame(httpConnection_Request3, httpConnection_Request1);
      assertFalse(httpConnection_Request0.equals((Object)httpConnection_Request2));
      assertFalse(httpConnection_Request2.equals((Object)httpConnection_Request0));
      assertFalse(httpConnection_Request2.equals((Object)httpConnection_Request1));
      assertFalse(httpConnection_Request3.equals((Object)httpConnection_Request0));
      assertFalse(httpConnection_Request3.equals((Object)httpConnection_Request1));
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request2.followRedirects);
      assertTrue(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request3.followRedirects);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request3.timeoutMilliseconds);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.parserDefined);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertNotNull(httpConnection_Request3);
      
      HttpConnection.KeyVal httpConnection_KeyVal0 = new HttpConnection.KeyVal();
      assertNull(httpConnection_KeyVal0.value());
      assertNull(httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertNotNull(httpConnection_KeyVal0);
      
      String string2 = "";
      HttpConnection.KeyVal httpConnection_KeyVal1 = httpConnection_KeyVal0.value(string2);
      assertEquals("", httpConnection_KeyVal0.value());
      assertNull(httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertFalse(httpConnection_KeyVal1.hasInputStream());
      assertEquals("", httpConnection_KeyVal1.value());
      assertNull(httpConnection_KeyVal1.key());
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertSame(httpConnection_KeyVal1, httpConnection_KeyVal0);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(httpConnection_KeyVal1);
      
      URL uRL0 = MockURL.getHttpExample();
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getRef());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getQuery());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertNotNull(uRL0);
      
      HttpConnection.Request httpConnection_Request4 = new HttpConnection.Request();
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertEquals(3000, httpConnection_Request4.timeout());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertTrue(httpConnection_Request4.followRedirects());
      assertFalse(httpConnection_Request4.equals((Object)httpConnection_Request1));
      assertFalse(httpConnection_Request4.equals((Object)httpConnection_Request2));
      assertFalse(httpConnection_Request4.equals((Object)httpConnection_Request3));
      assertFalse(httpConnection_Request4.equals((Object)httpConnection_Request0));
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertTrue(httpConnection_Request4.validateTSLCertificates);
      assertFalse(httpConnection_Request4.parserDefined);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertTrue(httpConnection_Request4.followRedirects);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request4.timeoutMilliseconds);
      assertNotNull(httpConnection_Request4);
      
      String string3 = "http";
      httpConnection_KeyVal0.key = string3;
      assertEquals("http", httpConnection_KeyVal0.key());
      assertEquals("", httpConnection_KeyVal0.value());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      
      HttpConnection.Request httpConnection_Request5 = (HttpConnection.Request)httpConnection_Request2.url(uRL0);
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getRef());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getQuery());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertTrue(httpConnection_Request5.followRedirects());
      assertTrue(httpConnection_Request5.validateTLSCertificates());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertEquals("UTF-8", httpConnection_Request5.postDataCharset());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertEquals(3000, httpConnection_Request5.timeout());
      assertNotSame(httpConnection_Request2, httpConnection_Request4);
      assertNotSame(httpConnection_Request2, httpConnection_Request0);
      assertNotSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertNotSame(httpConnection_Request5, httpConnection_Request0);
      assertNotSame(httpConnection_Request5, httpConnection_Request4);
      assertNotSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertFalse(httpConnection_Request2.equals((Object)httpConnection_Request4));
      assertFalse(httpConnection_Request2.equals((Object)httpConnection_Request0));
      assertFalse(httpConnection_Request2.equals((Object)httpConnection_Request1));
      assertFalse(httpConnection_Request5.equals((Object)httpConnection_Request0));
      assertFalse(httpConnection_Request5.equals((Object)httpConnection_Request4));
      assertFalse(httpConnection_Request5.equals((Object)httpConnection_Request1));
      assertTrue(httpConnection_Request2.followRedirects);
      assertTrue(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request5.followRedirects);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertTrue(httpConnection_Request5.parserDefined);
      assertEquals(3000, httpConnection_Request5.timeoutMilliseconds);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertTrue(httpConnection_Request5.validateTSLCertificates);
      assertNotNull(httpConnection_Request5);
      
      String string4 = "KXf";
      HttpConnection.KeyVal httpConnection_KeyVal2 = HttpConnection.KeyVal.create(httpConnection_Request4.postDataCharset, string4);
      assertEquals("UTF-8", httpConnection_KeyVal2.key());
      assertEquals("KXf", httpConnection_KeyVal2.value());
      assertFalse(httpConnection_KeyVal2.hasInputStream());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertEquals(3000, httpConnection_Request4.timeout());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertTrue(httpConnection_Request4.followRedirects());
      assertNotSame(httpConnection_KeyVal2, httpConnection_KeyVal0);
      assertNotSame(httpConnection_KeyVal2, httpConnection_KeyVal1);
      assertNotSame(httpConnection_Request4, httpConnection_Request1);
      assertNotSame(httpConnection_Request4, httpConnection_Request2);
      assertNotSame(httpConnection_Request4, httpConnection_Request3);
      assertNotSame(httpConnection_Request4, httpConnection_Request5);
      assertNotSame(httpConnection_Request4, httpConnection_Request0);
      assertNotSame(string4, string3);
      assertNotSame(string4, string2);
      assertNotSame(string4, string0);
      assertNotSame(string4, string1);
      assertFalse(httpConnection_KeyVal2.equals((Object)httpConnection_KeyVal0));
      assertFalse(httpConnection_KeyVal2.equals((Object)httpConnection_KeyVal1));
      assertFalse(httpConnection_Request4.equals((Object)httpConnection_Request1));
      assertFalse(httpConnection_Request4.equals((Object)httpConnection_Request2));
      assertFalse(httpConnection_Request4.equals((Object)httpConnection_Request3));
      assertFalse(httpConnection_Request4.equals((Object)httpConnection_Request5));
      assertFalse(httpConnection_Request4.equals((Object)httpConnection_Request0));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string1));
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertTrue(httpConnection_Request4.validateTSLCertificates);
      assertFalse(httpConnection_Request4.parserDefined);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertTrue(httpConnection_Request4.followRedirects);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request4.timeoutMilliseconds);
      assertNotNull(httpConnection_KeyVal2);
      
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request5);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // HTTP error fetching URL
         //
         verifyException("org.jsoup.helper.HttpConnection$Response", e);
      }
  }

  @Test(timeout = 11000)
  public void test21()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertNotNull(httpConnection_Response0);
      
      // Undeclared exception!
      try { 
        HttpConnection.Response.execute(httpConnection_Response0.req);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Request must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test22()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertNotNull(httpConnection_Request0);
      
      int int0 = 0;
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.timeout(int0);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(0, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.parserDefined);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertNotNull(httpConnection_Request1);
      
      // Undeclared exception!
      try { 
        HttpConnection.Response.serialiseRequestUrl(httpConnection_Request1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 11000)
  public void test23()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertNotNull(httpConnection_Request0);
      
      String string0 = HttpConnection.Response.getRequestCookieString(httpConnection_Request0);
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals("", string0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertNotNull(string0);
      
      HttpConnection.Response httpConnection_Response0 = null;
      HttpConnection.Response httpConnection_Response1 = new HttpConnection.Response(httpConnection_Response0);
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.contentType());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertFalse(httpConnection_Response1.executed);
      assertNotNull(httpConnection_Response1);
      
      String string1 = httpConnection_Response1.statusMessage();
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.contentType());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertFalse(httpConnection_Response1.executed);
      assertNull(string1);
  }

  @Test(timeout = 11000)
  public void test24()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertNotNull(httpConnection_Response0);
      
      HttpConnection.Response httpConnection_Response1 = new HttpConnection.Response(httpConnection_Response0);
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response1.charset());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.method());
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(1, httpConnection_Response1.numRedirects);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response1.executed);
      assertNotNull(httpConnection_Response1);
      
      Map<String, String> map0 = httpConnection_Response1.cookies;
      assertTrue(map0.isEmpty());
      assertEquals(0, map0.size());
      assertNotNull(map0);
      
      httpConnection_Response1.headers = map0;
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response1.charset());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.method());
      assertTrue(map0.isEmpty());
      assertEquals(0, map0.size());
      assertEquals(0, httpConnection_Response1.headers.size());
      assertTrue(httpConnection_Response1.headers.isEmpty());
      
      // Undeclared exception!
      try { 
        httpConnection_Response1.parse();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Request must be executed (with .execute(), .get(), or .post() before parsing response
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test25()  throws Throwable  {
      Connection.Request connection_Request0 = null;
      // Undeclared exception!
      try { 
        HttpConnection.Response.setOutputContentType(connection_Request0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.helper.HttpConnection$Response", e);
      }
  }

  @Test(timeout = 11000)
  public void test26()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertNotNull(httpConnection_Request0);
      
      Parser parser0 = null;
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.parser(parser0);
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.parserDefined);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertNotNull(httpConnection_Request1);
      
      HttpConnection.KeyVal httpConnection_KeyVal0 = new HttpConnection.KeyVal();
      assertNull(httpConnection_KeyVal0.value());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertNull(httpConnection_KeyVal0.key());
      assertNotNull(httpConnection_KeyVal0);
      
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request1.data((Connection.KeyVal) httpConnection_KeyVal0);
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertNull(httpConnection_KeyVal0.value());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertNull(httpConnection_KeyVal0.key());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.parserDefined);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertNotNull(httpConnection_Request2);
      
      HttpConnection.Request httpConnection_Request3 = httpConnection_Request2.timeout(httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertNull(httpConnection_KeyVal0.value());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertNull(httpConnection_KeyVal0.key());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(3000, httpConnection_Request3.timeout());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.parserDefined);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(3000, httpConnection_Request3.timeoutMilliseconds);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertTrue(httpConnection_Request3.followRedirects);
      assertTrue(httpConnection_Request3.parserDefined);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertNotNull(httpConnection_Request3);
      
      String string0 = "";
      Map.Entry<String, String> map_Entry0 = httpConnection_Request1.scanHeaders(string0);
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.parserDefined);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertNull(map_Entry0);
      
      HttpConnection.Request httpConnection_Request4 = (HttpConnection.Request)httpConnection_Request3.ignoreContentType(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertNull(httpConnection_KeyVal0.value());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertNull(httpConnection_KeyVal0.key());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertEquals(3000, httpConnection_Request3.timeout());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertTrue(httpConnection_Request3.followRedirects());
      assertTrue(httpConnection_Request3.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertTrue(httpConnection_Request4.ignoreContentType());
      assertEquals(3000, httpConnection_Request4.timeout());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.parserDefined);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.ignoreContentType);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.parserDefined);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(3000, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertTrue(httpConnection_Request3.followRedirects);
      assertTrue(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.parserDefined);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request4.timeoutMilliseconds);
      assertTrue(httpConnection_Request4.validateTSLCertificates);
      assertTrue(httpConnection_Request4.followRedirects);
      assertTrue(httpConnection_Request4.ignoreContentType);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertTrue(httpConnection_Request4.parserDefined);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertNotNull(httpConnection_Request4);
      
      String string1 = HttpConnection.Response.setOutputContentType(httpConnection_Request4);
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertNull(httpConnection_KeyVal0.value());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertNull(httpConnection_KeyVal0.key());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertEquals(3000, httpConnection_Request3.timeout());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertTrue(httpConnection_Request3.followRedirects());
      assertTrue(httpConnection_Request3.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertTrue(httpConnection_Request4.ignoreContentType());
      assertEquals(3000, httpConnection_Request4.timeout());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.parserDefined);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.ignoreContentType);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.parserDefined);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(3000, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertTrue(httpConnection_Request3.followRedirects);
      assertTrue(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.parserDefined);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request4.timeoutMilliseconds);
      assertTrue(httpConnection_Request4.validateTSLCertificates);
      assertTrue(httpConnection_Request4.followRedirects);
      assertTrue(httpConnection_Request4.ignoreContentType);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertTrue(httpConnection_Request4.parserDefined);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertNull(string1);
  }

  @Test(timeout = 11000)
  public void test27()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertNotNull(httpConnection_Request0);
      
      boolean boolean0 = true;
      HttpConnection.Request httpConnection_Request1 = (HttpConnection.Request)httpConnection_Request0.followRedirects(boolean0);
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.parserDefined);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertNotNull(httpConnection_Request1);
      
      // Undeclared exception!
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 11000)
  public void test28()  throws Throwable  {
      Connection.Request connection_Request0 = null;
      // Undeclared exception!
      try { 
        HttpConnection.Response.execute(connection_Request0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Request must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test29()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertNotNull(httpConnection_Request0);
      
      boolean boolean0 = false;
      HttpConnection.Request httpConnection_Request1 = (HttpConnection.Request)httpConnection_Request0.ignoreHttpErrors(boolean0);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertNotNull(httpConnection_Request1);
      
      HttpConnection.Response httpConnection_Response0 = null;
      // Undeclared exception!
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request1, httpConnection_Response0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 11000)
  public void test30()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertNotNull(httpConnection_Request0);
      
      boolean boolean0 = true;
      httpConnection_Request0.parserDefined = boolean0;
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      
      // Undeclared exception!
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 11000)
  public void test31()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertNotNull(httpConnection_Request0);
      
      // Undeclared exception!
      try { 
        HttpConnection.Response.createConnection(httpConnection_Request0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 11000)
  public void test32()  throws Throwable  {
      HttpConnection.Response.initUnSecureTSL();
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertNotNull(httpConnection_Request0);
      
      HttpConnection.KeyVal httpConnection_KeyVal0 = HttpConnection.KeyVal.create(httpConnection_Request0.postDataCharset, httpConnection_Request0.postDataCharset);
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertEquals("UTF-8", httpConnection_KeyVal0.value());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertNotNull(httpConnection_KeyVal0);
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.data((Connection.KeyVal) httpConnection_KeyVal0);
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertEquals("UTF-8", httpConnection_KeyVal0.value());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.parserDefined);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertNotNull(httpConnection_Request1);
      
      // Undeclared exception!
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 11000)
  public void test33()  throws Throwable  {
      Connection.Request connection_Request0 = null;
      // Undeclared exception!
      try { 
        HttpConnection.Response.createConnection(connection_Request0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.helper.HttpConnection$Response", e);
      }
  }

  @Test(timeout = 11000)
  public void test34()  throws Throwable  {
      HttpConnection.Response.initUnSecureTSL();
      HostnameVerifier hostnameVerifier0 = HttpConnection.Response.getInsecureVerifier();
      assertNotNull(hostnameVerifier0);
      
      HttpConnection.Response.initUnSecureTSL();
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNotNull(httpConnection_Response0);
      
      int int0 = 0;
      httpConnection_Response0.numRedirects = int0;
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      
      // Undeclared exception!
      try { 
        HttpConnection.Response.createConnection(httpConnection_Response0.req);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.helper.HttpConnection$Response", e);
      }
  }

  @Test(timeout = 11000)
  public void test35()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertNotNull(httpConnection_Response0);
      
      // Undeclared exception!
      try { 
        httpConnection_Response0.body();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Request must be executed (with .execute(), .get(), or .post() before getting response body
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test36()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertNotNull(httpConnection_Request0);
      
      int int0 = 41;
      String string0 = "--";
      String string1 = "org.jsoup.helper.HttpConnection$Response$2";
      HttpConnection.Request httpConnection_Request1 = (HttpConnection.Request)httpConnection_Request0.cookie(string0, string1);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.parserDefined);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertNotNull(httpConnection_Request1);
      
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request0.timeout(int0);
      assertEquals(41, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(41, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertEquals(41, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertFalse(httpConnection_Request2.parserDefined);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertEquals(41, httpConnection_Request2.timeoutMilliseconds);
      assertNotNull(httpConnection_Request2);
      
      HttpConnection.Request httpConnection_Request3 = httpConnection_Request2.parser(httpConnection_Request0.parser);
      assertEquals(41, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(41, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(41, httpConnection_Request3.timeout());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertEquals(41, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.parserDefined);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertEquals(41, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.parserDefined);
      assertEquals(41, httpConnection_Request3.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertTrue(httpConnection_Request3.followRedirects);
      assertNotNull(httpConnection_Request3);
      
      HttpConnection.KeyVal httpConnection_KeyVal0 = new HttpConnection.KeyVal();
      assertNull(httpConnection_KeyVal0.key());
      assertNull(httpConnection_KeyVal0.value());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertNotNull(httpConnection_KeyVal0);
      
      String string2 = "";
      HttpConnection.KeyVal httpConnection_KeyVal1 = httpConnection_KeyVal0.value(string2);
      assertNull(httpConnection_KeyVal0.key());
      assertEquals("", httpConnection_KeyVal0.value());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertFalse(httpConnection_KeyVal1.hasInputStream());
      assertEquals("", httpConnection_KeyVal1.value());
      assertNull(httpConnection_KeyVal1.key());
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertSame(httpConnection_KeyVal1, httpConnection_KeyVal0);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertNotNull(httpConnection_KeyVal1);
      
      URL uRL0 = MockURL.getHttpExample();
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNotNull(uRL0);
      
      HttpConnection.Request httpConnection_Request4 = httpConnection_Request3.data((Connection.KeyVal) httpConnection_KeyVal0);
      assertEquals(41, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(41, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(41, httpConnection_Request3.timeout());
      assertNull(httpConnection_KeyVal0.key());
      assertEquals("", httpConnection_KeyVal0.value());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertEquals(41, httpConnection_Request4.timeout());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertEquals(41, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.parserDefined);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertEquals(41, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.parserDefined);
      assertEquals(41, httpConnection_Request3.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertTrue(httpConnection_Request3.followRedirects);
      assertTrue(httpConnection_Request4.parserDefined);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertEquals(41, httpConnection_Request4.timeoutMilliseconds);
      assertTrue(httpConnection_Request4.followRedirects);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertTrue(httpConnection_Request4.validateTSLCertificates);
      assertNotNull(httpConnection_Request4);
      
      HttpConnection.Request httpConnection_Request5 = (HttpConnection.Request)httpConnection_Request2.url(uRL0);
      assertEquals(41, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(41, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request5.postDataCharset());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertEquals(41, httpConnection_Request5.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertTrue(httpConnection_Request5.followRedirects());
      assertTrue(httpConnection_Request5.validateTLSCertificates());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertEquals(41, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.parserDefined);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertEquals(41, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request5.parserDefined);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertTrue(httpConnection_Request5.followRedirects);
      assertTrue(httpConnection_Request5.validateTSLCertificates);
      assertEquals(41, httpConnection_Request5.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertNotNull(httpConnection_Request5);
      
      String string3 = "KXf";
      HttpConnection.KeyVal httpConnection_KeyVal2 = HttpConnection.KeyVal.create(httpConnection_Request4.postDataCharset, string3);
      assertEquals(41, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(41, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(41, httpConnection_Request3.timeout());
      assertNull(httpConnection_KeyVal0.key());
      assertEquals("", httpConnection_KeyVal0.value());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertEquals(41, httpConnection_Request4.timeout());
      assertFalse(httpConnection_KeyVal2.hasInputStream());
      assertEquals("UTF-8", httpConnection_KeyVal2.key());
      assertEquals("KXf", httpConnection_KeyVal2.value());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request5);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertNotSame(httpConnection_KeyVal0, httpConnection_KeyVal2);
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertSame(httpConnection_Request4, httpConnection_Request5);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertNotSame(string3, string2);
      assertNotSame(string3, string1);
      assertNotSame(string3, string0);
      assertNotSame(httpConnection_KeyVal2, httpConnection_KeyVal0);
      assertNotSame(httpConnection_KeyVal2, httpConnection_KeyVal1);
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertFalse(httpConnection_KeyVal2.equals((Object)httpConnection_KeyVal0));
      assertFalse(httpConnection_KeyVal2.equals((Object)httpConnection_KeyVal1));
      assertEquals(41, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.parserDefined);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertEquals(41, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.parserDefined);
      assertEquals(41, httpConnection_Request3.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertTrue(httpConnection_Request3.followRedirects);
      assertTrue(httpConnection_Request4.parserDefined);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertEquals(41, httpConnection_Request4.timeoutMilliseconds);
      assertTrue(httpConnection_Request4.followRedirects);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertTrue(httpConnection_Request4.validateTSLCertificates);
      assertNotNull(httpConnection_KeyVal2);
      
      HttpConnection.Request httpConnection_Request6 = httpConnection_Request3.data((Connection.KeyVal) httpConnection_KeyVal1);
      assertEquals(41, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(41, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(41, httpConnection_Request3.timeout());
      assertNull(httpConnection_KeyVal0.key());
      assertEquals("", httpConnection_KeyVal0.value());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertFalse(httpConnection_KeyVal1.hasInputStream());
      assertEquals("", httpConnection_KeyVal1.value());
      assertNull(httpConnection_KeyVal1.key());
      assertEquals(41, httpConnection_Request6.timeout());
      assertFalse(httpConnection_Request6.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request6.method());
      assertTrue(httpConnection_Request6.validateTLSCertificates());
      assertTrue(httpConnection_Request6.followRedirects());
      assertEquals(1048576, httpConnection_Request6.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request6.postDataCharset());
      assertFalse(httpConnection_Request6.ignoreContentType());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request6);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request6);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request6);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request5);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertNotSame(httpConnection_KeyVal0, httpConnection_KeyVal2);
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertNotSame(string2, string0);
      assertNotSame(string2, string3);
      assertNotSame(string2, string1);
      assertNotSame(httpConnection_KeyVal1, httpConnection_KeyVal2);
      assertSame(httpConnection_KeyVal1, httpConnection_KeyVal0);
      assertSame(httpConnection_Request6, httpConnection_Request2);
      assertSame(httpConnection_Request6, httpConnection_Request4);
      assertSame(httpConnection_Request6, httpConnection_Request0);
      assertSame(httpConnection_Request6, httpConnection_Request3);
      assertSame(httpConnection_Request6, httpConnection_Request5);
      assertSame(httpConnection_Request6, httpConnection_Request1);
      assertFalse(httpConnection_KeyVal0.equals((Object)httpConnection_KeyVal2));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string3));
      assertFalse(string2.equals((Object)string1));
      assertFalse(httpConnection_KeyVal1.equals((Object)httpConnection_KeyVal2));
      assertEquals(41, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.parserDefined);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertEquals(41, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.parserDefined);
      assertEquals(41, httpConnection_Request3.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertTrue(httpConnection_Request3.followRedirects);
      assertEquals(1048576, httpConnection_Request6.maxBodySizeBytes);
      assertTrue(httpConnection_Request6.validateTSLCertificates);
      assertEquals(41, httpConnection_Request6.timeoutMilliseconds);
      assertTrue(httpConnection_Request6.parserDefined);
      assertTrue(httpConnection_Request6.followRedirects);
      assertFalse(httpConnection_Request6.ignoreHttpErrors);
      assertFalse(httpConnection_Request6.ignoreContentType);
      assertNotNull(httpConnection_Request6);
      
      httpConnection_Request6.ignoreContentType = httpConnection_Request3.followRedirects;
      assertEquals(41, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertEquals(41, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertTrue(httpConnection_Request3.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertEquals(41, httpConnection_Request3.timeout());
      assertNull(httpConnection_KeyVal0.key());
      assertEquals("", httpConnection_KeyVal0.value());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertFalse(httpConnection_KeyVal1.hasInputStream());
      assertEquals("", httpConnection_KeyVal1.value());
      assertNull(httpConnection_KeyVal1.key());
      assertEquals(41, httpConnection_Request6.timeout());
      assertTrue(httpConnection_Request6.ignoreContentType());
      assertFalse(httpConnection_Request6.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request6.method());
      assertTrue(httpConnection_Request6.validateTLSCertificates());
      assertTrue(httpConnection_Request6.followRedirects());
      assertEquals(1048576, httpConnection_Request6.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request6.postDataCharset());
      
      // Undeclared exception!
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request6);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.net.URLEncoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test37()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertNotNull(httpConnection_Response0);
      
      String string0 = "l=#HD(";
      Connection.Method connection_Method0 = Connection.Method.PUT;
      httpConnection_Response0.method = connection_Method0;
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertEquals(Connection.Method.PUT, httpConnection_Response0.method());
      assertTrue(httpConnection_Response0.method.hasBody());
      
      HttpConnection.Response httpConnection_Response1 = (HttpConnection.Response)httpConnection_Response0.removeHeader(string0);
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertEquals(Connection.Method.PUT, httpConnection_Response0.method());
      assertEquals(Connection.Method.PUT, httpConnection_Response1.method());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.statusMessage());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.charset());
      assertSame(httpConnection_Response0, httpConnection_Response1);
      assertSame(httpConnection_Response1, httpConnection_Response0);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNotNull(httpConnection_Response1);
      
      // Undeclared exception!
      try { 
        httpConnection_Response0.body();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Request must be executed (with .execute(), .get(), or .post() before getting response body
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test38()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertNotNull(httpConnection_Response0);
      
      String string0 = httpConnection_Response0.contentType();
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertNull(string0);
  }

  @Test(timeout = 11000)
  public void test39()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertNotNull(httpConnection_Response0);
      
      String string0 = "";
      Document document0 = new Document(string0);
      assertEquals(Document.QuirksMode.noQuirks, document0.quirksMode());
      assertEquals("", document0.location());
      assertEquals("", document0.baseUri());
      assertEquals("#root", document0.tagName());
      assertFalse(document0.isBlock());
      assertEquals(0, document0.siblingIndex());
      assertFalse(document0.updateMetaCharsetElement());
      assertEquals("#document", document0.nodeName());
      assertEquals(0, document0.childNodeSize());
      assertNotNull(document0);
      
      Map<String, String> map0 = document0.dataset();
      assertEquals(Document.QuirksMode.noQuirks, document0.quirksMode());
      assertEquals("", document0.location());
      assertEquals("", document0.baseUri());
      assertEquals("#root", document0.tagName());
      assertFalse(document0.isBlock());
      assertEquals(0, document0.siblingIndex());
      assertFalse(document0.updateMetaCharsetElement());
      assertEquals("#document", document0.nodeName());
      assertEquals(0, document0.childNodeSize());
      assertEquals(0, map0.size());
      assertTrue(map0.isEmpty());
      assertNotNull(map0);
      
      Document document1 = document0.clone();
      assertEquals(Document.QuirksMode.noQuirks, document0.quirksMode());
      assertEquals("", document0.location());
      assertEquals("", document0.baseUri());
      assertEquals("#root", document0.tagName());
      assertFalse(document0.isBlock());
      assertEquals(0, document0.siblingIndex());
      assertFalse(document0.updateMetaCharsetElement());
      assertEquals("#document", document0.nodeName());
      assertEquals(0, document0.childNodeSize());
      assertFalse(document1.updateMetaCharsetElement());
      assertEquals(0, document1.childNodeSize());
      assertEquals("", document1.baseUri());
      assertEquals("", document1.location());
      assertEquals(Document.QuirksMode.noQuirks, document1.quirksMode());
      assertEquals("#root", document1.tagName());
      assertFalse(document1.isBlock());
      assertEquals("#document", document1.nodeName());
      assertEquals(0, document1.siblingIndex());
      assertNotSame(document0, document1);
      assertNotSame(document1, document0);
      assertTrue(document1.equals((Object)document0));
      assertNotNull(document1);
      
      String string1 = "";
      HttpConnection.CONTENT_ENCODING = string1;
      httpConnection_Response0.headers = map0;
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(Document.QuirksMode.noQuirks, document0.quirksMode());
      assertEquals("", document0.location());
      assertEquals("", document0.baseUri());
      assertEquals("#root", document0.tagName());
      assertFalse(document0.isBlock());
      assertEquals(0, document0.siblingIndex());
      assertFalse(document0.updateMetaCharsetElement());
      assertEquals("#document", document0.nodeName());
      assertEquals(0, document0.childNodeSize());
      assertEquals(0, map0.size());
      assertTrue(map0.isEmpty());
      assertTrue(httpConnection_Response0.headers.isEmpty());
      assertEquals(0, httpConnection_Response0.headers.size());
      
      String string2 = httpConnection_Response0.contentType();
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertNull(string2);
      
      // Undeclared exception!
      try { 
        HttpConnection.Response.getRequestCookieString(httpConnection_Response0.req);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.helper.HttpConnection$Response", e);
      }
  }

  @Test(timeout = 11000)
  public void test40()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertNotNull(httpConnection_Request0);
      
      String string0 = "Y/I&7j/e&Le|hpCe1";
      URL uRL0 = MockURL.getFileExample();
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getHost());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNotNull(uRL0);
      
      httpConnection_Request0.url = uRL0;
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getHost());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(httpConnection_Request0.url.getRef());
      assertEquals((-1), httpConnection_Request0.url.getDefaultPort());
      assertNull(httpConnection_Request0.url.getUserInfo());
      assertNull(httpConnection_Request0.url.getQuery());
      assertEquals((-1), httpConnection_Request0.url.getPort());
      assertEquals("some", httpConnection_Request0.url.getHost());
      assertEquals("some", httpConnection_Request0.url.getAuthority());
      assertEquals("file", httpConnection_Request0.url.getProtocol());
      
      boolean boolean0 = true;
      HttpConnection.Request httpConnection_Request1 = (HttpConnection.Request)httpConnection_Request0.followRedirects(boolean0);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.parserDefined);
      assertTrue(httpConnection_Request1.followRedirects);
      assertNotNull(httpConnection_Request1);
      
      boolean boolean1 = httpConnection_Request0.hasHeader(string0);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertFalse(boolean1);
      assertFalse(boolean1 == boolean0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      
      // Undeclared exception!
      try { 
        HttpConnection.Response.createConnection(httpConnection_Request0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.helper.HttpConnection$Response", e);
      }
  }

  @Test(timeout = 11000)
  public void test41()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertNotNull(httpConnection_Response0);
      
      Connection.Request connection_Request0 = httpConnection_Response0.req;
      assertNull(connection_Request0);
      
      // Undeclared exception!
      try { 
        HttpConnection.Response.execute(connection_Request0, httpConnection_Response0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Request must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test42()  throws Throwable  {
      String string0 = ">(0TV%+{S1t";
      HttpConnection.MULTIPART_FORM_DATA = string0;
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertNotNull(httpConnection_Request0);
      
      String string1 = "UTF-8";
      String string2 = "oY1i'v#oC\\.x6-I[v";
      boolean boolean0 = false;
      String string3 = null;
      long long0 = 0L;
      String string4 = "E\":Cl|>y=67J";
      String string5 = "z<CWN:H!";
      HttpURLConnection httpURLConnection0 = null;
      // Undeclared exception!
      try { 
        HttpConnection.Response.createHeaderMap(httpURLConnection0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.helper.HttpConnection$Response", e);
      }
  }

  @Test(timeout = 11000)
  public void test43()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertNotNull(httpConnection_Response0);
      
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      assertNotNull(hashMap0);
      
      httpConnection_Response0.processResponseHeaders(hashMap0);
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      
      HttpConnection.Response.MAX_REDIRECTS = httpConnection_Response0.MAX_REDIRECTS;
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      
      // Undeclared exception!
      try { 
        httpConnection_Response0.bodyAsBytes();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Request must be executed (with .execute(), .get(), or .post() before getting response body
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test44()  throws Throwable  {
      HttpURLConnection httpURLConnection0 = null;
      // Undeclared exception!
      try { 
        HttpConnection.Response.createHeaderMap(httpURLConnection0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.helper.HttpConnection$Response", e);
      }
  }

  @Test(timeout = 11000)
  public void test45()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertNotNull(httpConnection_Response0);
      
      HttpConnection.Response httpConnection_Response1 = new HttpConnection.Response(httpConnection_Response0);
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.statusMessage());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(1, httpConnection_Response1.numRedirects);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertNotNull(httpConnection_Response1);
      
      // Undeclared exception!
      try { 
        httpConnection_Response1.bodyAsBytes();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Request must be executed (with .execute(), .get(), or .post() before getting response body
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test46()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertNotNull(httpConnection_Response0);
      
      int int0 = (-754);
      httpConnection_Response0.statusCode = int0;
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals((-754), httpConnection_Response0.statusCode());
      
      String string0 = "92zY\\MSJKh4VQ4";
      httpConnection_Response0.contentType = string0;
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals("92zY\\MSJKh4VQ4", httpConnection_Response0.contentType());
      assertEquals((-754), httpConnection_Response0.statusCode());
      
      String string1 = "Abngc<b,";
      httpConnection_Response0.contentType = string1;
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals("Abngc<b,", httpConnection_Response0.contentType());
      assertEquals((-754), httpConnection_Response0.statusCode());
      
      HostnameVerifier hostnameVerifier0 = HttpConnection.Response.getInsecureVerifier();
      assertNotNull(hostnameVerifier0);
      
      String string2 = httpConnection_Response0.statusMessage();
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals("Abngc<b,", httpConnection_Response0.contentType());
      assertEquals((-754), httpConnection_Response0.statusCode());
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertEquals((-754), httpConnection_Response0.statusCode);
      assertNull(string2);
      
      // Undeclared exception!
      try { 
        httpConnection_Response0.bodyAsBytes();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Request must be executed (with .execute(), .get(), or .post() before getting response body
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test47()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertNotNull(httpConnection_Request0);
      
      int int0 = 426;
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.timeout(int0);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(426, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(426, httpConnection_Request1.timeout());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(426, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request1.parserDefined);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(426, httpConnection_Request1.timeoutMilliseconds);
      assertNotNull(httpConnection_Request1);
      
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request1.parser(httpConnection_Request0.parser);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(426, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(426, httpConnection_Request1.timeout());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(426, httpConnection_Request2.timeout());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.parserDefined);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(426, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.parserDefined);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(426, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(426, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.parserDefined);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertNotNull(httpConnection_Request2);
      
      int int1 = 1036;
      HttpConnection.Request httpConnection_Request3 = (HttpConnection.Request)httpConnection_Request2.maxBodySize(int1);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1036, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(426, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals(1036, httpConnection_Request1.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(426, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(426, httpConnection_Request2.timeout());
      assertEquals(1036, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertTrue(httpConnection_Request3.followRedirects());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertEquals(426, httpConnection_Request3.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertEquals(1036, httpConnection_Request3.maxBodySize());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertEquals(1036, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.parserDefined);
      assertEquals(426, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1036, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.parserDefined);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(426, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(426, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1036, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.parserDefined);
      assertTrue(httpConnection_Request3.parserDefined);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(426, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertEquals(1036, httpConnection_Request3.maxBodySizeBytes);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertNotNull(httpConnection_Request3);
      
      String string0 = "hLe`-ta'|$6Ns@K";
      MockPrintStream mockPrintStream0 = new MockPrintStream(string0, httpConnection_Request1.postDataCharset);
      assertFalse(int0 == int1);
      assertEquals(1036, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.parserDefined);
      assertEquals(426, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1036, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.parserDefined);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(426, httpConnection_Request1.timeoutMilliseconds);
      assertNotNull(mockPrintStream0);
      
      String string1 = "=";
      HttpConnection.Response.writePost(httpConnection_Request3, mockPrintStream0, string1);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1036, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(426, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals(1036, httpConnection_Request1.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(426, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(426, httpConnection_Request2.timeout());
      assertEquals(1036, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertTrue(httpConnection_Request3.followRedirects());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertEquals(426, httpConnection_Request3.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertEquals(1036, httpConnection_Request3.maxBodySize());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(1036, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.parserDefined);
      assertEquals(426, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1036, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.parserDefined);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(426, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(426, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1036, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.parserDefined);
      assertTrue(httpConnection_Request3.parserDefined);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(426, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertEquals(1036, httpConnection_Request3.maxBodySizeBytes);
      assertFalse(httpConnection_Request3.ignoreContentType);
  }

  @Test(timeout = 11000)
  public void test48()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = null;
      HttpConnection.Response httpConnection_Response1 = new HttpConnection.Response(httpConnection_Response0);
      assertNull(httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.contentType());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.method());
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertFalse(httpConnection_Response1.executed);
      assertNotNull(httpConnection_Response1);
      
      String string0 = null;
      String string1 = "application/x-www-form-urlencoded";
      String string2 = httpConnection_Response1.cookie(string1);
      assertNull(httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.contentType());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.method());
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertFalse(httpConnection_Response1.executed);
      assertNull(string2);
      
      HttpConnection.FORM_URL_ENCODED = string0;
      String string3 = httpConnection_Response1.contentType();
      assertNull(httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.contentType());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.method());
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertFalse(httpConnection_Response1.executed);
      assertNull(string3);
      
      int int0 = httpConnection_Response1.statusCode();
      assertNull(httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.contentType());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.method());
      assertEquals(0, int0);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertFalse(httpConnection_Response1.executed);
      
      HttpConnection.Response.MAX_REDIRECTS = httpConnection_Response1.numRedirects;
      assertNull(httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.contentType());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.method());
      
      // Undeclared exception!
      try { 
        httpConnection_Response1.body();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Request must be executed (with .execute(), .get(), or .post() before getting response body
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test49()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertNotNull(httpConnection_Request0);
      
      boolean boolean0 = true;
      httpConnection_Request0.validateTSLCertificates = boolean0;
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      
      Parser parser0 = Parser.xmlParser();
      assertFalse(parser0.isTrackErrors());
      assertNotNull(parser0);
      
      boolean boolean1 = false;
      httpConnection_Request0.validateTSLCertificates = boolean1;
      assertFalse(httpConnection_Request0.validateTLSCertificates());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.parser(parser0);
      assertFalse(httpConnection_Request0.validateTLSCertificates());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(parser0.isTrackErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.parserDefined);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertNotNull(httpConnection_Request1);
      
      int int0 = 861;
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request1.timeout(int0);
      assertFalse(httpConnection_Request0.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(861, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(parser0.isTrackErrors());
      assertEquals(861, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertFalse(httpConnection_Request2.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(861, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.parserDefined);
      assertEquals(861, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.parserDefined);
      assertEquals(861, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request2.parserDefined);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertEquals(861, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.validateTSLCertificates);
      assertNotNull(httpConnection_Request2);
      
      boolean boolean2 = true;
      HttpConnection.Request httpConnection_Request3 = (HttpConnection.Request)httpConnection_Request2.ignoreContentType(boolean2);
      assertFalse(httpConnection_Request0.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(861, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(parser0.isTrackErrors());
      assertEquals(861, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertFalse(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(861, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals(861, httpConnection_Request3.timeout());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertTrue(httpConnection_Request3.ignoreContentType());
      assertFalse(httpConnection_Request3.validateTLSCertificates());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertFalse(boolean2 == boolean1);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.parserDefined);
      assertEquals(861, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.parserDefined);
      assertEquals(861, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request2.parserDefined);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertEquals(861, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.ignoreContentType);
      assertFalse(httpConnection_Request2.validateTSLCertificates);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertFalse(httpConnection_Request3.validateTSLCertificates);
      assertTrue(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.parserDefined);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.followRedirects);
      assertEquals(861, httpConnection_Request3.timeoutMilliseconds);
      assertNotNull(httpConnection_Request3);
      
      OutputStream outputStream0 = null;
      // Undeclared exception!
      try { 
        HttpConnection.Response.writePost(httpConnection_Request3, outputStream0, httpConnection_Request1.postDataCharset);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Writer", e);
      }
  }

  @Test(timeout = 11000)
  public void test50()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertNotNull(httpConnection_Response0);
      
      HttpConnection.Response httpConnection_Response1 = new HttpConnection.Response(httpConnection_Response0);
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.statusMessage());
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(1, httpConnection_Response1.numRedirects);
      assertNotNull(httpConnection_Response1);
      
      String string0 = httpConnection_Response1.charset();
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.statusMessage());
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(1, httpConnection_Response1.numRedirects);
      assertNull(string0);
      
      // Undeclared exception!
      try { 
        httpConnection_Response0.body();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Request must be executed (with .execute(), .get(), or .post() before getting response body
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test51()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      String string0 = "";
      boolean boolean0 = FileSystemHandling.appendLineToFile(evoSuiteFile0, string0);
      assertFalse(boolean0);
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNotNull(httpConnection_Response0);
      
      int int0 = 385;
      boolean boolean1 = true;
      httpConnection_Response0.executed = boolean1;
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>(int0);
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, hashMap0.size());
      assertNotNull(hashMap0);
      
      String string1 = "d;{nTu`S@H>T[";
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      assertEquals(0, linkedList0.size());
      assertNotNull(linkedList0);
      
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>(linkedList0);
      assertEquals(0, linkedList0.size());
      assertEquals(0, linkedList1.size());
      assertTrue(linkedList1.equals((Object)linkedList0));
      assertNotNull(linkedList1);
      
      LinkedList<String> linkedList2 = new LinkedList<String>();
      assertEquals(0, linkedList2.size());
      assertFalse(linkedList2.contains(string0));
      assertNotNull(linkedList2);
      
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList1, (Collection<String>) linkedList2);
      assertEquals(0, linkedList0.size());
      assertEquals(0, linkedList1.size());
      assertEquals(0, linkedList2.size());
      assertTrue(list0.isEmpty());
      assertEquals(0, list0.size());
      assertNotSame(linkedList0, linkedList1);
      assertNotSame(linkedList1, linkedList0);
      assertFalse(linkedList2.contains(string0));
      assertFalse(list0.contains(string0));
      assertTrue(linkedList0.equals((Object)linkedList1));
      assertTrue(linkedList1.equals((Object)linkedList0));
      assertNotNull(list0);
      
      List<String> list1 = hashMap0.put(string1, list0);
      assertEquals(1, hashMap0.size());
      assertFalse(hashMap0.isEmpty());
      assertEquals(0, linkedList0.size());
      assertEquals(0, linkedList1.size());
      assertEquals(0, linkedList2.size());
      assertTrue(list0.isEmpty());
      assertEquals(0, list0.size());
      assertNotSame(string1, string0);
      assertNotSame(linkedList0, linkedList1);
      assertNotSame(linkedList1, linkedList0);
      assertFalse(linkedList2.contains(string0));
      assertFalse(list0.contains(string0));
      assertFalse(string1.equals((Object)string0));
      assertTrue(linkedList0.equals((Object)linkedList1));
      assertTrue(linkedList1.equals((Object)linkedList0));
      assertNull(list1);
      
      httpConnection_Response0.processResponseHeaders(hashMap0);
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertEquals(1, hashMap0.size());
      assertFalse(hashMap0.isEmpty());
      assertTrue(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      
      // Undeclared exception!
      try { 
        HttpConnection.Response.execute(httpConnection_Response0.req);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Request must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test52()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertNotNull(httpConnection_Response0);
      
      Connection.Request connection_Request0 = httpConnection_Response0.req;
      assertNull(connection_Request0);
      
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      assertNotNull(hashMap0);
      
      httpConnection_Response0.processResponseHeaders(hashMap0);
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      
      Map<String, List<String>> map0 = null;
      // Undeclared exception!
      try { 
        httpConnection_Response0.processResponseHeaders(map0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.helper.HttpConnection$Response", e);
      }
  }

  @Test(timeout = 11000)
  public void test53()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.parserDefined);
      assertNotNull(httpConnection_Request0);
      
      boolean boolean0 = false;
      URL uRL0 = MockURL.getFileExample();
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertNotNull(uRL0);
      
      httpConnection_Request0.url = uRL0;
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertNull(httpConnection_Request0.url.getRef());
      assertNull(httpConnection_Request0.url.getUserInfo());
      assertEquals((-1), httpConnection_Request0.url.getDefaultPort());
      assertEquals((-1), httpConnection_Request0.url.getPort());
      assertEquals("some", httpConnection_Request0.url.getAuthority());
      assertNull(httpConnection_Request0.url.getQuery());
      assertEquals("some", httpConnection_Request0.url.getHost());
      assertEquals("file", httpConnection_Request0.url.getProtocol());
      
      HttpConnection.Request httpConnection_Request1 = (HttpConnection.Request)httpConnection_Request0.ignoreHttpErrors(boolean0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertNotNull(httpConnection_Request1);
      
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request1);
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // Only http & https protocols supported
         //
         verifyException("org.jsoup.helper.HttpConnection$Response", e);
      }
  }

  @Test(timeout = 11000)
  public void test54()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      String string0 = "";
      boolean boolean0 = FileSystemHandling.appendLineToFile(evoSuiteFile0, string0);
      assertFalse(boolean0);
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertNotNull(httpConnection_Response0);
      
      int int0 = 385;
      httpConnection_Response0.executed = httpConnection_Response0.executed;
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>(int0);
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, hashMap0.size());
      assertNotNull(hashMap0);
      
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      assertEquals(0, linkedList0.size());
      assertNotNull(linkedList0);
      
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>(linkedList0);
      assertEquals(0, linkedList0.size());
      assertEquals(0, linkedList1.size());
      assertTrue(linkedList1.equals((Object)linkedList0));
      assertNotNull(linkedList1);
      
      LinkedList<String> linkedList2 = new LinkedList<String>();
      assertEquals(0, linkedList2.size());
      assertFalse(linkedList2.contains(string0));
      assertNotNull(linkedList2);
      
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList1, (Collection<String>) linkedList2);
      assertEquals(0, linkedList0.size());
      assertEquals(0, linkedList1.size());
      assertEquals(0, linkedList2.size());
      assertTrue(list0.isEmpty());
      assertEquals(0, list0.size());
      assertNotSame(linkedList0, linkedList1);
      assertNotSame(linkedList1, linkedList0);
      assertFalse(linkedList2.contains(string0));
      assertFalse(list0.contains(string0));
      assertTrue(linkedList0.equals((Object)linkedList1));
      assertTrue(linkedList1.equals((Object)linkedList0));
      assertNotNull(list0);
      
      List<String> list1 = hashMap0.put(httpConnection_Response0.contentType, list0);
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertFalse(hashMap0.isEmpty());
      assertEquals(1, hashMap0.size());
      assertEquals(0, linkedList0.size());
      assertEquals(0, linkedList1.size());
      assertEquals(0, linkedList2.size());
      assertTrue(list0.isEmpty());
      assertEquals(0, list0.size());
      assertNotSame(linkedList0, linkedList1);
      assertNotSame(linkedList1, linkedList0);
      assertFalse(linkedList2.contains(string0));
      assertFalse(list0.contains(string0));
      assertTrue(linkedList0.equals((Object)linkedList1));
      assertTrue(linkedList1.equals((Object)linkedList0));
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertNull(list1);
      
      httpConnection_Response0.processResponseHeaders(hashMap0);
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertFalse(hashMap0.isEmpty());
      assertEquals(1, hashMap0.size());
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.statusCode);
      
      // Undeclared exception!
      try { 
        HttpConnection.Response.execute(httpConnection_Response0.req);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Request must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test55()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertNotNull(httpConnection_Request0);
      
      int int0 = 41;
      String string0 = "org.jsoup.helper.HttpConnection$Response$2";
      HttpConnection.Request httpConnection_Request1 = (HttpConnection.Request)httpConnection_Request0.cookie(httpConnection_Request0.postDataCharset, string0);
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.parserDefined);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertNotNull(httpConnection_Request1);
      
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request0.timeout(int0);
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(41, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(41, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(41, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(41, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertFalse(httpConnection_Request2.parserDefined);
      assertNotNull(httpConnection_Request2);
      
      HttpConnection.Request httpConnection_Request3 = httpConnection_Request2.parser(httpConnection_Request0.parser);
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(41, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(41, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertEquals(41, httpConnection_Request3.timeout());
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(41, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request2.parserDefined);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(41, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.parserDefined);
      assertEquals(41, httpConnection_Request3.timeoutMilliseconds);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertNotNull(httpConnection_Request3);
      
      HttpConnection.KeyVal httpConnection_KeyVal0 = new HttpConnection.KeyVal();
      assertNull(httpConnection_KeyVal0.value());
      assertNull(httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertNotNull(httpConnection_KeyVal0);
      
      String string1 = "";
      HttpConnection.KeyVal httpConnection_KeyVal1 = httpConnection_KeyVal0.value(string1);
      assertEquals("", httpConnection_KeyVal0.value());
      assertNull(httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("", httpConnection_KeyVal1.value());
      assertFalse(httpConnection_KeyVal1.hasInputStream());
      assertNull(httpConnection_KeyVal1.key());
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertNotSame(string1, string0);
      assertSame(httpConnection_KeyVal1, httpConnection_KeyVal0);
      assertFalse(string1.equals((Object)string0));
      assertNotNull(httpConnection_KeyVal1);
      
      URL uRL0 = MockURL.getHttpExample();
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNotNull(uRL0);
      
      HttpConnection.Request httpConnection_Request4 = httpConnection_Request3.data((Connection.KeyVal) httpConnection_KeyVal0);
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(41, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(41, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertEquals(41, httpConnection_Request3.timeout());
      assertEquals("", httpConnection_KeyVal0.value());
      assertNull(httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertEquals(41, httpConnection_Request4.timeout());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(41, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request2.parserDefined);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(41, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.parserDefined);
      assertEquals(41, httpConnection_Request3.timeoutMilliseconds);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertTrue(httpConnection_Request4.validateTSLCertificates);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertEquals(41, httpConnection_Request4.timeoutMilliseconds);
      assertTrue(httpConnection_Request4.followRedirects);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertTrue(httpConnection_Request4.parserDefined);
      assertNotNull(httpConnection_Request4);
      
      HttpConnection.Request httpConnection_Request5 = (HttpConnection.Request)httpConnection_Request2.url(uRL0);
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(41, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(41, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertTrue(httpConnection_Request5.validateTLSCertificates());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertTrue(httpConnection_Request5.followRedirects());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertEquals(41, httpConnection_Request5.timeout());
      assertEquals("UTF-8", httpConnection_Request5.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(41, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request2.parserDefined);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(41, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request5.followRedirects);
      assertTrue(httpConnection_Request5.validateTSLCertificates);
      assertEquals(41, httpConnection_Request5.timeoutMilliseconds);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertTrue(httpConnection_Request5.parserDefined);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertNotNull(httpConnection_Request5);
      
      String string2 = "KXf";
      HttpConnection.KeyVal httpConnection_KeyVal2 = HttpConnection.KeyVal.create(httpConnection_Request4.postDataCharset, string2);
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(41, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(41, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertEquals(41, httpConnection_Request3.timeout());
      assertEquals("", httpConnection_KeyVal0.value());
      assertNull(httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertEquals(41, httpConnection_Request4.timeout());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertEquals("KXf", httpConnection_KeyVal2.value());
      assertEquals("UTF-8", httpConnection_KeyVal2.key());
      assertFalse(httpConnection_KeyVal2.hasInputStream());
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request5);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertNotSame(httpConnection_KeyVal0, httpConnection_KeyVal2);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request5);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertNotSame(httpConnection_KeyVal2, httpConnection_KeyVal0);
      assertNotSame(httpConnection_KeyVal2, httpConnection_KeyVal1);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertFalse(httpConnection_KeyVal2.equals((Object)httpConnection_KeyVal0));
      assertFalse(httpConnection_KeyVal2.equals((Object)httpConnection_KeyVal1));
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(41, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request2.parserDefined);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(41, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.parserDefined);
      assertEquals(41, httpConnection_Request3.timeoutMilliseconds);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertTrue(httpConnection_Request4.validateTSLCertificates);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertEquals(41, httpConnection_Request4.timeoutMilliseconds);
      assertTrue(httpConnection_Request4.followRedirects);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertTrue(httpConnection_Request4.parserDefined);
      assertNotNull(httpConnection_KeyVal2);
      
      HttpConnection.Request httpConnection_Request6 = httpConnection_Request3.data((Connection.KeyVal) httpConnection_KeyVal1);
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(41, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(41, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertEquals(41, httpConnection_Request3.timeout());
      assertEquals("", httpConnection_KeyVal0.value());
      assertNull(httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("", httpConnection_KeyVal1.value());
      assertFalse(httpConnection_KeyVal1.hasInputStream());
      assertNull(httpConnection_KeyVal1.key());
      assertTrue(httpConnection_Request6.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request6.method());
      assertEquals(41, httpConnection_Request6.timeout());
      assertFalse(httpConnection_Request6.ignoreHttpErrors());
      assertTrue(httpConnection_Request6.followRedirects());
      assertEquals(1048576, httpConnection_Request6.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request6.postDataCharset());
      assertFalse(httpConnection_Request6.ignoreContentType());
      assertSame(httpConnection_Request0, httpConnection_Request6);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request6);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request6);
      assertSame(httpConnection_Request3, httpConnection_Request5);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertNotSame(httpConnection_KeyVal0, httpConnection_KeyVal2);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertNotSame(httpConnection_KeyVal1, httpConnection_KeyVal2);
      assertSame(httpConnection_KeyVal1, httpConnection_KeyVal0);
      assertSame(httpConnection_Request6, httpConnection_Request4);
      assertSame(httpConnection_Request6, httpConnection_Request5);
      assertSame(httpConnection_Request6, httpConnection_Request1);
      assertSame(httpConnection_Request6, httpConnection_Request0);
      assertSame(httpConnection_Request6, httpConnection_Request3);
      assertSame(httpConnection_Request6, httpConnection_Request2);
      assertFalse(httpConnection_KeyVal0.equals((Object)httpConnection_KeyVal2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(httpConnection_KeyVal1.equals((Object)httpConnection_KeyVal2));
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(41, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request2.parserDefined);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(41, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.parserDefined);
      assertEquals(41, httpConnection_Request3.timeoutMilliseconds);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertTrue(httpConnection_Request6.followRedirects);
      assertFalse(httpConnection_Request6.ignoreContentType);
      assertEquals(41, httpConnection_Request6.timeoutMilliseconds);
      assertFalse(httpConnection_Request6.ignoreHttpErrors);
      assertTrue(httpConnection_Request6.parserDefined);
      assertEquals(1048576, httpConnection_Request6.maxBodySizeBytes);
      assertTrue(httpConnection_Request6.validateTSLCertificates);
      assertNotNull(httpConnection_Request6);
      
      httpConnection_Request6.ignoreContentType = httpConnection_Request3.followRedirects;
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(41, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(41, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.ignoreContentType());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertTrue(httpConnection_Request3.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertEquals(41, httpConnection_Request3.timeout());
      assertEquals("", httpConnection_KeyVal0.value());
      assertNull(httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("", httpConnection_KeyVal1.value());
      assertFalse(httpConnection_KeyVal1.hasInputStream());
      assertNull(httpConnection_KeyVal1.key());
      assertTrue(httpConnection_Request6.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request6.method());
      assertEquals(41, httpConnection_Request6.timeout());
      assertTrue(httpConnection_Request6.ignoreContentType());
      assertFalse(httpConnection_Request6.ignoreHttpErrors());
      assertTrue(httpConnection_Request6.followRedirects());
      assertEquals(1048576, httpConnection_Request6.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request6.postDataCharset());
      
      String string3 = "a";
      HttpURLConnection httpURLConnection0 = HttpConnection.Response.createConnection(httpConnection_Request5);
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(41, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(0L, httpURLConnection0.getIfModifiedSince());
      assertTrue(httpURLConnection0.getDefaultUseCaches());
      assertTrue(httpURLConnection0.getFollowRedirects());
      assertEquals("GET", httpURLConnection0.getRequestMethod());
      assertFalse(httpURLConnection0.getDoOutput());
      assertTrue(httpURLConnection0.getDoInput());
      assertEquals((-1), httpURLConnection0.getContentLength());
      assertTrue(httpURLConnection0.getUseCaches());
      assertEquals("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection:http://www.someFakeButWellFormedURL.org/fooExample", httpURLConnection0.toString());
      assertEquals(41, httpURLConnection0.getConnectTimeout());
      assertFalse(httpURLConnection0.getAllowUserInteraction());
      assertNull(httpURLConnection0.getContentEncoding());
      assertFalse(httpURLConnection0.getInstanceFollowRedirects());
      assertFalse(httpURLConnection0.usingProxy());
      assertNull(httpURLConnection0.getContentType());
      assertFalse(httpURLConnection0.getDefaultAllowUserInteraction());
      assertEquals(41, httpURLConnection0.getReadTimeout());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(41, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.ignoreContentType());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertTrue(httpConnection_Request5.validateTLSCertificates());
      assertTrue(httpConnection_Request5.followRedirects());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertEquals(41, httpConnection_Request5.timeout());
      assertEquals("UTF-8", httpConnection_Request5.postDataCharset());
      assertTrue(httpConnection_Request5.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertSame(httpConnection_Request0, httpConnection_Request6);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request6);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request6);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(41, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request2.parserDefined);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(41, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.followRedirects);
      assertTrue(httpConnection_Request5.ignoreContentType);
      assertTrue(httpConnection_Request5.followRedirects);
      assertTrue(httpConnection_Request5.validateTSLCertificates);
      assertEquals(41, httpConnection_Request5.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertTrue(httpConnection_Request5.parserDefined);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertNotNull(httpURLConnection0);
      
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, hashMap0.size());
      assertNotNull(hashMap0);
      
      MockFileOutputStream mockFileOutputStream0 = null;
      try {
        mockFileOutputStream0 = new MockFileOutputStream(string1);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
      }
  }

  @Test(timeout = 11000)
  public void test56()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertNotNull(httpConnection_Request0);
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertNotNull(httpConnection_Response0);
      
      HttpConnection.Response httpConnection_Response1 = new HttpConnection.Response();
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.contentType());
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response1.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertNotNull(httpConnection_Response1);
      
      httpConnection_Response0.statusMessage = httpConnection_Response1.statusMessage;
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.contentType());
      
      String string0 = "&#xa0;";
      HttpConnection.Response httpConnection_Response2 = (HttpConnection.Response)httpConnection_Response0.removeHeader(string0);
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response2.contentType());
      assertNull(httpConnection_Response2.statusMessage());
      assertNull(httpConnection_Response2.method());
      assertNull(httpConnection_Response2.charset());
      assertEquals(0, httpConnection_Response2.statusCode());
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertSame(httpConnection_Response0, httpConnection_Response2);
      assertSame(httpConnection_Response2, httpConnection_Response0);
      assertNotSame(httpConnection_Response2, httpConnection_Response1);
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response1));
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response2.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response2.executed);
      assertEquals(0, httpConnection_Response2.numRedirects);
      assertNotNull(httpConnection_Response2);
      
      httpConnection_Response1.byteData = httpConnection_Response0.byteData;
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.contentType());
      
      HttpConnection.Response httpConnection_Response3 = new HttpConnection.Response(httpConnection_Response1);
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response3.charset());
      assertEquals(0, httpConnection_Response3.statusCode());
      assertNull(httpConnection_Response3.method());
      assertNull(httpConnection_Response3.contentType());
      assertNull(httpConnection_Response3.statusMessage());
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response2));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response3.equals((Object)httpConnection_Response2));
      assertFalse(httpConnection_Response3.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response3.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response1.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response3.executed);
      assertEquals(0, httpConnection_Response3.statusCode);
      assertEquals(1, httpConnection_Response3.numRedirects);
      assertNotNull(httpConnection_Response3);
      
      HttpConnection.Response httpConnection_Response4 = new HttpConnection.Response(httpConnection_Response3);
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response3.charset());
      assertEquals(0, httpConnection_Response3.statusCode());
      assertNull(httpConnection_Response3.method());
      assertNull(httpConnection_Response3.contentType());
      assertNull(httpConnection_Response3.statusMessage());
      assertEquals(0, httpConnection_Response4.statusCode());
      assertNull(httpConnection_Response4.method());
      assertNull(httpConnection_Response4.charset());
      assertNull(httpConnection_Response4.statusMessage());
      assertNull(httpConnection_Response4.contentType());
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response2));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response3));
      assertFalse(httpConnection_Response3.equals((Object)httpConnection_Response2));
      assertFalse(httpConnection_Response3.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response3.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response4.equals((Object)httpConnection_Response3));
      assertFalse(httpConnection_Response4.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response4.equals((Object)httpConnection_Response2));
      assertFalse(httpConnection_Response4.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response1.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response3.executed);
      assertEquals(0, httpConnection_Response3.statusCode);
      assertEquals(1, httpConnection_Response3.numRedirects);
      assertEquals(0, httpConnection_Response4.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(2, httpConnection_Response4.numRedirects);
      assertFalse(httpConnection_Response4.executed);
      assertNotNull(httpConnection_Response4);
      
      int int0 = 0;
      httpConnection_Response0.statusCode = int0;
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      
      HttpConnection.CONTENT_TYPE = httpConnection_Response0.charset;
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      
      HttpConnection.MULTIPART_FORM_DATA = httpConnection_Response3.charset;
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response3.charset());
      assertEquals(0, httpConnection_Response3.statusCode());
      assertNull(httpConnection_Response3.method());
      assertNull(httpConnection_Response3.contentType());
      assertNull(httpConnection_Response3.statusMessage());
      
      boolean boolean0 = false;
      HttpConnection.Request httpConnection_Request1 = (HttpConnection.Request)httpConnection_Request0.ignoreContentType(boolean0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.parserDefined);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertNotNull(httpConnection_Request1);
      
      // Undeclared exception!
      try { 
        HttpConnection.Response.setOutputContentType(httpConnection_Request1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Header name must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test57()  throws Throwable  {
      String string0 = null;
      String string1 = null;
      int int0 = 1950;
      String string2 = "6";
      HttpConnection.FORM_URL_ENCODED = string2;
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertNotNull(httpConnection_Request0);
      
      Parser parser0 = httpConnection_Request0.parser.setTrackErrors(httpConnection_Request0.maxBodySizeBytes);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(parser0.isTrackErrors());
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertNotNull(parser0);
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.parser(parser0);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(parser0.isTrackErrors());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.parserDefined);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertNotNull(httpConnection_Request1);
      
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      assertNotNull(pipedOutputStream0);
      
      try { 
        HttpConnection.Response.writePost(httpConnection_Request1, pipedOutputStream0, HttpConnection.FORM_URL_ENCODED);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  @Test(timeout = 11000)
  public void test58()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertNotNull(httpConnection_Request0);
      
      int int0 = 41;
      String string0 = "--";
      String string1 = "org.jsoup.helper.HttpConnection$Response$2";
      HttpConnection.Request httpConnection_Request1 = (HttpConnection.Request)httpConnection_Request0.cookie(string0, string1);
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.parserDefined);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertNotNull(httpConnection_Request1);
      
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request0.timeout(int0);
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(41, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(41, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(41, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(41, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertFalse(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertNotNull(httpConnection_Request2);
      
      HttpConnection.Request httpConnection_Request3 = httpConnection_Request2.parser(httpConnection_Request0.parser);
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(41, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(41, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertTrue(httpConnection_Request3.followRedirects());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertEquals(41, httpConnection_Request3.timeout());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(41, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(41, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.parserDefined);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertEquals(41, httpConnection_Request3.timeoutMilliseconds);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.followRedirects);
      assertTrue(httpConnection_Request3.parserDefined);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertNotNull(httpConnection_Request3);
      
      HttpConnection.KeyVal httpConnection_KeyVal0 = new HttpConnection.KeyVal();
      assertNull(httpConnection_KeyVal0.value());
      assertNull(httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertNotNull(httpConnection_KeyVal0);
      
      String string2 = "";
      HttpConnection.KeyVal httpConnection_KeyVal1 = httpConnection_KeyVal0.value(string2);
      assertEquals("", httpConnection_KeyVal0.value());
      assertNull(httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("", httpConnection_KeyVal1.value());
      assertNull(httpConnection_KeyVal1.key());
      assertFalse(httpConnection_KeyVal1.hasInputStream());
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertSame(httpConnection_KeyVal1, httpConnection_KeyVal0);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertNotNull(httpConnection_KeyVal1);
      
      URL uRL0 = MockURL.getHttpExample();
      assertNull(uRL0.getUserInfo());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertNotNull(uRL0);
      
      HttpConnection.Request httpConnection_Request4 = httpConnection_Request3.data((Connection.KeyVal) httpConnection_KeyVal0);
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(41, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(41, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertTrue(httpConnection_Request3.followRedirects());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertEquals(41, httpConnection_Request3.timeout());
      assertEquals("", httpConnection_KeyVal0.value());
      assertNull(httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertEquals(41, httpConnection_Request4.timeout());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertTrue(httpConnection_Request4.followRedirects());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(41, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(41, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.parserDefined);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertEquals(41, httpConnection_Request3.timeoutMilliseconds);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.followRedirects);
      assertTrue(httpConnection_Request3.parserDefined);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertTrue(httpConnection_Request4.validateTSLCertificates);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertTrue(httpConnection_Request4.followRedirects);
      assertTrue(httpConnection_Request4.parserDefined);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertEquals(41, httpConnection_Request4.timeoutMilliseconds);
      assertNotNull(httpConnection_Request4);
      
      String string3 = "http";
      httpConnection_KeyVal0.key = string3;
      assertEquals("http", httpConnection_KeyVal0.key());
      assertEquals("", httpConnection_KeyVal0.value());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      
      HttpConnection.Request httpConnection_Request5 = (HttpConnection.Request)httpConnection_Request2.url(uRL0);
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(41, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(41, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertNull(uRL0.getUserInfo());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals(41, httpConnection_Request5.timeout());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertTrue(httpConnection_Request5.followRedirects());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request5.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertTrue(httpConnection_Request5.validateTLSCertificates());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(41, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(41, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.parserDefined);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request5.validateTSLCertificates);
      assertTrue(httpConnection_Request5.followRedirects);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertTrue(httpConnection_Request5.parserDefined);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertEquals(41, httpConnection_Request5.timeoutMilliseconds);
      assertNotNull(httpConnection_Request5);
      
      String string4 = "KXf";
      HttpConnection.KeyVal httpConnection_KeyVal2 = HttpConnection.KeyVal.create(httpConnection_Request4.postDataCharset, string4);
      assertFalse(httpConnection_KeyVal2.hasInputStream());
      assertEquals("KXf", httpConnection_KeyVal2.value());
      assertEquals("UTF-8", httpConnection_KeyVal2.key());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(41, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(41, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertTrue(httpConnection_Request3.followRedirects());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertEquals(41, httpConnection_Request3.timeout());
      assertEquals("http", httpConnection_KeyVal0.key());
      assertEquals("", httpConnection_KeyVal0.value());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertEquals(41, httpConnection_Request4.timeout());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertTrue(httpConnection_Request4.followRedirects());
      assertNotSame(httpConnection_KeyVal2, httpConnection_KeyVal0);
      assertNotSame(httpConnection_KeyVal2, httpConnection_KeyVal1);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request5);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertNotSame(httpConnection_KeyVal0, httpConnection_KeyVal2);
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertSame(httpConnection_Request4, httpConnection_Request5);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertNotSame(string4, string0);
      assertNotSame(string4, string1);
      assertNotSame(string4, string2);
      assertNotSame(string4, string3);
      assertFalse(httpConnection_KeyVal2.equals((Object)httpConnection_KeyVal0));
      assertFalse(httpConnection_KeyVal2.equals((Object)httpConnection_KeyVal1));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string3));
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(41, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(41, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.parserDefined);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertEquals(41, httpConnection_Request3.timeoutMilliseconds);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.followRedirects);
      assertTrue(httpConnection_Request3.parserDefined);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertTrue(httpConnection_Request4.validateTSLCertificates);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertTrue(httpConnection_Request4.followRedirects);
      assertTrue(httpConnection_Request4.parserDefined);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertEquals(41, httpConnection_Request4.timeoutMilliseconds);
      assertNotNull(httpConnection_KeyVal2);
      
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request5);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // HTTP error fetching URL
         //
         verifyException("org.jsoup.helper.HttpConnection$Response", e);
      }
  }

  @Test(timeout = 11000)
  public void test59()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      String string0 = "";
      boolean boolean0 = FileSystemHandling.appendLineToFile(evoSuiteFile0, string0);
      assertFalse(boolean0);
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNotNull(httpConnection_Response0);
      
      int int0 = 385;
      httpConnection_Response0.charset = string0;
      assertEquals("", httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      
      boolean boolean1 = true;
      httpConnection_Response0.executed = boolean1;
      assertEquals("", httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>(int0);
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, hashMap0.size());
      assertNotNull(hashMap0);
      
      String string1 = "d;{nTu`S@H>T[";
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      assertEquals(0, linkedList0.size());
      assertNotNull(linkedList0);
      
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>(linkedList0);
      assertEquals(0, linkedList0.size());
      assertEquals(0, linkedList1.size());
      assertTrue(linkedList1.equals((Object)linkedList0));
      assertNotNull(linkedList1);
      
      LinkedList<String> linkedList2 = new LinkedList<String>();
      assertEquals(0, linkedList2.size());
      assertFalse(linkedList2.contains(string0));
      assertNotNull(linkedList2);
      
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList1, (Collection<String>) linkedList2);
      assertEquals(0, linkedList0.size());
      assertEquals(0, linkedList1.size());
      assertEquals(0, linkedList2.size());
      assertTrue(list0.isEmpty());
      assertEquals(0, list0.size());
      assertNotSame(linkedList0, linkedList1);
      assertNotSame(linkedList1, linkedList0);
      assertFalse(linkedList2.contains(string0));
      assertFalse(list0.contains(string0));
      assertTrue(linkedList0.equals((Object)linkedList1));
      assertTrue(linkedList1.equals((Object)linkedList0));
      assertNotNull(list0);
      
      List<String> list1 = hashMap0.put(string1, list0);
      assertFalse(hashMap0.isEmpty());
      assertEquals(1, hashMap0.size());
      assertEquals(0, linkedList0.size());
      assertEquals(0, linkedList1.size());
      assertEquals(0, linkedList2.size());
      assertTrue(list0.isEmpty());
      assertEquals(0, list0.size());
      assertNotSame(string1, string0);
      assertNotSame(linkedList0, linkedList1);
      assertNotSame(linkedList1, linkedList0);
      assertFalse(linkedList2.contains(string0));
      assertFalse(list0.contains(string0));
      assertFalse(string1.equals((Object)string0));
      assertTrue(linkedList0.equals((Object)linkedList1));
      assertTrue(linkedList1.equals((Object)linkedList0));
      assertNull(list1);
      
      httpConnection_Response0.processResponseHeaders(hashMap0);
      assertEquals("", httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertFalse(hashMap0.isEmpty());
      assertEquals(1, hashMap0.size());
      assertTrue(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      
      // Undeclared exception!
      try { 
        httpConnection_Response0.bodyAsBytes();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.helper.HttpConnection$Response", e);
      }
  }

  @Test(timeout = 11000)
  public void test60()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertNotNull(httpConnection_Request0);
      
      int int0 = 41;
      String string0 = "org.jsoup.helper.HttpConnection$Response$2";
      HttpConnection.Request httpConnection_Request1 = (HttpConnection.Request)httpConnection_Request0.cookie(httpConnection_Request0.postDataCharset, string0);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.parserDefined);
      assertNotNull(httpConnection_Request1);
      
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request0.timeout(int0);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(41, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertEquals(41, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(41, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertEquals(41, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.parserDefined);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertNotNull(httpConnection_Request2);
      
      HttpConnection.Request httpConnection_Request3 = httpConnection_Request2.parser(httpConnection_Request0.parser);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(41, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertEquals(41, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertEquals(41, httpConnection_Request3.timeout());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(41, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request2.followRedirects);
      assertTrue(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertEquals(41, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.parserDefined);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(41, httpConnection_Request3.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.followRedirects);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertNotNull(httpConnection_Request3);
      
      String string1 = "";
      URL uRL0 = MockURL.getHttpExample();
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNotNull(uRL0);
      
      HttpConnection.Request httpConnection_Request4 = (HttpConnection.Request)httpConnection_Request2.url(uRL0);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(41, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertEquals(41, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertTrue(httpConnection_Request4.followRedirects());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertEquals(41, httpConnection_Request4.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(41, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request2.followRedirects);
      assertTrue(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertEquals(41, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertEquals(41, httpConnection_Request4.timeoutMilliseconds);
      assertTrue(httpConnection_Request4.followRedirects);
      assertTrue(httpConnection_Request4.parserDefined);
      assertTrue(httpConnection_Request4.validateTSLCertificates);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertNotNull(httpConnection_Request4);
      
      String string2 = "KXf";
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request4);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // HTTP error fetching URL
         //
         verifyException("org.jsoup.helper.HttpConnection$Response", e);
      }
  }

  @Test(timeout = 11000)
  public void test61()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      String string0 = "";
      boolean boolean0 = FileSystemHandling.appendLineToFile(evoSuiteFile0, string0);
      assertFalse(boolean0);
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertNotNull(httpConnection_Response0);
      
      boolean boolean1 = true;
      httpConnection_Response0.executed = boolean1;
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>(httpConnection_Response0.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertTrue(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertNotNull(hashMap0);
      
      String string1 = "d;{nTu`S@H>T[";
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      assertEquals(0, linkedList0.size());
      assertNotNull(linkedList0);
      
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>(linkedList0);
      assertEquals(0, linkedList0.size());
      assertEquals(0, linkedList1.size());
      assertTrue(linkedList1.equals((Object)linkedList0));
      assertNotNull(linkedList1);
      
      UnaryOperator<Locale.LanguageRange> unaryOperator0 = UnaryOperator.identity();
      assertNotNull(unaryOperator0);
      
      linkedList1.replaceAll(unaryOperator0);
      assertEquals(0, linkedList0.size());
      assertEquals(0, linkedList1.size());
      assertNotSame(linkedList0, linkedList1);
      assertNotSame(linkedList1, linkedList0);
      assertTrue(linkedList0.equals((Object)linkedList1));
      assertTrue(linkedList1.equals((Object)linkedList0));
      
      LinkedList<String> linkedList2 = new LinkedList<String>();
      assertEquals(0, linkedList2.size());
      assertFalse(linkedList2.contains(string0));
      assertNotNull(linkedList2);
      
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList1, (Collection<String>) linkedList2);
      assertEquals(0, linkedList0.size());
      assertEquals(0, linkedList1.size());
      assertEquals(0, linkedList2.size());
      assertTrue(list0.isEmpty());
      assertEquals(0, list0.size());
      assertNotSame(linkedList0, linkedList1);
      assertNotSame(linkedList1, linkedList0);
      assertFalse(linkedList2.contains(string0));
      assertFalse(list0.contains(string0));
      assertTrue(linkedList0.equals((Object)linkedList1));
      assertTrue(linkedList1.equals((Object)linkedList0));
      assertNotNull(list0);
      
      List<String> list1 = hashMap0.put(string1, list0);
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertEquals(1, hashMap0.size());
      assertFalse(hashMap0.isEmpty());
      assertEquals(0, linkedList0.size());
      assertEquals(0, linkedList1.size());
      assertEquals(0, linkedList2.size());
      assertTrue(list0.isEmpty());
      assertEquals(0, list0.size());
      assertNotSame(string1, string0);
      assertNotSame(linkedList0, linkedList1);
      assertNotSame(linkedList1, linkedList0);
      assertFalse(linkedList2.contains(string0));
      assertFalse(list0.contains(string0));
      assertFalse(string1.equals((Object)string0));
      assertTrue(linkedList0.equals((Object)linkedList1));
      assertTrue(linkedList1.equals((Object)linkedList0));
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertTrue(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertNull(list1);
      
      // Undeclared exception!
      try { 
        httpConnection_Response0.parse();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 11000)
  public void test62()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertNotNull(httpConnection_Request0);
      
      int int0 = 41;
      String string0 = "--";
      String string1 = "org.jsoup.helper.HttpConnection$Response$2";
      HttpConnection.Request httpConnection_Request1 = (HttpConnection.Request)httpConnection_Request0.cookie(string0, string1);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.parserDefined);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertNotNull(httpConnection_Request1);
      
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request0.timeout(int0);
      assertEquals(41, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(41, httpConnection_Request2.timeout());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(41, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(41, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.parserDefined);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertNotNull(httpConnection_Request2);
      
      HttpConnection.Request httpConnection_Request3 = httpConnection_Request2.parser(httpConnection_Request0.parser);
      assertEquals(41, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(41, httpConnection_Request2.timeout());
      assertEquals(41, httpConnection_Request3.timeout());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertTrue(httpConnection_Request3.followRedirects());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(41, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(41, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.followRedirects);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertTrue(httpConnection_Request3.parserDefined);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(41, httpConnection_Request3.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertNotNull(httpConnection_Request3);
      
      HttpConnection.KeyVal httpConnection_KeyVal0 = new HttpConnection.KeyVal();
      assertNull(httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertNull(httpConnection_KeyVal0.value());
      assertNotNull(httpConnection_KeyVal0);
      
      String string2 = "";
      HttpConnection.KeyVal httpConnection_KeyVal1 = httpConnection_KeyVal0.value(string2);
      assertNull(httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("", httpConnection_KeyVal0.value());
      assertNull(httpConnection_KeyVal1.key());
      assertEquals("", httpConnection_KeyVal1.value());
      assertFalse(httpConnection_KeyVal1.hasInputStream());
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertSame(httpConnection_KeyVal1, httpConnection_KeyVal0);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(httpConnection_KeyVal1);
      
      URL uRL0 = MockURL.getHttpExample();
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getRef());
      assertNotNull(uRL0);
      
      HttpConnection.Request httpConnection_Request4 = httpConnection_Request3.data((Connection.KeyVal) httpConnection_KeyVal0);
      assertEquals(41, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(41, httpConnection_Request2.timeout());
      assertEquals(41, httpConnection_Request3.timeout());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertTrue(httpConnection_Request3.followRedirects());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertNull(httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("", httpConnection_KeyVal0.value());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertEquals(41, httpConnection_Request4.timeout());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(41, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(41, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.followRedirects);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertTrue(httpConnection_Request3.parserDefined);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(41, httpConnection_Request3.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertTrue(httpConnection_Request4.validateTSLCertificates);
      assertEquals(41, httpConnection_Request4.timeoutMilliseconds);
      assertTrue(httpConnection_Request4.parserDefined);
      assertTrue(httpConnection_Request4.followRedirects);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertNotNull(httpConnection_Request4);
      
      String string3 = "http";
      httpConnection_KeyVal0.key = string3;
      assertEquals("http", httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("", httpConnection_KeyVal0.value());
      
      HttpConnection.Request httpConnection_Request5 = (HttpConnection.Request)httpConnection_Request2.url(uRL0);
      assertEquals(41, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(41, httpConnection_Request2.timeout());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getRef());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request5.postDataCharset());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertEquals(41, httpConnection_Request5.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertTrue(httpConnection_Request5.validateTLSCertificates());
      assertTrue(httpConnection_Request5.followRedirects());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(41, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(41, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request5.parserDefined);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertTrue(httpConnection_Request5.followRedirects);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertTrue(httpConnection_Request5.validateTSLCertificates);
      assertEquals(41, httpConnection_Request5.timeoutMilliseconds);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertNotNull(httpConnection_Request5);
      
      String string4 = "KXf";
      HttpConnection.KeyVal httpConnection_KeyVal2 = HttpConnection.KeyVal.create(httpConnection_Request4.postDataCharset, string4);
      assertEquals("KXf", httpConnection_KeyVal2.value());
      assertFalse(httpConnection_KeyVal2.hasInputStream());
      assertEquals("UTF-8", httpConnection_KeyVal2.key());
      assertEquals(41, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(41, httpConnection_Request2.timeout());
      assertEquals(41, httpConnection_Request3.timeout());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertTrue(httpConnection_Request3.followRedirects());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertEquals("http", httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("", httpConnection_KeyVal0.value());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertEquals(41, httpConnection_Request4.timeout());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertNotSame(httpConnection_KeyVal2, httpConnection_KeyVal0);
      assertNotSame(httpConnection_KeyVal2, httpConnection_KeyVal1);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request5);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertNotSame(httpConnection_KeyVal0, httpConnection_KeyVal2);
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request5);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertNotSame(string4, string3);
      assertNotSame(string4, string2);
      assertNotSame(string4, string0);
      assertNotSame(string4, string1);
      assertFalse(httpConnection_KeyVal2.equals((Object)httpConnection_KeyVal0));
      assertFalse(httpConnection_KeyVal2.equals((Object)httpConnection_KeyVal1));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string1));
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(41, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(41, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.followRedirects);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertTrue(httpConnection_Request3.parserDefined);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(41, httpConnection_Request3.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertTrue(httpConnection_Request4.validateTSLCertificates);
      assertEquals(41, httpConnection_Request4.timeoutMilliseconds);
      assertTrue(httpConnection_Request4.parserDefined);
      assertTrue(httpConnection_Request4.followRedirects);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertNotNull(httpConnection_KeyVal2);
      
      httpConnection_Request5.ignoreHttpErrors = httpConnection_Request0.validateTSLCertificates;
      assertEquals(41, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(41, httpConnection_Request2.timeout());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getRef());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request5.postDataCharset());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertEquals(41, httpConnection_Request5.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertTrue(httpConnection_Request5.validateTLSCertificates());
      assertTrue(httpConnection_Request5.followRedirects());
      assertTrue(httpConnection_Request5.ignoreHttpErrors());
      
      int int1 = 0;
      Random.setNextRandom(int1);
      assertFalse(int1 == int0);
      
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request5);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Could not find: www.someFakeButWellFormedURL.org
         //
         verifyException("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection", e);
      }
  }

  @Test(timeout = 11000)
  public void test63()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertNotNull(httpConnection_Request0);
      
      boolean boolean0 = false;
      URL uRL0 = MockURL.getFileExample();
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getRef());
      assertNotNull(uRL0);
      
      httpConnection_Request0.url = uRL0;
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getRef());
      assertEquals("some", httpConnection_Request0.url.getAuthority());
      assertNull(httpConnection_Request0.url.getQuery());
      assertNull(httpConnection_Request0.url.getUserInfo());
      assertEquals((-1), httpConnection_Request0.url.getPort());
      assertEquals("some", httpConnection_Request0.url.getHost());
      assertNull(httpConnection_Request0.url.getRef());
      assertEquals("file", httpConnection_Request0.url.getProtocol());
      assertEquals((-1), httpConnection_Request0.url.getDefaultPort());
      
      HttpConnection.Request httpConnection_Request1 = (HttpConnection.Request)httpConnection_Request0.ignoreHttpErrors(boolean0);
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertNotNull(httpConnection_Request1);
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertNotNull(httpConnection_Response0);
      
      int int0 = httpConnection_Response0.statusCode();
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, int0);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      
      String string0 = "";
      String string1 = httpConnection_Response0.getHeaderCaseInsensitive(string0);
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertNull(string1);
      
      boolean boolean1 = false;
      httpConnection_Request0.ignoreHttpErrors = boolean1;
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      
      String string2 = httpConnection_Response0.charset();
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertNull(string2);
      
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request1, httpConnection_Response0);
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // Only http & https protocols supported
         //
         verifyException("org.jsoup.helper.HttpConnection$Response", e);
      }
  }

  @Test(timeout = 11000)
  public void test64()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertNotNull(httpConnection_Request0);
      
      int int0 = 41;
      String string0 = "--";
      String string1 = "org.jsoup.helper.HttpConnection$Response$2";
      HttpConnection.Request httpConnection_Request1 = (HttpConnection.Request)httpConnection_Request0.cookie(string0, string1);
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.parserDefined);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertNotNull(httpConnection_Request1);
      
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request0.timeout(int0);
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(41, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(41, httpConnection_Request2.timeout());
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(41, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertEquals(41, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertFalse(httpConnection_Request2.parserDefined);
      assertTrue(httpConnection_Request2.followRedirects);
      assertNotNull(httpConnection_Request2);
      
      HttpConnection.Request httpConnection_Request3 = httpConnection_Request2.parser(httpConnection_Request0.parser);
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(41, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(41, httpConnection_Request2.timeout());
      assertEquals(41, httpConnection_Request3.timeout());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(41, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertEquals(41, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(41, httpConnection_Request3.timeoutMilliseconds);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertTrue(httpConnection_Request3.followRedirects);
      assertTrue(httpConnection_Request3.parserDefined);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertNotNull(httpConnection_Request3);
      
      HttpConnection.KeyVal httpConnection_KeyVal0 = new HttpConnection.KeyVal();
      assertNull(httpConnection_KeyVal0.value());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertNull(httpConnection_KeyVal0.key());
      assertNotNull(httpConnection_KeyVal0);
      
      String string2 = "";
      String string3 = "'o|Ui]!'0H:2WWZ|";
      HttpConnection.KeyVal httpConnection_KeyVal1 = httpConnection_KeyVal0.key(string3);
      assertNull(httpConnection_KeyVal0.value());
      assertEquals("'o|Ui]!'0H:2WWZ|", httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertFalse(httpConnection_KeyVal1.hasInputStream());
      assertNull(httpConnection_KeyVal1.value());
      assertEquals("'o|Ui]!'0H:2WWZ|", httpConnection_KeyVal1.key());
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertNotSame(string3, string0);
      assertNotSame(string3, string2);
      assertNotSame(string3, string1);
      assertSame(httpConnection_KeyVal1, httpConnection_KeyVal0);
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertNotNull(httpConnection_KeyVal1);
      
      HttpConnection.KeyVal httpConnection_KeyVal2 = httpConnection_KeyVal0.value(string2);
      assertEquals("", httpConnection_KeyVal0.value());
      assertEquals("'o|Ui]!'0H:2WWZ|", httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("'o|Ui]!'0H:2WWZ|", httpConnection_KeyVal2.key());
      assertEquals("", httpConnection_KeyVal2.value());
      assertFalse(httpConnection_KeyVal2.hasInputStream());
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal2);
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertNotSame(string2, string1);
      assertNotSame(string2, string3);
      assertNotSame(string2, string0);
      assertSame(httpConnection_KeyVal2, httpConnection_KeyVal0);
      assertSame(httpConnection_KeyVal2, httpConnection_KeyVal1);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string3));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(httpConnection_KeyVal2);
      
      URL uRL0 = MockURL.getHttpExample();
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertNotNull(uRL0);
      
      HttpConnection.Request httpConnection_Request4 = httpConnection_Request3.parser(httpConnection_Request2.parser);
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(41, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(41, httpConnection_Request2.timeout());
      assertEquals(41, httpConnection_Request3.timeout());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertTrue(httpConnection_Request4.followRedirects());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertEquals(41, httpConnection_Request4.timeout());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(41, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertEquals(41, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(41, httpConnection_Request3.timeoutMilliseconds);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertTrue(httpConnection_Request3.followRedirects);
      assertTrue(httpConnection_Request3.parserDefined);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertTrue(httpConnection_Request4.validateTSLCertificates);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertTrue(httpConnection_Request4.parserDefined);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertTrue(httpConnection_Request4.followRedirects);
      assertEquals(41, httpConnection_Request4.timeoutMilliseconds);
      assertNotNull(httpConnection_Request4);
      
      String string4 = "http";
      httpConnection_KeyVal0.key = string4;
      assertEquals("", httpConnection_KeyVal0.value());
      assertEquals("http", httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      
      HttpConnection.Request httpConnection_Request5 = (HttpConnection.Request)httpConnection_Request2.url(uRL0);
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertEquals("UTF-8", httpConnection_Request5.postDataCharset());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertEquals(41, httpConnection_Request5.timeout());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertTrue(httpConnection_Request5.followRedirects());
      assertTrue(httpConnection_Request5.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(41, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(41, httpConnection_Request2.timeout());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertTrue(httpConnection_Request5.validateTSLCertificates);
      assertTrue(httpConnection_Request5.followRedirects);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertTrue(httpConnection_Request5.parserDefined);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertEquals(41, httpConnection_Request5.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(41, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertEquals(41, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertNotNull(httpConnection_Request5);
      
      String string5 = "KXf";
      HttpConnection.KeyVal httpConnection_KeyVal3 = HttpConnection.KeyVal.create(httpConnection_Request4.postDataCharset, string5);
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(41, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_KeyVal3.key());
      assertFalse(httpConnection_KeyVal3.hasInputStream());
      assertEquals("KXf", httpConnection_KeyVal3.value());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(41, httpConnection_Request2.timeout());
      assertEquals(41, httpConnection_Request3.timeout());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertTrue(httpConnection_Request4.followRedirects());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertEquals(41, httpConnection_Request4.timeout());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertNotSame(string5, string3);
      assertNotSame(string5, string2);
      assertNotSame(string5, string0);
      assertNotSame(string5, string4);
      assertNotSame(string5, string1);
      assertNotSame(httpConnection_KeyVal3, httpConnection_KeyVal2);
      assertNotSame(httpConnection_KeyVal3, httpConnection_KeyVal1);
      assertNotSame(httpConnection_KeyVal3, httpConnection_KeyVal0);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request5);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request5);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertFalse(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string4));
      assertFalse(string5.equals((Object)string1));
      assertFalse(httpConnection_KeyVal3.equals((Object)httpConnection_KeyVal2));
      assertFalse(httpConnection_KeyVal3.equals((Object)httpConnection_KeyVal1));
      assertFalse(httpConnection_KeyVal3.equals((Object)httpConnection_KeyVal0));
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(41, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertEquals(41, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(41, httpConnection_Request3.timeoutMilliseconds);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertTrue(httpConnection_Request3.followRedirects);
      assertTrue(httpConnection_Request3.parserDefined);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertTrue(httpConnection_Request4.validateTSLCertificates);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertTrue(httpConnection_Request4.parserDefined);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertTrue(httpConnection_Request4.followRedirects);
      assertEquals(41, httpConnection_Request4.timeoutMilliseconds);
      assertNotNull(httpConnection_KeyVal3);
      
      httpConnection_Request5.ignoreHttpErrors = httpConnection_Request0.validateTSLCertificates;
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertEquals("UTF-8", httpConnection_Request5.postDataCharset());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertEquals(41, httpConnection_Request5.timeout());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertTrue(httpConnection_Request5.followRedirects());
      assertTrue(httpConnection_Request5.ignoreHttpErrors());
      assertTrue(httpConnection_Request5.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(41, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(41, httpConnection_Request2.timeout());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      
      int int1 = 0;
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertNotNull(httpConnection_Response0);
      
      HttpURLConnection httpURLConnection0 = null;
      HttpConnection.Response httpConnection_Response1 = new HttpConnection.Response(httpConnection_Response0);
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response1.statusMessage());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.charset());
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertEquals(1, httpConnection_Response1.numRedirects);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNotNull(httpConnection_Response1);
      
      // Undeclared exception!
      try { 
        httpConnection_Response0.setupFromConnection(httpURLConnection0, httpConnection_Response1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.helper.HttpConnection$Response", e);
      }
  }

  @Test(timeout = 11000)
  public void test65()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertNotNull(httpConnection_Request0);
      
      int int0 = 58;
      String string0 = "--";
      String string1 = "org.jsoup.helper.HttpConnection$Response$2";
      HttpConnection.Request httpConnection_Request1 = (HttpConnection.Request)httpConnection_Request0.cookie(string0, string1);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.parserDefined);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertNotNull(httpConnection_Request1);
      
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://www.someFakeButWellFormedURL.org/fooExample?http=");
      boolean boolean0 = NetworkHandling.createRemoteTextFile(evoSuiteURL0, string0);
      assertNotSame(string0, string1);
      assertTrue(boolean0);
      assertFalse(string0.equals((Object)string1));
      
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request0.timeout(int0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(58, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.parserDefined);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertNotNull(httpConnection_Request2);
      
      HttpConnection.Request httpConnection_Request3 = httpConnection_Request2.parser(httpConnection_Request0.parser);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(58, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(58, httpConnection_Request3.timeout());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.parserDefined);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.parserDefined);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(58, httpConnection_Request3.timeoutMilliseconds);
      assertNotNull(httpConnection_Request3);
      
      HttpConnection.KeyVal httpConnection_KeyVal0 = new HttpConnection.KeyVal();
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertNull(httpConnection_KeyVal0.value());
      assertNull(httpConnection_KeyVal0.key());
      assertNotNull(httpConnection_KeyVal0);
      
      String string2 = "";
      HttpConnection.KeyVal httpConnection_KeyVal1 = httpConnection_KeyVal0.value(string2);
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("", httpConnection_KeyVal0.value());
      assertNull(httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal1.hasInputStream());
      assertEquals("", httpConnection_KeyVal1.value());
      assertNull(httpConnection_KeyVal1.key());
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertSame(httpConnection_KeyVal1, httpConnection_KeyVal0);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(httpConnection_KeyVal1);
      
      URL uRL0 = MockURL.getHttpExample();
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      assertNotNull(uRL0);
      
      HttpConnection.Request httpConnection_Request4 = httpConnection_Request3.data((Connection.KeyVal) httpConnection_KeyVal0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(58, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(58, httpConnection_Request3.timeout());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("", httpConnection_KeyVal0.value());
      assertNull(httpConnection_KeyVal0.key());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals(58, httpConnection_Request4.timeout());
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.parserDefined);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.parserDefined);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(58, httpConnection_Request3.timeoutMilliseconds);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertEquals(58, httpConnection_Request4.timeoutMilliseconds);
      assertTrue(httpConnection_Request4.parserDefined);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertTrue(httpConnection_Request4.validateTSLCertificates);
      assertTrue(httpConnection_Request4.followRedirects);
      assertNotNull(httpConnection_Request4);
      
      String string3 = "http";
      httpConnection_KeyVal0.key = string3;
      assertEquals("http", httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("", httpConnection_KeyVal0.value());
      
      HttpConnection.Request httpConnection_Request5 = (HttpConnection.Request)httpConnection_Request2.url(uRL0);
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request5.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertTrue(httpConnection_Request5.followRedirects());
      assertTrue(httpConnection_Request5.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request5.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(58, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertEquals(58, httpConnection_Request5.timeoutMilliseconds);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertTrue(httpConnection_Request5.followRedirects);
      assertTrue(httpConnection_Request5.parserDefined);
      assertTrue(httpConnection_Request5.validateTSLCertificates);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.parserDefined);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertNotNull(httpConnection_Request5);
      
      String string4 = "KXf";
      HttpConnection.Response httpConnection_Response0 = HttpConnection.Response.execute((Connection.Request) httpConnection_Request5);
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request5.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertTrue(httpConnection_Request5.followRedirects());
      assertTrue(httpConnection_Request5.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request5.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertEquals(200, httpConnection_Response0.statusCode());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(58, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertEquals(58, httpConnection_Request5.timeoutMilliseconds);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertTrue(httpConnection_Request5.followRedirects);
      assertTrue(httpConnection_Request5.parserDefined);
      assertTrue(httpConnection_Request5.validateTSLCertificates);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(200, httpConnection_Response0.statusCode);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.parserDefined);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertNotNull(httpConnection_Response0);
      
      String string5 = httpConnection_Response0.charset();
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request5.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertTrue(httpConnection_Request5.followRedirects());
      assertTrue(httpConnection_Request5.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request5.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertEquals(200, httpConnection_Response0.statusCode());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(58, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertEquals(58, httpConnection_Request5.timeoutMilliseconds);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertTrue(httpConnection_Request5.followRedirects);
      assertTrue(httpConnection_Request5.parserDefined);
      assertTrue(httpConnection_Request5.validateTSLCertificates);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(200, httpConnection_Response0.statusCode);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.parserDefined);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertNull(string5);
  }

  @Test(timeout = 11000)
  public void test66()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertNotNull(httpConnection_Request0);
      
      int int0 = 41;
      String string0 = "--";
      String string1 = "org.jsoup.helper.HttpConnection$Response$2";
      HttpConnection.Request httpConnection_Request1 = (HttpConnection.Request)httpConnection_Request0.cookie(string0, string1);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.parserDefined);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertNotNull(httpConnection_Request1);
      
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request0.timeout(int0);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(41, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(41, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(41, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertEquals(41, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertFalse(httpConnection_Request2.parserDefined);
      assertNotNull(httpConnection_Request2);
      
      HttpConnection.Request httpConnection_Request3 = httpConnection_Request2.parser(httpConnection_Request0.parser);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(41, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(41, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals(41, httpConnection_Request3.timeout());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertTrue(httpConnection_Request3.followRedirects());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(41, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertEquals(41, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.parserDefined);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertEquals(41, httpConnection_Request3.timeoutMilliseconds);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.parserDefined);
      assertNotNull(httpConnection_Request3);
      
      HttpConnection.KeyVal httpConnection_KeyVal0 = new HttpConnection.KeyVal();
      assertNull(httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertNull(httpConnection_KeyVal0.value());
      assertNotNull(httpConnection_KeyVal0);
      
      String string2 = "";
      HttpConnection.KeyVal httpConnection_KeyVal1 = httpConnection_KeyVal0.value(string2);
      assertNull(httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("", httpConnection_KeyVal0.value());
      assertEquals("", httpConnection_KeyVal1.value());
      assertFalse(httpConnection_KeyVal1.hasInputStream());
      assertNull(httpConnection_KeyVal1.key());
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertSame(httpConnection_KeyVal1, httpConnection_KeyVal0);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertNotNull(httpConnection_KeyVal1);
      
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://www.someFakeButWellFormedURL.org/fooExample?http=");
      boolean boolean0 = NetworkHandling.createRemoteTextFile(evoSuiteURL0, httpConnection_Request0.postDataCharset);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(41, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertTrue(boolean0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(41, httpConnection_Request0.timeoutMilliseconds);
      
      URL uRL0 = MockURL.getHttpExample();
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertNotNull(uRL0);
      
      HttpConnection.Request httpConnection_Request4 = httpConnection_Request3.data((Connection.KeyVal) httpConnection_KeyVal0);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(41, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(41, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals(41, httpConnection_Request3.timeout());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertTrue(httpConnection_Request3.followRedirects());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertNull(httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("", httpConnection_KeyVal0.value());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertEquals(41, httpConnection_Request4.timeout());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(41, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertEquals(41, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.parserDefined);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertEquals(41, httpConnection_Request3.timeoutMilliseconds);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.parserDefined);
      assertTrue(httpConnection_Request4.parserDefined);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertTrue(httpConnection_Request4.followRedirects);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertEquals(41, httpConnection_Request4.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertTrue(httpConnection_Request4.validateTSLCertificates);
      assertNotNull(httpConnection_Request4);
      
      String string3 = "http";
      httpConnection_KeyVal0.key = string3;
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("http", httpConnection_KeyVal0.key());
      assertEquals("", httpConnection_KeyVal0.value());
      
      HttpConnection.Request httpConnection_Request5 = (HttpConnection.Request)httpConnection_Request2.ignoreContentType(httpConnection_Request0.followRedirects);
      assertEquals(41, httpConnection_Request5.timeout());
      assertTrue(httpConnection_Request5.followRedirects());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request5.postDataCharset());
      assertTrue(httpConnection_Request5.validateTLSCertificates());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertTrue(httpConnection_Request5.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(41, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(41, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.ignoreContentType());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertEquals(41, httpConnection_Request5.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertTrue(httpConnection_Request5.ignoreContentType);
      assertTrue(httpConnection_Request5.parserDefined);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertTrue(httpConnection_Request5.followRedirects);
      assertTrue(httpConnection_Request5.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertEquals(41, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertEquals(41, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.parserDefined);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertNotNull(httpConnection_Request5);
      
      HttpConnection.Request httpConnection_Request6 = (HttpConnection.Request)httpConnection_Request2.url(uRL0);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(41, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request6.followRedirects());
      assertTrue(httpConnection_Request6.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request6.postDataCharset());
      assertEquals(1048576, httpConnection_Request6.maxBodySize());
      assertEquals(41, httpConnection_Request6.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request6.method());
      assertFalse(httpConnection_Request6.ignoreHttpErrors());
      assertTrue(httpConnection_Request6.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(41, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.ignoreContentType());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request6);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request6, httpConnection_Request2);
      assertSame(httpConnection_Request6, httpConnection_Request0);
      assertSame(httpConnection_Request6, httpConnection_Request4);
      assertSame(httpConnection_Request6, httpConnection_Request3);
      assertSame(httpConnection_Request6, httpConnection_Request1);
      assertSame(httpConnection_Request6, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request6);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertEquals(41, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request6.ignoreContentType);
      assertFalse(httpConnection_Request6.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request6.maxBodySizeBytes);
      assertEquals(41, httpConnection_Request6.timeoutMilliseconds);
      assertTrue(httpConnection_Request6.followRedirects);
      assertTrue(httpConnection_Request6.validateTSLCertificates);
      assertTrue(httpConnection_Request6.parserDefined);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertEquals(41, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.parserDefined);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertNotNull(httpConnection_Request6);
      
      String string4 = "KXf";
      HttpConnection.KeyVal httpConnection_KeyVal2 = HttpConnection.KeyVal.create(httpConnection_Request4.postDataCharset, string4);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(41, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_KeyVal2.key());
      assertEquals("KXf", httpConnection_KeyVal2.value());
      assertFalse(httpConnection_KeyVal2.hasInputStream());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(41, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.ignoreContentType());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals(41, httpConnection_Request3.timeout());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertTrue(httpConnection_Request3.ignoreContentType());
      assertTrue(httpConnection_Request3.followRedirects());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("http", httpConnection_KeyVal0.key());
      assertEquals("", httpConnection_KeyVal0.value());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertEquals(41, httpConnection_Request4.timeout());
      assertTrue(httpConnection_Request4.ignoreContentType());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request6);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertNotSame(string4, string3);
      assertNotSame(string4, string1);
      assertNotSame(string4, string0);
      assertNotSame(string4, string2);
      assertNotSame(httpConnection_KeyVal2, httpConnection_KeyVal1);
      assertNotSame(httpConnection_KeyVal2, httpConnection_KeyVal0);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request6);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request5);
      assertSame(httpConnection_Request3, httpConnection_Request6);
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertNotSame(httpConnection_KeyVal0, httpConnection_KeyVal2);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request6);
      assertSame(httpConnection_Request4, httpConnection_Request5);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string2));
      assertFalse(httpConnection_KeyVal2.equals((Object)httpConnection_KeyVal1));
      assertFalse(httpConnection_KeyVal2.equals((Object)httpConnection_KeyVal0));
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertEquals(41, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertEquals(41, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.parserDefined);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.followRedirects);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertEquals(41, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.ignoreContentType);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.parserDefined);
      assertTrue(httpConnection_Request4.parserDefined);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertTrue(httpConnection_Request4.followRedirects);
      assertTrue(httpConnection_Request4.ignoreContentType);
      assertEquals(41, httpConnection_Request4.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertTrue(httpConnection_Request4.validateTSLCertificates);
      assertNotNull(httpConnection_KeyVal2);
      
      httpConnection_Request6.ignoreHttpErrors = httpConnection_Request0.validateTSLCertificates;
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(41, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request6.followRedirects());
      assertTrue(httpConnection_Request6.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request6.postDataCharset());
      assertEquals(1048576, httpConnection_Request6.maxBodySize());
      assertTrue(httpConnection_Request6.ignoreHttpErrors());
      assertEquals(41, httpConnection_Request6.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request6.method());
      assertTrue(httpConnection_Request6.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(41, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      
      int int1 = 0;
      Random.setNextRandom(int1);
      assertFalse(int1 == int0);
      
      HttpConnection.Response httpConnection_Response0 = HttpConnection.Response.execute((Connection.Request) httpConnection_Request6);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(41, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request6.followRedirects());
      assertTrue(httpConnection_Request6.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request6.postDataCharset());
      assertEquals(1048576, httpConnection_Request6.maxBodySize());
      assertTrue(httpConnection_Request6.ignoreHttpErrors());
      assertEquals(41, httpConnection_Request6.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request6.method());
      assertTrue(httpConnection_Request6.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(41, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(200, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request6);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request6, httpConnection_Request2);
      assertSame(httpConnection_Request6, httpConnection_Request0);
      assertSame(httpConnection_Request6, httpConnection_Request4);
      assertSame(httpConnection_Request6, httpConnection_Request3);
      assertSame(httpConnection_Request6, httpConnection_Request1);
      assertSame(httpConnection_Request6, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request6);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertFalse(int0 == int1);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertEquals(41, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request6.ignoreContentType);
      assertEquals(1048576, httpConnection_Request6.maxBodySizeBytes);
      assertTrue(httpConnection_Request6.ignoreHttpErrors);
      assertEquals(41, httpConnection_Request6.timeoutMilliseconds);
      assertTrue(httpConnection_Request6.followRedirects);
      assertTrue(httpConnection_Request6.validateTSLCertificates);
      assertTrue(httpConnection_Request6.parserDefined);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertEquals(41, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.parserDefined);
      assertTrue(httpConnection_Request2.followRedirects);
      assertTrue(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(200, httpConnection_Response0.statusCode);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertTrue(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNotNull(httpConnection_Response0);
      
      HttpConnection.Response.serialiseRequestUrl(httpConnection_Response0.req);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(41, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request6.followRedirects());
      assertTrue(httpConnection_Request6.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request6.postDataCharset());
      assertEquals(1048576, httpConnection_Request6.maxBodySize());
      assertTrue(httpConnection_Request6.ignoreHttpErrors());
      assertEquals(41, httpConnection_Request6.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request6.method());
      assertTrue(httpConnection_Request6.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(41, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(200, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request6);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request6, httpConnection_Request2);
      assertSame(httpConnection_Request6, httpConnection_Request0);
      assertSame(httpConnection_Request6, httpConnection_Request4);
      assertSame(httpConnection_Request6, httpConnection_Request3);
      assertSame(httpConnection_Request6, httpConnection_Request1);
      assertSame(httpConnection_Request6, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request6);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertFalse(int0 == int1);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertEquals(41, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request6.ignoreContentType);
      assertEquals(1048576, httpConnection_Request6.maxBodySizeBytes);
      assertTrue(httpConnection_Request6.ignoreHttpErrors);
      assertEquals(41, httpConnection_Request6.timeoutMilliseconds);
      assertTrue(httpConnection_Request6.followRedirects);
      assertTrue(httpConnection_Request6.validateTSLCertificates);
      assertTrue(httpConnection_Request6.parserDefined);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertEquals(41, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.parserDefined);
      assertTrue(httpConnection_Request2.followRedirects);
      assertTrue(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(200, httpConnection_Response0.statusCode);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertTrue(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
  }

  @Test(timeout = 11000)
  public void test67()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertNotNull(httpConnection_Request0);
      
      int int0 = 41;
      String string0 = "--";
      String string1 = "org.jsoup.helper.HttpConnection$Response$2";
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.timeout(int0);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(41, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(41, httpConnection_Request1.timeout());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(41, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(41, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.parserDefined);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertNotNull(httpConnection_Request1);
      
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request1.parser(httpConnection_Request0.parser);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(41, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(41, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(41, httpConnection_Request2.timeout());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(41, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(41, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertEquals(41, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.parserDefined);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.followRedirects);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertNotNull(httpConnection_Request2);
      
      HttpConnection.KeyVal httpConnection_KeyVal0 = new HttpConnection.KeyVal();
      assertNull(httpConnection_KeyVal0.value());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertNull(httpConnection_KeyVal0.key());
      assertNotNull(httpConnection_KeyVal0);
      
      String string2 = "";
      HttpConnection.KeyVal httpConnection_KeyVal1 = httpConnection_KeyVal0.value(string2);
      assertEquals("", httpConnection_KeyVal0.value());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertNull(httpConnection_KeyVal0.key());
      assertNull(httpConnection_KeyVal1.key());
      assertFalse(httpConnection_KeyVal1.hasInputStream());
      assertEquals("", httpConnection_KeyVal1.value());
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertSame(httpConnection_KeyVal1, httpConnection_KeyVal0);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(httpConnection_KeyVal1);
      
      URL uRL0 = MockURL.getHttpExample();
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNotNull(uRL0);
      
      HttpConnection.Request httpConnection_Request3 = httpConnection_Request2.data((Connection.KeyVal) httpConnection_KeyVal0);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(41, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(41, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(41, httpConnection_Request2.timeout());
      assertEquals("", httpConnection_KeyVal0.value());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertNull(httpConnection_KeyVal0.key());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertEquals(41, httpConnection_Request3.timeout());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(41, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(41, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertEquals(41, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.parserDefined);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.followRedirects);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertEquals(41, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.parserDefined);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertNotNull(httpConnection_Request3);
      
      httpConnection_KeyVal0.key = httpConnection_KeyVal1.value;
      assertEquals("", httpConnection_KeyVal0.value());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("", httpConnection_KeyVal0.key());
      assertEquals("", httpConnection_KeyVal1.key());
      assertFalse(httpConnection_KeyVal1.hasInputStream());
      assertEquals("", httpConnection_KeyVal1.value());
      
      HttpConnection.Request httpConnection_Request4 = (HttpConnection.Request)httpConnection_Request1.url(uRL0);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(41, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(41, httpConnection_Request1.timeout());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertTrue(httpConnection_Request4.followRedirects());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertEquals(41, httpConnection_Request4.timeout());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(41, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(41, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertTrue(httpConnection_Request4.validateTSLCertificates);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertTrue(httpConnection_Request4.parserDefined);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertTrue(httpConnection_Request4.followRedirects);
      assertEquals(41, httpConnection_Request4.timeoutMilliseconds);
      assertNotNull(httpConnection_Request4);
      
      String string3 = "KXf";
      HttpConnection.KeyVal httpConnection_KeyVal2 = HttpConnection.KeyVal.create(httpConnection_Request3.postDataCharset, string3);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(41, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(41, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(41, httpConnection_Request2.timeout());
      assertEquals("", httpConnection_KeyVal0.value());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("", httpConnection_KeyVal0.key());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertEquals(41, httpConnection_Request3.timeout());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertFalse(httpConnection_KeyVal2.hasInputStream());
      assertEquals("UTF-8", httpConnection_KeyVal2.key());
      assertEquals("KXf", httpConnection_KeyVal2.value());
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertNotSame(httpConnection_KeyVal0, httpConnection_KeyVal2);
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertNotSame(string3, string2);
      assertNotSame(string3, string0);
      assertNotSame(string3, string1);
      assertNotSame(httpConnection_KeyVal2, httpConnection_KeyVal0);
      assertNotSame(httpConnection_KeyVal2, httpConnection_KeyVal1);
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(httpConnection_KeyVal2.equals((Object)httpConnection_KeyVal0));
      assertFalse(httpConnection_KeyVal2.equals((Object)httpConnection_KeyVal1));
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(41, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(41, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertEquals(41, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.parserDefined);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.followRedirects);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertEquals(41, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.parserDefined);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertNotNull(httpConnection_KeyVal2);
      
      httpConnection_Request4.ignoreHttpErrors = httpConnection_Request0.validateTSLCertificates;
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(41, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(41, httpConnection_Request1.timeout());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertTrue(httpConnection_Request4.followRedirects());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertTrue(httpConnection_Request4.ignoreHttpErrors());
      assertEquals(41, httpConnection_Request4.timeout());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      
      int int1 = 0;
      Random.setNextRandom(int1);
      assertFalse(int1 == int0);
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNotNull(httpConnection_Response0);
      
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request1, httpConnection_Response0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Could not find: www.someFakeButWellFormedURL.org
         //
         verifyException("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection", e);
      }
  }

  @Test(timeout = 11000)
  public void test68()  throws Throwable  {
      HostnameVerifier hostnameVerifier0 = HttpConnection.Response.getInsecureVerifier();
      assertNotNull(hostnameVerifier0);
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNotNull(httpConnection_Response0);
      
      String string0 = "x8";
      httpConnection_Response0.charset = string0;
      assertEquals("x8", httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      
      String string1 = httpConnection_Response0.charset();
      assertEquals("x8", httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertSame(string1, string0);
      assertEquals("x8", string1);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNotNull(string1);
      
      String string2 = httpConnection_Response0.statusMessage();
      assertEquals("x8", httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNull(string2);
  }

  @Test(timeout = 11000)
  public void test69()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      String string0 = "\"R-Q";
      boolean boolean0 = FileSystemHandling.appendLineToFile(evoSuiteFile0, string0);
      assertFalse(boolean0);
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertNotNull(httpConnection_Response0);
      
      boolean boolean1 = true;
      httpConnection_Response0.executed = boolean1;
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>(httpConnection_Response0.MAX_REDIRECTS);
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, hashMap0.size());
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertTrue(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertNotNull(hashMap0);
      
      String string1 = "d{nTu`@>T[";
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      assertEquals(0, linkedList0.size());
      assertNotNull(linkedList0);
      
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>(linkedList0);
      assertEquals(0, linkedList0.size());
      assertEquals(0, linkedList1.size());
      assertTrue(linkedList1.equals((Object)linkedList0));
      assertNotNull(linkedList1);
      
      LinkedList<String> linkedList2 = new LinkedList<String>();
      assertEquals(0, linkedList2.size());
      assertFalse(linkedList2.contains(string0));
      assertNotNull(linkedList2);
      
      boolean boolean2 = linkedList2.add(string1);
      assertEquals(1, linkedList2.size());
      assertNotSame(string1, string0);
      assertTrue(linkedList2.contains(string1));
      assertFalse(linkedList2.contains(string0));
      assertTrue(boolean2);
      assertFalse(string1.equals((Object)string0));
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      
      List<String> list0 = hashMap0.put(string1, linkedList2);
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertEquals(1, hashMap0.size());
      assertFalse(hashMap0.isEmpty());
      assertEquals(1, linkedList2.size());
      assertNotSame(string1, string0);
      assertTrue(linkedList2.contains(string1));
      assertFalse(linkedList2.contains(string0));
      assertFalse(string1.equals((Object)string0));
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertTrue(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertNull(list0);
      
      httpConnection_Response0.processResponseHeaders(hashMap0);
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertEquals(1, hashMap0.size());
      assertFalse(hashMap0.isEmpty());
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertTrue(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(0, httpConnection_Response0.numRedirects);
      
      // Undeclared exception!
      try { 
        HttpConnection.Response.execute(httpConnection_Response0.req);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Request must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test70()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertNotNull(httpConnection_Request0);
      
      int int0 = 41;
      String string0 = "--";
      String string1 = "org.jsoup.helper.HttpConnection$Response$2";
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.timeout(int0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(41, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertEquals(41, httpConnection_Request1.timeout());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(41, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertEquals(41, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.parserDefined);
      assertTrue(httpConnection_Request1.followRedirects);
      assertNotNull(httpConnection_Request1);
      
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request1.parser(httpConnection_Request0.parser);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(41, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertEquals(41, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals(41, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.parserDefined);
      assertEquals(41, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertEquals(41, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request2.parserDefined);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(41, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertNotNull(httpConnection_Request2);
      
      HttpConnection.KeyVal httpConnection_KeyVal0 = new HttpConnection.KeyVal();
      assertNull(httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertNull(httpConnection_KeyVal0.value());
      assertNotNull(httpConnection_KeyVal0);
      
      String string2 = "";
      HttpConnection.KeyVal httpConnection_KeyVal1 = httpConnection_KeyVal0.value(string2);
      assertNull(httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("", httpConnection_KeyVal0.value());
      assertNull(httpConnection_KeyVal1.key());
      assertEquals("", httpConnection_KeyVal1.value());
      assertFalse(httpConnection_KeyVal1.hasInputStream());
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertSame(httpConnection_KeyVal1, httpConnection_KeyVal0);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(httpConnection_KeyVal1);
      
      URL uRL0 = MockURL.getHttpExample();
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertNotNull(uRL0);
      
      HttpConnection.Request httpConnection_Request3 = httpConnection_Request2.parser(httpConnection_Request1.parser);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(41, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertEquals(41, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals(41, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(41, httpConnection_Request3.timeout());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.parserDefined);
      assertEquals(41, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertEquals(41, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request2.parserDefined);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(41, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.parserDefined);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(41, httpConnection_Request3.timeoutMilliseconds);
      assertNotNull(httpConnection_Request3);
      
      httpConnection_KeyVal0.key = httpConnection_KeyVal1.value;
      assertEquals("", httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("", httpConnection_KeyVal0.value());
      assertEquals("", httpConnection_KeyVal1.key());
      assertEquals("", httpConnection_KeyVal1.value());
      assertFalse(httpConnection_KeyVal1.hasInputStream());
      
      HttpConnection.Request httpConnection_Request4 = (HttpConnection.Request)httpConnection_Request1.url(uRL0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(41, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertEquals(41, httpConnection_Request1.timeout());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals(41, httpConnection_Request4.timeout());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.parserDefined);
      assertEquals(41, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertEquals(41, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request4.parserDefined);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertEquals(41, httpConnection_Request4.timeoutMilliseconds);
      assertTrue(httpConnection_Request4.followRedirects);
      assertTrue(httpConnection_Request4.validateTSLCertificates);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertNotNull(httpConnection_Request4);
      
      String string3 = "KXf";
      HttpConnection.KeyVal httpConnection_KeyVal2 = HttpConnection.KeyVal.create(httpConnection_Request3.postDataCharset, string3);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(41, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertEquals(41, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals(41, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(41, httpConnection_Request3.timeout());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertFalse(httpConnection_KeyVal2.hasInputStream());
      assertEquals("KXf", httpConnection_KeyVal2.value());
      assertEquals("UTF-8", httpConnection_KeyVal2.key());
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertNotSame(string3, string1);
      assertNotSame(string3, string0);
      assertNotSame(string3, string2);
      assertNotSame(httpConnection_KeyVal2, httpConnection_KeyVal0);
      assertNotSame(httpConnection_KeyVal2, httpConnection_KeyVal1);
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(httpConnection_KeyVal2.equals((Object)httpConnection_KeyVal0));
      assertFalse(httpConnection_KeyVal2.equals((Object)httpConnection_KeyVal1));
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.parserDefined);
      assertEquals(41, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertEquals(41, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request2.parserDefined);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(41, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.parserDefined);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(41, httpConnection_Request3.timeoutMilliseconds);
      assertNotNull(httpConnection_KeyVal2);
      
      httpConnection_Request4.ignoreHttpErrors = httpConnection_Request0.validateTSLCertificates;
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(41, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertEquals(41, httpConnection_Request1.timeout());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals(41, httpConnection_Request4.timeout());
      assertTrue(httpConnection_Request4.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      
      int int1 = 0;
      Random.setNextRandom(int1);
      assertFalse(int1 == int0);
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertNotNull(httpConnection_Response0);
      
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request1, httpConnection_Response0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Could not find: www.someFakeButWellFormedURL.org
         //
         verifyException("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection", e);
      }
  }

  @Test(timeout = 11000)
  public void test71()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      boolean boolean0 = true;
      boolean boolean1 = false;
      boolean boolean2 = FileSystemHandling.setPermissions(evoSuiteFile0, boolean0, boolean1, boolean0);
      assertFalse(boolean2);
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertNotNull(httpConnection_Request0);
      
      int int0 = 96;
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.timeout(int0);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(96, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(96, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(96, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request1.parserDefined);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(96, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertNotNull(httpConnection_Request1);
      
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request1.parser(httpConnection_Request0.parser);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(96, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(96, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(96, httpConnection_Request2.timeout());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(96, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(96, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.parserDefined);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(96, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertNotNull(httpConnection_Request2);
      
      boolean boolean3 = true;
      HttpConnection.Request httpConnection_Request3 = (HttpConnection.Request)httpConnection_Request2.followRedirects(boolean3);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(96, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(96, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(96, httpConnection_Request2.timeout());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(96, httpConnection_Request3.timeout());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertFalse(boolean3 == boolean2);
      assertFalse(boolean3 == boolean1);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(96, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(96, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.parserDefined);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(96, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(96, httpConnection_Request3.timeoutMilliseconds);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.parserDefined);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertTrue(httpConnection_Request3.followRedirects);
      assertNotNull(httpConnection_Request3);
      
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      assertEquals("", byteArrayOutputStream0.toString());
      assertEquals(0, byteArrayOutputStream0.size());
      assertNotNull(byteArrayOutputStream0);
      
      byteArrayOutputStream0.reset();
      assertEquals("", byteArrayOutputStream0.toString());
      assertEquals(0, byteArrayOutputStream0.size());
      
      String string0 = null;
      HttpConnection.Response.writePost(httpConnection_Request1, byteArrayOutputStream0, string0);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(96, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(96, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals("", byteArrayOutputStream0.toString());
      assertEquals(0, byteArrayOutputStream0.size());
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(96, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(96, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.parserDefined);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      
      HostnameVerifier hostnameVerifier0 = HttpConnection.Response.getInsecureVerifier();
      assertNotNull(hostnameVerifier0);
      
      HttpConnection.Response.initUnSecureTSL();
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNotNull(httpConnection_Response0);
      
      String string1 = httpConnection_Response0.charset();
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNull(string1);
  }

  @Test(timeout = 11000)
  public void test72()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertNotNull(httpConnection_Request0);
      
      int int0 = 41;
      String string0 = "--";
      String string1 = "org.jsoup.helper.HttpConnection$Response$2";
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.timeout(int0);
      assertEquals(41, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(41, httpConnection_Request1.timeout());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(41, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.parserDefined);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(41, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertNotNull(httpConnection_Request1);
      
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request1.parser(httpConnection_Request0.parser);
      assertEquals(41, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(41, httpConnection_Request1.timeout());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(41, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertEquals(41, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(41, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.parserDefined);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.parserDefined);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(41, httpConnection_Request2.timeoutMilliseconds);
      assertNotNull(httpConnection_Request2);
      
      HttpConnection.KeyVal httpConnection_KeyVal0 = new HttpConnection.KeyVal();
      assertNull(httpConnection_KeyVal0.value());
      assertNull(httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertNotNull(httpConnection_KeyVal0);
      
      String string2 = "";
      HttpConnection.KeyVal httpConnection_KeyVal1 = httpConnection_KeyVal0.value(string2);
      assertEquals("", httpConnection_KeyVal0.value());
      assertNull(httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertFalse(httpConnection_KeyVal1.hasInputStream());
      assertEquals("", httpConnection_KeyVal1.value());
      assertNull(httpConnection_KeyVal1.key());
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertSame(httpConnection_KeyVal1, httpConnection_KeyVal0);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertNotNull(httpConnection_KeyVal1);
      
      URL uRL0 = MockURL.getHttpExample();
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNotNull(uRL0);
      
      HttpConnection.Request httpConnection_Request3 = httpConnection_Request2.data((Connection.KeyVal) httpConnection_KeyVal0);
      assertEquals(41, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(41, httpConnection_Request1.timeout());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(41, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("", httpConnection_KeyVal0.value());
      assertNull(httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(41, httpConnection_Request3.timeout());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertTrue(httpConnection_Request3.followRedirects());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertEquals(41, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(41, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.parserDefined);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.parserDefined);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(41, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.parserDefined);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertEquals(41, httpConnection_Request3.timeoutMilliseconds);
      assertNotNull(httpConnection_Request3);
      
      HttpConnection.Request httpConnection_Request4 = (HttpConnection.Request)httpConnection_Request3.header(string0, string1);
      assertEquals(41, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(41, httpConnection_Request1.timeout());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(41, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("", httpConnection_KeyVal0.value());
      assertNull(httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(41, httpConnection_Request3.timeout());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertTrue(httpConnection_Request3.followRedirects());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals(41, httpConnection_Request4.timeout());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertTrue(httpConnection_Request4.followRedirects());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertEquals(41, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(41, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.parserDefined);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.parserDefined);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(41, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.parserDefined);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertEquals(41, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request4.followRedirects);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertTrue(httpConnection_Request4.parserDefined);
      assertTrue(httpConnection_Request4.validateTSLCertificates);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertEquals(41, httpConnection_Request4.timeoutMilliseconds);
      assertNotNull(httpConnection_Request4);
      
      httpConnection_KeyVal0.key = httpConnection_KeyVal1.value;
      assertEquals("", httpConnection_KeyVal0.value());
      assertEquals("", httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertFalse(httpConnection_KeyVal1.hasInputStream());
      assertEquals("", httpConnection_KeyVal1.value());
      assertEquals("", httpConnection_KeyVal1.key());
      
      HttpConnection.Request httpConnection_Request5 = (HttpConnection.Request)httpConnection_Request1.url(uRL0);
      assertEquals(41, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(41, httpConnection_Request1.timeout());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertEquals(41, httpConnection_Request5.timeout());
      assertTrue(httpConnection_Request5.validateTLSCertificates());
      assertTrue(httpConnection_Request5.followRedirects());
      assertEquals("UTF-8", httpConnection_Request5.postDataCharset());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertEquals(41, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(41, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.parserDefined);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(41, httpConnection_Request5.timeoutMilliseconds);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertTrue(httpConnection_Request5.followRedirects);
      assertTrue(httpConnection_Request5.validateTSLCertificates);
      assertTrue(httpConnection_Request5.parserDefined);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertNotNull(httpConnection_Request5);
      
      String string3 = "KXf";
      HttpConnection.KeyVal httpConnection_KeyVal2 = HttpConnection.KeyVal.create(httpConnection_Request3.postDataCharset, string3);
      assertEquals(41, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(41, httpConnection_Request1.timeout());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(41, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("", httpConnection_KeyVal0.value());
      assertEquals("", httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(41, httpConnection_Request3.timeout());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertTrue(httpConnection_Request3.followRedirects());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertEquals("KXf", httpConnection_KeyVal2.value());
      assertEquals("UTF-8", httpConnection_KeyVal2.key());
      assertFalse(httpConnection_KeyVal2.hasInputStream());
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertNotSame(httpConnection_KeyVal0, httpConnection_KeyVal2);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request5);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertNotSame(string3, string1);
      assertNotSame(string3, string0);
      assertNotSame(string3, string2);
      assertNotSame(httpConnection_KeyVal2, httpConnection_KeyVal0);
      assertNotSame(httpConnection_KeyVal2, httpConnection_KeyVal1);
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(httpConnection_KeyVal2.equals((Object)httpConnection_KeyVal0));
      assertFalse(httpConnection_KeyVal2.equals((Object)httpConnection_KeyVal1));
      assertEquals(41, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(41, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.parserDefined);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.parserDefined);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(41, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.parserDefined);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertEquals(41, httpConnection_Request3.timeoutMilliseconds);
      assertNotNull(httpConnection_KeyVal2);
      
      httpConnection_Request5.ignoreHttpErrors = httpConnection_Request0.validateTSLCertificates;
      assertEquals(41, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(41, httpConnection_Request1.timeout());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals(41, httpConnection_Request5.timeout());
      assertTrue(httpConnection_Request5.validateTLSCertificates());
      assertTrue(httpConnection_Request5.followRedirects());
      assertEquals("UTF-8", httpConnection_Request5.postDataCharset());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertTrue(httpConnection_Request5.ignoreHttpErrors());
      
      int int1 = 0;
      Random.setNextRandom(int1);
      assertFalse(int1 == int0);
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertNotNull(httpConnection_Response0);
      
      HttpURLConnection httpURLConnection0 = HttpConnection.Response.createConnection(httpConnection_Request2);
      assertEquals(41, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertNull(httpURLConnection0.getContentType());
      assertEquals(41, httpURLConnection0.getReadTimeout());
      assertFalse(httpURLConnection0.getInstanceFollowRedirects());
      assertFalse(httpURLConnection0.usingProxy());
      assertTrue(httpURLConnection0.getDefaultUseCaches());
      assertEquals(41, httpURLConnection0.getConnectTimeout());
      assertNull(httpURLConnection0.getContentEncoding());
      assertEquals(0L, httpURLConnection0.getIfModifiedSince());
      assertEquals("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection:http://www.someFakeButWellFormedURL.org/fooExample", httpURLConnection0.toString());
      assertFalse(httpURLConnection0.getDefaultAllowUserInteraction());
      assertTrue(httpURLConnection0.getUseCaches());
      assertEquals((-1), httpURLConnection0.getContentLength());
      assertFalse(httpURLConnection0.getDoOutput());
      assertFalse(httpURLConnection0.getAllowUserInteraction());
      assertEquals("GET", httpURLConnection0.getRequestMethod());
      assertTrue(httpURLConnection0.getDoInput());
      assertTrue(httpURLConnection0.getFollowRedirects());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(41, httpConnection_Request1.timeout());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(41, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertFalse(int0 == int1);
      assertEquals(41, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(41, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.parserDefined);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.parserDefined);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(41, httpConnection_Request2.timeoutMilliseconds);
      assertNotNull(httpURLConnection0);
      
      LinkedHashMap<String, List<String>> linkedHashMap0 = HttpConnection.Response.createHeaderMap(httpURLConnection0);
      assertEquals(41, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertNull(httpURLConnection0.getContentType());
      assertEquals(41, httpURLConnection0.getReadTimeout());
      assertFalse(httpURLConnection0.getInstanceFollowRedirects());
      assertFalse(httpURLConnection0.usingProxy());
      assertTrue(httpURLConnection0.getDefaultUseCaches());
      assertEquals(41, httpURLConnection0.getConnectTimeout());
      assertNull(httpURLConnection0.getContentEncoding());
      assertEquals(0L, httpURLConnection0.getIfModifiedSince());
      assertEquals("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection:http://www.someFakeButWellFormedURL.org/fooExample", httpURLConnection0.toString());
      assertFalse(httpURLConnection0.getDefaultAllowUserInteraction());
      assertTrue(httpURLConnection0.getUseCaches());
      assertEquals((-1), httpURLConnection0.getContentLength());
      assertFalse(httpURLConnection0.getDoOutput());
      assertFalse(httpURLConnection0.getAllowUserInteraction());
      assertEquals("GET", httpURLConnection0.getRequestMethod());
      assertTrue(httpURLConnection0.getDoInput());
      assertTrue(httpURLConnection0.getFollowRedirects());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(41, httpConnection_Request1.timeout());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(0, linkedHashMap0.size());
      assertTrue(linkedHashMap0.isEmpty());
      assertEquals(41, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertFalse(int0 == int1);
      assertEquals(41, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(41, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.parserDefined);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.parserDefined);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(41, httpConnection_Request2.timeoutMilliseconds);
      assertNotNull(linkedHashMap0);
      
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request1, httpConnection_Response0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Could not find: www.someFakeButWellFormedURL.org
         //
         verifyException("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection", e);
      }
  }

  @Test(timeout = 11000)
  public void test73()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertNotNull(httpConnection_Request0);
      
      int int0 = 58;
      String string0 = "--";
      String string1 = "org.jsoup.helper.HttpConGection$Response$2";
      HttpConnection.Request httpConnection_Request1 = (HttpConnection.Request)httpConnection_Request0.cookie(string0, string1);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.parserDefined);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertNotNull(httpConnection_Request1);
      
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://www.someFakeButWellFormedURL.org/fooExample?http=");
      boolean boolean0 = NetworkHandling.createRemoteTextFile(evoSuiteURL0, string0);
      assertNotSame(string0, string1);
      assertTrue(boolean0);
      assertFalse(string0.equals((Object)string1));
      
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request0.timeout(int0);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(58, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request2.timeout());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request2.parserDefined);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertNotNull(httpConnection_Request2);
      
      HttpConnection.Request httpConnection_Request3 = httpConnection_Request2.parser(httpConnection_Request0.parser);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(58, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request2.timeout());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertEquals(58, httpConnection_Request3.timeout());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.followRedirects);
      assertTrue(httpConnection_Request2.parserDefined);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.parserDefined);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.followRedirects);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertEquals(58, httpConnection_Request3.timeoutMilliseconds);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertNotNull(httpConnection_Request3);
      
      HttpConnection.KeyVal httpConnection_KeyVal0 = new HttpConnection.KeyVal();
      assertNull(httpConnection_KeyVal0.key());
      assertNull(httpConnection_KeyVal0.value());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertNotNull(httpConnection_KeyVal0);
      
      String string2 = "";
      HttpConnection.KeyVal httpConnection_KeyVal1 = httpConnection_KeyVal0.value(string2);
      assertNull(httpConnection_KeyVal0.key());
      assertEquals("", httpConnection_KeyVal0.value());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertFalse(httpConnection_KeyVal1.hasInputStream());
      assertEquals("", httpConnection_KeyVal1.value());
      assertNull(httpConnection_KeyVal1.key());
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertSame(httpConnection_KeyVal1, httpConnection_KeyVal0);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertNotNull(httpConnection_KeyVal1);
      
      URL uRL0 = MockURL.getHttpExample();
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertNotNull(uRL0);
      
      HttpConnection.Request httpConnection_Request4 = httpConnection_Request3.data((Connection.KeyVal) httpConnection_KeyVal0);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(58, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request2.timeout());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertEquals(58, httpConnection_Request3.timeout());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertNull(httpConnection_KeyVal0.key());
      assertEquals("", httpConnection_KeyVal0.value());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals(58, httpConnection_Request4.timeout());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.followRedirects);
      assertTrue(httpConnection_Request2.parserDefined);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.parserDefined);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.followRedirects);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertEquals(58, httpConnection_Request3.timeoutMilliseconds);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertTrue(httpConnection_Request4.validateTSLCertificates);
      assertEquals(58, httpConnection_Request4.timeoutMilliseconds);
      assertTrue(httpConnection_Request4.parserDefined);
      assertTrue(httpConnection_Request4.followRedirects);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertNotNull(httpConnection_Request4);
      
      String string3 = "http";
      httpConnection_KeyVal0.key = string3;
      assertEquals("", httpConnection_KeyVal0.value());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("http", httpConnection_KeyVal0.key());
      
      HttpConnection.Request httpConnection_Request5 = (HttpConnection.Request)httpConnection_Request2.url(uRL0);
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertTrue(httpConnection_Request5.followRedirects());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertTrue(httpConnection_Request5.validateTLSCertificates());
      assertEquals(58, httpConnection_Request5.timeout());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request5.postDataCharset());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(58, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request2.timeout());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertTrue(httpConnection_Request5.followRedirects);
      assertEquals(58, httpConnection_Request5.timeoutMilliseconds);
      assertTrue(httpConnection_Request5.parserDefined);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertTrue(httpConnection_Request5.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.followRedirects);
      assertTrue(httpConnection_Request2.parserDefined);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertNotNull(httpConnection_Request5);
      
      String string4 = "gKX";
      HttpConnection.Request httpConnection_Request6 = (HttpConnection.Request)httpConnection_Request5.cookie(httpConnection_KeyVal1.key, httpConnection_KeyVal0.key);
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertTrue(httpConnection_Request5.followRedirects());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertTrue(httpConnection_Request5.validateTLSCertificates());
      assertEquals(58, httpConnection_Request5.timeout());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request5.postDataCharset());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(58, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertTrue(httpConnection_Request6.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request6.method());
      assertEquals(58, httpConnection_Request6.timeout());
      assertFalse(httpConnection_Request6.ignoreHttpErrors());
      assertTrue(httpConnection_Request6.followRedirects());
      assertEquals(1048576, httpConnection_Request6.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request6.postDataCharset());
      assertFalse(httpConnection_Request6.ignoreContentType());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request2.timeout());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals("", httpConnection_KeyVal0.value());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("http", httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal1.hasInputStream());
      assertEquals("", httpConnection_KeyVal1.value());
      assertEquals("http", httpConnection_KeyVal1.key());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertSame(httpConnection_Request5, httpConnection_Request6);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request6);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request6, httpConnection_Request0);
      assertSame(httpConnection_Request6, httpConnection_Request1);
      assertSame(httpConnection_Request6, httpConnection_Request5);
      assertSame(httpConnection_Request6, httpConnection_Request4);
      assertSame(httpConnection_Request6, httpConnection_Request3);
      assertSame(httpConnection_Request6, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request6);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertNotSame(string2, string4);
      assertNotSame(string2, string3);
      assertSame(httpConnection_KeyVal1, httpConnection_KeyVal0);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string4));
      assertFalse(string2.equals((Object)string3));
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertTrue(httpConnection_Request5.followRedirects);
      assertEquals(58, httpConnection_Request5.timeoutMilliseconds);
      assertTrue(httpConnection_Request5.parserDefined);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertTrue(httpConnection_Request5.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request6.parserDefined);
      assertTrue(httpConnection_Request6.followRedirects);
      assertFalse(httpConnection_Request6.ignoreHttpErrors);
      assertFalse(httpConnection_Request6.ignoreContentType);
      assertEquals(1048576, httpConnection_Request6.maxBodySizeBytes);
      assertTrue(httpConnection_Request6.validateTSLCertificates);
      assertEquals(58, httpConnection_Request6.timeoutMilliseconds);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.followRedirects);
      assertTrue(httpConnection_Request2.parserDefined);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertNotNull(httpConnection_Request6);
      
      HttpConnection.Response httpConnection_Response0 = HttpConnection.Response.execute((Connection.Request) httpConnection_Request5);
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertTrue(httpConnection_Request5.followRedirects());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertTrue(httpConnection_Request5.validateTLSCertificates());
      assertEquals(58, httpConnection_Request5.timeout());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request5.postDataCharset());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(58, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertEquals(200, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request2.timeout());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertSame(httpConnection_Request5, httpConnection_Request6);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request6);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request6);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertTrue(httpConnection_Request5.followRedirects);
      assertEquals(58, httpConnection_Request5.timeoutMilliseconds);
      assertTrue(httpConnection_Request5.parserDefined);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertTrue(httpConnection_Request5.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(200, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.followRedirects);
      assertTrue(httpConnection_Request2.parserDefined);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertNotNull(httpConnection_Response0);
      
      String string5 = httpConnection_Response0.charset();
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertTrue(httpConnection_Request5.followRedirects());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertTrue(httpConnection_Request5.validateTLSCertificates());
      assertEquals(58, httpConnection_Request5.timeout());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request5.postDataCharset());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(58, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertEquals(200, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request2.timeout());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertSame(httpConnection_Request5, httpConnection_Request6);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request6);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request6);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertTrue(httpConnection_Request5.followRedirects);
      assertEquals(58, httpConnection_Request5.timeoutMilliseconds);
      assertTrue(httpConnection_Request5.parserDefined);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertTrue(httpConnection_Request5.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(200, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.followRedirects);
      assertTrue(httpConnection_Request2.parserDefined);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertNull(string5);
      
      HttpConnection.Response.initUnSecureTSL();
  }

  @Test(timeout = 11000)
  public void test74()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertNotNull(httpConnection_Request0);
      
      int int0 = 58;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      String string0 = "--";
      String string1 = "org.jsoup.helper.HttpConnection$Response$2";
      HttpConnection.Request httpConnection_Request1 = (HttpConnection.Request)httpConnection_Request0.cookie(string0, string1);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.parserDefined);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertNotNull(httpConnection_Request1);
      
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://www.someFakeButWellFormedURL.org/fooExample?http=");
      boolean boolean0 = NetworkHandling.createRemoteTextFile(evoSuiteURL0, string0);
      assertNotSame(string0, string1);
      assertTrue(boolean0);
      assertFalse(string0.equals((Object)string1));
      
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request0.timeout(int0);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertFalse(httpConnection_Request2.parserDefined);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      assertNotNull(httpConnection_Request2);
      
      HttpConnection.Request httpConnection_Request3 = httpConnection_Request2.parser(httpConnection_Request0.parser);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertEquals(58, httpConnection_Request3.timeout());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertTrue(httpConnection_Request3.followRedirects());
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request2.parserDefined);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.parserDefined);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertEquals(58, httpConnection_Request3.timeoutMilliseconds);
      assertNotNull(httpConnection_Request3);
      
      HttpConnection.KeyVal httpConnection_KeyVal0 = new HttpConnection.KeyVal();
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertNull(httpConnection_KeyVal0.value());
      assertNull(httpConnection_KeyVal0.key());
      assertNotNull(httpConnection_KeyVal0);
      
      String string2 = "";
      HttpConnection.KeyVal httpConnection_KeyVal1 = httpConnection_KeyVal0.value(string2);
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("", httpConnection_KeyVal0.value());
      assertNull(httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal1.hasInputStream());
      assertEquals("", httpConnection_KeyVal1.value());
      assertNull(httpConnection_KeyVal1.key());
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertSame(httpConnection_KeyVal1, httpConnection_KeyVal0);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(httpConnection_KeyVal1);
      
      URL uRL0 = MockURL.getHttpExample();
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertNotNull(uRL0);
      
      HttpConnection.Request httpConnection_Request4 = httpConnection_Request3.data((Connection.KeyVal) httpConnection_KeyVal0);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertEquals(58, httpConnection_Request3.timeout());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertTrue(httpConnection_Request3.followRedirects());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("", httpConnection_KeyVal0.value());
      assertNull(httpConnection_KeyVal0.key());
      assertEquals(58, httpConnection_Request4.timeout());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request2.parserDefined);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.parserDefined);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertEquals(58, httpConnection_Request3.timeoutMilliseconds);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertEquals(58, httpConnection_Request4.timeoutMilliseconds);
      assertTrue(httpConnection_Request4.validateTSLCertificates);
      assertTrue(httpConnection_Request4.followRedirects);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertTrue(httpConnection_Request4.parserDefined);
      assertNotNull(httpConnection_Request4);
      
      String string3 = "http";
      httpConnection_KeyVal0.key = string3;
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("", httpConnection_KeyVal0.value());
      assertEquals("http", httpConnection_KeyVal0.key());
      
      HttpConnection.Request httpConnection_Request5 = (HttpConnection.Request)httpConnection_Request2.url(uRL0);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertTrue(httpConnection_Request5.validateTLSCertificates());
      assertTrue(httpConnection_Request5.followRedirects());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request5.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertEquals("UTF-8", httpConnection_Request5.postDataCharset());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertTrue(httpConnection_Request5.followRedirects);
      assertTrue(httpConnection_Request5.parserDefined);
      assertEquals(58, httpConnection_Request5.timeoutMilliseconds);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertTrue(httpConnection_Request5.validateTSLCertificates);
      assertTrue(httpConnection_Request2.parserDefined);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      assertNotNull(httpConnection_Request5);
      
      String string4 = "KXf";
      HttpConnection.Response httpConnection_Response0 = HttpConnection.Response.execute((Connection.Request) httpConnection_Request5);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertTrue(httpConnection_Request5.validateTLSCertificates());
      assertTrue(httpConnection_Request5.followRedirects());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request5.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertEquals("UTF-8", httpConnection_Request5.postDataCharset());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertEquals(200, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertTrue(httpConnection_Request5.followRedirects);
      assertTrue(httpConnection_Request5.parserDefined);
      assertEquals(58, httpConnection_Request5.timeoutMilliseconds);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertTrue(httpConnection_Request5.validateTSLCertificates);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(200, httpConnection_Response0.statusCode);
      assertTrue(httpConnection_Response0.executed);
      assertTrue(httpConnection_Request2.parserDefined);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      assertNotNull(httpConnection_Response0);
      
      String string5 = httpConnection_Response0.charset();
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertTrue(httpConnection_Request5.validateTLSCertificates());
      assertTrue(httpConnection_Request5.followRedirects());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request5.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertEquals("UTF-8", httpConnection_Request5.postDataCharset());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertEquals(200, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertTrue(httpConnection_Request5.followRedirects);
      assertTrue(httpConnection_Request5.parserDefined);
      assertEquals(58, httpConnection_Request5.timeoutMilliseconds);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertTrue(httpConnection_Request5.validateTSLCertificates);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(200, httpConnection_Response0.statusCode);
      assertTrue(httpConnection_Response0.executed);
      assertTrue(httpConnection_Request2.parserDefined);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      assertNull(string5);
      
      HttpURLConnection httpURLConnection0 = HttpConnection.Response.createConnection(httpConnection_Response0.req);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertTrue(httpConnection_Request5.validateTLSCertificates());
      assertTrue(httpConnection_Request5.followRedirects());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request5.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertEquals("UTF-8", httpConnection_Request5.postDataCharset());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertEquals(200, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertNull(httpURLConnection0.getContentEncoding());
      assertFalse(httpURLConnection0.getAllowUserInteraction());
      assertEquals((-1), httpURLConnection0.getContentLength());
      assertFalse(httpURLConnection0.getInstanceFollowRedirects());
      assertNull(httpURLConnection0.getContentType());
      assertFalse(httpURLConnection0.usingProxy());
      assertFalse(httpURLConnection0.getDefaultAllowUserInteraction());
      assertTrue(httpURLConnection0.getUseCaches());
      assertEquals(58, httpURLConnection0.getConnectTimeout());
      assertEquals(0L, httpURLConnection0.getIfModifiedSince());
      assertTrue(httpURLConnection0.getDefaultUseCaches());
      assertEquals("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection:http://www.someFakeButWellFormedURL.org/fooExample?http=", httpURLConnection0.toString());
      assertTrue(httpURLConnection0.getFollowRedirects());
      assertEquals("GET", httpURLConnection0.getRequestMethod());
      assertFalse(httpURLConnection0.getDoOutput());
      assertTrue(httpURLConnection0.getDoInput());
      assertEquals(58, httpURLConnection0.getReadTimeout());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertTrue(httpConnection_Request5.followRedirects);
      assertTrue(httpConnection_Request5.parserDefined);
      assertEquals(58, httpConnection_Request5.timeoutMilliseconds);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertTrue(httpConnection_Request5.validateTSLCertificates);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(200, httpConnection_Response0.statusCode);
      assertTrue(httpConnection_Response0.executed);
      assertTrue(httpConnection_Request2.parserDefined);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      assertNotNull(httpURLConnection0);
      
      int int1 = 200;
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(int1);
      assertEquals("", byteArrayOutputStream0.toString());
      assertEquals(0, byteArrayOutputStream0.size());
      assertFalse(int1 == int0);
      assertNotNull(byteArrayOutputStream0);
      
      String string6 = "(K!4buN|pi2 p'";
      HttpConnection.Response.writePost(httpConnection_Request5, byteArrayOutputStream0, string6);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertTrue(httpConnection_Request5.validateTLSCertificates());
      assertTrue(httpConnection_Request5.followRedirects());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request5.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertEquals("UTF-8", httpConnection_Request5.postDataCharset());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertEquals("--(K!4buN|pi2 p'--", byteArrayOutputStream0.toString());
      assertEquals(18, byteArrayOutputStream0.size());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertNotSame(string6, string1);
      assertNotSame(string6, string4);
      assertNotSame(string6, string3);
      assertNotSame(string6, string0);
      assertNotSame(string6, string2);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertFalse(string6.equals((Object)string1));
      assertFalse(string6.equals((Object)string4));
      assertFalse(string6.equals((Object)string3));
      assertFalse(string6.equals((Object)string0));
      assertFalse(string6.equals((Object)string2));
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertTrue(httpConnection_Request5.followRedirects);
      assertTrue(httpConnection_Request5.parserDefined);
      assertEquals(58, httpConnection_Request5.timeoutMilliseconds);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertTrue(httpConnection_Request5.validateTSLCertificates);
      assertTrue(httpConnection_Request2.parserDefined);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      
      HostnameVerifier hostnameVerifier0 = HttpConnection.Response.getInsecureVerifier();
      assertNotNull(hostnameVerifier0);
      
      String string7 = HttpConnection.Response.getRequestCookieString(httpConnection_Request0);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request0.timeout());
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertNotSame(string7, string2);
      assertNotSame(string7, string6);
      assertNotSame(string7, string4);
      assertNotSame(string7, string3);
      assertNotSame(string7, string1);
      assertNotSame(string7, string0);
      assertEquals("--=org.jsoup.helper.HttpConnection$Response$2", string7);
      assertFalse(string7.equals((Object)string2));
      assertFalse(string7.equals((Object)string6));
      assertFalse(string7.equals((Object)string4));
      assertFalse(string7.equals((Object)string3));
      assertFalse(string7.equals((Object)string1));
      assertFalse(string7.equals((Object)string0));
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertNotNull(string7);
  }

  @Test(timeout = 11000)
  public void test75()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertNotNull(httpConnection_Request0);
      
      int int0 = 58;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      String string0 = "--";
      String string1 = "org.jsoup.helper.HttpConnection$Response$2";
      HttpConnection.Request httpConnection_Request1 = (HttpConnection.Request)httpConnection_Request0.cookie(string0, string1);
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request1.parserDefined);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertNotNull(httpConnection_Request1);
      
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://www.someFakeButWellFormedURL.org/fooExample?http=");
      boolean boolean0 = NetworkHandling.createRemoteTextFile(evoSuiteURL0, string0);
      assertNotSame(string0, string1);
      assertTrue(boolean0);
      assertFalse(string0.equals((Object)string1));
      
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request0.timeout(int0);
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(58, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertFalse(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      assertNotNull(httpConnection_Request2);
      
      httpConnection_Request2.postDataCharset = httpConnection_Request1.postDataCharset;
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(58, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(58, httpConnection_Request1.timeout());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals(58, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      
      String string2 = "";
      URL uRL0 = MockURL.getHttpExample();
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertNotNull(uRL0);
      
      int int1 = (-1076868217);
      httpConnection_Request0.timeoutMilliseconds = int1;
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals((-1076868217), httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      
      String string3 = "http";
      HttpConnection.Request httpConnection_Request3 = (HttpConnection.Request)httpConnection_Request2.url(uRL0);
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals((-1076868217), httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals((-1076868217), httpConnection_Request2.timeout());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertEquals((-1076868217), httpConnection_Request3.timeout());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertFalse(int0 == int1);
      assertEquals((-1076868217), httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertEquals((-1076868217), httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertFalse(httpConnection_Request3.parserDefined);
      assertEquals((-1076868217), httpConnection_Request3.timeoutMilliseconds);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.followRedirects);
      assertNotNull(httpConnection_Request3);
      
      String string4 = "KXf";
      // Undeclared exception!
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // timeout can not be negative
         //
         verifyException("java.net.URLConnection", e);
      }
  }

  @Test(timeout = 11000)
  public void test76()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertNotNull(httpConnection_Request0);
      
      int int0 = 58;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      String string0 = "--";
      String string1 = "org.jsoup.helper.HttpConnection$Response$2";
      HttpConnection.Request httpConnection_Request1 = (HttpConnection.Request)httpConnection_Request0.cookie(string0, string1);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.parserDefined);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertNotNull(httpConnection_Request1);
      
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://www.someFakeButWellFormedURL.org/fooExample?http=");
      boolean boolean0 = NetworkHandling.createRemoteTextFile(evoSuiteURL0, string0);
      assertNotSame(string0, string1);
      assertTrue(boolean0);
      assertFalse(string0.equals((Object)string1));
      
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request0.timeout(int0);
      assertEquals(58, httpConnection_Request0.timeout());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(58, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertNotNull(httpConnection_Request2);
      
      HttpConnection.Request httpConnection_Request3 = httpConnection_Request2.parser(httpConnection_Request0.parser);
      assertEquals(58, httpConnection_Request0.timeout());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(58, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request3.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertTrue(httpConnection_Request3.followRedirects());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertTrue(httpConnection_Request3.followRedirects);
      assertTrue(httpConnection_Request3.parserDefined);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertEquals(58, httpConnection_Request3.timeoutMilliseconds);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertNotNull(httpConnection_Request3);
      
      HttpConnection.KeyVal httpConnection_KeyVal0 = new HttpConnection.KeyVal();
      assertNull(httpConnection_KeyVal0.value());
      assertNull(httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertNotNull(httpConnection_KeyVal0);
      
      String string2 = "";
      HttpConnection.KeyVal httpConnection_KeyVal1 = httpConnection_KeyVal0.value(string2);
      assertEquals("", httpConnection_KeyVal0.value());
      assertNull(httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertFalse(httpConnection_KeyVal1.hasInputStream());
      assertEquals("", httpConnection_KeyVal1.value());
      assertNull(httpConnection_KeyVal1.key());
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertSame(httpConnection_KeyVal1, httpConnection_KeyVal0);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(httpConnection_KeyVal1);
      
      URL uRL0 = MockURL.getHttpExample();
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertNotNull(uRL0);
      
      HttpConnection.Request httpConnection_Request4 = httpConnection_Request3.data((Connection.KeyVal) httpConnection_KeyVal0);
      assertEquals(58, httpConnection_Request0.timeout());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(58, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request3.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals("", httpConnection_KeyVal0.value());
      assertNull(httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals(58, httpConnection_Request4.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertTrue(httpConnection_Request3.followRedirects);
      assertTrue(httpConnection_Request3.parserDefined);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertEquals(58, httpConnection_Request3.timeoutMilliseconds);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertTrue(httpConnection_Request4.validateTSLCertificates);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertTrue(httpConnection_Request4.followRedirects);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertTrue(httpConnection_Request4.parserDefined);
      assertEquals(58, httpConnection_Request4.timeoutMilliseconds);
      assertNotNull(httpConnection_Request4);
      
      String string3 = "http";
      httpConnection_KeyVal0.key = string3;
      assertEquals("http", httpConnection_KeyVal0.key());
      assertEquals("", httpConnection_KeyVal0.value());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      
      HttpConnection.Request httpConnection_Request5 = (HttpConnection.Request)httpConnection_Request2.url(uRL0);
      assertEquals(58, httpConnection_Request0.timeout());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(58, httpConnection_Request5.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request5.postDataCharset());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertTrue(httpConnection_Request5.followRedirects());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertTrue(httpConnection_Request5.validateTLSCertificates());
      assertEquals(58, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertTrue(httpConnection_Request5.validateTSLCertificates);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertTrue(httpConnection_Request5.parserDefined);
      assertTrue(httpConnection_Request5.followRedirects);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertEquals(58, httpConnection_Request5.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertNotNull(httpConnection_Request5);
      
      String string4 = "KXf";
      HttpConnection.Response httpConnection_Response0 = HttpConnection.Response.execute((Connection.Request) httpConnection_Request5);
      assertEquals(58, httpConnection_Request0.timeout());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(58, httpConnection_Request5.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request5.postDataCharset());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertTrue(httpConnection_Request5.followRedirects());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertTrue(httpConnection_Request5.validateTLSCertificates());
      assertEquals(200, httpConnection_Response0.statusCode());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertEquals(58, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertTrue(httpConnection_Request5.validateTSLCertificates);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertTrue(httpConnection_Request5.parserDefined);
      assertTrue(httpConnection_Request5.followRedirects);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertEquals(58, httpConnection_Request5.timeoutMilliseconds);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertTrue(httpConnection_Response0.executed);
      assertEquals(200, httpConnection_Response0.statusCode);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertNotNull(httpConnection_Response0);
      
      String string5 = httpConnection_Response0.charset();
      assertEquals(58, httpConnection_Request0.timeout());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(58, httpConnection_Request5.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request5.postDataCharset());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertTrue(httpConnection_Request5.followRedirects());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertTrue(httpConnection_Request5.validateTLSCertificates());
      assertEquals(200, httpConnection_Response0.statusCode());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertEquals(58, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertTrue(httpConnection_Request5.validateTSLCertificates);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertTrue(httpConnection_Request5.parserDefined);
      assertTrue(httpConnection_Request5.followRedirects);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertEquals(58, httpConnection_Request5.timeoutMilliseconds);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertTrue(httpConnection_Response0.executed);
      assertEquals(200, httpConnection_Response0.statusCode);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertNull(string5);
      
      HttpURLConnection httpURLConnection0 = HttpConnection.Response.createConnection(httpConnection_Response0.req);
      assertEquals(58, httpConnection_Request0.timeout());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(58, httpConnection_Request5.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request5.postDataCharset());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertTrue(httpConnection_Request5.followRedirects());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertTrue(httpConnection_Request5.validateTLSCertificates());
      assertEquals(200, httpConnection_Response0.statusCode());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertTrue(httpURLConnection0.getDefaultUseCaches());
      assertFalse(httpURLConnection0.usingProxy());
      assertFalse(httpURLConnection0.getInstanceFollowRedirects());
      assertNull(httpURLConnection0.getContentType());
      assertEquals(0L, httpURLConnection0.getIfModifiedSince());
      assertNull(httpURLConnection0.getContentEncoding());
      assertFalse(httpURLConnection0.getAllowUserInteraction());
      assertTrue(httpURLConnection0.getUseCaches());
      assertEquals(58, httpURLConnection0.getReadTimeout());
      assertFalse(httpURLConnection0.getDefaultAllowUserInteraction());
      assertEquals((-1), httpURLConnection0.getContentLength());
      assertEquals("GET", httpURLConnection0.getRequestMethod());
      assertFalse(httpURLConnection0.getDoOutput());
      assertEquals("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection:http://www.someFakeButWellFormedURL.org/fooExample?http=", httpURLConnection0.toString());
      assertTrue(httpURLConnection0.getDoInput());
      assertEquals(58, httpURLConnection0.getConnectTimeout());
      assertTrue(httpURLConnection0.getFollowRedirects());
      assertEquals(58, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertTrue(httpConnection_Request5.validateTSLCertificates);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertTrue(httpConnection_Request5.parserDefined);
      assertTrue(httpConnection_Request5.followRedirects);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertEquals(58, httpConnection_Request5.timeoutMilliseconds);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertTrue(httpConnection_Response0.executed);
      assertEquals(200, httpConnection_Response0.statusCode);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertNotNull(httpURLConnection0);
      
      int int1 = 200;
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(int1);
      assertEquals(0, byteArrayOutputStream0.size());
      assertEquals("", byteArrayOutputStream0.toString());
      assertFalse(int1 == int0);
      assertNotNull(byteArrayOutputStream0);
      
      String string6 = "w'9|\\mc`v}";
      boolean boolean1 = httpConnection_Response0.hasHeader(string6);
      assertEquals(58, httpConnection_Request0.timeout());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(58, httpConnection_Request5.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request5.postDataCharset());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertTrue(httpConnection_Request5.followRedirects());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertTrue(httpConnection_Request5.validateTLSCertificates());
      assertEquals(200, httpConnection_Response0.statusCode());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertEquals(58, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertNotSame(string6, string3);
      assertNotSame(string6, string0);
      assertNotSame(string6, string1);
      assertNotSame(string6, string4);
      assertNotSame(string6, string2);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertFalse(boolean1);
      assertFalse(int0 == int1);
      assertFalse(string6.equals((Object)string3));
      assertFalse(string6.equals((Object)string0));
      assertFalse(string6.equals((Object)string1));
      assertFalse(string6.equals((Object)string4));
      assertFalse(string6.equals((Object)string2));
      assertFalse(boolean1 == boolean0);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertTrue(httpConnection_Request5.validateTSLCertificates);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertTrue(httpConnection_Request5.parserDefined);
      assertTrue(httpConnection_Request5.followRedirects);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertEquals(58, httpConnection_Request5.timeoutMilliseconds);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertTrue(httpConnection_Response0.executed);
      assertEquals(200, httpConnection_Response0.statusCode);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreContentType);
      
      String string7 = "(K!4buN|pi2 p'";
      HttpConnection.Response.writePost(httpConnection_Request5, byteArrayOutputStream0, string7);
      assertEquals(58, httpConnection_Request0.timeout());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(58, httpConnection_Request5.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request5.postDataCharset());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertTrue(httpConnection_Request5.followRedirects());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertTrue(httpConnection_Request5.validateTLSCertificates());
      assertEquals("--(K!4buN|pi2 p'--", byteArrayOutputStream0.toString());
      assertEquals(18, byteArrayOutputStream0.size());
      assertEquals(58, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertNotSame(string7, string6);
      assertNotSame(string7, string1);
      assertNotSame(string7, string0);
      assertNotSame(string7, string3);
      assertNotSame(string7, string2);
      assertNotSame(string7, string4);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertFalse(string7.equals((Object)string6));
      assertFalse(string7.equals((Object)string1));
      assertFalse(string7.equals((Object)string0));
      assertFalse(string7.equals((Object)string3));
      assertFalse(string7.equals((Object)string2));
      assertFalse(string7.equals((Object)string4));
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertTrue(httpConnection_Request5.validateTSLCertificates);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertTrue(httpConnection_Request5.parserDefined);
      assertTrue(httpConnection_Request5.followRedirects);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertEquals(58, httpConnection_Request5.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreContentType);
      
      HttpConnection.Response httpConnection_Response1 = HttpConnection.Response.execute(httpConnection_Response0.req);
      assertEquals(58, httpConnection_Request0.timeout());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(58, httpConnection_Request5.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request5.postDataCharset());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertTrue(httpConnection_Request5.followRedirects());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertTrue(httpConnection_Request5.validateTLSCertificates());
      assertEquals(200, httpConnection_Response0.statusCode());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertEquals(58, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.contentType());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.charset());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertFalse(int0 == int1);
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertTrue(httpConnection_Request5.validateTSLCertificates);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertTrue(httpConnection_Request5.parserDefined);
      assertTrue(httpConnection_Request5.followRedirects);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertEquals(58, httpConnection_Request5.timeoutMilliseconds);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertTrue(httpConnection_Response0.executed);
      assertEquals(200, httpConnection_Response0.statusCode);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertTrue(httpConnection_Response1.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNotNull(httpConnection_Response1);
      
      String string8 = httpConnection_Response1.body();
      assertEquals(58, httpConnection_Request0.timeout());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(58, httpConnection_Request5.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request5.postDataCharset());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertTrue(httpConnection_Request5.followRedirects());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertTrue(httpConnection_Request5.validateTLSCertificates());
      assertEquals(200, httpConnection_Response0.statusCode());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertEquals(58, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.contentType());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.charset());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertNotSame(string8, string0);
      assertNotSame(string8, string1);
      assertNotSame(string8, string2);
      assertNotSame(string8, string4);
      assertNotSame(string8, string7);
      assertNotSame(string8, string3);
      assertNotSame(string8, string6);
      assertEquals("--", string8);
      assertFalse(int0 == int1);
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertFalse(string8.equals((Object)string1));
      assertFalse(string8.equals((Object)string2));
      assertFalse(string8.equals((Object)string4));
      assertFalse(string8.equals((Object)string7));
      assertTrue(string8.equals((Object)string0));
      assertFalse(string8.equals((Object)string3));
      assertFalse(string8.equals((Object)string6));
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertTrue(httpConnection_Request5.validateTSLCertificates);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertTrue(httpConnection_Request5.parserDefined);
      assertTrue(httpConnection_Request5.followRedirects);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertEquals(58, httpConnection_Request5.timeoutMilliseconds);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertTrue(httpConnection_Response0.executed);
      assertEquals(200, httpConnection_Response0.statusCode);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertTrue(httpConnection_Response1.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNotNull(string8);
      
      Document document0 = httpConnection_Response1.parse();
      assertEquals(58, httpConnection_Request0.timeout());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(58, httpConnection_Request5.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request5.postDataCharset());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertTrue(httpConnection_Request5.followRedirects());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertTrue(httpConnection_Request5.validateTLSCertificates());
      assertEquals(200, httpConnection_Response0.statusCode());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertEquals(58, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.contentType());
      assertEquals("UTF-8", httpConnection_Response1.charset());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("#root", document0.tagName());
      assertFalse(document0.updateMetaCharsetElement());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample?http=", document0.baseUri());
      assertEquals(1, document0.childNodeSize());
      assertFalse(document0.isBlock());
      assertEquals("#document", document0.nodeName());
      assertEquals(0, document0.siblingIndex());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample?http=", document0.location());
      assertEquals(Document.QuirksMode.noQuirks, document0.quirksMode());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertFalse(int0 == int1);
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertTrue(httpConnection_Request5.validateTSLCertificates);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertTrue(httpConnection_Request5.parserDefined);
      assertTrue(httpConnection_Request5.followRedirects);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertEquals(58, httpConnection_Request5.timeoutMilliseconds);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertTrue(httpConnection_Response0.executed);
      assertEquals(200, httpConnection_Response0.statusCode);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertTrue(httpConnection_Response1.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNotNull(document0);
      
      byte[] byteArray0 = httpConnection_Response1.bodyAsBytes();
      assertEquals(58, httpConnection_Request0.timeout());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(58, httpConnection_Request5.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request5.postDataCharset());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertTrue(httpConnection_Request5.followRedirects());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertTrue(httpConnection_Request5.validateTLSCertificates());
      assertEquals(200, httpConnection_Response0.statusCode());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertEquals(58, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.contentType());
      assertEquals("UTF-8", httpConnection_Response1.charset());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertArrayEquals(new byte[] {(byte)45, (byte)45}, byteArray0);
      assertFalse(int0 == int1);
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertTrue(httpConnection_Request5.validateTSLCertificates);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertTrue(httpConnection_Request5.parserDefined);
      assertTrue(httpConnection_Request5.followRedirects);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertEquals(58, httpConnection_Request5.timeoutMilliseconds);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertTrue(httpConnection_Response0.executed);
      assertEquals(200, httpConnection_Response0.statusCode);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertTrue(httpConnection_Response1.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(2, byteArray0.length);
      assertNotNull(byteArray0);
  }

  @Test(timeout = 11000)
  public void test77()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      String string0 = "\"R-Q";
      boolean boolean0 = FileSystemHandling.appendLineToFile(evoSuiteFile0, string0);
      assertFalse(boolean0);
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertNotNull(httpConnection_Response0);
      
      boolean boolean1 = false;
      httpConnection_Response0.executed = boolean1;
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
      
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>(httpConnection_Response0.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertNotNull(hashMap0);
      
      LinkedList<String> linkedList0 = new LinkedList<String>();
      assertEquals(0, linkedList0.size());
      assertFalse(linkedList0.contains(string0));
      assertNotNull(linkedList0);
      
      List<String> list0 = hashMap0.put(httpConnection_Response0.contentType, linkedList0);
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(1, hashMap0.size());
      assertFalse(hashMap0.isEmpty());
      assertEquals(0, linkedList0.size());
      assertFalse(linkedList0.contains(string0));
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertNull(list0);
      
      String string1 = "d{nTu`@>T[";
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      assertEquals(0, linkedList1.size());
      assertNotNull(linkedList1);
      
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>(linkedList1);
      assertEquals(0, linkedList1.size());
      assertEquals(0, linkedList2.size());
      assertTrue(linkedList2.equals((Object)linkedList1));
      assertNotNull(linkedList2);
      
      LinkedList<String> linkedList3 = new LinkedList<String>();
      assertEquals(0, linkedList3.size());
      assertFalse(linkedList3.contains(string1));
      assertTrue(linkedList3.equals((Object)linkedList0));
      assertNotNull(linkedList3);
      
      LinkedList<String> linkedList4 = new LinkedList<String>();
      assertEquals(0, linkedList4.size());
      assertFalse(linkedList4.contains(string1));
      assertTrue(linkedList4.equals((Object)linkedList3));
      assertTrue(linkedList4.equals((Object)linkedList0));
      assertNotNull(linkedList4);
      
      boolean boolean2 = linkedList4.offerLast(httpConnection_Response0.LOCATION);
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(1, linkedList4.size());
      assertNotSame(linkedList4, linkedList0);
      assertNotSame(linkedList4, linkedList3);
      assertFalse(linkedList4.contains(string1));
      assertTrue(boolean2);
      assertFalse(linkedList4.equals((Object)linkedList0));
      assertFalse(linkedList4.equals((Object)linkedList3));
      assertFalse(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.statusCode);
      
      boolean boolean3 = linkedList4.add(string0);
      assertEquals(2, linkedList4.size());
      assertNotSame(string0, string1);
      assertNotSame(linkedList4, linkedList0);
      assertNotSame(linkedList4, linkedList3);
      assertTrue(linkedList4.contains(string0));
      assertFalse(linkedList4.contains(string1));
      assertTrue(boolean3);
      assertFalse(string0.equals((Object)string1));
      assertFalse(linkedList4.equals((Object)linkedList0));
      assertFalse(linkedList4.equals((Object)linkedList3));
      assertTrue(boolean3 == boolean2);
      assertFalse(boolean3 == boolean0);
      assertFalse(boolean3 == boolean1);
      
      List<String> list1 = hashMap0.put(string1, linkedList4);
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(2, hashMap0.size());
      assertFalse(hashMap0.isEmpty());
      assertEquals(2, linkedList4.size());
      assertNotSame(string1, string0);
      assertNotSame(linkedList4, linkedList0);
      assertNotSame(linkedList4, linkedList3);
      assertTrue(linkedList4.contains(string0));
      assertFalse(linkedList4.contains(string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(linkedList4.equals((Object)linkedList0));
      assertFalse(linkedList4.equals((Object)linkedList3));
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertNull(list1);
      
      httpConnection_Response0.processResponseHeaders(hashMap0);
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(2, hashMap0.size());
      assertFalse(hashMap0.isEmpty());
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.statusCode);
      
      // Undeclared exception!
      try { 
        HttpConnection.Response.getRequestCookieString(httpConnection_Response0.req);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.helper.HttpConnection$Response", e);
      }
  }

  @Test(timeout = 11000)
  public void test78()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      String string0 = "\"R-Q";
      boolean boolean0 = FileSystemHandling.appendLineToFile(evoSuiteFile0, string0);
      assertFalse(boolean0);
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertNotNull(httpConnection_Response0);
      
      boolean boolean1 = true;
      httpConnection_Response0.executed = boolean1;
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      
      // Undeclared exception!
      try { 
        httpConnection_Response0.body();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.charset.CharsetDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test79()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertNotNull(httpConnection_Request0);
      
      HttpConnection.KeyVal httpConnection_KeyVal0 = HttpConnection.KeyVal.create(httpConnection_Request0.postDataCharset, httpConnection_Request0.postDataCharset);
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertEquals("UTF-8", httpConnection_KeyVal0.value());
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertNotNull(httpConnection_KeyVal0);
      
      String string0 = "nowrap";
      httpConnection_KeyVal0.key = string0;
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("UTF-8", httpConnection_KeyVal0.value());
      assertEquals("nowrap", httpConnection_KeyVal0.key());
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.data((Connection.KeyVal) httpConnection_KeyVal0);
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("UTF-8", httpConnection_KeyVal0.value());
      assertEquals("nowrap", httpConnection_KeyVal0.key());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.parserDefined);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertNotNull(httpConnection_Request1);
      
      String string1 = HttpConnection.Response.setOutputContentType(httpConnection_Request1);
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("UTF-8", httpConnection_KeyVal0.value());
      assertEquals("nowrap", httpConnection_KeyVal0.key());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.parserDefined);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertNull(string1);
      
      String string2 = "param";
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(string2);
      assertFalse(string2.equals((Object)string0));
      assertNotNull(mockFileOutputStream0);
      
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
      assertFalse(string2.equals((Object)string0));
      assertNotNull(dataOutputStream0);
      
      HttpConnection.Response.writePost(httpConnection_Request0, dataOutputStream0, httpConnection_KeyVal0.value);
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("UTF-8", httpConnection_KeyVal0.value());
      assertEquals("nowrap", httpConnection_KeyVal0.key());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(string2, string0);
      assertFalse(string2.equals((Object)string0));
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      
      String string3 = HttpConnection.Response.setOutputContentType(httpConnection_Request1);
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("UTF-8", httpConnection_KeyVal0.value());
      assertEquals("nowrap", httpConnection_KeyVal0.key());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.parserDefined);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertNull(string3);
  }

  @Test(timeout = 11000)
  public void test80()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertNotNull(httpConnection_Request0);
      
      int int0 = 41;
      String string0 = "--";
      String string1 = "org.jsoup.helper.HttpConnection$Response$2";
      HttpConnection.Request httpConnection_Request1 = new HttpConnection.Request();
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.equals((Object)httpConnection_Request0));
      assertFalse(httpConnection_Request1.parserDefined);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertNotNull(httpConnection_Request1);
      
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request1.parser(httpConnection_Request0.parser);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertNotSame(httpConnection_Request0, httpConnection_Request2);
      assertNotSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertNotSame(httpConnection_Request1, httpConnection_Request0);
      assertNotSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertFalse(httpConnection_Request0.equals((Object)httpConnection_Request1));
      assertFalse(httpConnection_Request1.equals((Object)httpConnection_Request0));
      assertFalse(httpConnection_Request2.equals((Object)httpConnection_Request0));
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.parserDefined);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.parserDefined);
      assertNotNull(httpConnection_Request2);
      
      HttpConnection.KeyVal httpConnection_KeyVal0 = HttpConnection.KeyVal.create(httpConnection_Request0.postDataCharset, string0);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertEquals("--", httpConnection_KeyVal0.value());
      assertNotSame(httpConnection_Request0, httpConnection_Request2);
      assertNotSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(string0, string1);
      assertFalse(httpConnection_Request0.equals((Object)httpConnection_Request2));
      assertFalse(httpConnection_Request0.equals((Object)httpConnection_Request1));
      assertFalse(string0.equals((Object)string1));
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertNotNull(httpConnection_KeyVal0);
      
      String string2 = "";
      HttpConnection.KeyVal httpConnection_KeyVal1 = httpConnection_KeyVal0.value(string2);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("", httpConnection_KeyVal0.value());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal1.hasInputStream());
      assertEquals("", httpConnection_KeyVal1.value());
      assertEquals("UTF-8", httpConnection_KeyVal1.key());
      assertNotSame(httpConnection_Request0, httpConnection_Request2);
      assertNotSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertSame(httpConnection_KeyVal1, httpConnection_KeyVal0);
      assertFalse(httpConnection_Request0.equals((Object)httpConnection_Request2));
      assertFalse(httpConnection_Request0.equals((Object)httpConnection_Request1));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertNotNull(httpConnection_KeyVal1);
      
      URL uRL0 = MockURL.getHttpExample();
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertNotNull(uRL0);
      
      HttpConnection.Request httpConnection_Request3 = httpConnection_Request2.data((Connection.KeyVal) httpConnection_KeyVal0);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("", httpConnection_KeyVal0.value());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertTrue(httpConnection_Request3.followRedirects());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertEquals(3000, httpConnection_Request3.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertNotSame(httpConnection_Request0, httpConnection_Request2);
      assertNotSame(httpConnection_Request0, httpConnection_Request3);
      assertNotSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertNotSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertNotSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertNotSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertFalse(httpConnection_Request0.equals((Object)httpConnection_Request2));
      assertFalse(httpConnection_Request0.equals((Object)httpConnection_Request1));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(httpConnection_Request1.equals((Object)httpConnection_Request0));
      assertFalse(httpConnection_Request2.equals((Object)httpConnection_Request0));
      assertFalse(httpConnection_Request3.equals((Object)httpConnection_Request0));
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.parserDefined);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.followRedirects);
      assertEquals(3000, httpConnection_Request3.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.parserDefined);
      assertNotNull(httpConnection_Request3);
      
      httpConnection_KeyVal0.key = httpConnection_KeyVal1.value;
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("", httpConnection_KeyVal0.key());
      assertEquals("", httpConnection_KeyVal0.value());
      assertFalse(httpConnection_KeyVal1.hasInputStream());
      assertEquals("", httpConnection_KeyVal1.key());
      assertEquals("", httpConnection_KeyVal1.value());
      
      HttpConnection.Request httpConnection_Request4 = (HttpConnection.Request)httpConnection_Request1.url(uRL0);
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals(3000, httpConnection_Request4.timeout());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertNotSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertNotSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertFalse(httpConnection_Request1.equals((Object)httpConnection_Request0));
      assertFalse(httpConnection_Request4.equals((Object)httpConnection_Request0));
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertTrue(httpConnection_Request4.followRedirects);
      assertEquals(3000, httpConnection_Request4.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertTrue(httpConnection_Request4.validateTSLCertificates);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertTrue(httpConnection_Request4.parserDefined);
      assertNotNull(httpConnection_Request4);
      
      String string3 = "KXf";
      HttpConnection.KeyVal httpConnection_KeyVal2 = HttpConnection.KeyVal.create(httpConnection_Request3.postDataCharset, string3);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("", httpConnection_KeyVal0.key());
      assertEquals("", httpConnection_KeyVal0.value());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertTrue(httpConnection_Request3.followRedirects());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertEquals(3000, httpConnection_Request3.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertFalse(httpConnection_KeyVal2.hasInputStream());
      assertEquals("KXf", httpConnection_KeyVal2.value());
      assertEquals("UTF-8", httpConnection_KeyVal2.key());
      assertNotSame(httpConnection_Request0, httpConnection_Request2);
      assertNotSame(httpConnection_Request0, httpConnection_Request3);
      assertNotSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(httpConnection_Request0, httpConnection_Request4);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertNotSame(string0, string3);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertNotSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertNotSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertNotSame(httpConnection_KeyVal0, httpConnection_KeyVal2);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertNotSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertNotSame(string3, string2);
      assertNotSame(string3, string1);
      assertNotSame(string3, string0);
      assertNotSame(httpConnection_KeyVal2, httpConnection_KeyVal0);
      assertNotSame(httpConnection_KeyVal2, httpConnection_KeyVal1);
      assertFalse(httpConnection_Request0.equals((Object)httpConnection_Request2));
      assertFalse(httpConnection_Request0.equals((Object)httpConnection_Request3));
      assertFalse(httpConnection_Request0.equals((Object)httpConnection_Request1));
      assertFalse(httpConnection_Request0.equals((Object)httpConnection_Request4));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string3));
      assertFalse(httpConnection_Request1.equals((Object)httpConnection_Request0));
      assertFalse(httpConnection_Request2.equals((Object)httpConnection_Request0));
      assertFalse(httpConnection_Request3.equals((Object)httpConnection_Request0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertFalse(httpConnection_KeyVal2.equals((Object)httpConnection_KeyVal0));
      assertFalse(httpConnection_KeyVal2.equals((Object)httpConnection_KeyVal1));
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.parserDefined);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.followRedirects);
      assertEquals(3000, httpConnection_Request3.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.parserDefined);
      assertNotNull(httpConnection_KeyVal2);
      
      httpConnection_Request0.ignoreContentType = httpConnection_Request0.validateTSLCertificates;
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      
      int int1 = 0;
      Random.setNextRandom(int1);
      assertFalse(int1 == int0);
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertNotNull(httpConnection_Response0);
      
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request1, httpConnection_Response0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // HTTP error fetching URL
         //
         verifyException("org.jsoup.helper.HttpConnection$Response", e);
      }
  }

  @Test(timeout = 11000)
  public void test81()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertNotNull(httpConnection_Request0);
      
      String string0 = "a*-i,,6Iiozqs{Q";
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      assertEquals(0, pipedInputStream0.available());
      assertNotNull(pipedInputStream0);
      
      HttpConnection.KeyVal httpConnection_KeyVal0 = HttpConnection.KeyVal.create(httpConnection_Request0.postDataCharset, string0, (InputStream) pipedInputStream0);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(0, pipedInputStream0.available());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("a*-i,,6Iiozqs{Q", httpConnection_KeyVal0.value());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertNotNull(httpConnection_KeyVal0);
      
      String string1 = "{ntu`@>p";
      HttpConnection.KeyVal httpConnection_KeyVal1 = httpConnection_KeyVal0.value(string1);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(0, pipedInputStream0.available());
      assertEquals("{ntu`@>p", httpConnection_KeyVal0.value());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertEquals("{ntu`@>p", httpConnection_KeyVal1.value());
      assertTrue(httpConnection_KeyVal1.hasInputStream());
      assertEquals("UTF-8", httpConnection_KeyVal1.key());
      assertNotSame(string0, string1);
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertNotSame(string1, string0);
      assertSame(httpConnection_KeyVal1, httpConnection_KeyVal0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertNotNull(httpConnection_KeyVal1);
      
      HttpConnection.KeyVal httpConnection_KeyVal2 = httpConnection_KeyVal1.inputStream(httpConnection_KeyVal0.stream);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(0, pipedInputStream0.available());
      assertEquals("{ntu`@>p", httpConnection_KeyVal0.value());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertEquals("{ntu`@>p", httpConnection_KeyVal1.value());
      assertTrue(httpConnection_KeyVal1.hasInputStream());
      assertEquals("UTF-8", httpConnection_KeyVal1.key());
      assertTrue(httpConnection_KeyVal2.hasInputStream());
      assertEquals("{ntu`@>p", httpConnection_KeyVal2.value());
      assertEquals("UTF-8", httpConnection_KeyVal2.key());
      assertNotSame(string0, string1);
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal2);
      assertNotSame(string1, string0);
      assertSame(httpConnection_KeyVal1, httpConnection_KeyVal2);
      assertSame(httpConnection_KeyVal1, httpConnection_KeyVal0);
      assertSame(httpConnection_KeyVal2, httpConnection_KeyVal0);
      assertSame(httpConnection_KeyVal2, httpConnection_KeyVal1);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertNotNull(httpConnection_KeyVal2);
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.data((Connection.KeyVal) httpConnection_KeyVal2);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(0, pipedInputStream0.available());
      assertEquals("{ntu`@>p", httpConnection_KeyVal0.value());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertEquals("{ntu`@>p", httpConnection_KeyVal1.value());
      assertTrue(httpConnection_KeyVal1.hasInputStream());
      assertEquals("UTF-8", httpConnection_KeyVal1.key());
      assertTrue(httpConnection_KeyVal2.hasInputStream());
      assertEquals("{ntu`@>p", httpConnection_KeyVal2.value());
      assertEquals("UTF-8", httpConnection_KeyVal2.key());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(string0, string1);
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal2);
      assertNotSame(string1, string0);
      assertSame(httpConnection_KeyVal1, httpConnection_KeyVal2);
      assertSame(httpConnection_KeyVal1, httpConnection_KeyVal0);
      assertSame(httpConnection_KeyVal2, httpConnection_KeyVal0);
      assertSame(httpConnection_KeyVal2, httpConnection_KeyVal1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertNotNull(httpConnection_Request1);
      
      boolean boolean1 = true;
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(httpConnection_KeyVal0.value, boolean1);
      assertFalse(string0.equals((Object)string1));
      assertTrue(boolean1 == boolean0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertNotNull(mockFileOutputStream0);
      
      String string2 = "AfterFrameset";
      try { 
        HttpConnection.Response.writePost(httpConnection_Request1, mockFileOutputStream0, string2);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Simulated IOException
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  @Test(timeout = 11000)
  public void test82()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertNotNull(httpConnection_Request0);
      
      int int0 = 61;
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.timeout(int0);
      assertEquals(61, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(61, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(61, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertEquals(61, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.parserDefined);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertNotNull(httpConnection_Request1);
      
      String string0 = "%a{vS[bep";
      String string1 = "";
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      assertFalse(fileDescriptor0.valid());
      assertNotNull(fileDescriptor0);
      
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      assertNotNull(mockFileInputStream0);
      
      FileChannel fileChannel0 = mockFileInputStream0.getChannel();
      assertFalse(fileDescriptor0.valid());
      assertEquals(0L, fileChannel0.position());
      assertTrue(fileChannel0.isOpen());
      assertNotNull(fileChannel0);
      
      HttpConnection.KeyVal httpConnection_KeyVal0 = HttpConnection.KeyVal.create(string0, string1, (InputStream) mockFileInputStream0);
      assertFalse(fileDescriptor0.valid());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("%a{vS[bep", httpConnection_KeyVal0.key());
      assertEquals("", httpConnection_KeyVal0.value());
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertNotNull(httpConnection_KeyVal0);
      
      HttpConnection.KeyVal httpConnection_KeyVal1 = httpConnection_KeyVal0.inputStream((InputStream) mockFileInputStream0);
      assertFalse(fileDescriptor0.valid());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("%a{vS[bep", httpConnection_KeyVal0.key());
      assertEquals("", httpConnection_KeyVal0.value());
      assertEquals("%a{vS[bep", httpConnection_KeyVal1.key());
      assertEquals("", httpConnection_KeyVal1.value());
      assertTrue(httpConnection_KeyVal1.hasInputStream());
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertSame(httpConnection_KeyVal1, httpConnection_KeyVal0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertNotNull(httpConnection_KeyVal1);
      
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request1.data((Connection.KeyVal) httpConnection_KeyVal1);
      assertEquals(61, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(61, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertFalse(fileDescriptor0.valid());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("%a{vS[bep", httpConnection_KeyVal0.key());
      assertEquals("", httpConnection_KeyVal0.value());
      assertEquals("%a{vS[bep", httpConnection_KeyVal1.key());
      assertEquals("", httpConnection_KeyVal1.value());
      assertTrue(httpConnection_KeyVal1.hasInputStream());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(61, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertSame(httpConnection_KeyVal1, httpConnection_KeyVal0);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(61, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertEquals(61, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.parserDefined);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertEquals(61, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertFalse(httpConnection_Request2.parserDefined);
      assertTrue(httpConnection_Request2.followRedirects);
      assertNotNull(httpConnection_Request2);
      
      int int1 = 3;
      String string2 = httpConnection_KeyVal1.toString();
      assertFalse(fileDescriptor0.valid());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("%a{vS[bep", httpConnection_KeyVal0.key());
      assertEquals("", httpConnection_KeyVal0.value());
      assertEquals("%a{vS[bep", httpConnection_KeyVal1.key());
      assertEquals("", httpConnection_KeyVal1.value());
      assertTrue(httpConnection_KeyVal1.hasInputStream());
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertSame(httpConnection_KeyVal1, httpConnection_KeyVal0);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertEquals("%a{vS[bep=", string2);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(string2);
      
      HttpConnection.Request httpConnection_Request3 = (HttpConnection.Request)httpConnection_Request2.maxBodySize(int1);
      assertEquals(3, httpConnection_Request0.maxBodySize());
      assertEquals(61, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(61, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(3, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertFalse(fileDescriptor0.valid());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("%a{vS[bep", httpConnection_KeyVal0.key());
      assertEquals("", httpConnection_KeyVal0.value());
      assertEquals("%a{vS[bep", httpConnection_KeyVal1.key());
      assertEquals("", httpConnection_KeyVal1.value());
      assertTrue(httpConnection_KeyVal1.hasInputStream());
      assertEquals(3, httpConnection_Request2.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(61, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(61, httpConnection_Request3.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertEquals(3, httpConnection_Request3.maxBodySize());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertSame(httpConnection_KeyVal1, httpConnection_KeyVal0);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertFalse(int0 == int1);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(int1 == int0);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(3, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(61, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertEquals(61, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.parserDefined);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(61, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(3, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertFalse(httpConnection_Request2.parserDefined);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(3, httpConnection_Request3.maxBodySizeBytes);
      assertEquals(61, httpConnection_Request3.timeoutMilliseconds);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertFalse(httpConnection_Request3.parserDefined);
      assertTrue(httpConnection_Request3.followRedirects);
      assertNotNull(httpConnection_Request3);
      
      EvoSuiteFile evoSuiteFile0 = null;
      boolean boolean0 = FileSystemHandling.createFolder(evoSuiteFile0);
      assertFalse(boolean0);
      
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(httpConnection_KeyVal0.key);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertNotNull(mockFileOutputStream0);
      
      try { 
        HttpConnection.Response.writePost(httpConnection_Request3, mockFileOutputStream0, string1);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.NativeMockedIO", e);
      }
  }

  @Test(timeout = 11000)
  public void test83()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertNotNull(httpConnection_Request0);
      
      int int0 = 58;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      String string0 = "--";
      String string1 = "org.jsoup.helper.HttpConnection$Response$2";
      HttpConnection.Request httpConnection_Request1 = (HttpConnection.Request)httpConnection_Request0.cookie(string0, string1);
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertNotNull(httpConnection_Request1);
      
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://www.someFakeButWellFormedURL.org/fooExample?http=");
      boolean boolean0 = NetworkHandling.createRemoteTextFile(evoSuiteURL0, string0);
      assertNotSame(string0, string1);
      assertTrue(boolean0);
      assertFalse(string0.equals((Object)string1));
      
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request0.timeout(int0);
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(58, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request2.parserDefined);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertNotNull(httpConnection_Request2);
      
      HttpConnection.Request httpConnection_Request3 = httpConnection_Request2.parser(httpConnection_Request0.parser);
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(58, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertTrue(httpConnection_Request3.followRedirects());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals(58, httpConnection_Request3.timeout());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.parserDefined);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(58, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.parserDefined);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertNotNull(httpConnection_Request3);
      
      HttpConnection.KeyVal httpConnection_KeyVal0 = new HttpConnection.KeyVal();
      assertNull(httpConnection_KeyVal0.value());
      assertNull(httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertNotNull(httpConnection_KeyVal0);
      
      String string2 = "";
      HttpConnection.KeyVal httpConnection_KeyVal1 = httpConnection_KeyVal0.value(string2);
      assertEquals("", httpConnection_KeyVal0.value());
      assertNull(httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("", httpConnection_KeyVal1.value());
      assertFalse(httpConnection_KeyVal1.hasInputStream());
      assertNull(httpConnection_KeyVal1.key());
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertSame(httpConnection_KeyVal1, httpConnection_KeyVal0);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertNotNull(httpConnection_KeyVal1);
      
      URL uRL0 = MockURL.getHttpExample();
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNotNull(uRL0);
      
      HttpConnection.Request httpConnection_Request4 = httpConnection_Request3.data((Connection.KeyVal) httpConnection_KeyVal0);
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(58, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertTrue(httpConnection_Request3.followRedirects());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals(58, httpConnection_Request3.timeout());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals("", httpConnection_KeyVal0.value());
      assertNull(httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request4.timeout());
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.parserDefined);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(58, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.parserDefined);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertTrue(httpConnection_Request4.parserDefined);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertEquals(58, httpConnection_Request4.timeoutMilliseconds);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertTrue(httpConnection_Request4.followRedirects);
      assertTrue(httpConnection_Request4.validateTSLCertificates);
      assertNotNull(httpConnection_Request4);
      
      String string3 = "http";
      httpConnection_KeyVal0.key = string3;
      assertEquals("http", httpConnection_KeyVal0.key());
      assertEquals("", httpConnection_KeyVal0.value());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      
      HttpConnection.Request httpConnection_Request5 = (HttpConnection.Request)httpConnection_Request2.url(uRL0);
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(58, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(58, httpConnection_Request5.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request5.postDataCharset());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertTrue(httpConnection_Request5.validateTLSCertificates());
      assertTrue(httpConnection_Request5.followRedirects());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertEquals(58, httpConnection_Request5.timeoutMilliseconds);
      assertTrue(httpConnection_Request5.followRedirects);
      assertTrue(httpConnection_Request5.parserDefined);
      assertTrue(httpConnection_Request5.validateTSLCertificates);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.parserDefined);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertNotNull(httpConnection_Request5);
      
      String string4 = "KXf";
      HttpConnection.Response httpConnection_Response0 = HttpConnection.Response.execute((Connection.Request) httpConnection_Request5);
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(58, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(58, httpConnection_Request5.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request5.postDataCharset());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertTrue(httpConnection_Request5.validateTLSCertificates());
      assertTrue(httpConnection_Request5.followRedirects());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(200, httpConnection_Response0.statusCode());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertEquals(58, httpConnection_Request5.timeoutMilliseconds);
      assertTrue(httpConnection_Request5.followRedirects);
      assertTrue(httpConnection_Request5.parserDefined);
      assertTrue(httpConnection_Request5.validateTSLCertificates);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(200, httpConnection_Response0.statusCode);
      assertTrue(httpConnection_Response0.executed);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.parserDefined);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertNotNull(httpConnection_Response0);
      
      String string5 = httpConnection_Response0.charset();
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(58, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(58, httpConnection_Request5.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request5.postDataCharset());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertTrue(httpConnection_Request5.validateTLSCertificates());
      assertTrue(httpConnection_Request5.followRedirects());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(200, httpConnection_Response0.statusCode());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertEquals(58, httpConnection_Request5.timeoutMilliseconds);
      assertTrue(httpConnection_Request5.followRedirects);
      assertTrue(httpConnection_Request5.parserDefined);
      assertTrue(httpConnection_Request5.validateTSLCertificates);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(200, httpConnection_Response0.statusCode);
      assertTrue(httpConnection_Response0.executed);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.parserDefined);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertNull(string5);
      
      HttpURLConnection httpURLConnection0 = HttpConnection.Response.createConnection(httpConnection_Response0.req);
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(58, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(58, httpConnection_Request5.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request5.postDataCharset());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertTrue(httpConnection_Request5.validateTLSCertificates());
      assertTrue(httpConnection_Request5.followRedirects());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(200, httpConnection_Response0.statusCode());
      assertTrue(httpURLConnection0.getDefaultUseCaches());
      assertFalse(httpURLConnection0.getDoOutput());
      assertNull(httpURLConnection0.getContentType());
      assertFalse(httpURLConnection0.getInstanceFollowRedirects());
      assertFalse(httpURLConnection0.getDefaultAllowUserInteraction());
      assertEquals(0L, httpURLConnection0.getIfModifiedSince());
      assertFalse(httpURLConnection0.getAllowUserInteraction());
      assertTrue(httpURLConnection0.getUseCaches());
      assertNull(httpURLConnection0.getContentEncoding());
      assertEquals(58, httpURLConnection0.getReadTimeout());
      assertEquals((-1), httpURLConnection0.getContentLength());
      assertFalse(httpURLConnection0.usingProxy());
      assertEquals("GET", httpURLConnection0.getRequestMethod());
      assertEquals("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection:http://www.someFakeButWellFormedURL.org/fooExample?http=", httpURLConnection0.toString());
      assertEquals(58, httpURLConnection0.getConnectTimeout());
      assertTrue(httpURLConnection0.getDoInput());
      assertTrue(httpURLConnection0.getFollowRedirects());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertEquals(58, httpConnection_Request5.timeoutMilliseconds);
      assertTrue(httpConnection_Request5.followRedirects);
      assertTrue(httpConnection_Request5.parserDefined);
      assertTrue(httpConnection_Request5.validateTSLCertificates);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(200, httpConnection_Response0.statusCode);
      assertTrue(httpConnection_Response0.executed);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.parserDefined);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertNotNull(httpURLConnection0);
      
      int int1 = 200;
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(int1);
      assertEquals(0, byteArrayOutputStream0.size());
      assertEquals("", byteArrayOutputStream0.toString());
      assertFalse(int1 == int0);
      assertNotNull(byteArrayOutputStream0);
      
      String string6 = "w'9|\\mc`v}";
      boolean boolean1 = httpConnection_Response0.hasHeader(string6);
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(58, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(58, httpConnection_Request5.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request5.postDataCharset());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertTrue(httpConnection_Request5.validateTLSCertificates());
      assertTrue(httpConnection_Request5.followRedirects());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(200, httpConnection_Response0.statusCode());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertNotSame(string6, string0);
      assertNotSame(string6, string2);
      assertNotSame(string6, string1);
      assertNotSame(string6, string4);
      assertNotSame(string6, string3);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertFalse(boolean1);
      assertFalse(int0 == int1);
      assertFalse(string6.equals((Object)string0));
      assertFalse(string6.equals((Object)string2));
      assertFalse(string6.equals((Object)string1));
      assertFalse(string6.equals((Object)string4));
      assertFalse(string6.equals((Object)string3));
      assertFalse(boolean1 == boolean0);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertEquals(58, httpConnection_Request5.timeoutMilliseconds);
      assertTrue(httpConnection_Request5.followRedirects);
      assertTrue(httpConnection_Request5.parserDefined);
      assertTrue(httpConnection_Request5.validateTSLCertificates);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(200, httpConnection_Response0.statusCode);
      assertTrue(httpConnection_Response0.executed);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.parserDefined);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      
      String string7 = "(K!4buN|pi2 p'";
      HttpConnection.Response.writePost(httpConnection_Request5, byteArrayOutputStream0, string7);
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(58, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(58, httpConnection_Request5.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request5.postDataCharset());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertTrue(httpConnection_Request5.validateTLSCertificates());
      assertTrue(httpConnection_Request5.followRedirects());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertEquals(18, byteArrayOutputStream0.size());
      assertEquals("--(K!4buN|pi2 p'--", byteArrayOutputStream0.toString());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertNotSame(string7, string1);
      assertNotSame(string7, string3);
      assertNotSame(string7, string0);
      assertNotSame(string7, string2);
      assertNotSame(string7, string6);
      assertNotSame(string7, string4);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertFalse(string7.equals((Object)string1));
      assertFalse(string7.equals((Object)string3));
      assertFalse(string7.equals((Object)string0));
      assertFalse(string7.equals((Object)string2));
      assertFalse(string7.equals((Object)string6));
      assertFalse(string7.equals((Object)string4));
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertEquals(58, httpConnection_Request5.timeoutMilliseconds);
      assertTrue(httpConnection_Request5.followRedirects);
      assertTrue(httpConnection_Request5.parserDefined);
      assertTrue(httpConnection_Request5.validateTSLCertificates);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.parserDefined);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      
      HttpConnection.Response httpConnection_Response1 = HttpConnection.Response.execute(httpConnection_Response0.req);
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(58, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(58, httpConnection_Request5.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request5.postDataCharset());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertTrue(httpConnection_Request5.validateTLSCertificates());
      assertTrue(httpConnection_Request5.followRedirects());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(200, httpConnection_Response0.statusCode());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.charset());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertFalse(int0 == int1);
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertEquals(58, httpConnection_Request5.timeoutMilliseconds);
      assertTrue(httpConnection_Request5.followRedirects);
      assertTrue(httpConnection_Request5.parserDefined);
      assertTrue(httpConnection_Request5.validateTSLCertificates);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(200, httpConnection_Response0.statusCode);
      assertTrue(httpConnection_Response0.executed);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.parserDefined);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Response1.executed);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNotNull(httpConnection_Response1);
      
      HttpConnection.Response.serialiseRequestUrl(httpConnection_Request1);
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(58, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(58, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertNotSame(string0, string6);
      assertNotSame(string0, string7);
      assertNotSame(string0, string3);
      assertNotSame(string0, string4);
      assertNotSame(string1, string7);
      assertNotSame(string1, string3);
      assertNotSame(string1, string0);
      assertNotSame(string1, string4);
      assertNotSame(string1, string6);
      assertNotSame(string1, string2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string6));
      assertFalse(string0.equals((Object)string7));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string1.equals((Object)string7));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string4));
      assertFalse(string1.equals((Object)string6));
      assertFalse(string1.equals((Object)string2));
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request1.parserDefined);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertEquals(58, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      
      httpConnection_Response1.contentType = httpConnection_Request5.postDataCharset;
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(58, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(58, httpConnection_Request5.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request5.postDataCharset());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertTrue(httpConnection_Request5.validateTLSCertificates());
      assertTrue(httpConnection_Request5.followRedirects());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(200, httpConnection_Response0.statusCode());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertEquals("UTF-8", httpConnection_Response1.contentType());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertNull(httpConnection_Response1.charset());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      
      String string8 = httpConnection_Response1.body();
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(58, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(58, httpConnection_Request5.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request5.postDataCharset());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertTrue(httpConnection_Request5.validateTLSCertificates());
      assertTrue(httpConnection_Request5.followRedirects());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(200, httpConnection_Response0.statusCode());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertEquals("UTF-8", httpConnection_Response1.contentType());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertNull(httpConnection_Response1.charset());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertNotSame(string8, string0);
      assertNotSame(string8, string4);
      assertNotSame(string8, string2);
      assertNotSame(string8, string1);
      assertNotSame(string8, string3);
      assertNotSame(string8, string6);
      assertNotSame(string8, string7);
      assertEquals("--", string8);
      assertFalse(int0 == int1);
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertFalse(string8.equals((Object)string4));
      assertFalse(string8.equals((Object)string2));
      assertFalse(string8.equals((Object)string1));
      assertFalse(string8.equals((Object)string3));
      assertFalse(string8.equals((Object)string6));
      assertTrue(string8.equals((Object)string0));
      assertFalse(string8.equals((Object)string7));
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertEquals(58, httpConnection_Request5.timeoutMilliseconds);
      assertTrue(httpConnection_Request5.followRedirects);
      assertTrue(httpConnection_Request5.parserDefined);
      assertTrue(httpConnection_Request5.validateTSLCertificates);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(200, httpConnection_Response0.statusCode);
      assertTrue(httpConnection_Response0.executed);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.parserDefined);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Response1.executed);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNotNull(string8);
  }

  @Test(timeout = 11000)
  public void test84()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertNotNull(httpConnection_Request0);
      
      int int0 = 58;
      String string0 = "--";
      String string1 = "org.jsoup.helper.HttpConnection$Response$2";
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://www.someFakeButWellFormedURL.org/fooExample?http=");
      boolean boolean0 = NetworkHandling.createRemoteTextFile(evoSuiteURL0, string0);
      assertNotSame(string0, string1);
      assertTrue(boolean0);
      assertFalse(string0.equals((Object)string1));
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.timeout(int0);
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(58, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertEquals(58, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.parserDefined);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertEquals(58, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertNotNull(httpConnection_Request1);
      
      HttpConnection.KeyVal httpConnection_KeyVal0 = new HttpConnection.KeyVal();
      assertNull(httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertNull(httpConnection_KeyVal0.value());
      assertNotNull(httpConnection_KeyVal0);
      
      String string2 = "";
      HttpConnection.KeyVal httpConnection_KeyVal1 = httpConnection_KeyVal0.value(string2);
      assertNull(httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("", httpConnection_KeyVal0.value());
      assertEquals("", httpConnection_KeyVal1.value());
      assertFalse(httpConnection_KeyVal1.hasInputStream());
      assertNull(httpConnection_KeyVal1.key());
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertSame(httpConnection_KeyVal1, httpConnection_KeyVal0);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(httpConnection_KeyVal1);
      
      URL uRL0 = MockURL.getHttpExample();
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNotNull(uRL0);
      
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request0.data((Connection.KeyVal) httpConnection_KeyVal0);
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(58, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertNull(httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("", httpConnection_KeyVal0.value());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(58, httpConnection_Request2.timeout());
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertFalse(httpConnection_Request2.parserDefined);
      assertNotNull(httpConnection_Request2);
      
      String string3 = "http";
      httpConnection_KeyVal0.key = string3;
      assertEquals("http", httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("", httpConnection_KeyVal0.value());
      
      HttpConnection.Request httpConnection_Request3 = (HttpConnection.Request)httpConnection_Request1.url(uRL0);
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(58, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertEquals(58, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertTrue(httpConnection_Request3.followRedirects());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request3.timeout());
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.parserDefined);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertEquals(58, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request3.parserDefined);
      assertEquals(58, httpConnection_Request3.timeoutMilliseconds);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.followRedirects);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertNotNull(httpConnection_Request3);
      
      String string4 = "KXf";
      HttpConnection.Response httpConnection_Response0 = HttpConnection.Response.execute((Connection.Request) httpConnection_Request3);
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertEquals(200, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(58, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertEquals(58, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertTrue(httpConnection_Request3.followRedirects());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request3.timeout());
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertTrue(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(200, httpConnection_Response0.statusCode);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.parserDefined);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertEquals(58, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request3.parserDefined);
      assertEquals(58, httpConnection_Request3.timeoutMilliseconds);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.followRedirects);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertNotNull(httpConnection_Response0);
      
      String string5 = httpConnection_Response0.charset();
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertEquals(200, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(58, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertEquals(58, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertTrue(httpConnection_Request3.followRedirects());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request3.timeout());
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertTrue(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(200, httpConnection_Response0.statusCode);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.parserDefined);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertEquals(58, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request3.parserDefined);
      assertEquals(58, httpConnection_Request3.timeoutMilliseconds);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.followRedirects);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertNull(string5);
      
      String string6 = httpConnection_Response0.statusMessage();
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertEquals(200, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(58, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertEquals(58, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertTrue(httpConnection_Request3.followRedirects());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request3.timeout());
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(string6, string2);
      assertNotSame(string6, string1);
      assertNotSame(string6, string0);
      assertNotSame(string6, string3);
      assertNotSame(string6, string4);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertEquals("OK", string6);
      assertFalse(string6.equals((Object)string2));
      assertFalse(string6.equals((Object)string1));
      assertFalse(string6.equals((Object)string0));
      assertFalse(string6.equals((Object)string3));
      assertFalse(string6.equals((Object)string4));
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertTrue(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(200, httpConnection_Response0.statusCode);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.parserDefined);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertEquals(58, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request3.parserDefined);
      assertEquals(58, httpConnection_Request3.timeoutMilliseconds);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.followRedirects);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertNotNull(string6);
      
      HttpConnection.Response httpConnection_Response1 = HttpConnection.Response.execute((Connection.Request) httpConnection_Request1, httpConnection_Response0);
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertEquals(200, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(58, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertNull(httpConnection_Response1.contentType());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.charset());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertEquals(58, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertTrue(httpConnection_Request3.followRedirects());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request3.timeout());
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertTrue(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(200, httpConnection_Response0.statusCode);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertTrue(httpConnection_Response1.executed);
      assertEquals(1, httpConnection_Response1.numRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.parserDefined);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertEquals(58, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request3.parserDefined);
      assertEquals(58, httpConnection_Request3.timeoutMilliseconds);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.followRedirects);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertNotNull(httpConnection_Response1);
  }

  @Test(timeout = 11000)
  public void test85()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertNotNull(httpConnection_Request0);
      
      int int0 = 58;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      String string0 = "--";
      String string1 = "org.jsoup.helper.HttpConnection$Response$2";
      HttpConnection.Request httpConnection_Request1 = (HttpConnection.Request)httpConnection_Request0.cookie(string0, string1);
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertNotNull(httpConnection_Request1);
      
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://www.someFakeButWellFormedURL.org/fooExample?http=");
      boolean boolean0 = NetworkHandling.createRemoteTextFile(evoSuiteURL0, string0);
      assertNotSame(string0, string1);
      assertTrue(boolean0);
      assertFalse(string0.equals((Object)string1));
      
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request0.timeout(int0);
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertEquals(58, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertFalse(httpConnection_Request2.parserDefined);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertNotNull(httpConnection_Request2);
      
      HttpConnection.Request httpConnection_Request3 = httpConnection_Request2.parser(httpConnection_Request0.parser);
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertEquals(58, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals(58, httpConnection_Request3.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertTrue(httpConnection_Request3.followRedirects());
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.parserDefined);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertEquals(58, httpConnection_Request3.timeoutMilliseconds);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.followRedirects);
      assertTrue(httpConnection_Request3.parserDefined);
      assertNotNull(httpConnection_Request3);
      
      HttpConnection.KeyVal httpConnection_KeyVal0 = new HttpConnection.KeyVal();
      assertNull(httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertNull(httpConnection_KeyVal0.value());
      assertNotNull(httpConnection_KeyVal0);
      
      String string2 = "";
      HttpConnection.KeyVal httpConnection_KeyVal1 = httpConnection_KeyVal0.value(string2);
      assertNull(httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("", httpConnection_KeyVal0.value());
      assertFalse(httpConnection_KeyVal1.hasInputStream());
      assertEquals("", httpConnection_KeyVal1.value());
      assertNull(httpConnection_KeyVal1.key());
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertSame(httpConnection_KeyVal1, httpConnection_KeyVal0);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(httpConnection_KeyVal1);
      
      URL uRL0 = MockURL.getHttpExample();
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertNotNull(uRL0);
      
      HttpConnection.Request httpConnection_Request4 = httpConnection_Request3.data((Connection.KeyVal) httpConnection_KeyVal0);
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertEquals(58, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals(58, httpConnection_Request3.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertTrue(httpConnection_Request3.followRedirects());
      assertNull(httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("", httpConnection_KeyVal0.value());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals(58, httpConnection_Request4.timeout());
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.parserDefined);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertEquals(58, httpConnection_Request3.timeoutMilliseconds);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.followRedirects);
      assertTrue(httpConnection_Request3.parserDefined);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertTrue(httpConnection_Request4.parserDefined);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertEquals(58, httpConnection_Request4.timeoutMilliseconds);
      assertTrue(httpConnection_Request4.validateTSLCertificates);
      assertTrue(httpConnection_Request4.followRedirects);
      assertNotNull(httpConnection_Request4);
      
      String string3 = "http";
      httpConnection_KeyVal0.key = string3;
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("", httpConnection_KeyVal0.value());
      assertEquals("http", httpConnection_KeyVal0.key());
      
      HttpConnection.Request httpConnection_Request5 = (HttpConnection.Request)httpConnection_Request2.url(uRL0);
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request5.followRedirects());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request5.postDataCharset());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertTrue(httpConnection_Request5.validateTLSCertificates());
      assertEquals(58, httpConnection_Request5.timeout());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertEquals(58, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request5.parserDefined);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertEquals(58, httpConnection_Request5.timeoutMilliseconds);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertTrue(httpConnection_Request5.followRedirects);
      assertTrue(httpConnection_Request5.validateTSLCertificates);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.parserDefined);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertNotNull(httpConnection_Request5);
      
      EvoSuiteFile evoSuiteFile0 = null;
      boolean boolean1 = FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      assertFalse(boolean1);
      assertFalse(boolean1 == boolean0);
      
      String string4 = "KXf";
      HttpConnection.Response httpConnection_Response0 = HttpConnection.Response.execute((Connection.Request) httpConnection_Request5);
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request5.followRedirects());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request5.postDataCharset());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertTrue(httpConnection_Request5.validateTLSCertificates());
      assertEquals(58, httpConnection_Request5.timeout());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertEquals(200, httpConnection_Response0.statusCode());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertEquals(58, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request5.parserDefined);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertEquals(58, httpConnection_Request5.timeoutMilliseconds);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertTrue(httpConnection_Request5.followRedirects);
      assertTrue(httpConnection_Request5.validateTSLCertificates);
      assertEquals(200, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertTrue(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.parserDefined);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertNotNull(httpConnection_Response0);
      
      String string5 = httpConnection_Response0.charset();
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request5.followRedirects());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request5.postDataCharset());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertTrue(httpConnection_Request5.validateTLSCertificates());
      assertEquals(58, httpConnection_Request5.timeout());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertEquals(200, httpConnection_Response0.statusCode());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertEquals(58, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request5.parserDefined);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertEquals(58, httpConnection_Request5.timeoutMilliseconds);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertTrue(httpConnection_Request5.followRedirects);
      assertTrue(httpConnection_Request5.validateTSLCertificates);
      assertEquals(200, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertTrue(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.parserDefined);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertNull(string5);
      
      HttpURLConnection httpURLConnection0 = HttpConnection.Response.createConnection(httpConnection_Response0.req);
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request5.followRedirects());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request5.postDataCharset());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertTrue(httpConnection_Request5.validateTLSCertificates());
      assertEquals(58, httpConnection_Request5.timeout());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertEquals(200, httpConnection_Response0.statusCode());
      assertNull(httpURLConnection0.getContentType());
      assertFalse(httpURLConnection0.usingProxy());
      assertFalse(httpURLConnection0.getInstanceFollowRedirects());
      assertTrue(httpURLConnection0.getFollowRedirects());
      assertEquals(0L, httpURLConnection0.getIfModifiedSince());
      assertTrue(httpURLConnection0.getDoInput());
      assertNull(httpURLConnection0.getContentEncoding());
      assertEquals((-1), httpURLConnection0.getContentLength());
      assertTrue(httpURLConnection0.getDefaultUseCaches());
      assertEquals("GET", httpURLConnection0.getRequestMethod());
      assertFalse(httpURLConnection0.getDefaultAllowUserInteraction());
      assertEquals("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection:http://www.someFakeButWellFormedURL.org/fooExample?http=", httpURLConnection0.toString());
      assertFalse(httpURLConnection0.getDoOutput());
      assertTrue(httpURLConnection0.getUseCaches());
      assertEquals(58, httpURLConnection0.getReadTimeout());
      assertEquals(58, httpURLConnection0.getConnectTimeout());
      assertFalse(httpURLConnection0.getAllowUserInteraction());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertEquals(58, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request5.parserDefined);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertEquals(58, httpConnection_Request5.timeoutMilliseconds);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertTrue(httpConnection_Request5.followRedirects);
      assertTrue(httpConnection_Request5.validateTSLCertificates);
      assertEquals(200, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertTrue(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.parserDefined);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertNotNull(httpURLConnection0);
      
      int int1 = 200;
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(int1);
      assertEquals("", byteArrayOutputStream0.toString());
      assertEquals(0, byteArrayOutputStream0.size());
      assertFalse(int1 == int0);
      assertNotNull(byteArrayOutputStream0);
      
      String string6 = "w'9|\\mc`v}";
      boolean boolean2 = httpConnection_Response0.hasHeader(string6);
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request5.followRedirects());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request5.postDataCharset());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertTrue(httpConnection_Request5.validateTLSCertificates());
      assertEquals(58, httpConnection_Request5.timeout());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertEquals(200, httpConnection_Response0.statusCode());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertEquals(58, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertNotSame(string6, string4);
      assertNotSame(string6, string1);
      assertNotSame(string6, string2);
      assertNotSame(string6, string0);
      assertNotSame(string6, string3);
      assertFalse(boolean2);
      assertFalse(int0 == int1);
      assertFalse(string6.equals((Object)string4));
      assertFalse(string6.equals((Object)string1));
      assertFalse(string6.equals((Object)string2));
      assertFalse(string6.equals((Object)string0));
      assertFalse(string6.equals((Object)string3));
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request5.parserDefined);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertEquals(58, httpConnection_Request5.timeoutMilliseconds);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertTrue(httpConnection_Request5.followRedirects);
      assertTrue(httpConnection_Request5.validateTSLCertificates);
      assertEquals(200, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertTrue(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.parserDefined);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      
      String string7 = "(K!4buN|pi2 p'";
      HttpConnection.Response.writePost(httpConnection_Request5, byteArrayOutputStream0, string7);
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request5.followRedirects());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request5.postDataCharset());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertTrue(httpConnection_Request5.validateTLSCertificates());
      assertEquals(58, httpConnection_Request5.timeout());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertEquals(58, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals(18, byteArrayOutputStream0.size());
      assertEquals("--(K!4buN|pi2 p'--", byteArrayOutputStream0.toString());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertNotSame(string7, string6);
      assertNotSame(string7, string1);
      assertNotSame(string7, string2);
      assertNotSame(string7, string0);
      assertNotSame(string7, string4);
      assertNotSame(string7, string3);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertFalse(string7.equals((Object)string6));
      assertFalse(string7.equals((Object)string1));
      assertFalse(string7.equals((Object)string2));
      assertFalse(string7.equals((Object)string0));
      assertFalse(string7.equals((Object)string4));
      assertFalse(string7.equals((Object)string3));
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request5.parserDefined);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertEquals(58, httpConnection_Request5.timeoutMilliseconds);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertTrue(httpConnection_Request5.followRedirects);
      assertTrue(httpConnection_Request5.validateTSLCertificates);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.parserDefined);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      
      HttpConnection.Response httpConnection_Response1 = HttpConnection.Response.execute(httpConnection_Response0.req);
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request5.followRedirects());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request5.postDataCharset());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertTrue(httpConnection_Request5.validateTLSCertificates());
      assertEquals(58, httpConnection_Request5.timeout());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertEquals(200, httpConnection_Response0.statusCode());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertEquals(58, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertNull(httpConnection_Response1.charset());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.contentType());
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertFalse(int0 == int1);
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request5.parserDefined);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertEquals(58, httpConnection_Request5.timeoutMilliseconds);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertTrue(httpConnection_Request5.followRedirects);
      assertTrue(httpConnection_Request5.validateTSLCertificates);
      assertEquals(200, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertTrue(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.parserDefined);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertTrue(httpConnection_Response1.executed);
      assertNotNull(httpConnection_Response1);
      
      String string8 = httpConnection_Response1.body();
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request5.followRedirects());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request5.postDataCharset());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertTrue(httpConnection_Request5.validateTLSCertificates());
      assertEquals(58, httpConnection_Request5.timeout());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertEquals(200, httpConnection_Response0.statusCode());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertEquals(58, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertNull(httpConnection_Response1.charset());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.contentType());
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertNotSame(string8, string4);
      assertNotSame(string8, string6);
      assertNotSame(string8, string3);
      assertNotSame(string8, string7);
      assertNotSame(string8, string0);
      assertNotSame(string8, string2);
      assertNotSame(string8, string1);
      assertEquals("--", string8);
      assertFalse(int0 == int1);
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertFalse(string8.equals((Object)string4));
      assertFalse(string8.equals((Object)string6));
      assertTrue(string8.equals((Object)string0));
      assertFalse(string8.equals((Object)string3));
      assertFalse(string8.equals((Object)string7));
      assertFalse(string8.equals((Object)string2));
      assertFalse(string8.equals((Object)string1));
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request5.parserDefined);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertEquals(58, httpConnection_Request5.timeoutMilliseconds);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertTrue(httpConnection_Request5.followRedirects);
      assertTrue(httpConnection_Request5.validateTSLCertificates);
      assertEquals(200, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertTrue(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.parserDefined);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertTrue(httpConnection_Response1.executed);
      assertNotNull(string8);
      
      httpConnection_Response1.setupFromConnection(httpURLConnection0, httpConnection_Response0);
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request5.followRedirects());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request5.postDataCharset());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertTrue(httpConnection_Request5.validateTLSCertificates());
      assertEquals(58, httpConnection_Request5.timeout());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertEquals(200, httpConnection_Response0.statusCode());
      assertNull(httpURLConnection0.getContentType());
      assertFalse(httpURLConnection0.usingProxy());
      assertFalse(httpURLConnection0.getInstanceFollowRedirects());
      assertTrue(httpURLConnection0.getFollowRedirects());
      assertEquals(0L, httpURLConnection0.getIfModifiedSince());
      assertTrue(httpURLConnection0.getDoInput());
      assertNull(httpURLConnection0.getContentEncoding());
      assertEquals((-1), httpURLConnection0.getContentLength());
      assertTrue(httpURLConnection0.getDefaultUseCaches());
      assertEquals("GET", httpURLConnection0.getRequestMethod());
      assertFalse(httpURLConnection0.getDefaultAllowUserInteraction());
      assertEquals("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection:http://www.someFakeButWellFormedURL.org/fooExample?http=", httpURLConnection0.toString());
      assertFalse(httpURLConnection0.getDoOutput());
      assertTrue(httpURLConnection0.getUseCaches());
      assertEquals(58, httpURLConnection0.getReadTimeout());
      assertEquals(58, httpURLConnection0.getConnectTimeout());
      assertFalse(httpURLConnection0.getAllowUserInteraction());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertEquals(58, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals((-1), httpConnection_Response1.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertNull(httpConnection_Response1.charset());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.contentType());
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertFalse(int0 == int1);
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request5.parserDefined);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertEquals(58, httpConnection_Request5.timeoutMilliseconds);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertTrue(httpConnection_Request5.followRedirects);
      assertTrue(httpConnection_Request5.validateTSLCertificates);
      assertEquals(200, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertTrue(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.parserDefined);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals((-1), httpConnection_Response1.statusCode);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertTrue(httpConnection_Response1.executed);
  }

  @Test(timeout = 11000)
  public void test86()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertNotNull(httpConnection_Request0);
      
      int int0 = 41;
      String string0 = "--";
      String string1 = "org.jsoup.helper.HttpConnection$Response$2";
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.timeout(int0);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(41, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(41, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(41, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request1.parserDefined);
      assertEquals(41, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertNotNull(httpConnection_Request1);
      
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request1.parser(httpConnection_Request0.parser);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(41, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(41, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertEquals(41, httpConnection_Request2.timeout());
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(41, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.parserDefined);
      assertEquals(41, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.parserDefined);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertEquals(41, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertTrue(httpConnection_Request2.parserDefined);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertNotNull(httpConnection_Request2);
      
      HttpConnection.KeyVal httpConnection_KeyVal0 = new HttpConnection.KeyVal();
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertNull(httpConnection_KeyVal0.value());
      assertNull(httpConnection_KeyVal0.key());
      assertNotNull(httpConnection_KeyVal0);
      
      String string2 = "";
      HttpConnection.KeyVal httpConnection_KeyVal1 = httpConnection_KeyVal0.value(string2);
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("", httpConnection_KeyVal0.value());
      assertNull(httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal1.hasInputStream());
      assertNull(httpConnection_KeyVal1.key());
      assertEquals("", httpConnection_KeyVal1.value());
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertSame(httpConnection_KeyVal1, httpConnection_KeyVal0);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(httpConnection_KeyVal1);
      
      URL uRL0 = MockURL.getHttpExample();
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertNotNull(uRL0);
      
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://www.someFakeButWellFormedURL.org/fooExample?=");
      String string3 = "ruby";
      boolean boolean0 = NetworkHandling.createRemoteTextFile(evoSuiteURL0, string3);
      assertNotSame(string3, string1);
      assertNotSame(string3, string0);
      assertNotSame(string3, string2);
      assertTrue(boolean0);
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      
      HttpConnection.Request httpConnection_Request3 = httpConnection_Request2.data((Connection.KeyVal) httpConnection_KeyVal0);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(41, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(41, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertEquals(41, httpConnection_Request2.timeout());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("", httpConnection_KeyVal0.value());
      assertNull(httpConnection_KeyVal0.key());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(41, httpConnection_Request3.timeout());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertTrue(httpConnection_Request3.followRedirects());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(41, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.parserDefined);
      assertEquals(41, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.parserDefined);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertEquals(41, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertTrue(httpConnection_Request2.parserDefined);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.parserDefined);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertEquals(41, httpConnection_Request3.timeoutMilliseconds);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertNotNull(httpConnection_Request3);
      
      httpConnection_KeyVal0.key = httpConnection_KeyVal1.value;
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("", httpConnection_KeyVal0.value());
      assertEquals("", httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal1.hasInputStream());
      assertEquals("", httpConnection_KeyVal1.key());
      assertEquals("", httpConnection_KeyVal1.value());
      
      HttpConnection.Request httpConnection_Request4 = (HttpConnection.Request)httpConnection_Request1.url(uRL0);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(41, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(41, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertEquals(41, httpConnection_Request4.timeout());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertTrue(httpConnection_Request4.followRedirects());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(41, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.parserDefined);
      assertEquals(41, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.parserDefined);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertTrue(httpConnection_Request4.followRedirects);
      assertTrue(httpConnection_Request4.validateTSLCertificates);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertTrue(httpConnection_Request4.parserDefined);
      assertEquals(41, httpConnection_Request4.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertNotNull(httpConnection_Request4);
      
      String string4 = "KXf";
      HttpConnection.KeyVal httpConnection_KeyVal2 = HttpConnection.KeyVal.create(httpConnection_Request3.postDataCharset, string4);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(41, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals("KXf", httpConnection_KeyVal2.value());
      assertFalse(httpConnection_KeyVal2.hasInputStream());
      assertEquals("UTF-8", httpConnection_KeyVal2.key());
      assertEquals(41, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertEquals(41, httpConnection_Request2.timeout());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("", httpConnection_KeyVal0.value());
      assertEquals("", httpConnection_KeyVal0.key());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(41, httpConnection_Request3.timeout());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertTrue(httpConnection_Request3.followRedirects());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertNotSame(string4, string3);
      assertNotSame(string4, string0);
      assertNotSame(string4, string2);
      assertNotSame(string4, string1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertNotSame(httpConnection_KeyVal2, httpConnection_KeyVal0);
      assertNotSame(httpConnection_KeyVal2, httpConnection_KeyVal1);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertNotSame(httpConnection_KeyVal0, httpConnection_KeyVal2);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string1));
      assertFalse(httpConnection_KeyVal2.equals((Object)httpConnection_KeyVal0));
      assertFalse(httpConnection_KeyVal2.equals((Object)httpConnection_KeyVal1));
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(41, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.parserDefined);
      assertEquals(41, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.parserDefined);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertEquals(41, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertTrue(httpConnection_Request2.parserDefined);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.parserDefined);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertEquals(41, httpConnection_Request3.timeoutMilliseconds);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertNotNull(httpConnection_KeyVal2);
      
      httpConnection_Request4.ignoreHttpErrors = httpConnection_Request0.validateTSLCertificates;
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(41, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(41, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertEquals(41, httpConnection_Request4.timeout());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertTrue(httpConnection_Request4.followRedirects());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertTrue(httpConnection_Request4.ignoreHttpErrors());
      
      int int1 = 0;
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNotNull(httpConnection_Response0);
      
      HttpURLConnection httpURLConnection0 = HttpConnection.Response.createConnection(httpConnection_Request0);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(41, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpURLConnection0.getDefaultUseCaches());
      assertEquals(41, httpURLConnection0.getReadTimeout());
      assertEquals(0L, httpURLConnection0.getIfModifiedSince());
      assertEquals((-1), httpURLConnection0.getContentLength());
      assertEquals("GET", httpURLConnection0.getRequestMethod());
      assertFalse(httpURLConnection0.getDoOutput());
      assertNull(httpURLConnection0.getContentEncoding());
      assertTrue(httpURLConnection0.getDoInput());
      assertEquals(41, httpURLConnection0.getConnectTimeout());
      assertTrue(httpURLConnection0.getFollowRedirects());
      assertFalse(httpURLConnection0.getInstanceFollowRedirects());
      assertEquals("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection:http://www.someFakeButWellFormedURL.org/fooExample", httpURLConnection0.toString());
      assertTrue(httpURLConnection0.getUseCaches());
      assertFalse(httpURLConnection0.getDefaultAllowUserInteraction());
      assertNull(httpURLConnection0.getContentType());
      assertFalse(httpURLConnection0.usingProxy());
      assertFalse(httpURLConnection0.getAllowUserInteraction());
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(41, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.parserDefined);
      assertNotNull(httpURLConnection0);
      
      Connection.Response connection_Response0 = null;
      try { 
        httpConnection_Response0.setupFromConnection(httpURLConnection0, connection_Response0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Could not find: www.someFakeButWellFormedURL.org
         //
         verifyException("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection", e);
      }
  }

  @Test(timeout = 11000)
  public void test87()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertNotNull(httpConnection_Request0);
      
      int int0 = 512;
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.timeout(int0);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(512, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(512, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(512, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(512, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.parserDefined);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertNotNull(httpConnection_Request1);
      
      HttpConnection.KeyVal httpConnection_KeyVal0 = HttpConnection.KeyVal.create(httpConnection_Request1.postDataCharset, httpConnection_Request1.postDataCharset);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(512, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(512, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("UTF-8", httpConnection_KeyVal0.value());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(512, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(512, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.parserDefined);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertNotNull(httpConnection_KeyVal0);
      
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      assertNotNull(pipedOutputStream0);
      
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      assertEquals(0, pipedInputStream0.available());
      assertNotNull(pipedInputStream0);
      
      HttpConnection.KeyVal httpConnection_KeyVal1 = httpConnection_KeyVal0.inputStream((InputStream) pipedInputStream0);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(512, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(512, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertEquals("UTF-8", httpConnection_KeyVal0.value());
      assertEquals(0, pipedInputStream0.available());
      assertEquals("UTF-8", httpConnection_KeyVal1.value());
      assertTrue(httpConnection_KeyVal1.hasInputStream());
      assertEquals("UTF-8", httpConnection_KeyVal1.key());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertSame(httpConnection_KeyVal1, httpConnection_KeyVal0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(512, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(512, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.parserDefined);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertNotNull(httpConnection_KeyVal1);
      
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request1.data((Connection.KeyVal) httpConnection_KeyVal1);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(512, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(512, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertEquals("UTF-8", httpConnection_KeyVal0.value());
      assertEquals(0, pipedInputStream0.available());
      assertEquals("UTF-8", httpConnection_KeyVal1.value());
      assertTrue(httpConnection_KeyVal1.hasInputStream());
      assertEquals("UTF-8", httpConnection_KeyVal1.key());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals(512, httpConnection_Request2.timeout());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertSame(httpConnection_KeyVal1, httpConnection_KeyVal0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(512, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(512, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.parserDefined);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(512, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.parserDefined);
      assertTrue(httpConnection_Request2.followRedirects);
      assertNotNull(httpConnection_Request2);
      
      HttpConnection.Request httpConnection_Request3 = (HttpConnection.Request)httpConnection_Request2.followRedirects(httpConnection_Request0.ignoreContentType);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(512, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(512, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertEquals("UTF-8", httpConnection_KeyVal0.value());
      assertEquals(0, pipedInputStream0.available());
      assertEquals("UTF-8", httpConnection_KeyVal1.value());
      assertTrue(httpConnection_KeyVal1.hasInputStream());
      assertEquals("UTF-8", httpConnection_KeyVal1.key());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals(512, httpConnection_Request2.timeout());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertEquals(512, httpConnection_Request3.timeout());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertFalse(httpConnection_Request3.followRedirects());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertSame(httpConnection_KeyVal1, httpConnection_KeyVal0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(512, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(512, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.parserDefined);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.followRedirects);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(512, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertEquals(512, httpConnection_Request3.timeoutMilliseconds);
      assertFalse(httpConnection_Request3.parserDefined);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertFalse(httpConnection_Request3.followRedirects);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertNotNull(httpConnection_Request3);
      
      String string0 = "(l{c'2r+b";
      // Undeclared exception!
      HttpConnection.Response.writePost(httpConnection_Request3, pipedOutputStream0, string0);
  }

  @Test(timeout = 11000)
  public void test88()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertNotNull(httpConnection_Request0);
      
      HttpConnection.KeyVal httpConnection_KeyVal0 = HttpConnection.KeyVal.create(httpConnection_Request0.postDataCharset, httpConnection_Request0.postDataCharset);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertEquals("UTF-8", httpConnection_KeyVal0.value());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertNotNull(httpConnection_KeyVal0);
      
      String string0 = "nowrap";
      httpConnection_KeyVal0.key = string0;
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals("nowrap", httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("UTF-8", httpConnection_KeyVal0.value());
      
      PipedInputStream pipedInputStream0 = new PipedInputStream(httpConnection_Request0.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(0, pipedInputStream0.available());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertNotNull(pipedInputStream0);
      
      httpConnection_KeyVal0.stream = (InputStream) pipedInputStream0;
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("nowrap", httpConnection_KeyVal0.key());
      assertEquals("UTF-8", httpConnection_KeyVal0.value());
      assertEquals(0, pipedInputStream0.available());
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.data((Connection.KeyVal) httpConnection_KeyVal0);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("nowrap", httpConnection_KeyVal0.key());
      assertEquals("UTF-8", httpConnection_KeyVal0.value());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request1.parserDefined);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertNotNull(httpConnection_Request1);
      
      String string1 = HttpConnection.Response.setOutputContentType(httpConnection_Request1);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("nowrap", httpConnection_KeyVal0.key());
      assertEquals("UTF-8", httpConnection_KeyVal0.value());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNotSame(string1, string0);
      assertEquals("--------------------------------", string1);
      assertFalse(string1.equals((Object)string0));
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request1.parserDefined);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertNotNull(string1);
      
      String string2 = "param";
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(string2);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(mockFileOutputStream0);
      
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(dataOutputStream0);
      
      try { 
        HttpConnection.Response.writePost(httpConnection_Request0, dataOutputStream0, httpConnection_KeyVal0.value);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 11000)
  public void test89()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      String string0 = "\"R-Q";
      boolean boolean0 = FileSystemHandling.appendStringToFile(evoSuiteFile0, string0);
      assertFalse(boolean0);
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNotNull(httpConnection_Response0);
      
      boolean boolean1 = true;
      httpConnection_Response0.executed = boolean1;
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>(httpConnection_Response0.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, hashMap0.size());
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertTrue(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNotNull(hashMap0);
      
      LinkedList<String> linkedList0 = new LinkedList<String>();
      assertEquals(0, linkedList0.size());
      assertFalse(linkedList0.contains(string0));
      assertNotNull(linkedList0);
      
      List<String> list0 = hashMap0.put(httpConnection_Response0.contentType, linkedList0);
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      assertEquals(1, hashMap0.size());
      assertFalse(hashMap0.isEmpty());
      assertEquals(0, linkedList0.size());
      assertFalse(linkedList0.contains(string0));
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertTrue(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNull(list0);
      
      String string1 = "";
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      assertEquals(0, linkedList1.size());
      assertNotNull(linkedList1);
      
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>(linkedList1);
      assertEquals(0, linkedList1.size());
      assertEquals(0, linkedList2.size());
      assertTrue(linkedList2.equals((Object)linkedList1));
      assertNotNull(linkedList2);
      
      LinkedList<String> linkedList3 = new LinkedList<String>();
      assertEquals(0, linkedList3.size());
      assertFalse(linkedList3.contains(string0));
      assertTrue(linkedList3.equals((Object)linkedList0));
      assertNotNull(linkedList3);
      
      LinkedList<String> linkedList4 = new LinkedList<String>();
      assertEquals(0, linkedList4.size());
      assertFalse(linkedList4.contains(string0));
      assertTrue(linkedList4.equals((Object)linkedList3));
      assertTrue(linkedList4.equals((Object)linkedList0));
      assertNotNull(linkedList4);
      
      boolean boolean2 = linkedList4.add(string0);
      assertEquals(1, linkedList4.size());
      assertNotSame(string0, string1);
      assertNotSame(linkedList4, linkedList0);
      assertNotSame(linkedList4, linkedList3);
      assertFalse(linkedList4.contains(string1));
      assertTrue(linkedList4.contains(string0));
      assertTrue(boolean2);
      assertFalse(string0.equals((Object)string1));
      assertFalse(linkedList4.equals((Object)linkedList0));
      assertFalse(linkedList4.equals((Object)linkedList3));
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      
      List<String> list1 = hashMap0.put(string1, linkedList4);
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      assertEquals(2, hashMap0.size());
      assertFalse(hashMap0.isEmpty());
      assertEquals(1, linkedList4.size());
      assertNotSame(string1, string0);
      assertNotSame(linkedList4, linkedList0);
      assertNotSame(linkedList4, linkedList3);
      assertFalse(linkedList4.contains(string1));
      assertTrue(linkedList4.contains(string0));
      assertFalse(string1.equals((Object)string0));
      assertFalse(linkedList4.equals((Object)linkedList0));
      assertFalse(linkedList4.equals((Object)linkedList3));
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertTrue(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNull(list1);
      
      // Undeclared exception!
      try { 
        httpConnection_Response0.processResponseHeaders(hashMap0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Header name must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test90()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertNotNull(httpConnection_Request0);
      
      Parser parser0 = Parser.xmlParser();
      assertFalse(parser0.isTrackErrors());
      assertNotNull(parser0);
      
      boolean boolean0 = true;
      String string0 = Parser.unescapeEntities(httpConnection_Request0.postDataCharset, boolean0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals("UTF-8", string0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertNotNull(string0);
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.parser(parser0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(parser0.isTrackErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.parserDefined);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertNotNull(httpConnection_Request1);
      
      HttpConnection.KeyVal httpConnection_KeyVal0 = new HttpConnection.KeyVal();
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertNull(httpConnection_KeyVal0.key());
      assertNull(httpConnection_KeyVal0.value());
      assertNotNull(httpConnection_KeyVal0);
      
      HttpConnection.Request httpConnection_Request2 = (HttpConnection.Request)httpConnection_Request0.ignoreHttpErrors(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(parser0.isTrackErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.parserDefined);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.parserDefined);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertNotNull(httpConnection_Request2);
      
      HttpConnection.Request httpConnection_Request3 = httpConnection_Request1.data((Connection.KeyVal) httpConnection_KeyVal0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(parser0.isTrackErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertNull(httpConnection_KeyVal0.key());
      assertNull(httpConnection_KeyVal0.value());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertEquals(3000, httpConnection_Request3.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.parserDefined);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request3.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertTrue(httpConnection_Request3.parserDefined);
      assertNotNull(httpConnection_Request3);
      
      HttpConnection.Request httpConnection_Request4 = (HttpConnection.Request)httpConnection_Request3.maxBodySize(httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(3000, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(parser0.isTrackErrors());
      assertEquals(3000, httpConnection_Request1.maxBodySize());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertNull(httpConnection_KeyVal0.key());
      assertNull(httpConnection_KeyVal0.value());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertTrue(httpConnection_Request3.followRedirects());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertEquals(3000, httpConnection_Request3.maxBodySize());
      assertEquals(3000, httpConnection_Request3.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertTrue(httpConnection_Request4.followRedirects());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals(3000, httpConnection_Request4.maxBodySize());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertEquals(3000, httpConnection_Request4.timeout());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(3000, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(3000, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertEquals(3000, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertTrue(httpConnection_Request3.parserDefined);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertTrue(httpConnection_Request4.parserDefined);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertEquals(3000, httpConnection_Request4.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request4.timeoutMilliseconds);
      assertTrue(httpConnection_Request4.followRedirects);
      assertTrue(httpConnection_Request4.validateTSLCertificates);
      assertNotNull(httpConnection_Request4);
      
      String string1 = "h5";
      MockPrintStream mockPrintStream0 = new MockPrintStream(string1);
      assertFalse(string1.equals((Object)string0));
      assertNotNull(mockPrintStream0);
      
      // Undeclared exception!
      try { 
        HttpConnection.Response.writePost(httpConnection_Request4, mockPrintStream0, httpConnection_KeyVal0.key);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.net.URLEncoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test91()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertNotNull(httpConnection_Request0);
      
      HttpConnection.KeyVal httpConnection_KeyVal0 = HttpConnection.KeyVal.create(httpConnection_Request0.postDataCharset, httpConnection_Request0.postDataCharset);
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertEquals("UTF-8", httpConnection_KeyVal0.value());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertNotNull(httpConnection_KeyVal0);
      
      String string0 = "https";
      httpConnection_Request0.postDataCharset = string0;
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("https", httpConnection_Request0.postDataCharset());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      
      String string1 = "o/";
      httpConnection_Request0.postDataCharset = string1;
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals("o/", httpConnection_Request0.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.data((Connection.KeyVal) httpConnection_KeyVal0);
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals("o/", httpConnection_Request0.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertEquals("UTF-8", httpConnection_KeyVal0.value());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals("o/", httpConnection_Request1.postDataCharset());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.parserDefined);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertNotNull(httpConnection_Request1);
      
      String string2 = null;
      httpConnection_KeyVal0.value = string2;
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals("o/", httpConnection_Request0.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertNull(httpConnection_KeyVal0.value());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      
      String string3 = httpConnection_KeyVal0.toString();
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals("o/", httpConnection_Request0.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertNull(httpConnection_KeyVal0.value());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(string3, string1);
      assertNotSame(string3, string0);
      assertEquals("UTF-8=null", string3);
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertNotNull(string3);
      
      String string4 = HttpConnection.Response.setOutputContentType(httpConnection_Request1);
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals("o/", httpConnection_Request0.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertNull(httpConnection_KeyVal0.value());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals("o/", httpConnection_Request1.postDataCharset());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.parserDefined);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertNull(string4);
      
      String string5 = "param";
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(string5);
      assertFalse(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string0));
      assertNotNull(mockFileOutputStream0);
      
      byte[] byteArray0 = new byte[9];
      byte byte0 = (byte)7;
      byteArray0[0] = byte0;
      byte byte1 = (byte) (-3);
      byteArray0[1] = byte1;
      byte byte2 = (byte) (-27);
      byteArray0[2] = byte2;
      byte byte3 = (byte)20;
      byteArray0[3] = byte3;
      byte byte4 = (byte) (-113);
      byteArray0[4] = byte4;
      byte byte5 = (byte) (-53);
      byteArray0[5] = byte5;
      byte byte6 = (byte) (-45);
      byteArray0[6] = byte6;
      byte byte7 = (byte) (-56);
      byteArray0[7] = byte7;
      byte byte8 = (byte) (-86);
      byteArray0[8] = byte8;
      mockFileOutputStream0.write(byteArray0);
      assertNotSame(string5, string3);
      assertNotSame(string5, string1);
      assertNotSame(string5, string0);
      assertArrayEquals(new byte[] {(byte)7, (byte) (-3), (byte) (-27), (byte)20, (byte) (-113), (byte) (-53), (byte) (-45), (byte) (-56), (byte) (-86)}, byteArray0);
      assertFalse(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string0));
      assertEquals(9, byteArray0.length);
      
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
      assertFalse(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string0));
      assertNotNull(dataOutputStream0);
      
      try { 
        HttpConnection.Response.writePost(httpConnection_Request0, dataOutputStream0, httpConnection_KeyVal0.value);
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(UnsupportedEncodingException e) {
         //
         // o/
         //
         verifyException("java.net.URLEncoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test92()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertNotNull(httpConnection_Request0);
      
      int int0 = 58;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      String string0 = "--";
      String string1 = "org.jsoup.helper.HttpConnection$Response$2";
      HttpConnection.Request httpConnection_Request1 = (HttpConnection.Request)httpConnection_Request0.cookie(string0, string1);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request1.parserDefined);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertNotNull(httpConnection_Request1);
      
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://www.someFakeButWellFormedURL.org/fooExample?http=");
      boolean boolean0 = NetworkHandling.createRemoteTextFile(evoSuiteURL0, string0);
      assertNotSame(string0, string1);
      assertTrue(boolean0);
      assertFalse(string0.equals((Object)string1));
      
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request0.timeout(int0);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(58, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(58, httpConnection_Request2.timeout());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertNotNull(httpConnection_Request2);
      
      HttpConnection.Request httpConnection_Request3 = httpConnection_Request2.parser(httpConnection_Request0.parser);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(58, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(58, httpConnection_Request2.timeout());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request3.timeout());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertTrue(httpConnection_Request3.followRedirects);
      assertTrue(httpConnection_Request3.parserDefined);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(58, httpConnection_Request3.timeoutMilliseconds);
      assertNotNull(httpConnection_Request3);
      
      HttpConnection.KeyVal httpConnection_KeyVal0 = new HttpConnection.KeyVal();
      assertNull(httpConnection_KeyVal0.value());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertNull(httpConnection_KeyVal0.key());
      assertNotNull(httpConnection_KeyVal0);
      
      String string2 = "";
      HttpConnection.KeyVal httpConnection_KeyVal1 = httpConnection_KeyVal0.value(string2);
      assertEquals("", httpConnection_KeyVal0.value());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertNull(httpConnection_KeyVal0.key());
      assertEquals("", httpConnection_KeyVal1.value());
      assertNull(httpConnection_KeyVal1.key());
      assertFalse(httpConnection_KeyVal1.hasInputStream());
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertSame(httpConnection_KeyVal1, httpConnection_KeyVal0);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(httpConnection_KeyVal1);
      
      URL uRL0 = MockURL.getHttpExample();
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNotNull(uRL0);
      
      HttpConnection.Request httpConnection_Request4 = httpConnection_Request3.data((Connection.KeyVal) httpConnection_KeyVal0);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(58, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(58, httpConnection_Request2.timeout());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request3.timeout());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertEquals("", httpConnection_KeyVal0.value());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertNull(httpConnection_KeyVal0.key());
      assertTrue(httpConnection_Request4.followRedirects());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      assertEquals(58, httpConnection_Request4.timeout());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertTrue(httpConnection_Request3.followRedirects);
      assertTrue(httpConnection_Request3.parserDefined);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(58, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request4.parserDefined);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertEquals(58, httpConnection_Request4.timeoutMilliseconds);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertTrue(httpConnection_Request4.validateTSLCertificates);
      assertTrue(httpConnection_Request4.followRedirects);
      assertNotNull(httpConnection_Request4);
      
      String string3 = "http";
      httpConnection_KeyVal0.key = string3;
      assertEquals("", httpConnection_KeyVal0.value());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("http", httpConnection_KeyVal0.key());
      
      HttpConnection.Request httpConnection_Request5 = (HttpConnection.Request)httpConnection_Request2.url(uRL0);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(58, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertTrue(httpConnection_Request5.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request5.postDataCharset());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertTrue(httpConnection_Request5.followRedirects());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request5.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(58, httpConnection_Request2.timeout());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertEquals(58, httpConnection_Request5.timeoutMilliseconds);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertTrue(httpConnection_Request5.parserDefined);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertTrue(httpConnection_Request5.followRedirects);
      assertTrue(httpConnection_Request5.validateTSLCertificates);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertNotNull(httpConnection_Request5);
      
      String string4 = "KXf";
      HttpConnection.Response httpConnection_Response0 = HttpConnection.Response.execute((Connection.Request) httpConnection_Request5);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(58, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertTrue(httpConnection_Request5.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request5.postDataCharset());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertTrue(httpConnection_Request5.followRedirects());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request5.timeout());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertEquals(200, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(58, httpConnection_Request2.timeout());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertEquals(58, httpConnection_Request5.timeoutMilliseconds);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertTrue(httpConnection_Request5.parserDefined);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertTrue(httpConnection_Request5.followRedirects);
      assertTrue(httpConnection_Request5.validateTSLCertificates);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertTrue(httpConnection_Response0.executed);
      assertEquals(200, httpConnection_Response0.statusCode);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertNotNull(httpConnection_Response0);
      
      String string5 = httpConnection_Response0.charset();
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(58, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertTrue(httpConnection_Request5.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request5.postDataCharset());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertTrue(httpConnection_Request5.followRedirects());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request5.timeout());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertEquals(200, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(58, httpConnection_Request2.timeout());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertEquals(58, httpConnection_Request5.timeoutMilliseconds);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertTrue(httpConnection_Request5.parserDefined);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertTrue(httpConnection_Request5.followRedirects);
      assertTrue(httpConnection_Request5.validateTSLCertificates);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertTrue(httpConnection_Response0.executed);
      assertEquals(200, httpConnection_Response0.statusCode);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertNull(string5);
      
      HttpURLConnection httpURLConnection0 = HttpConnection.Response.createConnection(httpConnection_Response0.req);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(58, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertTrue(httpConnection_Request5.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request5.postDataCharset());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertTrue(httpConnection_Request5.followRedirects());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request5.timeout());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertEquals(200, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.contentType());
      assertTrue(httpURLConnection0.getFollowRedirects());
      assertTrue(httpURLConnection0.getDoInput());
      assertNull(httpURLConnection0.getContentType());
      assertFalse(httpURLConnection0.getAllowUserInteraction());
      assertFalse(httpURLConnection0.getInstanceFollowRedirects());
      assertFalse(httpURLConnection0.usingProxy());
      assertEquals((-1), httpURLConnection0.getContentLength());
      assertEquals(0L, httpURLConnection0.getIfModifiedSince());
      assertFalse(httpURLConnection0.getDefaultAllowUserInteraction());
      assertTrue(httpURLConnection0.getUseCaches());
      assertNull(httpURLConnection0.getContentEncoding());
      assertTrue(httpURLConnection0.getDefaultUseCaches());
      assertEquals("GET", httpURLConnection0.getRequestMethod());
      assertEquals("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection:http://www.someFakeButWellFormedURL.org/fooExample?http=", httpURLConnection0.toString());
      assertFalse(httpURLConnection0.getDoOutput());
      assertEquals(58, httpURLConnection0.getReadTimeout());
      assertEquals(58, httpURLConnection0.getConnectTimeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(58, httpConnection_Request2.timeout());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertEquals(58, httpConnection_Request5.timeoutMilliseconds);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertTrue(httpConnection_Request5.parserDefined);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertTrue(httpConnection_Request5.followRedirects);
      assertTrue(httpConnection_Request5.validateTSLCertificates);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertTrue(httpConnection_Response0.executed);
      assertEquals(200, httpConnection_Response0.statusCode);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertNotNull(httpURLConnection0);
      
      int int1 = 200;
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(int1);
      assertEquals(0, byteArrayOutputStream0.size());
      assertEquals("", byteArrayOutputStream0.toString());
      assertFalse(int1 == int0);
      assertNotNull(byteArrayOutputStream0);
      
      String string6 = "w'9|\\mc`v}";
      boolean boolean1 = httpConnection_Response0.hasHeader(string6);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(58, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertTrue(httpConnection_Request5.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request5.postDataCharset());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertTrue(httpConnection_Request5.followRedirects());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request5.timeout());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertEquals(200, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(58, httpConnection_Request2.timeout());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertNotSame(string6, string4);
      assertNotSame(string6, string1);
      assertNotSame(string6, string2);
      assertNotSame(string6, string0);
      assertNotSame(string6, string3);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertFalse(boolean1);
      assertFalse(int0 == int1);
      assertFalse(string6.equals((Object)string4));
      assertFalse(string6.equals((Object)string1));
      assertFalse(string6.equals((Object)string2));
      assertFalse(string6.equals((Object)string0));
      assertFalse(string6.equals((Object)string3));
      assertFalse(boolean1 == boolean0);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertEquals(58, httpConnection_Request5.timeoutMilliseconds);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertTrue(httpConnection_Request5.parserDefined);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertTrue(httpConnection_Request5.followRedirects);
      assertTrue(httpConnection_Request5.validateTSLCertificates);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertTrue(httpConnection_Response0.executed);
      assertEquals(200, httpConnection_Response0.statusCode);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      
      String string7 = "(K!4buN|pi2 p'";
      HttpConnection.Response.writePost(httpConnection_Request5, byteArrayOutputStream0, string7);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(58, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertTrue(httpConnection_Request5.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request5.postDataCharset());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertTrue(httpConnection_Request5.followRedirects());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request5.timeout());
      assertEquals("--(K!4buN|pi2 p'--", byteArrayOutputStream0.toString());
      assertEquals(18, byteArrayOutputStream0.size());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(58, httpConnection_Request2.timeout());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertNotSame(string7, string1);
      assertNotSame(string7, string0);
      assertNotSame(string7, string4);
      assertNotSame(string7, string6);
      assertNotSame(string7, string3);
      assertNotSame(string7, string2);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertFalse(string7.equals((Object)string1));
      assertFalse(string7.equals((Object)string0));
      assertFalse(string7.equals((Object)string4));
      assertFalse(string7.equals((Object)string6));
      assertFalse(string7.equals((Object)string3));
      assertFalse(string7.equals((Object)string2));
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertEquals(58, httpConnection_Request5.timeoutMilliseconds);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertTrue(httpConnection_Request5.parserDefined);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertTrue(httpConnection_Request5.followRedirects);
      assertTrue(httpConnection_Request5.validateTSLCertificates);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      
      String string8 = httpConnection_Response0.body();
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(58, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertTrue(httpConnection_Request5.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request5.postDataCharset());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertTrue(httpConnection_Request5.followRedirects());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request5.timeout());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertEquals(200, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(58, httpConnection_Request2.timeout());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertNotSame(string8, string7);
      assertNotSame(string8, string3);
      assertNotSame(string8, string4);
      assertNotSame(string8, string0);
      assertNotSame(string8, string2);
      assertNotSame(string8, string1);
      assertNotSame(string8, string6);
      assertEquals("--", string8);
      assertFalse(int0 == int1);
      assertFalse(string8.equals((Object)string7));
      assertFalse(string8.equals((Object)string3));
      assertFalse(string8.equals((Object)string4));
      assertFalse(string8.equals((Object)string2));
      assertFalse(string8.equals((Object)string1));
      assertFalse(string8.equals((Object)string6));
      assertTrue(string8.equals((Object)string0));
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertEquals(58, httpConnection_Request5.timeoutMilliseconds);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertTrue(httpConnection_Request5.parserDefined);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertTrue(httpConnection_Request5.followRedirects);
      assertTrue(httpConnection_Request5.validateTSLCertificates);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertTrue(httpConnection_Response0.executed);
      assertEquals(200, httpConnection_Response0.statusCode);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertNotNull(string8);
      
      Document document0 = httpConnection_Response0.parse();
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(58, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertTrue(httpConnection_Request5.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request5.postDataCharset());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertTrue(httpConnection_Request5.followRedirects());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request5.timeout());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertEquals("UTF-8", httpConnection_Response0.charset());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertEquals(200, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(58, httpConnection_Request2.timeout());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Document.QuirksMode.noQuirks, document0.quirksMode());
      assertEquals("#root", document0.tagName());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample?http=", document0.baseUri());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample?http=", document0.location());
      assertFalse(document0.isBlock());
      assertEquals(0, document0.siblingIndex());
      assertEquals(1, document0.childNodeSize());
      assertEquals("#document", document0.nodeName());
      assertFalse(document0.updateMetaCharsetElement());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertFalse(int0 == int1);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertEquals(58, httpConnection_Request5.timeoutMilliseconds);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertTrue(httpConnection_Request5.parserDefined);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertTrue(httpConnection_Request5.followRedirects);
      assertTrue(httpConnection_Request5.validateTSLCertificates);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertTrue(httpConnection_Response0.executed);
      assertEquals(200, httpConnection_Response0.statusCode);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertNotNull(document0);
      
      byte[] byteArray0 = httpConnection_Response0.bodyAsBytes();
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(58, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertTrue(httpConnection_Request5.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request5.postDataCharset());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertTrue(httpConnection_Request5.followRedirects());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request5.timeout());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertEquals("UTF-8", httpConnection_Response0.charset());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertEquals(200, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(58, httpConnection_Request2.timeout());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertArrayEquals(new byte[] {(byte)45, (byte)45}, byteArray0);
      assertFalse(int0 == int1);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertEquals(58, httpConnection_Request5.timeoutMilliseconds);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertTrue(httpConnection_Request5.parserDefined);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertTrue(httpConnection_Request5.followRedirects);
      assertTrue(httpConnection_Request5.validateTSLCertificates);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertTrue(httpConnection_Response0.executed);
      assertEquals(200, httpConnection_Response0.statusCode);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(2, byteArray0.length);
      assertNotNull(byteArray0);
      
      String string9 = httpConnection_Response0.contentType();
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(58, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertTrue(httpConnection_Request5.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request5.postDataCharset());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertTrue(httpConnection_Request5.followRedirects());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request5.timeout());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertEquals("UTF-8", httpConnection_Response0.charset());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertEquals(200, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(58, httpConnection_Request2.timeout());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertFalse(int0 == int1);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertEquals(58, httpConnection_Request5.timeoutMilliseconds);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertTrue(httpConnection_Request5.parserDefined);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertTrue(httpConnection_Request5.followRedirects);
      assertTrue(httpConnection_Request5.validateTSLCertificates);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertTrue(httpConnection_Response0.executed);
      assertEquals(200, httpConnection_Response0.statusCode);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertNull(string9);
      
      HostnameVerifier hostnameVerifier0 = HttpConnection.Response.getInsecureVerifier();
      assertNotNull(hostnameVerifier0);
  }

  @Test(timeout = 11000)
  public void test93()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertNotNull(httpConnection_Request0);
      
      int int0 = 58;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      String string0 = "--";
      String string1 = "org.jsoup.helper.HttpConnection$Response$2";
      HttpConnection.Request httpConnection_Request1 = (HttpConnection.Request)httpConnection_Request0.cookie(string0, string1);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.followRedirects());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.parserDefined);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertNotNull(httpConnection_Request1);
      
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://www.someFakeButWellFormedURL.org/fooExample?http=");
      boolean boolean0 = NetworkHandling.createRemoteTextFile(evoSuiteURL0, string0);
      assertNotSame(string0, string1);
      assertTrue(boolean0);
      assertFalse(string0.equals((Object)string1));
      
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request0.timeout(int0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(58, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.parserDefined);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertNotNull(httpConnection_Request2);
      
      HttpConnection.Request httpConnection_Request3 = httpConnection_Request2.parser(httpConnection_Request0.parser);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(58, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(58, httpConnection_Request3.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.parserDefined);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.parserDefined);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.parserDefined);
      assertEquals(58, httpConnection_Request3.timeoutMilliseconds);
      assertNotNull(httpConnection_Request3);
      
      HttpConnection.KeyVal httpConnection_KeyVal0 = new HttpConnection.KeyVal();
      assertNull(httpConnection_KeyVal0.value());
      assertNull(httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertNotNull(httpConnection_KeyVal0);
      
      String string2 = "";
      HttpConnection.KeyVal httpConnection_KeyVal1 = httpConnection_KeyVal0.value(string2);
      assertEquals("", httpConnection_KeyVal0.value());
      assertNull(httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertNull(httpConnection_KeyVal1.key());
      assertFalse(httpConnection_KeyVal1.hasInputStream());
      assertEquals("", httpConnection_KeyVal1.value());
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertSame(httpConnection_KeyVal1, httpConnection_KeyVal0);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertNotNull(httpConnection_KeyVal1);
      
      URL uRL0 = MockURL.getHttpExample();
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertNotNull(uRL0);
      
      HttpConnection.Request httpConnection_Request4 = httpConnection_Request3.data((Connection.KeyVal) httpConnection_KeyVal0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(58, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(58, httpConnection_Request3.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals("", httpConnection_KeyVal0.value());
      assertNull(httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals(58, httpConnection_Request4.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.parserDefined);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.parserDefined);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.parserDefined);
      assertEquals(58, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request4.parserDefined);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertEquals(58, httpConnection_Request4.timeoutMilliseconds);
      assertTrue(httpConnection_Request4.followRedirects);
      assertTrue(httpConnection_Request4.validateTSLCertificates);
      assertNotNull(httpConnection_Request4);
      
      String string3 = "http";
      httpConnection_KeyVal0.key = string3;
      assertEquals("", httpConnection_KeyVal0.value());
      assertEquals("http", httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      
      HttpConnection.Request httpConnection_Request5 = (HttpConnection.Request)httpConnection_Request2.url(uRL0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(58, httpConnection_Request5.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertTrue(httpConnection_Request5.validateTLSCertificates());
      assertTrue(httpConnection_Request5.followRedirects());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request5.postDataCharset());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertEquals(58, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.parserDefined);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(58, httpConnection_Request5.timeoutMilliseconds);
      assertTrue(httpConnection_Request5.validateTSLCertificates);
      assertTrue(httpConnection_Request5.followRedirects);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertTrue(httpConnection_Request5.parserDefined);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.parserDefined);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertNotNull(httpConnection_Request5);
      
      String string4 = "KXf";
      HttpConnection.Response httpConnection_Response0 = HttpConnection.Response.execute((Connection.Request) httpConnection_Request5);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(58, httpConnection_Request5.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertTrue(httpConnection_Request5.validateTLSCertificates());
      assertTrue(httpConnection_Request5.followRedirects());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request5.postDataCharset());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertEquals(200, httpConnection_Response0.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertEquals(58, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.parserDefined);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(58, httpConnection_Request5.timeoutMilliseconds);
      assertTrue(httpConnection_Request5.validateTSLCertificates);
      assertTrue(httpConnection_Request5.followRedirects);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertTrue(httpConnection_Request5.parserDefined);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(200, httpConnection_Response0.statusCode);
      assertTrue(httpConnection_Response0.executed);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.parserDefined);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertNotNull(httpConnection_Response0);
      
      String string5 = httpConnection_Response0.charset();
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(58, httpConnection_Request5.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertTrue(httpConnection_Request5.validateTLSCertificates());
      assertTrue(httpConnection_Request5.followRedirects());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request5.postDataCharset());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertEquals(200, httpConnection_Response0.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertEquals(58, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.parserDefined);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(58, httpConnection_Request5.timeoutMilliseconds);
      assertTrue(httpConnection_Request5.validateTSLCertificates);
      assertTrue(httpConnection_Request5.followRedirects);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertTrue(httpConnection_Request5.parserDefined);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(200, httpConnection_Response0.statusCode);
      assertTrue(httpConnection_Response0.executed);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.parserDefined);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertNull(string5);
      
      HttpURLConnection httpURLConnection0 = HttpConnection.Response.createConnection(httpConnection_Response0.req);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(58, httpConnection_Request5.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertTrue(httpConnection_Request5.validateTLSCertificates());
      assertTrue(httpConnection_Request5.followRedirects());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request5.postDataCharset());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertEquals(200, httpConnection_Response0.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertFalse(httpURLConnection0.usingProxy());
      assertFalse(httpURLConnection0.getInstanceFollowRedirects());
      assertNull(httpURLConnection0.getContentType());
      assertFalse(httpURLConnection0.getAllowUserInteraction());
      assertEquals((-1), httpURLConnection0.getContentLength());
      assertEquals(58, httpURLConnection0.getReadTimeout());
      assertEquals(58, httpURLConnection0.getConnectTimeout());
      assertTrue(httpURLConnection0.getFollowRedirects());
      assertTrue(httpURLConnection0.getDoInput());
      assertEquals("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection:http://www.someFakeButWellFormedURL.org/fooExample?http=", httpURLConnection0.toString());
      assertEquals("GET", httpURLConnection0.getRequestMethod());
      assertFalse(httpURLConnection0.getDoOutput());
      assertTrue(httpURLConnection0.getDefaultUseCaches());
      assertNull(httpURLConnection0.getContentEncoding());
      assertTrue(httpURLConnection0.getUseCaches());
      assertFalse(httpURLConnection0.getDefaultAllowUserInteraction());
      assertEquals(0L, httpURLConnection0.getIfModifiedSince());
      assertEquals(58, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.parserDefined);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(58, httpConnection_Request5.timeoutMilliseconds);
      assertTrue(httpConnection_Request5.validateTSLCertificates);
      assertTrue(httpConnection_Request5.followRedirects);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertTrue(httpConnection_Request5.parserDefined);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(200, httpConnection_Response0.statusCode);
      assertTrue(httpConnection_Response0.executed);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.parserDefined);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertNotNull(httpURLConnection0);
      
      int int1 = 200;
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(int1);
      assertEquals(0, byteArrayOutputStream0.size());
      assertEquals("", byteArrayOutputStream0.toString());
      assertFalse(int1 == int0);
      assertNotNull(byteArrayOutputStream0);
      
      String string6 = "w'9|\\mc`v}";
      boolean boolean1 = httpConnection_Response0.hasHeader(string6);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(58, httpConnection_Request5.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertTrue(httpConnection_Request5.validateTLSCertificates());
      assertTrue(httpConnection_Request5.followRedirects());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request5.postDataCharset());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertEquals(200, httpConnection_Response0.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertEquals(58, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertNotSame(string6, string4);
      assertNotSame(string6, string2);
      assertNotSame(string6, string3);
      assertNotSame(string6, string0);
      assertNotSame(string6, string1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertFalse(boolean1);
      assertFalse(int0 == int1);
      assertFalse(string6.equals((Object)string4));
      assertFalse(string6.equals((Object)string2));
      assertFalse(string6.equals((Object)string3));
      assertFalse(string6.equals((Object)string0));
      assertFalse(string6.equals((Object)string1));
      assertFalse(boolean1 == boolean0);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.parserDefined);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(58, httpConnection_Request5.timeoutMilliseconds);
      assertTrue(httpConnection_Request5.validateTSLCertificates);
      assertTrue(httpConnection_Request5.followRedirects);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertTrue(httpConnection_Request5.parserDefined);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(200, httpConnection_Response0.statusCode);
      assertTrue(httpConnection_Response0.executed);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.parserDefined);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreContentType);
      
      String string7 = "(K!4buN|pi2 p'";
      HttpConnection.Response.writePost(httpConnection_Request5, byteArrayOutputStream0, string7);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(58, httpConnection_Request5.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertTrue(httpConnection_Request5.validateTLSCertificates());
      assertTrue(httpConnection_Request5.followRedirects());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request5.postDataCharset());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertEquals(18, byteArrayOutputStream0.size());
      assertEquals("--(K!4buN|pi2 p'--", byteArrayOutputStream0.toString());
      assertEquals(58, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertNotSame(string7, string1);
      assertNotSame(string7, string0);
      assertNotSame(string7, string4);
      assertNotSame(string7, string2);
      assertNotSame(string7, string3);
      assertNotSame(string7, string6);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertFalse(string7.equals((Object)string1));
      assertFalse(string7.equals((Object)string0));
      assertFalse(string7.equals((Object)string4));
      assertFalse(string7.equals((Object)string2));
      assertFalse(string7.equals((Object)string3));
      assertFalse(string7.equals((Object)string6));
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.parserDefined);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(58, httpConnection_Request5.timeoutMilliseconds);
      assertTrue(httpConnection_Request5.validateTSLCertificates);
      assertTrue(httpConnection_Request5.followRedirects);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertTrue(httpConnection_Request5.parserDefined);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.parserDefined);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreContentType);
      
      HttpConnection.Response httpConnection_Response1 = HttpConnection.Response.execute(httpConnection_Response0.req);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(58, httpConnection_Request5.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertTrue(httpConnection_Request5.validateTLSCertificates());
      assertTrue(httpConnection_Request5.followRedirects());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request5.postDataCharset());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertEquals(200, httpConnection_Response0.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertEquals(58, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertNull(httpConnection_Response1.charset());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.contentType());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertFalse(int0 == int1);
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.parserDefined);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(58, httpConnection_Request5.timeoutMilliseconds);
      assertTrue(httpConnection_Request5.validateTSLCertificates);
      assertTrue(httpConnection_Request5.followRedirects);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertTrue(httpConnection_Request5.parserDefined);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(200, httpConnection_Response0.statusCode);
      assertTrue(httpConnection_Response0.executed);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.parserDefined);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertTrue(httpConnection_Response1.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertNotNull(httpConnection_Response1);
      
      String string8 = httpConnection_Response1.body();
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(58, httpConnection_Request5.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertTrue(httpConnection_Request5.validateTLSCertificates());
      assertTrue(httpConnection_Request5.followRedirects());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request5.postDataCharset());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertEquals(200, httpConnection_Response0.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertEquals(58, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertNull(httpConnection_Response1.charset());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.contentType());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertNotSame(string8, string7);
      assertNotSame(string8, string1);
      assertNotSame(string8, string0);
      assertNotSame(string8, string4);
      assertNotSame(string8, string6);
      assertNotSame(string8, string3);
      assertNotSame(string8, string2);
      assertEquals("--", string8);
      assertFalse(int0 == int1);
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertTrue(string8.equals((Object)string0));
      assertFalse(string8.equals((Object)string7));
      assertFalse(string8.equals((Object)string1));
      assertFalse(string8.equals((Object)string4));
      assertFalse(string8.equals((Object)string6));
      assertFalse(string8.equals((Object)string3));
      assertFalse(string8.equals((Object)string2));
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.parserDefined);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(58, httpConnection_Request5.timeoutMilliseconds);
      assertTrue(httpConnection_Request5.validateTSLCertificates);
      assertTrue(httpConnection_Request5.followRedirects);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertTrue(httpConnection_Request5.parserDefined);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(200, httpConnection_Response0.statusCode);
      assertTrue(httpConnection_Response0.executed);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.parserDefined);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertTrue(httpConnection_Response1.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertNotNull(string8);
      
      Parser parser0 = Parser.htmlParser();
      assertFalse(parser0.isTrackErrors());
      assertNotNull(parser0);
      
      HttpConnection.Request httpConnection_Request6 = httpConnection_Request5.parser(parser0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(58, httpConnection_Request5.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertTrue(httpConnection_Request5.validateTLSCertificates());
      assertTrue(httpConnection_Request5.followRedirects());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request5.postDataCharset());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertEquals(58, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertFalse(parser0.isTrackErrors());
      assertEquals(58, httpConnection_Request6.timeout());
      assertFalse(httpConnection_Request6.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request6.method());
      assertTrue(httpConnection_Request6.validateTLSCertificates());
      assertTrue(httpConnection_Request6.followRedirects());
      assertEquals(1048576, httpConnection_Request6.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request6.postDataCharset());
      assertFalse(httpConnection_Request6.ignoreContentType());
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request6);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request6);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request6);
      assertSame(httpConnection_Request6, httpConnection_Request1);
      assertSame(httpConnection_Request6, httpConnection_Request2);
      assertSame(httpConnection_Request6, httpConnection_Request3);
      assertSame(httpConnection_Request6, httpConnection_Request0);
      assertSame(httpConnection_Request6, httpConnection_Request4);
      assertSame(httpConnection_Request6, httpConnection_Request5);
      assertFalse(int0 == int1);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.parserDefined);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(58, httpConnection_Request5.timeoutMilliseconds);
      assertTrue(httpConnection_Request5.validateTSLCertificates);
      assertTrue(httpConnection_Request5.followRedirects);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertTrue(httpConnection_Request5.parserDefined);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.parserDefined);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(1048576, httpConnection_Request6.maxBodySizeBytes);
      assertTrue(httpConnection_Request6.validateTSLCertificates);
      assertEquals(58, httpConnection_Request6.timeoutMilliseconds);
      assertTrue(httpConnection_Request6.parserDefined);
      assertTrue(httpConnection_Request6.followRedirects);
      assertFalse(httpConnection_Request6.ignoreHttpErrors);
      assertFalse(httpConnection_Request6.ignoreContentType);
      assertNotNull(httpConnection_Request6);
      
      Document document0 = httpConnection_Response1.parse();
      assertEquals(1, document0.childNodeSize());
      assertFalse(document0.isBlock());
      assertEquals("#document", document0.nodeName());
      assertFalse(document0.updateMetaCharsetElement());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample?http=", document0.location());
      assertEquals("#root", document0.tagName());
      assertEquals(Document.QuirksMode.noQuirks, document0.quirksMode());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample?http=", document0.baseUri());
      assertEquals(0, document0.siblingIndex());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(58, httpConnection_Request5.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertTrue(httpConnection_Request5.validateTLSCertificates());
      assertTrue(httpConnection_Request5.followRedirects());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request5.postDataCharset());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertEquals(200, httpConnection_Response0.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertEquals(58, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.contentType());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertEquals("UTF-8", httpConnection_Response1.charset());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request6);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request6);
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request6);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertFalse(int0 == int1);
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.parserDefined);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(58, httpConnection_Request5.timeoutMilliseconds);
      assertTrue(httpConnection_Request5.validateTSLCertificates);
      assertTrue(httpConnection_Request5.followRedirects);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertTrue(httpConnection_Request5.parserDefined);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(200, httpConnection_Response0.statusCode);
      assertTrue(httpConnection_Response0.executed);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.parserDefined);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertTrue(httpConnection_Response1.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertNotNull(document0);
      
      byte[] byteArray0 = httpConnection_Response1.bodyAsBytes();
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(58, httpConnection_Request5.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertTrue(httpConnection_Request5.validateTLSCertificates());
      assertTrue(httpConnection_Request5.followRedirects());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request5.postDataCharset());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertEquals(200, httpConnection_Response0.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertEquals(58, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.contentType());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertEquals("UTF-8", httpConnection_Response1.charset());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request6);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request6);
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request6);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertArrayEquals(new byte[] {(byte)45, (byte)45}, byteArray0);
      assertFalse(int0 == int1);
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.parserDefined);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(58, httpConnection_Request5.timeoutMilliseconds);
      assertTrue(httpConnection_Request5.validateTSLCertificates);
      assertTrue(httpConnection_Request5.followRedirects);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertTrue(httpConnection_Request5.parserDefined);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(200, httpConnection_Response0.statusCode);
      assertTrue(httpConnection_Response0.executed);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.parserDefined);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertTrue(httpConnection_Response1.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertEquals(2, byteArray0.length);
      assertNotNull(byteArray0);
      
      String string9 = httpConnection_Response1.body();
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(58, httpConnection_Request5.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertTrue(httpConnection_Request5.validateTLSCertificates());
      assertTrue(httpConnection_Request5.followRedirects());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request5.postDataCharset());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertEquals(200, httpConnection_Response0.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertEquals(58, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.contentType());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertEquals("UTF-8", httpConnection_Response1.charset());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request6);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request6);
      assertNotSame(string9, string7);
      assertNotSame(string9, string8);
      assertNotSame(string9, string1);
      assertNotSame(string9, string0);
      assertNotSame(string9, string4);
      assertNotSame(string9, string3);
      assertNotSame(string9, string6);
      assertNotSame(string9, string2);
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request6);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertEquals("--", string9);
      assertFalse(int0 == int1);
      assertTrue(string9.equals((Object)string0));
      assertFalse(string9.equals((Object)string7));
      assertFalse(string9.equals((Object)string1));
      assertFalse(string9.equals((Object)string4));
      assertTrue(string9.equals((Object)string8));
      assertFalse(string9.equals((Object)string3));
      assertFalse(string9.equals((Object)string6));
      assertFalse(string9.equals((Object)string2));
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.parserDefined);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(58, httpConnection_Request5.timeoutMilliseconds);
      assertTrue(httpConnection_Request5.validateTSLCertificates);
      assertTrue(httpConnection_Request5.followRedirects);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertTrue(httpConnection_Request5.parserDefined);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(200, httpConnection_Response0.statusCode);
      assertTrue(httpConnection_Response0.executed);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.parserDefined);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertTrue(httpConnection_Response1.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertNotNull(string9);
      
      String string10 = httpConnection_Response0.statusMessage();
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(58, httpConnection_Request5.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertTrue(httpConnection_Request5.validateTLSCertificates());
      assertTrue(httpConnection_Request5.followRedirects());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request5.postDataCharset());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertEquals(200, httpConnection_Response0.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertEquals(58, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request6);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request6);
      assertNotSame(string10, string9);
      assertNotSame(string10, string4);
      assertNotSame(string10, string8);
      assertNotSame(string10, string3);
      assertNotSame(string10, string6);
      assertNotSame(string10, string2);
      assertNotSame(string10, string1);
      assertNotSame(string10, string7);
      assertNotSame(string10, string0);
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request6);
      assertEquals("OK", string10);
      assertFalse(int0 == int1);
      assertFalse(string10.equals((Object)string9));
      assertFalse(string10.equals((Object)string4));
      assertFalse(string10.equals((Object)string8));
      assertFalse(string10.equals((Object)string3));
      assertFalse(string10.equals((Object)string6));
      assertFalse(string10.equals((Object)string2));
      assertFalse(string10.equals((Object)string1));
      assertFalse(string10.equals((Object)string7));
      assertFalse(string10.equals((Object)string0));
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.parserDefined);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(58, httpConnection_Request5.timeoutMilliseconds);
      assertTrue(httpConnection_Request5.validateTSLCertificates);
      assertTrue(httpConnection_Request5.followRedirects);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertTrue(httpConnection_Request5.parserDefined);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(200, httpConnection_Response0.statusCode);
      assertTrue(httpConnection_Response0.executed);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.parserDefined);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertNotNull(string10);
  }

  @Test(timeout = 11000)
  public void test94()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertNotNull(httpConnection_Request0);
      
      int int0 = 58;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      assertFalse(fileSystemHandling1.equals((Object)fileSystemHandling0));
      assertNotNull(fileSystemHandling1);
      
      String string0 = "--";
      String string1 = "org.jsoup.helper.HttpConnection$Response$2";
      HttpConnection.Request httpConnection_Request1 = (HttpConnection.Request)httpConnection_Request0.cookie(string0, string1);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.parserDefined);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertNotNull(httpConnection_Request1);
      
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://www.someFakeButWellFormedURL.org/fooExample?http=");
      boolean boolean0 = NetworkHandling.createRemoteTextFile(evoSuiteURL0, string0);
      assertNotSame(string0, string1);
      assertTrue(boolean0);
      assertFalse(string0.equals((Object)string1));
      
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request0.timeout(int0);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(58, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(58, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertFalse(httpConnection_Request2.parserDefined);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      assertNotNull(httpConnection_Request2);
      
      HttpConnection.Request httpConnection_Request3 = httpConnection_Request2.parser(httpConnection_Request0.parser);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(58, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(58, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertTrue(httpConnection_Request3.followRedirects());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request3.timeout());
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(58, httpConnection_Request3.timeoutMilliseconds);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.parserDefined);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.followRedirects);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertNotNull(httpConnection_Request3);
      
      HttpConnection.KeyVal httpConnection_KeyVal0 = new HttpConnection.KeyVal();
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertNull(httpConnection_KeyVal0.key());
      assertNull(httpConnection_KeyVal0.value());
      assertNotNull(httpConnection_KeyVal0);
      
      String string2 = "";
      HttpConnection.KeyVal httpConnection_KeyVal1 = httpConnection_KeyVal0.value(string2);
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertNull(httpConnection_KeyVal0.key());
      assertEquals("", httpConnection_KeyVal0.value());
      assertFalse(httpConnection_KeyVal1.hasInputStream());
      assertNull(httpConnection_KeyVal1.key());
      assertEquals("", httpConnection_KeyVal1.value());
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertSame(httpConnection_KeyVal1, httpConnection_KeyVal0);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertNotNull(httpConnection_KeyVal1);
      
      URL uRL0 = MockURL.getHttpExample();
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNotNull(uRL0);
      
      HttpConnection.Request httpConnection_Request4 = httpConnection_Request2.data((Connection.KeyVal) httpConnection_KeyVal1);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(58, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(58, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertNull(httpConnection_KeyVal0.key());
      assertEquals("", httpConnection_KeyVal0.value());
      assertFalse(httpConnection_KeyVal1.hasInputStream());
      assertNull(httpConnection_KeyVal1.key());
      assertEquals("", httpConnection_KeyVal1.value());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals(58, httpConnection_Request4.timeout());
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertSame(httpConnection_KeyVal1, httpConnection_KeyVal0);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(58, httpConnection_Request4.timeoutMilliseconds);
      assertTrue(httpConnection_Request4.parserDefined);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertTrue(httpConnection_Request4.validateTSLCertificates);
      assertTrue(httpConnection_Request4.followRedirects);
      assertNotNull(httpConnection_Request4);
      
      HttpConnection.Request httpConnection_Request5 = httpConnection_Request3.data((Connection.KeyVal) httpConnection_KeyVal0);
      assertEquals(58, httpConnection_Request5.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertTrue(httpConnection_Request5.validateTLSCertificates());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request5.postDataCharset());
      assertTrue(httpConnection_Request5.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(58, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(58, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertTrue(httpConnection_Request3.followRedirects());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request3.timeout());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertNull(httpConnection_KeyVal0.key());
      assertEquals("", httpConnection_KeyVal0.value());
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request5);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertEquals(58, httpConnection_Request5.timeoutMilliseconds);
      assertTrue(httpConnection_Request5.followRedirects);
      assertTrue(httpConnection_Request5.validateTSLCertificates);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertTrue(httpConnection_Request5.parserDefined);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(58, httpConnection_Request3.timeoutMilliseconds);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.parserDefined);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.followRedirects);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertNotNull(httpConnection_Request5);
      
      String string3 = "http";
      httpConnection_KeyVal0.key = string3;
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("", httpConnection_KeyVal0.value());
      assertEquals("http", httpConnection_KeyVal0.key());
      
      HttpConnection.Request httpConnection_Request6 = (HttpConnection.Request)httpConnection_Request2.url(uRL0);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(58, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request6.validateTLSCertificates());
      assertTrue(httpConnection_Request6.followRedirects());
      assertEquals("UTF-8", httpConnection_Request6.postDataCharset());
      assertFalse(httpConnection_Request6.ignoreContentType());
      assertEquals(58, httpConnection_Request6.timeout());
      assertEquals(1048576, httpConnection_Request6.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request6.method());
      assertFalse(httpConnection_Request6.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(58, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request6);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request6, httpConnection_Request4);
      assertSame(httpConnection_Request6, httpConnection_Request2);
      assertSame(httpConnection_Request6, httpConnection_Request5);
      assertSame(httpConnection_Request6, httpConnection_Request0);
      assertSame(httpConnection_Request6, httpConnection_Request3);
      assertSame(httpConnection_Request6, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request6);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request6.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request6.maxBodySizeBytes);
      assertEquals(58, httpConnection_Request6.timeoutMilliseconds);
      assertTrue(httpConnection_Request6.followRedirects);
      assertTrue(httpConnection_Request6.validateTSLCertificates);
      assertTrue(httpConnection_Request6.parserDefined);
      assertFalse(httpConnection_Request6.ignoreContentType);
      assertTrue(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      assertNotNull(httpConnection_Request6);
      
      String string4 = "KXf";
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request6);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // HTTP error fetching URL
         //
         verifyException("org.jsoup.helper.HttpConnection$Response", e);
      }
  }

  @Test(timeout = 11000)
  public void test95()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertNotNull(httpConnection_Request0);
      
      Parser parser0 = Parser.xmlParser();
      assertFalse(parser0.isTrackErrors());
      assertNotNull(parser0);
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.parser(parser0);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(parser0.isTrackErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.parserDefined);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertNotNull(httpConnection_Request1);
      
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request1.timeout(httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(parser0.isTrackErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.parserDefined);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertNotNull(httpConnection_Request2);
      
      byte[] byteArray0 = new byte[7];
      byte byte0 = (byte)118;
      byteArray0[0] = byte0;
      byte byte1 = (byte) (-52);
      byteArray0[1] = byte1;
      byte byte2 = (byte)8;
      byteArray0[2] = byte2;
      byte byte3 = (byte) (-123);
      byteArray0[3] = byte3;
      byte byte4 = (byte) (-8);
      byteArray0[4] = byte4;
      byte byte5 = (byte) (-40);
      byteArray0[5] = byte5;
      byte byte6 = (byte) (-113);
      byteArray0[6] = byte6;
      int int0 = 1632;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, byte2, int0);
      assertEquals((-1), byteArrayInputStream0.available());
      assertArrayEquals(new byte[] {(byte)118, (byte) (-52), (byte)8, (byte) (-123), (byte) (-8), (byte) (-40), (byte) (-113)}, byteArray0);
      assertFalse(byte2 == byte4);
      assertFalse(byte2 == byte5);
      assertFalse(byte2 == byte1);
      assertFalse(byte2 == byte3);
      assertFalse(byte2 == byte0);
      assertFalse(byte2 == byte6);
      assertEquals(7, byteArray0.length);
      assertNotNull(byteArrayInputStream0);
      
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      assertEquals((-1), byteArrayInputStream0.available());
      assertArrayEquals(new byte[] {(byte)118, (byte) (-52), (byte)8, (byte) (-123), (byte) (-8), (byte) (-40), (byte) (-113)}, byteArray0);
      assertFalse(byte2 == byte4);
      assertFalse(byte2 == byte5);
      assertFalse(byte2 == byte1);
      assertFalse(byte2 == byte3);
      assertFalse(byte2 == byte0);
      assertFalse(byte2 == byte6);
      assertEquals(7, byteArray0.length);
      assertNotNull(dataInputStream0);
      
      HttpConnection.KeyVal httpConnection_KeyVal0 = HttpConnection.KeyVal.create(httpConnection_Request0.postDataCharset, httpConnection_Request2.postDataCharset, (InputStream) dataInputStream0);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(parser0.isTrackErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals((-1), byteArrayInputStream0.available());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertEquals("UTF-8", httpConnection_KeyVal0.value());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertArrayEquals(new byte[] {(byte)118, (byte) (-52), (byte)8, (byte) (-123), (byte) (-8), (byte) (-40), (byte) (-113)}, byteArray0);
      assertFalse(byte2 == byte4);
      assertFalse(byte2 == byte5);
      assertFalse(byte2 == byte1);
      assertFalse(byte2 == byte3);
      assertFalse(byte2 == byte0);
      assertFalse(byte2 == byte6);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.parserDefined);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(7, byteArray0.length);
      assertNotNull(httpConnection_KeyVal0);
      
      HttpConnection.Request httpConnection_Request3 = httpConnection_Request2.data((Connection.KeyVal) httpConnection_KeyVal0);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(parser0.isTrackErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals((-1), byteArrayInputStream0.available());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertEquals("UTF-8", httpConnection_KeyVal0.value());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals(3000, httpConnection_Request3.timeout());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertArrayEquals(new byte[] {(byte)118, (byte) (-52), (byte)8, (byte) (-123), (byte) (-8), (byte) (-40), (byte) (-113)}, byteArray0);
      assertFalse(byte2 == byte4);
      assertFalse(byte2 == byte5);
      assertFalse(byte2 == byte1);
      assertFalse(byte2 == byte3);
      assertFalse(byte2 == byte0);
      assertFalse(byte2 == byte6);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.parserDefined);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertEquals(3000, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertTrue(httpConnection_Request3.followRedirects);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.parserDefined);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(7, byteArray0.length);
      assertNotNull(httpConnection_Request3);
      
      boolean boolean0 = true;
      HttpConnection.Request httpConnection_Request4 = (HttpConnection.Request)httpConnection_Request3.followRedirects(boolean0);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(parser0.isTrackErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals((-1), byteArrayInputStream0.available());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertEquals("UTF-8", httpConnection_KeyVal0.value());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals(3000, httpConnection_Request3.timeout());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertTrue(httpConnection_Request4.followRedirects());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertEquals(3000, httpConnection_Request4.timeout());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertArrayEquals(new byte[] {(byte)118, (byte) (-52), (byte)8, (byte) (-123), (byte) (-8), (byte) (-40), (byte) (-113)}, byteArray0);
      assertFalse(byte2 == byte4);
      assertFalse(byte2 == byte5);
      assertFalse(byte2 == byte1);
      assertFalse(byte2 == byte3);
      assertFalse(byte2 == byte0);
      assertFalse(byte2 == byte6);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.parserDefined);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertEquals(3000, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertTrue(httpConnection_Request3.followRedirects);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.parserDefined);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request4.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertTrue(httpConnection_Request4.parserDefined);
      assertTrue(httpConnection_Request4.followRedirects);
      assertTrue(httpConnection_Request4.validateTSLCertificates);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertEquals(7, byteArray0.length);
      assertNotNull(httpConnection_Request4);
      
      MockFile mockFile0 = new MockFile(httpConnection_Request2.postDataCharset, httpConnection_Request1.postDataCharset);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.parserDefined);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertNotNull(mockFile0);
      
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0, httpConnection_Request1.postDataCharset);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.parserDefined);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertNotNull(mockPrintStream0);
      
      MockPrintStream mockPrintStream1 = new MockPrintStream(mockPrintStream0, httpConnection_Request2.ignoreContentType);
      assertFalse(mockPrintStream1.equals((Object)mockPrintStream0));
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.parserDefined);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertNotNull(mockPrintStream1);
      
      MockPrintStream mockPrintStream2 = (MockPrintStream)mockPrintStream1.append((CharSequence) httpConnection_Request3.postDataCharset);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(parser0.isTrackErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals((-1), byteArrayInputStream0.available());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertEquals("UTF-8", httpConnection_KeyVal0.value());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals(3000, httpConnection_Request3.timeout());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertFalse(mockFile0.isHidden());
      assertEquals(0L, mockFile0.getUsableSpace());
      assertTrue(mockFile0.canWrite());
      assertTrue(mockFile0.isFile());
      assertTrue(mockFile0.canExecute());
      assertTrue(mockFile0.canRead());
      assertEquals(5L, mockFile0.length());
      assertEquals(0L, mockFile0.getTotalSpace());
      assertEquals(1392409281320L, mockFile0.lastModified());
      assertEquals("/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/jsoup/a8b6982de98ff76ef254031d7152fff57f6bf941/evosuite_6/UTF-8", mockFile0.getParent());
      assertEquals(0L, mockFile0.getFreeSpace());
      assertTrue(mockFile0.exists());
      assertFalse(mockFile0.isDirectory());
      assertEquals("/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/jsoup/a8b6982de98ff76ef254031d7152fff57f6bf941/evosuite_6/UTF-8/UTF-8", mockFile0.toString());
      assertEquals("UTF-8", mockFile0.getName());
      assertTrue(mockFile0.isAbsolute());
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertNotSame(mockPrintStream0, mockPrintStream1);
      assertNotSame(mockPrintStream0, mockPrintStream2);
      assertSame(mockPrintStream1, mockPrintStream2);
      assertNotSame(mockPrintStream1, mockPrintStream0);
      assertNotSame(mockPrintStream2, mockPrintStream0);
      assertSame(mockPrintStream2, mockPrintStream1);
      assertArrayEquals(new byte[] {(byte)118, (byte) (-52), (byte)8, (byte) (-123), (byte) (-8), (byte) (-40), (byte) (-113)}, byteArray0);
      assertFalse(byte2 == byte4);
      assertFalse(byte2 == byte5);
      assertFalse(byte2 == byte1);
      assertFalse(byte2 == byte3);
      assertFalse(byte2 == byte0);
      assertFalse(byte2 == byte6);
      assertFalse(mockPrintStream0.equals((Object)mockPrintStream1));
      assertFalse(mockPrintStream1.equals((Object)mockPrintStream0));
      assertFalse(mockPrintStream2.equals((Object)mockPrintStream0));
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.parserDefined);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertEquals(3000, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertTrue(httpConnection_Request3.followRedirects);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.parserDefined);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(7, byteArray0.length);
      assertNotNull(mockPrintStream2);
      
      HttpConnection.Response.writePost(httpConnection_Request4, mockPrintStream2, httpConnection_KeyVal0.value);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(parser0.isTrackErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals((-1), byteArrayInputStream0.available());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertEquals("UTF-8", httpConnection_KeyVal0.value());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals(3000, httpConnection_Request3.timeout());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertTrue(httpConnection_Request4.followRedirects());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertEquals(3000, httpConnection_Request4.timeout());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertFalse(mockFile0.isHidden());
      assertEquals(0L, mockFile0.getUsableSpace());
      assertTrue(mockFile0.canWrite());
      assertTrue(mockFile0.isFile());
      assertTrue(mockFile0.canExecute());
      assertTrue(mockFile0.canRead());
      assertEquals(0L, mockFile0.getTotalSpace());
      assertEquals(1392409281320L, mockFile0.lastModified());
      assertEquals("/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/jsoup/a8b6982de98ff76ef254031d7152fff57f6bf941/evosuite_6/UTF-8", mockFile0.getParent());
      assertEquals(0L, mockFile0.getFreeSpace());
      assertTrue(mockFile0.exists());
      assertEquals(131L, mockFile0.length());
      assertFalse(mockFile0.isDirectory());
      assertEquals("/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/jsoup/a8b6982de98ff76ef254031d7152fff57f6bf941/evosuite_6/UTF-8/UTF-8", mockFile0.toString());
      assertEquals("UTF-8", mockFile0.getName());
      assertTrue(mockFile0.isAbsolute());
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertNotSame(mockPrintStream0, mockPrintStream1);
      assertNotSame(mockPrintStream0, mockPrintStream2);
      assertSame(mockPrintStream1, mockPrintStream2);
      assertNotSame(mockPrintStream1, mockPrintStream0);
      assertNotSame(mockPrintStream2, mockPrintStream0);
      assertSame(mockPrintStream2, mockPrintStream1);
      assertArrayEquals(new byte[] {(byte)118, (byte) (-52), (byte)8, (byte) (-123), (byte) (-8), (byte) (-40), (byte) (-113)}, byteArray0);
      assertFalse(byte2 == byte4);
      assertFalse(byte2 == byte5);
      assertFalse(byte2 == byte1);
      assertFalse(byte2 == byte3);
      assertFalse(byte2 == byte0);
      assertFalse(byte2 == byte6);
      assertFalse(mockPrintStream0.equals((Object)mockPrintStream1));
      assertFalse(mockPrintStream0.equals((Object)mockPrintStream2));
      assertFalse(mockPrintStream1.equals((Object)mockPrintStream0));
      assertFalse(mockPrintStream2.equals((Object)mockPrintStream0));
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.parserDefined);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertEquals(3000, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertTrue(httpConnection_Request3.followRedirects);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.parserDefined);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request4.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertTrue(httpConnection_Request4.parserDefined);
      assertTrue(httpConnection_Request4.followRedirects);
      assertTrue(httpConnection_Request4.validateTSLCertificates);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertEquals(7, byteArray0.length);
  }

  @Test(timeout = 11000)
  public void test96()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertNotNull(httpConnection_Request0);
      
      int int0 = 58;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      assertFalse(fileSystemHandling1.equals((Object)fileSystemHandling0));
      assertNotNull(fileSystemHandling1);
      
      String string0 = "--";
      String string1 = "org.jsoup.helper.HttpConnection$Response$2";
      HttpConnection.Request httpConnection_Request1 = (HttpConnection.Request)httpConnection_Request0.cookie(string0, string1);
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request1.parserDefined);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertNotNull(httpConnection_Request1);
      
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://www.someFakeButWellFormedURL.org/fooExample?http=");
      boolean boolean0 = NetworkHandling.createRemoteTextFile(evoSuiteURL0, string0);
      assertNotSame(string0, string1);
      assertTrue(boolean0);
      assertFalse(string0.equals((Object)string1));
      
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request0.timeout(int0);
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(58, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(58, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertFalse(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      assertNotNull(httpConnection_Request2);
      
      HttpConnection.Request httpConnection_Request3 = httpConnection_Request2.parser(httpConnection_Request0.parser);
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(58, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(58, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertTrue(httpConnection_Request3.followRedirects());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertEquals(58, httpConnection_Request3.timeout());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertTrue(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(58, httpConnection_Request3.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.parserDefined);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.followRedirects);
      assertNotNull(httpConnection_Request3);
      
      HttpConnection.KeyVal httpConnection_KeyVal0 = new HttpConnection.KeyVal();
      assertNull(httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertNull(httpConnection_KeyVal0.value());
      assertNotNull(httpConnection_KeyVal0);
      
      String string2 = "";
      Connection.Method connection_Method0 = Connection.Method.POST;
      httpConnection_Request3.method = connection_Method0;
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(Connection.Method.POST, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(58, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.POST, httpConnection_Request2.method());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(Connection.Method.POST, httpConnection_Request3.method());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertTrue(httpConnection_Request3.followRedirects());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertEquals(58, httpConnection_Request3.timeout());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertTrue(httpConnection_Request3.method.hasBody());
      
      HttpConnection.KeyVal httpConnection_KeyVal1 = httpConnection_KeyVal0.value(string2);
      assertNull(httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("", httpConnection_KeyVal0.value());
      assertEquals("", httpConnection_KeyVal1.value());
      assertNull(httpConnection_KeyVal1.key());
      assertFalse(httpConnection_KeyVal1.hasInputStream());
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertSame(httpConnection_KeyVal1, httpConnection_KeyVal0);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(httpConnection_KeyVal1);
      
      URL uRL0 = MockURL.getHttpExample();
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNotNull(uRL0);
      
      HttpConnection.Request httpConnection_Request4 = httpConnection_Request2.data((Connection.KeyVal) httpConnection_KeyVal1);
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(Connection.Method.POST, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(58, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      assertEquals(58, httpConnection_Request4.timeout());
      assertTrue(httpConnection_Request4.followRedirects());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertEquals(Connection.Method.POST, httpConnection_Request4.method());
      assertEquals(58, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.POST, httpConnection_Request2.method());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertNull(httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("", httpConnection_KeyVal0.value());
      assertEquals("", httpConnection_KeyVal1.value());
      assertNull(httpConnection_KeyVal1.key());
      assertFalse(httpConnection_KeyVal1.hasInputStream());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertSame(httpConnection_KeyVal1, httpConnection_KeyVal0);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request4.followRedirects);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertTrue(httpConnection_Request4.validateTSLCertificates);
      assertEquals(58, httpConnection_Request4.timeoutMilliseconds);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertTrue(httpConnection_Request4.parserDefined);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertTrue(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      assertNotNull(httpConnection_Request4);
      
      HttpConnection.Request httpConnection_Request5 = httpConnection_Request3.data((Connection.KeyVal) httpConnection_KeyVal0);
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(Connection.Method.POST, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(58, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request5.postDataCharset());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertTrue(httpConnection_Request5.followRedirects());
      assertTrue(httpConnection_Request5.validateTLSCertificates());
      assertEquals(58, httpConnection_Request5.timeout());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertEquals(Connection.Method.POST, httpConnection_Request5.method());
      assertEquals(58, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.POST, httpConnection_Request2.method());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(Connection.Method.POST, httpConnection_Request3.method());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertTrue(httpConnection_Request3.followRedirects());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertEquals(58, httpConnection_Request3.timeout());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertNull(httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("", httpConnection_KeyVal0.value());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request3, httpConnection_Request5);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertTrue(httpConnection_Request5.followRedirects);
      assertEquals(58, httpConnection_Request5.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertTrue(httpConnection_Request5.validateTSLCertificates);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertTrue(httpConnection_Request5.parserDefined);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertTrue(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(58, httpConnection_Request3.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.parserDefined);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.followRedirects);
      assertNotNull(httpConnection_Request5);
      
      String string3 = "http";
      httpConnection_KeyVal0.key = string3;
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("http", httpConnection_KeyVal0.key());
      assertEquals("", httpConnection_KeyVal0.value());
      
      HttpConnection.Request httpConnection_Request6 = (HttpConnection.Request)httpConnection_Request2.url(uRL0);
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(Connection.Method.POST, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(58, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(58, httpConnection_Request6.timeout());
      assertFalse(httpConnection_Request6.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request6.postDataCharset());
      assertEquals(1048576, httpConnection_Request6.maxBodySize());
      assertFalse(httpConnection_Request6.ignoreContentType());
      assertTrue(httpConnection_Request6.followRedirects());
      assertEquals(Connection.Method.POST, httpConnection_Request6.method());
      assertTrue(httpConnection_Request6.validateTLSCertificates());
      assertEquals(58, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.POST, httpConnection_Request2.method());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request6);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request6, httpConnection_Request3);
      assertSame(httpConnection_Request6, httpConnection_Request5);
      assertSame(httpConnection_Request6, httpConnection_Request0);
      assertSame(httpConnection_Request6, httpConnection_Request2);
      assertSame(httpConnection_Request6, httpConnection_Request1);
      assertSame(httpConnection_Request6, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request6);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertEquals(58, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request6.ignoreContentType);
      assertTrue(httpConnection_Request6.followRedirects);
      assertTrue(httpConnection_Request6.validateTSLCertificates);
      assertTrue(httpConnection_Request6.parserDefined);
      assertFalse(httpConnection_Request6.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request6.maxBodySizeBytes);
      assertEquals(58, httpConnection_Request6.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertTrue(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(58, httpConnection_Request2.timeoutMilliseconds);
      assertNotNull(httpConnection_Request6);
      
      String string4 = "KXf";
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request6);
        fail("Expecting exception: UnknownServiceException");
      
      } catch(UnknownServiceException e) {
         //
         // protocol doesn't support output
         //
         verifyException("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection", e);
      }
  }

  @Test(timeout = 11000)
  public void test97()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertNotNull(httpConnection_Request0);
      
      HttpConnection.KeyVal httpConnection_KeyVal0 = HttpConnection.KeyVal.create(httpConnection_Request0.postDataCharset, httpConnection_Request0.postDataCharset);
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_KeyVal0.value());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertNotNull(httpConnection_KeyVal0);
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.data((Connection.KeyVal) httpConnection_KeyVal0);
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_KeyVal0.value());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.parserDefined);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertNotNull(httpConnection_Request1);
      
      String string0 = HttpConnection.Response.setOutputContentType(httpConnection_Request1);
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_KeyVal0.value());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.parserDefined);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertNull(string0);
      
      String string1 = "w\"[[EZ%ON/EHiIY;lR";
      File file0 = MockFile.createTempFile(string1, httpConnection_KeyVal0.value);
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_KeyVal0.value());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertEquals(0L, file0.getUsableSpace());
      assertFalse(file0.isHidden());
      assertTrue(file0.canWrite());
      assertEquals("/tmp/w\"[[EZ%ON/EHiIY;lR0UTF-8", file0.toString());
      assertTrue(file0.canExecute());
      assertFalse(file0.isDirectory());
      assertEquals(0L, file0.length());
      assertEquals(0L, file0.getTotalSpace());
      assertEquals(0L, file0.getFreeSpace());
      assertTrue(file0.exists());
      assertTrue(file0.isAbsolute());
      assertEquals(1392409281320L, file0.lastModified());
      assertTrue(file0.canRead());
      assertEquals("/tmp/w\"[[EZ%ON", file0.getParent());
      assertTrue(file0.isFile());
      assertEquals("EHiIY;lR0UTF-8", file0.getName());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertNotNull(file0);
      
      MockPrintStream mockPrintStream0 = new MockPrintStream(file0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertNotNull(mockPrintStream0);
      
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) mockPrintStream0;
      Object object0 = new Object();
      assertNotNull(object0);
      
      objectArray0[1] = object0;
      objectArray0[3] = (Object) string0;
      objectArray0[5] = (Object) file0;
      objectArray0[7] = (Object) file0;
      objectArray0[8] = (Object) httpConnection_Request0;
      PrintStream printStream0 = mockPrintStream0.format(httpConnection_KeyVal0.key, objectArray0);
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_KeyVal0.value());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertEquals(0L, file0.getUsableSpace());
      assertFalse(file0.isHidden());
      assertTrue(file0.canWrite());
      assertEquals("/tmp/w\"[[EZ%ON/EHiIY;lR0UTF-8", file0.toString());
      assertTrue(file0.canExecute());
      assertEquals(5L, file0.length());
      assertFalse(file0.isDirectory());
      assertEquals(0L, file0.getTotalSpace());
      assertEquals(0L, file0.getFreeSpace());
      assertTrue(file0.exists());
      assertTrue(file0.isAbsolute());
      assertEquals(1392409281320L, file0.lastModified());
      assertTrue(file0.canRead());
      assertEquals("/tmp/w\"[[EZ%ON", file0.getParent());
      assertTrue(file0.isFile());
      assertEquals("EHiIY;lR0UTF-8", file0.getName());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(mockPrintStream0, printStream0);
      assertSame(printStream0, mockPrintStream0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(9, objectArray0.length);
      assertNotNull(printStream0);
      
      boolean boolean0 = true;
      MockPrintStream mockPrintStream1 = new MockPrintStream(printStream0, boolean0, httpConnection_KeyVal0.value);
      assertFalse(mockPrintStream1.equals((Object)printStream0));
      assertFalse(mockPrintStream1.equals((Object)mockPrintStream0));
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(9, objectArray0.length);
      assertNotNull(mockPrintStream1);
      
      Locale locale0 = Locale.ROOT;
      assertEquals("", locale0.getISO3Language());
      assertEquals("", locale0.getISO3Country());
      assertEquals("", locale0.getVariant());
      assertEquals("", locale0.getLanguage());
      assertEquals("", locale0.toString());
      assertEquals("", locale0.getCountry());
      assertNotNull(locale0);
      
      String string2 = "?";
      PrintStream printStream1 = mockPrintStream1.format(locale0, string2, objectArray0);
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_KeyVal0.value());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertEquals("", locale0.getISO3Language());
      assertEquals("", locale0.getISO3Country());
      assertEquals("", locale0.getVariant());
      assertEquals("", locale0.getLanguage());
      assertEquals("", locale0.toString());
      assertEquals("", locale0.getCountry());
      assertEquals(0L, file0.getUsableSpace());
      assertFalse(file0.isHidden());
      assertTrue(file0.canWrite());
      assertEquals("/tmp/w\"[[EZ%ON/EHiIY;lR0UTF-8", file0.toString());
      assertTrue(file0.canExecute());
      assertEquals(6L, file0.length());
      assertFalse(file0.isDirectory());
      assertEquals(0L, file0.getTotalSpace());
      assertEquals(0L, file0.getFreeSpace());
      assertTrue(file0.exists());
      assertTrue(file0.isAbsolute());
      assertEquals(1392409281320L, file0.lastModified());
      assertTrue(file0.canRead());
      assertEquals("/tmp/w\"[[EZ%ON", file0.getParent());
      assertTrue(file0.isFile());
      assertEquals("EHiIY;lR0UTF-8", file0.getName());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(mockPrintStream1, printStream0);
      assertSame(mockPrintStream1, printStream1);
      assertNotSame(mockPrintStream1, mockPrintStream0);
      assertNotSame(string2, string1);
      assertSame(printStream1, mockPrintStream1);
      assertNotSame(printStream1, printStream0);
      assertNotSame(printStream1, mockPrintStream0);
      assertNotSame(string1, string2);
      assertNotSame(mockPrintStream0, printStream1);
      assertSame(mockPrintStream0, printStream0);
      assertNotSame(mockPrintStream0, mockPrintStream1);
      assertSame(printStream0, mockPrintStream0);
      assertNotSame(printStream0, printStream1);
      assertNotSame(printStream0, mockPrintStream1);
      assertFalse(mockPrintStream1.equals((Object)printStream0));
      assertFalse(mockPrintStream1.equals((Object)mockPrintStream0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(printStream1.equals((Object)printStream0));
      assertFalse(printStream1.equals((Object)mockPrintStream0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(mockPrintStream0.equals((Object)mockPrintStream1));
      assertFalse(printStream0.equals((Object)mockPrintStream1));
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(9, objectArray0.length);
      assertNotNull(printStream1);
      
      HttpConnection.Response.writePost(httpConnection_Request1, printStream1, string0);
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_KeyVal0.value());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertEquals("", locale0.getISO3Language());
      assertEquals("", locale0.getISO3Country());
      assertEquals("", locale0.getVariant());
      assertEquals("", locale0.getLanguage());
      assertEquals("", locale0.toString());
      assertEquals("", locale0.getCountry());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(0L, file0.getUsableSpace());
      assertFalse(file0.isHidden());
      assertTrue(file0.canWrite());
      assertEquals("/tmp/w\"[[EZ%ON/EHiIY;lR0UTF-8", file0.toString());
      assertTrue(file0.canExecute());
      assertFalse(file0.isDirectory());
      assertEquals(0L, file0.getTotalSpace());
      assertEquals(0L, file0.getFreeSpace());
      assertTrue(file0.exists());
      assertTrue(file0.isAbsolute());
      assertEquals(1392409281320L, file0.lastModified());
      assertTrue(file0.canRead());
      assertEquals("/tmp/w\"[[EZ%ON", file0.getParent());
      assertTrue(file0.isFile());
      assertEquals("EHiIY;lR0UTF-8", file0.getName());
      assertEquals(17L, file0.length());
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(mockPrintStream1, printStream0);
      assertSame(mockPrintStream1, printStream1);
      assertNotSame(mockPrintStream1, mockPrintStream0);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNotSame(string2, string1);
      assertSame(printStream1, mockPrintStream1);
      assertNotSame(printStream1, printStream0);
      assertNotSame(printStream1, mockPrintStream0);
      assertNotSame(string1, string2);
      assertNotSame(mockPrintStream0, printStream1);
      assertSame(mockPrintStream0, printStream0);
      assertNotSame(mockPrintStream0, mockPrintStream1);
      assertSame(printStream0, mockPrintStream0);
      assertNotSame(printStream0, printStream1);
      assertNotSame(printStream0, mockPrintStream1);
      assertFalse(string1.equals((Object)string2));
      assertFalse(mockPrintStream0.equals((Object)printStream1));
      assertFalse(mockPrintStream0.equals((Object)mockPrintStream1));
      assertFalse(printStream0.equals((Object)printStream1));
      assertFalse(printStream0.equals((Object)mockPrintStream1));
      assertFalse(mockPrintStream1.equals((Object)printStream0));
      assertFalse(mockPrintStream1.equals((Object)mockPrintStream0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(printStream1.equals((Object)printStream0));
      assertFalse(printStream1.equals((Object)mockPrintStream0));
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.parserDefined);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(9, objectArray0.length);
  }
}
