/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 06 11:40:55 GMT 2021
 */

package org.activiti.engine.impl.bpmn.behavior;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import org.activiti.bpmn.model.ThrowEvent;
import org.activiti.engine.impl.bpmn.behavior.IntermediateThrowNoneEventActivityBehavior;
import org.activiti.engine.impl.bpmn.behavior.MultiInstanceActivityBehavior;
import org.activiti.engine.impl.bpmn.behavior.SequentialMultiInstanceBehavior;
import org.activiti.engine.impl.bpmn.behavior.SerializedObjectSupporter;
import org.activiti.engine.impl.bpmn.behavior.UserTaskActivityBehavior;
import org.activiti.engine.impl.bpmn.parser.factory.DefaultActivityBehaviorFactory;
import org.activiti.engine.impl.el.FixedValue;
import org.activiti.engine.impl.persistence.entity.ExecutionEntity;
import org.activiti.engine.impl.persistence.entity.TaskEntity;
import org.activiti.engine.impl.pvm.delegate.ActivityExecution;
import org.activiti.engine.impl.task.TaskDefinition;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class UserTaskActivityBehavior_ESTest extends UserTaskActivityBehavior_ESTest_scaffolding {

  @Test(timeout = 11000)
  public void test00()  throws Throwable  {
      SerializedObjectSupporter serializedObjectSupporter0 = new SerializedObjectSupporter();
      assertNotNull(serializedObjectSupporter0);
      
      UserTaskActivityBehavior userTaskActivityBehavior0 = serializedObjectSupporter0.deserializeObjectUserTaskActivityBehavior752();
      assertNotNull(userTaskActivityBehavior0);
      
      TaskDefinition taskDefinition0 = userTaskActivityBehavior0.getTaskDefinition();
      assertEquals("theTask", taskDefinition0.getKey());
      assertEquals(1L, taskDefinition0.getserialVersionUID());
      assertNotNull(taskDefinition0);
      
      List<String> list0 = userTaskActivityBehavior0.extractCandidates(taskDefinition0.key);
      assertEquals("theTask", taskDefinition0.getKey());
      assertEquals(1L, taskDefinition0.getserialVersionUID());
      assertEquals(1, list0.size());
      assertFalse(list0.isEmpty());
      assertNotNull(list0);
  }

  @Test(timeout = 11000)
  public void test01()  throws Throwable  {
      SerializedObjectSupporter serializedObjectSupporter0 = new SerializedObjectSupporter();
      assertNotNull(serializedObjectSupporter0);
      
      UserTaskActivityBehavior userTaskActivityBehavior0 = serializedObjectSupporter0.deserializeObjectUserTaskActivityBehavior98();
      assertNotNull(userTaskActivityBehavior0);
      
      TaskEntity taskEntity0 = null;
      ExecutionEntity executionEntity0 = serializedObjectSupporter0.deserializeObjectExecutionEntity1045();
      assertNull(executionEntity0);
      
      userTaskActivityBehavior0.handleAssignments(taskEntity0, executionEntity0);
      try { 
        userTaskActivityBehavior0.execute(executionEntity0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.activiti.engine.impl.persistence.entity.TaskEntity", e);
      }
  }

  @Test(timeout = 11000)
  public void test02()  throws Throwable  {
      SerializedObjectSupporter serializedObjectSupporter0 = new SerializedObjectSupporter();
      assertNotNull(serializedObjectSupporter0);
      
      UserTaskActivityBehavior userTaskActivityBehavior0 = serializedObjectSupporter0.deserializeObjectUserTaskActivityBehavior198();
      assertNotNull(userTaskActivityBehavior0);
      
      TaskEntity taskEntity0 = null;
      ExecutionEntity executionEntity0 = serializedObjectSupporter0.deserializeObjectExecutionEntity293();
      assertNull(executionEntity0);
      
      userTaskActivityBehavior0.handleAssignments(taskEntity0, executionEntity0);
  }

  @Test(timeout = 11000)
  public void test03()  throws Throwable  {
      String string0 = "7fNSni0%6N6Y";
      SerializedObjectSupporter serializedObjectSupporter0 = new SerializedObjectSupporter();
      assertNotNull(serializedObjectSupporter0);
      
      UserTaskActivityBehavior userTaskActivityBehavior0 = serializedObjectSupporter0.deserializeObjectUserTaskActivityBehavior88();
      assertNotNull(userTaskActivityBehavior0);
      
      ActivityExecution activityExecution0 = null;
      try { 
        userTaskActivityBehavior0.signal(activityExecution0, string0, string0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.activiti.engine.impl.bpmn.behavior.UserTaskActivityBehavior", e);
      }
  }

  @Test(timeout = 11000)
  public void test04()  throws Throwable  {
      SerializedObjectSupporter serializedObjectSupporter0 = new SerializedObjectSupporter();
      assertNotNull(serializedObjectSupporter0);
      
      TaskDefinition taskDefinition0 = serializedObjectSupporter0.deserializeObjectTaskDefinition709();
      assertEquals(1L, taskDefinition0.getserialVersionUID());
      assertEquals("theTask1", taskDefinition0.getKey());
      assertNotNull(taskDefinition0);
      
      UserTaskActivityBehavior userTaskActivityBehavior0 = new UserTaskActivityBehavior(taskDefinition0);
      assertEquals(1L, taskDefinition0.getserialVersionUID());
      assertEquals("theTask1", taskDefinition0.getKey());
      assertNotNull(userTaskActivityBehavior0);
  }

  @Test(timeout = 11000)
  public void test05()  throws Throwable  {
      SerializedObjectSupporter serializedObjectSupporter0 = new SerializedObjectSupporter();
      assertNotNull(serializedObjectSupporter0);
      
      UserTaskActivityBehavior userTaskActivityBehavior0 = serializedObjectSupporter0.deserializeObjectUserTaskActivityBehavior1648();
      assertNotNull(userTaskActivityBehavior0);
      
      String string0 = null;
      TaskEntity taskEntity0 = new TaskEntity(string0);
      assertEquals(50, taskEntity0.getPriority());
      assertNull(taskEntity0.getDescription());
      assertNull(taskEntity0.getProcessDefinitionId());
      assertEquals(1, taskEntity0.getSuspensionState());
      assertNull(taskEntity0.getDelegationState());
      assertNull(taskEntity0.getAssignee());
      assertNull(taskEntity0.getEventName());
      assertNull(taskEntity0.getCategory());
      assertNull(taskEntity0.getParentTaskId());
      assertNull(taskEntity0.getFormKey());
      assertNull(taskEntity0.getId());
      assertEquals("", taskEntity0.getTenantId());
      assertNull(taskEntity0.getName());
      assertEquals(1, taskEntity0.getRevisionNext());
      assertEquals(0, taskEntity0.getRevision());
      assertNull(taskEntity0.getTaskDefinitionKey());
      assertFalse(taskEntity0.isDeleted());
      assertNull(taskEntity0.getProcessInstanceId());
      assertNull(taskEntity0.getExecutionId());
      assertNull(taskEntity0.getOwner());
      assertNotNull(taskEntity0);
      
      ExecutionEntity executionEntity0 = serializedObjectSupporter0.deserializeObjectExecutionEntity1362();
      assertNull(executionEntity0);
      
      // Undeclared exception!
      try { 
        userTaskActivityBehavior0.handleAssignments(taskEntity0, executionEntity0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.activiti.engine.impl.el.JuelExpression", e);
      }
  }

  @Test(timeout = 11000)
  public void test06()  throws Throwable  {
      SerializedObjectSupporter serializedObjectSupporter0 = new SerializedObjectSupporter();
      assertNotNull(serializedObjectSupporter0);
      
      UserTaskActivityBehavior userTaskActivityBehavior0 = serializedObjectSupporter0.deserializeObjectUserTaskActivityBehavior1519();
      assertNotNull(userTaskActivityBehavior0);
      
      TaskEntity taskEntity0 = null;
      ExecutionEntity executionEntity0 = serializedObjectSupporter0.deserializeObjectExecutionEntity1045();
      assertNull(executionEntity0);
      
      // Undeclared exception!
      try { 
        userTaskActivityBehavior0.handleAssignments(taskEntity0, executionEntity0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.activiti.engine.impl.el.JuelExpression", e);
      }
  }

  @Test(timeout = 11000)
  public void test07()  throws Throwable  {
      SerializedObjectSupporter serializedObjectSupporter0 = new SerializedObjectSupporter();
      assertNotNull(serializedObjectSupporter0);
      
      UserTaskActivityBehavior userTaskActivityBehavior0 = serializedObjectSupporter0.deserializeObjectUserTaskActivityBehavior1680();
      assertNotNull(userTaskActivityBehavior0);
      
      ExecutionEntity executionEntity0 = serializedObjectSupporter0.deserializeObjectExecutionEntity1197();
      assertNull(executionEntity0);
      
      try { 
        userTaskActivityBehavior0.execute(executionEntity0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.activiti.engine.impl.persistence.entity.TaskEntity", e);
      }
  }

  @Test(timeout = 11000)
  public void test08()  throws Throwable  {
      SerializedObjectSupporter serializedObjectSupporter0 = new SerializedObjectSupporter();
      assertNotNull(serializedObjectSupporter0);
      
      UserTaskActivityBehavior userTaskActivityBehavior0 = serializedObjectSupporter0.deserializeObjectUserTaskActivityBehavior943();
      assertNotNull(userTaskActivityBehavior0);
      
      UserTaskActivityBehavior userTaskActivityBehavior1 = serializedObjectSupporter0.deserializeObjectUserTaskActivityBehavior986();
      assertFalse(userTaskActivityBehavior1.equals((Object)userTaskActivityBehavior0));
      assertNotNull(userTaskActivityBehavior1);
      assertNotSame(userTaskActivityBehavior1, userTaskActivityBehavior0);
      
      userTaskActivityBehavior1.serializedObjectSupporter = serializedObjectSupporter0;
      ActivityExecution activityExecution0 = null;
      try { 
        userTaskActivityBehavior1.execute(activityExecution0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.activiti.engine.impl.persistence.entity.TaskEntity", e);
      }
  }

  @Test(timeout = 11000)
  public void test09()  throws Throwable  {
      SerializedObjectSupporter serializedObjectSupporter0 = new SerializedObjectSupporter();
      assertNotNull(serializedObjectSupporter0);
      
      UserTaskActivityBehavior userTaskActivityBehavior0 = serializedObjectSupporter0.deserializeObjectUserTaskActivityBehavior199();
      assertNotNull(userTaskActivityBehavior0);
      
      TaskEntity taskEntity0 = null;
      ActivityExecution activityExecution0 = null;
      userTaskActivityBehavior0.handleAssignments(taskEntity0, activityExecution0);
  }

  @Test(timeout = 11000)
  public void test10()  throws Throwable  {
      SerializedObjectSupporter serializedObjectSupporter0 = new SerializedObjectSupporter();
      assertNotNull(serializedObjectSupporter0);
      
      UserTaskActivityBehavior userTaskActivityBehavior0 = serializedObjectSupporter0.deserializeObjectUserTaskActivityBehavior1366();
      assertNotNull(userTaskActivityBehavior0);
      
      UserTaskActivityBehavior userTaskActivityBehavior1 = serializedObjectSupporter0.deserializeObjectUserTaskActivityBehavior1038();
      assertFalse(userTaskActivityBehavior1.equals((Object)userTaskActivityBehavior0));
      assertNotNull(userTaskActivityBehavior1);
      assertNotSame(userTaskActivityBehavior1, userTaskActivityBehavior0);
      
      String string0 = "";
      List<String> list0 = userTaskActivityBehavior0.extractCandidates(string0);
      assertFalse(userTaskActivityBehavior0.equals((Object)userTaskActivityBehavior1));
      assertFalse(list0.isEmpty());
      assertEquals(1, list0.size());
      assertNotNull(list0);
      assertTrue(list0.contains(string0));
      assertNotSame(userTaskActivityBehavior0, userTaskActivityBehavior1);
      
      TaskEntity taskEntity0 = null;
      TaskDefinition taskDefinition0 = userTaskActivityBehavior1.getTaskDefinition();
      assertFalse(userTaskActivityBehavior1.equals((Object)userTaskActivityBehavior0));
      assertEquals(1L, taskDefinition0.getserialVersionUID());
      assertEquals("myTask", taskDefinition0.getKey());
      assertNotNull(taskDefinition0);
      assertNotSame(userTaskActivityBehavior1, userTaskActivityBehavior0);
  }

  @Test(timeout = 11000)
  public void test11()  throws Throwable  {
      SerializedObjectSupporter serializedObjectSupporter0 = new SerializedObjectSupporter();
      assertNotNull(serializedObjectSupporter0);
      
      UserTaskActivityBehavior userTaskActivityBehavior0 = serializedObjectSupporter0.deserializeObjectUserTaskActivityBehavior1197();
      assertNotNull(userTaskActivityBehavior0);
      
      ActivityExecution activityExecution0 = null;
      String string0 = "";
      try { 
        userTaskActivityBehavior0.signal(activityExecution0, string0, string0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.activiti.engine.impl.bpmn.behavior.UserTaskActivityBehavior", e);
      }
  }

  @Test(timeout = 11000)
  public void test12()  throws Throwable  {
      SerializedObjectSupporter serializedObjectSupporter0 = new SerializedObjectSupporter();
      assertNotNull(serializedObjectSupporter0);
      
      UserTaskActivityBehavior userTaskActivityBehavior0 = serializedObjectSupporter0.deserializeObjectUserTaskActivityBehavior832();
      assertNotNull(userTaskActivityBehavior0);
      
      UserTaskActivityBehavior userTaskActivityBehavior1 = serializedObjectSupporter0.deserializeObjectUserTaskActivityBehavior1289();
      assertNull(userTaskActivityBehavior1);
      
      ExecutionEntity executionEntity0 = serializedObjectSupporter0.deserializeObjectExecutionEntity1401();
      assertNull(executionEntity0);
      
      String string0 = ":KuWK[Q)(M[dhI";
      double double0 = 2410.7600343;
      Double double1 = new Double(double0);
      assertEquals((double)double1, (double)double0, 0.01);
      assertEquals(2410.7600343, (double)double1, 0.01);
      assertNotNull(double1);
      
      try { 
        userTaskActivityBehavior0.signal(executionEntity0, string0, double1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.activiti.engine.impl.bpmn.behavior.UserTaskActivityBehavior", e);
      }
  }

  @Test(timeout = 11000)
  public void test13()  throws Throwable  {
      SerializedObjectSupporter serializedObjectSupporter0 = new SerializedObjectSupporter();
      assertNotNull(serializedObjectSupporter0);
      
      UserTaskActivityBehavior userTaskActivityBehavior0 = serializedObjectSupporter0.deserializeObjectUserTaskActivityBehavior629();
      assertNotNull(userTaskActivityBehavior0);
      
      String string0 = null;
      // Undeclared exception!
      try { 
        userTaskActivityBehavior0.extractCandidates(string0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.activiti.engine.impl.bpmn.behavior.UserTaskActivityBehavior", e);
      }
  }

  @Test(timeout = 11000)
  public void test14()  throws Throwable  {
      SerializedObjectSupporter serializedObjectSupporter0 = new SerializedObjectSupporter();
      assertNotNull(serializedObjectSupporter0);
      
      UserTaskActivityBehavior userTaskActivityBehavior0 = serializedObjectSupporter0.deserializeObjectUserTaskActivityBehavior1584();
      assertNotNull(userTaskActivityBehavior0);
      
      String string0 = null;
      TaskEntity taskEntity0 = new TaskEntity(string0);
      assertNull(taskEntity0.getName());
      assertEquals(0, taskEntity0.getRevision());
      assertNull(taskEntity0.getParentTaskId());
      assertNull(taskEntity0.getTaskDefinitionKey());
      assertFalse(taskEntity0.isDeleted());
      assertEquals(50, taskEntity0.getPriority());
      assertNull(taskEntity0.getOwner());
      assertNull(taskEntity0.getAssignee());
      assertNull(taskEntity0.getEventName());
      assertNull(taskEntity0.getExecutionId());
      assertEquals(1, taskEntity0.getSuspensionState());
      assertNull(taskEntity0.getId());
      assertEquals("", taskEntity0.getTenantId());
      assertEquals(1, taskEntity0.getRevisionNext());
      assertNull(taskEntity0.getProcessInstanceId());
      assertNull(taskEntity0.getDelegationState());
      assertNull(taskEntity0.getProcessDefinitionId());
      assertNull(taskEntity0.getFormKey());
      assertNull(taskEntity0.getDescription());
      assertNull(taskEntity0.getCategory());
      assertNotNull(taskEntity0);
      
      ExecutionEntity executionEntity0 = serializedObjectSupporter0.deserializeObjectExecutionEntity1362();
      assertNull(executionEntity0);
      
      UserTaskActivityBehavior userTaskActivityBehavior1 = serializedObjectSupporter0.deserializeObjectUserTaskActivityBehavior1482();
      assertFalse(userTaskActivityBehavior1.equals((Object)userTaskActivityBehavior0));
      assertNotNull(userTaskActivityBehavior1);
      assertNotSame(userTaskActivityBehavior1, userTaskActivityBehavior0);
      
      // Undeclared exception!
      try { 
        userTaskActivityBehavior0.handleAssignments(taskEntity0, executionEntity0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.activiti.engine.impl.el.JuelExpression", e);
      }
  }

  @Test(timeout = 11000)
  public void test15()  throws Throwable  {
      SerializedObjectSupporter serializedObjectSupporter0 = new SerializedObjectSupporter();
      assertNotNull(serializedObjectSupporter0);
      
      Object object0 = null;
      FixedValue fixedValue0 = new FixedValue(object0);
      assertNotNull(fixedValue0);
      
      String string0 = "*.OL`j5|3Zuyk,";
      Object object1 = null;
      ExecutionEntity executionEntity0 = serializedObjectSupporter0.deserializeObjectExecutionEntity1024();
      assertNull(executionEntity0);
      
      UserTaskActivityBehavior userTaskActivityBehavior0 = serializedObjectSupporter0.deserializeObjectUserTaskActivityBehavior752();
      assertNotNull(userTaskActivityBehavior0);
      
      TaskDefinition taskDefinition0 = userTaskActivityBehavior0.getTaskDefinition();
      assertEquals(1L, taskDefinition0.getserialVersionUID());
      assertEquals("theTask", taskDefinition0.getKey());
      assertNotNull(taskDefinition0);
      
      DefaultActivityBehaviorFactory defaultActivityBehaviorFactory0 = new DefaultActivityBehaviorFactory();
      assertNotNull(defaultActivityBehaviorFactory0);
      
      TaskDefinition taskDefinition1 = userTaskActivityBehavior0.getTaskDefinition();
      assertEquals("theTask", taskDefinition1.getKey());
      assertEquals(1L, taskDefinition1.getserialVersionUID());
      assertNotNull(taskDefinition1);
      assertSame(taskDefinition1, taskDefinition0);
      
      ThrowEvent throwEvent0 = new ThrowEvent();
      assertEquals(0, throwEvent0.getXmlColumnNumber());
      assertNull(throwEvent0.getName());
      assertNull(throwEvent0.getDocumentation());
      assertEquals(0, throwEvent0.getXmlRowNumber());
      assertNull(throwEvent0.getId());
      assertNotNull(throwEvent0);
      
      ThrowEvent throwEvent1 = new ThrowEvent();
      assertFalse(throwEvent1.equals((Object)throwEvent0));
      assertNull(throwEvent1.getId());
      assertEquals(0, throwEvent1.getXmlRowNumber());
      assertNull(throwEvent1.getDocumentation());
      assertEquals(0, throwEvent1.getXmlColumnNumber());
      assertNull(throwEvent1.getName());
      assertNotNull(throwEvent1);
      
      throwEvent0.setValues(throwEvent1);
      assertFalse(throwEvent0.equals((Object)throwEvent1));
      assertFalse(throwEvent1.equals((Object)throwEvent0));
      assertEquals(0, throwEvent0.getXmlColumnNumber());
      assertNull(throwEvent0.getName());
      assertNull(throwEvent0.getDocumentation());
      assertEquals(0, throwEvent0.getXmlRowNumber());
      assertNull(throwEvent0.getId());
      assertNull(throwEvent1.getId());
      assertEquals(0, throwEvent1.getXmlRowNumber());
      assertNull(throwEvent1.getDocumentation());
      assertEquals(0, throwEvent1.getXmlColumnNumber());
      assertNull(throwEvent1.getName());
      assertNotSame(throwEvent0, throwEvent1);
      assertNotSame(throwEvent1, throwEvent0);
      
      ThrowEvent throwEvent2 = throwEvent0.clone();
      assertFalse(throwEvent0.equals((Object)throwEvent1));
      assertFalse(throwEvent2.equals((Object)throwEvent1));
      assertFalse(throwEvent2.equals((Object)throwEvent0));
      assertEquals(0, throwEvent0.getXmlColumnNumber());
      assertNull(throwEvent0.getName());
      assertNull(throwEvent0.getDocumentation());
      assertEquals(0, throwEvent0.getXmlRowNumber());
      assertNull(throwEvent0.getId());
      assertNull(throwEvent2.getDocumentation());
      assertNull(throwEvent2.getId());
      assertEquals(0, throwEvent2.getXmlRowNumber());
      assertEquals(0, throwEvent2.getXmlColumnNumber());
      assertNull(throwEvent2.getName());
      assertNotNull(throwEvent2);
      assertNotSame(throwEvent0, throwEvent1);
      assertNotSame(throwEvent0, throwEvent2);
      assertNotSame(throwEvent2, throwEvent1);
      assertNotSame(throwEvent2, throwEvent0);
      
      IntermediateThrowNoneEventActivityBehavior intermediateThrowNoneEventActivityBehavior0 = defaultActivityBehaviorFactory0.createIntermediateThrowNoneEventActivityBehavior(throwEvent2);
      assertFalse(throwEvent0.equals((Object)throwEvent1));
      assertFalse(throwEvent0.equals((Object)throwEvent2));
      assertFalse(throwEvent2.equals((Object)throwEvent1));
      assertFalse(throwEvent2.equals((Object)throwEvent0));
      assertEquals(0, throwEvent0.getXmlColumnNumber());
      assertNull(throwEvent0.getName());
      assertNull(throwEvent0.getDocumentation());
      assertEquals(0, throwEvent0.getXmlRowNumber());
      assertNull(throwEvent0.getId());
      assertNull(throwEvent2.getDocumentation());
      assertNull(throwEvent2.getId());
      assertEquals(0, throwEvent2.getXmlRowNumber());
      assertEquals(0, throwEvent2.getXmlColumnNumber());
      assertNull(throwEvent2.getName());
      assertNotNull(intermediateThrowNoneEventActivityBehavior0);
      assertNotSame(throwEvent0, throwEvent1);
      assertNotSame(throwEvent0, throwEvent2);
      assertNotSame(throwEvent2, throwEvent1);
      assertNotSame(throwEvent2, throwEvent0);
      
      String string1 = null;
      // Undeclared exception!
      try { 
        userTaskActivityBehavior0.extractCandidates(string1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.activiti.engine.impl.bpmn.behavior.UserTaskActivityBehavior", e);
      }
  }

  @Test(timeout = 11000)
  public void test16()  throws Throwable  {
      SerializedObjectSupporter serializedObjectSupporter0 = new SerializedObjectSupporter();
      assertNotNull(serializedObjectSupporter0);
      
      TaskDefinition taskDefinition0 = serializedObjectSupporter0.deserializeObjectTaskDefinition487();
      assertEquals(1L, taskDefinition0.getserialVersionUID());
      assertEquals("taskAfterSignal", taskDefinition0.getKey());
      assertNotNull(taskDefinition0);
      
      TaskDefinition taskDefinition1 = null;
      UserTaskActivityBehavior userTaskActivityBehavior0 = new UserTaskActivityBehavior(taskDefinition1);
      assertNotNull(userTaskActivityBehavior0);
      
      TaskDefinition taskDefinition2 = userTaskActivityBehavior0.getTaskDefinition();
      assertNull(taskDefinition2);
  }
}
