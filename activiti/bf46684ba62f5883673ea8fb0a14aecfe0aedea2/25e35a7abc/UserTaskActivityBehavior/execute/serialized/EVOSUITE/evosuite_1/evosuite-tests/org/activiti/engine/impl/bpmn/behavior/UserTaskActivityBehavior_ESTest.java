/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 09 21:15:59 GMT 2021
 */

package org.activiti.engine.impl.bpmn.behavior;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import org.activiti.engine.impl.bpmn.behavior.MultiInstanceActivityBehavior;
import org.activiti.engine.impl.bpmn.behavior.SerializedObjectSupporter;
import org.activiti.engine.impl.bpmn.behavior.UserTaskActivityBehavior;
import org.activiti.engine.impl.bpmn.listener.DelegateExpressionExecutionListener;
import org.activiti.engine.impl.bpmn.parser.FieldDeclaration;
import org.activiti.engine.impl.persistence.entity.ExecutionEntity;
import org.activiti.engine.impl.persistence.entity.IdentityLinkEntity;
import org.activiti.engine.impl.persistence.entity.TaskEntity;
import org.activiti.engine.impl.pvm.delegate.ActivityExecution;
import org.activiti.engine.impl.task.TaskDefinition;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class UserTaskActivityBehavior_ESTest extends UserTaskActivityBehavior_ESTest_scaffolding {

  @Test(timeout = 11000)
  public void test00()  throws Throwable  {
      SerializedObjectSupporter serializedObjectSupporter0 = new SerializedObjectSupporter();
      assertNotNull(serializedObjectSupporter0);
      
      UserTaskActivityBehavior userTaskActivityBehavior0 = serializedObjectSupporter0.deserializeObjectUserTaskActivityBehavior681();
      assertNotNull(userTaskActivityBehavior0);
      
      TaskEntity taskEntity0 = new TaskEntity();
      assertNotNull(taskEntity0);
      assertNull(taskEntity0.getExecutionId());
      assertNull(taskEntity0.getId());
      assertNull(taskEntity0.getAssignee());
      assertNull(taskEntity0.getCategory());
      assertNull(taskEntity0.getFormKey());
      assertNull(taskEntity0.getDescription());
      assertNull(taskEntity0.getOwner());
      assertNull(taskEntity0.getProcessDefinitionId());
      assertNull(taskEntity0.getProcessInstanceId());
      assertNull(taskEntity0.getDelegationState());
      assertNull(taskEntity0.getName());
      assertEquals("", taskEntity0.getTenantId());
      assertEquals(1, taskEntity0.getRevisionNext());
      assertNull(taskEntity0.getTaskDefinitionKey());
      assertFalse(taskEntity0.isDeleted());
      assertEquals(50, taskEntity0.getPriority());
      assertEquals(1, taskEntity0.getSuspensionState());
      assertEquals(0, taskEntity0.getRevision());
      assertNull(taskEntity0.getEventName());
      assertNull(taskEntity0.getParentTaskId());
      
      ExecutionEntity executionEntity0 = serializedObjectSupporter0.deserializeObjectExecutionEntity358();
      assertNull(executionEntity0);
      
      userTaskActivityBehavior0.handleAssignments(taskEntity0, executionEntity0);
      assertNull(taskEntity0.getExecutionId());
      assertNull(taskEntity0.getId());
      assertNull(taskEntity0.getAssignee());
      assertNull(taskEntity0.getCategory());
      assertNull(taskEntity0.getFormKey());
      assertNull(taskEntity0.getDescription());
      assertNull(taskEntity0.getOwner());
      assertNull(taskEntity0.getProcessDefinitionId());
      assertNull(taskEntity0.getProcessInstanceId());
      assertNull(taskEntity0.getDelegationState());
      assertNull(taskEntity0.getName());
      assertEquals("", taskEntity0.getTenantId());
      assertEquals(1, taskEntity0.getRevisionNext());
      assertNull(taskEntity0.getTaskDefinitionKey());
      assertFalse(taskEntity0.isDeleted());
      assertEquals(50, taskEntity0.getPriority());
      assertEquals(1, taskEntity0.getSuspensionState());
      assertEquals(0, taskEntity0.getRevision());
      assertNull(taskEntity0.getEventName());
      assertNull(taskEntity0.getParentTaskId());
  }

  @Test(timeout = 11000)
  public void test01()  throws Throwable  {
      SerializedObjectSupporter serializedObjectSupporter0 = new SerializedObjectSupporter();
      assertNotNull(serializedObjectSupporter0);
      
      UserTaskActivityBehavior userTaskActivityBehavior0 = serializedObjectSupporter0.deserializeObjectUserTaskActivityBehavior793();
      assertNotNull(userTaskActivityBehavior0);
      
      TaskEntity taskEntity0 = null;
      ActivityExecution activityExecution0 = null;
      userTaskActivityBehavior0.handleAssignments(taskEntity0, activityExecution0);
      String string0 = "";
      List<String> list0 = userTaskActivityBehavior0.extractCandidates(string0);
      assertNotNull(list0);
      assertTrue(list0.contains(string0));
      assertEquals(1, list0.size());
      assertFalse(list0.isEmpty());
      
      TaskDefinition taskDefinition0 = userTaskActivityBehavior0.getTaskDefinition();
      assertNotNull(taskDefinition0);
      assertEquals("theTask", taskDefinition0.getKey());
      assertEquals(1L, taskDefinition0.getserialVersionUID());
      
      try { 
        userTaskActivityBehavior0.execute(activityExecution0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.activiti.engine.impl.persistence.entity.TaskEntity", e);
      }
  }

  @Test(timeout = 11000)
  public void test02()  throws Throwable  {
      SerializedObjectSupporter serializedObjectSupporter0 = new SerializedObjectSupporter();
      assertNotNull(serializedObjectSupporter0);
      
      UserTaskActivityBehavior userTaskActivityBehavior0 = serializedObjectSupporter0.deserializeObjectUserTaskActivityBehavior711();
      assertNotNull(userTaskActivityBehavior0);
      
      ActivityExecution activityExecution0 = null;
      String string0 = "#";
      try { 
        userTaskActivityBehavior0.signal(activityExecution0, string0, activityExecution0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.activiti.engine.impl.bpmn.behavior.UserTaskActivityBehavior", e);
      }
  }

  @Test(timeout = 11000)
  public void test03()  throws Throwable  {
      TaskDefinition taskDefinition0 = null;
      UserTaskActivityBehavior userTaskActivityBehavior0 = new UserTaskActivityBehavior(taskDefinition0);
      assertNotNull(userTaskActivityBehavior0);
  }

  @Test(timeout = 11000)
  public void test04()  throws Throwable  {
      SerializedObjectSupporter serializedObjectSupporter0 = new SerializedObjectSupporter();
      assertNotNull(serializedObjectSupporter0);
      
      UserTaskActivityBehavior userTaskActivityBehavior0 = serializedObjectSupporter0.deserializeObjectUserTaskActivityBehavior113();
      assertNotNull(userTaskActivityBehavior0);
      
      IdentityLinkEntity identityLinkEntity0 = new IdentityLinkEntity();
      assertNotNull(identityLinkEntity0);
      assertNull(identityLinkEntity0.getTaskId());
      assertNull(identityLinkEntity0.getType());
      assertNull(identityLinkEntity0.getId());
      assertNull(identityLinkEntity0.getProcessDefinitionId());
      assertNull(identityLinkEntity0.getProcessInstanceId());
      assertFalse(identityLinkEntity0.isUser());
      assertFalse(identityLinkEntity0.isGroup());
      assertNull(identityLinkEntity0.getProcessDefId());
      assertNull(identityLinkEntity0.getUserId());
      assertNull(identityLinkEntity0.getGroupId());
      
      TaskEntity taskEntity0 = new TaskEntity();
      assertNotNull(taskEntity0);
      assertEquals(0, taskEntity0.getRevision());
      assertNull(taskEntity0.getName());
      assertNull(taskEntity0.getParentTaskId());
      assertNull(taskEntity0.getDelegationState());
      assertNull(taskEntity0.getProcessInstanceId());
      assertNull(taskEntity0.getAssignee());
      assertNull(taskEntity0.getDescription());
      assertNull(taskEntity0.getCategory());
      assertNull(taskEntity0.getFormKey());
      assertNull(taskEntity0.getProcessDefinitionId());
      assertNull(taskEntity0.getOwner());
      assertEquals(1, taskEntity0.getSuspensionState());
      assertNull(taskEntity0.getEventName());
      assertEquals(1, taskEntity0.getRevisionNext());
      assertEquals("", taskEntity0.getTenantId());
      assertNull(taskEntity0.getId());
      assertEquals(50, taskEntity0.getPriority());
      assertNull(taskEntity0.getExecutionId());
      assertFalse(taskEntity0.isDeleted());
      assertNull(taskEntity0.getTaskDefinitionKey());
      
      ExecutionEntity executionEntity0 = serializedObjectSupporter0.deserializeObjectExecutionEntity108();
      assertNull(executionEntity0);
      
      // Undeclared exception!
      try { 
        userTaskActivityBehavior0.handleAssignments(taskEntity0, executionEntity0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.activiti.engine.impl.el.JuelExpression", e);
      }
  }

  @Test(timeout = 11000)
  public void test05()  throws Throwable  {
      SerializedObjectSupporter serializedObjectSupporter0 = new SerializedObjectSupporter();
      assertNotNull(serializedObjectSupporter0);
      
      UserTaskActivityBehavior userTaskActivityBehavior0 = serializedObjectSupporter0.deserializeObjectUserTaskActivityBehavior68();
      assertNotNull(userTaskActivityBehavior0);
      
      TaskEntity taskEntity0 = new TaskEntity();
      assertNotNull(taskEntity0);
      assertNull(taskEntity0.getAssignee());
      assertEquals(1, taskEntity0.getSuspensionState());
      assertNull(taskEntity0.getExecutionId());
      assertNull(taskEntity0.getOwner());
      assertNull(taskEntity0.getDescription());
      assertNull(taskEntity0.getProcessDefinitionId());
      assertNull(taskEntity0.getCategory());
      assertNull(taskEntity0.getFormKey());
      assertEquals(50, taskEntity0.getPriority());
      assertNull(taskEntity0.getTaskDefinitionKey());
      assertEquals(1, taskEntity0.getRevisionNext());
      assertFalse(taskEntity0.isDeleted());
      assertEquals("", taskEntity0.getTenantId());
      assertNull(taskEntity0.getId());
      assertEquals(0, taskEntity0.getRevision());
      assertNull(taskEntity0.getEventName());
      assertNull(taskEntity0.getParentTaskId());
      assertNull(taskEntity0.getName());
      assertNull(taskEntity0.getProcessInstanceId());
      assertNull(taskEntity0.getDelegationState());
      
      ExecutionEntity executionEntity0 = serializedObjectSupporter0.deserializeObjectExecutionEntity358();
      assertNull(executionEntity0);
      
      // Undeclared exception!
      try { 
        userTaskActivityBehavior0.handleAssignments(taskEntity0, executionEntity0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.activiti.engine.impl.el.JuelExpression", e);
      }
  }

  @Test(timeout = 11000)
  public void test06()  throws Throwable  {
      SerializedObjectSupporter serializedObjectSupporter0 = new SerializedObjectSupporter();
      assertNotNull(serializedObjectSupporter0);
      
      UserTaskActivityBehavior userTaskActivityBehavior0 = serializedObjectSupporter0.deserializeObjectUserTaskActivityBehavior300();
      assertNotNull(userTaskActivityBehavior0);
      
      String string0 = "";
      List<String> list0 = userTaskActivityBehavior0.extractCandidates(string0);
      assertNotNull(list0);
      assertTrue(list0.contains(string0));
      assertEquals(1, list0.size());
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 11000)
  public void test07()  throws Throwable  {
      SerializedObjectSupporter serializedObjectSupporter0 = new SerializedObjectSupporter();
      assertNotNull(serializedObjectSupporter0);
      
      UserTaskActivityBehavior userTaskActivityBehavior0 = serializedObjectSupporter0.deserializeObjectUserTaskActivityBehavior146();
      assertNotNull(userTaskActivityBehavior0);
      
      TaskDefinition taskDefinition0 = userTaskActivityBehavior0.getTaskDefinition();
      assertNotNull(taskDefinition0);
      assertEquals("firstLineSupport", taskDefinition0.getKey());
      assertEquals(1L, taskDefinition0.getserialVersionUID());
  }

  @Test(timeout = 11000)
  public void test08()  throws Throwable  {
      SerializedObjectSupporter serializedObjectSupporter0 = new SerializedObjectSupporter();
      assertNotNull(serializedObjectSupporter0);
      
      UserTaskActivityBehavior userTaskActivityBehavior0 = serializedObjectSupporter0.deserializeObjectUserTaskActivityBehavior436();
      assertNotNull(userTaskActivityBehavior0);
      
      ExecutionEntity executionEntity0 = serializedObjectSupporter0.deserializeObjectExecutionEntity614();
      assertNull(executionEntity0);
      
      try { 
        userTaskActivityBehavior0.execute(executionEntity0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.activiti.engine.impl.persistence.entity.TaskEntity", e);
      }
  }

  @Test(timeout = 11000)
  public void test09()  throws Throwable  {
      SerializedObjectSupporter serializedObjectSupporter0 = new SerializedObjectSupporter();
      assertNotNull(serializedObjectSupporter0);
      
      TaskDefinition taskDefinition0 = serializedObjectSupporter0.deserializeObjectTaskDefinition35();
      assertNotNull(taskDefinition0);
      assertEquals(1L, taskDefinition0.getserialVersionUID());
      assertEquals("theTask", taskDefinition0.getKey());
      
      UserTaskActivityBehavior userTaskActivityBehavior0 = serializedObjectSupporter0.deserializeObjectUserTaskActivityBehavior409();
      assertNotNull(userTaskActivityBehavior0);
      
      String string0 = "e7/As@WB#dw";
      userTaskActivityBehavior0.taskDefinition = taskDefinition0;
      assertEquals(1L, taskDefinition0.getserialVersionUID());
      assertEquals("theTask", taskDefinition0.getKey());
      assertEquals("theTask", userTaskActivityBehavior0.taskDefinition.getKey());
      assertEquals(1L, userTaskActivityBehavior0.taskDefinition.getserialVersionUID());
      
      List<String> list0 = userTaskActivityBehavior0.extractCandidates(string0);
      assertNotNull(list0);
      assertTrue(list0.contains(string0));
      assertFalse(list0.isEmpty());
      assertEquals(1, list0.size());
      
      ExecutionEntity executionEntity0 = serializedObjectSupporter0.deserializeObjectExecutionEntity202();
      assertNull(executionEntity0);
      
      try { 
        userTaskActivityBehavior0.execute(executionEntity0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.activiti.engine.impl.persistence.entity.TaskEntity", e);
      }
  }

  @Test(timeout = 11000)
  public void test10()  throws Throwable  {
      SerializedObjectSupporter serializedObjectSupporter0 = new SerializedObjectSupporter();
      assertNotNull(serializedObjectSupporter0);
      
      UserTaskActivityBehavior userTaskActivityBehavior0 = serializedObjectSupporter0.deserializeObjectUserTaskActivityBehavior379();
      assertNotNull(userTaskActivityBehavior0);
      
      ActivityExecution activityExecution0 = null;
      String string0 = "5.12T";
      try { 
        userTaskActivityBehavior0.signal(activityExecution0, string0, activityExecution0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.activiti.engine.impl.bpmn.behavior.UserTaskActivityBehavior", e);
      }
  }

  @Test(timeout = 11000)
  public void test11()  throws Throwable  {
      SerializedObjectSupporter serializedObjectSupporter0 = new SerializedObjectSupporter();
      assertNotNull(serializedObjectSupporter0);
      
      UserTaskActivityBehavior userTaskActivityBehavior0 = serializedObjectSupporter0.deserializeObjectUserTaskActivityBehavior483();
      assertNotNull(userTaskActivityBehavior0);
      
      SerializedObjectSupporter serializedObjectSupporter1 = new SerializedObjectSupporter();
      assertFalse(serializedObjectSupporter1.equals((Object)serializedObjectSupporter0));
      assertNotNull(serializedObjectSupporter1);
      
      ExecutionEntity executionEntity0 = serializedObjectSupporter1.deserializeObjectExecutionEntity739();
      assertNotSame(serializedObjectSupporter1, serializedObjectSupporter0);
      assertFalse(serializedObjectSupporter1.equals((Object)serializedObjectSupporter0));
      assertNull(executionEntity0);
      
      String string0 = "getBoolean";
      try { 
        userTaskActivityBehavior0.signal(executionEntity0, string0, executionEntity0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.activiti.engine.impl.bpmn.behavior.UserTaskActivityBehavior", e);
      }
  }

  @Test(timeout = 11000)
  public void test12()  throws Throwable  {
      SerializedObjectSupporter serializedObjectSupporter0 = new SerializedObjectSupporter();
      assertNotNull(serializedObjectSupporter0);
      
      UserTaskActivityBehavior userTaskActivityBehavior0 = serializedObjectSupporter0.deserializeObjectUserTaskActivityBehavior428();
      assertNotNull(userTaskActivityBehavior0);
      
      TaskEntity taskEntity0 = new TaskEntity();
      assertNotNull(taskEntity0);
      assertNull(taskEntity0.getParentTaskId());
      assertNull(taskEntity0.getTaskDefinitionKey());
      assertNull(taskEntity0.getProcessInstanceId());
      assertEquals(0, taskEntity0.getRevision());
      assertFalse(taskEntity0.isDeleted());
      assertNull(taskEntity0.getId());
      assertNull(taskEntity0.getEventName());
      assertNull(taskEntity0.getName());
      assertNull(taskEntity0.getAssignee());
      assertNull(taskEntity0.getFormKey());
      assertEquals("", taskEntity0.getTenantId());
      assertNull(taskEntity0.getDescription());
      assertEquals(1, taskEntity0.getRevisionNext());
      assertNull(taskEntity0.getCategory());
      assertNull(taskEntity0.getProcessDefinitionId());
      assertEquals(1, taskEntity0.getSuspensionState());
      assertEquals(50, taskEntity0.getPriority());
      assertNull(taskEntity0.getDelegationState());
      assertNull(taskEntity0.getExecutionId());
      assertNull(taskEntity0.getOwner());
      
      ActivityExecution activityExecution0 = null;
      userTaskActivityBehavior0.handleAssignments(taskEntity0, activityExecution0);
      assertNull(taskEntity0.getParentTaskId());
      assertNull(taskEntity0.getTaskDefinitionKey());
      assertNull(taskEntity0.getProcessInstanceId());
      assertEquals(0, taskEntity0.getRevision());
      assertFalse(taskEntity0.isDeleted());
      assertNull(taskEntity0.getId());
      assertNull(taskEntity0.getEventName());
      assertNull(taskEntity0.getName());
      assertNull(taskEntity0.getAssignee());
      assertNull(taskEntity0.getFormKey());
      assertEquals("", taskEntity0.getTenantId());
      assertNull(taskEntity0.getDescription());
      assertEquals(1, taskEntity0.getRevisionNext());
      assertNull(taskEntity0.getCategory());
      assertNull(taskEntity0.getProcessDefinitionId());
      assertEquals(1, taskEntity0.getSuspensionState());
      assertEquals(50, taskEntity0.getPriority());
      assertNull(taskEntity0.getDelegationState());
      assertNull(taskEntity0.getExecutionId());
      assertNull(taskEntity0.getOwner());
  }

  @Test(timeout = 11000)
  public void test13()  throws Throwable  {
      SerializedObjectSupporter serializedObjectSupporter0 = new SerializedObjectSupporter();
      assertNotNull(serializedObjectSupporter0);
      
      UserTaskActivityBehavior userTaskActivityBehavior0 = serializedObjectSupporter0.deserializeObjectUserTaskActivityBehavior724();
      assertNotNull(userTaskActivityBehavior0);
      
      String string0 = null;
      // Undeclared exception!
      try { 
        userTaskActivityBehavior0.extractCandidates(string0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.activiti.engine.impl.bpmn.behavior.UserTaskActivityBehavior", e);
      }
  }

  @Test(timeout = 11000)
  public void test14()  throws Throwable  {
      SerializedObjectSupporter serializedObjectSupporter0 = new SerializedObjectSupporter();
      assertNotNull(serializedObjectSupporter0);
      
      TaskDefinition taskDefinition0 = serializedObjectSupporter0.deserializeObjectTaskDefinition13();
      assertNotNull(taskDefinition0);
      assertEquals("escalatedTask", taskDefinition0.getKey());
      assertEquals(1L, taskDefinition0.getserialVersionUID());
      
      UserTaskActivityBehavior userTaskActivityBehavior0 = serializedObjectSupporter0.deserializeObjectUserTaskActivityBehavior549();
      assertNotNull(userTaskActivityBehavior0);
      
      List<FieldDeclaration> list0 = null;
      DelegateExpressionExecutionListener delegateExpressionExecutionListener0 = new DelegateExpressionExecutionListener(taskDefinition0.priorityExpression, list0);
      assertNotNull(delegateExpressionExecutionListener0);
      assertEquals("escalatedTask", taskDefinition0.getKey());
      assertEquals(1L, taskDefinition0.getserialVersionUID());
      
      TaskDefinition taskDefinition1 = userTaskActivityBehavior0.getTaskDefinition();
      assertNotSame(taskDefinition1, taskDefinition0);
      assertFalse(taskDefinition1.equals((Object)taskDefinition0));
      assertNotNull(taskDefinition1);
      assertEquals(1L, taskDefinition1.getserialVersionUID());
      assertEquals("receivePayment", taskDefinition1.getKey());
      
      ExecutionEntity executionEntity0 = serializedObjectSupporter0.deserializeObjectExecutionEntity382();
      assertNull(executionEntity0);
      
      String string0 = "";
      long long0 = 0L;
      Long long1 = new Long(long0);
      assertEquals(0L, (long)long1);
      assertTrue(long1.equals((Object)long0));
      assertNotNull(long1);
      
      try { 
        userTaskActivityBehavior0.signal(executionEntity0, string0, long1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.activiti.engine.impl.bpmn.behavior.UserTaskActivityBehavior", e);
      }
  }

  @Test(timeout = 11000)
  public void test15()  throws Throwable  {
      long long0 = 0L;
      System.setCurrentTimeMillis(long0);
      SerializedObjectSupporter serializedObjectSupporter0 = new SerializedObjectSupporter();
      assertNotNull(serializedObjectSupporter0);
      
      UserTaskActivityBehavior userTaskActivityBehavior0 = serializedObjectSupporter0.deserializeObjectUserTaskActivityBehavior113();
      assertNotNull(userTaskActivityBehavior0);
      
      IdentityLinkEntity identityLinkEntity0 = new IdentityLinkEntity();
      assertNotNull(identityLinkEntity0);
      assertNull(identityLinkEntity0.getTaskId());
      assertNull(identityLinkEntity0.getUserId());
      assertNull(identityLinkEntity0.getGroupId());
      assertNull(identityLinkEntity0.getProcessDefId());
      assertFalse(identityLinkEntity0.isGroup());
      assertFalse(identityLinkEntity0.isUser());
      assertNull(identityLinkEntity0.getProcessDefinitionId());
      assertNull(identityLinkEntity0.getType());
      assertNull(identityLinkEntity0.getProcessInstanceId());
      assertNull(identityLinkEntity0.getId());
      
      TaskEntity taskEntity0 = identityLinkEntity0.getTask();
      assertNull(taskEntity0);
      assertNull(identityLinkEntity0.getTaskId());
      assertNull(identityLinkEntity0.getUserId());
      assertNull(identityLinkEntity0.getGroupId());
      assertNull(identityLinkEntity0.getProcessDefId());
      assertFalse(identityLinkEntity0.isGroup());
      assertFalse(identityLinkEntity0.isUser());
      assertNull(identityLinkEntity0.getProcessDefinitionId());
      assertNull(identityLinkEntity0.getType());
      assertNull(identityLinkEntity0.getProcessInstanceId());
      assertNull(identityLinkEntity0.getId());
      
      ExecutionEntity executionEntity0 = serializedObjectSupporter0.deserializeObjectExecutionEntity674();
      assertNull(executionEntity0);
      
      // Undeclared exception!
      try { 
        userTaskActivityBehavior0.handleAssignments(taskEntity0, executionEntity0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.activiti.engine.impl.el.JuelExpression", e);
      }
  }

  @Test(timeout = 11000)
  public void test16()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      boolean boolean0 = true;
      boolean boolean1 = false;
      boolean boolean2 = FileSystemHandling.setPermissions(evoSuiteFile0, boolean0, boolean1, boolean0);
      assertFalse(boolean2);
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      
      TaskDefinition taskDefinition0 = null;
      UserTaskActivityBehavior userTaskActivityBehavior0 = new UserTaskActivityBehavior(taskDefinition0);
      assertNotNull(userTaskActivityBehavior0);
      
      TaskDefinition taskDefinition1 = userTaskActivityBehavior0.getTaskDefinition();
      assertNull(taskDefinition1);
  }
}
