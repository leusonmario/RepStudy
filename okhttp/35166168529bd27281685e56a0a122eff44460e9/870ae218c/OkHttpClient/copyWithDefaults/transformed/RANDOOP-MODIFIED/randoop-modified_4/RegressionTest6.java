import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest6 {

    public static boolean debug = false;

    @Test
    public void test03001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03001");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setHostnameVerifier(hostnameVerifier4);
        java.net.ProxySelector proxySelector6 = okHttpClient0.proxySelector;
        java.net.ResponseCache responseCache7 = okHttpClient0.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet8 = okHttpClient0.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler10 = okHttpClient9.getCookieHandler();
        boolean boolean11 = okHttpClient9.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient9.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool15 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int16 = connectionPool15.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient12.setConnectionPool(connectionPool15);
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector19 = null;
        okHttpClient18.proxySelector = proxySelector19;
        java.net.ProxySelector proxySelector21 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient18.setProxySelector(proxySelector21);
        java.net.ProxySelector proxySelector23 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient18.setProxySelector(proxySelector23);
        okHttpClient17.proxySelector = proxySelector23;
        javax.net.ssl.HostnameVerifier hostnameVerifier26 = okHttpClient17.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient0.setHostnameVerifier(hostnameVerifier26);
        okHttpClient0.followProtocolRedirects = false;
        okHttpClient0.followProtocolRedirects = false;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler33 = okHttpClient32.getCookieHandler();
        boolean boolean34 = okHttpClient32.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient32.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool38 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int39 = connectionPool38.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient40 = okHttpClient35.setConnectionPool(connectionPool38);
        com.squareup.okhttp.ConnectionPool connectionPool41 = okHttpClient35.connectionPool;
        com.squareup.okhttp.OkAuthenticator okAuthenticator42 = okHttpClient35.authenticator;
        boolean boolean43 = okHttpClient35.followProtocolRedirects;
        com.squareup.okhttp.OkAuthenticator okAuthenticator44 = okHttpClient35.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient45 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector46 = null;
        okHttpClient45.proxySelector = proxySelector46;
        java.net.ProxySelector proxySelector48 = okHttpClient45.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier49 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient45.setHostnameVerifier(hostnameVerifier49);
        boolean boolean51 = okHttpClient45.getFollowProtocolRedirects();
        com.squareup.okhttp.ConnectionPool connectionPool54 = new com.squareup.okhttp.ConnectionPool((int) 'a', (long) (byte) -1);
        com.squareup.okhttp.OkHttpClient okHttpClient55 = okHttpClient45.setConnectionPool(connectionPool54);
        com.squareup.okhttp.OkHttpClient okHttpClient56 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector57 = null;
        okHttpClient56.proxySelector = proxySelector57;
        java.net.ProxySelector proxySelector59 = okHttpClient56.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier60 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient61 = okHttpClient56.setHostnameVerifier(hostnameVerifier60);
        boolean boolean62 = okHttpClient56.getFollowProtocolRedirects();
        com.squareup.okhttp.ConnectionPool connectionPool65 = new com.squareup.okhttp.ConnectionPool((int) 'a', (long) (byte) -1);
        com.squareup.okhttp.OkHttpClient okHttpClient66 = okHttpClient56.setConnectionPool(connectionPool65);
        com.squareup.okhttp.OkHttpClient okHttpClient67 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler68 = okHttpClient67.getCookieHandler();
        boolean boolean69 = okHttpClient67.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient70 = okHttpClient67.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier71 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient72 = okHttpClient70.setHostnameVerifier(hostnameVerifier71);
        java.net.ResponseCache responseCache73 = okHttpClient72.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator74 = okHttpClient72.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier75 = okHttpClient72.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory76 = okHttpClient72.getSslSocketFactory();
        okHttpClient56.sslSocketFactory = sSLSocketFactory76;
        java.net.Socket socket78 = sSLSocketFactory76.createSocket();
        okHttpClient45.sslSocketFactory = sSLSocketFactory76;
        java.util.Set<com.squareup.okhttp.Route> routeSet80 = okHttpClient45.failedRoutes;
        okHttpClient35.failedRoutes = routeSet80;
        okHttpClient0.failedRoutes = routeSet80;
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(proxySelector6);
        org.junit.Assert.assertNull(responseCache7);
        org.junit.Assert.assertNotNull(routeSet8);
        org.junit.Assert.assertNull(cookieHandler10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNotNull(okHttpClient22);
// flaky:         org.junit.Assert.assertNull(proxySelector23);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNotNull(hostnameVerifier26);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNull(cookieHandler33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(okHttpClient40);
        org.junit.Assert.assertNotNull(connectionPool41);
        org.junit.Assert.assertNotNull(okAuthenticator42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(okAuthenticator44);
        org.junit.Assert.assertNull(proxySelector48);
        org.junit.Assert.assertNotNull(okHttpClient50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(okHttpClient55);
        org.junit.Assert.assertNull(proxySelector59);
        org.junit.Assert.assertNotNull(okHttpClient61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(okHttpClient66);
        org.junit.Assert.assertNull(cookieHandler68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(okHttpClient70);
        org.junit.Assert.assertNotNull(okHttpClient72);
        org.junit.Assert.assertNull(responseCache73);
        org.junit.Assert.assertNotNull(okAuthenticator74);
        org.junit.Assert.assertNull(hostnameVerifier75);
        org.junit.Assert.assertNotNull(sSLSocketFactory76);
        org.junit.Assert.assertNotNull(socket78);
        org.junit.Assert.assertEquals(socket78.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(routeSet80);
    }

    @Test
    public void test03002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03002");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = okHttpClient0.hostnameVerifier;
        java.net.ResponseCache responseCache2 = okHttpClient0.getResponseCache();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory3 = okHttpClient0.sslSocketFactory;
        java.net.Proxy proxy4 = okHttpClient0.proxy;
        okHttpClient0.followProtocolRedirects = false;
        java.net.ResponseCache responseCache7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient0.setResponseCache(responseCache7);
        java.net.CookieHandler cookieHandler9 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory11 = okHttpClient10.getSslSocketFactory();
        com.squareup.okhttp.OkAuthenticator okAuthenticator12 = okHttpClient10.authenticator;
        java.net.CookieHandler cookieHandler13 = null;
        okHttpClient10.cookieHandler = cookieHandler13;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory15 = okHttpClient10.sslSocketFactory;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient10.copyWithDefaults();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory17 = okHttpClient16.sslSocketFactory;
        okHttpClient0.sslSocketFactory = sSLSocketFactory17;
        java.net.InetAddress inetAddress19 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket21 = sSLSocketFactory17.createSocket(inetAddress19, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: port out of range:-1");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(hostnameVerifier1);
        org.junit.Assert.assertNull(responseCache2);
        org.junit.Assert.assertNull(sSLSocketFactory3);
        org.junit.Assert.assertNull(proxy4);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertNull(cookieHandler9);
        org.junit.Assert.assertNull(sSLSocketFactory11);
        org.junit.Assert.assertNull(okAuthenticator12);
        org.junit.Assert.assertNull(sSLSocketFactory15);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNotNull(sSLSocketFactory17);
    }

    @Test
    public void test03003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03003");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray2 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet3 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet3, routeArray2);
        okHttpClient0.failedRoutes = routeSet3;
        java.net.Proxy proxy6 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient7.setCookieHandler(cookieHandler8);
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient7.setFollowProtocolRedirects(true);
        boolean boolean12 = proxy6.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient0.setProxy(proxy6);
        java.lang.String str14 = proxy6.toString();
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler16 = okHttpClient15.getCookieHandler();
        boolean boolean17 = okHttpClient15.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient15.setAuthenticator(okAuthenticator18);
        java.net.ResponseCache responseCache20 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient15.setResponseCache(responseCache20);
        com.squareup.okhttp.ConnectionPool connectionPool24 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool24.evictAll();
        okHttpClient15.connectionPool = connectionPool24;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory27 = okHttpClient15.sslSocketFactory;
        com.squareup.okhttp.ConnectionPool connectionPool28 = okHttpClient15.getConnectionPool();
        boolean boolean29 = proxy6.equals((java.lang.Object) okHttpClient15);
        java.net.ResponseCache responseCache30 = okHttpClient15.getResponseCache();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory31 = okHttpClient15.getSslSocketFactory();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache32 = okHttpClient15.okResponseCache();
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertNotNull(routeArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(proxy6);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "DIRECT" + "'", str14, "DIRECT");
        org.junit.Assert.assertNull(cookieHandler16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNull(sSLSocketFactory27);
        org.junit.Assert.assertNotNull(connectionPool28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(responseCache30);
        org.junit.Assert.assertNull(sSLSocketFactory31);
        org.junit.Assert.assertNull(okResponseCache32);
    }

    @Test
    public void test03004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03004");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient0.connectionPool;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler5 = okHttpClient4.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray6 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet7 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet7, routeArray6);
        okHttpClient4.failedRoutes = routeSet7;
        java.net.Proxy proxy10 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setCookieHandler(cookieHandler12);
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient11.setFollowProtocolRedirects(true);
        boolean boolean16 = proxy10.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient4.setProxy(proxy10);
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler19 = okHttpClient18.getCookieHandler();
        boolean boolean20 = okHttpClient18.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient18.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool24 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int25 = connectionPool24.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient21.setConnectionPool(connectionPool24);
        com.squareup.okhttp.OkHttpClient okHttpClient27 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector28 = null;
        okHttpClient27.proxySelector = proxySelector28;
        java.net.ProxySelector proxySelector30 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient27.setProxySelector(proxySelector30);
        java.net.ProxySelector proxySelector32 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient27.setProxySelector(proxySelector32);
        okHttpClient26.proxySelector = proxySelector32;
        okHttpClient4.proxySelector = proxySelector32;
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient0.setProxySelector(proxySelector32);
        java.net.CookieHandler cookieHandler37 = null;
        okHttpClient36.cookieHandler = cookieHandler37;
        java.net.Proxy proxy39 = okHttpClient36.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient40 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler41 = okHttpClient40.getCookieHandler();
        boolean boolean42 = okHttpClient40.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient43 = okHttpClient40.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet44 = okHttpClient43.failedRoutes;
        boolean boolean45 = okHttpClient43.getFollowProtocolRedirects();
        java.net.ProxySelector proxySelector46 = okHttpClient43.proxySelector;
        okHttpClient36.proxySelector = proxySelector46;
        com.squareup.okhttp.OkHttpClient okHttpClient48 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler49 = okHttpClient48.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray50 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet51 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet51, routeArray50);
        okHttpClient48.failedRoutes = routeSet51;
        java.net.Proxy proxy54 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient55 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler56 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient57 = okHttpClient55.setCookieHandler(cookieHandler56);
        com.squareup.okhttp.OkHttpClient okHttpClient59 = okHttpClient55.setFollowProtocolRedirects(true);
        boolean boolean60 = proxy54.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient61 = okHttpClient48.setProxy(proxy54);
        java.lang.String str62 = proxy54.toString();
        java.net.Proxy.Type type63 = proxy54.type();
        com.squareup.okhttp.OkHttpClient okHttpClient64 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler65 = okHttpClient64.getCookieHandler();
        java.net.ResponseCache responseCache66 = null;
        okHttpClient64.responseCache = responseCache66;
        boolean boolean68 = okHttpClient64.followProtocolRedirects;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory69 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient70 = okHttpClient64.setSSLSocketFactory(sSLSocketFactory69);
        java.net.CookieHandler cookieHandler71 = okHttpClient64.cookieHandler;
        boolean boolean72 = proxy54.equals((java.lang.Object) okHttpClient64);
        java.net.Proxy.Type type73 = proxy54.type();
        okHttpClient36.proxy = proxy54;
        java.net.CookieHandler cookieHandler75 = null;
        okHttpClient36.cookieHandler = cookieHandler75;
        org.junit.Assert.assertNull(connectionPool3);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertNotNull(routeArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(proxy10);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNull(cookieHandler19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNotNull(okHttpClient31);
// flaky:         org.junit.Assert.assertNull(proxySelector32);
        org.junit.Assert.assertNotNull(okHttpClient33);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNull(proxy39);
        org.junit.Assert.assertNull(cookieHandler41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(okHttpClient43);
        org.junit.Assert.assertNotNull(routeSet44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
// flaky:         org.junit.Assert.assertNull(proxySelector46);
        org.junit.Assert.assertNull(cookieHandler49);
        org.junit.Assert.assertNotNull(routeArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(proxy54);
        org.junit.Assert.assertNotNull(okHttpClient57);
        org.junit.Assert.assertNotNull(okHttpClient59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(okHttpClient61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "DIRECT" + "'", str62, "DIRECT");
        org.junit.Assert.assertTrue("'" + type63 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type63.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(cookieHandler65);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(okHttpClient70);
        org.junit.Assert.assertNull(cookieHandler71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + type73 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type73.equals(java.net.Proxy.Type.DIRECT));
    }

    @Test
    public void test03005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03005");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = okHttpClient0.getSslSocketFactory();
        com.squareup.okhttp.OkAuthenticator okAuthenticator2 = okHttpClient0.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler4 = okHttpClient3.getCookieHandler();
        boolean boolean5 = okHttpClient3.getFollowProtocolRedirects();
        java.net.ProxySelector proxySelector6 = okHttpClient3.proxySelector;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector8 = null;
        okHttpClient7.proxySelector = proxySelector8;
        java.net.ProxySelector proxySelector10 = okHttpClient7.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient7.setHostnameVerifier(hostnameVerifier11);
        java.net.ProxySelector proxySelector13 = okHttpClient7.proxySelector;
        java.net.ResponseCache responseCache14 = okHttpClient7.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet15 = okHttpClient7.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler17 = okHttpClient16.getCookieHandler();
        boolean boolean18 = okHttpClient16.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient16.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool22 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int23 = connectionPool22.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient19.setConnectionPool(connectionPool22);
        com.squareup.okhttp.OkHttpClient okHttpClient25 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector26 = null;
        okHttpClient25.proxySelector = proxySelector26;
        java.net.ProxySelector proxySelector28 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient25.setProxySelector(proxySelector28);
        java.net.ProxySelector proxySelector30 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient25.setProxySelector(proxySelector30);
        okHttpClient24.proxySelector = proxySelector30;
        javax.net.ssl.HostnameVerifier hostnameVerifier33 = okHttpClient24.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient7.setHostnameVerifier(hostnameVerifier33);
        java.net.Proxy proxy35 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress36 = proxy35.address();
        com.squareup.okhttp.OkHttpClient okHttpClient37 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector38 = null;
        okHttpClient37.proxySelector = proxySelector38;
        com.squareup.okhttp.ConnectionPool connectionPool40 = okHttpClient37.connectionPool;
        com.squareup.okhttp.ConnectionPool connectionPool41 = okHttpClient37.getConnectionPool();
        boolean boolean42 = proxy35.equals((java.lang.Object) okHttpClient37);
        okHttpClient7.proxy = proxy35;
        com.squareup.okhttp.OkHttpClient okHttpClient44 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler45 = okHttpClient44.getCookieHandler();
        boolean boolean46 = okHttpClient44.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient47 = okHttpClient44.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier48 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient49 = okHttpClient47.setHostnameVerifier(hostnameVerifier48);
        java.net.ResponseCache responseCache50 = okHttpClient49.getResponseCache();
        java.net.ProxySelector proxySelector51 = okHttpClient49.getProxySelector();
        boolean boolean52 = proxy35.equals((java.lang.Object) proxySelector51);
        com.squareup.okhttp.OkHttpClient okHttpClient53 = okHttpClient3.setProxy(proxy35);
        java.net.CookieHandler cookieHandler54 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient55 = okHttpClient3.setCookieHandler(cookieHandler54);
        java.net.Proxy proxy56 = okHttpClient55.getProxy();
        java.net.Proxy.Type type57 = proxy56.type();
        okHttpClient0.proxy = proxy56;
        boolean boolean59 = okHttpClient0.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient60 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool61 = okHttpClient0.connectionPool;
        org.junit.Assert.assertNull(sSLSocketFactory1);
        org.junit.Assert.assertNull(okAuthenticator2);
        org.junit.Assert.assertNull(cookieHandler4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(proxySelector6);
        org.junit.Assert.assertNull(proxySelector10);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertNull(proxySelector13);
        org.junit.Assert.assertNull(responseCache14);
        org.junit.Assert.assertNotNull(routeSet15);
        org.junit.Assert.assertNull(cookieHandler17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNotNull(okHttpClient29);
// flaky:         org.junit.Assert.assertNull(proxySelector30);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNotNull(hostnameVerifier33);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertNotNull(proxy35);
        org.junit.Assert.assertNull(socketAddress36);
        org.junit.Assert.assertNull(connectionPool40);
        org.junit.Assert.assertNull(connectionPool41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(cookieHandler45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(okHttpClient47);
        org.junit.Assert.assertNotNull(okHttpClient49);
        org.junit.Assert.assertNull(responseCache50);
// flaky:         org.junit.Assert.assertNull(proxySelector51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(okHttpClient53);
        org.junit.Assert.assertNotNull(okHttpClient55);
        org.junit.Assert.assertNotNull(proxy56);
        org.junit.Assert.assertTrue("'" + type57 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type57.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(okHttpClient60);
        org.junit.Assert.assertNull(connectionPool61);
    }

    @Test
    public void test03006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03006");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.copyWithDefaults();
        java.net.ProxySelector proxySelector4 = okHttpClient0.getProxySelector();
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.copyWithDefaults();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory6 = okHttpClient5.sslSocketFactory;
        java.lang.String[] strArray7 = sSLSocketFactory6.getDefaultCipherSuites();
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket10 = sSLSocketFactory6.createSocket("", (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.net.ConnectException; message: Connection refused (Connection refused)");
        } catch (java.net.ConnectException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertNull(proxySelector4);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNotNull(sSLSocketFactory6);
        org.junit.Assert.assertNotNull(strArray7);
    }

    @Test
    public void test03007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03007");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool6 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int7 = connectionPool6.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient3.setConnectionPool(connectionPool6);
        com.squareup.okhttp.ConnectionPool connectionPool9 = okHttpClient3.connectionPool;
        java.net.ResponseCache responseCache10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient3.setResponseCache(responseCache10);
        com.squareup.okhttp.OkAuthenticator okAuthenticator12 = okHttpClient3.getAuthenticator();
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler14 = okHttpClient13.getCookieHandler();
        boolean boolean15 = okHttpClient13.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient13.setAuthenticator(okAuthenticator16);
        java.net.ResponseCache responseCache18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient13.setResponseCache(responseCache18);
        com.squareup.okhttp.ConnectionPool connectionPool22 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool22.evictAll();
        okHttpClient13.connectionPool = connectionPool22;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory25 = okHttpClient13.sslSocketFactory;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory26 = null;
        okHttpClient13.sslSocketFactory = sSLSocketFactory26;
        java.net.ProxySelector proxySelector28 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient13.setProxySelector(proxySelector28);
        com.squareup.okhttp.OkHttpClient okHttpClient30 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector31 = null;
        okHttpClient30.proxySelector = proxySelector31;
        java.net.ProxySelector proxySelector33 = okHttpClient30.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier34 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient30.setHostnameVerifier(hostnameVerifier34);
        java.net.ProxySelector proxySelector36 = java.net.ProxySelector.getDefault();
        okHttpClient30.proxySelector = proxySelector36;
        okHttpClient29.proxySelector = proxySelector36;
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient3.setProxySelector(proxySelector36);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory40 = okHttpClient3.getSslSocketFactory();
        java.lang.String[] strArray41 = sSLSocketFactory40.getDefaultCipherSuites();
        java.net.InetAddress inetAddress42 = null;
        java.net.InetAddress inetAddress44 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket46 = sSLSocketFactory40.createSocket(inetAddress42, (int) 'a', inetAddress44, 0);
            org.junit.Assert.fail("Expected exception of type java.net.ConnectException; message: Connection refused (Connection refused)");
        } catch (java.net.ConnectException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(okAuthenticator12);
        org.junit.Assert.assertNull(cookieHandler14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNull(sSLSocketFactory25);
// flaky:         org.junit.Assert.assertNull(proxySelector28);
        org.junit.Assert.assertNotNull(okHttpClient29);
        org.junit.Assert.assertNull(proxySelector33);
        org.junit.Assert.assertNotNull(okHttpClient35);
// flaky:         org.junit.Assert.assertNull(proxySelector36);
        org.junit.Assert.assertNotNull(okHttpClient39);
        org.junit.Assert.assertNotNull(sSLSocketFactory40);
        org.junit.Assert.assertNotNull(strArray41);
    }

    @Test
    public void test03008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03008");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient4 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector5 = null;
        okHttpClient4.proxySelector = proxySelector5;
        java.net.ProxySelector proxySelector7 = okHttpClient4.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient4.setHostnameVerifier(hostnameVerifier8);
        java.net.ProxySelector proxySelector10 = okHttpClient4.proxySelector;
        java.net.ResponseCache responseCache11 = okHttpClient4.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet12 = okHttpClient4.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler14 = okHttpClient13.getCookieHandler();
        boolean boolean15 = okHttpClient13.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient13.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool19 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int20 = connectionPool19.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient16.setConnectionPool(connectionPool19);
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector23 = null;
        okHttpClient22.proxySelector = proxySelector23;
        java.net.ProxySelector proxySelector25 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient22.setProxySelector(proxySelector25);
        java.net.ProxySelector proxySelector27 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient22.setProxySelector(proxySelector27);
        okHttpClient21.proxySelector = proxySelector27;
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = okHttpClient21.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient4.setHostnameVerifier(hostnameVerifier30);
        javax.net.ssl.HostnameVerifier hostnameVerifier32 = okHttpClient31.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient0.setHostnameVerifier(hostnameVerifier32);
        java.net.Proxy proxy34 = okHttpClient33.proxy;
        java.util.Set<com.squareup.okhttp.Route> routeSet35 = okHttpClient33.failedRoutes;
        java.net.ProxySelector proxySelector36 = okHttpClient33.getProxySelector();
        java.net.Proxy proxy37 = okHttpClient33.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient38 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector39 = null;
        okHttpClient38.proxySelector = proxySelector39;
        java.net.ProxySelector proxySelector41 = okHttpClient38.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier42 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient43 = okHttpClient38.setHostnameVerifier(hostnameVerifier42);
        boolean boolean44 = okHttpClient38.getFollowProtocolRedirects();
        com.squareup.okhttp.ConnectionPool connectionPool47 = new com.squareup.okhttp.ConnectionPool((int) 'a', (long) (byte) -1);
        com.squareup.okhttp.OkHttpClient okHttpClient48 = okHttpClient38.setConnectionPool(connectionPool47);
        com.squareup.okhttp.OkHttpClient okHttpClient49 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector50 = null;
        okHttpClient49.proxySelector = proxySelector50;
        java.net.ProxySelector proxySelector52 = okHttpClient49.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier53 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient54 = okHttpClient49.setHostnameVerifier(hostnameVerifier53);
        boolean boolean55 = okHttpClient49.getFollowProtocolRedirects();
        com.squareup.okhttp.ConnectionPool connectionPool58 = new com.squareup.okhttp.ConnectionPool((int) 'a', (long) (byte) -1);
        com.squareup.okhttp.OkHttpClient okHttpClient59 = okHttpClient49.setConnectionPool(connectionPool58);
        com.squareup.okhttp.OkHttpClient okHttpClient60 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler61 = okHttpClient60.getCookieHandler();
        boolean boolean62 = okHttpClient60.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient63 = okHttpClient60.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier64 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient65 = okHttpClient63.setHostnameVerifier(hostnameVerifier64);
        java.net.ResponseCache responseCache66 = okHttpClient65.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator67 = okHttpClient65.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier68 = okHttpClient65.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory69 = okHttpClient65.getSslSocketFactory();
        okHttpClient49.sslSocketFactory = sSLSocketFactory69;
        java.net.Socket socket71 = sSLSocketFactory69.createSocket();
        okHttpClient38.sslSocketFactory = sSLSocketFactory69;
        java.util.Set<com.squareup.okhttp.Route> routeSet73 = okHttpClient38.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient74 = okHttpClient38.copyWithDefaults();
        java.net.Proxy proxy75 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient76 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler77 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient78 = okHttpClient76.setCookieHandler(cookieHandler77);
        com.squareup.okhttp.OkHttpClient okHttpClient80 = okHttpClient76.setFollowProtocolRedirects(true);
        boolean boolean81 = proxy75.equals((java.lang.Object) true);
        java.lang.String str82 = proxy75.toString();
        java.net.Proxy.Type type83 = proxy75.type();
        java.net.SocketAddress socketAddress84 = proxy75.address();
        java.net.SocketAddress socketAddress85 = proxy75.address();
        okHttpClient74.proxy = proxy75;
        okHttpClient33.proxy = proxy75;
        java.net.ResponseCache responseCache88 = okHttpClient33.responseCache;
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertNull(proxySelector7);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNull(proxySelector10);
        org.junit.Assert.assertNull(responseCache11);
        org.junit.Assert.assertNotNull(routeSet12);
        org.junit.Assert.assertNull(cookieHandler14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNotNull(okHttpClient26);
// flaky:         org.junit.Assert.assertNull(proxySelector27);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNotNull(hostnameVerifier30);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNotNull(hostnameVerifier32);
        org.junit.Assert.assertNotNull(okHttpClient33);
        org.junit.Assert.assertNull(proxy34);
        org.junit.Assert.assertNotNull(routeSet35);
        org.junit.Assert.assertNull(proxySelector36);
        org.junit.Assert.assertNull(proxy37);
        org.junit.Assert.assertNull(proxySelector41);
        org.junit.Assert.assertNotNull(okHttpClient43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(okHttpClient48);
        org.junit.Assert.assertNull(proxySelector52);
        org.junit.Assert.assertNotNull(okHttpClient54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(okHttpClient59);
        org.junit.Assert.assertNull(cookieHandler61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(okHttpClient63);
        org.junit.Assert.assertNotNull(okHttpClient65);
        org.junit.Assert.assertNull(responseCache66);
        org.junit.Assert.assertNotNull(okAuthenticator67);
        org.junit.Assert.assertNull(hostnameVerifier68);
        org.junit.Assert.assertNotNull(sSLSocketFactory69);
        org.junit.Assert.assertNotNull(socket71);
        org.junit.Assert.assertEquals(socket71.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(routeSet73);
        org.junit.Assert.assertNotNull(okHttpClient74);
        org.junit.Assert.assertNotNull(proxy75);
        org.junit.Assert.assertNotNull(okHttpClient78);
        org.junit.Assert.assertNotNull(okHttpClient80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "DIRECT" + "'", str82, "DIRECT");
        org.junit.Assert.assertTrue("'" + type83 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type83.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress84);
        org.junit.Assert.assertNull(socketAddress85);
        org.junit.Assert.assertNull(responseCache88);
    }

    @Test
    public void test03009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03009");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet4 = okHttpClient3.failedRoutes;
        java.net.ResponseCache responseCache5 = okHttpClient3.responseCache;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector7 = null;
        okHttpClient6.proxySelector = proxySelector7;
        java.net.ProxySelector proxySelector9 = okHttpClient6.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient6.setHostnameVerifier(hostnameVerifier10);
        java.net.ResponseCache responseCache12 = okHttpClient11.responseCache;
        com.squareup.okhttp.ConnectionPool connectionPool15 = new com.squareup.okhttp.ConnectionPool((int) '4', 100L);
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient11.setConnectionPool(connectionPool15);
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler18 = okHttpClient17.getCookieHandler();
        boolean boolean19 = okHttpClient17.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator20 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient17.setAuthenticator(okAuthenticator20);
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient17.copyWithDefaults();
        java.net.CookieHandler cookieHandler23 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient17.setCookieHandler(cookieHandler23);
        com.squareup.okhttp.OkAuthenticator okAuthenticator25 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient24.setAuthenticator(okAuthenticator25);
        com.squareup.okhttp.OkHttpClient okHttpClient27 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler28 = okHttpClient27.getCookieHandler();
        boolean boolean29 = okHttpClient27.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient30 = okHttpClient27.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool33 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int34 = connectionPool33.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient30.setConnectionPool(connectionPool33);
        com.squareup.okhttp.ConnectionPool connectionPool36 = okHttpClient30.connectionPool;
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient24.setConnectionPool(connectionPool36);
        com.squareup.okhttp.Address address38 = null;
        com.squareup.okhttp.Connection connection39 = connectionPool36.get(address38);
        com.squareup.okhttp.OkHttpClient okHttpClient40 = okHttpClient16.setConnectionPool(connectionPool36);
        java.net.ProxySelector proxySelector41 = okHttpClient16.proxySelector;
        com.squareup.okhttp.OkHttpClient okHttpClient42 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector43 = null;
        okHttpClient42.proxySelector = proxySelector43;
        java.net.ProxySelector proxySelector45 = okHttpClient42.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier46 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient47 = okHttpClient42.setHostnameVerifier(hostnameVerifier46);
        java.net.ProxySelector proxySelector48 = okHttpClient42.proxySelector;
        java.net.ResponseCache responseCache49 = okHttpClient42.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet50 = okHttpClient42.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient51 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler52 = okHttpClient51.getCookieHandler();
        boolean boolean53 = okHttpClient51.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient54 = okHttpClient51.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool57 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int58 = connectionPool57.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient59 = okHttpClient54.setConnectionPool(connectionPool57);
        com.squareup.okhttp.OkHttpClient okHttpClient60 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector61 = null;
        okHttpClient60.proxySelector = proxySelector61;
        java.net.ProxySelector proxySelector63 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient64 = okHttpClient60.setProxySelector(proxySelector63);
        java.net.ProxySelector proxySelector65 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient66 = okHttpClient60.setProxySelector(proxySelector65);
        okHttpClient59.proxySelector = proxySelector65;
        javax.net.ssl.HostnameVerifier hostnameVerifier68 = okHttpClient59.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient69 = okHttpClient42.setHostnameVerifier(hostnameVerifier68);
        okHttpClient16.hostnameVerifier = hostnameVerifier68;
        okHttpClient3.hostnameVerifier = hostnameVerifier68;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory72 = okHttpClient3.sslSocketFactory;
        java.lang.String[] strArray73 = sSLSocketFactory72.getSupportedCipherSuites();
        java.net.Socket socket74 = sSLSocketFactory72.createSocket();
        java.net.Socket socket75 = null;
        java.io.InputStream inputStream76 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket78 = sSLSocketFactory72.createSocket(socket75, inputStream76, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: the existing socket cannot be null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertNotNull(routeSet4);
        org.junit.Assert.assertNull(responseCache5);
        org.junit.Assert.assertNull(proxySelector9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(responseCache12);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNull(cookieHandler18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNull(cookieHandler28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(okHttpClient30);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNotNull(connectionPool36);
        org.junit.Assert.assertNotNull(okHttpClient37);
        org.junit.Assert.assertNull(connection39);
        org.junit.Assert.assertNotNull(okHttpClient40);
        org.junit.Assert.assertNull(proxySelector41);
        org.junit.Assert.assertNull(proxySelector45);
        org.junit.Assert.assertNotNull(okHttpClient47);
        org.junit.Assert.assertNull(proxySelector48);
        org.junit.Assert.assertNull(responseCache49);
        org.junit.Assert.assertNotNull(routeSet50);
        org.junit.Assert.assertNull(cookieHandler52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(okHttpClient54);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(okHttpClient59);
        org.junit.Assert.assertNotNull(okHttpClient64);
// flaky:         org.junit.Assert.assertNull(proxySelector65);
        org.junit.Assert.assertNotNull(okHttpClient66);
        org.junit.Assert.assertNotNull(hostnameVerifier68);
        org.junit.Assert.assertNotNull(okHttpClient69);
        org.junit.Assert.assertNotNull(sSLSocketFactory72);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertNotNull(socket74);
        org.junit.Assert.assertEquals(socket74.toString(), "Socket[unconnected]");
    }

    @Test
    public void test03010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03010");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        java.net.ResponseCache responseCache5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient0.setResponseCache(responseCache5);
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool9.evictAll();
        okHttpClient0.connectionPool = connectionPool9;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory12 = okHttpClient0.sslSocketFactory;
        java.net.Proxy proxy13 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient0.setProxy(proxy13);
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler16 = okHttpClient15.getCookieHandler();
        boolean boolean17 = okHttpClient15.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient15.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet19 = okHttpClient18.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient18.copyWithDefaults();
        java.net.ProxySelector proxySelector21 = okHttpClient18.getProxySelector();
        okHttpClient14.proxySelector = proxySelector21;
        okHttpClient14.followProtocolRedirects = false;
        com.squareup.okhttp.OkHttpClient okHttpClient25 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector26 = null;
        okHttpClient25.proxySelector = proxySelector26;
        java.net.ProxySelector proxySelector28 = okHttpClient25.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier29 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient30 = okHttpClient25.setHostnameVerifier(hostnameVerifier29);
        boolean boolean31 = okHttpClient25.getFollowProtocolRedirects();
        com.squareup.okhttp.ConnectionPool connectionPool34 = new com.squareup.okhttp.ConnectionPool((int) 'a', (long) (byte) -1);
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient25.setConnectionPool(connectionPool34);
        com.squareup.okhttp.OkHttpClient okHttpClient36 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler37 = okHttpClient36.getCookieHandler();
        boolean boolean38 = okHttpClient36.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient36.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier40 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient41 = okHttpClient39.setHostnameVerifier(hostnameVerifier40);
        java.net.ResponseCache responseCache42 = okHttpClient41.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator43 = okHttpClient41.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier44 = okHttpClient41.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory45 = okHttpClient41.getSslSocketFactory();
        okHttpClient25.sslSocketFactory = sSLSocketFactory45;
        java.net.Socket socket47 = sSLSocketFactory45.createSocket();
        okHttpClient14.sslSocketFactory = sSLSocketFactory45;
        java.net.Socket socket49 = sSLSocketFactory45.createSocket();
        com.squareup.okhttp.OkHttpClient okHttpClient50 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler51 = okHttpClient50.getCookieHandler();
        boolean boolean52 = okHttpClient50.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator53 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient54 = okHttpClient50.setAuthenticator(okAuthenticator53);
        com.squareup.okhttp.OkAuthenticator okAuthenticator55 = okHttpClient50.authenticator;
        java.net.ResponseCache responseCache56 = okHttpClient50.getResponseCache();
        java.net.CookieHandler cookieHandler57 = okHttpClient50.cookieHandler;
        java.net.ResponseCache responseCache58 = okHttpClient50.responseCache;
        com.squareup.okhttp.OkHttpClient okHttpClient59 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler60 = okHttpClient59.getCookieHandler();
        boolean boolean61 = okHttpClient59.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator62 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient63 = okHttpClient59.setAuthenticator(okAuthenticator62);
        java.net.Proxy proxy64 = okHttpClient59.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient65 = okHttpClient59.copyWithDefaults();
        java.net.CookieHandler cookieHandler66 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient67 = okHttpClient59.setCookieHandler(cookieHandler66);
        com.squareup.okhttp.OkHttpClient okHttpClient68 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier69 = okHttpClient68.hostnameVerifier;
        java.net.ResponseCache responseCache70 = okHttpClient68.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator71 = okHttpClient68.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient72 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler73 = okHttpClient72.getCookieHandler();
        boolean boolean74 = okHttpClient72.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient75 = okHttpClient72.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier76 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient77 = okHttpClient75.setHostnameVerifier(hostnameVerifier76);
        java.net.ResponseCache responseCache78 = okHttpClient77.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator79 = okHttpClient77.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier80 = okHttpClient77.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory81 = okHttpClient77.getSslSocketFactory();
        java.lang.String[] strArray82 = sSLSocketFactory81.getSupportedCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient83 = okHttpClient68.setSSLSocketFactory(sSLSocketFactory81);
        com.squareup.okhttp.OkHttpClient okHttpClient84 = okHttpClient67.setSSLSocketFactory(sSLSocketFactory81);
        okHttpClient50.sslSocketFactory = sSLSocketFactory81;
        java.net.Socket socket86 = sSLSocketFactory81.createSocket();
        java.net.Socket socket87 = sSLSocketFactory81.createSocket();
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket91 = sSLSocketFactory45.createSocket(socket87, "hi!", (int) (byte) 0, false);
            org.junit.Assert.fail("Expected exception of type java.net.SocketException; message: Underlying socket is not connected");
        } catch (java.net.SocketException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient6);
        org.junit.Assert.assertNull(sSLSocketFactory12);
        org.junit.Assert.assertNotNull(proxy13);
        org.junit.Assert.assertNotNull(okHttpClient14);
        org.junit.Assert.assertNull(cookieHandler16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNotNull(routeSet19);
        org.junit.Assert.assertNotNull(okHttpClient20);
// flaky:         org.junit.Assert.assertNull(proxySelector21);
        org.junit.Assert.assertNull(proxySelector28);
        org.junit.Assert.assertNotNull(okHttpClient30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNull(cookieHandler37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(okHttpClient39);
        org.junit.Assert.assertNotNull(okHttpClient41);
        org.junit.Assert.assertNull(responseCache42);
        org.junit.Assert.assertNotNull(okAuthenticator43);
        org.junit.Assert.assertNull(hostnameVerifier44);
        org.junit.Assert.assertNotNull(sSLSocketFactory45);
        org.junit.Assert.assertNotNull(socket47);
        org.junit.Assert.assertEquals(socket47.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(socket49);
        org.junit.Assert.assertEquals(socket49.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNull(cookieHandler51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(okHttpClient54);
        org.junit.Assert.assertNull(okAuthenticator55);
        org.junit.Assert.assertNull(responseCache56);
        org.junit.Assert.assertNull(cookieHandler57);
        org.junit.Assert.assertNull(responseCache58);
        org.junit.Assert.assertNull(cookieHandler60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(okHttpClient63);
        org.junit.Assert.assertNull(proxy64);
        org.junit.Assert.assertNotNull(okHttpClient65);
        org.junit.Assert.assertNotNull(okHttpClient67);
        org.junit.Assert.assertNull(hostnameVerifier69);
        org.junit.Assert.assertNull(responseCache70);
        org.junit.Assert.assertNull(okAuthenticator71);
        org.junit.Assert.assertNull(cookieHandler73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(okHttpClient75);
        org.junit.Assert.assertNotNull(okHttpClient77);
        org.junit.Assert.assertNull(responseCache78);
        org.junit.Assert.assertNotNull(okAuthenticator79);
        org.junit.Assert.assertNull(hostnameVerifier80);
        org.junit.Assert.assertNotNull(sSLSocketFactory81);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertNotNull(okHttpClient83);
        org.junit.Assert.assertNotNull(okHttpClient84);
        org.junit.Assert.assertNotNull(socket86);
        org.junit.Assert.assertEquals(socket86.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(socket87);
        org.junit.Assert.assertEquals(socket87.toString(), "Socket[unconnected]");
    }

    @Test
    public void test03011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03011");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier6 = okHttpClient0.hostnameVerifier;
        java.net.ProxySelector proxySelector7 = java.net.ProxySelector.getDefault();
        okHttpClient0.proxySelector = proxySelector7;
        java.net.URI uRI9 = null;
        java.net.SocketAddress socketAddress10 = null;
        java.io.IOException iOException11 = null;
        // The following exception was thrown during execution in test generation
        try {
// flaky:             proxySelector7.connectFailed(uRI9, socketAddress10, iOException11);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(hostnameVerifier6);
// flaky:         org.junit.Assert.assertNull(proxySelector7);
    }

    @Test
    public void test03012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03012");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setHostnameVerifier(hostnameVerifier4);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory6 = okHttpClient5.sslSocketFactory;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler8 = okHttpClient7.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray9 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet10 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet10, routeArray9);
        okHttpClient7.failedRoutes = routeSet10;
        okHttpClient5.failedRoutes = routeSet10;
        com.squareup.okhttp.ConnectionPool connectionPool14 = okHttpClient5.getConnectionPool();
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler16 = okHttpClient15.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray17 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet18 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet18, routeArray17);
        okHttpClient15.failedRoutes = routeSet18;
        java.net.Proxy proxy21 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler23 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient22.setCookieHandler(cookieHandler23);
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient22.setFollowProtocolRedirects(true);
        boolean boolean27 = proxy21.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient15.setProxy(proxy21);
        com.squareup.okhttp.OkHttpClient okHttpClient29 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler30 = okHttpClient29.getCookieHandler();
        boolean boolean31 = okHttpClient29.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient29.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool35 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int36 = connectionPool35.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient32.setConnectionPool(connectionPool35);
        com.squareup.okhttp.OkHttpClient okHttpClient38 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector39 = null;
        okHttpClient38.proxySelector = proxySelector39;
        java.net.ProxySelector proxySelector41 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient38.setProxySelector(proxySelector41);
        java.net.ProxySelector proxySelector43 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient44 = okHttpClient38.setProxySelector(proxySelector43);
        okHttpClient37.proxySelector = proxySelector43;
        okHttpClient15.proxySelector = proxySelector43;
        okHttpClient5.proxySelector = proxySelector43;
        java.net.Proxy proxy48 = okHttpClient5.proxy;
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(sSLSocketFactory6);
        org.junit.Assert.assertNull(cookieHandler8);
        org.junit.Assert.assertNotNull(routeArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(connectionPool14);
        org.junit.Assert.assertNull(cookieHandler16);
        org.junit.Assert.assertNotNull(routeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(proxy21);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNull(cookieHandler30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(okHttpClient37);
        org.junit.Assert.assertNotNull(okHttpClient42);
// flaky:         org.junit.Assert.assertNull(proxySelector43);
        org.junit.Assert.assertNotNull(okHttpClient44);
        org.junit.Assert.assertNull(proxy48);
    }

    @Test
    public void test03013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03013");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient3.setHostnameVerifier(hostnameVerifier4);
        java.net.ResponseCache responseCache6 = okHttpClient5.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator7 = okHttpClient5.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = okHttpClient5.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory9 = okHttpClient5.getSslSocketFactory();
        java.lang.String[] strArray10 = sSLSocketFactory9.getSupportedCipherSuites();
        java.lang.String[] strArray11 = sSLSocketFactory9.getDefaultCipherSuites();
        java.lang.String[] strArray12 = sSLSocketFactory9.getDefaultCipherSuites();
        java.lang.String[] strArray13 = sSLSocketFactory9.getDefaultCipherSuites();
        java.lang.String[] strArray14 = sSLSocketFactory9.getSupportedCipherSuites();
        java.lang.String[] strArray15 = sSLSocketFactory9.getDefaultCipherSuites();
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket18 = sSLSocketFactory9.createSocket("DIRECT", (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.net.UnknownHostException; message: DIRECT");
        } catch (java.net.UnknownHostException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(responseCache6);
        org.junit.Assert.assertNotNull(okAuthenticator7);
        org.junit.Assert.assertNull(hostnameVerifier8);
        org.junit.Assert.assertNotNull(sSLSocketFactory9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(strArray15);
    }

    @Test
    public void test03014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03014");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setHostnameVerifier(hostnameVerifier4);
        java.net.ResponseCache responseCache6 = okHttpClient5.responseCache;
        java.net.CookieHandler cookieHandler7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient5.setCookieHandler(cookieHandler7);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory9 = okHttpClient5.getSslSocketFactory();
        java.net.CookieHandler cookieHandler10 = okHttpClient5.getCookieHandler();
        boolean boolean11 = okHttpClient5.getFollowProtocolRedirects();
        boolean boolean12 = okHttpClient5.getFollowProtocolRedirects();
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(responseCache6);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertNull(sSLSocketFactory9);
        org.junit.Assert.assertNull(cookieHandler10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test03015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03015");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setHostnameVerifier(hostnameVerifier4);
        java.net.ProxySelector proxySelector6 = okHttpClient0.proxySelector;
        java.net.CookieHandler cookieHandler7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient0.setCookieHandler(cookieHandler7);
        com.squareup.okhttp.OkAuthenticator okAuthenticator9 = null;
        okHttpClient8.authenticator = okAuthenticator9;
        javax.net.ssl.HostnameVerifier hostnameVerifier11 = okHttpClient8.getHostnameVerifier();
        java.net.ResponseCache responseCache12 = null;
        okHttpClient8.responseCache = responseCache12;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier15 = okHttpClient14.hostnameVerifier;
        java.net.ResponseCache responseCache16 = okHttpClient14.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator17 = okHttpClient14.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient14.setFollowProtocolRedirects(true);
        java.net.ResponseCache responseCache20 = okHttpClient19.getResponseCache();
        java.net.Proxy proxy21 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress22 = proxy21.address();
        com.squareup.okhttp.OkHttpClient okHttpClient23 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector24 = null;
        okHttpClient23.proxySelector = proxySelector24;
        com.squareup.okhttp.ConnectionPool connectionPool26 = okHttpClient23.connectionPool;
        com.squareup.okhttp.ConnectionPool connectionPool27 = okHttpClient23.getConnectionPool();
        boolean boolean28 = proxy21.equals((java.lang.Object) okHttpClient23);
        com.squareup.okhttp.OkHttpClient okHttpClient29 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler30 = okHttpClient29.getCookieHandler();
        boolean boolean31 = okHttpClient29.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient29.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool35 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int36 = connectionPool35.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient32.setConnectionPool(connectionPool35);
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient23.setConnectionPool(connectionPool35);
        com.squareup.okhttp.OkHttpClient okHttpClient40 = okHttpClient38.setFollowProtocolRedirects(false);
        com.squareup.okhttp.ConnectionPool connectionPool43 = new com.squareup.okhttp.ConnectionPool((-1), (long) 0);
        com.squareup.okhttp.OkHttpClient okHttpClient44 = okHttpClient38.setConnectionPool(connectionPool43);
        okHttpClient19.connectionPool = connectionPool43;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache46 = okHttpClient19.okResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient47 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector48 = null;
        okHttpClient47.proxySelector = proxySelector48;
        java.net.ProxySelector proxySelector50 = okHttpClient47.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier51 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient52 = okHttpClient47.setHostnameVerifier(hostnameVerifier51);
        java.net.ResponseCache responseCache53 = okHttpClient52.responseCache;
        com.squareup.okhttp.OkHttpClient okHttpClient55 = okHttpClient52.setFollowProtocolRedirects(true);
        java.net.CookieHandler cookieHandler56 = okHttpClient55.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient57 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector58 = null;
        okHttpClient57.proxySelector = proxySelector58;
        java.net.ProxySelector proxySelector60 = okHttpClient57.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier61 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient62 = okHttpClient57.setHostnameVerifier(hostnameVerifier61);
        java.net.ResponseCache responseCache63 = okHttpClient62.responseCache;
        java.net.CookieHandler cookieHandler64 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient65 = okHttpClient62.setCookieHandler(cookieHandler64);
        java.net.CookieHandler cookieHandler66 = okHttpClient62.cookieHandler;
        com.squareup.okhttp.OkHttpClient okHttpClient67 = okHttpClient62.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient68 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector69 = null;
        okHttpClient68.proxySelector = proxySelector69;
        java.net.ProxySelector proxySelector71 = okHttpClient68.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier72 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient73 = okHttpClient68.setHostnameVerifier(hostnameVerifier72);
        boolean boolean74 = okHttpClient68.getFollowProtocolRedirects();
        com.squareup.okhttp.ConnectionPool connectionPool77 = new com.squareup.okhttp.ConnectionPool((int) 'a', (long) (byte) -1);
        com.squareup.okhttp.OkHttpClient okHttpClient78 = okHttpClient68.setConnectionPool(connectionPool77);
        com.squareup.okhttp.OkHttpClient okHttpClient79 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler80 = okHttpClient79.getCookieHandler();
        boolean boolean81 = okHttpClient79.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient82 = okHttpClient79.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier83 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient84 = okHttpClient82.setHostnameVerifier(hostnameVerifier83);
        java.net.ResponseCache responseCache85 = okHttpClient84.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator86 = okHttpClient84.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier87 = okHttpClient84.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory88 = okHttpClient84.getSslSocketFactory();
        okHttpClient68.sslSocketFactory = sSLSocketFactory88;
        okHttpClient62.sslSocketFactory = sSLSocketFactory88;
        com.squareup.okhttp.OkHttpClient okHttpClient91 = okHttpClient55.setSSLSocketFactory(sSLSocketFactory88);
        com.squareup.okhttp.OkHttpClient okHttpClient92 = okHttpClient19.setSSLSocketFactory(sSLSocketFactory88);
        okHttpClient8.sslSocketFactory = sSLSocketFactory88;
        java.net.InetAddress inetAddress94 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket96 = sSLSocketFactory88.createSocket(inetAddress94, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.net.ConnectException; message: Connection refused (Connection refused)");
        } catch (java.net.ConnectException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(proxySelector6);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertNull(hostnameVerifier11);
        org.junit.Assert.assertNull(hostnameVerifier15);
        org.junit.Assert.assertNull(responseCache16);
        org.junit.Assert.assertNull(okAuthenticator17);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNull(responseCache20);
        org.junit.Assert.assertNotNull(proxy21);
        org.junit.Assert.assertNull(socketAddress22);
        org.junit.Assert.assertNull(connectionPool26);
        org.junit.Assert.assertNull(connectionPool27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(cookieHandler30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(okHttpClient37);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNotNull(okHttpClient40);
        org.junit.Assert.assertNotNull(okHttpClient44);
        org.junit.Assert.assertNull(okResponseCache46);
        org.junit.Assert.assertNull(proxySelector50);
        org.junit.Assert.assertNotNull(okHttpClient52);
        org.junit.Assert.assertNull(responseCache53);
        org.junit.Assert.assertNotNull(okHttpClient55);
        org.junit.Assert.assertNull(cookieHandler56);
        org.junit.Assert.assertNull(proxySelector60);
        org.junit.Assert.assertNotNull(okHttpClient62);
        org.junit.Assert.assertNull(responseCache63);
        org.junit.Assert.assertNotNull(okHttpClient65);
        org.junit.Assert.assertNull(cookieHandler66);
        org.junit.Assert.assertNotNull(okHttpClient67);
        org.junit.Assert.assertNull(proxySelector71);
        org.junit.Assert.assertNotNull(okHttpClient73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(okHttpClient78);
        org.junit.Assert.assertNull(cookieHandler80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(okHttpClient82);
        org.junit.Assert.assertNotNull(okHttpClient84);
        org.junit.Assert.assertNull(responseCache85);
        org.junit.Assert.assertNotNull(okAuthenticator86);
        org.junit.Assert.assertNull(hostnameVerifier87);
        org.junit.Assert.assertNotNull(sSLSocketFactory88);
        org.junit.Assert.assertNotNull(okHttpClient91);
        org.junit.Assert.assertNotNull(okHttpClient92);
    }

    @Test
    public void test03016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03016");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        java.net.ResponseCache responseCache5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient0.setResponseCache(responseCache5);
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool9.evictAll();
        okHttpClient0.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector13 = null;
        okHttpClient12.proxySelector = proxySelector13;
        java.net.ProxySelector proxySelector15 = okHttpClient12.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient12.setHostnameVerifier(hostnameVerifier16);
        java.net.ResponseCache responseCache18 = okHttpClient17.responseCache;
        java.net.CookieHandler cookieHandler19 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient17.setCookieHandler(cookieHandler19);
        java.net.ResponseCache responseCache21 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient20.setResponseCache(responseCache21);
        com.squareup.okhttp.OkHttpClient okHttpClient23 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler24 = okHttpClient23.getCookieHandler();
        boolean boolean25 = okHttpClient23.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient23.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet27 = okHttpClient26.failedRoutes;
        boolean boolean28 = okHttpClient26.getFollowProtocolRedirects();
        java.net.ProxySelector proxySelector29 = okHttpClient26.proxySelector;
        okHttpClient22.proxySelector = proxySelector29;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler32 = okHttpClient31.getCookieHandler();
        boolean boolean33 = okHttpClient31.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator34 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient31.setAuthenticator(okAuthenticator34);
        java.net.ResponseCache responseCache36 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient31.setResponseCache(responseCache36);
        com.squareup.okhttp.ConnectionPool connectionPool40 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool40.evictAll();
        okHttpClient31.connectionPool = connectionPool40;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory43 = okHttpClient31.sslSocketFactory;
        com.squareup.okhttp.ConnectionPool connectionPool44 = okHttpClient31.getConnectionPool();
        java.net.CookieHandler cookieHandler45 = null;
        okHttpClient31.cookieHandler = cookieHandler45;
        com.squareup.okhttp.OkHttpClient okHttpClient47 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler48 = okHttpClient47.getCookieHandler();
        boolean boolean49 = okHttpClient47.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient47.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool53 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int54 = connectionPool53.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient55 = okHttpClient50.setConnectionPool(connectionPool53);
        com.squareup.okhttp.ConnectionPool connectionPool56 = okHttpClient50.connectionPool;
        java.net.ResponseCache responseCache57 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient58 = okHttpClient50.setResponseCache(responseCache57);
        com.squareup.okhttp.OkAuthenticator okAuthenticator59 = okHttpClient50.getAuthenticator();
        com.squareup.okhttp.OkHttpClient okHttpClient60 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler61 = okHttpClient60.getCookieHandler();
        boolean boolean62 = okHttpClient60.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator63 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient64 = okHttpClient60.setAuthenticator(okAuthenticator63);
        java.net.ResponseCache responseCache65 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient66 = okHttpClient60.setResponseCache(responseCache65);
        com.squareup.okhttp.ConnectionPool connectionPool69 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool69.evictAll();
        okHttpClient60.connectionPool = connectionPool69;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory72 = okHttpClient60.sslSocketFactory;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory73 = null;
        okHttpClient60.sslSocketFactory = sSLSocketFactory73;
        java.net.ProxySelector proxySelector75 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient76 = okHttpClient60.setProxySelector(proxySelector75);
        com.squareup.okhttp.OkHttpClient okHttpClient77 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector78 = null;
        okHttpClient77.proxySelector = proxySelector78;
        java.net.ProxySelector proxySelector80 = okHttpClient77.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier81 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient82 = okHttpClient77.setHostnameVerifier(hostnameVerifier81);
        java.net.ProxySelector proxySelector83 = java.net.ProxySelector.getDefault();
        okHttpClient77.proxySelector = proxySelector83;
        okHttpClient76.proxySelector = proxySelector83;
        com.squareup.okhttp.OkHttpClient okHttpClient86 = okHttpClient50.setProxySelector(proxySelector83);
        okHttpClient31.proxySelector = proxySelector83;
        okHttpClient22.proxySelector = proxySelector83;
        okHttpClient0.proxySelector = proxySelector83;
        com.squareup.okhttp.OkHttpClient okHttpClient91 = okHttpClient0.setFollowProtocolRedirects(false);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory92 = okHttpClient0.sslSocketFactory;
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient6);
        org.junit.Assert.assertNull(proxySelector15);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNull(responseCache18);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNull(cookieHandler24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNotNull(routeSet27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
// flaky:         org.junit.Assert.assertNull(proxySelector29);
        org.junit.Assert.assertNull(cookieHandler32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNotNull(okHttpClient37);
        org.junit.Assert.assertNull(sSLSocketFactory43);
        org.junit.Assert.assertNotNull(connectionPool44);
        org.junit.Assert.assertNull(cookieHandler48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(okHttpClient50);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(okHttpClient55);
        org.junit.Assert.assertNotNull(connectionPool56);
        org.junit.Assert.assertNotNull(okHttpClient58);
        org.junit.Assert.assertNotNull(okAuthenticator59);
        org.junit.Assert.assertNull(cookieHandler61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(okHttpClient64);
        org.junit.Assert.assertNotNull(okHttpClient66);
        org.junit.Assert.assertNull(sSLSocketFactory72);
// flaky:         org.junit.Assert.assertNull(proxySelector75);
        org.junit.Assert.assertNotNull(okHttpClient76);
        org.junit.Assert.assertNull(proxySelector80);
        org.junit.Assert.assertNotNull(okHttpClient82);
// flaky:         org.junit.Assert.assertNull(proxySelector83);
        org.junit.Assert.assertNotNull(okHttpClient86);
        org.junit.Assert.assertNotNull(okHttpClient91);
        org.junit.Assert.assertNull(sSLSocketFactory92);
    }

    @Test
    public void test03017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03017");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet4 = okHttpClient3.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient3.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector7 = null;
        okHttpClient6.proxySelector = proxySelector7;
        java.net.ProxySelector proxySelector9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient6.setProxySelector(proxySelector9);
        java.net.ProxySelector proxySelector11 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient6.setProxySelector(proxySelector11);
        java.net.ProxySelector.setDefault(proxySelector11);
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient5.setProxySelector(proxySelector11);
        java.net.ResponseCache responseCache15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient14.setResponseCache(responseCache15);
        java.net.ProxySelector proxySelector17 = okHttpClient14.getProxySelector();
        java.util.Set<com.squareup.okhttp.Route> routeSet18 = okHttpClient14.failedRoutes;
        java.net.ProxySelector proxySelector19 = okHttpClient14.proxySelector;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass20 = proxySelector19.getClass();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertNotNull(routeSet4);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNotNull(okHttpClient10);
// flaky:         org.junit.Assert.assertNull(proxySelector11);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertNotNull(okHttpClient14);
        org.junit.Assert.assertNotNull(okHttpClient16);
// flaky:         org.junit.Assert.assertNull(proxySelector17);
        org.junit.Assert.assertNotNull(routeSet18);
// flaky:         org.junit.Assert.assertNull(proxySelector19);
    }

    @Test
    public void test03018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03018");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setHostnameVerifier(hostnameVerifier4);
        boolean boolean6 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool((int) 'a', (long) (byte) -1);
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient0.setConnectionPool(connectionPool9);
        javax.net.ssl.HostnameVerifier hostnameVerifier11 = okHttpClient10.hostnameVerifier;
        com.squareup.okhttp.ConnectionPool connectionPool14 = new com.squareup.okhttp.ConnectionPool((int) (byte) 100, 0L);
        okHttpClient10.connectionPool = connectionPool14;
        com.squareup.okhttp.Connection connection16 = null;
        // The following exception was thrown during execution in test generation
        try {
            connectionPool14.recycle(connection16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertNull(hostnameVerifier11);
    }

    @Test
    public void test03019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03019");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool6 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int7 = connectionPool6.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient3.setConnectionPool(connectionPool6);
        com.squareup.okhttp.ConnectionPool connectionPool9 = okHttpClient3.connectionPool;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector11 = null;
        okHttpClient10.proxySelector = proxySelector11;
        java.net.ProxySelector proxySelector13 = okHttpClient10.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient10.setHostnameVerifier(hostnameVerifier14);
        java.net.ProxySelector proxySelector16 = java.net.ProxySelector.getDefault();
        okHttpClient10.proxySelector = proxySelector16;
        java.net.ProxySelector.setDefault(proxySelector16);
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient3.setProxySelector(proxySelector16);
        boolean boolean20 = okHttpClient3.getFollowProtocolRedirects();
        java.net.ResponseCache responseCache21 = okHttpClient3.getResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector23 = null;
        okHttpClient22.proxySelector = proxySelector23;
        java.net.ResponseCache responseCache25 = okHttpClient22.responseCache;
        java.net.ProxySelector proxySelector26 = okHttpClient22.getProxySelector();
        com.squareup.okhttp.OkHttpClient okHttpClient27 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector28 = null;
        okHttpClient27.proxySelector = proxySelector28;
        java.net.ProxySelector proxySelector30 = okHttpClient27.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier31 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient27.setHostnameVerifier(hostnameVerifier31);
        boolean boolean33 = okHttpClient27.getFollowProtocolRedirects();
        com.squareup.okhttp.ConnectionPool connectionPool36 = new com.squareup.okhttp.ConnectionPool((int) 'a', (long) (byte) -1);
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient27.setConnectionPool(connectionPool36);
        com.squareup.okhttp.OkHttpClient okHttpClient38 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler39 = okHttpClient38.getCookieHandler();
        boolean boolean40 = okHttpClient38.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient41 = okHttpClient38.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier42 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient43 = okHttpClient41.setHostnameVerifier(hostnameVerifier42);
        java.net.ResponseCache responseCache44 = okHttpClient43.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator45 = okHttpClient43.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier46 = okHttpClient43.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory47 = okHttpClient43.getSslSocketFactory();
        okHttpClient27.sslSocketFactory = sSLSocketFactory47;
        java.net.Socket socket49 = sSLSocketFactory47.createSocket();
        java.lang.String[] strArray50 = sSLSocketFactory47.getDefaultCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient51 = okHttpClient22.setSSLSocketFactory(sSLSocketFactory47);
        java.net.Socket socket52 = sSLSocketFactory47.createSocket();
        okHttpClient3.sslSocketFactory = sSLSocketFactory47;
        com.squareup.okhttp.OkHttpClient okHttpClient54 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector55 = null;
        okHttpClient54.proxySelector = proxySelector55;
        java.net.ProxySelector proxySelector57 = okHttpClient54.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier58 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient59 = okHttpClient54.setHostnameVerifier(hostnameVerifier58);
        java.net.ProxySelector proxySelector60 = java.net.ProxySelector.getDefault();
        okHttpClient54.proxySelector = proxySelector60;
        java.net.CookieHandler cookieHandler62 = null;
        okHttpClient54.cookieHandler = cookieHandler62;
        com.squareup.okhttp.OkHttpClient okHttpClient64 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler65 = okHttpClient64.getCookieHandler();
        boolean boolean66 = okHttpClient64.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient67 = okHttpClient64.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier68 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient69 = okHttpClient67.setHostnameVerifier(hostnameVerifier68);
        java.net.ResponseCache responseCache70 = okHttpClient69.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator71 = okHttpClient69.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier72 = okHttpClient69.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory73 = okHttpClient69.getSslSocketFactory();
        java.lang.String[] strArray74 = sSLSocketFactory73.getSupportedCipherSuites();
        java.lang.String[] strArray75 = sSLSocketFactory73.getDefaultCipherSuites();
        okHttpClient54.sslSocketFactory = sSLSocketFactory73;
        java.lang.String[] strArray77 = sSLSocketFactory73.getDefaultCipherSuites();
        java.net.Socket socket78 = sSLSocketFactory73.createSocket();
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket82 = sSLSocketFactory47.createSocket(socket78, "DIRECT", (int) '4', true);
            org.junit.Assert.fail("Expected exception of type java.net.SocketException; message: Underlying socket is not connected");
        } catch (java.net.SocketException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNull(proxySelector13);
        org.junit.Assert.assertNotNull(okHttpClient15);
// flaky:         org.junit.Assert.assertNull(proxySelector16);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(responseCache21);
        org.junit.Assert.assertNull(responseCache25);
        org.junit.Assert.assertNull(proxySelector26);
        org.junit.Assert.assertNull(proxySelector30);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(okHttpClient37);
        org.junit.Assert.assertNull(cookieHandler39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(okHttpClient41);
        org.junit.Assert.assertNotNull(okHttpClient43);
        org.junit.Assert.assertNull(responseCache44);
        org.junit.Assert.assertNotNull(okAuthenticator45);
        org.junit.Assert.assertNull(hostnameVerifier46);
        org.junit.Assert.assertNotNull(sSLSocketFactory47);
        org.junit.Assert.assertNotNull(socket49);
        org.junit.Assert.assertEquals(socket49.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(okHttpClient51);
        org.junit.Assert.assertNotNull(socket52);
        org.junit.Assert.assertEquals(socket52.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNull(proxySelector57);
        org.junit.Assert.assertNotNull(okHttpClient59);
// flaky:         org.junit.Assert.assertNull(proxySelector60);
        org.junit.Assert.assertNull(cookieHandler65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(okHttpClient67);
        org.junit.Assert.assertNotNull(okHttpClient69);
        org.junit.Assert.assertNull(responseCache70);
        org.junit.Assert.assertNotNull(okAuthenticator71);
        org.junit.Assert.assertNull(hostnameVerifier72);
        org.junit.Assert.assertNotNull(sSLSocketFactory73);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(socket78);
        org.junit.Assert.assertEquals(socket78.toString(), "Socket[unconnected]");
    }

    @Test
    public void test03020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03020");
        java.net.Proxy proxy0 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient1 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler2 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient1.setCookieHandler(cookieHandler2);
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient1.setFollowProtocolRedirects(true);
        boolean boolean6 = proxy0.equals((java.lang.Object) true);
        java.lang.String str7 = proxy0.toString();
        java.net.Proxy.Type type8 = proxy0.type();
        java.net.SocketAddress socketAddress9 = proxy0.address();
        java.net.SocketAddress socketAddress10 = proxy0.address();
        java.net.Proxy.Type type11 = proxy0.type();
        java.lang.String str12 = proxy0.toString();
        org.junit.Assert.assertNotNull(proxy0);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "DIRECT" + "'", str7, "DIRECT");
        org.junit.Assert.assertTrue("'" + type8 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type8.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress9);
        org.junit.Assert.assertNull(socketAddress10);
        org.junit.Assert.assertTrue("'" + type11 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type11.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "DIRECT" + "'", str12, "DIRECT");
    }

    @Test
    public void test03021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03021");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray2 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet3 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet3, routeArray2);
        okHttpClient0.failedRoutes = routeSet3;
        java.net.Proxy proxy6 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient7.setCookieHandler(cookieHandler8);
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient7.setFollowProtocolRedirects(true);
        boolean boolean12 = proxy6.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient0.setProxy(proxy6);
        com.squareup.okhttp.OkAuthenticator okAuthenticator14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient13.setAuthenticator(okAuthenticator14);
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient15.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler18 = okHttpClient17.getCookieHandler();
        java.net.ResponseCache responseCache19 = null;
        okHttpClient17.responseCache = responseCache19;
        boolean boolean21 = okHttpClient17.followProtocolRedirects;
        java.net.CookieHandler cookieHandler22 = okHttpClient17.cookieHandler;
        com.squareup.okhttp.ConnectionPool connectionPool23 = okHttpClient17.getConnectionPool();
        com.squareup.okhttp.OkHttpClient okHttpClient24 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector25 = null;
        okHttpClient24.proxySelector = proxySelector25;
        java.net.ProxySelector proxySelector27 = okHttpClient24.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier28 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient24.setHostnameVerifier(hostnameVerifier28);
        java.net.ProxySelector proxySelector30 = okHttpClient24.proxySelector;
        java.net.ResponseCache responseCache31 = okHttpClient24.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet32 = okHttpClient24.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient33 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler34 = okHttpClient33.getCookieHandler();
        boolean boolean35 = okHttpClient33.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient33.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool39 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int40 = connectionPool39.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient41 = okHttpClient36.setConnectionPool(connectionPool39);
        com.squareup.okhttp.OkHttpClient okHttpClient42 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector43 = null;
        okHttpClient42.proxySelector = proxySelector43;
        java.net.ProxySelector proxySelector45 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient46 = okHttpClient42.setProxySelector(proxySelector45);
        java.net.ProxySelector proxySelector47 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient48 = okHttpClient42.setProxySelector(proxySelector47);
        okHttpClient41.proxySelector = proxySelector47;
        javax.net.ssl.HostnameVerifier hostnameVerifier50 = okHttpClient41.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient51 = okHttpClient24.setHostnameVerifier(hostnameVerifier50);
        okHttpClient17.hostnameVerifier = hostnameVerifier50;
        okHttpClient16.hostnameVerifier = hostnameVerifier50;
        com.squareup.okhttp.ConnectionPool connectionPool56 = new com.squareup.okhttp.ConnectionPool((int) 'a', 0L);
        int int57 = connectionPool56.getHttpConnectionCount();
        connectionPool56.evictAll();
        com.squareup.okhttp.OkHttpClient okHttpClient59 = okHttpClient16.setConnectionPool(connectionPool56);
        com.squareup.okhttp.ConnectionPool connectionPool60 = okHttpClient59.connectionPool;
        com.squareup.okhttp.Connection connection61 = null;
        // The following exception was thrown during execution in test generation
        try {
            connectionPool60.maybeShare(connection61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertNotNull(routeArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(proxy6);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNull(cookieHandler18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(cookieHandler22);
        org.junit.Assert.assertNull(connectionPool23);
        org.junit.Assert.assertNull(proxySelector27);
        org.junit.Assert.assertNotNull(okHttpClient29);
        org.junit.Assert.assertNull(proxySelector30);
        org.junit.Assert.assertNull(responseCache31);
        org.junit.Assert.assertNotNull(routeSet32);
        org.junit.Assert.assertNull(cookieHandler34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(okHttpClient41);
        org.junit.Assert.assertNotNull(okHttpClient46);
// flaky:         org.junit.Assert.assertNull(proxySelector47);
        org.junit.Assert.assertNotNull(okHttpClient48);
        org.junit.Assert.assertNotNull(hostnameVerifier50);
        org.junit.Assert.assertNotNull(okHttpClient51);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(okHttpClient59);
        org.junit.Assert.assertNotNull(connectionPool60);
    }

    @Test
    public void test03022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03022");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setHostnameVerifier(hostnameVerifier4);
        boolean boolean6 = okHttpClient0.getFollowProtocolRedirects();
        java.net.ProxySelector proxySelector7 = okHttpClient0.proxySelector;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector9 = null;
        okHttpClient8.proxySelector = proxySelector9;
        java.net.ProxySelector proxySelector11 = okHttpClient8.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient8.setHostnameVerifier(hostnameVerifier12);
        boolean boolean14 = okHttpClient8.getFollowProtocolRedirects();
        com.squareup.okhttp.ConnectionPool connectionPool17 = new com.squareup.okhttp.ConnectionPool((int) 'a', (long) (byte) -1);
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient8.setConnectionPool(connectionPool17);
        com.squareup.okhttp.OkHttpClient okHttpClient19 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler20 = okHttpClient19.getCookieHandler();
        boolean boolean21 = okHttpClient19.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient19.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier23 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient22.setHostnameVerifier(hostnameVerifier23);
        java.net.ResponseCache responseCache25 = okHttpClient24.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator26 = okHttpClient24.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier27 = okHttpClient24.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory28 = okHttpClient24.getSslSocketFactory();
        okHttpClient8.sslSocketFactory = sSLSocketFactory28;
        okHttpClient0.sslSocketFactory = sSLSocketFactory28;
        java.net.InetAddress inetAddress33 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket35 = sSLSocketFactory28.createSocket("", (int) (short) 100, inetAddress33, 0);
            org.junit.Assert.fail("Expected exception of type java.net.ConnectException; message: Connection refused (Connection refused)");
        } catch (java.net.ConnectException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(proxySelector7);
        org.junit.Assert.assertNull(proxySelector11);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNull(cookieHandler20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNull(responseCache25);
        org.junit.Assert.assertNotNull(okAuthenticator26);
        org.junit.Assert.assertNull(hostnameVerifier27);
        org.junit.Assert.assertNotNull(sSLSocketFactory28);
    }

    @Test
    public void test03023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03023");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setHostnameVerifier(hostnameVerifier4);
        java.net.ResponseCache responseCache6 = okHttpClient5.responseCache;
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool((int) '4', 100L);
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient5.setConnectionPool(connectionPool9);
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient5.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient12 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler13 = okHttpClient12.getCookieHandler();
        boolean boolean14 = okHttpClient12.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient12.setAuthenticator(okAuthenticator15);
        java.net.ResponseCache responseCache17 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient12.setResponseCache(responseCache17);
        com.squareup.okhttp.ConnectionPool connectionPool21 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool21.evictAll();
        okHttpClient12.connectionPool = connectionPool21;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory24 = okHttpClient12.sslSocketFactory;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory25 = null;
        okHttpClient12.sslSocketFactory = sSLSocketFactory25;
        java.net.ProxySelector proxySelector27 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient12.setProxySelector(proxySelector27);
        java.net.CookieHandler cookieHandler29 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient30 = okHttpClient12.setCookieHandler(cookieHandler29);
        com.squareup.okhttp.OkHttpClient okHttpClient31 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler32 = okHttpClient31.getCookieHandler();
        boolean boolean33 = okHttpClient31.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient31.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier35 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient34.setHostnameVerifier(hostnameVerifier35);
        java.net.ResponseCache responseCache37 = okHttpClient36.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator38 = okHttpClient36.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier39 = okHttpClient36.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory40 = okHttpClient36.getSslSocketFactory();
        java.lang.String[] strArray41 = sSLSocketFactory40.getSupportedCipherSuites();
        java.lang.String[] strArray42 = sSLSocketFactory40.getDefaultCipherSuites();
        java.lang.String[] strArray43 = sSLSocketFactory40.getDefaultCipherSuites();
        java.lang.String[] strArray44 = sSLSocketFactory40.getDefaultCipherSuites();
        java.lang.String[] strArray45 = sSLSocketFactory40.getSupportedCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient46 = okHttpClient30.setSSLSocketFactory(sSLSocketFactory40);
        java.net.CookieHandler cookieHandler47 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient48 = okHttpClient46.setCookieHandler(cookieHandler47);
        com.squareup.okhttp.OkHttpClient okHttpClient49 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler50 = okHttpClient49.getCookieHandler();
        boolean boolean51 = okHttpClient49.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient52 = okHttpClient49.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool55 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int56 = connectionPool55.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient57 = okHttpClient52.setConnectionPool(connectionPool55);
        com.squareup.okhttp.OkHttpClient okHttpClient58 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector59 = null;
        okHttpClient58.proxySelector = proxySelector59;
        java.net.ProxySelector proxySelector61 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient62 = okHttpClient58.setProxySelector(proxySelector61);
        java.net.ProxySelector proxySelector63 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient64 = okHttpClient58.setProxySelector(proxySelector63);
        okHttpClient57.proxySelector = proxySelector63;
        com.squareup.okhttp.OkHttpClient okHttpClient66 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler67 = okHttpClient66.getCookieHandler();
        boolean boolean68 = okHttpClient66.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator69 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient70 = okHttpClient66.setAuthenticator(okAuthenticator69);
        com.squareup.okhttp.OkHttpClient okHttpClient71 = okHttpClient66.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier72 = okHttpClient66.hostnameVerifier;
        java.net.ProxySelector proxySelector73 = java.net.ProxySelector.getDefault();
        okHttpClient66.proxySelector = proxySelector73;
        com.squareup.okhttp.OkHttpClient okHttpClient75 = okHttpClient66.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient76 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler77 = okHttpClient76.getCookieHandler();
        boolean boolean78 = okHttpClient76.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient79 = okHttpClient76.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool82 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int83 = connectionPool82.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient84 = okHttpClient79.setConnectionPool(connectionPool82);
        com.squareup.okhttp.ConnectionPool connectionPool85 = okHttpClient79.connectionPool;
        java.net.ResponseCache responseCache86 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient87 = okHttpClient79.setResponseCache(responseCache86);
        com.squareup.okhttp.OkAuthenticator okAuthenticator88 = okHttpClient79.getAuthenticator();
        okHttpClient75.authenticator = okAuthenticator88;
        com.squareup.okhttp.OkHttpClient okHttpClient90 = okHttpClient57.setAuthenticator(okAuthenticator88);
        okHttpClient46.authenticator = okAuthenticator88;
        okHttpClient5.authenticator = okAuthenticator88;
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(responseCache6);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(cookieHandler13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNull(sSLSocketFactory24);
// flaky:         org.junit.Assert.assertNull(proxySelector27);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNotNull(okHttpClient30);
        org.junit.Assert.assertNull(cookieHandler32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNull(responseCache37);
        org.junit.Assert.assertNotNull(okAuthenticator38);
        org.junit.Assert.assertNull(hostnameVerifier39);
        org.junit.Assert.assertNotNull(sSLSocketFactory40);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(okHttpClient46);
        org.junit.Assert.assertNotNull(okHttpClient48);
        org.junit.Assert.assertNull(cookieHandler50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(okHttpClient52);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(okHttpClient57);
        org.junit.Assert.assertNotNull(okHttpClient62);
// flaky:         org.junit.Assert.assertNull(proxySelector63);
        org.junit.Assert.assertNotNull(okHttpClient64);
        org.junit.Assert.assertNull(cookieHandler67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(okHttpClient70);
        org.junit.Assert.assertNotNull(okHttpClient71);
        org.junit.Assert.assertNull(hostnameVerifier72);
// flaky:         org.junit.Assert.assertNull(proxySelector73);
        org.junit.Assert.assertNotNull(okHttpClient75);
        org.junit.Assert.assertNull(cookieHandler77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(okHttpClient79);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertNotNull(okHttpClient84);
        org.junit.Assert.assertNotNull(connectionPool85);
        org.junit.Assert.assertNotNull(okHttpClient87);
        org.junit.Assert.assertNotNull(okAuthenticator88);
        org.junit.Assert.assertNotNull(okHttpClient90);
    }

    @Test
    public void test03024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03024");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        java.net.ResponseCache responseCache5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient0.setResponseCache(responseCache5);
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool9.evictAll();
        okHttpClient0.connectionPool = connectionPool9;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory12 = okHttpClient0.sslSocketFactory;
        java.net.ResponseCache responseCache13 = null;
        okHttpClient0.responseCache = responseCache13;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache15 = okHttpClient0.okResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler18 = okHttpClient17.getCookieHandler();
        boolean boolean19 = okHttpClient17.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator20 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient17.setAuthenticator(okAuthenticator20);
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient17.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier23 = okHttpClient22.getHostnameVerifier();
        javax.net.ssl.HostnameVerifier hostnameVerifier24 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient22.setHostnameVerifier(hostnameVerifier24);
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient22.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool27 = okHttpClient22.connectionPool;
        java.net.Proxy proxy28 = okHttpClient22.proxy;
        java.net.ResponseCache responseCache29 = okHttpClient22.responseCache;
        com.squareup.okhttp.OkHttpClient okHttpClient30 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler31 = okHttpClient30.getCookieHandler();
        boolean boolean32 = okHttpClient30.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient33 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler34 = okHttpClient33.getCookieHandler();
        boolean boolean35 = okHttpClient33.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient33.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet37 = okHttpClient36.failedRoutes;
        boolean boolean38 = okHttpClient36.getFollowProtocolRedirects();
        java.net.Proxy proxy39 = java.net.Proxy.NO_PROXY;
        okHttpClient36.proxy = proxy39;
        okHttpClient30.proxy = proxy39;
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient30.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet43 = okHttpClient42.failedRoutes;
        boolean boolean44 = okHttpClient42.getFollowProtocolRedirects();
        javax.net.ssl.HostnameVerifier hostnameVerifier45 = okHttpClient42.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient46 = okHttpClient22.setHostnameVerifier(hostnameVerifier45);
        com.squareup.okhttp.OkHttpClient okHttpClient47 = okHttpClient0.setHostnameVerifier(hostnameVerifier45);
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient6);
        org.junit.Assert.assertNull(sSLSocketFactory12);
        org.junit.Assert.assertNull(okResponseCache15);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNull(cookieHandler18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNotNull(hostnameVerifier23);
        org.junit.Assert.assertNotNull(okHttpClient25);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNotNull(connectionPool27);
        org.junit.Assert.assertNull(proxy28);
        org.junit.Assert.assertNull(responseCache29);
        org.junit.Assert.assertNull(cookieHandler31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(cookieHandler34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNotNull(routeSet37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(proxy39);
        org.junit.Assert.assertNotNull(okHttpClient42);
        org.junit.Assert.assertNotNull(routeSet43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(hostnameVerifier45);
        org.junit.Assert.assertNotNull(okHttpClient46);
        org.junit.Assert.assertNotNull(okHttpClient47);
    }

    @Test
    public void test03025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03025");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        com.squareup.okhttp.OkAuthenticator okAuthenticator4 = okHttpClient0.authenticator;
        com.squareup.okhttp.ConnectionPool connectionPool5 = okHttpClient0.getConnectionPool();
        java.net.CookieHandler cookieHandler6 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector8 = null;
        okHttpClient7.proxySelector = proxySelector8;
        java.net.ProxySelector proxySelector10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient7.setProxySelector(proxySelector10);
        java.net.ProxySelector proxySelector12 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient7.setProxySelector(proxySelector12);
        java.net.ResponseCache responseCache14 = okHttpClient7.responseCache;
        java.net.ProxySelector proxySelector15 = okHttpClient7.getProxySelector();
        java.net.ProxySelector proxySelector16 = okHttpClient7.proxySelector;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient0.setProxySelector(proxySelector16);
        java.net.CookieHandler cookieHandler18 = okHttpClient17.cookieHandler;
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNull(okAuthenticator4);
        org.junit.Assert.assertNull(connectionPool5);
        org.junit.Assert.assertNull(cookieHandler6);
        org.junit.Assert.assertNotNull(okHttpClient11);
// flaky:         org.junit.Assert.assertNull(proxySelector12);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNull(responseCache14);
// flaky:         org.junit.Assert.assertNull(proxySelector15);
// flaky:         org.junit.Assert.assertNull(proxySelector16);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNull(cookieHandler18);
    }

    @Test
    public void test03026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03026");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        java.net.ResponseCache responseCache5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient0.setResponseCache(responseCache5);
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool9.evictAll();
        okHttpClient0.connectionPool = connectionPool9;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory12 = okHttpClient0.sslSocketFactory;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory13 = null;
        okHttpClient0.sslSocketFactory = sSLSocketFactory13;
        java.net.ProxySelector proxySelector15 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient0.setProxySelector(proxySelector15);
        java.net.CookieHandler cookieHandler17 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient0.setCookieHandler(cookieHandler17);
        com.squareup.okhttp.OkHttpClient okHttpClient19 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector20 = null;
        okHttpClient19.proxySelector = proxySelector20;
        java.net.ProxySelector proxySelector22 = okHttpClient19.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier23 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient19.setHostnameVerifier(hostnameVerifier23);
        java.net.ResponseCache responseCache25 = okHttpClient24.responseCache;
        com.squareup.okhttp.ConnectionPool connectionPool28 = new com.squareup.okhttp.ConnectionPool((int) '4', 100L);
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient24.setConnectionPool(connectionPool28);
        com.squareup.okhttp.OkHttpClient okHttpClient30 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler31 = okHttpClient30.getCookieHandler();
        boolean boolean32 = okHttpClient30.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator33 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient30.setAuthenticator(okAuthenticator33);
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient30.copyWithDefaults();
        java.net.CookieHandler cookieHandler36 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient30.setCookieHandler(cookieHandler36);
        com.squareup.okhttp.OkAuthenticator okAuthenticator38 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient37.setAuthenticator(okAuthenticator38);
        com.squareup.okhttp.OkHttpClient okHttpClient40 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler41 = okHttpClient40.getCookieHandler();
        boolean boolean42 = okHttpClient40.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient43 = okHttpClient40.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool46 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int47 = connectionPool46.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient48 = okHttpClient43.setConnectionPool(connectionPool46);
        com.squareup.okhttp.ConnectionPool connectionPool49 = okHttpClient43.connectionPool;
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient37.setConnectionPool(connectionPool49);
        com.squareup.okhttp.Address address51 = null;
        com.squareup.okhttp.Connection connection52 = connectionPool49.get(address51);
        com.squareup.okhttp.OkHttpClient okHttpClient53 = okHttpClient29.setConnectionPool(connectionPool49);
        java.net.ProxySelector proxySelector54 = okHttpClient29.proxySelector;
        com.squareup.okhttp.OkHttpClient okHttpClient55 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector56 = null;
        okHttpClient55.proxySelector = proxySelector56;
        java.net.ProxySelector proxySelector58 = okHttpClient55.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier59 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient60 = okHttpClient55.setHostnameVerifier(hostnameVerifier59);
        java.net.ProxySelector proxySelector61 = okHttpClient55.proxySelector;
        java.net.ResponseCache responseCache62 = okHttpClient55.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet63 = okHttpClient55.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient64 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler65 = okHttpClient64.getCookieHandler();
        boolean boolean66 = okHttpClient64.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient67 = okHttpClient64.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool70 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int71 = connectionPool70.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient72 = okHttpClient67.setConnectionPool(connectionPool70);
        com.squareup.okhttp.OkHttpClient okHttpClient73 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector74 = null;
        okHttpClient73.proxySelector = proxySelector74;
        java.net.ProxySelector proxySelector76 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient77 = okHttpClient73.setProxySelector(proxySelector76);
        java.net.ProxySelector proxySelector78 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient79 = okHttpClient73.setProxySelector(proxySelector78);
        okHttpClient72.proxySelector = proxySelector78;
        javax.net.ssl.HostnameVerifier hostnameVerifier81 = okHttpClient72.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient82 = okHttpClient55.setHostnameVerifier(hostnameVerifier81);
        okHttpClient29.hostnameVerifier = hostnameVerifier81;
        com.squareup.okhttp.OkHttpClient okHttpClient84 = okHttpClient18.setHostnameVerifier(hostnameVerifier81);
        boolean boolean85 = okHttpClient84.getFollowProtocolRedirects();
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient6);
        org.junit.Assert.assertNull(sSLSocketFactory12);
// flaky:         org.junit.Assert.assertNull(proxySelector15);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNull(proxySelector22);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNull(responseCache25);
        org.junit.Assert.assertNotNull(okHttpClient29);
        org.junit.Assert.assertNull(cookieHandler31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNotNull(okHttpClient37);
        org.junit.Assert.assertNotNull(okHttpClient39);
        org.junit.Assert.assertNull(cookieHandler41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(okHttpClient43);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(okHttpClient48);
        org.junit.Assert.assertNotNull(connectionPool49);
        org.junit.Assert.assertNotNull(okHttpClient50);
        org.junit.Assert.assertNull(connection52);
        org.junit.Assert.assertNotNull(okHttpClient53);
        org.junit.Assert.assertNull(proxySelector54);
        org.junit.Assert.assertNull(proxySelector58);
        org.junit.Assert.assertNotNull(okHttpClient60);
        org.junit.Assert.assertNull(proxySelector61);
        org.junit.Assert.assertNull(responseCache62);
        org.junit.Assert.assertNotNull(routeSet63);
        org.junit.Assert.assertNull(cookieHandler65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(okHttpClient67);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNotNull(okHttpClient72);
        org.junit.Assert.assertNotNull(okHttpClient77);
// flaky:         org.junit.Assert.assertNull(proxySelector78);
        org.junit.Assert.assertNotNull(okHttpClient79);
        org.junit.Assert.assertNotNull(hostnameVerifier81);
        org.junit.Assert.assertNotNull(okHttpClient82);
        org.junit.Assert.assertNotNull(okHttpClient84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
    }

    @Test
    public void test03027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03027");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool6 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int7 = connectionPool6.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient3.setConnectionPool(connectionPool6);
        com.squareup.okhttp.OkHttpClient okHttpClient9 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler10 = okHttpClient9.getCookieHandler();
        boolean boolean11 = okHttpClient9.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient9.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient12.setHostnameVerifier(hostnameVerifier13);
        java.net.ResponseCache responseCache15 = okHttpClient14.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator16 = okHttpClient14.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier17 = okHttpClient14.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory18 = okHttpClient14.getSslSocketFactory();
        java.lang.String[] strArray19 = sSLSocketFactory18.getSupportedCipherSuites();
        java.lang.String[] strArray20 = sSLSocketFactory18.getDefaultCipherSuites();
        java.lang.String[] strArray21 = sSLSocketFactory18.getDefaultCipherSuites();
        java.lang.String[] strArray22 = sSLSocketFactory18.getDefaultCipherSuites();
        java.lang.String[] strArray23 = sSLSocketFactory18.getSupportedCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient3.setSSLSocketFactory(sSLSocketFactory18);
        com.squareup.okhttp.ConnectionPool connectionPool27 = new com.squareup.okhttp.ConnectionPool(100, (long) 100);
        okHttpClient24.connectionPool = connectionPool27;
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient24.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool30 = okHttpClient24.connectionPool;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler32 = okHttpClient31.getCookieHandler();
        boolean boolean33 = okHttpClient31.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient31.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool37 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int38 = connectionPool37.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient34.setConnectionPool(connectionPool37);
        com.squareup.okhttp.OkHttpClient okHttpClient40 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler41 = okHttpClient40.getCookieHandler();
        boolean boolean42 = okHttpClient40.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient43 = okHttpClient40.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool46 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int47 = connectionPool46.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient48 = okHttpClient43.setConnectionPool(connectionPool46);
        com.squareup.okhttp.OkHttpClient okHttpClient49 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector50 = null;
        okHttpClient49.proxySelector = proxySelector50;
        java.net.ProxySelector proxySelector52 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient53 = okHttpClient49.setProxySelector(proxySelector52);
        java.net.ProxySelector proxySelector54 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient55 = okHttpClient49.setProxySelector(proxySelector54);
        okHttpClient48.proxySelector = proxySelector54;
        com.squareup.okhttp.OkHttpClient okHttpClient57 = okHttpClient34.setProxySelector(proxySelector54);
        java.net.CookieHandler cookieHandler58 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient59 = okHttpClient57.setCookieHandler(cookieHandler58);
        com.squareup.okhttp.OkAuthenticator okAuthenticator60 = okHttpClient59.getAuthenticator();
        okHttpClient24.authenticator = okAuthenticator60;
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertNull(cookieHandler10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertNotNull(okHttpClient14);
        org.junit.Assert.assertNull(responseCache15);
        org.junit.Assert.assertNotNull(okAuthenticator16);
        org.junit.Assert.assertNull(hostnameVerifier17);
        org.junit.Assert.assertNotNull(sSLSocketFactory18);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNotNull(okHttpClient29);
        org.junit.Assert.assertNotNull(connectionPool30);
        org.junit.Assert.assertNull(cookieHandler32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(okHttpClient39);
        org.junit.Assert.assertNull(cookieHandler41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(okHttpClient43);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(okHttpClient48);
        org.junit.Assert.assertNotNull(okHttpClient53);
// flaky:         org.junit.Assert.assertNull(proxySelector54);
        org.junit.Assert.assertNotNull(okHttpClient55);
        org.junit.Assert.assertNotNull(okHttpClient57);
        org.junit.Assert.assertNotNull(okHttpClient59);
        org.junit.Assert.assertNotNull(okAuthenticator60);
    }

    @Test
    public void test03028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03028");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setHostnameVerifier(hostnameVerifier4);
        java.net.ResponseCache responseCache6 = okHttpClient5.responseCache;
        java.net.ProxySelector proxySelector7 = okHttpClient5.getProxySelector();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector9 = null;
        okHttpClient8.proxySelector = proxySelector9;
        java.net.ProxySelector proxySelector11 = okHttpClient8.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient8.setHostnameVerifier(hostnameVerifier12);
        boolean boolean14 = okHttpClient8.getFollowProtocolRedirects();
        com.squareup.okhttp.ConnectionPool connectionPool17 = new com.squareup.okhttp.ConnectionPool((int) 'a', (long) (byte) -1);
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient8.setConnectionPool(connectionPool17);
        okHttpClient5.connectionPool = connectionPool17;
        java.net.ResponseCache responseCache20 = okHttpClient5.getResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient21 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler22 = okHttpClient21.getCookieHandler();
        boolean boolean23 = okHttpClient21.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator24 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient21.setAuthenticator(okAuthenticator24);
        com.squareup.okhttp.OkAuthenticator okAuthenticator26 = okHttpClient21.authenticator;
        java.net.ResponseCache responseCache27 = okHttpClient21.getResponseCache();
        java.net.CookieHandler cookieHandler28 = okHttpClient21.cookieHandler;
        java.net.ResponseCache responseCache29 = okHttpClient21.responseCache;
        com.squareup.okhttp.OkHttpClient okHttpClient30 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler31 = okHttpClient30.getCookieHandler();
        boolean boolean32 = okHttpClient30.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator33 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient30.setAuthenticator(okAuthenticator33);
        java.net.Proxy proxy35 = okHttpClient30.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient30.copyWithDefaults();
        java.net.CookieHandler cookieHandler37 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient30.setCookieHandler(cookieHandler37);
        com.squareup.okhttp.OkHttpClient okHttpClient39 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier40 = okHttpClient39.hostnameVerifier;
        java.net.ResponseCache responseCache41 = okHttpClient39.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator42 = okHttpClient39.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient43 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler44 = okHttpClient43.getCookieHandler();
        boolean boolean45 = okHttpClient43.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient46 = okHttpClient43.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier47 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient48 = okHttpClient46.setHostnameVerifier(hostnameVerifier47);
        java.net.ResponseCache responseCache49 = okHttpClient48.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator50 = okHttpClient48.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier51 = okHttpClient48.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory52 = okHttpClient48.getSslSocketFactory();
        java.lang.String[] strArray53 = sSLSocketFactory52.getSupportedCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient54 = okHttpClient39.setSSLSocketFactory(sSLSocketFactory52);
        com.squareup.okhttp.OkHttpClient okHttpClient55 = okHttpClient38.setSSLSocketFactory(sSLSocketFactory52);
        okHttpClient21.sslSocketFactory = sSLSocketFactory52;
        java.lang.String[] strArray57 = sSLSocketFactory52.getSupportedCipherSuites();
        okHttpClient5.sslSocketFactory = sSLSocketFactory52;
        java.lang.String[] strArray59 = sSLSocketFactory52.getDefaultCipherSuites();
        java.net.InetAddress inetAddress60 = null;
        java.net.InetAddress inetAddress62 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket64 = sSLSocketFactory52.createSocket(inetAddress60, (int) (short) 1, inetAddress62, 10);
            org.junit.Assert.fail("Expected exception of type java.net.BindException; message: Permission denied (Bind failed)");
        } catch (java.net.BindException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(responseCache6);
        org.junit.Assert.assertNull(proxySelector7);
        org.junit.Assert.assertNull(proxySelector11);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNull(responseCache20);
        org.junit.Assert.assertNull(cookieHandler22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(okHttpClient25);
        org.junit.Assert.assertNull(okAuthenticator26);
        org.junit.Assert.assertNull(responseCache27);
        org.junit.Assert.assertNull(cookieHandler28);
        org.junit.Assert.assertNull(responseCache29);
        org.junit.Assert.assertNull(cookieHandler31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertNull(proxy35);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNull(hostnameVerifier40);
        org.junit.Assert.assertNull(responseCache41);
        org.junit.Assert.assertNull(okAuthenticator42);
        org.junit.Assert.assertNull(cookieHandler44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(okHttpClient46);
        org.junit.Assert.assertNotNull(okHttpClient48);
        org.junit.Assert.assertNull(responseCache49);
        org.junit.Assert.assertNotNull(okAuthenticator50);
        org.junit.Assert.assertNull(hostnameVerifier51);
        org.junit.Assert.assertNotNull(sSLSocketFactory52);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(okHttpClient54);
        org.junit.Assert.assertNotNull(okHttpClient55);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(strArray59);
    }

    @Test
    public void test03029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03029");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = okHttpClient0.hostnameVerifier;
        java.net.ResponseCache responseCache2 = okHttpClient0.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = okHttpClient0.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler5 = okHttpClient4.getCookieHandler();
        boolean boolean6 = okHttpClient4.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient4.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient7.setHostnameVerifier(hostnameVerifier8);
        java.net.ResponseCache responseCache10 = okHttpClient9.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator11 = okHttpClient9.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient0.setAuthenticator(okAuthenticator11);
        java.net.ResponseCache responseCache13 = okHttpClient12.getResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient12.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler16 = okHttpClient15.getCookieHandler();
        boolean boolean17 = okHttpClient15.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient15.setAuthenticator(okAuthenticator18);
        java.net.ResponseCache responseCache20 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient15.setResponseCache(responseCache20);
        com.squareup.okhttp.ConnectionPool connectionPool24 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool24.evictAll();
        okHttpClient15.connectionPool = connectionPool24;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory27 = okHttpClient15.sslSocketFactory;
        com.squareup.okhttp.ConnectionPool connectionPool28 = okHttpClient15.getConnectionPool();
        java.net.CookieHandler cookieHandler29 = null;
        okHttpClient15.cookieHandler = cookieHandler29;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler32 = okHttpClient31.getCookieHandler();
        boolean boolean33 = okHttpClient31.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient31.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool37 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int38 = connectionPool37.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient34.setConnectionPool(connectionPool37);
        com.squareup.okhttp.ConnectionPool connectionPool40 = okHttpClient34.connectionPool;
        java.net.ResponseCache responseCache41 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient34.setResponseCache(responseCache41);
        com.squareup.okhttp.OkAuthenticator okAuthenticator43 = okHttpClient34.getAuthenticator();
        com.squareup.okhttp.OkHttpClient okHttpClient44 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler45 = okHttpClient44.getCookieHandler();
        boolean boolean46 = okHttpClient44.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator47 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient48 = okHttpClient44.setAuthenticator(okAuthenticator47);
        java.net.ResponseCache responseCache49 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient44.setResponseCache(responseCache49);
        com.squareup.okhttp.ConnectionPool connectionPool53 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool53.evictAll();
        okHttpClient44.connectionPool = connectionPool53;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory56 = okHttpClient44.sslSocketFactory;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory57 = null;
        okHttpClient44.sslSocketFactory = sSLSocketFactory57;
        java.net.ProxySelector proxySelector59 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient60 = okHttpClient44.setProxySelector(proxySelector59);
        com.squareup.okhttp.OkHttpClient okHttpClient61 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector62 = null;
        okHttpClient61.proxySelector = proxySelector62;
        java.net.ProxySelector proxySelector64 = okHttpClient61.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier65 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient66 = okHttpClient61.setHostnameVerifier(hostnameVerifier65);
        java.net.ProxySelector proxySelector67 = java.net.ProxySelector.getDefault();
        okHttpClient61.proxySelector = proxySelector67;
        okHttpClient60.proxySelector = proxySelector67;
        com.squareup.okhttp.OkHttpClient okHttpClient70 = okHttpClient34.setProxySelector(proxySelector67);
        okHttpClient15.proxySelector = proxySelector67;
        okHttpClient14.proxySelector = proxySelector67;
        org.junit.Assert.assertNull(hostnameVerifier1);
        org.junit.Assert.assertNull(responseCache2);
        org.junit.Assert.assertNull(okAuthenticator3);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(okHttpClient7);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNull(responseCache10);
        org.junit.Assert.assertNotNull(okAuthenticator11);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertNull(responseCache13);
        org.junit.Assert.assertNotNull(okHttpClient14);
        org.junit.Assert.assertNull(cookieHandler16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNull(sSLSocketFactory27);
        org.junit.Assert.assertNotNull(connectionPool28);
        org.junit.Assert.assertNull(cookieHandler32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(okHttpClient39);
        org.junit.Assert.assertNotNull(connectionPool40);
        org.junit.Assert.assertNotNull(okHttpClient42);
        org.junit.Assert.assertNotNull(okAuthenticator43);
        org.junit.Assert.assertNull(cookieHandler45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(okHttpClient48);
        org.junit.Assert.assertNotNull(okHttpClient50);
        org.junit.Assert.assertNull(sSLSocketFactory56);
// flaky:         org.junit.Assert.assertNull(proxySelector59);
        org.junit.Assert.assertNotNull(okHttpClient60);
        org.junit.Assert.assertNull(proxySelector64);
        org.junit.Assert.assertNotNull(okHttpClient66);
// flaky:         org.junit.Assert.assertNull(proxySelector67);
        org.junit.Assert.assertNotNull(okHttpClient70);
    }

    @Test
    public void test03030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03030");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient4 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector5 = null;
        okHttpClient4.proxySelector = proxySelector5;
        java.net.ProxySelector proxySelector7 = okHttpClient4.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient4.setHostnameVerifier(hostnameVerifier8);
        java.net.ProxySelector proxySelector10 = okHttpClient4.proxySelector;
        java.net.ResponseCache responseCache11 = okHttpClient4.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet12 = okHttpClient4.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler14 = okHttpClient13.getCookieHandler();
        boolean boolean15 = okHttpClient13.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient13.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool19 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int20 = connectionPool19.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient16.setConnectionPool(connectionPool19);
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector23 = null;
        okHttpClient22.proxySelector = proxySelector23;
        java.net.ProxySelector proxySelector25 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient22.setProxySelector(proxySelector25);
        java.net.ProxySelector proxySelector27 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient22.setProxySelector(proxySelector27);
        okHttpClient21.proxySelector = proxySelector27;
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = okHttpClient21.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient4.setHostnameVerifier(hostnameVerifier30);
        javax.net.ssl.HostnameVerifier hostnameVerifier32 = okHttpClient31.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient0.setHostnameVerifier(hostnameVerifier32);
        javax.net.ssl.HostnameVerifier hostnameVerifier34 = okHttpClient33.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient35 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler36 = okHttpClient35.getCookieHandler();
        boolean boolean37 = okHttpClient35.getFollowProtocolRedirects();
        java.net.ProxySelector proxySelector38 = okHttpClient35.proxySelector;
        com.squareup.okhttp.OkHttpClient okHttpClient39 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector40 = null;
        okHttpClient39.proxySelector = proxySelector40;
        java.net.ProxySelector proxySelector42 = okHttpClient39.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier43 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient44 = okHttpClient39.setHostnameVerifier(hostnameVerifier43);
        java.net.ProxySelector proxySelector45 = okHttpClient39.proxySelector;
        java.net.ResponseCache responseCache46 = okHttpClient39.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet47 = okHttpClient39.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient48 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler49 = okHttpClient48.getCookieHandler();
        boolean boolean50 = okHttpClient48.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient51 = okHttpClient48.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool54 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int55 = connectionPool54.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient56 = okHttpClient51.setConnectionPool(connectionPool54);
        com.squareup.okhttp.OkHttpClient okHttpClient57 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector58 = null;
        okHttpClient57.proxySelector = proxySelector58;
        java.net.ProxySelector proxySelector60 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient61 = okHttpClient57.setProxySelector(proxySelector60);
        java.net.ProxySelector proxySelector62 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient63 = okHttpClient57.setProxySelector(proxySelector62);
        okHttpClient56.proxySelector = proxySelector62;
        javax.net.ssl.HostnameVerifier hostnameVerifier65 = okHttpClient56.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient66 = okHttpClient39.setHostnameVerifier(hostnameVerifier65);
        java.net.Proxy proxy67 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress68 = proxy67.address();
        com.squareup.okhttp.OkHttpClient okHttpClient69 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector70 = null;
        okHttpClient69.proxySelector = proxySelector70;
        com.squareup.okhttp.ConnectionPool connectionPool72 = okHttpClient69.connectionPool;
        com.squareup.okhttp.ConnectionPool connectionPool73 = okHttpClient69.getConnectionPool();
        boolean boolean74 = proxy67.equals((java.lang.Object) okHttpClient69);
        okHttpClient39.proxy = proxy67;
        com.squareup.okhttp.OkHttpClient okHttpClient76 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler77 = okHttpClient76.getCookieHandler();
        boolean boolean78 = okHttpClient76.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient79 = okHttpClient76.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier80 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient81 = okHttpClient79.setHostnameVerifier(hostnameVerifier80);
        java.net.ResponseCache responseCache82 = okHttpClient81.getResponseCache();
        java.net.ProxySelector proxySelector83 = okHttpClient81.getProxySelector();
        boolean boolean84 = proxy67.equals((java.lang.Object) proxySelector83);
        com.squareup.okhttp.OkHttpClient okHttpClient85 = okHttpClient35.setProxy(proxy67);
        java.net.CookieHandler cookieHandler86 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient87 = okHttpClient35.setCookieHandler(cookieHandler86);
        java.net.Proxy proxy88 = okHttpClient87.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient89 = okHttpClient33.setProxy(proxy88);
        java.net.Proxy proxy90 = okHttpClient33.proxy;
        java.net.Proxy proxy91 = okHttpClient33.proxy;
        java.util.Set<com.squareup.okhttp.Route> routeSet92 = okHttpClient33.failedRoutes;
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertNull(proxySelector7);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNull(proxySelector10);
        org.junit.Assert.assertNull(responseCache11);
        org.junit.Assert.assertNotNull(routeSet12);
        org.junit.Assert.assertNull(cookieHandler14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNotNull(okHttpClient26);
// flaky:         org.junit.Assert.assertNull(proxySelector27);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNotNull(hostnameVerifier30);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNotNull(hostnameVerifier32);
        org.junit.Assert.assertNotNull(okHttpClient33);
        org.junit.Assert.assertNotNull(hostnameVerifier34);
        org.junit.Assert.assertNull(cookieHandler36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(proxySelector38);
        org.junit.Assert.assertNull(proxySelector42);
        org.junit.Assert.assertNotNull(okHttpClient44);
        org.junit.Assert.assertNull(proxySelector45);
        org.junit.Assert.assertNull(responseCache46);
        org.junit.Assert.assertNotNull(routeSet47);
        org.junit.Assert.assertNull(cookieHandler49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(okHttpClient51);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(okHttpClient56);
        org.junit.Assert.assertNotNull(okHttpClient61);
// flaky:         org.junit.Assert.assertNull(proxySelector62);
        org.junit.Assert.assertNotNull(okHttpClient63);
        org.junit.Assert.assertNotNull(hostnameVerifier65);
        org.junit.Assert.assertNotNull(okHttpClient66);
        org.junit.Assert.assertNotNull(proxy67);
        org.junit.Assert.assertNull(socketAddress68);
        org.junit.Assert.assertNull(connectionPool72);
        org.junit.Assert.assertNull(connectionPool73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNull(cookieHandler77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(okHttpClient79);
        org.junit.Assert.assertNotNull(okHttpClient81);
        org.junit.Assert.assertNull(responseCache82);
// flaky:         org.junit.Assert.assertNull(proxySelector83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(okHttpClient85);
        org.junit.Assert.assertNotNull(okHttpClient87);
        org.junit.Assert.assertNotNull(proxy88);
        org.junit.Assert.assertNotNull(okHttpClient89);
        org.junit.Assert.assertNotNull(proxy90);
        org.junit.Assert.assertNotNull(proxy91);
        org.junit.Assert.assertNotNull(routeSet92);
    }

    @Test
    public void test03031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03031");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        java.net.ResponseCache responseCache5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient0.setResponseCache(responseCache5);
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool9.evictAll();
        okHttpClient0.connectionPool = connectionPool9;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory12 = okHttpClient0.sslSocketFactory;
        java.net.Proxy proxy13 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient0.setProxy(proxy13);
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler16 = okHttpClient15.getCookieHandler();
        boolean boolean17 = okHttpClient15.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient15.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet19 = okHttpClient18.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient18.copyWithDefaults();
        java.net.ProxySelector proxySelector21 = okHttpClient18.getProxySelector();
        okHttpClient14.proxySelector = proxySelector21;
        okHttpClient14.followProtocolRedirects = false;
        com.squareup.okhttp.OkHttpClient okHttpClient25 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector26 = null;
        okHttpClient25.proxySelector = proxySelector26;
        java.net.ProxySelector proxySelector28 = okHttpClient25.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier29 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient30 = okHttpClient25.setHostnameVerifier(hostnameVerifier29);
        boolean boolean31 = okHttpClient25.getFollowProtocolRedirects();
        com.squareup.okhttp.ConnectionPool connectionPool34 = new com.squareup.okhttp.ConnectionPool((int) 'a', (long) (byte) -1);
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient25.setConnectionPool(connectionPool34);
        com.squareup.okhttp.OkHttpClient okHttpClient36 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler37 = okHttpClient36.getCookieHandler();
        boolean boolean38 = okHttpClient36.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient36.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier40 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient41 = okHttpClient39.setHostnameVerifier(hostnameVerifier40);
        java.net.ResponseCache responseCache42 = okHttpClient41.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator43 = okHttpClient41.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier44 = okHttpClient41.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory45 = okHttpClient41.getSslSocketFactory();
        okHttpClient25.sslSocketFactory = sSLSocketFactory45;
        java.net.Socket socket47 = sSLSocketFactory45.createSocket();
        okHttpClient14.sslSocketFactory = sSLSocketFactory45;
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient14.setFollowProtocolRedirects(true);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory51 = okHttpClient50.sslSocketFactory;
        java.net.InetAddress inetAddress52 = null;
        java.net.InetAddress inetAddress54 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket56 = sSLSocketFactory51.createSocket(inetAddress52, 100, inetAddress54, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.net.BindException; message: Permission denied (Bind failed)");
        } catch (java.net.BindException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient6);
        org.junit.Assert.assertNull(sSLSocketFactory12);
        org.junit.Assert.assertNotNull(proxy13);
        org.junit.Assert.assertNotNull(okHttpClient14);
        org.junit.Assert.assertNull(cookieHandler16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNotNull(routeSet19);
        org.junit.Assert.assertNotNull(okHttpClient20);
// flaky:         org.junit.Assert.assertNull(proxySelector21);
        org.junit.Assert.assertNull(proxySelector28);
        org.junit.Assert.assertNotNull(okHttpClient30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNull(cookieHandler37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(okHttpClient39);
        org.junit.Assert.assertNotNull(okHttpClient41);
        org.junit.Assert.assertNull(responseCache42);
        org.junit.Assert.assertNotNull(okAuthenticator43);
        org.junit.Assert.assertNull(hostnameVerifier44);
        org.junit.Assert.assertNotNull(sSLSocketFactory45);
        org.junit.Assert.assertNotNull(socket47);
        org.junit.Assert.assertEquals(socket47.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(okHttpClient50);
        org.junit.Assert.assertNotNull(sSLSocketFactory51);
    }

    @Test
    public void test03032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03032");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setHostnameVerifier(hostnameVerifier4);
        java.net.ProxySelector proxySelector6 = okHttpClient0.proxySelector;
        java.net.ResponseCache responseCache7 = okHttpClient0.getResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler9 = okHttpClient8.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray10 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet11 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet11, routeArray10);
        okHttpClient8.failedRoutes = routeSet11;
        java.net.Proxy proxy14 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient15.setCookieHandler(cookieHandler16);
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient15.setFollowProtocolRedirects(true);
        boolean boolean20 = proxy14.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient8.setProxy(proxy14);
        okHttpClient0.proxy = proxy14;
        com.squareup.okhttp.OkHttpClient okHttpClient23 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler24 = okHttpClient23.getCookieHandler();
        boolean boolean25 = okHttpClient23.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient23.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier27 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient26.setHostnameVerifier(hostnameVerifier27);
        boolean boolean29 = proxy14.equals((java.lang.Object) okHttpClient26);
        java.lang.String str30 = proxy14.toString();
        java.net.SocketAddress socketAddress31 = proxy14.address();
        java.lang.String str32 = proxy14.toString();
        java.net.Proxy.Type type33 = proxy14.type();
        java.net.Proxy.Type type34 = proxy14.type();
        java.net.SocketAddress socketAddress35 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Proxy proxy36 = new java.net.Proxy(type34, socketAddress35);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: type DIRECT is not compatible with address null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(proxySelector6);
        org.junit.Assert.assertNull(responseCache7);
        org.junit.Assert.assertNull(cookieHandler9);
        org.junit.Assert.assertNotNull(routeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(proxy14);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNull(cookieHandler24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "DIRECT" + "'", str30, "DIRECT");
        org.junit.Assert.assertNull(socketAddress31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "DIRECT" + "'", str32, "DIRECT");
        org.junit.Assert.assertTrue("'" + type33 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type33.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertTrue("'" + type34 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type34.equals(java.net.Proxy.Type.DIRECT));
    }

    @Test
    public void test03033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03033");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setHostnameVerifier(hostnameVerifier4);
        java.net.ProxySelector proxySelector6 = okHttpClient0.proxySelector;
        java.net.ResponseCache responseCache7 = okHttpClient0.getResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler9 = okHttpClient8.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray10 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet11 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet11, routeArray10);
        okHttpClient8.failedRoutes = routeSet11;
        java.net.Proxy proxy14 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient15.setCookieHandler(cookieHandler16);
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient15.setFollowProtocolRedirects(true);
        boolean boolean20 = proxy14.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient8.setProxy(proxy14);
        okHttpClient0.proxy = proxy14;
        com.squareup.okhttp.OkHttpClient okHttpClient23 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector24 = null;
        okHttpClient23.proxySelector = proxySelector24;
        java.net.ProxySelector proxySelector26 = okHttpClient23.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier27 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient23.setHostnameVerifier(hostnameVerifier27);
        java.net.ProxySelector proxySelector29 = java.net.ProxySelector.getDefault();
        okHttpClient23.proxySelector = proxySelector29;
        java.net.CookieHandler cookieHandler31 = null;
        okHttpClient23.cookieHandler = cookieHandler31;
        java.net.CookieHandler cookieHandler33 = null;
        okHttpClient23.cookieHandler = cookieHandler33;
        boolean boolean35 = proxy14.equals((java.lang.Object) okHttpClient23);
        java.net.SocketAddress socketAddress36 = proxy14.address();
        java.net.Proxy.Type type37 = proxy14.type();
        java.net.SocketAddress socketAddress38 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Proxy proxy39 = new java.net.Proxy(type37, socketAddress38);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: type DIRECT is not compatible with address null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(proxySelector6);
        org.junit.Assert.assertNull(responseCache7);
        org.junit.Assert.assertNull(cookieHandler9);
        org.junit.Assert.assertNotNull(routeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(proxy14);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNull(proxySelector26);
        org.junit.Assert.assertNotNull(okHttpClient28);
// flaky:         org.junit.Assert.assertNull(proxySelector29);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(socketAddress36);
        org.junit.Assert.assertTrue("'" + type37 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type37.equals(java.net.Proxy.Type.DIRECT));
    }

    @Test
    public void test03034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03034");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.ResponseCache responseCache5 = null;
        okHttpClient0.responseCache = responseCache5;
        java.net.ResponseCache responseCache7 = okHttpClient0.responseCache;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler9 = okHttpClient8.getCookieHandler();
        boolean boolean10 = okHttpClient8.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient8.setAuthenticator(okAuthenticator11);
        java.net.ResponseCache responseCache13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient8.setResponseCache(responseCache13);
        com.squareup.okhttp.ConnectionPool connectionPool17 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool17.evictAll();
        okHttpClient8.connectionPool = connectionPool17;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory20 = okHttpClient8.sslSocketFactory;
        java.net.ResponseCache responseCache21 = null;
        okHttpClient8.responseCache = responseCache21;
        com.squareup.okhttp.OkAuthenticator okAuthenticator23 = okHttpClient8.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient8.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient25 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector26 = null;
        okHttpClient25.proxySelector = proxySelector26;
        java.net.ProxySelector proxySelector28 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient25.setProxySelector(proxySelector28);
        java.net.ProxySelector proxySelector30 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient25.setProxySelector(proxySelector30);
        java.net.ProxySelector.setDefault(proxySelector30);
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient24.setProxySelector(proxySelector30);
        com.squareup.okhttp.OkHttpClient okHttpClient34 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler35 = okHttpClient34.getCookieHandler();
        boolean boolean36 = okHttpClient34.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient34.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool40 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int41 = connectionPool40.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient37.setConnectionPool(connectionPool40);
        javax.net.ssl.HostnameVerifier hostnameVerifier43 = null;
        okHttpClient37.hostnameVerifier = hostnameVerifier43;
        com.squareup.okhttp.ConnectionPool connectionPool45 = okHttpClient37.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator46 = okHttpClient37.authenticator;
        okHttpClient24.authenticator = okAuthenticator46;
        okHttpClient0.authenticator = okAuthenticator46;
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient0.setFollowProtocolRedirects(false);
        javax.net.ssl.HostnameVerifier hostnameVerifier51 = okHttpClient50.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient52 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler53 = okHttpClient52.getCookieHandler();
        boolean boolean54 = okHttpClient52.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient55 = okHttpClient52.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet56 = okHttpClient55.failedRoutes;
        boolean boolean57 = okHttpClient55.getFollowProtocolRedirects();
        java.net.Proxy proxy58 = java.net.Proxy.NO_PROXY;
        okHttpClient55.proxy = proxy58;
        com.squareup.okhttp.OkHttpClient okHttpClient60 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler61 = okHttpClient60.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray62 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet63 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet63, routeArray62);
        okHttpClient60.failedRoutes = routeSet63;
        java.net.Proxy proxy66 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient67 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler68 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient69 = okHttpClient67.setCookieHandler(cookieHandler68);
        com.squareup.okhttp.OkHttpClient okHttpClient71 = okHttpClient67.setFollowProtocolRedirects(true);
        boolean boolean72 = proxy66.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient73 = okHttpClient60.setProxy(proxy66);
        java.net.SocketAddress socketAddress74 = proxy66.address();
        com.squareup.okhttp.OkHttpClient okHttpClient75 = okHttpClient55.setProxy(proxy66);
        okHttpClient75.followProtocolRedirects = false;
        boolean boolean78 = okHttpClient75.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient79 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector80 = null;
        okHttpClient79.proxySelector = proxySelector80;
        java.net.ProxySelector proxySelector82 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient83 = okHttpClient79.setProxySelector(proxySelector82);
        java.net.ProxySelector proxySelector84 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient85 = okHttpClient79.setProxySelector(proxySelector84);
        java.net.ProxySelector.setDefault(proxySelector84);
        com.squareup.okhttp.OkHttpClient okHttpClient87 = okHttpClient75.setProxySelector(proxySelector84);
        java.net.ProxySelector.setDefault(proxySelector84);
        java.net.ProxySelector.setDefault(proxySelector84);
        com.squareup.okhttp.OkHttpClient okHttpClient90 = okHttpClient50.setProxySelector(proxySelector84);
        java.net.CookieHandler cookieHandler91 = okHttpClient50.getCookieHandler();
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(responseCache7);
        org.junit.Assert.assertNull(cookieHandler9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertNotNull(okHttpClient14);
        org.junit.Assert.assertNull(sSLSocketFactory20);
        org.junit.Assert.assertNull(okAuthenticator23);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNotNull(okHttpClient29);
// flaky:         org.junit.Assert.assertNull(proxySelector30);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNotNull(okHttpClient33);
        org.junit.Assert.assertNull(cookieHandler35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(okHttpClient37);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(okHttpClient42);
        org.junit.Assert.assertNotNull(connectionPool45);
        org.junit.Assert.assertNotNull(okAuthenticator46);
        org.junit.Assert.assertNotNull(okHttpClient50);
        org.junit.Assert.assertNull(hostnameVerifier51);
        org.junit.Assert.assertNull(cookieHandler53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(okHttpClient55);
        org.junit.Assert.assertNotNull(routeSet56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(proxy58);
        org.junit.Assert.assertNull(cookieHandler61);
        org.junit.Assert.assertNotNull(routeArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(proxy66);
        org.junit.Assert.assertNotNull(okHttpClient69);
        org.junit.Assert.assertNotNull(okHttpClient71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(okHttpClient73);
        org.junit.Assert.assertNull(socketAddress74);
        org.junit.Assert.assertNotNull(okHttpClient75);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(okHttpClient83);
// flaky:         org.junit.Assert.assertNull(proxySelector84);
        org.junit.Assert.assertNotNull(okHttpClient85);
        org.junit.Assert.assertNotNull(okHttpClient87);
        org.junit.Assert.assertNotNull(okHttpClient90);
        org.junit.Assert.assertNull(cookieHandler91);
    }

    @Test
    public void test03035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03035");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setCookieHandler(cookieHandler1);
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setFollowProtocolRedirects(true);
        java.net.ResponseCache responseCache5 = null;
        okHttpClient0.responseCache = responseCache5;
        com.squareup.okhttp.OkAuthenticator okAuthenticator7 = okHttpClient0.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler9 = okHttpClient8.getCookieHandler();
        java.net.ResponseCache responseCache10 = null;
        okHttpClient8.responseCache = responseCache10;
        boolean boolean12 = okHttpClient8.followProtocolRedirects;
        java.net.CookieHandler cookieHandler13 = okHttpClient8.cookieHandler;
        com.squareup.okhttp.ConnectionPool connectionPool14 = okHttpClient8.getConnectionPool();
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector16 = null;
        okHttpClient15.proxySelector = proxySelector16;
        java.net.ProxySelector proxySelector18 = okHttpClient15.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier19 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient15.setHostnameVerifier(hostnameVerifier19);
        java.net.ProxySelector proxySelector21 = okHttpClient15.proxySelector;
        java.net.ResponseCache responseCache22 = okHttpClient15.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet23 = okHttpClient15.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler25 = okHttpClient24.getCookieHandler();
        boolean boolean26 = okHttpClient24.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient24.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool30 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int31 = connectionPool30.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient27.setConnectionPool(connectionPool30);
        com.squareup.okhttp.OkHttpClient okHttpClient33 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector34 = null;
        okHttpClient33.proxySelector = proxySelector34;
        java.net.ProxySelector proxySelector36 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient33.setProxySelector(proxySelector36);
        java.net.ProxySelector proxySelector38 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient33.setProxySelector(proxySelector38);
        okHttpClient32.proxySelector = proxySelector38;
        javax.net.ssl.HostnameVerifier hostnameVerifier41 = okHttpClient32.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient15.setHostnameVerifier(hostnameVerifier41);
        okHttpClient8.hostnameVerifier = hostnameVerifier41;
        com.squareup.okhttp.OkHttpClient okHttpClient44 = okHttpClient8.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient45 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler46 = okHttpClient45.getCookieHandler();
        boolean boolean47 = okHttpClient45.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient48 = okHttpClient45.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet49 = okHttpClient48.failedRoutes;
        boolean boolean50 = okHttpClient48.getFollowProtocolRedirects();
        java.net.Proxy proxy51 = java.net.Proxy.NO_PROXY;
        okHttpClient48.proxy = proxy51;
        com.squareup.okhttp.OkHttpClient okHttpClient53 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler54 = okHttpClient53.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray55 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet56 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet56, routeArray55);
        okHttpClient53.failedRoutes = routeSet56;
        java.net.Proxy proxy59 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient60 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler61 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient62 = okHttpClient60.setCookieHandler(cookieHandler61);
        com.squareup.okhttp.OkHttpClient okHttpClient64 = okHttpClient60.setFollowProtocolRedirects(true);
        boolean boolean65 = proxy59.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient66 = okHttpClient53.setProxy(proxy59);
        java.net.SocketAddress socketAddress67 = proxy59.address();
        com.squareup.okhttp.OkHttpClient okHttpClient68 = okHttpClient48.setProxy(proxy59);
        com.squareup.okhttp.OkAuthenticator okAuthenticator69 = okHttpClient68.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient70 = okHttpClient44.setAuthenticator(okAuthenticator69);
        com.squareup.okhttp.OkHttpClient okHttpClient71 = okHttpClient0.setAuthenticator(okAuthenticator69);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory72 = okHttpClient0.sslSocketFactory;
        com.squareup.okhttp.OkHttpClient okHttpClient74 = okHttpClient0.setFollowProtocolRedirects(true);
        com.squareup.okhttp.OkHttpClient okHttpClient75 = okHttpClient74.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient76 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler77 = okHttpClient76.getCookieHandler();
        boolean boolean78 = okHttpClient76.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient79 = okHttpClient76.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier80 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient81 = okHttpClient79.setHostnameVerifier(hostnameVerifier80);
        java.net.ResponseCache responseCache82 = okHttpClient81.getResponseCache();
        java.net.ProxySelector proxySelector83 = okHttpClient81.getProxySelector();
        com.squareup.okhttp.OkHttpClient okHttpClient84 = okHttpClient74.setProxySelector(proxySelector83);
        org.junit.Assert.assertNotNull(okHttpClient2);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(okAuthenticator7);
        org.junit.Assert.assertNull(cookieHandler9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(cookieHandler13);
        org.junit.Assert.assertNull(connectionPool14);
        org.junit.Assert.assertNull(proxySelector18);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNull(proxySelector21);
        org.junit.Assert.assertNull(responseCache22);
        org.junit.Assert.assertNotNull(routeSet23);
        org.junit.Assert.assertNull(cookieHandler25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertNotNull(okHttpClient37);
// flaky:         org.junit.Assert.assertNull(proxySelector38);
        org.junit.Assert.assertNotNull(okHttpClient39);
        org.junit.Assert.assertNotNull(hostnameVerifier41);
        org.junit.Assert.assertNotNull(okHttpClient42);
        org.junit.Assert.assertNotNull(okHttpClient44);
        org.junit.Assert.assertNull(cookieHandler46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(okHttpClient48);
        org.junit.Assert.assertNotNull(routeSet49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(proxy51);
        org.junit.Assert.assertNull(cookieHandler54);
        org.junit.Assert.assertNotNull(routeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(proxy59);
        org.junit.Assert.assertNotNull(okHttpClient62);
        org.junit.Assert.assertNotNull(okHttpClient64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(okHttpClient66);
        org.junit.Assert.assertNull(socketAddress67);
        org.junit.Assert.assertNotNull(okHttpClient68);
        org.junit.Assert.assertNotNull(okAuthenticator69);
        org.junit.Assert.assertNotNull(okHttpClient70);
        org.junit.Assert.assertNotNull(okHttpClient71);
        org.junit.Assert.assertNull(sSLSocketFactory72);
        org.junit.Assert.assertNotNull(okHttpClient74);
        org.junit.Assert.assertNotNull(okHttpClient75);
        org.junit.Assert.assertNull(cookieHandler77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(okHttpClient79);
        org.junit.Assert.assertNotNull(okHttpClient81);
        org.junit.Assert.assertNull(responseCache82);
// flaky:         org.junit.Assert.assertNull(proxySelector83);
        org.junit.Assert.assertNotNull(okHttpClient84);
    }

    @Test
    public void test03036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03036");
        com.squareup.okhttp.ConnectionPool connectionPool2 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (short) 100);
        int int3 = connectionPool2.getConnectionCount();
        int int4 = connectionPool2.getHttpConnectionCount();
        int int5 = connectionPool2.getHttpConnectionCount();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test03037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03037");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setHostnameVerifier(hostnameVerifier4);
        java.net.ProxySelector proxySelector6 = okHttpClient0.proxySelector;
        java.net.ResponseCache responseCache7 = okHttpClient0.getResponseCache();
        com.squareup.okhttp.ConnectionPool connectionPool8 = okHttpClient0.connectionPool;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler10 = okHttpClient9.getCookieHandler();
        boolean boolean11 = okHttpClient9.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient9.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet13 = okHttpClient12.failedRoutes;
        boolean boolean14 = okHttpClient12.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler16 = okHttpClient15.getCookieHandler();
        boolean boolean17 = okHttpClient15.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient15.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier19 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient18.setHostnameVerifier(hostnameVerifier19);
        java.net.ResponseCache responseCache21 = okHttpClient20.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator22 = okHttpClient20.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier23 = okHttpClient20.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory24 = okHttpClient20.getSslSocketFactory();
        java.lang.String[] strArray25 = sSLSocketFactory24.getSupportedCipherSuites();
        java.lang.String[] strArray26 = sSLSocketFactory24.getDefaultCipherSuites();
        java.lang.String[] strArray27 = sSLSocketFactory24.getDefaultCipherSuites();
        java.lang.String[] strArray28 = sSLSocketFactory24.getDefaultCipherSuites();
        java.lang.String[] strArray29 = sSLSocketFactory24.getSupportedCipherSuites();
        okHttpClient12.sslSocketFactory = sSLSocketFactory24;
        okHttpClient0.sslSocketFactory = sSLSocketFactory24;
        java.lang.String[] strArray32 = sSLSocketFactory24.getSupportedCipherSuites();
        java.net.InetAddress inetAddress35 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket37 = sSLSocketFactory24.createSocket("DIRECT", (-1), inetAddress35, 100);
            org.junit.Assert.fail("Expected exception of type java.net.BindException; message: Permission denied (Bind failed)");
        } catch (java.net.BindException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(proxySelector6);
        org.junit.Assert.assertNull(responseCache7);
        org.junit.Assert.assertNull(connectionPool8);
        org.junit.Assert.assertNull(cookieHandler10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertNotNull(routeSet13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(cookieHandler16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNull(responseCache21);
        org.junit.Assert.assertNotNull(okAuthenticator22);
        org.junit.Assert.assertNull(hostnameVerifier23);
        org.junit.Assert.assertNotNull(sSLSocketFactory24);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(strArray32);
    }

    @Test
    public void test03038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03038");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = okHttpClient0.hostnameVerifier;
        java.net.ResponseCache responseCache2 = okHttpClient0.getResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler4 = okHttpClient3.getCookieHandler();
        boolean boolean5 = okHttpClient3.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient3.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int10 = connectionPool9.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient6.setConnectionPool(connectionPool9);
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = null;
        okHttpClient6.hostnameVerifier = hostnameVerifier12;
        com.squareup.okhttp.ConnectionPool connectionPool14 = okHttpClient6.getConnectionPool();
        okHttpClient0.connectionPool = connectionPool14;
        java.net.CookieHandler cookieHandler16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient0.setCookieHandler(cookieHandler16);
        java.net.ProxySelector proxySelector18 = okHttpClient17.proxySelector;
        java.net.Proxy proxy19 = okHttpClient17.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient17.copyWithDefaults();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory21 = okHttpClient20.getSslSocketFactory();
        java.lang.String[] strArray22 = sSLSocketFactory21.getDefaultCipherSuites();
        org.junit.Assert.assertNull(hostnameVerifier1);
        org.junit.Assert.assertNull(responseCache2);
        org.junit.Assert.assertNull(cookieHandler4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(okHttpClient6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(connectionPool14);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNull(proxySelector18);
        org.junit.Assert.assertNull(proxy19);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNotNull(sSLSocketFactory21);
        org.junit.Assert.assertNotNull(strArray22);
    }

    @Test
    public void test03039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03039");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        java.net.ResponseCache responseCache5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient0.setResponseCache(responseCache5);
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool9.evictAll();
        okHttpClient0.connectionPool = connectionPool9;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory12 = okHttpClient0.sslSocketFactory;
        java.net.Proxy proxy13 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient0.setProxy(proxy13);
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler16 = okHttpClient15.getCookieHandler();
        boolean boolean17 = okHttpClient15.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient15.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet19 = okHttpClient18.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient18.copyWithDefaults();
        java.net.ProxySelector proxySelector21 = okHttpClient18.getProxySelector();
        okHttpClient14.proxySelector = proxySelector21;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient14.setFollowProtocolRedirects(false);
        boolean boolean25 = okHttpClient14.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient26 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler27 = okHttpClient26.getCookieHandler();
        boolean boolean28 = okHttpClient26.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient26.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient29.setHostnameVerifier(hostnameVerifier30);
        java.net.ResponseCache responseCache32 = okHttpClient31.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator33 = okHttpClient31.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier34 = okHttpClient31.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient35 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler36 = okHttpClient35.getCookieHandler();
        boolean boolean37 = okHttpClient35.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient35.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient39 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector40 = null;
        okHttpClient39.proxySelector = proxySelector40;
        java.net.ProxySelector proxySelector42 = okHttpClient39.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier43 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient44 = okHttpClient39.setHostnameVerifier(hostnameVerifier43);
        java.net.ProxySelector proxySelector45 = okHttpClient39.proxySelector;
        java.net.ResponseCache responseCache46 = okHttpClient39.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet47 = okHttpClient39.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient48 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler49 = okHttpClient48.getCookieHandler();
        boolean boolean50 = okHttpClient48.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient51 = okHttpClient48.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool54 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int55 = connectionPool54.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient56 = okHttpClient51.setConnectionPool(connectionPool54);
        com.squareup.okhttp.OkHttpClient okHttpClient57 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector58 = null;
        okHttpClient57.proxySelector = proxySelector58;
        java.net.ProxySelector proxySelector60 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient61 = okHttpClient57.setProxySelector(proxySelector60);
        java.net.ProxySelector proxySelector62 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient63 = okHttpClient57.setProxySelector(proxySelector62);
        okHttpClient56.proxySelector = proxySelector62;
        javax.net.ssl.HostnameVerifier hostnameVerifier65 = okHttpClient56.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient66 = okHttpClient39.setHostnameVerifier(hostnameVerifier65);
        javax.net.ssl.HostnameVerifier hostnameVerifier67 = okHttpClient66.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient68 = okHttpClient35.setHostnameVerifier(hostnameVerifier67);
        java.net.Proxy proxy69 = okHttpClient68.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient70 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector71 = null;
        okHttpClient70.proxySelector = proxySelector71;
        java.net.ProxySelector proxySelector73 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient74 = okHttpClient70.setProxySelector(proxySelector73);
        java.net.ProxySelector proxySelector75 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient76 = okHttpClient70.setProxySelector(proxySelector75);
        java.net.ProxySelector.setDefault(proxySelector75);
        okHttpClient68.proxySelector = proxySelector75;
        okHttpClient31.proxySelector = proxySelector75;
        okHttpClient14.proxySelector = proxySelector75;
        com.squareup.okhttp.ConnectionPool connectionPool81 = okHttpClient14.getConnectionPool();
        int int82 = connectionPool81.getHttpConnectionCount();
        com.squareup.okhttp.Address address83 = null;
        com.squareup.okhttp.Connection connection84 = connectionPool81.get(address83);
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient6);
        org.junit.Assert.assertNull(sSLSocketFactory12);
        org.junit.Assert.assertNotNull(proxy13);
        org.junit.Assert.assertNotNull(okHttpClient14);
        org.junit.Assert.assertNull(cookieHandler16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNotNull(routeSet19);
        org.junit.Assert.assertNotNull(okHttpClient20);
// flaky:         org.junit.Assert.assertNull(proxySelector21);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(cookieHandler27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(okHttpClient29);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNull(responseCache32);
        org.junit.Assert.assertNotNull(okAuthenticator33);
        org.junit.Assert.assertNull(hostnameVerifier34);
        org.junit.Assert.assertNull(cookieHandler36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNull(proxySelector42);
        org.junit.Assert.assertNotNull(okHttpClient44);
        org.junit.Assert.assertNull(proxySelector45);
        org.junit.Assert.assertNull(responseCache46);
        org.junit.Assert.assertNotNull(routeSet47);
        org.junit.Assert.assertNull(cookieHandler49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(okHttpClient51);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(okHttpClient56);
        org.junit.Assert.assertNotNull(okHttpClient61);
// flaky:         org.junit.Assert.assertNull(proxySelector62);
        org.junit.Assert.assertNotNull(okHttpClient63);
        org.junit.Assert.assertNotNull(hostnameVerifier65);
        org.junit.Assert.assertNotNull(okHttpClient66);
        org.junit.Assert.assertNotNull(hostnameVerifier67);
        org.junit.Assert.assertNotNull(okHttpClient68);
        org.junit.Assert.assertNull(proxy69);
        org.junit.Assert.assertNotNull(okHttpClient74);
// flaky:         org.junit.Assert.assertNull(proxySelector75);
        org.junit.Assert.assertNotNull(okHttpClient76);
        org.junit.Assert.assertNotNull(connectionPool81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertNull(connection84);
    }

    @Test
    public void test03040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03040");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        java.net.ResponseCache responseCache5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient0.setResponseCache(responseCache5);
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool9.evictAll();
        okHttpClient0.connectionPool = connectionPool9;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory12 = okHttpClient0.sslSocketFactory;
        com.squareup.okhttp.ConnectionPool connectionPool13 = okHttpClient0.getConnectionPool();
        com.squareup.okhttp.ConnectionPool connectionPool16 = new com.squareup.okhttp.ConnectionPool((int) ' ', (long) (short) 100);
        com.squareup.okhttp.Address address17 = null;
        com.squareup.okhttp.Connection connection18 = connectionPool16.get(address17);
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient0.setConnectionPool(connectionPool16);
        java.net.CookieHandler cookieHandler20 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient19.setCookieHandler(cookieHandler20);
        java.net.ResponseCache responseCache22 = null;
        okHttpClient21.responseCache = responseCache22;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler25 = okHttpClient24.getCookieHandler();
        boolean boolean26 = okHttpClient24.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient24.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool30 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int31 = connectionPool30.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient27.setConnectionPool(connectionPool30);
        com.squareup.okhttp.ConnectionPool connectionPool33 = okHttpClient27.connectionPool;
        com.squareup.okhttp.OkHttpClient okHttpClient34 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector35 = null;
        okHttpClient34.proxySelector = proxySelector35;
        java.net.ProxySelector proxySelector37 = okHttpClient34.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier38 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient34.setHostnameVerifier(hostnameVerifier38);
        java.net.ProxySelector proxySelector40 = java.net.ProxySelector.getDefault();
        okHttpClient34.proxySelector = proxySelector40;
        java.net.ProxySelector.setDefault(proxySelector40);
        com.squareup.okhttp.OkHttpClient okHttpClient43 = okHttpClient27.setProxySelector(proxySelector40);
        okHttpClient21.proxySelector = proxySelector40;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory45 = okHttpClient21.getSslSocketFactory();
        java.net.ProxySelector proxySelector46 = okHttpClient21.getProxySelector();
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient6);
        org.junit.Assert.assertNull(sSLSocketFactory12);
        org.junit.Assert.assertNotNull(connectionPool13);
        org.junit.Assert.assertNull(connection18);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNull(cookieHandler25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertNotNull(connectionPool33);
        org.junit.Assert.assertNull(proxySelector37);
        org.junit.Assert.assertNotNull(okHttpClient39);
// flaky:         org.junit.Assert.assertNull(proxySelector40);
        org.junit.Assert.assertNotNull(okHttpClient43);
        org.junit.Assert.assertNull(sSLSocketFactory45);
// flaky:         org.junit.Assert.assertNull(proxySelector46);
    }

    @Test
    public void test03041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03041");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.Proxy proxy5 = okHttpClient4.proxy;
        okHttpClient4.followProtocolRedirects = false;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler9 = okHttpClient8.getCookieHandler();
        boolean boolean10 = okHttpClient8.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient8.setAuthenticator(okAuthenticator11);
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient8.copyWithDefaults();
        java.net.CookieHandler cookieHandler14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient8.setCookieHandler(cookieHandler14);
        com.squareup.okhttp.OkAuthenticator okAuthenticator16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient15.setAuthenticator(okAuthenticator16);
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler19 = okHttpClient18.getCookieHandler();
        boolean boolean20 = okHttpClient18.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient18.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool24 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int25 = connectionPool24.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient21.setConnectionPool(connectionPool24);
        com.squareup.okhttp.ConnectionPool connectionPool27 = okHttpClient21.connectionPool;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient15.setConnectionPool(connectionPool27);
        com.squareup.okhttp.OkHttpClient okHttpClient29 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler30 = okHttpClient29.getCookieHandler();
        java.net.ResponseCache responseCache31 = null;
        okHttpClient29.responseCache = responseCache31;
        boolean boolean33 = okHttpClient29.followProtocolRedirects;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory34 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient29.setSSLSocketFactory(sSLSocketFactory34);
        java.net.Proxy proxy36 = okHttpClient35.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient37 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector38 = null;
        okHttpClient37.proxySelector = proxySelector38;
        java.net.ProxySelector proxySelector40 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient41 = okHttpClient37.setProxySelector(proxySelector40);
        java.net.ProxySelector proxySelector42 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient43 = okHttpClient37.setProxySelector(proxySelector42);
        java.net.ProxySelector.setDefault(proxySelector42);
        okHttpClient35.proxySelector = proxySelector42;
        com.squareup.okhttp.OkHttpClient okHttpClient46 = okHttpClient35.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient47 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler48 = okHttpClient47.getCookieHandler();
        boolean boolean49 = okHttpClient47.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient47.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier51 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient52 = okHttpClient50.setHostnameVerifier(hostnameVerifier51);
        java.net.ResponseCache responseCache53 = okHttpClient52.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator54 = okHttpClient52.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier55 = okHttpClient52.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory56 = okHttpClient52.getSslSocketFactory();
        java.lang.String[] strArray57 = sSLSocketFactory56.getSupportedCipherSuites();
        java.net.Socket socket58 = sSLSocketFactory56.createSocket();
        com.squareup.okhttp.OkHttpClient okHttpClient59 = okHttpClient35.setSSLSocketFactory(sSLSocketFactory56);
        com.squareup.okhttp.OkHttpClient okHttpClient60 = okHttpClient15.setSSLSocketFactory(sSLSocketFactory56);
        java.lang.String[] strArray61 = sSLSocketFactory56.getDefaultCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient62 = okHttpClient4.setSSLSocketFactory(sSLSocketFactory56);
        java.net.Socket socket63 = sSLSocketFactory56.createSocket();
        java.net.InetAddress inetAddress64 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket66 = sSLSocketFactory56.createSocket(inetAddress64, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: port out of range:-1");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(proxy5);
        org.junit.Assert.assertNull(cookieHandler9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNull(cookieHandler19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNotNull(connectionPool27);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNull(cookieHandler30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNull(proxy36);
        org.junit.Assert.assertNotNull(okHttpClient41);
// flaky:         org.junit.Assert.assertNull(proxySelector42);
        org.junit.Assert.assertNotNull(okHttpClient43);
        org.junit.Assert.assertNotNull(okHttpClient46);
        org.junit.Assert.assertNull(cookieHandler48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(okHttpClient50);
        org.junit.Assert.assertNotNull(okHttpClient52);
        org.junit.Assert.assertNull(responseCache53);
        org.junit.Assert.assertNotNull(okAuthenticator54);
        org.junit.Assert.assertNull(hostnameVerifier55);
        org.junit.Assert.assertNotNull(sSLSocketFactory56);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(socket58);
        org.junit.Assert.assertEquals(socket58.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(okHttpClient59);
        org.junit.Assert.assertNotNull(okHttpClient60);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(okHttpClient62);
        org.junit.Assert.assertNotNull(socket63);
        org.junit.Assert.assertEquals(socket63.toString(), "Socket[unconnected]");
    }

    @Test
    public void test03042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03042");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        com.squareup.okhttp.OkAuthenticator okAuthenticator5 = okHttpClient0.authenticator;
        java.net.ResponseCache responseCache6 = okHttpClient0.getResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector8 = null;
        okHttpClient7.proxySelector = proxySelector8;
        java.net.ProxySelector proxySelector10 = okHttpClient7.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient7.setHostnameVerifier(hostnameVerifier11);
        boolean boolean13 = okHttpClient7.getFollowProtocolRedirects();
        java.net.ProxySelector proxySelector14 = okHttpClient7.proxySelector;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector16 = null;
        okHttpClient15.proxySelector = proxySelector16;
        java.net.ProxySelector proxySelector18 = okHttpClient15.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier19 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient15.setHostnameVerifier(hostnameVerifier19);
        boolean boolean21 = okHttpClient15.getFollowProtocolRedirects();
        com.squareup.okhttp.ConnectionPool connectionPool24 = new com.squareup.okhttp.ConnectionPool((int) 'a', (long) (byte) -1);
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient15.setConnectionPool(connectionPool24);
        com.squareup.okhttp.OkHttpClient okHttpClient26 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler27 = okHttpClient26.getCookieHandler();
        boolean boolean28 = okHttpClient26.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient26.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient29.setHostnameVerifier(hostnameVerifier30);
        java.net.ResponseCache responseCache32 = okHttpClient31.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator33 = okHttpClient31.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier34 = okHttpClient31.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory35 = okHttpClient31.getSslSocketFactory();
        okHttpClient15.sslSocketFactory = sSLSocketFactory35;
        okHttpClient7.sslSocketFactory = sSLSocketFactory35;
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory35);
        java.lang.Class<?> wildcardClass39 = sSLSocketFactory35.getClass();
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(okAuthenticator5);
        org.junit.Assert.assertNull(responseCache6);
        org.junit.Assert.assertNull(proxySelector10);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(proxySelector14);
        org.junit.Assert.assertNull(proxySelector18);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(okHttpClient25);
        org.junit.Assert.assertNull(cookieHandler27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(okHttpClient29);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNull(responseCache32);
        org.junit.Assert.assertNotNull(okAuthenticator33);
        org.junit.Assert.assertNull(hostnameVerifier34);
        org.junit.Assert.assertNotNull(sSLSocketFactory35);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test03043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03043");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setCookieHandler(cookieHandler1);
        javax.net.ssl.HostnameVerifier hostnameVerifier3 = okHttpClient2.getHostnameVerifier();
        com.squareup.okhttp.ConnectionPool connectionPool4 = okHttpClient2.connectionPool;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler6 = okHttpClient5.getCookieHandler();
        boolean boolean7 = okHttpClient5.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient5.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient8.setHostnameVerifier(hostnameVerifier9);
        java.net.ResponseCache responseCache11 = okHttpClient10.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator12 = okHttpClient10.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier13 = okHttpClient10.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient14 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler15 = okHttpClient14.getCookieHandler();
        boolean boolean16 = okHttpClient14.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient14.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector19 = null;
        okHttpClient18.proxySelector = proxySelector19;
        java.net.ProxySelector proxySelector21 = okHttpClient18.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier22 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient18.setHostnameVerifier(hostnameVerifier22);
        java.net.ProxySelector proxySelector24 = okHttpClient18.proxySelector;
        java.net.ResponseCache responseCache25 = okHttpClient18.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet26 = okHttpClient18.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler28 = okHttpClient27.getCookieHandler();
        boolean boolean29 = okHttpClient27.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient30 = okHttpClient27.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool33 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int34 = connectionPool33.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient30.setConnectionPool(connectionPool33);
        com.squareup.okhttp.OkHttpClient okHttpClient36 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector37 = null;
        okHttpClient36.proxySelector = proxySelector37;
        java.net.ProxySelector proxySelector39 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient40 = okHttpClient36.setProxySelector(proxySelector39);
        java.net.ProxySelector proxySelector41 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient36.setProxySelector(proxySelector41);
        okHttpClient35.proxySelector = proxySelector41;
        javax.net.ssl.HostnameVerifier hostnameVerifier44 = okHttpClient35.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient45 = okHttpClient18.setHostnameVerifier(hostnameVerifier44);
        javax.net.ssl.HostnameVerifier hostnameVerifier46 = okHttpClient45.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient47 = okHttpClient14.setHostnameVerifier(hostnameVerifier46);
        java.net.Proxy proxy48 = okHttpClient47.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient49 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector50 = null;
        okHttpClient49.proxySelector = proxySelector50;
        java.net.ProxySelector proxySelector52 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient53 = okHttpClient49.setProxySelector(proxySelector52);
        java.net.ProxySelector proxySelector54 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient55 = okHttpClient49.setProxySelector(proxySelector54);
        java.net.ProxySelector.setDefault(proxySelector54);
        okHttpClient47.proxySelector = proxySelector54;
        okHttpClient10.proxySelector = proxySelector54;
        okHttpClient2.proxySelector = proxySelector54;
        org.junit.Assert.assertNotNull(okHttpClient2);
        org.junit.Assert.assertNull(hostnameVerifier3);
        org.junit.Assert.assertNull(connectionPool4);
        org.junit.Assert.assertNull(cookieHandler6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertNull(responseCache11);
        org.junit.Assert.assertNotNull(okAuthenticator12);
        org.junit.Assert.assertNull(hostnameVerifier13);
        org.junit.Assert.assertNull(cookieHandler15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNull(proxySelector21);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertNull(proxySelector24);
        org.junit.Assert.assertNull(responseCache25);
        org.junit.Assert.assertNotNull(routeSet26);
        org.junit.Assert.assertNull(cookieHandler28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(okHttpClient30);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNotNull(okHttpClient40);
// flaky:         org.junit.Assert.assertNull(proxySelector41);
        org.junit.Assert.assertNotNull(okHttpClient42);
        org.junit.Assert.assertNotNull(hostnameVerifier44);
        org.junit.Assert.assertNotNull(okHttpClient45);
        org.junit.Assert.assertNotNull(hostnameVerifier46);
        org.junit.Assert.assertNotNull(okHttpClient47);
        org.junit.Assert.assertNull(proxy48);
        org.junit.Assert.assertNotNull(okHttpClient53);
// flaky:         org.junit.Assert.assertNull(proxySelector54);
        org.junit.Assert.assertNotNull(okHttpClient55);
    }

    @Test
    public void test03044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03044");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setHostnameVerifier(hostnameVerifier4);
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler7 = okHttpClient6.getCookieHandler();
        boolean boolean8 = okHttpClient6.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient6.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient10 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector11 = null;
        okHttpClient10.proxySelector = proxySelector11;
        java.net.ProxySelector proxySelector13 = okHttpClient10.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient10.setHostnameVerifier(hostnameVerifier14);
        java.net.ProxySelector proxySelector16 = okHttpClient10.proxySelector;
        java.net.ResponseCache responseCache17 = okHttpClient10.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet18 = okHttpClient10.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler20 = okHttpClient19.getCookieHandler();
        boolean boolean21 = okHttpClient19.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient19.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool25 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int26 = connectionPool25.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient22.setConnectionPool(connectionPool25);
        com.squareup.okhttp.OkHttpClient okHttpClient28 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector29 = null;
        okHttpClient28.proxySelector = proxySelector29;
        java.net.ProxySelector proxySelector31 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient28.setProxySelector(proxySelector31);
        java.net.ProxySelector proxySelector33 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient28.setProxySelector(proxySelector33);
        okHttpClient27.proxySelector = proxySelector33;
        javax.net.ssl.HostnameVerifier hostnameVerifier36 = okHttpClient27.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient10.setHostnameVerifier(hostnameVerifier36);
        javax.net.ssl.HostnameVerifier hostnameVerifier38 = okHttpClient37.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient6.setHostnameVerifier(hostnameVerifier38);
        javax.net.ssl.HostnameVerifier hostnameVerifier40 = okHttpClient39.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient41 = okHttpClient5.setHostnameVerifier(hostnameVerifier40);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory42 = okHttpClient5.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient43 = okHttpClient5.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool46 = new com.squareup.okhttp.ConnectionPool((int) (short) 0, (long) '#');
        okHttpClient5.connectionPool = connectionPool46;
        java.net.ProxySelector proxySelector48 = okHttpClient5.getProxySelector();
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(cookieHandler7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNull(proxySelector13);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNull(proxySelector16);
        org.junit.Assert.assertNull(responseCache17);
        org.junit.Assert.assertNotNull(routeSet18);
        org.junit.Assert.assertNull(cookieHandler20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNotNull(okHttpClient32);
// flaky:         org.junit.Assert.assertNull(proxySelector33);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertNotNull(hostnameVerifier36);
        org.junit.Assert.assertNotNull(okHttpClient37);
        org.junit.Assert.assertNotNull(hostnameVerifier38);
        org.junit.Assert.assertNotNull(okHttpClient39);
        org.junit.Assert.assertNotNull(hostnameVerifier40);
        org.junit.Assert.assertNotNull(okHttpClient41);
        org.junit.Assert.assertNull(sSLSocketFactory42);
        org.junit.Assert.assertNotNull(okHttpClient43);
        org.junit.Assert.assertNull(proxySelector48);
    }

    @Test
    public void test03045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03045");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool6 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int7 = connectionPool6.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient3.setConnectionPool(connectionPool6);
        com.squareup.okhttp.OkHttpClient okHttpClient9 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector10 = null;
        okHttpClient9.proxySelector = proxySelector10;
        java.net.ProxySelector proxySelector12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient9.setProxySelector(proxySelector12);
        java.net.ProxySelector proxySelector14 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient9.setProxySelector(proxySelector14);
        okHttpClient8.proxySelector = proxySelector14;
        javax.net.ssl.HostnameVerifier hostnameVerifier17 = okHttpClient8.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler19 = okHttpClient18.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray20 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet21 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet21, routeArray20);
        okHttpClient18.failedRoutes = routeSet21;
        java.net.Proxy proxy24 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient25 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler26 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient25.setCookieHandler(cookieHandler26);
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient25.setFollowProtocolRedirects(true);
        boolean boolean30 = proxy24.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient18.setProxy(proxy24);
        java.net.Proxy proxy32 = okHttpClient31.getProxy();
        okHttpClient8.proxy = proxy32;
        java.net.Proxy.Type type34 = proxy32.type();
        com.squareup.okhttp.OkHttpClient okHttpClient35 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler36 = okHttpClient35.getCookieHandler();
        boolean boolean37 = okHttpClient35.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient35.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient39 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector40 = null;
        okHttpClient39.proxySelector = proxySelector40;
        java.net.ProxySelector proxySelector42 = okHttpClient39.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier43 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient44 = okHttpClient39.setHostnameVerifier(hostnameVerifier43);
        java.net.ProxySelector proxySelector45 = okHttpClient39.proxySelector;
        java.net.ResponseCache responseCache46 = okHttpClient39.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet47 = okHttpClient39.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient48 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler49 = okHttpClient48.getCookieHandler();
        boolean boolean50 = okHttpClient48.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient51 = okHttpClient48.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool54 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int55 = connectionPool54.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient56 = okHttpClient51.setConnectionPool(connectionPool54);
        com.squareup.okhttp.OkHttpClient okHttpClient57 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector58 = null;
        okHttpClient57.proxySelector = proxySelector58;
        java.net.ProxySelector proxySelector60 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient61 = okHttpClient57.setProxySelector(proxySelector60);
        java.net.ProxySelector proxySelector62 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient63 = okHttpClient57.setProxySelector(proxySelector62);
        okHttpClient56.proxySelector = proxySelector62;
        javax.net.ssl.HostnameVerifier hostnameVerifier65 = okHttpClient56.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient66 = okHttpClient39.setHostnameVerifier(hostnameVerifier65);
        javax.net.ssl.HostnameVerifier hostnameVerifier67 = okHttpClient66.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient68 = okHttpClient35.setHostnameVerifier(hostnameVerifier67);
        java.net.Proxy proxy69 = okHttpClient68.proxy;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory70 = okHttpClient68.getSslSocketFactory();
        com.squareup.okhttp.ConnectionPool connectionPool73 = new com.squareup.okhttp.ConnectionPool((int) (short) 0, (long) 'a');
        com.squareup.okhttp.OkHttpClient okHttpClient74 = okHttpClient68.setConnectionPool(connectionPool73);
        com.squareup.okhttp.OkAuthenticator okAuthenticator75 = okHttpClient74.getAuthenticator();
        java.net.Proxy proxy76 = okHttpClient74.getProxy();
        boolean boolean77 = proxy32.equals((java.lang.Object) okHttpClient74);
        java.lang.String str78 = proxy32.toString();
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertNotNull(okHttpClient13);
// flaky:         org.junit.Assert.assertNull(proxySelector14);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNotNull(hostnameVerifier17);
        org.junit.Assert.assertNull(cookieHandler19);
        org.junit.Assert.assertNotNull(routeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(proxy24);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNotNull(okHttpClient29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNotNull(proxy32);
        org.junit.Assert.assertTrue("'" + type34 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type34.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(cookieHandler36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNull(proxySelector42);
        org.junit.Assert.assertNotNull(okHttpClient44);
        org.junit.Assert.assertNull(proxySelector45);
        org.junit.Assert.assertNull(responseCache46);
        org.junit.Assert.assertNotNull(routeSet47);
        org.junit.Assert.assertNull(cookieHandler49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(okHttpClient51);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(okHttpClient56);
        org.junit.Assert.assertNotNull(okHttpClient61);
// flaky:         org.junit.Assert.assertNull(proxySelector62);
        org.junit.Assert.assertNotNull(okHttpClient63);
        org.junit.Assert.assertNotNull(hostnameVerifier65);
        org.junit.Assert.assertNotNull(okHttpClient66);
        org.junit.Assert.assertNotNull(hostnameVerifier67);
        org.junit.Assert.assertNotNull(okHttpClient68);
        org.junit.Assert.assertNull(proxy69);
        org.junit.Assert.assertNull(sSLSocketFactory70);
        org.junit.Assert.assertNotNull(okHttpClient74);
        org.junit.Assert.assertNull(okAuthenticator75);
        org.junit.Assert.assertNull(proxy76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "DIRECT" + "'", str78, "DIRECT");
    }

    @Test
    public void test03046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03046");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool6 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int7 = connectionPool6.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient3.setConnectionPool(connectionPool6);
        com.squareup.okhttp.ConnectionPool connectionPool9 = okHttpClient3.connectionPool;
        java.net.ResponseCache responseCache10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient3.setResponseCache(responseCache10);
        com.squareup.okhttp.OkAuthenticator okAuthenticator12 = okHttpClient3.getAuthenticator();
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler14 = okHttpClient13.getCookieHandler();
        boolean boolean15 = okHttpClient13.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient13.setAuthenticator(okAuthenticator16);
        java.net.ResponseCache responseCache18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient13.setResponseCache(responseCache18);
        com.squareup.okhttp.ConnectionPool connectionPool22 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool22.evictAll();
        okHttpClient13.connectionPool = connectionPool22;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory25 = okHttpClient13.sslSocketFactory;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory26 = null;
        okHttpClient13.sslSocketFactory = sSLSocketFactory26;
        java.net.ProxySelector proxySelector28 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient13.setProxySelector(proxySelector28);
        com.squareup.okhttp.OkHttpClient okHttpClient30 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector31 = null;
        okHttpClient30.proxySelector = proxySelector31;
        java.net.ProxySelector proxySelector33 = okHttpClient30.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier34 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient30.setHostnameVerifier(hostnameVerifier34);
        java.net.ProxySelector proxySelector36 = java.net.ProxySelector.getDefault();
        okHttpClient30.proxySelector = proxySelector36;
        okHttpClient29.proxySelector = proxySelector36;
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient3.setProxySelector(proxySelector36);
        com.squareup.okhttp.OkHttpClient okHttpClient40 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler41 = okHttpClient40.getCookieHandler();
        boolean boolean42 = okHttpClient40.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator43 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient44 = okHttpClient40.setAuthenticator(okAuthenticator43);
        com.squareup.okhttp.ConnectionPool connectionPool47 = new com.squareup.okhttp.ConnectionPool(1, 0L);
        com.squareup.okhttp.OkHttpClient okHttpClient48 = okHttpClient40.setConnectionPool(connectionPool47);
        com.squareup.okhttp.OkAuthenticator okAuthenticator49 = okHttpClient48.getAuthenticator();
        com.squareup.okhttp.OkHttpClient okHttpClient50 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler51 = okHttpClient50.getCookieHandler();
        boolean boolean52 = okHttpClient50.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator53 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient54 = okHttpClient50.setAuthenticator(okAuthenticator53);
        com.squareup.okhttp.OkHttpClient okHttpClient55 = okHttpClient50.copyWithDefaults();
        java.net.CookieHandler cookieHandler56 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient57 = okHttpClient50.setCookieHandler(cookieHandler56);
        com.squareup.okhttp.OkAuthenticator okAuthenticator58 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient59 = okHttpClient57.setAuthenticator(okAuthenticator58);
        com.squareup.okhttp.OkHttpClient okHttpClient60 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector61 = null;
        okHttpClient60.proxySelector = proxySelector61;
        java.net.ProxySelector proxySelector63 = okHttpClient60.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier64 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient65 = okHttpClient60.setHostnameVerifier(hostnameVerifier64);
        java.net.ProxySelector proxySelector66 = okHttpClient60.proxySelector;
        java.net.ResponseCache responseCache67 = okHttpClient60.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet68 = okHttpClient60.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient69 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler70 = okHttpClient69.getCookieHandler();
        boolean boolean71 = okHttpClient69.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient72 = okHttpClient69.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool75 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int76 = connectionPool75.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient77 = okHttpClient72.setConnectionPool(connectionPool75);
        com.squareup.okhttp.OkHttpClient okHttpClient78 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector79 = null;
        okHttpClient78.proxySelector = proxySelector79;
        java.net.ProxySelector proxySelector81 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient82 = okHttpClient78.setProxySelector(proxySelector81);
        java.net.ProxySelector proxySelector83 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient84 = okHttpClient78.setProxySelector(proxySelector83);
        okHttpClient77.proxySelector = proxySelector83;
        javax.net.ssl.HostnameVerifier hostnameVerifier86 = okHttpClient77.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient87 = okHttpClient60.setHostnameVerifier(hostnameVerifier86);
        javax.net.ssl.HostnameVerifier hostnameVerifier88 = okHttpClient87.getHostnameVerifier();
        okHttpClient59.hostnameVerifier = hostnameVerifier88;
        okHttpClient48.hostnameVerifier = hostnameVerifier88;
        okHttpClient39.hostnameVerifier = hostnameVerifier88;
        java.net.CookieHandler cookieHandler92 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient93 = okHttpClient39.setCookieHandler(cookieHandler92);
        java.net.ProxySelector proxySelector94 = okHttpClient39.getProxySelector();
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(okAuthenticator12);
        org.junit.Assert.assertNull(cookieHandler14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNull(sSLSocketFactory25);
// flaky:         org.junit.Assert.assertNull(proxySelector28);
        org.junit.Assert.assertNotNull(okHttpClient29);
        org.junit.Assert.assertNull(proxySelector33);
        org.junit.Assert.assertNotNull(okHttpClient35);
// flaky:         org.junit.Assert.assertNull(proxySelector36);
        org.junit.Assert.assertNotNull(okHttpClient39);
        org.junit.Assert.assertNull(cookieHandler41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(okHttpClient44);
        org.junit.Assert.assertNotNull(okHttpClient48);
        org.junit.Assert.assertNull(okAuthenticator49);
        org.junit.Assert.assertNull(cookieHandler51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(okHttpClient54);
        org.junit.Assert.assertNotNull(okHttpClient55);
        org.junit.Assert.assertNotNull(okHttpClient57);
        org.junit.Assert.assertNotNull(okHttpClient59);
        org.junit.Assert.assertNull(proxySelector63);
        org.junit.Assert.assertNotNull(okHttpClient65);
        org.junit.Assert.assertNull(proxySelector66);
        org.junit.Assert.assertNull(responseCache67);
        org.junit.Assert.assertNotNull(routeSet68);
        org.junit.Assert.assertNull(cookieHandler70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(okHttpClient72);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNotNull(okHttpClient77);
        org.junit.Assert.assertNotNull(okHttpClient82);
// flaky:         org.junit.Assert.assertNull(proxySelector83);
        org.junit.Assert.assertNotNull(okHttpClient84);
        org.junit.Assert.assertNotNull(hostnameVerifier86);
        org.junit.Assert.assertNotNull(okHttpClient87);
        org.junit.Assert.assertNotNull(hostnameVerifier88);
        org.junit.Assert.assertNotNull(okHttpClient93);
// flaky:         org.junit.Assert.assertNull(proxySelector94);
    }

    @Test
    public void test03047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03047");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setHostnameVerifier(hostnameVerifier4);
        java.net.ProxySelector proxySelector6 = okHttpClient0.proxySelector;
        java.net.ResponseCache responseCache7 = okHttpClient0.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet8 = okHttpClient0.failedRoutes;
        java.net.ResponseCache responseCache9 = okHttpClient0.responseCache;
        java.net.Proxy proxy10 = java.net.Proxy.NO_PROXY;
        java.lang.String str11 = proxy10.toString();
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient0.setProxy(proxy10);
        com.squareup.okhttp.Route[] routeArray13 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet14 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet14, routeArray13);
        okHttpClient12.failedRoutes = routeSet14;
        com.squareup.okhttp.ConnectionPool connectionPool19 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (-1L));
        int int20 = connectionPool19.getSpdyConnectionCount();
        okHttpClient12.connectionPool = connectionPool19;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector23 = null;
        okHttpClient22.proxySelector = proxySelector23;
        java.net.ProxySelector proxySelector25 = okHttpClient22.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier26 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient22.setHostnameVerifier(hostnameVerifier26);
        java.net.ResponseCache responseCache28 = null;
        okHttpClient22.responseCache = responseCache28;
        java.net.ResponseCache responseCache30 = okHttpClient22.getResponseCache();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory31 = okHttpClient22.sslSocketFactory;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler33 = okHttpClient32.getCookieHandler();
        boolean boolean34 = okHttpClient32.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient32.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet36 = okHttpClient35.failedRoutes;
        boolean boolean37 = okHttpClient35.getFollowProtocolRedirects();
        java.net.ResponseCache responseCache38 = okHttpClient35.responseCache;
        com.squareup.okhttp.OkHttpClient okHttpClient39 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector40 = null;
        okHttpClient39.proxySelector = proxySelector40;
        java.net.ProxySelector proxySelector42 = okHttpClient39.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier43 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient44 = okHttpClient39.setHostnameVerifier(hostnameVerifier43);
        java.net.ResponseCache responseCache45 = okHttpClient44.responseCache;
        java.net.CookieHandler cookieHandler46 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient47 = okHttpClient44.setCookieHandler(cookieHandler46);
        java.net.ResponseCache responseCache48 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient49 = okHttpClient44.setResponseCache(responseCache48);
        java.net.ResponseCache responseCache50 = null;
        okHttpClient44.responseCache = responseCache50;
        com.squareup.okhttp.OkHttpClient okHttpClient52 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler53 = okHttpClient52.getCookieHandler();
        boolean boolean54 = okHttpClient52.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator55 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient56 = okHttpClient52.setAuthenticator(okAuthenticator55);
        com.squareup.okhttp.OkHttpClient okHttpClient57 = okHttpClient52.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier58 = okHttpClient52.hostnameVerifier;
        java.net.ProxySelector proxySelector59 = java.net.ProxySelector.getDefault();
        okHttpClient52.proxySelector = proxySelector59;
        com.squareup.okhttp.OkHttpClient okHttpClient61 = okHttpClient52.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient62 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler63 = okHttpClient62.getCookieHandler();
        boolean boolean64 = okHttpClient62.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient65 = okHttpClient62.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool68 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int69 = connectionPool68.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient70 = okHttpClient65.setConnectionPool(connectionPool68);
        com.squareup.okhttp.ConnectionPool connectionPool71 = okHttpClient65.connectionPool;
        java.net.ResponseCache responseCache72 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient73 = okHttpClient65.setResponseCache(responseCache72);
        com.squareup.okhttp.OkAuthenticator okAuthenticator74 = okHttpClient65.getAuthenticator();
        okHttpClient61.authenticator = okAuthenticator74;
        okHttpClient44.authenticator = okAuthenticator74;
        okHttpClient35.authenticator = okAuthenticator74;
        com.squareup.okhttp.OkHttpClient okHttpClient78 = okHttpClient22.setAuthenticator(okAuthenticator74);
        com.squareup.okhttp.OkHttpClient okHttpClient79 = okHttpClient12.setAuthenticator(okAuthenticator74);
        com.squareup.okhttp.OkHttpClient okHttpClient80 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector81 = null;
        okHttpClient80.proxySelector = proxySelector81;
        java.net.ProxySelector proxySelector83 = okHttpClient80.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier84 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient85 = okHttpClient80.setHostnameVerifier(hostnameVerifier84);
        boolean boolean86 = okHttpClient80.getFollowProtocolRedirects();
        com.squareup.okhttp.ConnectionPool connectionPool89 = new com.squareup.okhttp.ConnectionPool((int) 'a', (long) (byte) -1);
        com.squareup.okhttp.OkHttpClient okHttpClient90 = okHttpClient80.setConnectionPool(connectionPool89);
        java.net.ResponseCache responseCache91 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient92 = okHttpClient80.setResponseCache(responseCache91);
        com.squareup.okhttp.OkAuthenticator okAuthenticator93 = okHttpClient92.authenticator;
        java.util.Set<com.squareup.okhttp.Route> routeSet94 = okHttpClient92.failedRoutes;
        okHttpClient79.failedRoutes = routeSet94;
        okHttpClient79.followProtocolRedirects = false;
        com.squareup.okhttp.OkAuthenticator okAuthenticator98 = okHttpClient79.authenticator;
        java.net.ResponseCache responseCache99 = okHttpClient79.responseCache;
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(proxySelector6);
        org.junit.Assert.assertNull(responseCache7);
        org.junit.Assert.assertNotNull(routeSet8);
        org.junit.Assert.assertNull(responseCache9);
        org.junit.Assert.assertNotNull(proxy10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "DIRECT" + "'", str11, "DIRECT");
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertNotNull(routeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNull(proxySelector25);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNull(responseCache30);
        org.junit.Assert.assertNull(sSLSocketFactory31);
        org.junit.Assert.assertNull(cookieHandler33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNotNull(routeSet36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(responseCache38);
        org.junit.Assert.assertNull(proxySelector42);
        org.junit.Assert.assertNotNull(okHttpClient44);
        org.junit.Assert.assertNull(responseCache45);
        org.junit.Assert.assertNotNull(okHttpClient47);
        org.junit.Assert.assertNotNull(okHttpClient49);
        org.junit.Assert.assertNull(cookieHandler53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(okHttpClient56);
        org.junit.Assert.assertNotNull(okHttpClient57);
        org.junit.Assert.assertNull(hostnameVerifier58);
// flaky:         org.junit.Assert.assertNull(proxySelector59);
        org.junit.Assert.assertNotNull(okHttpClient61);
        org.junit.Assert.assertNull(cookieHandler63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(okHttpClient65);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNotNull(okHttpClient70);
        org.junit.Assert.assertNotNull(connectionPool71);
        org.junit.Assert.assertNotNull(okHttpClient73);
        org.junit.Assert.assertNotNull(okAuthenticator74);
        org.junit.Assert.assertNotNull(okHttpClient78);
        org.junit.Assert.assertNotNull(okHttpClient79);
        org.junit.Assert.assertNull(proxySelector83);
        org.junit.Assert.assertNotNull(okHttpClient85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(okHttpClient90);
        org.junit.Assert.assertNotNull(okHttpClient92);
        org.junit.Assert.assertNull(okAuthenticator93);
        org.junit.Assert.assertNotNull(routeSet94);
        org.junit.Assert.assertNotNull(okAuthenticator98);
        org.junit.Assert.assertNull(responseCache99);
    }

    @Test
    public void test03048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03048");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        java.net.ResponseCache responseCache5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient0.setResponseCache(responseCache5);
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool9.evictAll();
        okHttpClient0.connectionPool = connectionPool9;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory12 = okHttpClient0.sslSocketFactory;
        java.net.ResponseCache responseCache13 = null;
        okHttpClient0.responseCache = responseCache13;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache15 = okHttpClient0.okResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient16.copyWithDefaults();
        java.net.CookieHandler cookieHandler18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient17.setCookieHandler(cookieHandler18);
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient6);
        org.junit.Assert.assertNull(sSLSocketFactory12);
        org.junit.Assert.assertNull(okResponseCache15);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNotNull(okHttpClient19);
    }

    @Test
    public void test03049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03049");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient3.setHostnameVerifier(hostnameVerifier4);
        java.net.ResponseCache responseCache6 = okHttpClient5.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator7 = okHttpClient5.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = okHttpClient5.getHostnameVerifier();
        com.squareup.okhttp.OkAuthenticator okAuthenticator9 = null;
        okHttpClient5.authenticator = okAuthenticator9;
        com.squareup.okhttp.OkAuthenticator okAuthenticator11 = okHttpClient5.getAuthenticator();
        com.squareup.okhttp.OkHttpClient okHttpClient12 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler13 = okHttpClient12.getCookieHandler();
        boolean boolean14 = okHttpClient12.getFollowProtocolRedirects();
        java.net.ProxySelector proxySelector15 = okHttpClient12.proxySelector;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector17 = null;
        okHttpClient16.proxySelector = proxySelector17;
        java.net.ProxySelector proxySelector19 = okHttpClient16.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier20 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient16.setHostnameVerifier(hostnameVerifier20);
        java.net.ProxySelector proxySelector22 = okHttpClient16.proxySelector;
        java.net.ResponseCache responseCache23 = okHttpClient16.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet24 = okHttpClient16.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient25 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler26 = okHttpClient25.getCookieHandler();
        boolean boolean27 = okHttpClient25.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient25.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool31 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int32 = connectionPool31.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient28.setConnectionPool(connectionPool31);
        com.squareup.okhttp.OkHttpClient okHttpClient34 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector35 = null;
        okHttpClient34.proxySelector = proxySelector35;
        java.net.ProxySelector proxySelector37 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient34.setProxySelector(proxySelector37);
        java.net.ProxySelector proxySelector39 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient40 = okHttpClient34.setProxySelector(proxySelector39);
        okHttpClient33.proxySelector = proxySelector39;
        javax.net.ssl.HostnameVerifier hostnameVerifier42 = okHttpClient33.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient43 = okHttpClient16.setHostnameVerifier(hostnameVerifier42);
        java.net.Proxy proxy44 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress45 = proxy44.address();
        com.squareup.okhttp.OkHttpClient okHttpClient46 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector47 = null;
        okHttpClient46.proxySelector = proxySelector47;
        com.squareup.okhttp.ConnectionPool connectionPool49 = okHttpClient46.connectionPool;
        com.squareup.okhttp.ConnectionPool connectionPool50 = okHttpClient46.getConnectionPool();
        boolean boolean51 = proxy44.equals((java.lang.Object) okHttpClient46);
        okHttpClient16.proxy = proxy44;
        com.squareup.okhttp.OkHttpClient okHttpClient53 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler54 = okHttpClient53.getCookieHandler();
        boolean boolean55 = okHttpClient53.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient56 = okHttpClient53.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier57 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient58 = okHttpClient56.setHostnameVerifier(hostnameVerifier57);
        java.net.ResponseCache responseCache59 = okHttpClient58.getResponseCache();
        java.net.ProxySelector proxySelector60 = okHttpClient58.getProxySelector();
        boolean boolean61 = proxy44.equals((java.lang.Object) proxySelector60);
        com.squareup.okhttp.OkHttpClient okHttpClient62 = okHttpClient12.setProxy(proxy44);
        java.net.CookieHandler cookieHandler63 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient64 = okHttpClient12.setCookieHandler(cookieHandler63);
        java.net.Proxy proxy65 = okHttpClient64.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient66 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler67 = okHttpClient66.getCookieHandler();
        java.net.ResponseCache responseCache68 = null;
        okHttpClient66.responseCache = responseCache68;
        boolean boolean70 = okHttpClient66.followProtocolRedirects;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory71 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient72 = okHttpClient66.setSSLSocketFactory(sSLSocketFactory71);
        java.net.Proxy proxy73 = okHttpClient72.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient74 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector75 = null;
        okHttpClient74.proxySelector = proxySelector75;
        java.net.ProxySelector proxySelector77 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient78 = okHttpClient74.setProxySelector(proxySelector77);
        java.net.ProxySelector proxySelector79 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient80 = okHttpClient74.setProxySelector(proxySelector79);
        java.net.ProxySelector.setDefault(proxySelector79);
        okHttpClient72.proxySelector = proxySelector79;
        boolean boolean83 = proxy65.equals((java.lang.Object) proxySelector79);
        okHttpClient5.proxy = proxy65;
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(responseCache6);
        org.junit.Assert.assertNotNull(okAuthenticator7);
        org.junit.Assert.assertNull(hostnameVerifier8);
        org.junit.Assert.assertNull(okAuthenticator11);
        org.junit.Assert.assertNull(cookieHandler13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(proxySelector15);
        org.junit.Assert.assertNull(proxySelector19);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNull(proxySelector22);
        org.junit.Assert.assertNull(responseCache23);
        org.junit.Assert.assertNotNull(routeSet24);
        org.junit.Assert.assertNull(cookieHandler26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(okHttpClient33);
        org.junit.Assert.assertNotNull(okHttpClient38);
// flaky:         org.junit.Assert.assertNull(proxySelector39);
        org.junit.Assert.assertNotNull(okHttpClient40);
        org.junit.Assert.assertNotNull(hostnameVerifier42);
        org.junit.Assert.assertNotNull(okHttpClient43);
        org.junit.Assert.assertNotNull(proxy44);
        org.junit.Assert.assertNull(socketAddress45);
        org.junit.Assert.assertNull(connectionPool49);
        org.junit.Assert.assertNull(connectionPool50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(cookieHandler54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(okHttpClient56);
        org.junit.Assert.assertNotNull(okHttpClient58);
        org.junit.Assert.assertNull(responseCache59);
// flaky:         org.junit.Assert.assertNull(proxySelector60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(okHttpClient62);
        org.junit.Assert.assertNotNull(okHttpClient64);
        org.junit.Assert.assertNotNull(proxy65);
        org.junit.Assert.assertNull(cookieHandler67);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(okHttpClient72);
        org.junit.Assert.assertNull(proxy73);
        org.junit.Assert.assertNotNull(okHttpClient78);
// flaky:         org.junit.Assert.assertNull(proxySelector79);
        org.junit.Assert.assertNotNull(okHttpClient80);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test03050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03050");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        java.net.Proxy proxy5 = okHttpClient0.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient0.copyWithDefaults();
        java.net.CookieHandler cookieHandler7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient0.setCookieHandler(cookieHandler7);
        com.squareup.okhttp.OkHttpClient okHttpClient9 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier10 = okHttpClient9.hostnameVerifier;
        java.net.ResponseCache responseCache11 = okHttpClient9.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator12 = okHttpClient9.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler14 = okHttpClient13.getCookieHandler();
        boolean boolean15 = okHttpClient13.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient13.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier17 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient16.setHostnameVerifier(hostnameVerifier17);
        java.net.ResponseCache responseCache19 = okHttpClient18.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator20 = okHttpClient18.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier21 = okHttpClient18.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory22 = okHttpClient18.getSslSocketFactory();
        java.lang.String[] strArray23 = sSLSocketFactory22.getSupportedCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient9.setSSLSocketFactory(sSLSocketFactory22);
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient8.setSSLSocketFactory(sSLSocketFactory22);
        com.squareup.okhttp.OkHttpClient okHttpClient26 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector27 = null;
        okHttpClient26.proxySelector = proxySelector27;
        java.net.ProxySelector proxySelector29 = okHttpClient26.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient26.setHostnameVerifier(hostnameVerifier30);
        java.net.ResponseCache responseCache32 = okHttpClient31.responseCache;
        java.net.CookieHandler cookieHandler33 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient31.setCookieHandler(cookieHandler33);
        java.net.CookieHandler cookieHandler35 = okHttpClient31.cookieHandler;
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient31.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient37 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector38 = null;
        okHttpClient37.proxySelector = proxySelector38;
        java.net.ProxySelector proxySelector40 = okHttpClient37.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier41 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient37.setHostnameVerifier(hostnameVerifier41);
        boolean boolean43 = okHttpClient37.getFollowProtocolRedirects();
        com.squareup.okhttp.ConnectionPool connectionPool46 = new com.squareup.okhttp.ConnectionPool((int) 'a', (long) (byte) -1);
        com.squareup.okhttp.OkHttpClient okHttpClient47 = okHttpClient37.setConnectionPool(connectionPool46);
        com.squareup.okhttp.OkHttpClient okHttpClient48 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler49 = okHttpClient48.getCookieHandler();
        boolean boolean50 = okHttpClient48.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient51 = okHttpClient48.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier52 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient53 = okHttpClient51.setHostnameVerifier(hostnameVerifier52);
        java.net.ResponseCache responseCache54 = okHttpClient53.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator55 = okHttpClient53.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier56 = okHttpClient53.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory57 = okHttpClient53.getSslSocketFactory();
        okHttpClient37.sslSocketFactory = sSLSocketFactory57;
        okHttpClient31.sslSocketFactory = sSLSocketFactory57;
        java.net.Socket socket60 = sSLSocketFactory57.createSocket();
        java.io.InputStream inputStream61 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket63 = sSLSocketFactory22.createSocket(socket60, inputStream61, true);
            org.junit.Assert.fail("Expected exception of type java.net.SocketException; message: Underlying socket is not connected");
        } catch (java.net.SocketException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(proxy5);
        org.junit.Assert.assertNotNull(okHttpClient6);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertNull(hostnameVerifier10);
        org.junit.Assert.assertNull(responseCache11);
        org.junit.Assert.assertNull(okAuthenticator12);
        org.junit.Assert.assertNull(cookieHandler14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNull(responseCache19);
        org.junit.Assert.assertNotNull(okAuthenticator20);
        org.junit.Assert.assertNull(hostnameVerifier21);
        org.junit.Assert.assertNotNull(sSLSocketFactory22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNotNull(okHttpClient25);
        org.junit.Assert.assertNull(proxySelector29);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNull(responseCache32);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertNull(cookieHandler35);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNull(proxySelector40);
        org.junit.Assert.assertNotNull(okHttpClient42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(okHttpClient47);
        org.junit.Assert.assertNull(cookieHandler49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(okHttpClient51);
        org.junit.Assert.assertNotNull(okHttpClient53);
        org.junit.Assert.assertNull(responseCache54);
        org.junit.Assert.assertNotNull(okAuthenticator55);
        org.junit.Assert.assertNull(hostnameVerifier56);
        org.junit.Assert.assertNotNull(sSLSocketFactory57);
        org.junit.Assert.assertNotNull(socket60);
        org.junit.Assert.assertEquals(socket60.toString(), "Socket[unconnected]");
    }

    @Test
    public void test03051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03051");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        java.net.ResponseCache responseCache2 = okHttpClient0.responseCache;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.copyWithDefaults();
        java.net.ResponseCache responseCache4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setResponseCache(responseCache4);
        com.squareup.okhttp.ConnectionPool connectionPool6 = okHttpClient0.getConnectionPool();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient0.setFollowProtocolRedirects(false);
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertNull(responseCache2);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(connectionPool6);
        org.junit.Assert.assertNotNull(okHttpClient8);
    }

    @Test
    public void test03052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03052");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setHostnameVerifier(hostnameVerifier4);
        java.net.ProxySelector proxySelector6 = okHttpClient0.proxySelector;
        java.net.ResponseCache responseCache7 = okHttpClient0.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet8 = okHttpClient0.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler10 = okHttpClient9.getCookieHandler();
        boolean boolean11 = okHttpClient9.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient9.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool15 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int16 = connectionPool15.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient12.setConnectionPool(connectionPool15);
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector19 = null;
        okHttpClient18.proxySelector = proxySelector19;
        java.net.ProxySelector proxySelector21 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient18.setProxySelector(proxySelector21);
        java.net.ProxySelector proxySelector23 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient18.setProxySelector(proxySelector23);
        okHttpClient17.proxySelector = proxySelector23;
        javax.net.ssl.HostnameVerifier hostnameVerifier26 = okHttpClient17.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient0.setHostnameVerifier(hostnameVerifier26);
        java.net.CookieHandler cookieHandler28 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient27.setCookieHandler(cookieHandler28);
        com.squareup.okhttp.ConnectionPool connectionPool32 = new com.squareup.okhttp.ConnectionPool((int) 'a', (long) (byte) -1);
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient29.setConnectionPool(connectionPool32);
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient29.setFollowProtocolRedirects(false);
        com.squareup.okhttp.OkHttpClient okHttpClient36 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier37 = okHttpClient36.hostnameVerifier;
        java.net.ResponseCache responseCache38 = okHttpClient36.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator39 = okHttpClient36.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient40 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler41 = okHttpClient40.getCookieHandler();
        boolean boolean42 = okHttpClient40.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient43 = okHttpClient40.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier44 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient45 = okHttpClient43.setHostnameVerifier(hostnameVerifier44);
        java.net.ResponseCache responseCache46 = okHttpClient45.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator47 = okHttpClient45.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient48 = okHttpClient36.setAuthenticator(okAuthenticator47);
        com.squareup.okhttp.OkHttpClient okHttpClient49 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler50 = okHttpClient49.getCookieHandler();
        boolean boolean51 = okHttpClient49.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator52 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient53 = okHttpClient49.setAuthenticator(okAuthenticator52);
        java.net.ResponseCache responseCache54 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient55 = okHttpClient49.setResponseCache(responseCache54);
        com.squareup.okhttp.ConnectionPool connectionPool58 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool58.evictAll();
        okHttpClient49.connectionPool = connectionPool58;
        connectionPool58.evictAll();
        int int62 = connectionPool58.getSpdyConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient63 = okHttpClient36.setConnectionPool(connectionPool58);
        java.util.Set<com.squareup.okhttp.Route> routeSet64 = okHttpClient36.failedRoutes;
        okHttpClient29.failedRoutes = routeSet64;
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(proxySelector6);
        org.junit.Assert.assertNull(responseCache7);
        org.junit.Assert.assertNotNull(routeSet8);
        org.junit.Assert.assertNull(cookieHandler10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNotNull(okHttpClient22);
// flaky:         org.junit.Assert.assertNull(proxySelector23);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNotNull(hostnameVerifier26);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNotNull(okHttpClient29);
        org.junit.Assert.assertNotNull(okHttpClient33);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNull(hostnameVerifier37);
        org.junit.Assert.assertNull(responseCache38);
        org.junit.Assert.assertNull(okAuthenticator39);
        org.junit.Assert.assertNull(cookieHandler41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(okHttpClient43);
        org.junit.Assert.assertNotNull(okHttpClient45);
        org.junit.Assert.assertNull(responseCache46);
        org.junit.Assert.assertNotNull(okAuthenticator47);
        org.junit.Assert.assertNotNull(okHttpClient48);
        org.junit.Assert.assertNull(cookieHandler50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(okHttpClient53);
        org.junit.Assert.assertNotNull(okHttpClient55);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(okHttpClient63);
        org.junit.Assert.assertNotNull(routeSet64);
    }

    @Test
    public void test03053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03053");
        com.squareup.okhttp.ConnectionPool connectionPool2 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 1);
        int int3 = connectionPool2.getConnectionCount();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test03054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03054");
        com.squareup.okhttp.ConnectionPool connectionPool2 = new com.squareup.okhttp.ConnectionPool(10, (long) (byte) 100);
        int int3 = connectionPool2.getConnectionCount();
        connectionPool2.evictAll();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test03055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03055");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray2 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet3 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet3, routeArray2);
        okHttpClient0.failedRoutes = routeSet3;
        java.net.Proxy proxy6 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient7.setCookieHandler(cookieHandler8);
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient7.setFollowProtocolRedirects(true);
        boolean boolean12 = proxy6.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient0.setProxy(proxy6);
        java.lang.String str14 = proxy6.toString();
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler16 = okHttpClient15.getCookieHandler();
        boolean boolean17 = okHttpClient15.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient15.setAuthenticator(okAuthenticator18);
        java.net.ResponseCache responseCache20 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient15.setResponseCache(responseCache20);
        com.squareup.okhttp.ConnectionPool connectionPool24 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool24.evictAll();
        okHttpClient15.connectionPool = connectionPool24;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory27 = okHttpClient15.sslSocketFactory;
        com.squareup.okhttp.ConnectionPool connectionPool28 = okHttpClient15.getConnectionPool();
        boolean boolean29 = proxy6.equals((java.lang.Object) okHttpClient15);
        java.net.ResponseCache responseCache30 = okHttpClient15.getResponseCache();
        com.squareup.okhttp.ConnectionPool connectionPool33 = new com.squareup.okhttp.ConnectionPool(0, (long) '4');
        int int34 = connectionPool33.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient15.setConnectionPool(connectionPool33);
        com.squareup.okhttp.OkHttpClient okHttpClient36 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler37 = okHttpClient36.getCookieHandler();
        boolean boolean38 = okHttpClient36.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient39 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler40 = okHttpClient39.getCookieHandler();
        boolean boolean41 = okHttpClient39.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient39.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet43 = okHttpClient42.failedRoutes;
        boolean boolean44 = okHttpClient42.getFollowProtocolRedirects();
        java.net.Proxy proxy45 = java.net.Proxy.NO_PROXY;
        okHttpClient42.proxy = proxy45;
        okHttpClient36.proxy = proxy45;
        com.squareup.okhttp.OkHttpClient okHttpClient48 = okHttpClient36.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet49 = okHttpClient48.failedRoutes;
        com.squareup.okhttp.ConnectionPool connectionPool50 = okHttpClient48.getConnectionPool();
        java.net.Proxy proxy51 = okHttpClient48.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient52 = okHttpClient15.setProxy(proxy51);
        java.net.Proxy.Type type53 = proxy51.type();
        java.net.SocketAddress socketAddress54 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Proxy proxy55 = new java.net.Proxy(type53, socketAddress54);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: type DIRECT is not compatible with address null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertNotNull(routeArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(proxy6);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "DIRECT" + "'", str14, "DIRECT");
        org.junit.Assert.assertNull(cookieHandler16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNull(sSLSocketFactory27);
        org.junit.Assert.assertNotNull(connectionPool28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(responseCache30);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNull(cookieHandler37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(cookieHandler40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(okHttpClient42);
        org.junit.Assert.assertNotNull(routeSet43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(proxy45);
        org.junit.Assert.assertNotNull(okHttpClient48);
        org.junit.Assert.assertNotNull(routeSet49);
        org.junit.Assert.assertNotNull(connectionPool50);
        org.junit.Assert.assertNotNull(proxy51);
        org.junit.Assert.assertNotNull(okHttpClient52);
        org.junit.Assert.assertTrue("'" + type53 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type53.equals(java.net.Proxy.Type.DIRECT));
    }

    @Test
    public void test03056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03056");
        com.squareup.okhttp.ConnectionPool connectionPool2 = new com.squareup.okhttp.ConnectionPool(10, (long) (short) 10);
        int int3 = connectionPool2.getHttpConnectionCount();
        int int4 = connectionPool2.getHttpConnectionCount();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    }

    @Test
    public void test03057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03057");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.copyWithDefaults();
        java.net.CookieHandler cookieHandler6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient0.setCookieHandler(cookieHandler6);
        com.squareup.okhttp.OkAuthenticator okAuthenticator8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient7.setAuthenticator(okAuthenticator8);
        com.squareup.okhttp.OkHttpClient okHttpClient10 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler11 = okHttpClient10.getCookieHandler();
        boolean boolean12 = okHttpClient10.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient10.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool16 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int17 = connectionPool16.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient13.setConnectionPool(connectionPool16);
        com.squareup.okhttp.ConnectionPool connectionPool19 = okHttpClient13.connectionPool;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient7.setConnectionPool(connectionPool19);
        com.squareup.okhttp.OkHttpClient okHttpClient21 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler22 = okHttpClient21.getCookieHandler();
        java.net.ResponseCache responseCache23 = null;
        okHttpClient21.responseCache = responseCache23;
        boolean boolean25 = okHttpClient21.followProtocolRedirects;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory26 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient21.setSSLSocketFactory(sSLSocketFactory26);
        java.net.Proxy proxy28 = okHttpClient27.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient29 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector30 = null;
        okHttpClient29.proxySelector = proxySelector30;
        java.net.ProxySelector proxySelector32 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient29.setProxySelector(proxySelector32);
        java.net.ProxySelector proxySelector34 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient29.setProxySelector(proxySelector34);
        java.net.ProxySelector.setDefault(proxySelector34);
        okHttpClient27.proxySelector = proxySelector34;
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient27.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient39 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler40 = okHttpClient39.getCookieHandler();
        boolean boolean41 = okHttpClient39.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient39.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier43 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient44 = okHttpClient42.setHostnameVerifier(hostnameVerifier43);
        java.net.ResponseCache responseCache45 = okHttpClient44.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator46 = okHttpClient44.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier47 = okHttpClient44.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory48 = okHttpClient44.getSslSocketFactory();
        java.lang.String[] strArray49 = sSLSocketFactory48.getSupportedCipherSuites();
        java.net.Socket socket50 = sSLSocketFactory48.createSocket();
        com.squareup.okhttp.OkHttpClient okHttpClient51 = okHttpClient27.setSSLSocketFactory(sSLSocketFactory48);
        com.squareup.okhttp.OkHttpClient okHttpClient52 = okHttpClient7.setSSLSocketFactory(sSLSocketFactory48);
        com.squareup.okhttp.OkHttpClient okHttpClient53 = okHttpClient7.copyWithDefaults();
        java.net.ProxySelector proxySelector54 = okHttpClient53.getProxySelector();
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNotNull(okHttpClient7);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNull(cookieHandler11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNotNull(connectionPool19);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNull(cookieHandler22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNull(proxy28);
        org.junit.Assert.assertNotNull(okHttpClient33);
// flaky:         org.junit.Assert.assertNull(proxySelector34);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNull(cookieHandler40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(okHttpClient42);
        org.junit.Assert.assertNotNull(okHttpClient44);
        org.junit.Assert.assertNull(responseCache45);
        org.junit.Assert.assertNotNull(okAuthenticator46);
        org.junit.Assert.assertNull(hostnameVerifier47);
        org.junit.Assert.assertNotNull(sSLSocketFactory48);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(socket50);
        org.junit.Assert.assertEquals(socket50.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(okHttpClient51);
        org.junit.Assert.assertNotNull(okHttpClient52);
        org.junit.Assert.assertNotNull(okHttpClient53);
// flaky:         org.junit.Assert.assertNull(proxySelector54);
    }

    @Test
    public void test03058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03058");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool6 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int7 = connectionPool6.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient3.setConnectionPool(connectionPool6);
        com.squareup.okhttp.OkHttpClient okHttpClient9 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler10 = okHttpClient9.getCookieHandler();
        boolean boolean11 = okHttpClient9.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient9.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool15 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int16 = connectionPool15.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient12.setConnectionPool(connectionPool15);
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector19 = null;
        okHttpClient18.proxySelector = proxySelector19;
        java.net.ProxySelector proxySelector21 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient18.setProxySelector(proxySelector21);
        java.net.ProxySelector proxySelector23 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient18.setProxySelector(proxySelector23);
        okHttpClient17.proxySelector = proxySelector23;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient3.setProxySelector(proxySelector23);
        java.net.CookieHandler cookieHandler27 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient26.setCookieHandler(cookieHandler27);
        com.squareup.okhttp.OkHttpClient okHttpClient29 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler30 = okHttpClient29.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray31 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet32 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet32, routeArray31);
        okHttpClient29.failedRoutes = routeSet32;
        java.net.Proxy proxy35 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient36 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler37 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient36.setCookieHandler(cookieHandler37);
        com.squareup.okhttp.OkHttpClient okHttpClient40 = okHttpClient36.setFollowProtocolRedirects(true);
        boolean boolean41 = proxy35.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient29.setProxy(proxy35);
        com.squareup.okhttp.OkAuthenticator okAuthenticator43 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient44 = okHttpClient42.setAuthenticator(okAuthenticator43);
        com.squareup.okhttp.OkHttpClient okHttpClient45 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler46 = okHttpClient45.getCookieHandler();
        boolean boolean47 = okHttpClient45.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient48 = okHttpClient45.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier49 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient48.setHostnameVerifier(hostnameVerifier49);
        com.squareup.okhttp.OkAuthenticator okAuthenticator51 = okHttpClient50.getAuthenticator();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory52 = okHttpClient50.sslSocketFactory;
        okHttpClient42.sslSocketFactory = sSLSocketFactory52;
        okHttpClient28.sslSocketFactory = sSLSocketFactory52;
        java.lang.String[] strArray55 = sSLSocketFactory52.getSupportedCipherSuites();
        java.net.InetAddress inetAddress56 = null;
        java.net.InetAddress inetAddress58 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket60 = sSLSocketFactory52.createSocket(inetAddress56, (int) 'a', inetAddress58, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: port out of range:-1");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertNull(cookieHandler10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNotNull(okHttpClient22);
// flaky:         org.junit.Assert.assertNull(proxySelector23);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNull(cookieHandler30);
        org.junit.Assert.assertNotNull(routeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(proxy35);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNotNull(okHttpClient40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(okHttpClient42);
        org.junit.Assert.assertNotNull(okHttpClient44);
        org.junit.Assert.assertNull(cookieHandler46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(okHttpClient48);
        org.junit.Assert.assertNotNull(okHttpClient50);
        org.junit.Assert.assertNotNull(okAuthenticator51);
        org.junit.Assert.assertNotNull(sSLSocketFactory52);
        org.junit.Assert.assertNotNull(strArray55);
    }

    @Test
    public void test03059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03059");
        com.squareup.okhttp.ConnectionPool connectionPool2 = new com.squareup.okhttp.ConnectionPool((int) (short) 100, (long) (byte) 10);
        int int3 = connectionPool2.getConnectionCount();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test03060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03060");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient4 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector5 = null;
        okHttpClient4.proxySelector = proxySelector5;
        java.net.ProxySelector proxySelector7 = okHttpClient4.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient4.setHostnameVerifier(hostnameVerifier8);
        java.net.ProxySelector proxySelector10 = okHttpClient4.proxySelector;
        java.net.ResponseCache responseCache11 = okHttpClient4.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet12 = okHttpClient4.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler14 = okHttpClient13.getCookieHandler();
        boolean boolean15 = okHttpClient13.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient13.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool19 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int20 = connectionPool19.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient16.setConnectionPool(connectionPool19);
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector23 = null;
        okHttpClient22.proxySelector = proxySelector23;
        java.net.ProxySelector proxySelector25 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient22.setProxySelector(proxySelector25);
        java.net.ProxySelector proxySelector27 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient22.setProxySelector(proxySelector27);
        okHttpClient21.proxySelector = proxySelector27;
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = okHttpClient21.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient4.setHostnameVerifier(hostnameVerifier30);
        javax.net.ssl.HostnameVerifier hostnameVerifier32 = okHttpClient31.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient0.setHostnameVerifier(hostnameVerifier32);
        java.net.Proxy proxy34 = okHttpClient33.proxy;
        java.util.Set<com.squareup.okhttp.Route> routeSet35 = okHttpClient33.failedRoutes;
        java.net.ProxySelector proxySelector36 = okHttpClient33.getProxySelector();
        com.squareup.okhttp.OkHttpClient okHttpClient37 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector38 = null;
        okHttpClient37.proxySelector = proxySelector38;
        java.net.ProxySelector proxySelector40 = okHttpClient37.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier41 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient37.setHostnameVerifier(hostnameVerifier41);
        boolean boolean43 = okHttpClient37.getFollowProtocolRedirects();
        com.squareup.okhttp.ConnectionPool connectionPool46 = new com.squareup.okhttp.ConnectionPool((int) 'a', (long) (byte) -1);
        com.squareup.okhttp.OkHttpClient okHttpClient47 = okHttpClient37.setConnectionPool(connectionPool46);
        com.squareup.okhttp.OkHttpClient okHttpClient48 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler49 = okHttpClient48.getCookieHandler();
        boolean boolean50 = okHttpClient48.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient51 = okHttpClient48.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier52 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient53 = okHttpClient51.setHostnameVerifier(hostnameVerifier52);
        java.net.ResponseCache responseCache54 = okHttpClient53.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator55 = okHttpClient53.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier56 = okHttpClient53.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory57 = okHttpClient53.getSslSocketFactory();
        okHttpClient37.sslSocketFactory = sSLSocketFactory57;
        java.lang.String[] strArray59 = sSLSocketFactory57.getSupportedCipherSuites();
        okHttpClient33.sslSocketFactory = sSLSocketFactory57;
        java.lang.String[] strArray61 = sSLSocketFactory57.getSupportedCipherSuites();
        java.lang.String[] strArray62 = sSLSocketFactory57.getSupportedCipherSuites();
        java.net.InetAddress inetAddress65 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket67 = sSLSocketFactory57.createSocket("DIRECT", (int) (byte) 100, inetAddress65, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.net.UnknownHostException; message: DIRECT");
        } catch (java.net.UnknownHostException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertNull(proxySelector7);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNull(proxySelector10);
        org.junit.Assert.assertNull(responseCache11);
        org.junit.Assert.assertNotNull(routeSet12);
        org.junit.Assert.assertNull(cookieHandler14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNotNull(okHttpClient26);
// flaky:         org.junit.Assert.assertNull(proxySelector27);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNotNull(hostnameVerifier30);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNotNull(hostnameVerifier32);
        org.junit.Assert.assertNotNull(okHttpClient33);
        org.junit.Assert.assertNull(proxy34);
        org.junit.Assert.assertNotNull(routeSet35);
        org.junit.Assert.assertNull(proxySelector36);
        org.junit.Assert.assertNull(proxySelector40);
        org.junit.Assert.assertNotNull(okHttpClient42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(okHttpClient47);
        org.junit.Assert.assertNull(cookieHandler49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(okHttpClient51);
        org.junit.Assert.assertNotNull(okHttpClient53);
        org.junit.Assert.assertNull(responseCache54);
        org.junit.Assert.assertNotNull(okAuthenticator55);
        org.junit.Assert.assertNull(hostnameVerifier56);
        org.junit.Assert.assertNotNull(sSLSocketFactory57);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strArray62);
    }

    @Test
    public void test03061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03061");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        java.net.ResponseCache responseCache2 = null;
        okHttpClient0.responseCache = responseCache2;
        boolean boolean4 = okHttpClient0.followProtocolRedirects;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory5);
        java.net.Proxy proxy7 = okHttpClient6.getProxy();
        java.net.ResponseCache responseCache8 = null;
        okHttpClient6.responseCache = responseCache8;
        java.util.Set<com.squareup.okhttp.Route> routeSet10 = okHttpClient6.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler12 = okHttpClient11.getCookieHandler();
        boolean boolean13 = okHttpClient11.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient11.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool17 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int18 = connectionPool17.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient14.setConnectionPool(connectionPool17);
        com.squareup.okhttp.OkHttpClient okHttpClient20 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler21 = okHttpClient20.getCookieHandler();
        boolean boolean22 = okHttpClient20.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient20.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier24 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient23.setHostnameVerifier(hostnameVerifier24);
        java.net.ResponseCache responseCache26 = okHttpClient25.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator27 = okHttpClient25.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier28 = okHttpClient25.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory29 = okHttpClient25.getSslSocketFactory();
        java.lang.String[] strArray30 = sSLSocketFactory29.getSupportedCipherSuites();
        java.lang.String[] strArray31 = sSLSocketFactory29.getDefaultCipherSuites();
        java.lang.String[] strArray32 = sSLSocketFactory29.getDefaultCipherSuites();
        java.lang.String[] strArray33 = sSLSocketFactory29.getDefaultCipherSuites();
        java.lang.String[] strArray34 = sSLSocketFactory29.getSupportedCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient14.setSSLSocketFactory(sSLSocketFactory29);
        okHttpClient6.sslSocketFactory = sSLSocketFactory29;
        java.net.InetAddress inetAddress37 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket39 = sSLSocketFactory29.createSocket(inetAddress37, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.net.ConnectException; message: Connection refused (Connection refused)");
        } catch (java.net.ConnectException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(okHttpClient6);
        org.junit.Assert.assertNull(proxy7);
        org.junit.Assert.assertNotNull(routeSet10);
        org.junit.Assert.assertNull(cookieHandler12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(okHttpClient14);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNull(cookieHandler21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertNotNull(okHttpClient25);
        org.junit.Assert.assertNull(responseCache26);
        org.junit.Assert.assertNotNull(okAuthenticator27);
        org.junit.Assert.assertNull(hostnameVerifier28);
        org.junit.Assert.assertNotNull(sSLSocketFactory29);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(okHttpClient35);
    }

    @Test
    public void test03062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03062");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector5 = null;
        okHttpClient4.proxySelector = proxySelector5;
        java.net.ProxySelector proxySelector7 = okHttpClient4.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient4.setHostnameVerifier(hostnameVerifier8);
        java.net.ProxySelector proxySelector10 = okHttpClient4.proxySelector;
        java.net.ResponseCache responseCache11 = okHttpClient4.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet12 = okHttpClient4.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler14 = okHttpClient13.getCookieHandler();
        boolean boolean15 = okHttpClient13.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient13.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool19 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int20 = connectionPool19.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient16.setConnectionPool(connectionPool19);
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector23 = null;
        okHttpClient22.proxySelector = proxySelector23;
        java.net.ProxySelector proxySelector25 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient22.setProxySelector(proxySelector25);
        java.net.ProxySelector proxySelector27 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient22.setProxySelector(proxySelector27);
        okHttpClient21.proxySelector = proxySelector27;
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = okHttpClient21.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient4.setHostnameVerifier(hostnameVerifier30);
        java.net.Proxy proxy32 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress33 = proxy32.address();
        com.squareup.okhttp.OkHttpClient okHttpClient34 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector35 = null;
        okHttpClient34.proxySelector = proxySelector35;
        com.squareup.okhttp.ConnectionPool connectionPool37 = okHttpClient34.connectionPool;
        com.squareup.okhttp.ConnectionPool connectionPool38 = okHttpClient34.getConnectionPool();
        boolean boolean39 = proxy32.equals((java.lang.Object) okHttpClient34);
        okHttpClient4.proxy = proxy32;
        com.squareup.okhttp.OkHttpClient okHttpClient41 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler42 = okHttpClient41.getCookieHandler();
        boolean boolean43 = okHttpClient41.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient44 = okHttpClient41.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier45 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient46 = okHttpClient44.setHostnameVerifier(hostnameVerifier45);
        java.net.ResponseCache responseCache47 = okHttpClient46.getResponseCache();
        java.net.ProxySelector proxySelector48 = okHttpClient46.getProxySelector();
        boolean boolean49 = proxy32.equals((java.lang.Object) proxySelector48);
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient0.setProxy(proxy32);
        com.squareup.okhttp.OkAuthenticator okAuthenticator51 = null;
        okHttpClient0.authenticator = okAuthenticator51;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache53 = okHttpClient0.okResponseCache();
        boolean boolean54 = okHttpClient0.getFollowProtocolRedirects();
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNull(proxySelector7);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNull(proxySelector10);
        org.junit.Assert.assertNull(responseCache11);
        org.junit.Assert.assertNotNull(routeSet12);
        org.junit.Assert.assertNull(cookieHandler14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNotNull(okHttpClient26);
// flaky:         org.junit.Assert.assertNull(proxySelector27);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNotNull(hostnameVerifier30);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNotNull(proxy32);
        org.junit.Assert.assertNull(socketAddress33);
        org.junit.Assert.assertNull(connectionPool37);
        org.junit.Assert.assertNull(connectionPool38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(cookieHandler42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(okHttpClient44);
        org.junit.Assert.assertNotNull(okHttpClient46);
        org.junit.Assert.assertNull(responseCache47);
// flaky:         org.junit.Assert.assertNull(proxySelector48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(okHttpClient50);
        org.junit.Assert.assertNull(okResponseCache53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
    }

    @Test
    public void test03063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03063");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setHostnameVerifier(hostnameVerifier4);
        java.net.ResponseCache responseCache6 = okHttpClient5.responseCache;
        java.net.CookieHandler cookieHandler7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient5.setCookieHandler(cookieHandler7);
        java.net.ResponseCache responseCache9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient5.setResponseCache(responseCache9);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory11 = okHttpClient5.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient5.copyWithDefaults();
        java.net.CookieHandler cookieHandler13 = okHttpClient5.getCookieHandler();
        com.squareup.okhttp.OkAuthenticator okAuthenticator14 = okHttpClient5.authenticator;
        com.squareup.okhttp.OkAuthenticator okAuthenticator15 = null;
        okHttpClient5.authenticator = okAuthenticator15;
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(responseCache6);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertNull(sSLSocketFactory11);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertNull(cookieHandler13);
        org.junit.Assert.assertNull(okAuthenticator14);
    }

    @Test
    public void test03064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03064");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        java.net.ResponseCache responseCache5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient0.setResponseCache(responseCache5);
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool9.evictAll();
        okHttpClient0.connectionPool = connectionPool9;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory12 = okHttpClient0.sslSocketFactory;
        java.net.Proxy proxy13 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient0.setProxy(proxy13);
        java.net.Proxy.Type type15 = proxy13.type();
        com.squareup.okhttp.OkHttpClient okHttpClient16 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier17 = okHttpClient16.hostnameVerifier;
        java.net.ResponseCache responseCache18 = okHttpClient16.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator19 = okHttpClient16.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler21 = okHttpClient20.getCookieHandler();
        boolean boolean22 = okHttpClient20.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient20.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier24 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient23.setHostnameVerifier(hostnameVerifier24);
        java.net.ResponseCache responseCache26 = okHttpClient25.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator27 = okHttpClient25.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient16.setAuthenticator(okAuthenticator27);
        com.squareup.okhttp.OkHttpClient okHttpClient29 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler30 = okHttpClient29.getCookieHandler();
        boolean boolean31 = okHttpClient29.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator32 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient29.setAuthenticator(okAuthenticator32);
        java.net.ResponseCache responseCache34 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient29.setResponseCache(responseCache34);
        com.squareup.okhttp.ConnectionPool connectionPool38 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool38.evictAll();
        okHttpClient29.connectionPool = connectionPool38;
        connectionPool38.evictAll();
        int int42 = connectionPool38.getSpdyConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient43 = okHttpClient16.setConnectionPool(connectionPool38);
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache44 = okHttpClient16.okResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient45 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler46 = okHttpClient45.getCookieHandler();
        boolean boolean47 = okHttpClient45.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient48 = okHttpClient45.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool51 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int52 = connectionPool51.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient53 = okHttpClient48.setConnectionPool(connectionPool51);
        com.squareup.okhttp.OkHttpClient okHttpClient54 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector55 = null;
        okHttpClient54.proxySelector = proxySelector55;
        java.net.ProxySelector proxySelector57 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient58 = okHttpClient54.setProxySelector(proxySelector57);
        java.net.ProxySelector proxySelector59 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient60 = okHttpClient54.setProxySelector(proxySelector59);
        okHttpClient53.proxySelector = proxySelector59;
        com.squareup.okhttp.OkHttpClient okHttpClient62 = okHttpClient16.setProxySelector(proxySelector59);
        java.net.CookieHandler cookieHandler63 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient64 = okHttpClient62.setCookieHandler(cookieHandler63);
        com.squareup.okhttp.OkHttpClient okHttpClient65 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector66 = null;
        okHttpClient65.proxySelector = proxySelector66;
        java.net.ProxySelector proxySelector68 = okHttpClient65.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier69 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient70 = okHttpClient65.setHostnameVerifier(hostnameVerifier69);
        java.net.ResponseCache responseCache71 = okHttpClient70.responseCache;
        java.net.ProxySelector proxySelector72 = okHttpClient70.getProxySelector();
        com.squareup.okhttp.OkHttpClient okHttpClient73 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector74 = null;
        okHttpClient73.proxySelector = proxySelector74;
        java.net.ProxySelector proxySelector76 = okHttpClient73.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier77 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient78 = okHttpClient73.setHostnameVerifier(hostnameVerifier77);
        boolean boolean79 = okHttpClient73.getFollowProtocolRedirects();
        com.squareup.okhttp.ConnectionPool connectionPool82 = new com.squareup.okhttp.ConnectionPool((int) 'a', (long) (byte) -1);
        com.squareup.okhttp.OkHttpClient okHttpClient83 = okHttpClient73.setConnectionPool(connectionPool82);
        okHttpClient70.connectionPool = connectionPool82;
        com.squareup.okhttp.OkHttpClient okHttpClient85 = okHttpClient62.setConnectionPool(connectionPool82);
        boolean boolean86 = proxy13.equals((java.lang.Object) okHttpClient62);
        java.net.Proxy.Type type87 = proxy13.type();
        java.net.SocketAddress socketAddress88 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Proxy proxy89 = new java.net.Proxy(type87, socketAddress88);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: type DIRECT is not compatible with address null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient6);
        org.junit.Assert.assertNull(sSLSocketFactory12);
        org.junit.Assert.assertNotNull(proxy13);
        org.junit.Assert.assertNotNull(okHttpClient14);
        org.junit.Assert.assertTrue("'" + type15 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type15.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(hostnameVerifier17);
        org.junit.Assert.assertNull(responseCache18);
        org.junit.Assert.assertNull(okAuthenticator19);
        org.junit.Assert.assertNull(cookieHandler21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertNotNull(okHttpClient25);
        org.junit.Assert.assertNull(responseCache26);
        org.junit.Assert.assertNotNull(okAuthenticator27);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNull(cookieHandler30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(okHttpClient33);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(okHttpClient43);
        org.junit.Assert.assertNull(okResponseCache44);
        org.junit.Assert.assertNull(cookieHandler46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(okHttpClient48);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(okHttpClient53);
        org.junit.Assert.assertNotNull(okHttpClient58);
// flaky:         org.junit.Assert.assertNull(proxySelector59);
        org.junit.Assert.assertNotNull(okHttpClient60);
        org.junit.Assert.assertNotNull(okHttpClient62);
        org.junit.Assert.assertNotNull(okHttpClient64);
        org.junit.Assert.assertNull(proxySelector68);
        org.junit.Assert.assertNotNull(okHttpClient70);
        org.junit.Assert.assertNull(responseCache71);
        org.junit.Assert.assertNull(proxySelector72);
        org.junit.Assert.assertNull(proxySelector76);
        org.junit.Assert.assertNotNull(okHttpClient78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(okHttpClient83);
        org.junit.Assert.assertNotNull(okHttpClient85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + type87 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type87.equals(java.net.Proxy.Type.DIRECT));
    }

    @Test
    public void test03065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03065");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = okHttpClient0.getSslSocketFactory();
        com.squareup.okhttp.OkAuthenticator okAuthenticator2 = okHttpClient0.getAuthenticator();
        java.net.Proxy proxy3 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress4 = proxy3.address();
        com.squareup.okhttp.OkHttpClient okHttpClient5 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector6 = null;
        okHttpClient5.proxySelector = proxySelector6;
        com.squareup.okhttp.ConnectionPool connectionPool8 = okHttpClient5.connectionPool;
        com.squareup.okhttp.ConnectionPool connectionPool9 = okHttpClient5.getConnectionPool();
        boolean boolean10 = proxy3.equals((java.lang.Object) okHttpClient5);
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler12 = okHttpClient11.getCookieHandler();
        boolean boolean13 = okHttpClient11.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient11.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool17 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int18 = connectionPool17.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient14.setConnectionPool(connectionPool17);
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient5.setConnectionPool(connectionPool17);
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache21 = okHttpClient20.okResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler23 = okHttpClient22.getCookieHandler();
        boolean boolean24 = okHttpClient22.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient22.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet26 = okHttpClient25.failedRoutes;
        boolean boolean27 = okHttpClient25.getFollowProtocolRedirects();
        java.net.Proxy proxy28 = java.net.Proxy.NO_PROXY;
        okHttpClient25.proxy = proxy28;
        com.squareup.okhttp.OkHttpClient okHttpClient30 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler31 = okHttpClient30.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray32 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet33 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet33, routeArray32);
        okHttpClient30.failedRoutes = routeSet33;
        java.net.Proxy proxy36 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient37 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler38 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient37.setCookieHandler(cookieHandler38);
        com.squareup.okhttp.OkHttpClient okHttpClient41 = okHttpClient37.setFollowProtocolRedirects(true);
        boolean boolean42 = proxy36.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient43 = okHttpClient30.setProxy(proxy36);
        com.squareup.okhttp.OkAuthenticator okAuthenticator44 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient45 = okHttpClient43.setAuthenticator(okAuthenticator44);
        com.squareup.okhttp.OkHttpClient okHttpClient46 = okHttpClient45.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient47 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler48 = okHttpClient47.getCookieHandler();
        java.net.ResponseCache responseCache49 = null;
        okHttpClient47.responseCache = responseCache49;
        boolean boolean51 = okHttpClient47.followProtocolRedirects;
        java.net.CookieHandler cookieHandler52 = okHttpClient47.cookieHandler;
        com.squareup.okhttp.ConnectionPool connectionPool53 = okHttpClient47.getConnectionPool();
        com.squareup.okhttp.OkHttpClient okHttpClient54 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector55 = null;
        okHttpClient54.proxySelector = proxySelector55;
        java.net.ProxySelector proxySelector57 = okHttpClient54.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier58 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient59 = okHttpClient54.setHostnameVerifier(hostnameVerifier58);
        java.net.ProxySelector proxySelector60 = okHttpClient54.proxySelector;
        java.net.ResponseCache responseCache61 = okHttpClient54.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet62 = okHttpClient54.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient63 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler64 = okHttpClient63.getCookieHandler();
        boolean boolean65 = okHttpClient63.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient66 = okHttpClient63.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool69 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int70 = connectionPool69.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient71 = okHttpClient66.setConnectionPool(connectionPool69);
        com.squareup.okhttp.OkHttpClient okHttpClient72 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector73 = null;
        okHttpClient72.proxySelector = proxySelector73;
        java.net.ProxySelector proxySelector75 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient76 = okHttpClient72.setProxySelector(proxySelector75);
        java.net.ProxySelector proxySelector77 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient78 = okHttpClient72.setProxySelector(proxySelector77);
        okHttpClient71.proxySelector = proxySelector77;
        javax.net.ssl.HostnameVerifier hostnameVerifier80 = okHttpClient71.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient81 = okHttpClient54.setHostnameVerifier(hostnameVerifier80);
        okHttpClient47.hostnameVerifier = hostnameVerifier80;
        okHttpClient46.hostnameVerifier = hostnameVerifier80;
        okHttpClient25.hostnameVerifier = hostnameVerifier80;
        com.squareup.okhttp.OkHttpClient okHttpClient85 = okHttpClient20.setHostnameVerifier(hostnameVerifier80);
        okHttpClient0.hostnameVerifier = hostnameVerifier80;
        com.squareup.okhttp.ConnectionPool connectionPool89 = new com.squareup.okhttp.ConnectionPool(100, 1L);
        com.squareup.okhttp.Address address90 = null;
        com.squareup.okhttp.Connection connection91 = connectionPool89.get(address90);
        int int92 = connectionPool89.getConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient93 = okHttpClient0.setConnectionPool(connectionPool89);
        javax.net.ssl.HostnameVerifier hostnameVerifier94 = okHttpClient93.hostnameVerifier;
        org.junit.Assert.assertNull(sSLSocketFactory1);
        org.junit.Assert.assertNull(okAuthenticator2);
        org.junit.Assert.assertNotNull(proxy3);
        org.junit.Assert.assertNull(socketAddress4);
        org.junit.Assert.assertNull(connectionPool8);
        org.junit.Assert.assertNull(connectionPool9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(cookieHandler12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(okHttpClient14);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNull(okResponseCache21);
        org.junit.Assert.assertNull(cookieHandler23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(okHttpClient25);
        org.junit.Assert.assertNotNull(routeSet26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(proxy28);
        org.junit.Assert.assertNull(cookieHandler31);
        org.junit.Assert.assertNotNull(routeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(proxy36);
        org.junit.Assert.assertNotNull(okHttpClient39);
        org.junit.Assert.assertNotNull(okHttpClient41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(okHttpClient43);
        org.junit.Assert.assertNotNull(okHttpClient45);
        org.junit.Assert.assertNotNull(okHttpClient46);
        org.junit.Assert.assertNull(cookieHandler48);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNull(cookieHandler52);
        org.junit.Assert.assertNull(connectionPool53);
        org.junit.Assert.assertNull(proxySelector57);
        org.junit.Assert.assertNotNull(okHttpClient59);
        org.junit.Assert.assertNull(proxySelector60);
        org.junit.Assert.assertNull(responseCache61);
        org.junit.Assert.assertNotNull(routeSet62);
        org.junit.Assert.assertNull(cookieHandler64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(okHttpClient66);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(okHttpClient71);
        org.junit.Assert.assertNotNull(okHttpClient76);
// flaky:         org.junit.Assert.assertNull(proxySelector77);
        org.junit.Assert.assertNotNull(okHttpClient78);
        org.junit.Assert.assertNotNull(hostnameVerifier80);
        org.junit.Assert.assertNotNull(okHttpClient81);
        org.junit.Assert.assertNotNull(okHttpClient85);
        org.junit.Assert.assertNull(connection91);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 0 + "'", int92 == 0);
        org.junit.Assert.assertNotNull(okHttpClient93);
        org.junit.Assert.assertNotNull(hostnameVerifier94);
    }

    @Test
    public void test03066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03066");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setHostnameVerifier(hostnameVerifier4);
        java.net.ResponseCache responseCache6 = okHttpClient5.responseCache;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient5.setFollowProtocolRedirects(true);
        java.net.CookieHandler cookieHandler9 = okHttpClient8.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient10 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector11 = null;
        okHttpClient10.proxySelector = proxySelector11;
        java.net.ProxySelector proxySelector13 = okHttpClient10.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient10.setHostnameVerifier(hostnameVerifier14);
        java.net.ResponseCache responseCache16 = okHttpClient15.responseCache;
        java.net.CookieHandler cookieHandler17 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient15.setCookieHandler(cookieHandler17);
        java.net.CookieHandler cookieHandler19 = okHttpClient15.cookieHandler;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient15.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient21 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector22 = null;
        okHttpClient21.proxySelector = proxySelector22;
        java.net.ProxySelector proxySelector24 = okHttpClient21.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier25 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient21.setHostnameVerifier(hostnameVerifier25);
        boolean boolean27 = okHttpClient21.getFollowProtocolRedirects();
        com.squareup.okhttp.ConnectionPool connectionPool30 = new com.squareup.okhttp.ConnectionPool((int) 'a', (long) (byte) -1);
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient21.setConnectionPool(connectionPool30);
        com.squareup.okhttp.OkHttpClient okHttpClient32 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler33 = okHttpClient32.getCookieHandler();
        boolean boolean34 = okHttpClient32.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient32.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier36 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient35.setHostnameVerifier(hostnameVerifier36);
        java.net.ResponseCache responseCache38 = okHttpClient37.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator39 = okHttpClient37.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier40 = okHttpClient37.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory41 = okHttpClient37.getSslSocketFactory();
        okHttpClient21.sslSocketFactory = sSLSocketFactory41;
        okHttpClient15.sslSocketFactory = sSLSocketFactory41;
        com.squareup.okhttp.OkHttpClient okHttpClient44 = okHttpClient8.setSSLSocketFactory(sSLSocketFactory41);
        java.lang.String[] strArray45 = sSLSocketFactory41.getSupportedCipherSuites();
        java.net.InetAddress inetAddress46 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket48 = sSLSocketFactory41.createSocket(inetAddress46, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.net.ConnectException; message: Connection refused (Connection refused)");
        } catch (java.net.ConnectException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(responseCache6);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertNull(cookieHandler9);
        org.junit.Assert.assertNull(proxySelector13);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNull(responseCache16);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNull(cookieHandler19);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNull(proxySelector24);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNull(cookieHandler33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNotNull(okHttpClient37);
        org.junit.Assert.assertNull(responseCache38);
        org.junit.Assert.assertNotNull(okAuthenticator39);
        org.junit.Assert.assertNull(hostnameVerifier40);
        org.junit.Assert.assertNotNull(sSLSocketFactory41);
        org.junit.Assert.assertNotNull(okHttpClient44);
        org.junit.Assert.assertNotNull(strArray45);
    }

    @Test
    public void test03067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03067");
        com.squareup.okhttp.ConnectionPool connectionPool2 = new com.squareup.okhttp.ConnectionPool(0, 1L);
        connectionPool2.evictAll();
        int int4 = connectionPool2.getSpdyConnectionCount();
        int int5 = connectionPool2.getSpdyConnectionCount();
        int int6 = connectionPool2.getConnectionCount();
        com.squareup.okhttp.Connection connection7 = null;
        // The following exception was thrown during execution in test generation
        try {
            connectionPool2.recycle(connection7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }

    @Test
    public void test03068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03068");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool6 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int7 = connectionPool6.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient3.setConnectionPool(connectionPool6);
        javax.net.ssl.HostnameVerifier hostnameVerifier9 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier9;
        java.net.ResponseCache responseCache11 = okHttpClient3.responseCache;
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = okHttpClient3.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector14 = null;
        okHttpClient13.proxySelector = proxySelector14;
        java.net.ProxySelector proxySelector16 = okHttpClient13.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier17 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient13.setHostnameVerifier(hostnameVerifier17);
        java.net.ProxySelector proxySelector19 = okHttpClient13.proxySelector;
        java.net.ResponseCache responseCache20 = okHttpClient13.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet21 = okHttpClient13.failedRoutes;
        com.squareup.okhttp.ConnectionPool connectionPool24 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool24.evictAll();
        com.squareup.okhttp.Address address26 = null;
        com.squareup.okhttp.Connection connection27 = connectionPool24.get(address26);
        okHttpClient13.connectionPool = connectionPool24;
        okHttpClient3.connectionPool = connectionPool24;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory30 = okHttpClient3.getSslSocketFactory();
        java.net.InetAddress inetAddress31 = null;
        java.net.InetAddress inetAddress33 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket35 = sSLSocketFactory30.createSocket(inetAddress31, (int) (byte) 10, inetAddress33, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: port out of range:-1");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertNull(responseCache11);
        org.junit.Assert.assertNull(hostnameVerifier12);
        org.junit.Assert.assertNull(proxySelector16);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNull(proxySelector19);
        org.junit.Assert.assertNull(responseCache20);
        org.junit.Assert.assertNotNull(routeSet21);
        org.junit.Assert.assertNull(connection27);
        org.junit.Assert.assertNotNull(sSLSocketFactory30);
    }

    @Test
    public void test03069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03069");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient3.setHostnameVerifier(hostnameVerifier4);
        com.squareup.okhttp.OkAuthenticator okAuthenticator6 = okHttpClient5.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool7 = okHttpClient5.connectionPool;
        java.net.ResponseCache responseCache8 = okHttpClient5.getResponseCache();
        java.net.ProxySelector proxySelector9 = okHttpClient5.proxySelector;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler11 = okHttpClient10.getCookieHandler();
        boolean boolean12 = okHttpClient10.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient10.setAuthenticator(okAuthenticator13);
        java.net.ResponseCache responseCache15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient10.setResponseCache(responseCache15);
        com.squareup.okhttp.ConnectionPool connectionPool19 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool19.evictAll();
        okHttpClient10.connectionPool = connectionPool19;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory22 = okHttpClient10.sslSocketFactory;
        com.squareup.okhttp.ConnectionPool connectionPool23 = okHttpClient10.getConnectionPool();
        java.net.CookieHandler cookieHandler24 = null;
        okHttpClient10.cookieHandler = cookieHandler24;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler27 = okHttpClient26.getCookieHandler();
        boolean boolean28 = okHttpClient26.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient26.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool32 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int33 = connectionPool32.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient29.setConnectionPool(connectionPool32);
        com.squareup.okhttp.ConnectionPool connectionPool35 = okHttpClient29.connectionPool;
        java.net.ResponseCache responseCache36 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient29.setResponseCache(responseCache36);
        com.squareup.okhttp.OkAuthenticator okAuthenticator38 = okHttpClient29.getAuthenticator();
        com.squareup.okhttp.OkHttpClient okHttpClient39 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler40 = okHttpClient39.getCookieHandler();
        boolean boolean41 = okHttpClient39.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator42 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient43 = okHttpClient39.setAuthenticator(okAuthenticator42);
        java.net.ResponseCache responseCache44 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient45 = okHttpClient39.setResponseCache(responseCache44);
        com.squareup.okhttp.ConnectionPool connectionPool48 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool48.evictAll();
        okHttpClient39.connectionPool = connectionPool48;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory51 = okHttpClient39.sslSocketFactory;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory52 = null;
        okHttpClient39.sslSocketFactory = sSLSocketFactory52;
        java.net.ProxySelector proxySelector54 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient55 = okHttpClient39.setProxySelector(proxySelector54);
        com.squareup.okhttp.OkHttpClient okHttpClient56 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector57 = null;
        okHttpClient56.proxySelector = proxySelector57;
        java.net.ProxySelector proxySelector59 = okHttpClient56.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier60 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient61 = okHttpClient56.setHostnameVerifier(hostnameVerifier60);
        java.net.ProxySelector proxySelector62 = java.net.ProxySelector.getDefault();
        okHttpClient56.proxySelector = proxySelector62;
        okHttpClient55.proxySelector = proxySelector62;
        com.squareup.okhttp.OkHttpClient okHttpClient65 = okHttpClient29.setProxySelector(proxySelector62);
        okHttpClient10.proxySelector = proxySelector62;
        com.squareup.okhttp.OkHttpClient okHttpClient67 = okHttpClient5.setProxySelector(proxySelector62);
        com.squareup.okhttp.ConnectionPool connectionPool70 = new com.squareup.okhttp.ConnectionPool((int) (short) 0, (long) 'a');
        int int71 = connectionPool70.getConnectionCount();
        okHttpClient5.connectionPool = connectionPool70;
        com.squareup.okhttp.Address address73 = null;
        com.squareup.okhttp.Connection connection74 = connectionPool70.get(address73);
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNotNull(okAuthenticator6);
        org.junit.Assert.assertNotNull(connectionPool7);
        org.junit.Assert.assertNull(responseCache8);
// flaky:         org.junit.Assert.assertNull(proxySelector9);
        org.junit.Assert.assertNull(cookieHandler11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(okHttpClient14);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNull(sSLSocketFactory22);
        org.junit.Assert.assertNotNull(connectionPool23);
        org.junit.Assert.assertNull(cookieHandler27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(okHttpClient29);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertNotNull(connectionPool35);
        org.junit.Assert.assertNotNull(okHttpClient37);
        org.junit.Assert.assertNotNull(okAuthenticator38);
        org.junit.Assert.assertNull(cookieHandler40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(okHttpClient43);
        org.junit.Assert.assertNotNull(okHttpClient45);
        org.junit.Assert.assertNull(sSLSocketFactory51);
// flaky:         org.junit.Assert.assertNull(proxySelector54);
        org.junit.Assert.assertNotNull(okHttpClient55);
        org.junit.Assert.assertNull(proxySelector59);
        org.junit.Assert.assertNotNull(okHttpClient61);
// flaky:         org.junit.Assert.assertNull(proxySelector62);
        org.junit.Assert.assertNotNull(okHttpClient65);
        org.junit.Assert.assertNotNull(okHttpClient67);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNull(connection74);
    }

    @Test
    public void test03070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03070");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector5 = null;
        okHttpClient4.proxySelector = proxySelector5;
        java.net.ProxySelector proxySelector7 = okHttpClient4.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient4.setHostnameVerifier(hostnameVerifier8);
        java.net.ProxySelector proxySelector10 = okHttpClient4.proxySelector;
        java.net.ResponseCache responseCache11 = okHttpClient4.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet12 = okHttpClient4.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler14 = okHttpClient13.getCookieHandler();
        boolean boolean15 = okHttpClient13.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient13.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool19 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int20 = connectionPool19.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient16.setConnectionPool(connectionPool19);
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector23 = null;
        okHttpClient22.proxySelector = proxySelector23;
        java.net.ProxySelector proxySelector25 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient22.setProxySelector(proxySelector25);
        java.net.ProxySelector proxySelector27 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient22.setProxySelector(proxySelector27);
        okHttpClient21.proxySelector = proxySelector27;
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = okHttpClient21.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient4.setHostnameVerifier(hostnameVerifier30);
        java.net.Proxy proxy32 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress33 = proxy32.address();
        com.squareup.okhttp.OkHttpClient okHttpClient34 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector35 = null;
        okHttpClient34.proxySelector = proxySelector35;
        com.squareup.okhttp.ConnectionPool connectionPool37 = okHttpClient34.connectionPool;
        com.squareup.okhttp.ConnectionPool connectionPool38 = okHttpClient34.getConnectionPool();
        boolean boolean39 = proxy32.equals((java.lang.Object) okHttpClient34);
        okHttpClient4.proxy = proxy32;
        com.squareup.okhttp.OkHttpClient okHttpClient41 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler42 = okHttpClient41.getCookieHandler();
        boolean boolean43 = okHttpClient41.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient44 = okHttpClient41.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier45 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient46 = okHttpClient44.setHostnameVerifier(hostnameVerifier45);
        java.net.ResponseCache responseCache47 = okHttpClient46.getResponseCache();
        java.net.ProxySelector proxySelector48 = okHttpClient46.getProxySelector();
        boolean boolean49 = proxy32.equals((java.lang.Object) proxySelector48);
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient0.setProxy(proxy32);
        java.net.CookieHandler cookieHandler51 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient52 = okHttpClient0.setCookieHandler(cookieHandler51);
        java.net.Proxy proxy53 = okHttpClient52.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient54 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler55 = okHttpClient54.getCookieHandler();
        java.net.ResponseCache responseCache56 = null;
        okHttpClient54.responseCache = responseCache56;
        boolean boolean58 = okHttpClient54.followProtocolRedirects;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory59 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient60 = okHttpClient54.setSSLSocketFactory(sSLSocketFactory59);
        java.net.Proxy proxy61 = okHttpClient60.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient62 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector63 = null;
        okHttpClient62.proxySelector = proxySelector63;
        java.net.ProxySelector proxySelector65 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient66 = okHttpClient62.setProxySelector(proxySelector65);
        java.net.ProxySelector proxySelector67 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient68 = okHttpClient62.setProxySelector(proxySelector67);
        java.net.ProxySelector.setDefault(proxySelector67);
        okHttpClient60.proxySelector = proxySelector67;
        boolean boolean71 = proxy53.equals((java.lang.Object) proxySelector67);
        java.net.URI uRI72 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.net.Proxy> proxyList73 = null; // flaky: proxySelector67.select(uRI72);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNull(proxySelector7);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNull(proxySelector10);
        org.junit.Assert.assertNull(responseCache11);
        org.junit.Assert.assertNotNull(routeSet12);
        org.junit.Assert.assertNull(cookieHandler14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNotNull(okHttpClient26);
// flaky:         org.junit.Assert.assertNull(proxySelector27);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNotNull(hostnameVerifier30);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNotNull(proxy32);
        org.junit.Assert.assertNull(socketAddress33);
        org.junit.Assert.assertNull(connectionPool37);
        org.junit.Assert.assertNull(connectionPool38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(cookieHandler42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(okHttpClient44);
        org.junit.Assert.assertNotNull(okHttpClient46);
        org.junit.Assert.assertNull(responseCache47);
// flaky:         org.junit.Assert.assertNull(proxySelector48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(okHttpClient50);
        org.junit.Assert.assertNotNull(okHttpClient52);
        org.junit.Assert.assertNotNull(proxy53);
        org.junit.Assert.assertNull(cookieHandler55);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(okHttpClient60);
        org.junit.Assert.assertNull(proxy61);
        org.junit.Assert.assertNotNull(okHttpClient66);
// flaky:         org.junit.Assert.assertNull(proxySelector67);
        org.junit.Assert.assertNotNull(okHttpClient68);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test03071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03071");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier6 = okHttpClient0.hostnameVerifier;
        java.net.ProxySelector proxySelector7 = java.net.ProxySelector.getDefault();
        okHttpClient0.proxySelector = proxySelector7;
        okHttpClient0.followProtocolRedirects = true;
        javax.net.ssl.HostnameVerifier hostnameVerifier11 = okHttpClient0.getHostnameVerifier();
        boolean boolean12 = okHttpClient0.followProtocolRedirects;
        com.squareup.okhttp.ConnectionPool connectionPool15 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) 10);
        com.squareup.okhttp.Address address16 = null;
        com.squareup.okhttp.Connection connection17 = connectionPool15.get(address16);
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient0.setConnectionPool(connectionPool15);
        connectionPool15.evictAll();
        com.squareup.okhttp.Address address20 = null;
        com.squareup.okhttp.Connection connection21 = connectionPool15.get(address20);
        int int22 = connectionPool15.getConnectionCount();
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(hostnameVerifier6);
// flaky:         org.junit.Assert.assertNull(proxySelector7);
        org.junit.Assert.assertNull(hostnameVerifier11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(connection17);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNull(connection21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
    }

    @Test
    public void test03072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03072");
        com.squareup.okhttp.ConnectionPool connectionPool2 = new com.squareup.okhttp.ConnectionPool((int) (short) 10, (long) (short) 100);
        connectionPool2.evictAll();
    }

    @Test
    public void test03073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03073");
        com.squareup.okhttp.ConnectionPool connectionPool2 = new com.squareup.okhttp.ConnectionPool((int) (byte) 10, (long) (short) 1);
        com.squareup.okhttp.Connection connection3 = null;
        // The following exception was thrown during execution in test generation
        try {
            connectionPool2.maybeShare(connection3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test03074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03074");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet4 = okHttpClient3.failedRoutes;
        boolean boolean5 = okHttpClient3.getFollowProtocolRedirects();
        java.net.Proxy proxy6 = java.net.Proxy.NO_PROXY;
        okHttpClient3.proxy = proxy6;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler9 = okHttpClient8.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray10 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet11 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet11, routeArray10);
        okHttpClient8.failedRoutes = routeSet11;
        java.net.Proxy proxy14 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient15.setCookieHandler(cookieHandler16);
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient15.setFollowProtocolRedirects(true);
        boolean boolean20 = proxy14.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient8.setProxy(proxy14);
        java.net.SocketAddress socketAddress22 = proxy14.address();
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient3.setProxy(proxy14);
        okHttpClient23.followProtocolRedirects = false;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory26 = okHttpClient23.getSslSocketFactory();
        java.net.InetAddress inetAddress29 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket31 = sSLSocketFactory26.createSocket("", (int) (short) 0, inetAddress29, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.net.BindException; message: Permission denied (Bind failed)");
        } catch (java.net.BindException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertNotNull(routeSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(proxy6);
        org.junit.Assert.assertNull(cookieHandler9);
        org.junit.Assert.assertNotNull(routeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(proxy14);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNull(socketAddress22);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertNotNull(sSLSocketFactory26);
    }

    @Test
    public void test03075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03075");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray2 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet3 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet3, routeArray2);
        okHttpClient0.failedRoutes = routeSet3;
        java.net.Proxy proxy6 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient7.setCookieHandler(cookieHandler8);
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient7.setFollowProtocolRedirects(true);
        boolean boolean12 = proxy6.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient0.setProxy(proxy6);
        com.squareup.okhttp.OkHttpClient okHttpClient14 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler15 = okHttpClient14.getCookieHandler();
        boolean boolean16 = okHttpClient14.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler18 = okHttpClient17.getCookieHandler();
        boolean boolean19 = okHttpClient17.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient17.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet21 = okHttpClient20.failedRoutes;
        boolean boolean22 = okHttpClient20.getFollowProtocolRedirects();
        java.net.Proxy proxy23 = java.net.Proxy.NO_PROXY;
        okHttpClient20.proxy = proxy23;
        okHttpClient14.proxy = proxy23;
        okHttpClient0.proxy = proxy23;
        com.squareup.okhttp.OkAuthenticator okAuthenticator27 = okHttpClient0.getAuthenticator();
        java.net.Proxy proxy28 = okHttpClient0.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient29 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector30 = null;
        okHttpClient29.proxySelector = proxySelector30;
        java.net.ProxySelector proxySelector32 = okHttpClient29.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier33 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient29.setHostnameVerifier(hostnameVerifier33);
        java.net.ProxySelector proxySelector35 = okHttpClient29.proxySelector;
        java.net.ResponseCache responseCache36 = okHttpClient29.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet37 = okHttpClient29.failedRoutes;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache38 = okHttpClient29.okResponseCache();
        com.squareup.okhttp.ConnectionPool connectionPool39 = okHttpClient29.getConnectionPool();
        com.squareup.okhttp.OkHttpClient okHttpClient40 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector41 = null;
        okHttpClient40.proxySelector = proxySelector41;
        java.net.ProxySelector proxySelector43 = okHttpClient40.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier44 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient45 = okHttpClient40.setHostnameVerifier(hostnameVerifier44);
        java.net.ResponseCache responseCache46 = okHttpClient45.responseCache;
        com.squareup.okhttp.ConnectionPool connectionPool49 = new com.squareup.okhttp.ConnectionPool((int) '4', 100L);
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient45.setConnectionPool(connectionPool49);
        com.squareup.okhttp.OkHttpClient okHttpClient51 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler52 = okHttpClient51.getCookieHandler();
        boolean boolean53 = okHttpClient51.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator54 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient55 = okHttpClient51.setAuthenticator(okAuthenticator54);
        com.squareup.okhttp.OkHttpClient okHttpClient56 = okHttpClient51.copyWithDefaults();
        java.net.CookieHandler cookieHandler57 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient58 = okHttpClient51.setCookieHandler(cookieHandler57);
        com.squareup.okhttp.OkAuthenticator okAuthenticator59 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient60 = okHttpClient58.setAuthenticator(okAuthenticator59);
        com.squareup.okhttp.OkHttpClient okHttpClient61 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler62 = okHttpClient61.getCookieHandler();
        boolean boolean63 = okHttpClient61.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient64 = okHttpClient61.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool67 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int68 = connectionPool67.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient69 = okHttpClient64.setConnectionPool(connectionPool67);
        com.squareup.okhttp.ConnectionPool connectionPool70 = okHttpClient64.connectionPool;
        com.squareup.okhttp.OkHttpClient okHttpClient71 = okHttpClient58.setConnectionPool(connectionPool70);
        com.squareup.okhttp.Address address72 = null;
        com.squareup.okhttp.Connection connection73 = connectionPool70.get(address72);
        com.squareup.okhttp.OkHttpClient okHttpClient74 = okHttpClient50.setConnectionPool(connectionPool70);
        com.squareup.okhttp.OkHttpClient okHttpClient75 = okHttpClient29.setConnectionPool(connectionPool70);
        okHttpClient0.connectionPool = connectionPool70;
        connectionPool70.evictAll();
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertNotNull(routeArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(proxy6);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNull(cookieHandler15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(cookieHandler18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNotNull(routeSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(proxy23);
        org.junit.Assert.assertNull(okAuthenticator27);
        org.junit.Assert.assertNotNull(proxy28);
        org.junit.Assert.assertNull(proxySelector32);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertNull(proxySelector35);
        org.junit.Assert.assertNull(responseCache36);
        org.junit.Assert.assertNotNull(routeSet37);
        org.junit.Assert.assertNull(okResponseCache38);
        org.junit.Assert.assertNull(connectionPool39);
        org.junit.Assert.assertNull(proxySelector43);
        org.junit.Assert.assertNotNull(okHttpClient45);
        org.junit.Assert.assertNull(responseCache46);
        org.junit.Assert.assertNotNull(okHttpClient50);
        org.junit.Assert.assertNull(cookieHandler52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(okHttpClient55);
        org.junit.Assert.assertNotNull(okHttpClient56);
        org.junit.Assert.assertNotNull(okHttpClient58);
        org.junit.Assert.assertNotNull(okHttpClient60);
        org.junit.Assert.assertNull(cookieHandler62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(okHttpClient64);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(okHttpClient69);
        org.junit.Assert.assertNotNull(connectionPool70);
        org.junit.Assert.assertNotNull(okHttpClient71);
        org.junit.Assert.assertNull(connection73);
        org.junit.Assert.assertNotNull(okHttpClient74);
        org.junit.Assert.assertNotNull(okHttpClient75);
    }

    @Test
    public void test03076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03076");
        com.squareup.okhttp.ConnectionPool connectionPool2 = new com.squareup.okhttp.ConnectionPool((int) ' ', (long) (short) -1);
        int int3 = connectionPool2.getHttpConnectionCount();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test03077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03077");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = okHttpClient0.getSslSocketFactory();
        com.squareup.okhttp.OkAuthenticator okAuthenticator2 = okHttpClient0.authenticator;
        java.net.CookieHandler cookieHandler3 = null;
        okHttpClient0.cookieHandler = cookieHandler3;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory5 = okHttpClient0.sslSocketFactory;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient0.copyWithDefaults();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory7 = okHttpClient6.sslSocketFactory;
        java.lang.String[] strArray8 = sSLSocketFactory7.getDefaultCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient9 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler10 = okHttpClient9.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray11 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet12 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet12, routeArray11);
        okHttpClient9.failedRoutes = routeSet12;
        java.net.Proxy proxy15 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler17 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient16.setCookieHandler(cookieHandler17);
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient16.setFollowProtocolRedirects(true);
        boolean boolean21 = proxy15.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient9.setProxy(proxy15);
        com.squareup.okhttp.OkHttpClient okHttpClient23 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler24 = okHttpClient23.getCookieHandler();
        boolean boolean25 = okHttpClient23.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler27 = okHttpClient26.getCookieHandler();
        boolean boolean28 = okHttpClient26.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient26.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet30 = okHttpClient29.failedRoutes;
        boolean boolean31 = okHttpClient29.getFollowProtocolRedirects();
        java.net.Proxy proxy32 = java.net.Proxy.NO_PROXY;
        okHttpClient29.proxy = proxy32;
        okHttpClient23.proxy = proxy32;
        okHttpClient9.proxy = proxy32;
        com.squareup.okhttp.OkAuthenticator okAuthenticator36 = okHttpClient9.getAuthenticator();
        java.net.CookieHandler cookieHandler37 = null;
        okHttpClient9.cookieHandler = cookieHandler37;
        java.net.CookieHandler cookieHandler39 = okHttpClient9.getCookieHandler();
        boolean boolean40 = okHttpClient9.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient41 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler42 = okHttpClient41.getCookieHandler();
        boolean boolean43 = okHttpClient41.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient44 = okHttpClient41.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier45 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient46 = okHttpClient44.setHostnameVerifier(hostnameVerifier45);
        java.net.ResponseCache responseCache47 = okHttpClient46.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator48 = okHttpClient46.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier49 = okHttpClient46.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory50 = okHttpClient46.getSslSocketFactory();
        java.lang.String[] strArray51 = sSLSocketFactory50.getSupportedCipherSuites();
        java.lang.String[] strArray52 = sSLSocketFactory50.getSupportedCipherSuites();
        java.net.Socket socket53 = sSLSocketFactory50.createSocket();
        com.squareup.okhttp.OkHttpClient okHttpClient54 = okHttpClient9.setSSLSocketFactory(sSLSocketFactory50);
        java.net.Socket socket55 = sSLSocketFactory50.createSocket();
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket59 = sSLSocketFactory7.createSocket(socket55, "DIRECT", (int) 'a', false);
            org.junit.Assert.fail("Expected exception of type java.net.SocketException; message: Underlying socket is not connected");
        } catch (java.net.SocketException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(sSLSocketFactory1);
        org.junit.Assert.assertNull(okAuthenticator2);
        org.junit.Assert.assertNull(sSLSocketFactory5);
        org.junit.Assert.assertNotNull(okHttpClient6);
        org.junit.Assert.assertNotNull(sSLSocketFactory7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNull(cookieHandler10);
        org.junit.Assert.assertNotNull(routeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(proxy15);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNull(cookieHandler24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(cookieHandler27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(okHttpClient29);
        org.junit.Assert.assertNotNull(routeSet30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(proxy32);
        org.junit.Assert.assertNull(okAuthenticator36);
        org.junit.Assert.assertNull(cookieHandler39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(cookieHandler42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(okHttpClient44);
        org.junit.Assert.assertNotNull(okHttpClient46);
        org.junit.Assert.assertNull(responseCache47);
        org.junit.Assert.assertNotNull(okAuthenticator48);
        org.junit.Assert.assertNull(hostnameVerifier49);
        org.junit.Assert.assertNotNull(sSLSocketFactory50);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(socket53);
        org.junit.Assert.assertEquals(socket53.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(okHttpClient54);
        org.junit.Assert.assertNotNull(socket55);
        org.junit.Assert.assertEquals(socket55.toString(), "Socket[unconnected]");
    }

    @Test
    public void test03078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03078");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setCookieHandler(cookieHandler1);
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setFollowProtocolRedirects(true);
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache5 = okHttpClient0.okResponseCache();
        org.junit.Assert.assertNotNull(okHttpClient2);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(okResponseCache5);
    }

    @Test
    public void test03079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03079");
        com.squareup.okhttp.ConnectionPool connectionPool2 = new com.squareup.okhttp.ConnectionPool((int) (short) 10, (long) (short) 10);
    }

    @Test
    public void test03080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03080");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.copyWithDefaults();
        java.net.CookieHandler cookieHandler6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient0.setCookieHandler(cookieHandler6);
        java.net.CookieHandler cookieHandler8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient7.setCookieHandler(cookieHandler8);
        com.squareup.okhttp.OkHttpClient okHttpClient10 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier11 = okHttpClient10.hostnameVerifier;
        java.net.ResponseCache responseCache12 = okHttpClient10.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator13 = okHttpClient10.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler15 = okHttpClient14.getCookieHandler();
        boolean boolean16 = okHttpClient14.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient14.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient17.setHostnameVerifier(hostnameVerifier18);
        java.net.ResponseCache responseCache20 = okHttpClient19.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator21 = okHttpClient19.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient10.setAuthenticator(okAuthenticator21);
        com.squareup.okhttp.OkHttpClient okHttpClient23 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler24 = okHttpClient23.getCookieHandler();
        boolean boolean25 = okHttpClient23.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator26 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient23.setAuthenticator(okAuthenticator26);
        java.net.ResponseCache responseCache28 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient23.setResponseCache(responseCache28);
        com.squareup.okhttp.ConnectionPool connectionPool32 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool32.evictAll();
        okHttpClient23.connectionPool = connectionPool32;
        connectionPool32.evictAll();
        int int36 = connectionPool32.getSpdyConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient10.setConnectionPool(connectionPool32);
        okHttpClient9.connectionPool = connectionPool32;
        java.net.Proxy proxy39 = java.net.Proxy.NO_PROXY;
        java.net.Proxy.Type type40 = proxy39.type();
        com.squareup.okhttp.OkHttpClient okHttpClient41 = okHttpClient9.setProxy(proxy39);
        java.net.ResponseCache responseCache42 = okHttpClient9.responseCache;
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNotNull(okHttpClient7);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNull(hostnameVerifier11);
        org.junit.Assert.assertNull(responseCache12);
        org.junit.Assert.assertNull(okAuthenticator13);
        org.junit.Assert.assertNull(cookieHandler15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNull(responseCache20);
        org.junit.Assert.assertNotNull(okAuthenticator21);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNull(cookieHandler24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNotNull(okHttpClient29);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(okHttpClient37);
        org.junit.Assert.assertNotNull(proxy39);
        org.junit.Assert.assertTrue("'" + type40 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type40.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNotNull(okHttpClient41);
        org.junit.Assert.assertNull(responseCache42);
    }

    @Test
    public void test03081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03081");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        java.net.ResponseCache responseCache3 = okHttpClient0.responseCache;
        java.net.Proxy proxy4 = okHttpClient0.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool7 = new com.squareup.okhttp.ConnectionPool((int) ' ', (long) (-1));
        com.squareup.okhttp.Address address8 = null;
        com.squareup.okhttp.Connection connection9 = connectionPool7.get(address8);
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient0.setConnectionPool(connectionPool7);
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient12 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector13 = null;
        okHttpClient12.proxySelector = proxySelector13;
        java.net.ProxySelector proxySelector15 = okHttpClient12.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient12.setHostnameVerifier(hostnameVerifier16);
        java.net.ResponseCache responseCache18 = okHttpClient17.responseCache;
        com.squareup.okhttp.ConnectionPool connectionPool21 = new com.squareup.okhttp.ConnectionPool((int) '4', 100L);
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient17.setConnectionPool(connectionPool21);
        com.squareup.okhttp.OkHttpClient okHttpClient23 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler24 = okHttpClient23.getCookieHandler();
        boolean boolean25 = okHttpClient23.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator26 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient23.setAuthenticator(okAuthenticator26);
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient23.copyWithDefaults();
        java.net.CookieHandler cookieHandler29 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient30 = okHttpClient23.setCookieHandler(cookieHandler29);
        com.squareup.okhttp.OkAuthenticator okAuthenticator31 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient30.setAuthenticator(okAuthenticator31);
        com.squareup.okhttp.OkHttpClient okHttpClient33 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler34 = okHttpClient33.getCookieHandler();
        boolean boolean35 = okHttpClient33.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient33.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool39 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int40 = connectionPool39.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient41 = okHttpClient36.setConnectionPool(connectionPool39);
        com.squareup.okhttp.ConnectionPool connectionPool42 = okHttpClient36.connectionPool;
        com.squareup.okhttp.OkHttpClient okHttpClient43 = okHttpClient30.setConnectionPool(connectionPool42);
        com.squareup.okhttp.Address address44 = null;
        com.squareup.okhttp.Connection connection45 = connectionPool42.get(address44);
        com.squareup.okhttp.OkHttpClient okHttpClient46 = okHttpClient22.setConnectionPool(connectionPool42);
        java.net.ProxySelector proxySelector47 = okHttpClient22.proxySelector;
        com.squareup.okhttp.OkHttpClient okHttpClient48 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector49 = null;
        okHttpClient48.proxySelector = proxySelector49;
        java.net.ProxySelector proxySelector51 = okHttpClient48.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier52 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient53 = okHttpClient48.setHostnameVerifier(hostnameVerifier52);
        java.net.ProxySelector proxySelector54 = okHttpClient48.proxySelector;
        java.net.ResponseCache responseCache55 = okHttpClient48.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet56 = okHttpClient48.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient57 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler58 = okHttpClient57.getCookieHandler();
        boolean boolean59 = okHttpClient57.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient60 = okHttpClient57.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool63 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int64 = connectionPool63.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient65 = okHttpClient60.setConnectionPool(connectionPool63);
        com.squareup.okhttp.OkHttpClient okHttpClient66 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector67 = null;
        okHttpClient66.proxySelector = proxySelector67;
        java.net.ProxySelector proxySelector69 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient70 = okHttpClient66.setProxySelector(proxySelector69);
        java.net.ProxySelector proxySelector71 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient72 = okHttpClient66.setProxySelector(proxySelector71);
        okHttpClient65.proxySelector = proxySelector71;
        javax.net.ssl.HostnameVerifier hostnameVerifier74 = okHttpClient65.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient75 = okHttpClient48.setHostnameVerifier(hostnameVerifier74);
        okHttpClient22.hostnameVerifier = hostnameVerifier74;
        okHttpClient0.hostnameVerifier = hostnameVerifier74;
        org.junit.Assert.assertNull(responseCache3);
        org.junit.Assert.assertNull(proxy4);
        org.junit.Assert.assertNull(connection9);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(proxySelector15);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNull(responseCache18);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNull(cookieHandler24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNotNull(okHttpClient30);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertNull(cookieHandler34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(okHttpClient41);
        org.junit.Assert.assertNotNull(connectionPool42);
        org.junit.Assert.assertNotNull(okHttpClient43);
        org.junit.Assert.assertNull(connection45);
        org.junit.Assert.assertNotNull(okHttpClient46);
        org.junit.Assert.assertNull(proxySelector47);
        org.junit.Assert.assertNull(proxySelector51);
        org.junit.Assert.assertNotNull(okHttpClient53);
        org.junit.Assert.assertNull(proxySelector54);
        org.junit.Assert.assertNull(responseCache55);
        org.junit.Assert.assertNotNull(routeSet56);
        org.junit.Assert.assertNull(cookieHandler58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(okHttpClient60);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(okHttpClient65);
        org.junit.Assert.assertNotNull(okHttpClient70);
// flaky:         org.junit.Assert.assertNull(proxySelector71);
        org.junit.Assert.assertNotNull(okHttpClient72);
        org.junit.Assert.assertNotNull(hostnameVerifier74);
        org.junit.Assert.assertNotNull(okHttpClient75);
    }

    @Test
    public void test03082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03082");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setHostnameVerifier(hostnameVerifier4);
        boolean boolean6 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool((int) 'a', (long) (byte) -1);
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler12 = okHttpClient11.getCookieHandler();
        boolean boolean13 = okHttpClient11.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient11.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient14.setHostnameVerifier(hostnameVerifier15);
        java.net.ResponseCache responseCache17 = okHttpClient16.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator18 = okHttpClient16.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier19 = okHttpClient16.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory20 = okHttpClient16.getSslSocketFactory();
        okHttpClient0.sslSocketFactory = sSLSocketFactory20;
        com.squareup.okhttp.OkAuthenticator okAuthenticator22 = okHttpClient0.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient23 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier24 = okHttpClient23.hostnameVerifier;
        java.net.ResponseCache responseCache25 = okHttpClient23.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator26 = okHttpClient23.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler28 = okHttpClient27.getCookieHandler();
        boolean boolean29 = okHttpClient27.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient30 = okHttpClient27.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier31 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient30.setHostnameVerifier(hostnameVerifier31);
        java.net.ResponseCache responseCache33 = okHttpClient32.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator34 = okHttpClient32.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient23.setAuthenticator(okAuthenticator34);
        com.squareup.okhttp.OkHttpClient okHttpClient36 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler37 = okHttpClient36.getCookieHandler();
        boolean boolean38 = okHttpClient36.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator39 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient40 = okHttpClient36.setAuthenticator(okAuthenticator39);
        java.net.ResponseCache responseCache41 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient36.setResponseCache(responseCache41);
        com.squareup.okhttp.ConnectionPool connectionPool45 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool45.evictAll();
        okHttpClient36.connectionPool = connectionPool45;
        connectionPool45.evictAll();
        int int49 = connectionPool45.getSpdyConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient23.setConnectionPool(connectionPool45);
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache51 = okHttpClient23.okResponseCache();
        java.net.Proxy proxy52 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient53 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler54 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient55 = okHttpClient53.setCookieHandler(cookieHandler54);
        com.squareup.okhttp.OkHttpClient okHttpClient57 = okHttpClient53.setFollowProtocolRedirects(true);
        boolean boolean58 = proxy52.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient59 = okHttpClient23.setProxy(proxy52);
        com.squareup.okhttp.OkHttpClient okHttpClient60 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector61 = null;
        okHttpClient60.proxySelector = proxySelector61;
        java.net.ProxySelector proxySelector63 = okHttpClient60.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier64 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient65 = okHttpClient60.setHostnameVerifier(hostnameVerifier64);
        java.net.ProxySelector proxySelector66 = okHttpClient60.proxySelector;
        java.net.ResponseCache responseCache67 = okHttpClient60.getResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient68 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler69 = okHttpClient68.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray70 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet71 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet71, routeArray70);
        okHttpClient68.failedRoutes = routeSet71;
        java.net.Proxy proxy74 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient75 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler76 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient77 = okHttpClient75.setCookieHandler(cookieHandler76);
        com.squareup.okhttp.OkHttpClient okHttpClient79 = okHttpClient75.setFollowProtocolRedirects(true);
        boolean boolean80 = proxy74.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient81 = okHttpClient68.setProxy(proxy74);
        okHttpClient60.proxy = proxy74;
        com.squareup.okhttp.OkHttpClient okHttpClient83 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler84 = okHttpClient83.getCookieHandler();
        boolean boolean85 = okHttpClient83.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient86 = okHttpClient83.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier87 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient88 = okHttpClient86.setHostnameVerifier(hostnameVerifier87);
        boolean boolean89 = proxy74.equals((java.lang.Object) okHttpClient86);
        java.net.SocketAddress socketAddress90 = proxy74.address();
        java.net.SocketAddress socketAddress91 = proxy74.address();
        boolean boolean92 = proxy52.equals((java.lang.Object) proxy74);
        com.squareup.okhttp.OkHttpClient okHttpClient93 = okHttpClient0.setProxy(proxy74);
        java.net.Proxy.Type type94 = proxy74.type();
        java.lang.String str95 = proxy74.toString();
        java.lang.String str96 = proxy74.toString();
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertNull(cookieHandler12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(okHttpClient14);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNull(responseCache17);
        org.junit.Assert.assertNotNull(okAuthenticator18);
        org.junit.Assert.assertNull(hostnameVerifier19);
        org.junit.Assert.assertNotNull(sSLSocketFactory20);
        org.junit.Assert.assertNull(okAuthenticator22);
        org.junit.Assert.assertNull(hostnameVerifier24);
        org.junit.Assert.assertNull(responseCache25);
        org.junit.Assert.assertNull(okAuthenticator26);
        org.junit.Assert.assertNull(cookieHandler28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(okHttpClient30);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertNull(responseCache33);
        org.junit.Assert.assertNotNull(okAuthenticator34);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNull(cookieHandler37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(okHttpClient40);
        org.junit.Assert.assertNotNull(okHttpClient42);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(okHttpClient50);
        org.junit.Assert.assertNull(okResponseCache51);
        org.junit.Assert.assertNotNull(proxy52);
        org.junit.Assert.assertNotNull(okHttpClient55);
        org.junit.Assert.assertNotNull(okHttpClient57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(okHttpClient59);
        org.junit.Assert.assertNull(proxySelector63);
        org.junit.Assert.assertNotNull(okHttpClient65);
        org.junit.Assert.assertNull(proxySelector66);
        org.junit.Assert.assertNull(responseCache67);
        org.junit.Assert.assertNull(cookieHandler69);
        org.junit.Assert.assertNotNull(routeArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(proxy74);
        org.junit.Assert.assertNotNull(okHttpClient77);
        org.junit.Assert.assertNotNull(okHttpClient79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(okHttpClient81);
        org.junit.Assert.assertNull(cookieHandler84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(okHttpClient86);
        org.junit.Assert.assertNotNull(okHttpClient88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNull(socketAddress90);
        org.junit.Assert.assertNull(socketAddress91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(okHttpClient93);
        org.junit.Assert.assertTrue("'" + type94 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type94.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "DIRECT" + "'", str95, "DIRECT");
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "DIRECT" + "'", str96, "DIRECT");
    }

    @Test
    public void test03083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03083");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient0.connectionPool;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler5 = okHttpClient4.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray6 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet7 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet7, routeArray6);
        okHttpClient4.failedRoutes = routeSet7;
        java.net.Proxy proxy10 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setCookieHandler(cookieHandler12);
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient11.setFollowProtocolRedirects(true);
        boolean boolean16 = proxy10.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient4.setProxy(proxy10);
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler19 = okHttpClient18.getCookieHandler();
        boolean boolean20 = okHttpClient18.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient18.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool24 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int25 = connectionPool24.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient21.setConnectionPool(connectionPool24);
        com.squareup.okhttp.OkHttpClient okHttpClient27 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector28 = null;
        okHttpClient27.proxySelector = proxySelector28;
        java.net.ProxySelector proxySelector30 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient27.setProxySelector(proxySelector30);
        java.net.ProxySelector proxySelector32 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient27.setProxySelector(proxySelector32);
        okHttpClient26.proxySelector = proxySelector32;
        okHttpClient4.proxySelector = proxySelector32;
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient0.setProxySelector(proxySelector32);
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient36.setFollowProtocolRedirects(true);
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache39 = okHttpClient36.okResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient40 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler41 = okHttpClient40.getCookieHandler();
        boolean boolean42 = okHttpClient40.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient43 = okHttpClient40.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier44 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient45 = okHttpClient43.setHostnameVerifier(hostnameVerifier44);
        com.squareup.okhttp.OkAuthenticator okAuthenticator46 = okHttpClient45.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool47 = okHttpClient45.connectionPool;
        com.squareup.okhttp.OkHttpClient okHttpClient48 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector49 = null;
        okHttpClient48.proxySelector = proxySelector49;
        java.net.ProxySelector proxySelector51 = okHttpClient48.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier52 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient53 = okHttpClient48.setHostnameVerifier(hostnameVerifier52);
        boolean boolean54 = okHttpClient48.getFollowProtocolRedirects();
        com.squareup.okhttp.ConnectionPool connectionPool57 = new com.squareup.okhttp.ConnectionPool((int) 'a', (long) (byte) -1);
        com.squareup.okhttp.OkHttpClient okHttpClient58 = okHttpClient48.setConnectionPool(connectionPool57);
        java.net.ResponseCache responseCache59 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient60 = okHttpClient48.setResponseCache(responseCache59);
        com.squareup.okhttp.OkHttpClient okHttpClient61 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler62 = okHttpClient61.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray63 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet64 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet64, routeArray63);
        okHttpClient61.failedRoutes = routeSet64;
        java.net.Proxy proxy67 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient68 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler69 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient70 = okHttpClient68.setCookieHandler(cookieHandler69);
        com.squareup.okhttp.OkHttpClient okHttpClient72 = okHttpClient68.setFollowProtocolRedirects(true);
        boolean boolean73 = proxy67.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient74 = okHttpClient61.setProxy(proxy67);
        com.squareup.okhttp.OkHttpClient okHttpClient75 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler76 = okHttpClient75.getCookieHandler();
        boolean boolean77 = okHttpClient75.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient78 = okHttpClient75.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool81 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int82 = connectionPool81.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient83 = okHttpClient78.setConnectionPool(connectionPool81);
        com.squareup.okhttp.OkHttpClient okHttpClient84 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector85 = null;
        okHttpClient84.proxySelector = proxySelector85;
        java.net.ProxySelector proxySelector87 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient88 = okHttpClient84.setProxySelector(proxySelector87);
        java.net.ProxySelector proxySelector89 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient90 = okHttpClient84.setProxySelector(proxySelector89);
        okHttpClient83.proxySelector = proxySelector89;
        okHttpClient61.proxySelector = proxySelector89;
        com.squareup.okhttp.OkHttpClient okHttpClient93 = okHttpClient60.setProxySelector(proxySelector89);
        com.squareup.okhttp.OkHttpClient okHttpClient94 = okHttpClient45.setProxySelector(proxySelector89);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory95 = okHttpClient45.sslSocketFactory;
        java.lang.String[] strArray96 = sSLSocketFactory95.getDefaultCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient97 = okHttpClient36.setSSLSocketFactory(sSLSocketFactory95);
        java.lang.Class<?> wildcardClass98 = sSLSocketFactory95.getClass();
        org.junit.Assert.assertNull(connectionPool3);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertNotNull(routeArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(proxy10);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNull(cookieHandler19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNotNull(okHttpClient31);
// flaky:         org.junit.Assert.assertNull(proxySelector32);
        org.junit.Assert.assertNotNull(okHttpClient33);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNull(okResponseCache39);
        org.junit.Assert.assertNull(cookieHandler41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(okHttpClient43);
        org.junit.Assert.assertNotNull(okHttpClient45);
        org.junit.Assert.assertNotNull(okAuthenticator46);
        org.junit.Assert.assertNotNull(connectionPool47);
        org.junit.Assert.assertNull(proxySelector51);
        org.junit.Assert.assertNotNull(okHttpClient53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(okHttpClient58);
        org.junit.Assert.assertNotNull(okHttpClient60);
        org.junit.Assert.assertNull(cookieHandler62);
        org.junit.Assert.assertNotNull(routeArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(proxy67);
        org.junit.Assert.assertNotNull(okHttpClient70);
        org.junit.Assert.assertNotNull(okHttpClient72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(okHttpClient74);
        org.junit.Assert.assertNull(cookieHandler76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(okHttpClient78);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertNotNull(okHttpClient83);
        org.junit.Assert.assertNotNull(okHttpClient88);
// flaky:         org.junit.Assert.assertNull(proxySelector89);
        org.junit.Assert.assertNotNull(okHttpClient90);
        org.junit.Assert.assertNotNull(okHttpClient93);
        org.junit.Assert.assertNotNull(okHttpClient94);
        org.junit.Assert.assertNotNull(sSLSocketFactory95);
        org.junit.Assert.assertNotNull(strArray96);
        org.junit.Assert.assertNotNull(okHttpClient97);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test03084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03084");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.copyWithDefaults();
        java.net.CookieHandler cookieHandler6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient0.setCookieHandler(cookieHandler6);
        com.squareup.okhttp.OkAuthenticator okAuthenticator8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient7.setAuthenticator(okAuthenticator8);
        javax.net.ssl.HostnameVerifier hostnameVerifier10 = okHttpClient7.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler12 = okHttpClient11.getCookieHandler();
        boolean boolean13 = okHttpClient11.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient11.setAuthenticator(okAuthenticator14);
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient11.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier17 = okHttpClient11.hostnameVerifier;
        java.net.ProxySelector proxySelector18 = java.net.ProxySelector.getDefault();
        okHttpClient11.proxySelector = proxySelector18;
        okHttpClient11.followProtocolRedirects = true;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector23 = null;
        okHttpClient22.proxySelector = proxySelector23;
        java.net.ProxySelector proxySelector25 = okHttpClient22.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier26 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient22.setHostnameVerifier(hostnameVerifier26);
        java.net.ProxySelector proxySelector28 = okHttpClient22.proxySelector;
        java.net.ResponseCache responseCache29 = okHttpClient22.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet30 = okHttpClient22.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler32 = okHttpClient31.getCookieHandler();
        boolean boolean33 = okHttpClient31.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient31.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool37 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int38 = connectionPool37.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient34.setConnectionPool(connectionPool37);
        com.squareup.okhttp.OkHttpClient okHttpClient40 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector41 = null;
        okHttpClient40.proxySelector = proxySelector41;
        java.net.ProxySelector proxySelector43 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient44 = okHttpClient40.setProxySelector(proxySelector43);
        java.net.ProxySelector proxySelector45 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient46 = okHttpClient40.setProxySelector(proxySelector45);
        okHttpClient39.proxySelector = proxySelector45;
        javax.net.ssl.HostnameVerifier hostnameVerifier48 = okHttpClient39.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient49 = okHttpClient22.setHostnameVerifier(hostnameVerifier48);
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient11.setHostnameVerifier(hostnameVerifier48);
        java.net.Proxy proxy51 = okHttpClient11.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient52 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler53 = okHttpClient52.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray54 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet55 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet55, routeArray54);
        okHttpClient52.failedRoutes = routeSet55;
        java.net.Proxy proxy58 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient59 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler60 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient61 = okHttpClient59.setCookieHandler(cookieHandler60);
        com.squareup.okhttp.OkHttpClient okHttpClient63 = okHttpClient59.setFollowProtocolRedirects(true);
        boolean boolean64 = proxy58.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient65 = okHttpClient52.setProxy(proxy58);
        com.squareup.okhttp.OkAuthenticator okAuthenticator66 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient67 = okHttpClient65.setAuthenticator(okAuthenticator66);
        com.squareup.okhttp.OkHttpClient okHttpClient68 = okHttpClient67.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient69 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector70 = null;
        okHttpClient69.proxySelector = proxySelector70;
        java.net.ProxySelector proxySelector72 = okHttpClient69.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier73 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient74 = okHttpClient69.setHostnameVerifier(hostnameVerifier73);
        boolean boolean75 = okHttpClient69.getFollowProtocolRedirects();
        com.squareup.okhttp.ConnectionPool connectionPool78 = new com.squareup.okhttp.ConnectionPool((int) 'a', (long) (byte) -1);
        com.squareup.okhttp.OkHttpClient okHttpClient79 = okHttpClient69.setConnectionPool(connectionPool78);
        com.squareup.okhttp.OkHttpClient okHttpClient80 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler81 = okHttpClient80.getCookieHandler();
        boolean boolean82 = okHttpClient80.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient83 = okHttpClient80.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier84 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient85 = okHttpClient83.setHostnameVerifier(hostnameVerifier84);
        java.net.ResponseCache responseCache86 = okHttpClient85.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator87 = okHttpClient85.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier88 = okHttpClient85.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory89 = okHttpClient85.getSslSocketFactory();
        okHttpClient69.sslSocketFactory = sSLSocketFactory89;
        java.net.Socket socket91 = sSLSocketFactory89.createSocket();
        com.squareup.okhttp.OkHttpClient okHttpClient92 = okHttpClient67.setSSLSocketFactory(sSLSocketFactory89);
        java.lang.String[] strArray93 = sSLSocketFactory89.getSupportedCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient94 = okHttpClient11.setSSLSocketFactory(sSLSocketFactory89);
        javax.net.ssl.HostnameVerifier hostnameVerifier95 = okHttpClient94.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient96 = okHttpClient7.setHostnameVerifier(hostnameVerifier95);
        com.squareup.okhttp.OkHttpClient okHttpClient97 = okHttpClient96.copyWithDefaults();
        java.net.CookieHandler cookieHandler98 = null;
        okHttpClient97.cookieHandler = cookieHandler98;
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNotNull(okHttpClient7);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNull(hostnameVerifier10);
        org.junit.Assert.assertNull(cookieHandler12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNull(hostnameVerifier17);
// flaky:         org.junit.Assert.assertNull(proxySelector18);
        org.junit.Assert.assertNull(proxySelector25);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNull(proxySelector28);
        org.junit.Assert.assertNull(responseCache29);
        org.junit.Assert.assertNotNull(routeSet30);
        org.junit.Assert.assertNull(cookieHandler32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(okHttpClient39);
        org.junit.Assert.assertNotNull(okHttpClient44);
// flaky:         org.junit.Assert.assertNull(proxySelector45);
        org.junit.Assert.assertNotNull(okHttpClient46);
        org.junit.Assert.assertNotNull(hostnameVerifier48);
        org.junit.Assert.assertNotNull(okHttpClient49);
        org.junit.Assert.assertNotNull(okHttpClient50);
        org.junit.Assert.assertNull(proxy51);
        org.junit.Assert.assertNull(cookieHandler53);
        org.junit.Assert.assertNotNull(routeArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(proxy58);
        org.junit.Assert.assertNotNull(okHttpClient61);
        org.junit.Assert.assertNotNull(okHttpClient63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(okHttpClient65);
        org.junit.Assert.assertNotNull(okHttpClient67);
        org.junit.Assert.assertNotNull(okHttpClient68);
        org.junit.Assert.assertNull(proxySelector72);
        org.junit.Assert.assertNotNull(okHttpClient74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(okHttpClient79);
        org.junit.Assert.assertNull(cookieHandler81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(okHttpClient83);
        org.junit.Assert.assertNotNull(okHttpClient85);
        org.junit.Assert.assertNull(responseCache86);
        org.junit.Assert.assertNotNull(okAuthenticator87);
        org.junit.Assert.assertNull(hostnameVerifier88);
        org.junit.Assert.assertNotNull(sSLSocketFactory89);
        org.junit.Assert.assertNotNull(socket91);
        org.junit.Assert.assertEquals(socket91.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(okHttpClient92);
        org.junit.Assert.assertNotNull(strArray93);
        org.junit.Assert.assertNotNull(okHttpClient94);
        org.junit.Assert.assertNotNull(hostnameVerifier95);
        org.junit.Assert.assertNotNull(okHttpClient96);
        org.junit.Assert.assertNotNull(okHttpClient97);
    }

    @Test
    public void test03085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03085");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        java.net.ResponseCache responseCache2 = null;
        okHttpClient0.responseCache = responseCache2;
        boolean boolean4 = okHttpClient0.followProtocolRedirects;
        java.net.CookieHandler cookieHandler5 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.ConnectionPool connectionPool6 = okHttpClient0.getConnectionPool();
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector8 = null;
        okHttpClient7.proxySelector = proxySelector8;
        java.net.ProxySelector proxySelector10 = okHttpClient7.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient7.setHostnameVerifier(hostnameVerifier11);
        java.net.ProxySelector proxySelector13 = okHttpClient7.proxySelector;
        java.net.ResponseCache responseCache14 = okHttpClient7.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet15 = okHttpClient7.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler17 = okHttpClient16.getCookieHandler();
        boolean boolean18 = okHttpClient16.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient16.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool22 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int23 = connectionPool22.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient19.setConnectionPool(connectionPool22);
        com.squareup.okhttp.OkHttpClient okHttpClient25 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector26 = null;
        okHttpClient25.proxySelector = proxySelector26;
        java.net.ProxySelector proxySelector28 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient25.setProxySelector(proxySelector28);
        java.net.ProxySelector proxySelector30 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient25.setProxySelector(proxySelector30);
        okHttpClient24.proxySelector = proxySelector30;
        javax.net.ssl.HostnameVerifier hostnameVerifier33 = okHttpClient24.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient7.setHostnameVerifier(hostnameVerifier33);
        okHttpClient0.hostnameVerifier = hostnameVerifier33;
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient37 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler38 = okHttpClient37.getCookieHandler();
        boolean boolean39 = okHttpClient37.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient40 = okHttpClient37.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet41 = okHttpClient40.failedRoutes;
        boolean boolean42 = okHttpClient40.getFollowProtocolRedirects();
        java.net.Proxy proxy43 = java.net.Proxy.NO_PROXY;
        okHttpClient40.proxy = proxy43;
        com.squareup.okhttp.OkHttpClient okHttpClient45 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler46 = okHttpClient45.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray47 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet48 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet48, routeArray47);
        okHttpClient45.failedRoutes = routeSet48;
        java.net.Proxy proxy51 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient52 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler53 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient54 = okHttpClient52.setCookieHandler(cookieHandler53);
        com.squareup.okhttp.OkHttpClient okHttpClient56 = okHttpClient52.setFollowProtocolRedirects(true);
        boolean boolean57 = proxy51.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient58 = okHttpClient45.setProxy(proxy51);
        java.net.SocketAddress socketAddress59 = proxy51.address();
        com.squareup.okhttp.OkHttpClient okHttpClient60 = okHttpClient40.setProxy(proxy51);
        com.squareup.okhttp.OkAuthenticator okAuthenticator61 = okHttpClient60.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient62 = okHttpClient36.setAuthenticator(okAuthenticator61);
        com.squareup.okhttp.OkHttpClient okHttpClient63 = okHttpClient36.copyWithDefaults();
        okHttpClient63.followProtocolRedirects = true;
        com.squareup.okhttp.OkHttpClient okHttpClient66 = okHttpClient63.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet67 = okHttpClient66.failedRoutes;
        com.squareup.okhttp.OkAuthenticator okAuthenticator68 = okHttpClient66.authenticator;
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertNull(connectionPool6);
        org.junit.Assert.assertNull(proxySelector10);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertNull(proxySelector13);
        org.junit.Assert.assertNull(responseCache14);
        org.junit.Assert.assertNotNull(routeSet15);
        org.junit.Assert.assertNull(cookieHandler17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNotNull(okHttpClient29);
// flaky:         org.junit.Assert.assertNull(proxySelector30);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNotNull(hostnameVerifier33);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNull(cookieHandler38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(okHttpClient40);
        org.junit.Assert.assertNotNull(routeSet41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(proxy43);
        org.junit.Assert.assertNull(cookieHandler46);
        org.junit.Assert.assertNotNull(routeArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(proxy51);
        org.junit.Assert.assertNotNull(okHttpClient54);
        org.junit.Assert.assertNotNull(okHttpClient56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(okHttpClient58);
        org.junit.Assert.assertNull(socketAddress59);
        org.junit.Assert.assertNotNull(okHttpClient60);
        org.junit.Assert.assertNotNull(okAuthenticator61);
        org.junit.Assert.assertNotNull(okHttpClient62);
        org.junit.Assert.assertNotNull(okHttpClient63);
        org.junit.Assert.assertNotNull(okHttpClient66);
        org.junit.Assert.assertNotNull(routeSet67);
        org.junit.Assert.assertNotNull(okAuthenticator68);
    }

    @Test
    public void test03086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03086");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        java.net.ResponseCache responseCache2 = null;
        okHttpClient0.responseCache = responseCache2;
        boolean boolean4 = okHttpClient0.followProtocolRedirects;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory5);
        java.net.CookieHandler cookieHandler7 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector9 = null;
        okHttpClient8.proxySelector = proxySelector9;
        java.net.ProxySelector proxySelector11 = okHttpClient8.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient8.setHostnameVerifier(hostnameVerifier12);
        java.net.ResponseCache responseCache14 = okHttpClient13.responseCache;
        com.squareup.okhttp.ConnectionPool connectionPool17 = new com.squareup.okhttp.ConnectionPool((int) '4', 100L);
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient13.setConnectionPool(connectionPool17);
        com.squareup.okhttp.OkHttpClient okHttpClient19 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler20 = okHttpClient19.getCookieHandler();
        boolean boolean21 = okHttpClient19.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator22 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient19.setAuthenticator(okAuthenticator22);
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient19.copyWithDefaults();
        java.net.CookieHandler cookieHandler25 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient19.setCookieHandler(cookieHandler25);
        com.squareup.okhttp.OkAuthenticator okAuthenticator27 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient26.setAuthenticator(okAuthenticator27);
        com.squareup.okhttp.OkHttpClient okHttpClient29 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler30 = okHttpClient29.getCookieHandler();
        boolean boolean31 = okHttpClient29.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient29.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool35 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int36 = connectionPool35.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient32.setConnectionPool(connectionPool35);
        com.squareup.okhttp.ConnectionPool connectionPool38 = okHttpClient32.connectionPool;
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient26.setConnectionPool(connectionPool38);
        com.squareup.okhttp.Address address40 = null;
        com.squareup.okhttp.Connection connection41 = connectionPool38.get(address40);
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient18.setConnectionPool(connectionPool38);
        com.squareup.okhttp.OkHttpClient okHttpClient43 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler44 = okHttpClient43.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray45 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet46 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet46, routeArray45);
        okHttpClient43.failedRoutes = routeSet46;
        java.net.Proxy proxy49 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient50 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler51 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient52 = okHttpClient50.setCookieHandler(cookieHandler51);
        com.squareup.okhttp.OkHttpClient okHttpClient54 = okHttpClient50.setFollowProtocolRedirects(true);
        boolean boolean55 = proxy49.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient56 = okHttpClient43.setProxy(proxy49);
        java.lang.String str57 = proxy49.toString();
        com.squareup.okhttp.OkHttpClient okHttpClient58 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler59 = okHttpClient58.getCookieHandler();
        boolean boolean60 = okHttpClient58.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator61 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient62 = okHttpClient58.setAuthenticator(okAuthenticator61);
        java.net.ResponseCache responseCache63 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient64 = okHttpClient58.setResponseCache(responseCache63);
        com.squareup.okhttp.ConnectionPool connectionPool67 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool67.evictAll();
        okHttpClient58.connectionPool = connectionPool67;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory70 = okHttpClient58.sslSocketFactory;
        com.squareup.okhttp.ConnectionPool connectionPool71 = okHttpClient58.getConnectionPool();
        boolean boolean72 = proxy49.equals((java.lang.Object) okHttpClient58);
        okHttpClient42.proxy = proxy49;
        java.net.Proxy.Type type74 = proxy49.type();
        com.squareup.okhttp.OkHttpClient okHttpClient75 = okHttpClient0.setProxy(proxy49);
        com.squareup.okhttp.OkAuthenticator okAuthenticator76 = okHttpClient0.authenticator;
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(okHttpClient6);
        org.junit.Assert.assertNull(cookieHandler7);
        org.junit.Assert.assertNull(proxySelector11);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNull(responseCache14);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNull(cookieHandler20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNull(cookieHandler30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(okHttpClient37);
        org.junit.Assert.assertNotNull(connectionPool38);
        org.junit.Assert.assertNotNull(okHttpClient39);
        org.junit.Assert.assertNull(connection41);
        org.junit.Assert.assertNotNull(okHttpClient42);
        org.junit.Assert.assertNull(cookieHandler44);
        org.junit.Assert.assertNotNull(routeArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(proxy49);
        org.junit.Assert.assertNotNull(okHttpClient52);
        org.junit.Assert.assertNotNull(okHttpClient54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(okHttpClient56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "DIRECT" + "'", str57, "DIRECT");
        org.junit.Assert.assertNull(cookieHandler59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(okHttpClient62);
        org.junit.Assert.assertNotNull(okHttpClient64);
        org.junit.Assert.assertNull(sSLSocketFactory70);
        org.junit.Assert.assertNotNull(connectionPool71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + type74 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type74.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNotNull(okHttpClient75);
        org.junit.Assert.assertNull(okAuthenticator76);
    }

    @Test
    public void test03087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03087");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        java.net.Proxy proxy5 = okHttpClient0.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient0.copyWithDefaults();
        java.net.ResponseCache responseCache7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient6.setResponseCache(responseCache7);
        java.net.ProxySelector proxySelector9 = okHttpClient8.getProxySelector();
        java.net.Proxy proxy10 = okHttpClient8.proxy;
        java.util.Set<com.squareup.okhttp.Route> routeSet11 = okHttpClient8.failedRoutes;
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(proxy5);
        org.junit.Assert.assertNotNull(okHttpClient6);
        org.junit.Assert.assertNotNull(okHttpClient8);
// flaky:         org.junit.Assert.assertNull(proxySelector9);
        org.junit.Assert.assertNull(proxy10);
        org.junit.Assert.assertNotNull(routeSet11);
    }

    @Test
    public void test03088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03088");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient3.setHostnameVerifier(hostnameVerifier4);
        java.net.ResponseCache responseCache6 = okHttpClient5.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator7 = okHttpClient5.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = okHttpClient5.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory9 = okHttpClient5.getSslSocketFactory();
        java.lang.String[] strArray10 = sSLSocketFactory9.getSupportedCipherSuites();
        java.lang.String[] strArray11 = sSLSocketFactory9.getDefaultCipherSuites();
        java.lang.String[] strArray12 = sSLSocketFactory9.getDefaultCipherSuites();
        java.net.Socket socket13 = sSLSocketFactory9.createSocket();
        java.lang.String[] strArray14 = sSLSocketFactory9.getSupportedCipherSuites();
        java.lang.String[] strArray15 = sSLSocketFactory9.getDefaultCipherSuites();
        java.net.InetAddress inetAddress16 = null;
        java.net.InetAddress inetAddress18 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket20 = sSLSocketFactory9.createSocket(inetAddress16, (int) ' ', inetAddress18, 0);
            org.junit.Assert.fail("Expected exception of type java.net.ConnectException; message: Connection refused (Connection refused)");
        } catch (java.net.ConnectException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(responseCache6);
        org.junit.Assert.assertNotNull(okAuthenticator7);
        org.junit.Assert.assertNull(hostnameVerifier8);
        org.junit.Assert.assertNotNull(sSLSocketFactory9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(socket13);
        org.junit.Assert.assertEquals(socket13.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(strArray15);
    }

    @Test
    public void test03089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03089");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        java.net.Proxy proxy5 = okHttpClient0.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient0.copyWithDefaults();
        java.net.ResponseCache responseCache7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient6.setResponseCache(responseCache7);
        java.net.ProxySelector proxySelector9 = okHttpClient8.getProxySelector();
        com.squareup.okhttp.OkHttpClient okHttpClient10 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler11 = okHttpClient10.getCookieHandler();
        boolean boolean12 = okHttpClient10.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient10.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool16 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int17 = connectionPool16.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient13.setConnectionPool(connectionPool16);
        com.squareup.okhttp.OkHttpClient okHttpClient19 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler20 = okHttpClient19.getCookieHandler();
        boolean boolean21 = okHttpClient19.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient19.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool25 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int26 = connectionPool25.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient22.setConnectionPool(connectionPool25);
        com.squareup.okhttp.OkHttpClient okHttpClient28 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector29 = null;
        okHttpClient28.proxySelector = proxySelector29;
        java.net.ProxySelector proxySelector31 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient28.setProxySelector(proxySelector31);
        java.net.ProxySelector proxySelector33 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient28.setProxySelector(proxySelector33);
        okHttpClient27.proxySelector = proxySelector33;
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient13.setProxySelector(proxySelector33);
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient8.setProxySelector(proxySelector33);
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(proxy5);
        org.junit.Assert.assertNotNull(okHttpClient6);
        org.junit.Assert.assertNotNull(okHttpClient8);
// flaky:         org.junit.Assert.assertNull(proxySelector9);
        org.junit.Assert.assertNull(cookieHandler11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNull(cookieHandler20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNotNull(okHttpClient32);
// flaky:         org.junit.Assert.assertNull(proxySelector33);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNotNull(okHttpClient37);
    }

    @Test
    public void test03090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03090");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        java.net.ResponseCache responseCache5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient0.setResponseCache(responseCache5);
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool9.evictAll();
        okHttpClient0.connectionPool = connectionPool9;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory12 = okHttpClient0.sslSocketFactory;
        java.net.Proxy proxy13 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient0.setProxy(proxy13);
        java.net.ProxySelector proxySelector15 = okHttpClient0.getProxySelector();
        com.squareup.okhttp.OkHttpClient okHttpClient16 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler17 = okHttpClient16.getCookieHandler();
        boolean boolean18 = okHttpClient16.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient16.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet20 = okHttpClient19.failedRoutes;
        okHttpClient0.failedRoutes = routeSet20;
        java.net.Proxy proxy22 = okHttpClient0.proxy;
        java.net.CookieHandler cookieHandler23 = okHttpClient0.cookieHandler;
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient6);
        org.junit.Assert.assertNull(sSLSocketFactory12);
        org.junit.Assert.assertNotNull(proxy13);
        org.junit.Assert.assertNotNull(okHttpClient14);
        org.junit.Assert.assertNull(proxySelector15);
        org.junit.Assert.assertNull(cookieHandler17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNotNull(routeSet20);
        org.junit.Assert.assertNotNull(proxy22);
        org.junit.Assert.assertNull(cookieHandler23);
    }

    @Test
    public void test03091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03091");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = okHttpClient0.hostnameVerifier;
        java.net.ResponseCache responseCache2 = okHttpClient0.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = okHttpClient0.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler5 = okHttpClient4.getCookieHandler();
        boolean boolean6 = okHttpClient4.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient4.setAuthenticator(okAuthenticator7);
        java.net.ResponseCache responseCache9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient4.setResponseCache(responseCache9);
        com.squareup.okhttp.ConnectionPool connectionPool13 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool13.evictAll();
        okHttpClient4.connectionPool = connectionPool13;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory16 = okHttpClient4.sslSocketFactory;
        java.net.ResponseCache responseCache17 = null;
        okHttpClient4.responseCache = responseCache17;
        com.squareup.okhttp.OkAuthenticator okAuthenticator19 = okHttpClient4.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient4.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient21 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector22 = null;
        okHttpClient21.proxySelector = proxySelector22;
        java.net.ProxySelector proxySelector24 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient21.setProxySelector(proxySelector24);
        java.net.ProxySelector proxySelector26 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient21.setProxySelector(proxySelector26);
        java.net.ProxySelector.setDefault(proxySelector26);
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient20.setProxySelector(proxySelector26);
        com.squareup.okhttp.OkHttpClient okHttpClient30 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler31 = okHttpClient30.getCookieHandler();
        boolean boolean32 = okHttpClient30.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient30.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool36 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int37 = connectionPool36.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient33.setConnectionPool(connectionPool36);
        javax.net.ssl.HostnameVerifier hostnameVerifier39 = null;
        okHttpClient33.hostnameVerifier = hostnameVerifier39;
        com.squareup.okhttp.ConnectionPool connectionPool41 = okHttpClient33.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator42 = okHttpClient33.authenticator;
        okHttpClient20.authenticator = okAuthenticator42;
        com.squareup.okhttp.OkHttpClient okHttpClient44 = okHttpClient0.setAuthenticator(okAuthenticator42);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory45 = okHttpClient44.sslSocketFactory;
        com.squareup.okhttp.ConnectionPool connectionPool46 = okHttpClient44.connectionPool;
        java.net.ProxySelector proxySelector47 = okHttpClient44.getProxySelector();
        com.squareup.okhttp.OkHttpClient okHttpClient48 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler49 = okHttpClient48.getCookieHandler();
        boolean boolean50 = okHttpClient48.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient51 = okHttpClient48.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool52 = okHttpClient51.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator53 = okHttpClient51.getAuthenticator();
        com.squareup.okhttp.OkHttpClient okHttpClient54 = okHttpClient44.setAuthenticator(okAuthenticator53);
        java.net.CookieHandler cookieHandler55 = okHttpClient44.getCookieHandler();
        org.junit.Assert.assertNull(hostnameVerifier1);
        org.junit.Assert.assertNull(responseCache2);
        org.junit.Assert.assertNull(okAuthenticator3);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertNull(sSLSocketFactory16);
        org.junit.Assert.assertNull(okAuthenticator19);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNotNull(okHttpClient25);
// flaky:         org.junit.Assert.assertNull(proxySelector26);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNotNull(okHttpClient29);
        org.junit.Assert.assertNull(cookieHandler31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(okHttpClient33);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNotNull(connectionPool41);
        org.junit.Assert.assertNotNull(okAuthenticator42);
        org.junit.Assert.assertNotNull(okHttpClient44);
        org.junit.Assert.assertNull(sSLSocketFactory45);
        org.junit.Assert.assertNull(connectionPool46);
        org.junit.Assert.assertNull(proxySelector47);
        org.junit.Assert.assertNull(cookieHandler49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(okHttpClient51);
        org.junit.Assert.assertNotNull(connectionPool52);
        org.junit.Assert.assertNotNull(okAuthenticator53);
        org.junit.Assert.assertNotNull(okHttpClient54);
        org.junit.Assert.assertNull(cookieHandler55);
    }

    @Test
    public void test03092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03092");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool6 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int7 = connectionPool6.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient3.setConnectionPool(connectionPool6);
        com.squareup.okhttp.ConnectionPool connectionPool9 = okHttpClient3.connectionPool;
        java.net.ResponseCache responseCache10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient3.setResponseCache(responseCache10);
        java.net.ResponseCache responseCache12 = okHttpClient3.responseCache;
        java.net.CookieHandler cookieHandler13 = null;
        okHttpClient3.cookieHandler = cookieHandler13;
        java.net.ResponseCache responseCache15 = okHttpClient3.getResponseCache();
        javax.net.ssl.HostnameVerifier hostnameVerifier16 = okHttpClient3.hostnameVerifier;
        java.net.URL uRL17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.HttpURLConnection httpURLConnection18 = okHttpClient3.open(uRL17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(responseCache12);
        org.junit.Assert.assertNull(responseCache15);
        org.junit.Assert.assertNotNull(hostnameVerifier16);
    }

    @Test
    public void test03093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03093");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier6 = okHttpClient0.hostnameVerifier;
        java.net.ProxySelector proxySelector7 = java.net.ProxySelector.getDefault();
        okHttpClient0.proxySelector = proxySelector7;
        okHttpClient0.followProtocolRedirects = true;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler12 = okHttpClient11.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray13 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet14 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet14, routeArray13);
        okHttpClient11.failedRoutes = routeSet14;
        java.net.Proxy proxy17 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler19 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient18.setCookieHandler(cookieHandler19);
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient18.setFollowProtocolRedirects(true);
        boolean boolean23 = proxy17.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient11.setProxy(proxy17);
        java.lang.String str25 = proxy17.toString();
        com.squareup.okhttp.OkHttpClient okHttpClient26 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler27 = okHttpClient26.getCookieHandler();
        boolean boolean28 = okHttpClient26.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator29 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient30 = okHttpClient26.setAuthenticator(okAuthenticator29);
        java.net.ResponseCache responseCache31 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient26.setResponseCache(responseCache31);
        com.squareup.okhttp.ConnectionPool connectionPool35 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool35.evictAll();
        okHttpClient26.connectionPool = connectionPool35;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory38 = okHttpClient26.sslSocketFactory;
        com.squareup.okhttp.ConnectionPool connectionPool39 = okHttpClient26.getConnectionPool();
        boolean boolean40 = proxy17.equals((java.lang.Object) okHttpClient26);
        com.squareup.okhttp.OkHttpClient okHttpClient41 = okHttpClient0.setProxy(proxy17);
        com.squareup.okhttp.OkHttpClient okHttpClient42 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier43 = okHttpClient42.hostnameVerifier;
        java.net.ResponseCache responseCache44 = okHttpClient42.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator45 = okHttpClient42.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient46 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler47 = okHttpClient46.getCookieHandler();
        boolean boolean48 = okHttpClient46.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient49 = okHttpClient46.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier50 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient51 = okHttpClient49.setHostnameVerifier(hostnameVerifier50);
        java.net.ResponseCache responseCache52 = okHttpClient51.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator53 = okHttpClient51.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier54 = okHttpClient51.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory55 = okHttpClient51.getSslSocketFactory();
        java.lang.String[] strArray56 = sSLSocketFactory55.getSupportedCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient57 = okHttpClient42.setSSLSocketFactory(sSLSocketFactory55);
        com.squareup.okhttp.OkHttpClient okHttpClient58 = okHttpClient41.setSSLSocketFactory(sSLSocketFactory55);
        java.net.Socket socket59 = sSLSocketFactory55.createSocket();
        java.lang.String[] strArray60 = sSLSocketFactory55.getSupportedCipherSuites();
        java.net.InetAddress inetAddress61 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket63 = sSLSocketFactory55.createSocket(inetAddress61, 100);
            org.junit.Assert.fail("Expected exception of type java.net.ConnectException; message: Connection refused (Connection refused)");
        } catch (java.net.ConnectException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(hostnameVerifier6);
// flaky:         org.junit.Assert.assertNull(proxySelector7);
        org.junit.Assert.assertNull(cookieHandler12);
        org.junit.Assert.assertNotNull(routeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(proxy17);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "DIRECT" + "'", str25, "DIRECT");
        org.junit.Assert.assertNull(cookieHandler27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(okHttpClient30);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertNull(sSLSocketFactory38);
        org.junit.Assert.assertNotNull(connectionPool39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(okHttpClient41);
        org.junit.Assert.assertNull(hostnameVerifier43);
        org.junit.Assert.assertNull(responseCache44);
        org.junit.Assert.assertNull(okAuthenticator45);
        org.junit.Assert.assertNull(cookieHandler47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(okHttpClient49);
        org.junit.Assert.assertNotNull(okHttpClient51);
        org.junit.Assert.assertNull(responseCache52);
        org.junit.Assert.assertNotNull(okAuthenticator53);
        org.junit.Assert.assertNull(hostnameVerifier54);
        org.junit.Assert.assertNotNull(sSLSocketFactory55);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(okHttpClient57);
        org.junit.Assert.assertNotNull(okHttpClient58);
        org.junit.Assert.assertNotNull(socket59);
        org.junit.Assert.assertEquals(socket59.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(strArray60);
    }

    @Test
    public void test03094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03094");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier6 = okHttpClient0.hostnameVerifier;
        java.net.ProxySelector proxySelector7 = java.net.ProxySelector.getDefault();
        okHttpClient0.proxySelector = proxySelector7;
        okHttpClient0.followProtocolRedirects = true;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler12 = okHttpClient11.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray13 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet14 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet14, routeArray13);
        okHttpClient11.failedRoutes = routeSet14;
        java.net.Proxy proxy17 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler19 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient18.setCookieHandler(cookieHandler19);
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient18.setFollowProtocolRedirects(true);
        boolean boolean23 = proxy17.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient11.setProxy(proxy17);
        java.lang.String str25 = proxy17.toString();
        com.squareup.okhttp.OkHttpClient okHttpClient26 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler27 = okHttpClient26.getCookieHandler();
        boolean boolean28 = okHttpClient26.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator29 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient30 = okHttpClient26.setAuthenticator(okAuthenticator29);
        java.net.ResponseCache responseCache31 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient26.setResponseCache(responseCache31);
        com.squareup.okhttp.ConnectionPool connectionPool35 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool35.evictAll();
        okHttpClient26.connectionPool = connectionPool35;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory38 = okHttpClient26.sslSocketFactory;
        com.squareup.okhttp.ConnectionPool connectionPool39 = okHttpClient26.getConnectionPool();
        boolean boolean40 = proxy17.equals((java.lang.Object) okHttpClient26);
        com.squareup.okhttp.OkHttpClient okHttpClient41 = okHttpClient0.setProxy(proxy17);
        com.squareup.okhttp.OkHttpClient okHttpClient42 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier43 = okHttpClient42.hostnameVerifier;
        java.net.ResponseCache responseCache44 = okHttpClient42.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator45 = okHttpClient42.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient46 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler47 = okHttpClient46.getCookieHandler();
        boolean boolean48 = okHttpClient46.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient49 = okHttpClient46.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier50 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient51 = okHttpClient49.setHostnameVerifier(hostnameVerifier50);
        java.net.ResponseCache responseCache52 = okHttpClient51.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator53 = okHttpClient51.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier54 = okHttpClient51.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory55 = okHttpClient51.getSslSocketFactory();
        java.lang.String[] strArray56 = sSLSocketFactory55.getSupportedCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient57 = okHttpClient42.setSSLSocketFactory(sSLSocketFactory55);
        com.squareup.okhttp.OkHttpClient okHttpClient58 = okHttpClient41.setSSLSocketFactory(sSLSocketFactory55);
        com.squareup.okhttp.OkHttpClient okHttpClient59 = okHttpClient41.copyWithDefaults();
        java.lang.Class<?> wildcardClass60 = okHttpClient41.getClass();
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(hostnameVerifier6);
// flaky:         org.junit.Assert.assertNull(proxySelector7);
        org.junit.Assert.assertNull(cookieHandler12);
        org.junit.Assert.assertNotNull(routeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(proxy17);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "DIRECT" + "'", str25, "DIRECT");
        org.junit.Assert.assertNull(cookieHandler27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(okHttpClient30);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertNull(sSLSocketFactory38);
        org.junit.Assert.assertNotNull(connectionPool39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(okHttpClient41);
        org.junit.Assert.assertNull(hostnameVerifier43);
        org.junit.Assert.assertNull(responseCache44);
        org.junit.Assert.assertNull(okAuthenticator45);
        org.junit.Assert.assertNull(cookieHandler47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(okHttpClient49);
        org.junit.Assert.assertNotNull(okHttpClient51);
        org.junit.Assert.assertNull(responseCache52);
        org.junit.Assert.assertNotNull(okAuthenticator53);
        org.junit.Assert.assertNull(hostnameVerifier54);
        org.junit.Assert.assertNotNull(sSLSocketFactory55);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(okHttpClient57);
        org.junit.Assert.assertNotNull(okHttpClient58);
        org.junit.Assert.assertNotNull(okHttpClient59);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test03095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03095");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setHostnameVerifier(hostnameVerifier4);
        java.net.ResponseCache responseCache6 = null;
        okHttpClient0.responseCache = responseCache6;
        java.net.ResponseCache responseCache8 = okHttpClient0.getResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient9 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector10 = null;
        okHttpClient9.proxySelector = proxySelector10;
        java.net.ProxySelector proxySelector12 = okHttpClient9.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient9.setHostnameVerifier(hostnameVerifier13);
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler16 = okHttpClient15.getCookieHandler();
        boolean boolean17 = okHttpClient15.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient15.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient19 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector20 = null;
        okHttpClient19.proxySelector = proxySelector20;
        java.net.ProxySelector proxySelector22 = okHttpClient19.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier23 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient19.setHostnameVerifier(hostnameVerifier23);
        java.net.ProxySelector proxySelector25 = okHttpClient19.proxySelector;
        java.net.ResponseCache responseCache26 = okHttpClient19.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet27 = okHttpClient19.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler29 = okHttpClient28.getCookieHandler();
        boolean boolean30 = okHttpClient28.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient28.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool34 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int35 = connectionPool34.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient31.setConnectionPool(connectionPool34);
        com.squareup.okhttp.OkHttpClient okHttpClient37 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector38 = null;
        okHttpClient37.proxySelector = proxySelector38;
        java.net.ProxySelector proxySelector40 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient41 = okHttpClient37.setProxySelector(proxySelector40);
        java.net.ProxySelector proxySelector42 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient43 = okHttpClient37.setProxySelector(proxySelector42);
        okHttpClient36.proxySelector = proxySelector42;
        javax.net.ssl.HostnameVerifier hostnameVerifier45 = okHttpClient36.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient46 = okHttpClient19.setHostnameVerifier(hostnameVerifier45);
        javax.net.ssl.HostnameVerifier hostnameVerifier47 = okHttpClient46.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient48 = okHttpClient15.setHostnameVerifier(hostnameVerifier47);
        javax.net.ssl.HostnameVerifier hostnameVerifier49 = okHttpClient48.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient14.setHostnameVerifier(hostnameVerifier49);
        okHttpClient0.hostnameVerifier = hostnameVerifier49;
        java.util.Set<com.squareup.okhttp.Route> routeSet52 = okHttpClient0.failedRoutes;
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(responseCache8);
        org.junit.Assert.assertNull(proxySelector12);
        org.junit.Assert.assertNotNull(okHttpClient14);
        org.junit.Assert.assertNull(cookieHandler16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNull(proxySelector22);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNull(proxySelector25);
        org.junit.Assert.assertNull(responseCache26);
        org.junit.Assert.assertNotNull(routeSet27);
        org.junit.Assert.assertNull(cookieHandler29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNotNull(okHttpClient41);
// flaky:         org.junit.Assert.assertNull(proxySelector42);
        org.junit.Assert.assertNotNull(okHttpClient43);
        org.junit.Assert.assertNotNull(hostnameVerifier45);
        org.junit.Assert.assertNotNull(okHttpClient46);
        org.junit.Assert.assertNotNull(hostnameVerifier47);
        org.junit.Assert.assertNotNull(okHttpClient48);
        org.junit.Assert.assertNotNull(hostnameVerifier49);
        org.junit.Assert.assertNotNull(okHttpClient50);
        org.junit.Assert.assertNotNull(routeSet52);
    }

    @Test
    public void test03096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03096");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray2 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet3 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet3, routeArray2);
        okHttpClient0.failedRoutes = routeSet3;
        java.net.CookieHandler cookieHandler6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient0.setCookieHandler(cookieHandler6);
        java.net.CookieHandler cookieHandler8 = null;
        okHttpClient7.cookieHandler = cookieHandler8;
        java.net.Proxy proxy10 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress11 = proxy10.address();
        com.squareup.okhttp.OkHttpClient okHttpClient12 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector13 = null;
        okHttpClient12.proxySelector = proxySelector13;
        com.squareup.okhttp.ConnectionPool connectionPool15 = okHttpClient12.connectionPool;
        com.squareup.okhttp.ConnectionPool connectionPool16 = okHttpClient12.getConnectionPool();
        boolean boolean17 = proxy10.equals((java.lang.Object) okHttpClient12);
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler19 = okHttpClient18.getCookieHandler();
        boolean boolean20 = okHttpClient18.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient18.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool24 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int25 = connectionPool24.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient21.setConnectionPool(connectionPool24);
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient12.setConnectionPool(connectionPool24);
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient27.setFollowProtocolRedirects(false);
        com.squareup.okhttp.ConnectionPool connectionPool32 = new com.squareup.okhttp.ConnectionPool((-1), (long) 0);
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient27.setConnectionPool(connectionPool32);
        java.net.ResponseCache responseCache34 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient27.setResponseCache(responseCache34);
        com.squareup.okhttp.OkHttpClient okHttpClient36 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler37 = okHttpClient36.getCookieHandler();
        boolean boolean38 = okHttpClient36.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator39 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient40 = okHttpClient36.setAuthenticator(okAuthenticator39);
        java.net.Proxy proxy41 = okHttpClient36.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient36.copyWithDefaults();
        java.net.CookieHandler cookieHandler43 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient44 = okHttpClient36.setCookieHandler(cookieHandler43);
        com.squareup.okhttp.OkHttpClient okHttpClient45 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler46 = okHttpClient45.getCookieHandler();
        boolean boolean47 = okHttpClient45.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient48 = okHttpClient45.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier49 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient48.setHostnameVerifier(hostnameVerifier49);
        java.net.ResponseCache responseCache51 = okHttpClient50.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator52 = okHttpClient50.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier53 = okHttpClient50.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory54 = okHttpClient50.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient55 = okHttpClient36.setSSLSocketFactory(sSLSocketFactory54);
        com.squareup.okhttp.OkHttpClient okHttpClient56 = okHttpClient35.setSSLSocketFactory(sSLSocketFactory54);
        com.squareup.okhttp.OkHttpClient okHttpClient57 = okHttpClient7.setSSLSocketFactory(sSLSocketFactory54);
        java.net.URL uRL58 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.HttpURLConnection httpURLConnection59 = okHttpClient7.open(uRL58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertNotNull(routeArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(okHttpClient7);
        org.junit.Assert.assertNotNull(proxy10);
        org.junit.Assert.assertNull(socketAddress11);
        org.junit.Assert.assertNull(connectionPool15);
        org.junit.Assert.assertNull(connectionPool16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(cookieHandler19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNotNull(okHttpClient29);
        org.junit.Assert.assertNotNull(okHttpClient33);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNull(cookieHandler37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(okHttpClient40);
        org.junit.Assert.assertNull(proxy41);
        org.junit.Assert.assertNotNull(okHttpClient42);
        org.junit.Assert.assertNotNull(okHttpClient44);
        org.junit.Assert.assertNull(cookieHandler46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(okHttpClient48);
        org.junit.Assert.assertNotNull(okHttpClient50);
        org.junit.Assert.assertNull(responseCache51);
        org.junit.Assert.assertNotNull(okAuthenticator52);
        org.junit.Assert.assertNull(hostnameVerifier53);
        org.junit.Assert.assertNotNull(sSLSocketFactory54);
        org.junit.Assert.assertNotNull(okHttpClient55);
        org.junit.Assert.assertNotNull(okHttpClient56);
        org.junit.Assert.assertNotNull(okHttpClient57);
    }

    @Test
    public void test03097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03097");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = okHttpClient0.getSslSocketFactory();
        com.squareup.okhttp.OkAuthenticator okAuthenticator2 = okHttpClient0.getAuthenticator();
        java.net.Proxy proxy3 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress4 = proxy3.address();
        com.squareup.okhttp.OkHttpClient okHttpClient5 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector6 = null;
        okHttpClient5.proxySelector = proxySelector6;
        com.squareup.okhttp.ConnectionPool connectionPool8 = okHttpClient5.connectionPool;
        com.squareup.okhttp.ConnectionPool connectionPool9 = okHttpClient5.getConnectionPool();
        boolean boolean10 = proxy3.equals((java.lang.Object) okHttpClient5);
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler12 = okHttpClient11.getCookieHandler();
        boolean boolean13 = okHttpClient11.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient11.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool17 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int18 = connectionPool17.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient14.setConnectionPool(connectionPool17);
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient5.setConnectionPool(connectionPool17);
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache21 = okHttpClient20.okResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler23 = okHttpClient22.getCookieHandler();
        boolean boolean24 = okHttpClient22.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient22.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet26 = okHttpClient25.failedRoutes;
        boolean boolean27 = okHttpClient25.getFollowProtocolRedirects();
        java.net.Proxy proxy28 = java.net.Proxy.NO_PROXY;
        okHttpClient25.proxy = proxy28;
        com.squareup.okhttp.OkHttpClient okHttpClient30 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler31 = okHttpClient30.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray32 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet33 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet33, routeArray32);
        okHttpClient30.failedRoutes = routeSet33;
        java.net.Proxy proxy36 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient37 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler38 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient37.setCookieHandler(cookieHandler38);
        com.squareup.okhttp.OkHttpClient okHttpClient41 = okHttpClient37.setFollowProtocolRedirects(true);
        boolean boolean42 = proxy36.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient43 = okHttpClient30.setProxy(proxy36);
        com.squareup.okhttp.OkAuthenticator okAuthenticator44 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient45 = okHttpClient43.setAuthenticator(okAuthenticator44);
        com.squareup.okhttp.OkHttpClient okHttpClient46 = okHttpClient45.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient47 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler48 = okHttpClient47.getCookieHandler();
        java.net.ResponseCache responseCache49 = null;
        okHttpClient47.responseCache = responseCache49;
        boolean boolean51 = okHttpClient47.followProtocolRedirects;
        java.net.CookieHandler cookieHandler52 = okHttpClient47.cookieHandler;
        com.squareup.okhttp.ConnectionPool connectionPool53 = okHttpClient47.getConnectionPool();
        com.squareup.okhttp.OkHttpClient okHttpClient54 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector55 = null;
        okHttpClient54.proxySelector = proxySelector55;
        java.net.ProxySelector proxySelector57 = okHttpClient54.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier58 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient59 = okHttpClient54.setHostnameVerifier(hostnameVerifier58);
        java.net.ProxySelector proxySelector60 = okHttpClient54.proxySelector;
        java.net.ResponseCache responseCache61 = okHttpClient54.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet62 = okHttpClient54.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient63 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler64 = okHttpClient63.getCookieHandler();
        boolean boolean65 = okHttpClient63.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient66 = okHttpClient63.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool69 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int70 = connectionPool69.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient71 = okHttpClient66.setConnectionPool(connectionPool69);
        com.squareup.okhttp.OkHttpClient okHttpClient72 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector73 = null;
        okHttpClient72.proxySelector = proxySelector73;
        java.net.ProxySelector proxySelector75 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient76 = okHttpClient72.setProxySelector(proxySelector75);
        java.net.ProxySelector proxySelector77 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient78 = okHttpClient72.setProxySelector(proxySelector77);
        okHttpClient71.proxySelector = proxySelector77;
        javax.net.ssl.HostnameVerifier hostnameVerifier80 = okHttpClient71.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient81 = okHttpClient54.setHostnameVerifier(hostnameVerifier80);
        okHttpClient47.hostnameVerifier = hostnameVerifier80;
        okHttpClient46.hostnameVerifier = hostnameVerifier80;
        okHttpClient25.hostnameVerifier = hostnameVerifier80;
        com.squareup.okhttp.OkHttpClient okHttpClient85 = okHttpClient20.setHostnameVerifier(hostnameVerifier80);
        okHttpClient0.hostnameVerifier = hostnameVerifier80;
        com.squareup.okhttp.ConnectionPool connectionPool89 = new com.squareup.okhttp.ConnectionPool(100, 1L);
        com.squareup.okhttp.Address address90 = null;
        com.squareup.okhttp.Connection connection91 = connectionPool89.get(address90);
        int int92 = connectionPool89.getConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient93 = okHttpClient0.setConnectionPool(connectionPool89);
        java.net.ProxySelector proxySelector94 = okHttpClient0.proxySelector;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache95 = okHttpClient0.okResponseCache();
        org.junit.Assert.assertNull(sSLSocketFactory1);
        org.junit.Assert.assertNull(okAuthenticator2);
        org.junit.Assert.assertNotNull(proxy3);
        org.junit.Assert.assertNull(socketAddress4);
        org.junit.Assert.assertNull(connectionPool8);
        org.junit.Assert.assertNull(connectionPool9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(cookieHandler12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(okHttpClient14);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNull(okResponseCache21);
        org.junit.Assert.assertNull(cookieHandler23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(okHttpClient25);
        org.junit.Assert.assertNotNull(routeSet26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(proxy28);
        org.junit.Assert.assertNull(cookieHandler31);
        org.junit.Assert.assertNotNull(routeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(proxy36);
        org.junit.Assert.assertNotNull(okHttpClient39);
        org.junit.Assert.assertNotNull(okHttpClient41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(okHttpClient43);
        org.junit.Assert.assertNotNull(okHttpClient45);
        org.junit.Assert.assertNotNull(okHttpClient46);
        org.junit.Assert.assertNull(cookieHandler48);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNull(cookieHandler52);
        org.junit.Assert.assertNull(connectionPool53);
        org.junit.Assert.assertNull(proxySelector57);
        org.junit.Assert.assertNotNull(okHttpClient59);
        org.junit.Assert.assertNull(proxySelector60);
        org.junit.Assert.assertNull(responseCache61);
        org.junit.Assert.assertNotNull(routeSet62);
        org.junit.Assert.assertNull(cookieHandler64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(okHttpClient66);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(okHttpClient71);
        org.junit.Assert.assertNotNull(okHttpClient76);
// flaky:         org.junit.Assert.assertNull(proxySelector77);
        org.junit.Assert.assertNotNull(okHttpClient78);
        org.junit.Assert.assertNotNull(hostnameVerifier80);
        org.junit.Assert.assertNotNull(okHttpClient81);
        org.junit.Assert.assertNotNull(okHttpClient85);
        org.junit.Assert.assertNull(connection91);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 0 + "'", int92 == 0);
        org.junit.Assert.assertNotNull(okHttpClient93);
        org.junit.Assert.assertNull(proxySelector94);
        org.junit.Assert.assertNull(okResponseCache95);
    }

    @Test
    public void test03098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03098");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray2 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet3 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet3, routeArray2);
        okHttpClient0.failedRoutes = routeSet3;
        java.net.Proxy proxy6 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient7.setCookieHandler(cookieHandler8);
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient7.setFollowProtocolRedirects(true);
        boolean boolean12 = proxy6.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient0.setProxy(proxy6);
        com.squareup.okhttp.OkHttpClient okHttpClient14 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler15 = okHttpClient14.getCookieHandler();
        boolean boolean16 = okHttpClient14.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler18 = okHttpClient17.getCookieHandler();
        boolean boolean19 = okHttpClient17.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient17.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet21 = okHttpClient20.failedRoutes;
        boolean boolean22 = okHttpClient20.getFollowProtocolRedirects();
        java.net.Proxy proxy23 = java.net.Proxy.NO_PROXY;
        okHttpClient20.proxy = proxy23;
        okHttpClient14.proxy = proxy23;
        okHttpClient0.proxy = proxy23;
        com.squareup.okhttp.OkAuthenticator okAuthenticator27 = okHttpClient0.getAuthenticator();
        java.net.Proxy proxy28 = okHttpClient0.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient29 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler30 = okHttpClient29.getCookieHandler();
        boolean boolean31 = okHttpClient29.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient29.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool35 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int36 = connectionPool35.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient32.setConnectionPool(connectionPool35);
        javax.net.ssl.HostnameVerifier hostnameVerifier38 = null;
        okHttpClient32.hostnameVerifier = hostnameVerifier38;
        com.squareup.okhttp.ConnectionPool connectionPool40 = okHttpClient32.getConnectionPool();
        java.net.ResponseCache responseCache41 = null;
        okHttpClient32.responseCache = responseCache41;
        com.squareup.okhttp.OkHttpClient okHttpClient43 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler44 = okHttpClient43.getCookieHandler();
        boolean boolean45 = okHttpClient43.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator46 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient47 = okHttpClient43.setAuthenticator(okAuthenticator46);
        com.squareup.okhttp.OkHttpClient okHttpClient48 = okHttpClient43.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier49 = okHttpClient43.hostnameVerifier;
        java.net.ProxySelector proxySelector50 = java.net.ProxySelector.getDefault();
        okHttpClient43.proxySelector = proxySelector50;
        com.squareup.okhttp.OkHttpClient okHttpClient52 = okHttpClient43.copyWithDefaults();
        com.squareup.okhttp.OkAuthenticator okAuthenticator53 = okHttpClient52.authenticator;
        com.squareup.okhttp.ConnectionPool connectionPool54 = null;
        okHttpClient52.connectionPool = connectionPool54;
        com.squareup.okhttp.OkHttpClient okHttpClient56 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector57 = null;
        okHttpClient56.proxySelector = proxySelector57;
        com.squareup.okhttp.ConnectionPool connectionPool59 = okHttpClient56.connectionPool;
        com.squareup.okhttp.ConnectionPool connectionPool60 = okHttpClient56.getConnectionPool();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache61 = okHttpClient56.okResponseCache();
        java.net.ResponseCache responseCache62 = null;
        okHttpClient56.responseCache = responseCache62;
        com.squareup.okhttp.OkHttpClient okHttpClient64 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler65 = okHttpClient64.getCookieHandler();
        boolean boolean66 = okHttpClient64.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient67 = okHttpClient64.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier68 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient69 = okHttpClient67.setHostnameVerifier(hostnameVerifier68);
        java.net.ResponseCache responseCache70 = okHttpClient69.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator71 = okHttpClient69.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier72 = okHttpClient69.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory73 = okHttpClient69.getSslSocketFactory();
        java.lang.String[] strArray74 = sSLSocketFactory73.getSupportedCipherSuites();
        java.lang.String[] strArray75 = sSLSocketFactory73.getDefaultCipherSuites();
        java.lang.String[] strArray76 = sSLSocketFactory73.getDefaultCipherSuites();
        java.lang.String[] strArray77 = sSLSocketFactory73.getSupportedCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient78 = okHttpClient56.setSSLSocketFactory(sSLSocketFactory73);
        com.squareup.okhttp.OkHttpClient okHttpClient79 = okHttpClient52.setSSLSocketFactory(sSLSocketFactory73);
        com.squareup.okhttp.OkAuthenticator okAuthenticator80 = okHttpClient52.getAuthenticator();
        com.squareup.okhttp.OkHttpClient okHttpClient81 = okHttpClient32.setAuthenticator(okAuthenticator80);
        java.net.ResponseCache responseCache82 = okHttpClient81.responseCache;
        javax.net.ssl.HostnameVerifier hostnameVerifier83 = okHttpClient81.getHostnameVerifier();
        boolean boolean84 = proxy28.equals((java.lang.Object) okHttpClient81);
        java.net.SocketAddress socketAddress85 = proxy28.address();
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertNotNull(routeArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(proxy6);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNull(cookieHandler15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(cookieHandler18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNotNull(routeSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(proxy23);
        org.junit.Assert.assertNull(okAuthenticator27);
        org.junit.Assert.assertNotNull(proxy28);
        org.junit.Assert.assertNull(cookieHandler30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(okHttpClient37);
        org.junit.Assert.assertNotNull(connectionPool40);
        org.junit.Assert.assertNull(cookieHandler44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(okHttpClient47);
        org.junit.Assert.assertNotNull(okHttpClient48);
        org.junit.Assert.assertNull(hostnameVerifier49);
// flaky:         org.junit.Assert.assertNull(proxySelector50);
        org.junit.Assert.assertNotNull(okHttpClient52);
        org.junit.Assert.assertNotNull(okAuthenticator53);
        org.junit.Assert.assertNull(connectionPool59);
        org.junit.Assert.assertNull(connectionPool60);
        org.junit.Assert.assertNull(okResponseCache61);
        org.junit.Assert.assertNull(cookieHandler65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(okHttpClient67);
        org.junit.Assert.assertNotNull(okHttpClient69);
        org.junit.Assert.assertNull(responseCache70);
        org.junit.Assert.assertNotNull(okAuthenticator71);
        org.junit.Assert.assertNull(hostnameVerifier72);
        org.junit.Assert.assertNotNull(sSLSocketFactory73);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(okHttpClient78);
        org.junit.Assert.assertNotNull(okHttpClient79);
        org.junit.Assert.assertNotNull(okAuthenticator80);
        org.junit.Assert.assertNotNull(okHttpClient81);
        org.junit.Assert.assertNull(responseCache82);
        org.junit.Assert.assertNull(hostnameVerifier83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNull(socketAddress85);
    }

    @Test
    public void test03099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03099");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setCookieHandler(cookieHandler1);
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setFollowProtocolRedirects(true);
        com.squareup.okhttp.OkHttpClient okHttpClient5 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler6 = okHttpClient5.getCookieHandler();
        boolean boolean7 = okHttpClient5.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient5.setAuthenticator(okAuthenticator8);
        java.net.ResponseCache responseCache10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient5.setResponseCache(responseCache10);
        com.squareup.okhttp.ConnectionPool connectionPool14 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool14.evictAll();
        okHttpClient5.connectionPool = connectionPool14;
        connectionPool14.evictAll();
        int int18 = connectionPool14.getSpdyConnectionCount();
        int int19 = connectionPool14.getSpdyConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient0.setConnectionPool(connectionPool14);
        com.squareup.okhttp.OkHttpClient okHttpClient21 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler22 = okHttpClient21.getCookieHandler();
        boolean boolean23 = okHttpClient21.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient21.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet25 = okHttpClient24.failedRoutes;
        boolean boolean26 = okHttpClient24.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient27 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler28 = okHttpClient27.getCookieHandler();
        boolean boolean29 = okHttpClient27.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient30 = okHttpClient27.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier31 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient30.setHostnameVerifier(hostnameVerifier31);
        java.net.ResponseCache responseCache33 = okHttpClient32.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator34 = okHttpClient32.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier35 = okHttpClient32.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory36 = okHttpClient32.getSslSocketFactory();
        java.lang.String[] strArray37 = sSLSocketFactory36.getSupportedCipherSuites();
        java.lang.String[] strArray38 = sSLSocketFactory36.getDefaultCipherSuites();
        java.lang.String[] strArray39 = sSLSocketFactory36.getDefaultCipherSuites();
        java.lang.String[] strArray40 = sSLSocketFactory36.getDefaultCipherSuites();
        java.lang.String[] strArray41 = sSLSocketFactory36.getSupportedCipherSuites();
        okHttpClient24.sslSocketFactory = sSLSocketFactory36;
        java.lang.String[] strArray43 = sSLSocketFactory36.getDefaultCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient44 = okHttpClient20.setSSLSocketFactory(sSLSocketFactory36);
        com.squareup.okhttp.OkHttpClient okHttpClient45 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector46 = null;
        okHttpClient45.proxySelector = proxySelector46;
        java.net.ProxySelector proxySelector48 = okHttpClient45.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier49 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient45.setHostnameVerifier(hostnameVerifier49);
        com.squareup.okhttp.ConnectionPool connectionPool51 = okHttpClient45.getConnectionPool();
        com.squareup.okhttp.OkHttpClient okHttpClient52 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler53 = okHttpClient52.getCookieHandler();
        boolean boolean54 = okHttpClient52.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient55 = okHttpClient52.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet56 = okHttpClient55.failedRoutes;
        boolean boolean57 = okHttpClient55.getFollowProtocolRedirects();
        java.net.Proxy proxy58 = java.net.Proxy.NO_PROXY;
        okHttpClient55.proxy = proxy58;
        com.squareup.okhttp.OkHttpClient okHttpClient60 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler61 = okHttpClient60.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray62 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet63 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet63, routeArray62);
        okHttpClient60.failedRoutes = routeSet63;
        java.net.Proxy proxy66 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient67 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler68 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient69 = okHttpClient67.setCookieHandler(cookieHandler68);
        com.squareup.okhttp.OkHttpClient okHttpClient71 = okHttpClient67.setFollowProtocolRedirects(true);
        boolean boolean72 = proxy66.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient73 = okHttpClient60.setProxy(proxy66);
        java.net.SocketAddress socketAddress74 = proxy66.address();
        com.squareup.okhttp.OkHttpClient okHttpClient75 = okHttpClient55.setProxy(proxy66);
        com.squareup.okhttp.OkHttpClient okHttpClient77 = okHttpClient55.setFollowProtocolRedirects(false);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory78 = okHttpClient77.getSslSocketFactory();
        java.lang.String[] strArray79 = sSLSocketFactory78.getSupportedCipherSuites();
        okHttpClient45.sslSocketFactory = sSLSocketFactory78;
        java.net.Socket socket81 = sSLSocketFactory78.createSocket();
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket85 = sSLSocketFactory36.createSocket(socket81, "", (int) ' ', false);
            org.junit.Assert.fail("Expected exception of type java.net.SocketException; message: Underlying socket is not connected");
        } catch (java.net.SocketException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(okHttpClient2);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(cookieHandler6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNull(cookieHandler22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNotNull(routeSet25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(cookieHandler28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(okHttpClient30);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertNull(responseCache33);
        org.junit.Assert.assertNotNull(okAuthenticator34);
        org.junit.Assert.assertNull(hostnameVerifier35);
        org.junit.Assert.assertNotNull(sSLSocketFactory36);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(okHttpClient44);
        org.junit.Assert.assertNull(proxySelector48);
        org.junit.Assert.assertNotNull(okHttpClient50);
        org.junit.Assert.assertNull(connectionPool51);
        org.junit.Assert.assertNull(cookieHandler53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(okHttpClient55);
        org.junit.Assert.assertNotNull(routeSet56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(proxy58);
        org.junit.Assert.assertNull(cookieHandler61);
        org.junit.Assert.assertNotNull(routeArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(proxy66);
        org.junit.Assert.assertNotNull(okHttpClient69);
        org.junit.Assert.assertNotNull(okHttpClient71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(okHttpClient73);
        org.junit.Assert.assertNull(socketAddress74);
        org.junit.Assert.assertNotNull(okHttpClient75);
        org.junit.Assert.assertNotNull(okHttpClient77);
        org.junit.Assert.assertNotNull(sSLSocketFactory78);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertNotNull(socket81);
        org.junit.Assert.assertEquals(socket81.toString(), "Socket[unconnected]");
    }

    @Test
    public void test03100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03100");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet4 = okHttpClient3.failedRoutes;
        boolean boolean5 = okHttpClient3.getFollowProtocolRedirects();
        java.net.Proxy proxy6 = java.net.Proxy.NO_PROXY;
        okHttpClient3.proxy = proxy6;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler9 = okHttpClient8.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray10 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet11 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet11, routeArray10);
        okHttpClient8.failedRoutes = routeSet11;
        java.net.Proxy proxy14 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient15.setCookieHandler(cookieHandler16);
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient15.setFollowProtocolRedirects(true);
        boolean boolean20 = proxy14.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient8.setProxy(proxy14);
        java.net.SocketAddress socketAddress22 = proxy14.address();
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient3.setProxy(proxy14);
        com.squareup.okhttp.OkAuthenticator okAuthenticator24 = okHttpClient23.authenticator;
        java.net.ResponseCache responseCache25 = okHttpClient23.responseCache;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache26 = okHttpClient23.okResponseCache();
        java.net.CookieHandler cookieHandler27 = null;
        okHttpClient23.cookieHandler = cookieHandler27;
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertNotNull(routeSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(proxy6);
        org.junit.Assert.assertNull(cookieHandler9);
        org.junit.Assert.assertNotNull(routeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(proxy14);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNull(socketAddress22);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertNotNull(okAuthenticator24);
        org.junit.Assert.assertNull(responseCache25);
        org.junit.Assert.assertNull(okResponseCache26);
    }

    @Test
    public void test03101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03101");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        com.squareup.okhttp.ConnectionPool connectionPool7 = new com.squareup.okhttp.ConnectionPool(1, 0L);
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient0.setConnectionPool(connectionPool7);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory9 = okHttpClient8.getSslSocketFactory();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory10 = okHttpClient8.getSslSocketFactory();
        java.net.ProxySelector proxySelector11 = okHttpClient8.getProxySelector();
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient8.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler14 = okHttpClient13.getCookieHandler();
        boolean boolean15 = okHttpClient13.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient13.setAuthenticator(okAuthenticator16);
        java.net.Proxy proxy18 = okHttpClient13.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient13.copyWithDefaults();
        java.net.CookieHandler cookieHandler20 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient13.setCookieHandler(cookieHandler20);
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier23 = okHttpClient22.hostnameVerifier;
        java.net.ResponseCache responseCache24 = okHttpClient22.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator25 = okHttpClient22.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler27 = okHttpClient26.getCookieHandler();
        boolean boolean28 = okHttpClient26.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient26.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient29.setHostnameVerifier(hostnameVerifier30);
        java.net.ResponseCache responseCache32 = okHttpClient31.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator33 = okHttpClient31.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier34 = okHttpClient31.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory35 = okHttpClient31.getSslSocketFactory();
        java.lang.String[] strArray36 = sSLSocketFactory35.getSupportedCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient22.setSSLSocketFactory(sSLSocketFactory35);
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient21.setSSLSocketFactory(sSLSocketFactory35);
        java.net.Socket socket39 = sSLSocketFactory35.createSocket();
        okHttpClient8.sslSocketFactory = sSLSocketFactory35;
        java.net.InetAddress inetAddress41 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket43 = sSLSocketFactory35.createSocket(inetAddress41, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.net.ConnectException; message: Connection refused (Connection refused)");
        } catch (java.net.ConnectException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertNull(sSLSocketFactory9);
        org.junit.Assert.assertNull(sSLSocketFactory10);
        org.junit.Assert.assertNull(proxySelector11);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertNull(cookieHandler14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNull(proxy18);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNull(hostnameVerifier23);
        org.junit.Assert.assertNull(responseCache24);
        org.junit.Assert.assertNull(okAuthenticator25);
        org.junit.Assert.assertNull(cookieHandler27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(okHttpClient29);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNull(responseCache32);
        org.junit.Assert.assertNotNull(okAuthenticator33);
        org.junit.Assert.assertNull(hostnameVerifier34);
        org.junit.Assert.assertNotNull(sSLSocketFactory35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(okHttpClient37);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNotNull(socket39);
        org.junit.Assert.assertEquals(socket39.toString(), "Socket[unconnected]");
    }

    @Test
    public void test03102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03102");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setHostnameVerifier(hostnameVerifier4);
        java.net.ResponseCache responseCache6 = okHttpClient5.responseCache;
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool((int) '4', 100L);
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient5.setConnectionPool(connectionPool9);
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler12 = okHttpClient11.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray13 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet14 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet14, routeArray13);
        okHttpClient11.failedRoutes = routeSet14;
        java.net.Proxy proxy17 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler19 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient18.setCookieHandler(cookieHandler19);
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient18.setFollowProtocolRedirects(true);
        boolean boolean23 = proxy17.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient11.setProxy(proxy17);
        java.net.Proxy.Type type25 = proxy17.type();
        com.squareup.okhttp.OkHttpClient okHttpClient26 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler27 = okHttpClient26.getCookieHandler();
        java.net.ResponseCache responseCache28 = null;
        okHttpClient26.responseCache = responseCache28;
        boolean boolean30 = okHttpClient26.followProtocolRedirects;
        java.net.CookieHandler cookieHandler31 = okHttpClient26.cookieHandler;
        com.squareup.okhttp.ConnectionPool connectionPool32 = okHttpClient26.getConnectionPool();
        com.squareup.okhttp.OkHttpClient okHttpClient33 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector34 = null;
        okHttpClient33.proxySelector = proxySelector34;
        java.net.ProxySelector proxySelector36 = okHttpClient33.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier37 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient33.setHostnameVerifier(hostnameVerifier37);
        java.net.ProxySelector proxySelector39 = okHttpClient33.proxySelector;
        java.net.ResponseCache responseCache40 = okHttpClient33.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet41 = okHttpClient33.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient42 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler43 = okHttpClient42.getCookieHandler();
        boolean boolean44 = okHttpClient42.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient45 = okHttpClient42.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool48 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int49 = connectionPool48.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient45.setConnectionPool(connectionPool48);
        com.squareup.okhttp.OkHttpClient okHttpClient51 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector52 = null;
        okHttpClient51.proxySelector = proxySelector52;
        java.net.ProxySelector proxySelector54 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient55 = okHttpClient51.setProxySelector(proxySelector54);
        java.net.ProxySelector proxySelector56 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient57 = okHttpClient51.setProxySelector(proxySelector56);
        okHttpClient50.proxySelector = proxySelector56;
        javax.net.ssl.HostnameVerifier hostnameVerifier59 = okHttpClient50.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient60 = okHttpClient33.setHostnameVerifier(hostnameVerifier59);
        okHttpClient26.hostnameVerifier = hostnameVerifier59;
        boolean boolean62 = proxy17.equals((java.lang.Object) hostnameVerifier59);
        com.squareup.okhttp.OkHttpClient okHttpClient63 = okHttpClient10.setHostnameVerifier(hostnameVerifier59);
        java.net.CookieHandler cookieHandler64 = null;
        okHttpClient10.cookieHandler = cookieHandler64;
        java.net.ProxySelector proxySelector66 = okHttpClient10.proxySelector;
        com.squareup.okhttp.OkHttpClient okHttpClient67 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler68 = okHttpClient67.getCookieHandler();
        boolean boolean69 = okHttpClient67.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator70 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient71 = okHttpClient67.setAuthenticator(okAuthenticator70);
        com.squareup.okhttp.OkHttpClient okHttpClient72 = okHttpClient67.copyWithDefaults();
        java.net.CookieHandler cookieHandler73 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient74 = okHttpClient67.setCookieHandler(cookieHandler73);
        com.squareup.okhttp.OkAuthenticator okAuthenticator75 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient76 = okHttpClient74.setAuthenticator(okAuthenticator75);
        com.squareup.okhttp.OkHttpClient okHttpClient77 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler78 = okHttpClient77.getCookieHandler();
        boolean boolean79 = okHttpClient77.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient80 = okHttpClient77.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool83 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int84 = connectionPool83.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient85 = okHttpClient80.setConnectionPool(connectionPool83);
        com.squareup.okhttp.ConnectionPool connectionPool86 = okHttpClient80.connectionPool;
        com.squareup.okhttp.OkHttpClient okHttpClient87 = okHttpClient74.setConnectionPool(connectionPool86);
        com.squareup.okhttp.OkHttpClient okHttpClient88 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler89 = okHttpClient88.getCookieHandler();
        boolean boolean90 = okHttpClient88.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient91 = okHttpClient88.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier92 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient93 = okHttpClient91.setHostnameVerifier(hostnameVerifier92);
        java.net.ResponseCache responseCache94 = okHttpClient93.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator95 = okHttpClient93.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient96 = okHttpClient74.setAuthenticator(okAuthenticator95);
        okHttpClient10.authenticator = okAuthenticator95;
        java.net.ResponseCache responseCache98 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient99 = okHttpClient10.setResponseCache(responseCache98);
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(responseCache6);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertNull(cookieHandler12);
        org.junit.Assert.assertNotNull(routeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(proxy17);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertTrue("'" + type25 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type25.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(cookieHandler27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(cookieHandler31);
        org.junit.Assert.assertNull(connectionPool32);
        org.junit.Assert.assertNull(proxySelector36);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNull(proxySelector39);
        org.junit.Assert.assertNull(responseCache40);
        org.junit.Assert.assertNotNull(routeSet41);
        org.junit.Assert.assertNull(cookieHandler43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(okHttpClient45);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(okHttpClient50);
        org.junit.Assert.assertNotNull(okHttpClient55);
// flaky:         org.junit.Assert.assertNull(proxySelector56);
        org.junit.Assert.assertNotNull(okHttpClient57);
        org.junit.Assert.assertNotNull(hostnameVerifier59);
        org.junit.Assert.assertNotNull(okHttpClient60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(okHttpClient63);
        org.junit.Assert.assertNull(proxySelector66);
        org.junit.Assert.assertNull(cookieHandler68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(okHttpClient71);
        org.junit.Assert.assertNotNull(okHttpClient72);
        org.junit.Assert.assertNotNull(okHttpClient74);
        org.junit.Assert.assertNotNull(okHttpClient76);
        org.junit.Assert.assertNull(cookieHandler78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(okHttpClient80);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertNotNull(okHttpClient85);
        org.junit.Assert.assertNotNull(connectionPool86);
        org.junit.Assert.assertNotNull(okHttpClient87);
        org.junit.Assert.assertNull(cookieHandler89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(okHttpClient91);
        org.junit.Assert.assertNotNull(okHttpClient93);
        org.junit.Assert.assertNull(responseCache94);
        org.junit.Assert.assertNotNull(okAuthenticator95);
        org.junit.Assert.assertNotNull(okHttpClient96);
        org.junit.Assert.assertNotNull(okHttpClient99);
    }

    @Test
    public void test03103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03103");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.copyWithDefaults();
        java.net.CookieHandler cookieHandler6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient0.setCookieHandler(cookieHandler6);
        com.squareup.okhttp.OkAuthenticator okAuthenticator8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient7.setAuthenticator(okAuthenticator8);
        javax.net.ssl.HostnameVerifier hostnameVerifier10 = okHttpClient7.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler12 = okHttpClient11.getCookieHandler();
        boolean boolean13 = okHttpClient11.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient11.setAuthenticator(okAuthenticator14);
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient11.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier17 = okHttpClient11.hostnameVerifier;
        java.net.ProxySelector proxySelector18 = java.net.ProxySelector.getDefault();
        okHttpClient11.proxySelector = proxySelector18;
        okHttpClient11.followProtocolRedirects = true;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector23 = null;
        okHttpClient22.proxySelector = proxySelector23;
        java.net.ProxySelector proxySelector25 = okHttpClient22.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier26 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient22.setHostnameVerifier(hostnameVerifier26);
        java.net.ProxySelector proxySelector28 = okHttpClient22.proxySelector;
        java.net.ResponseCache responseCache29 = okHttpClient22.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet30 = okHttpClient22.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler32 = okHttpClient31.getCookieHandler();
        boolean boolean33 = okHttpClient31.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient31.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool37 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int38 = connectionPool37.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient34.setConnectionPool(connectionPool37);
        com.squareup.okhttp.OkHttpClient okHttpClient40 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector41 = null;
        okHttpClient40.proxySelector = proxySelector41;
        java.net.ProxySelector proxySelector43 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient44 = okHttpClient40.setProxySelector(proxySelector43);
        java.net.ProxySelector proxySelector45 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient46 = okHttpClient40.setProxySelector(proxySelector45);
        okHttpClient39.proxySelector = proxySelector45;
        javax.net.ssl.HostnameVerifier hostnameVerifier48 = okHttpClient39.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient49 = okHttpClient22.setHostnameVerifier(hostnameVerifier48);
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient11.setHostnameVerifier(hostnameVerifier48);
        java.net.Proxy proxy51 = okHttpClient11.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient52 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler53 = okHttpClient52.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray54 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet55 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet55, routeArray54);
        okHttpClient52.failedRoutes = routeSet55;
        java.net.Proxy proxy58 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient59 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler60 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient61 = okHttpClient59.setCookieHandler(cookieHandler60);
        com.squareup.okhttp.OkHttpClient okHttpClient63 = okHttpClient59.setFollowProtocolRedirects(true);
        boolean boolean64 = proxy58.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient65 = okHttpClient52.setProxy(proxy58);
        com.squareup.okhttp.OkAuthenticator okAuthenticator66 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient67 = okHttpClient65.setAuthenticator(okAuthenticator66);
        com.squareup.okhttp.OkHttpClient okHttpClient68 = okHttpClient67.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient69 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector70 = null;
        okHttpClient69.proxySelector = proxySelector70;
        java.net.ProxySelector proxySelector72 = okHttpClient69.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier73 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient74 = okHttpClient69.setHostnameVerifier(hostnameVerifier73);
        boolean boolean75 = okHttpClient69.getFollowProtocolRedirects();
        com.squareup.okhttp.ConnectionPool connectionPool78 = new com.squareup.okhttp.ConnectionPool((int) 'a', (long) (byte) -1);
        com.squareup.okhttp.OkHttpClient okHttpClient79 = okHttpClient69.setConnectionPool(connectionPool78);
        com.squareup.okhttp.OkHttpClient okHttpClient80 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler81 = okHttpClient80.getCookieHandler();
        boolean boolean82 = okHttpClient80.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient83 = okHttpClient80.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier84 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient85 = okHttpClient83.setHostnameVerifier(hostnameVerifier84);
        java.net.ResponseCache responseCache86 = okHttpClient85.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator87 = okHttpClient85.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier88 = okHttpClient85.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory89 = okHttpClient85.getSslSocketFactory();
        okHttpClient69.sslSocketFactory = sSLSocketFactory89;
        java.net.Socket socket91 = sSLSocketFactory89.createSocket();
        com.squareup.okhttp.OkHttpClient okHttpClient92 = okHttpClient67.setSSLSocketFactory(sSLSocketFactory89);
        java.lang.String[] strArray93 = sSLSocketFactory89.getSupportedCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient94 = okHttpClient11.setSSLSocketFactory(sSLSocketFactory89);
        javax.net.ssl.HostnameVerifier hostnameVerifier95 = okHttpClient94.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient96 = okHttpClient7.setHostnameVerifier(hostnameVerifier95);
        javax.net.ssl.HostnameVerifier hostnameVerifier97 = null;
        okHttpClient96.hostnameVerifier = hostnameVerifier97;
        com.squareup.okhttp.OkHttpClient okHttpClient99 = okHttpClient96.copyWithDefaults();
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNotNull(okHttpClient7);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNull(hostnameVerifier10);
        org.junit.Assert.assertNull(cookieHandler12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNull(hostnameVerifier17);
// flaky:         org.junit.Assert.assertNull(proxySelector18);
        org.junit.Assert.assertNull(proxySelector25);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNull(proxySelector28);
        org.junit.Assert.assertNull(responseCache29);
        org.junit.Assert.assertNotNull(routeSet30);
        org.junit.Assert.assertNull(cookieHandler32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(okHttpClient39);
        org.junit.Assert.assertNotNull(okHttpClient44);
// flaky:         org.junit.Assert.assertNull(proxySelector45);
        org.junit.Assert.assertNotNull(okHttpClient46);
        org.junit.Assert.assertNotNull(hostnameVerifier48);
        org.junit.Assert.assertNotNull(okHttpClient49);
        org.junit.Assert.assertNotNull(okHttpClient50);
        org.junit.Assert.assertNull(proxy51);
        org.junit.Assert.assertNull(cookieHandler53);
        org.junit.Assert.assertNotNull(routeArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(proxy58);
        org.junit.Assert.assertNotNull(okHttpClient61);
        org.junit.Assert.assertNotNull(okHttpClient63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(okHttpClient65);
        org.junit.Assert.assertNotNull(okHttpClient67);
        org.junit.Assert.assertNotNull(okHttpClient68);
        org.junit.Assert.assertNull(proxySelector72);
        org.junit.Assert.assertNotNull(okHttpClient74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(okHttpClient79);
        org.junit.Assert.assertNull(cookieHandler81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(okHttpClient83);
        org.junit.Assert.assertNotNull(okHttpClient85);
        org.junit.Assert.assertNull(responseCache86);
        org.junit.Assert.assertNotNull(okAuthenticator87);
        org.junit.Assert.assertNull(hostnameVerifier88);
        org.junit.Assert.assertNotNull(sSLSocketFactory89);
        org.junit.Assert.assertNotNull(socket91);
        org.junit.Assert.assertEquals(socket91.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(okHttpClient92);
        org.junit.Assert.assertNotNull(strArray93);
        org.junit.Assert.assertNotNull(okHttpClient94);
        org.junit.Assert.assertNotNull(hostnameVerifier95);
        org.junit.Assert.assertNotNull(okHttpClient96);
        org.junit.Assert.assertNotNull(okHttpClient99);
    }

    @Test
    public void test03104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03104");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray2 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet3 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet3, routeArray2);
        okHttpClient0.failedRoutes = routeSet3;
        java.net.Proxy proxy6 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient7.setCookieHandler(cookieHandler8);
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient7.setFollowProtocolRedirects(true);
        boolean boolean12 = proxy6.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient0.setProxy(proxy6);
        com.squareup.okhttp.OkAuthenticator okAuthenticator14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient13.setAuthenticator(okAuthenticator14);
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient15.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector18 = null;
        okHttpClient17.proxySelector = proxySelector18;
        java.net.ProxySelector proxySelector20 = okHttpClient17.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier21 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient17.setHostnameVerifier(hostnameVerifier21);
        boolean boolean23 = okHttpClient17.getFollowProtocolRedirects();
        com.squareup.okhttp.ConnectionPool connectionPool26 = new com.squareup.okhttp.ConnectionPool((int) 'a', (long) (byte) -1);
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient17.setConnectionPool(connectionPool26);
        com.squareup.okhttp.OkHttpClient okHttpClient28 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler29 = okHttpClient28.getCookieHandler();
        boolean boolean30 = okHttpClient28.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient28.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier32 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient31.setHostnameVerifier(hostnameVerifier32);
        java.net.ResponseCache responseCache34 = okHttpClient33.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator35 = okHttpClient33.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier36 = okHttpClient33.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory37 = okHttpClient33.getSslSocketFactory();
        okHttpClient17.sslSocketFactory = sSLSocketFactory37;
        java.net.Socket socket39 = sSLSocketFactory37.createSocket();
        com.squareup.okhttp.OkHttpClient okHttpClient40 = okHttpClient15.setSSLSocketFactory(sSLSocketFactory37);
        com.squareup.okhttp.OkHttpClient okHttpClient41 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler42 = okHttpClient41.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray43 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet44 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet44, routeArray43);
        okHttpClient41.failedRoutes = routeSet44;
        java.net.Proxy proxy47 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient48 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler49 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient48.setCookieHandler(cookieHandler49);
        com.squareup.okhttp.OkHttpClient okHttpClient52 = okHttpClient48.setFollowProtocolRedirects(true);
        boolean boolean53 = proxy47.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient54 = okHttpClient41.setProxy(proxy47);
        com.squareup.okhttp.OkAuthenticator okAuthenticator55 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient56 = okHttpClient54.setAuthenticator(okAuthenticator55);
        com.squareup.okhttp.OkHttpClient okHttpClient57 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler58 = okHttpClient57.getCookieHandler();
        boolean boolean59 = okHttpClient57.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient60 = okHttpClient57.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier61 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient62 = okHttpClient60.setHostnameVerifier(hostnameVerifier61);
        com.squareup.okhttp.OkAuthenticator okAuthenticator63 = okHttpClient62.getAuthenticator();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory64 = okHttpClient62.sslSocketFactory;
        okHttpClient54.sslSocketFactory = sSLSocketFactory64;
        java.net.Socket socket66 = sSLSocketFactory64.createSocket();
        java.io.InputStream inputStream67 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket69 = sSLSocketFactory37.createSocket(socket66, inputStream67, true);
            org.junit.Assert.fail("Expected exception of type java.net.SocketException; message: Underlying socket is not connected");
        } catch (java.net.SocketException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertNotNull(routeArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(proxy6);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNull(proxySelector20);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNull(cookieHandler29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNotNull(okHttpClient33);
        org.junit.Assert.assertNull(responseCache34);
        org.junit.Assert.assertNotNull(okAuthenticator35);
        org.junit.Assert.assertNull(hostnameVerifier36);
        org.junit.Assert.assertNotNull(sSLSocketFactory37);
        org.junit.Assert.assertNotNull(socket39);
        org.junit.Assert.assertEquals(socket39.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(okHttpClient40);
        org.junit.Assert.assertNull(cookieHandler42);
        org.junit.Assert.assertNotNull(routeArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(proxy47);
        org.junit.Assert.assertNotNull(okHttpClient50);
        org.junit.Assert.assertNotNull(okHttpClient52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(okHttpClient54);
        org.junit.Assert.assertNotNull(okHttpClient56);
        org.junit.Assert.assertNull(cookieHandler58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(okHttpClient60);
        org.junit.Assert.assertNotNull(okHttpClient62);
        org.junit.Assert.assertNotNull(okAuthenticator63);
        org.junit.Assert.assertNotNull(sSLSocketFactory64);
        org.junit.Assert.assertNotNull(socket66);
        org.junit.Assert.assertEquals(socket66.toString(), "Socket[unconnected]");
    }

    @Test
    public void test03105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03105");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool6 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int7 = connectionPool6.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient3.setConnectionPool(connectionPool6);
        java.net.CookieHandler cookieHandler9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient3.setCookieHandler(cookieHandler9);
        com.squareup.okhttp.ConnectionPool connectionPool11 = okHttpClient3.getConnectionPool();
        com.squareup.okhttp.Address address12 = null;
        com.squareup.okhttp.Connection connection13 = connectionPool11.get(address12);
        int int14 = connectionPool11.getConnectionCount();
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertNotNull(connectionPool11);
        org.junit.Assert.assertNull(connection13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
    }

    @Test
    public void test03106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03106");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        java.net.ResponseCache responseCache5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient0.setResponseCache(responseCache5);
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool9.evictAll();
        okHttpClient0.connectionPool = connectionPool9;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory12 = okHttpClient0.sslSocketFactory;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory13 = null;
        okHttpClient0.sslSocketFactory = sSLSocketFactory13;
        java.net.ProxySelector proxySelector15 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient0.setProxySelector(proxySelector15);
        java.net.CookieHandler cookieHandler17 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient0.setCookieHandler(cookieHandler17);
        com.squareup.okhttp.OkHttpClient okHttpClient19 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler20 = okHttpClient19.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray21 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet22 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet22, routeArray21);
        okHttpClient19.failedRoutes = routeSet22;
        java.net.ResponseCache responseCache25 = okHttpClient19.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet26 = okHttpClient19.failedRoutes;
        okHttpClient18.failedRoutes = routeSet26;
        java.util.Set<com.squareup.okhttp.Route> routeSet28 = okHttpClient18.failedRoutes;
        java.net.Proxy proxy29 = okHttpClient18.getProxy();
        java.net.URL uRL30 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.HttpURLConnection httpURLConnection31 = okHttpClient18.open(uRL30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient6);
        org.junit.Assert.assertNull(sSLSocketFactory12);
// flaky:         org.junit.Assert.assertNull(proxySelector15);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNull(cookieHandler20);
        org.junit.Assert.assertNotNull(routeArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(responseCache25);
        org.junit.Assert.assertNotNull(routeSet26);
        org.junit.Assert.assertNotNull(routeSet28);
        org.junit.Assert.assertNull(proxy29);
    }

    @Test
    public void test03107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03107");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setHostnameVerifier(hostnameVerifier4);
        java.net.ProxySelector proxySelector6 = okHttpClient0.proxySelector;
        java.net.ResponseCache responseCache7 = okHttpClient0.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet8 = okHttpClient0.failedRoutes;
        java.net.Proxy proxy9 = okHttpClient0.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector12 = null;
        okHttpClient11.proxySelector = proxySelector12;
        java.net.ProxySelector proxySelector14 = okHttpClient11.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient11.setHostnameVerifier(hostnameVerifier15);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory17 = okHttpClient16.sslSocketFactory;
        java.net.ProxySelector proxySelector18 = okHttpClient16.getProxySelector();
        com.squareup.okhttp.ConnectionPool connectionPool19 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient16.setConnectionPool(connectionPool19);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory21 = okHttpClient20.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier23 = okHttpClient22.hostnameVerifier;
        java.net.ResponseCache responseCache24 = okHttpClient22.getResponseCache();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory25 = okHttpClient22.sslSocketFactory;
        java.net.Proxy proxy26 = okHttpClient22.getProxy();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory27 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient22.setSSLSocketFactory(sSLSocketFactory27);
        java.net.CookieHandler cookieHandler29 = null;
        okHttpClient22.cookieHandler = cookieHandler29;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler32 = okHttpClient31.getCookieHandler();
        boolean boolean33 = okHttpClient31.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient31.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier35 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient34.setHostnameVerifier(hostnameVerifier35);
        java.net.ResponseCache responseCache37 = okHttpClient36.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator38 = okHttpClient36.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier39 = okHttpClient36.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory40 = okHttpClient36.getSslSocketFactory();
        java.lang.String[] strArray41 = sSLSocketFactory40.getSupportedCipherSuites();
        java.lang.String[] strArray42 = sSLSocketFactory40.getDefaultCipherSuites();
        java.lang.String[] strArray43 = sSLSocketFactory40.getDefaultCipherSuites();
        java.lang.String[] strArray44 = sSLSocketFactory40.getDefaultCipherSuites();
        java.lang.String[] strArray45 = sSLSocketFactory40.getDefaultCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient46 = okHttpClient22.setSSLSocketFactory(sSLSocketFactory40);
        com.squareup.okhttp.OkHttpClient okHttpClient47 = okHttpClient20.setSSLSocketFactory(sSLSocketFactory40);
        com.squareup.okhttp.OkHttpClient okHttpClient48 = okHttpClient10.setSSLSocketFactory(sSLSocketFactory40);
        java.lang.String[] strArray49 = sSLSocketFactory40.getSupportedCipherSuites();
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket52 = sSLSocketFactory40.createSocket("", (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: port out of range:-1");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(proxySelector6);
        org.junit.Assert.assertNull(responseCache7);
        org.junit.Assert.assertNotNull(routeSet8);
        org.junit.Assert.assertNull(proxy9);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertNull(proxySelector14);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNull(sSLSocketFactory17);
        org.junit.Assert.assertNull(proxySelector18);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNull(sSLSocketFactory21);
        org.junit.Assert.assertNull(hostnameVerifier23);
        org.junit.Assert.assertNull(responseCache24);
        org.junit.Assert.assertNull(sSLSocketFactory25);
        org.junit.Assert.assertNull(proxy26);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNull(cookieHandler32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNull(responseCache37);
        org.junit.Assert.assertNotNull(okAuthenticator38);
        org.junit.Assert.assertNull(hostnameVerifier39);
        org.junit.Assert.assertNotNull(sSLSocketFactory40);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(okHttpClient46);
        org.junit.Assert.assertNotNull(okHttpClient47);
        org.junit.Assert.assertNotNull(okHttpClient48);
        org.junit.Assert.assertNotNull(strArray49);
    }

    @Test
    public void test03108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03108");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient4.hostnameVerifier;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory6 = okHttpClient4.sslSocketFactory;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient4.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler9 = okHttpClient8.getCookieHandler();
        boolean boolean10 = okHttpClient8.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient8.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet12 = okHttpClient11.failedRoutes;
        boolean boolean13 = okHttpClient11.getFollowProtocolRedirects();
        java.net.Proxy proxy14 = java.net.Proxy.NO_PROXY;
        okHttpClient11.proxy = proxy14;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler17 = okHttpClient16.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray18 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet19 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet19, routeArray18);
        okHttpClient16.failedRoutes = routeSet19;
        java.net.Proxy proxy22 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient23 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler24 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient23.setCookieHandler(cookieHandler24);
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient23.setFollowProtocolRedirects(true);
        boolean boolean28 = proxy22.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient16.setProxy(proxy22);
        java.net.SocketAddress socketAddress30 = proxy22.address();
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient11.setProxy(proxy22);
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient11.setFollowProtocolRedirects(false);
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient11.copyWithDefaults();
        java.net.CookieHandler cookieHandler35 = null;
        okHttpClient34.cookieHandler = cookieHandler35;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory37 = okHttpClient34.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient7.setSSLSocketFactory(sSLSocketFactory37);
        java.lang.String[] strArray39 = sSLSocketFactory37.getDefaultCipherSuites();
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket42 = sSLSocketFactory37.createSocket("", (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.net.ConnectException; message: Connection refused (Connection refused)");
        } catch (java.net.ConnectException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(sSLSocketFactory6);
        org.junit.Assert.assertNotNull(okHttpClient7);
        org.junit.Assert.assertNull(cookieHandler9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(routeSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(proxy14);
        org.junit.Assert.assertNull(cookieHandler17);
        org.junit.Assert.assertNotNull(routeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(proxy22);
        org.junit.Assert.assertNotNull(okHttpClient25);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(okHttpClient29);
        org.junit.Assert.assertNull(socketAddress30);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNotNull(okHttpClient33);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertNotNull(sSLSocketFactory37);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNotNull(strArray39);
    }

    @Test
    public void test03109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03109");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setHostnameVerifier(hostnameVerifier4);
        boolean boolean6 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool((int) 'a', (long) (byte) -1);
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler12 = okHttpClient11.getCookieHandler();
        boolean boolean13 = okHttpClient11.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient11.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient14.setHostnameVerifier(hostnameVerifier15);
        java.net.ResponseCache responseCache17 = okHttpClient16.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator18 = okHttpClient16.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier19 = okHttpClient16.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory20 = okHttpClient16.getSslSocketFactory();
        okHttpClient0.sslSocketFactory = sSLSocketFactory20;
        java.net.Socket socket22 = sSLSocketFactory20.createSocket();
        com.squareup.okhttp.OkHttpClient okHttpClient23 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier24 = okHttpClient23.hostnameVerifier;
        java.net.ResponseCache responseCache25 = okHttpClient23.getResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient26 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler27 = okHttpClient26.getCookieHandler();
        boolean boolean28 = okHttpClient26.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient26.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool32 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int33 = connectionPool32.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient29.setConnectionPool(connectionPool32);
        javax.net.ssl.HostnameVerifier hostnameVerifier35 = null;
        okHttpClient29.hostnameVerifier = hostnameVerifier35;
        com.squareup.okhttp.ConnectionPool connectionPool37 = okHttpClient29.getConnectionPool();
        okHttpClient23.connectionPool = connectionPool37;
        java.net.CookieHandler cookieHandler39 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient40 = okHttpClient23.setCookieHandler(cookieHandler39);
        java.net.ProxySelector proxySelector41 = okHttpClient40.proxySelector;
        com.squareup.okhttp.OkHttpClient okHttpClient43 = okHttpClient40.setFollowProtocolRedirects(false);
        com.squareup.okhttp.OkHttpClient okHttpClient44 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler45 = okHttpClient44.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray46 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet47 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet47, routeArray46);
        okHttpClient44.failedRoutes = routeSet47;
        java.net.Proxy proxy50 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient51 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler52 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient53 = okHttpClient51.setCookieHandler(cookieHandler52);
        com.squareup.okhttp.OkHttpClient okHttpClient55 = okHttpClient51.setFollowProtocolRedirects(true);
        boolean boolean56 = proxy50.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient57 = okHttpClient44.setProxy(proxy50);
        java.lang.String str58 = proxy50.toString();
        java.net.Proxy.Type type59 = proxy50.type();
        com.squareup.okhttp.OkHttpClient okHttpClient60 = okHttpClient43.setProxy(proxy50);
        com.squareup.okhttp.OkHttpClient okHttpClient61 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector62 = null;
        okHttpClient61.proxySelector = proxySelector62;
        java.net.ProxySelector proxySelector64 = okHttpClient61.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier65 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient66 = okHttpClient61.setHostnameVerifier(hostnameVerifier65);
        java.net.ProxySelector proxySelector67 = java.net.ProxySelector.getDefault();
        okHttpClient61.proxySelector = proxySelector67;
        java.net.CookieHandler cookieHandler69 = null;
        okHttpClient61.cookieHandler = cookieHandler69;
        com.squareup.okhttp.OkHttpClient okHttpClient71 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler72 = okHttpClient71.getCookieHandler();
        boolean boolean73 = okHttpClient71.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient74 = okHttpClient71.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier75 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient76 = okHttpClient74.setHostnameVerifier(hostnameVerifier75);
        java.net.ResponseCache responseCache77 = okHttpClient76.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator78 = okHttpClient76.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier79 = okHttpClient76.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory80 = okHttpClient76.getSslSocketFactory();
        java.lang.String[] strArray81 = sSLSocketFactory80.getSupportedCipherSuites();
        java.lang.String[] strArray82 = sSLSocketFactory80.getDefaultCipherSuites();
        okHttpClient61.sslSocketFactory = sSLSocketFactory80;
        java.lang.String[] strArray84 = sSLSocketFactory80.getDefaultCipherSuites();
        okHttpClient60.sslSocketFactory = sSLSocketFactory80;
        java.net.Socket socket86 = sSLSocketFactory80.createSocket();
        java.lang.String[] strArray87 = sSLSocketFactory80.getDefaultCipherSuites();
        java.lang.String[] strArray88 = sSLSocketFactory80.getSupportedCipherSuites();
        java.net.Socket socket89 = sSLSocketFactory80.createSocket();
        java.io.InputStream inputStream90 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket92 = sSLSocketFactory20.createSocket(socket89, inputStream90, false);
            org.junit.Assert.fail("Expected exception of type java.net.SocketException; message: Underlying socket is not connected");
        } catch (java.net.SocketException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertNull(cookieHandler12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(okHttpClient14);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNull(responseCache17);
        org.junit.Assert.assertNotNull(okAuthenticator18);
        org.junit.Assert.assertNull(hostnameVerifier19);
        org.junit.Assert.assertNotNull(sSLSocketFactory20);
        org.junit.Assert.assertNotNull(socket22);
        org.junit.Assert.assertEquals(socket22.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNull(hostnameVerifier24);
        org.junit.Assert.assertNull(responseCache25);
        org.junit.Assert.assertNull(cookieHandler27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(okHttpClient29);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertNotNull(connectionPool37);
        org.junit.Assert.assertNotNull(okHttpClient40);
        org.junit.Assert.assertNull(proxySelector41);
        org.junit.Assert.assertNotNull(okHttpClient43);
        org.junit.Assert.assertNull(cookieHandler45);
        org.junit.Assert.assertNotNull(routeArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(proxy50);
        org.junit.Assert.assertNotNull(okHttpClient53);
        org.junit.Assert.assertNotNull(okHttpClient55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(okHttpClient57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "DIRECT" + "'", str58, "DIRECT");
        org.junit.Assert.assertTrue("'" + type59 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type59.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNotNull(okHttpClient60);
        org.junit.Assert.assertNull(proxySelector64);
        org.junit.Assert.assertNotNull(okHttpClient66);
// flaky:         org.junit.Assert.assertNull(proxySelector67);
        org.junit.Assert.assertNull(cookieHandler72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(okHttpClient74);
        org.junit.Assert.assertNotNull(okHttpClient76);
        org.junit.Assert.assertNull(responseCache77);
        org.junit.Assert.assertNotNull(okAuthenticator78);
        org.junit.Assert.assertNull(hostnameVerifier79);
        org.junit.Assert.assertNotNull(sSLSocketFactory80);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertNotNull(socket86);
        org.junit.Assert.assertEquals(socket86.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertNotNull(strArray88);
        org.junit.Assert.assertNotNull(socket89);
        org.junit.Assert.assertEquals(socket89.toString(), "Socket[unconnected]");
    }

    @Test
    public void test03110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03110");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        com.squareup.okhttp.OkHttpClient okHttpClient5 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector6 = null;
        okHttpClient5.proxySelector = proxySelector6;
        java.net.ProxySelector proxySelector8 = okHttpClient5.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient5.setHostnameVerifier(hostnameVerifier9);
        java.net.ProxySelector proxySelector11 = okHttpClient5.proxySelector;
        java.net.ResponseCache responseCache12 = okHttpClient5.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet13 = okHttpClient5.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler15 = okHttpClient14.getCookieHandler();
        boolean boolean16 = okHttpClient14.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient14.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool20 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int21 = connectionPool20.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient17.setConnectionPool(connectionPool20);
        com.squareup.okhttp.OkHttpClient okHttpClient23 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector24 = null;
        okHttpClient23.proxySelector = proxySelector24;
        java.net.ProxySelector proxySelector26 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient23.setProxySelector(proxySelector26);
        java.net.ProxySelector proxySelector28 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient23.setProxySelector(proxySelector28);
        okHttpClient22.proxySelector = proxySelector28;
        javax.net.ssl.HostnameVerifier hostnameVerifier31 = okHttpClient22.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient5.setHostnameVerifier(hostnameVerifier31);
        com.squareup.okhttp.OkHttpClient okHttpClient33 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler34 = okHttpClient33.getCookieHandler();
        boolean boolean35 = okHttpClient33.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient33.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool39 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int40 = connectionPool39.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient41 = okHttpClient36.setConnectionPool(connectionPool39);
        javax.net.ssl.HostnameVerifier hostnameVerifier42 = null;
        okHttpClient36.hostnameVerifier = hostnameVerifier42;
        com.squareup.okhttp.ConnectionPool connectionPool44 = okHttpClient36.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator45 = okHttpClient36.authenticator;
        okHttpClient5.authenticator = okAuthenticator45;
        com.squareup.okhttp.OkHttpClient okHttpClient47 = okHttpClient0.setAuthenticator(okAuthenticator45);
        java.net.CookieHandler cookieHandler48 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient49 = okHttpClient47.setCookieHandler(cookieHandler48);
        java.net.Proxy proxy50 = okHttpClient47.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient51 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler52 = okHttpClient51.getCookieHandler();
        boolean boolean53 = okHttpClient51.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator54 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient55 = okHttpClient51.setAuthenticator(okAuthenticator54);
        java.net.ResponseCache responseCache56 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient57 = okHttpClient51.setResponseCache(responseCache56);
        com.squareup.okhttp.ConnectionPool connectionPool60 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool60.evictAll();
        okHttpClient51.connectionPool = connectionPool60;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory63 = okHttpClient51.sslSocketFactory;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory64 = null;
        okHttpClient51.sslSocketFactory = sSLSocketFactory64;
        java.net.ProxySelector proxySelector66 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient67 = okHttpClient51.setProxySelector(proxySelector66);
        java.net.CookieHandler cookieHandler68 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient69 = okHttpClient51.setCookieHandler(cookieHandler68);
        com.squareup.okhttp.OkHttpClient okHttpClient70 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler71 = okHttpClient70.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray72 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet73 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet73, routeArray72);
        okHttpClient70.failedRoutes = routeSet73;
        java.net.ResponseCache responseCache76 = okHttpClient70.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet77 = okHttpClient70.failedRoutes;
        okHttpClient69.failedRoutes = routeSet77;
        java.util.Set<com.squareup.okhttp.Route> routeSet79 = okHttpClient69.failedRoutes;
        okHttpClient47.failedRoutes = routeSet79;
        java.net.Proxy proxy81 = okHttpClient47.getProxy();
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(proxySelector8);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertNull(proxySelector11);
        org.junit.Assert.assertNull(responseCache12);
        org.junit.Assert.assertNotNull(routeSet13);
        org.junit.Assert.assertNull(cookieHandler15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNotNull(okHttpClient27);
// flaky:         org.junit.Assert.assertNull(proxySelector28);
        org.junit.Assert.assertNotNull(okHttpClient29);
        org.junit.Assert.assertNotNull(hostnameVerifier31);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertNull(cookieHandler34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(okHttpClient41);
        org.junit.Assert.assertNotNull(connectionPool44);
        org.junit.Assert.assertNotNull(okAuthenticator45);
        org.junit.Assert.assertNotNull(okHttpClient47);
        org.junit.Assert.assertNotNull(okHttpClient49);
        org.junit.Assert.assertNull(proxy50);
        org.junit.Assert.assertNull(cookieHandler52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(okHttpClient55);
        org.junit.Assert.assertNotNull(okHttpClient57);
        org.junit.Assert.assertNull(sSLSocketFactory63);
// flaky:         org.junit.Assert.assertNull(proxySelector66);
        org.junit.Assert.assertNotNull(okHttpClient67);
        org.junit.Assert.assertNotNull(okHttpClient69);
        org.junit.Assert.assertNull(cookieHandler71);
        org.junit.Assert.assertNotNull(routeArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNull(responseCache76);
        org.junit.Assert.assertNotNull(routeSet77);
        org.junit.Assert.assertNotNull(routeSet79);
        org.junit.Assert.assertNull(proxy81);
    }

    @Test
    public void test03111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03111");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool6 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int7 = connectionPool6.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient3.setConnectionPool(connectionPool6);
        com.squareup.okhttp.ConnectionPool connectionPool9 = okHttpClient3.connectionPool;
        java.net.ResponseCache responseCache10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient3.setResponseCache(responseCache10);
        com.squareup.okhttp.OkAuthenticator okAuthenticator12 = okHttpClient3.getAuthenticator();
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler14 = okHttpClient13.getCookieHandler();
        boolean boolean15 = okHttpClient13.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient13.setAuthenticator(okAuthenticator16);
        java.net.ResponseCache responseCache18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient13.setResponseCache(responseCache18);
        com.squareup.okhttp.ConnectionPool connectionPool22 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool22.evictAll();
        okHttpClient13.connectionPool = connectionPool22;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory25 = okHttpClient13.sslSocketFactory;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory26 = null;
        okHttpClient13.sslSocketFactory = sSLSocketFactory26;
        java.net.ProxySelector proxySelector28 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient13.setProxySelector(proxySelector28);
        com.squareup.okhttp.OkHttpClient okHttpClient30 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector31 = null;
        okHttpClient30.proxySelector = proxySelector31;
        java.net.ProxySelector proxySelector33 = okHttpClient30.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier34 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient30.setHostnameVerifier(hostnameVerifier34);
        java.net.ProxySelector proxySelector36 = java.net.ProxySelector.getDefault();
        okHttpClient30.proxySelector = proxySelector36;
        okHttpClient29.proxySelector = proxySelector36;
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient3.setProxySelector(proxySelector36);
        java.net.ResponseCache responseCache40 = null;
        okHttpClient3.responseCache = responseCache40;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory42 = okHttpClient3.sslSocketFactory;
        java.net.InetAddress inetAddress43 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket45 = sSLSocketFactory42.createSocket(inetAddress43, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.net.ConnectException; message: Connection refused (Connection refused)");
        } catch (java.net.ConnectException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(okAuthenticator12);
        org.junit.Assert.assertNull(cookieHandler14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNull(sSLSocketFactory25);
// flaky:         org.junit.Assert.assertNull(proxySelector28);
        org.junit.Assert.assertNotNull(okHttpClient29);
        org.junit.Assert.assertNull(proxySelector33);
        org.junit.Assert.assertNotNull(okHttpClient35);
// flaky:         org.junit.Assert.assertNull(proxySelector36);
        org.junit.Assert.assertNotNull(okHttpClient39);
        org.junit.Assert.assertNotNull(sSLSocketFactory42);
    }

    @Test
    public void test03112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03112");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setHostnameVerifier(hostnameVerifier4);
        boolean boolean6 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool((int) 'a', (long) (byte) -1);
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient0.setConnectionPool(connectionPool9);
        java.net.ResponseCache responseCache11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient0.setResponseCache(responseCache11);
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory14 = okHttpClient13.getSslSocketFactory();
        com.squareup.okhttp.OkAuthenticator okAuthenticator15 = okHttpClient13.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler17 = okHttpClient16.getCookieHandler();
        boolean boolean18 = okHttpClient16.getFollowProtocolRedirects();
        java.net.ProxySelector proxySelector19 = okHttpClient16.proxySelector;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector21 = null;
        okHttpClient20.proxySelector = proxySelector21;
        java.net.ProxySelector proxySelector23 = okHttpClient20.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier24 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient20.setHostnameVerifier(hostnameVerifier24);
        java.net.ProxySelector proxySelector26 = okHttpClient20.proxySelector;
        java.net.ResponseCache responseCache27 = okHttpClient20.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet28 = okHttpClient20.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient29 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler30 = okHttpClient29.getCookieHandler();
        boolean boolean31 = okHttpClient29.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient29.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool35 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int36 = connectionPool35.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient32.setConnectionPool(connectionPool35);
        com.squareup.okhttp.OkHttpClient okHttpClient38 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector39 = null;
        okHttpClient38.proxySelector = proxySelector39;
        java.net.ProxySelector proxySelector41 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient38.setProxySelector(proxySelector41);
        java.net.ProxySelector proxySelector43 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient44 = okHttpClient38.setProxySelector(proxySelector43);
        okHttpClient37.proxySelector = proxySelector43;
        javax.net.ssl.HostnameVerifier hostnameVerifier46 = okHttpClient37.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient47 = okHttpClient20.setHostnameVerifier(hostnameVerifier46);
        java.net.Proxy proxy48 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress49 = proxy48.address();
        com.squareup.okhttp.OkHttpClient okHttpClient50 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector51 = null;
        okHttpClient50.proxySelector = proxySelector51;
        com.squareup.okhttp.ConnectionPool connectionPool53 = okHttpClient50.connectionPool;
        com.squareup.okhttp.ConnectionPool connectionPool54 = okHttpClient50.getConnectionPool();
        boolean boolean55 = proxy48.equals((java.lang.Object) okHttpClient50);
        okHttpClient20.proxy = proxy48;
        com.squareup.okhttp.OkHttpClient okHttpClient57 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler58 = okHttpClient57.getCookieHandler();
        boolean boolean59 = okHttpClient57.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient60 = okHttpClient57.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier61 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient62 = okHttpClient60.setHostnameVerifier(hostnameVerifier61);
        java.net.ResponseCache responseCache63 = okHttpClient62.getResponseCache();
        java.net.ProxySelector proxySelector64 = okHttpClient62.getProxySelector();
        boolean boolean65 = proxy48.equals((java.lang.Object) proxySelector64);
        com.squareup.okhttp.OkHttpClient okHttpClient66 = okHttpClient16.setProxy(proxy48);
        java.net.CookieHandler cookieHandler67 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient68 = okHttpClient16.setCookieHandler(cookieHandler67);
        java.net.Proxy proxy69 = okHttpClient68.getProxy();
        java.net.Proxy.Type type70 = proxy69.type();
        okHttpClient13.proxy = proxy69;
        java.net.Proxy.Type type72 = proxy69.type();
        okHttpClient12.proxy = proxy69;
        com.squareup.okhttp.OkHttpClient okHttpClient74 = okHttpClient12.copyWithDefaults();
        java.net.CookieHandler cookieHandler75 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient76 = okHttpClient12.setCookieHandler(cookieHandler75);
        java.net.ResponseCache responseCache77 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient78 = okHttpClient12.setResponseCache(responseCache77);
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertNull(sSLSocketFactory14);
        org.junit.Assert.assertNull(okAuthenticator15);
        org.junit.Assert.assertNull(cookieHandler17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(proxySelector19);
        org.junit.Assert.assertNull(proxySelector23);
        org.junit.Assert.assertNotNull(okHttpClient25);
        org.junit.Assert.assertNull(proxySelector26);
        org.junit.Assert.assertNull(responseCache27);
        org.junit.Assert.assertNotNull(routeSet28);
        org.junit.Assert.assertNull(cookieHandler30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(okHttpClient37);
        org.junit.Assert.assertNotNull(okHttpClient42);
// flaky:         org.junit.Assert.assertNull(proxySelector43);
        org.junit.Assert.assertNotNull(okHttpClient44);
        org.junit.Assert.assertNotNull(hostnameVerifier46);
        org.junit.Assert.assertNotNull(okHttpClient47);
        org.junit.Assert.assertNotNull(proxy48);
        org.junit.Assert.assertNull(socketAddress49);
        org.junit.Assert.assertNull(connectionPool53);
        org.junit.Assert.assertNull(connectionPool54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(cookieHandler58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(okHttpClient60);
        org.junit.Assert.assertNotNull(okHttpClient62);
        org.junit.Assert.assertNull(responseCache63);
// flaky:         org.junit.Assert.assertNull(proxySelector64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(okHttpClient66);
        org.junit.Assert.assertNotNull(okHttpClient68);
        org.junit.Assert.assertNotNull(proxy69);
        org.junit.Assert.assertTrue("'" + type70 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type70.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertTrue("'" + type72 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type72.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNotNull(okHttpClient74);
        org.junit.Assert.assertNotNull(okHttpClient76);
        org.junit.Assert.assertNotNull(okHttpClient78);
    }

    @Test
    public void test03113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03113");
        com.squareup.okhttp.ConnectionPool connectionPool2 = new com.squareup.okhttp.ConnectionPool((int) (short) -1, (long) (byte) 100);
        int int3 = connectionPool2.getHttpConnectionCount();
        int int4 = connectionPool2.getSpdyConnectionCount();
        int int5 = connectionPool2.getHttpConnectionCount();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test03114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03114");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient4 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector5 = null;
        okHttpClient4.proxySelector = proxySelector5;
        java.net.ProxySelector proxySelector7 = okHttpClient4.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient4.setHostnameVerifier(hostnameVerifier8);
        java.net.ProxySelector proxySelector10 = okHttpClient4.proxySelector;
        java.net.ResponseCache responseCache11 = okHttpClient4.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet12 = okHttpClient4.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler14 = okHttpClient13.getCookieHandler();
        boolean boolean15 = okHttpClient13.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient13.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool19 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int20 = connectionPool19.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient16.setConnectionPool(connectionPool19);
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector23 = null;
        okHttpClient22.proxySelector = proxySelector23;
        java.net.ProxySelector proxySelector25 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient22.setProxySelector(proxySelector25);
        java.net.ProxySelector proxySelector27 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient22.setProxySelector(proxySelector27);
        okHttpClient21.proxySelector = proxySelector27;
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = okHttpClient21.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient4.setHostnameVerifier(hostnameVerifier30);
        javax.net.ssl.HostnameVerifier hostnameVerifier32 = okHttpClient31.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient0.setHostnameVerifier(hostnameVerifier32);
        java.net.Proxy proxy34 = okHttpClient33.proxy;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory35 = okHttpClient33.getSslSocketFactory();
        java.net.URL uRL36 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.HttpURLConnection httpURLConnection37 = okHttpClient33.open(uRL36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertNull(proxySelector7);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNull(proxySelector10);
        org.junit.Assert.assertNull(responseCache11);
        org.junit.Assert.assertNotNull(routeSet12);
        org.junit.Assert.assertNull(cookieHandler14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNotNull(okHttpClient26);
// flaky:         org.junit.Assert.assertNull(proxySelector27);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNotNull(hostnameVerifier30);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNotNull(hostnameVerifier32);
        org.junit.Assert.assertNotNull(okHttpClient33);
        org.junit.Assert.assertNull(proxy34);
        org.junit.Assert.assertNull(sSLSocketFactory35);
    }

    @Test
    public void test03115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03115");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setHostnameVerifier(hostnameVerifier4);
        java.net.ResponseCache responseCache6 = okHttpClient5.responseCache;
        java.net.CookieHandler cookieHandler7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient5.setCookieHandler(cookieHandler7);
        boolean boolean9 = okHttpClient5.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator10 = okHttpClient5.authenticator;
        com.squareup.okhttp.ConnectionPool connectionPool11 = okHttpClient5.getConnectionPool();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory12 = okHttpClient5.sslSocketFactory;
        java.net.CookieHandler cookieHandler13 = okHttpClient5.getCookieHandler();
        java.net.ResponseCache responseCache14 = okHttpClient5.responseCache;
        okHttpClient5.followProtocolRedirects = false;
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(responseCache6);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(okAuthenticator10);
        org.junit.Assert.assertNull(connectionPool11);
        org.junit.Assert.assertNull(sSLSocketFactory12);
        org.junit.Assert.assertNull(cookieHandler13);
        org.junit.Assert.assertNull(responseCache14);
    }

    @Test
    public void test03116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03116");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray2 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet3 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet3, routeArray2);
        okHttpClient0.failedRoutes = routeSet3;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler7 = okHttpClient6.getCookieHandler();
        java.net.ResponseCache responseCache8 = okHttpClient6.responseCache;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient6.copyWithDefaults();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory10 = okHttpClient9.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory10);
        java.lang.String[] strArray12 = sSLSocketFactory10.getSupportedCipherSuites();
        java.net.Socket socket13 = sSLSocketFactory10.createSocket();
        com.squareup.okhttp.OkHttpClient okHttpClient14 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler15 = okHttpClient14.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray16 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet17 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet17, routeArray16);
        okHttpClient14.failedRoutes = routeSet17;
        java.net.Proxy proxy20 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler22 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient21.setCookieHandler(cookieHandler22);
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient21.setFollowProtocolRedirects(true);
        boolean boolean26 = proxy20.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient14.setProxy(proxy20);
        com.squareup.okhttp.OkAuthenticator okAuthenticator28 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient27.setAuthenticator(okAuthenticator28);
        com.squareup.okhttp.OkHttpClient okHttpClient30 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler31 = okHttpClient30.getCookieHandler();
        boolean boolean32 = okHttpClient30.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient30.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier34 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient33.setHostnameVerifier(hostnameVerifier34);
        com.squareup.okhttp.OkAuthenticator okAuthenticator36 = okHttpClient35.getAuthenticator();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory37 = okHttpClient35.sslSocketFactory;
        okHttpClient27.sslSocketFactory = sSLSocketFactory37;
        java.net.Socket socket39 = sSLSocketFactory37.createSocket();
        java.io.InputStream inputStream40 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket42 = sSLSocketFactory10.createSocket(socket39, inputStream40, true);
            org.junit.Assert.fail("Expected exception of type java.net.SocketException; message: Underlying socket is not connected");
        } catch (java.net.SocketException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertNotNull(routeArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(cookieHandler7);
        org.junit.Assert.assertNull(responseCache8);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNotNull(sSLSocketFactory10);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(socket13);
        org.junit.Assert.assertEquals(socket13.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNull(cookieHandler15);
        org.junit.Assert.assertNotNull(routeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(proxy20);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertNotNull(okHttpClient25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNotNull(okHttpClient29);
        org.junit.Assert.assertNull(cookieHandler31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(okHttpClient33);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNotNull(okAuthenticator36);
        org.junit.Assert.assertNotNull(sSLSocketFactory37);
        org.junit.Assert.assertNotNull(socket39);
        org.junit.Assert.assertEquals(socket39.toString(), "Socket[unconnected]");
    }

    @Test
    public void test03117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03117");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet4 = okHttpClient3.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient3.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector7 = null;
        okHttpClient6.proxySelector = proxySelector7;
        java.net.ProxySelector proxySelector9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient6.setProxySelector(proxySelector9);
        java.net.ProxySelector proxySelector11 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient6.setProxySelector(proxySelector11);
        java.net.ProxySelector.setDefault(proxySelector11);
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient5.setProxySelector(proxySelector11);
        java.util.Set<com.squareup.okhttp.Route> routeSet15 = null;
        okHttpClient5.failedRoutes = routeSet15;
        okHttpClient5.followProtocolRedirects = false;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler20 = okHttpClient19.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray21 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet22 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet22, routeArray21);
        okHttpClient19.failedRoutes = routeSet22;
        java.net.Proxy proxy25 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler27 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient26.setCookieHandler(cookieHandler27);
        com.squareup.okhttp.OkHttpClient okHttpClient30 = okHttpClient26.setFollowProtocolRedirects(true);
        boolean boolean31 = proxy25.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient19.setProxy(proxy25);
        com.squareup.okhttp.OkHttpClient okHttpClient33 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector34 = null;
        okHttpClient33.proxySelector = proxySelector34;
        java.net.ProxySelector proxySelector36 = okHttpClient33.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier37 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient33.setHostnameVerifier(hostnameVerifier37);
        java.net.ProxySelector proxySelector39 = okHttpClient33.proxySelector;
        java.net.ResponseCache responseCache40 = okHttpClient33.getResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient41 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler42 = okHttpClient41.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray43 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet44 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet44, routeArray43);
        okHttpClient41.failedRoutes = routeSet44;
        java.net.Proxy proxy47 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient48 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler49 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient48.setCookieHandler(cookieHandler49);
        com.squareup.okhttp.OkHttpClient okHttpClient52 = okHttpClient48.setFollowProtocolRedirects(true);
        boolean boolean53 = proxy47.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient54 = okHttpClient41.setProxy(proxy47);
        okHttpClient33.proxy = proxy47;
        com.squareup.okhttp.OkHttpClient okHttpClient56 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler57 = okHttpClient56.getCookieHandler();
        boolean boolean58 = okHttpClient56.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient59 = okHttpClient56.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier60 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient61 = okHttpClient59.setHostnameVerifier(hostnameVerifier60);
        boolean boolean62 = proxy47.equals((java.lang.Object) okHttpClient59);
        com.squareup.okhttp.OkHttpClient okHttpClient63 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector64 = null;
        okHttpClient63.proxySelector = proxySelector64;
        java.net.ProxySelector proxySelector66 = okHttpClient63.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier67 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient68 = okHttpClient63.setHostnameVerifier(hostnameVerifier67);
        java.net.ProxySelector proxySelector69 = okHttpClient63.proxySelector;
        java.net.CookieHandler cookieHandler70 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient71 = okHttpClient63.setCookieHandler(cookieHandler70);
        com.squareup.okhttp.OkAuthenticator okAuthenticator72 = null;
        okHttpClient71.authenticator = okAuthenticator72;
        boolean boolean74 = proxy47.equals((java.lang.Object) okAuthenticator72);
        okHttpClient32.proxy = proxy47;
        com.squareup.okhttp.OkHttpClient okHttpClient76 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector77 = null;
        okHttpClient76.proxySelector = proxySelector77;
        java.net.ProxySelector proxySelector79 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient80 = okHttpClient76.setProxySelector(proxySelector79);
        java.net.CookieHandler cookieHandler81 = okHttpClient80.cookieHandler;
        java.net.ResponseCache responseCache82 = okHttpClient80.getResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient83 = okHttpClient80.copyWithDefaults();
        boolean boolean84 = proxy47.equals((java.lang.Object) okHttpClient83);
        java.net.SocketAddress socketAddress85 = proxy47.address();
        okHttpClient5.proxy = proxy47;
        java.net.CookieHandler cookieHandler87 = okHttpClient5.cookieHandler;
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertNotNull(routeSet4);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNotNull(okHttpClient10);
// flaky:         org.junit.Assert.assertNull(proxySelector11);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertNotNull(okHttpClient14);
        org.junit.Assert.assertNull(cookieHandler20);
        org.junit.Assert.assertNotNull(routeArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(proxy25);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNotNull(okHttpClient30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertNull(proxySelector36);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNull(proxySelector39);
        org.junit.Assert.assertNull(responseCache40);
        org.junit.Assert.assertNull(cookieHandler42);
        org.junit.Assert.assertNotNull(routeArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(proxy47);
        org.junit.Assert.assertNotNull(okHttpClient50);
        org.junit.Assert.assertNotNull(okHttpClient52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(okHttpClient54);
        org.junit.Assert.assertNull(cookieHandler57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(okHttpClient59);
        org.junit.Assert.assertNotNull(okHttpClient61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(proxySelector66);
        org.junit.Assert.assertNotNull(okHttpClient68);
        org.junit.Assert.assertNull(proxySelector69);
        org.junit.Assert.assertNotNull(okHttpClient71);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(okHttpClient80);
        org.junit.Assert.assertNull(cookieHandler81);
        org.junit.Assert.assertNull(responseCache82);
        org.junit.Assert.assertNotNull(okHttpClient83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNull(socketAddress85);
        org.junit.Assert.assertNull(cookieHandler87);
    }

    @Test
    public void test03118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03118");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = okHttpClient0.getSslSocketFactory();
        com.squareup.okhttp.OkAuthenticator okAuthenticator2 = okHttpClient0.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler4 = okHttpClient3.getCookieHandler();
        boolean boolean5 = okHttpClient3.getFollowProtocolRedirects();
        java.net.ProxySelector proxySelector6 = okHttpClient3.proxySelector;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector8 = null;
        okHttpClient7.proxySelector = proxySelector8;
        java.net.ProxySelector proxySelector10 = okHttpClient7.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient7.setHostnameVerifier(hostnameVerifier11);
        java.net.ProxySelector proxySelector13 = okHttpClient7.proxySelector;
        java.net.ResponseCache responseCache14 = okHttpClient7.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet15 = okHttpClient7.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler17 = okHttpClient16.getCookieHandler();
        boolean boolean18 = okHttpClient16.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient16.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool22 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int23 = connectionPool22.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient19.setConnectionPool(connectionPool22);
        com.squareup.okhttp.OkHttpClient okHttpClient25 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector26 = null;
        okHttpClient25.proxySelector = proxySelector26;
        java.net.ProxySelector proxySelector28 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient25.setProxySelector(proxySelector28);
        java.net.ProxySelector proxySelector30 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient25.setProxySelector(proxySelector30);
        okHttpClient24.proxySelector = proxySelector30;
        javax.net.ssl.HostnameVerifier hostnameVerifier33 = okHttpClient24.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient7.setHostnameVerifier(hostnameVerifier33);
        java.net.Proxy proxy35 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress36 = proxy35.address();
        com.squareup.okhttp.OkHttpClient okHttpClient37 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector38 = null;
        okHttpClient37.proxySelector = proxySelector38;
        com.squareup.okhttp.ConnectionPool connectionPool40 = okHttpClient37.connectionPool;
        com.squareup.okhttp.ConnectionPool connectionPool41 = okHttpClient37.getConnectionPool();
        boolean boolean42 = proxy35.equals((java.lang.Object) okHttpClient37);
        okHttpClient7.proxy = proxy35;
        com.squareup.okhttp.OkHttpClient okHttpClient44 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler45 = okHttpClient44.getCookieHandler();
        boolean boolean46 = okHttpClient44.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient47 = okHttpClient44.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier48 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient49 = okHttpClient47.setHostnameVerifier(hostnameVerifier48);
        java.net.ResponseCache responseCache50 = okHttpClient49.getResponseCache();
        java.net.ProxySelector proxySelector51 = okHttpClient49.getProxySelector();
        boolean boolean52 = proxy35.equals((java.lang.Object) proxySelector51);
        com.squareup.okhttp.OkHttpClient okHttpClient53 = okHttpClient3.setProxy(proxy35);
        java.net.CookieHandler cookieHandler54 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient55 = okHttpClient3.setCookieHandler(cookieHandler54);
        java.net.Proxy proxy56 = okHttpClient55.getProxy();
        java.net.Proxy.Type type57 = proxy56.type();
        okHttpClient0.proxy = proxy56;
        java.net.SocketAddress socketAddress59 = proxy56.address();
        com.squareup.okhttp.OkHttpClient okHttpClient60 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler61 = okHttpClient60.getCookieHandler();
        boolean boolean62 = okHttpClient60.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator63 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient64 = okHttpClient60.setAuthenticator(okAuthenticator63);
        java.net.ResponseCache responseCache65 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient66 = okHttpClient60.setResponseCache(responseCache65);
        java.net.Proxy proxy67 = okHttpClient60.proxy;
        boolean boolean68 = proxy56.equals((java.lang.Object) proxy67);
        // The following exception was thrown during execution in test generation
        try {
            java.net.Proxy.Type type69 = proxy67.type();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(sSLSocketFactory1);
        org.junit.Assert.assertNull(okAuthenticator2);
        org.junit.Assert.assertNull(cookieHandler4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(proxySelector6);
        org.junit.Assert.assertNull(proxySelector10);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertNull(proxySelector13);
        org.junit.Assert.assertNull(responseCache14);
        org.junit.Assert.assertNotNull(routeSet15);
        org.junit.Assert.assertNull(cookieHandler17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNotNull(okHttpClient29);
// flaky:         org.junit.Assert.assertNull(proxySelector30);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNotNull(hostnameVerifier33);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertNotNull(proxy35);
        org.junit.Assert.assertNull(socketAddress36);
        org.junit.Assert.assertNull(connectionPool40);
        org.junit.Assert.assertNull(connectionPool41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(cookieHandler45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(okHttpClient47);
        org.junit.Assert.assertNotNull(okHttpClient49);
        org.junit.Assert.assertNull(responseCache50);
// flaky:         org.junit.Assert.assertNull(proxySelector51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(okHttpClient53);
        org.junit.Assert.assertNotNull(okHttpClient55);
        org.junit.Assert.assertNotNull(proxy56);
        org.junit.Assert.assertTrue("'" + type57 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type57.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress59);
        org.junit.Assert.assertNull(cookieHandler61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(okHttpClient64);
        org.junit.Assert.assertNotNull(okHttpClient66);
        org.junit.Assert.assertNull(proxy67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    }

    @Test
    public void test03119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03119");
        com.squareup.okhttp.ConnectionPool connectionPool2 = new com.squareup.okhttp.ConnectionPool((int) '#', 100L);
        int int3 = connectionPool2.getSpdyConnectionCount();
        com.squareup.okhttp.Connection connection4 = null;
        // The following exception was thrown during execution in test generation
        try {
            connectionPool2.recycle(connection4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test03120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03120");
        com.squareup.okhttp.ConnectionPool connectionPool2 = new com.squareup.okhttp.ConnectionPool((int) (short) 100, (long) 10);
        connectionPool2.evictAll();
        connectionPool2.evictAll();
        com.squareup.okhttp.Connection connection5 = null;
        // The following exception was thrown during execution in test generation
        try {
            connectionPool2.maybeShare(connection5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test03121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03121");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        com.squareup.okhttp.ConnectionPool connectionPool7 = new com.squareup.okhttp.ConnectionPool(1, 0L);
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient0.setConnectionPool(connectionPool7);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory9 = okHttpClient8.getSslSocketFactory();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory10 = okHttpClient8.getSslSocketFactory();
        com.squareup.okhttp.ConnectionPool connectionPool11 = okHttpClient8.connectionPool;
        java.net.CookieHandler cookieHandler12 = null;
        okHttpClient8.cookieHandler = cookieHandler12;
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertNull(sSLSocketFactory9);
        org.junit.Assert.assertNull(sSLSocketFactory10);
        org.junit.Assert.assertNotNull(connectionPool11);
    }

    @Test
    public void test03122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03122");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler4 = okHttpClient3.getCookieHandler();
        boolean boolean5 = okHttpClient3.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient3.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet7 = okHttpClient6.failedRoutes;
        boolean boolean8 = okHttpClient6.getFollowProtocolRedirects();
        java.net.Proxy proxy9 = java.net.Proxy.NO_PROXY;
        okHttpClient6.proxy = proxy9;
        okHttpClient0.proxy = proxy9;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient0.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet13 = okHttpClient12.failedRoutes;
        com.squareup.okhttp.ConnectionPool connectionPool14 = okHttpClient12.getConnectionPool();
        java.net.ResponseCache responseCache15 = okHttpClient12.responseCache;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler17 = okHttpClient16.getCookieHandler();
        boolean boolean18 = okHttpClient16.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator19 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient16.setAuthenticator(okAuthenticator19);
        java.net.Proxy proxy21 = okHttpClient16.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient16.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient23 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier24 = okHttpClient23.hostnameVerifier;
        java.net.ResponseCache responseCache25 = okHttpClient23.getResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient26 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler27 = okHttpClient26.getCookieHandler();
        boolean boolean28 = okHttpClient26.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient26.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool32 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int33 = connectionPool32.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient29.setConnectionPool(connectionPool32);
        javax.net.ssl.HostnameVerifier hostnameVerifier35 = null;
        okHttpClient29.hostnameVerifier = hostnameVerifier35;
        com.squareup.okhttp.ConnectionPool connectionPool37 = okHttpClient29.getConnectionPool();
        okHttpClient23.connectionPool = connectionPool37;
        java.net.CookieHandler cookieHandler39 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient40 = okHttpClient23.setCookieHandler(cookieHandler39);
        com.squareup.okhttp.OkHttpClient okHttpClient41 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector42 = null;
        okHttpClient41.proxySelector = proxySelector42;
        java.net.ProxySelector proxySelector44 = okHttpClient41.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier45 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient46 = okHttpClient41.setHostnameVerifier(hostnameVerifier45);
        java.net.ProxySelector proxySelector47 = okHttpClient41.proxySelector;
        java.net.ResponseCache responseCache48 = okHttpClient41.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet49 = okHttpClient41.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient50 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler51 = okHttpClient50.getCookieHandler();
        boolean boolean52 = okHttpClient50.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient53 = okHttpClient50.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool56 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int57 = connectionPool56.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient58 = okHttpClient53.setConnectionPool(connectionPool56);
        com.squareup.okhttp.OkHttpClient okHttpClient59 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector60 = null;
        okHttpClient59.proxySelector = proxySelector60;
        java.net.ProxySelector proxySelector62 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient63 = okHttpClient59.setProxySelector(proxySelector62);
        java.net.ProxySelector proxySelector64 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient65 = okHttpClient59.setProxySelector(proxySelector64);
        okHttpClient58.proxySelector = proxySelector64;
        javax.net.ssl.HostnameVerifier hostnameVerifier67 = okHttpClient58.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient68 = okHttpClient41.setHostnameVerifier(hostnameVerifier67);
        javax.net.ssl.HostnameVerifier hostnameVerifier69 = okHttpClient68.getHostnameVerifier();
        okHttpClient40.hostnameVerifier = hostnameVerifier69;
        com.squareup.okhttp.OkHttpClient okHttpClient71 = okHttpClient16.setHostnameVerifier(hostnameVerifier69);
        com.squareup.okhttp.OkHttpClient okHttpClient72 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler73 = okHttpClient72.getCookieHandler();
        boolean boolean74 = okHttpClient72.getFollowProtocolRedirects();
        java.net.CookieHandler cookieHandler75 = null;
        okHttpClient72.cookieHandler = cookieHandler75;
        java.net.CookieHandler cookieHandler77 = null;
        okHttpClient72.cookieHandler = cookieHandler77;
        com.squareup.okhttp.OkHttpClient okHttpClient79 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler80 = okHttpClient79.getCookieHandler();
        boolean boolean81 = okHttpClient79.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient82 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler83 = okHttpClient82.getCookieHandler();
        boolean boolean84 = okHttpClient82.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient85 = okHttpClient82.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet86 = okHttpClient85.failedRoutes;
        boolean boolean87 = okHttpClient85.getFollowProtocolRedirects();
        java.net.Proxy proxy88 = java.net.Proxy.NO_PROXY;
        okHttpClient85.proxy = proxy88;
        okHttpClient79.proxy = proxy88;
        com.squareup.okhttp.OkHttpClient okHttpClient91 = okHttpClient79.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet92 = okHttpClient91.failedRoutes;
        okHttpClient72.failedRoutes = routeSet92;
        okHttpClient16.failedRoutes = routeSet92;
        okHttpClient12.failedRoutes = routeSet92;
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(cookieHandler4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(okHttpClient6);
        org.junit.Assert.assertNotNull(routeSet7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(proxy9);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertNotNull(routeSet13);
        org.junit.Assert.assertNotNull(connectionPool14);
        org.junit.Assert.assertNull(responseCache15);
        org.junit.Assert.assertNull(cookieHandler17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNull(proxy21);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNull(hostnameVerifier24);
        org.junit.Assert.assertNull(responseCache25);
        org.junit.Assert.assertNull(cookieHandler27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(okHttpClient29);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertNotNull(connectionPool37);
        org.junit.Assert.assertNotNull(okHttpClient40);
        org.junit.Assert.assertNull(proxySelector44);
        org.junit.Assert.assertNotNull(okHttpClient46);
        org.junit.Assert.assertNull(proxySelector47);
        org.junit.Assert.assertNull(responseCache48);
        org.junit.Assert.assertNotNull(routeSet49);
        org.junit.Assert.assertNull(cookieHandler51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(okHttpClient53);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(okHttpClient58);
        org.junit.Assert.assertNotNull(okHttpClient63);
// flaky:         org.junit.Assert.assertNull(proxySelector64);
        org.junit.Assert.assertNotNull(okHttpClient65);
        org.junit.Assert.assertNotNull(hostnameVerifier67);
        org.junit.Assert.assertNotNull(okHttpClient68);
        org.junit.Assert.assertNotNull(hostnameVerifier69);
        org.junit.Assert.assertNotNull(okHttpClient71);
        org.junit.Assert.assertNull(cookieHandler73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNull(cookieHandler80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNull(cookieHandler83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(okHttpClient85);
        org.junit.Assert.assertNotNull(routeSet86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(proxy88);
        org.junit.Assert.assertNotNull(okHttpClient91);
        org.junit.Assert.assertNotNull(routeSet92);
    }

    @Test
    public void test03123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03123");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setHostnameVerifier(hostnameVerifier4);
        boolean boolean6 = okHttpClient0.getFollowProtocolRedirects();
        java.net.ProxySelector proxySelector7 = okHttpClient0.proxySelector;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector9 = null;
        okHttpClient8.proxySelector = proxySelector9;
        java.net.ProxySelector proxySelector11 = okHttpClient8.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient8.setHostnameVerifier(hostnameVerifier12);
        boolean boolean14 = okHttpClient8.getFollowProtocolRedirects();
        com.squareup.okhttp.ConnectionPool connectionPool17 = new com.squareup.okhttp.ConnectionPool((int) 'a', (long) (byte) -1);
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient8.setConnectionPool(connectionPool17);
        com.squareup.okhttp.OkHttpClient okHttpClient19 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler20 = okHttpClient19.getCookieHandler();
        boolean boolean21 = okHttpClient19.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient19.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier23 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient22.setHostnameVerifier(hostnameVerifier23);
        java.net.ResponseCache responseCache25 = okHttpClient24.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator26 = okHttpClient24.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier27 = okHttpClient24.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory28 = okHttpClient24.getSslSocketFactory();
        okHttpClient8.sslSocketFactory = sSLSocketFactory28;
        okHttpClient0.sslSocketFactory = sSLSocketFactory28;
        java.net.Socket socket31 = sSLSocketFactory28.createSocket();
        java.lang.String[] strArray32 = sSLSocketFactory28.getDefaultCipherSuites();
        java.net.Socket socket33 = sSLSocketFactory28.createSocket();
        com.squareup.okhttp.OkHttpClient okHttpClient34 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector35 = null;
        okHttpClient34.proxySelector = proxySelector35;
        java.net.ProxySelector proxySelector37 = okHttpClient34.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier38 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient34.setHostnameVerifier(hostnameVerifier38);
        boolean boolean40 = okHttpClient34.getFollowProtocolRedirects();
        java.net.ProxySelector proxySelector41 = okHttpClient34.proxySelector;
        com.squareup.okhttp.OkHttpClient okHttpClient42 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector43 = null;
        okHttpClient42.proxySelector = proxySelector43;
        java.net.ProxySelector proxySelector45 = okHttpClient42.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier46 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient47 = okHttpClient42.setHostnameVerifier(hostnameVerifier46);
        boolean boolean48 = okHttpClient42.getFollowProtocolRedirects();
        com.squareup.okhttp.ConnectionPool connectionPool51 = new com.squareup.okhttp.ConnectionPool((int) 'a', (long) (byte) -1);
        com.squareup.okhttp.OkHttpClient okHttpClient52 = okHttpClient42.setConnectionPool(connectionPool51);
        com.squareup.okhttp.OkHttpClient okHttpClient53 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler54 = okHttpClient53.getCookieHandler();
        boolean boolean55 = okHttpClient53.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient56 = okHttpClient53.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier57 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient58 = okHttpClient56.setHostnameVerifier(hostnameVerifier57);
        java.net.ResponseCache responseCache59 = okHttpClient58.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator60 = okHttpClient58.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier61 = okHttpClient58.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory62 = okHttpClient58.getSslSocketFactory();
        okHttpClient42.sslSocketFactory = sSLSocketFactory62;
        okHttpClient34.sslSocketFactory = sSLSocketFactory62;
        java.net.Socket socket65 = sSLSocketFactory62.createSocket();
        java.lang.String[] strArray66 = sSLSocketFactory62.getDefaultCipherSuites();
        java.net.Socket socket67 = sSLSocketFactory62.createSocket();
        java.io.InputStream inputStream68 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket70 = sSLSocketFactory28.createSocket(socket67, inputStream68, true);
            org.junit.Assert.fail("Expected exception of type java.net.SocketException; message: Underlying socket is not connected");
        } catch (java.net.SocketException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(proxySelector7);
        org.junit.Assert.assertNull(proxySelector11);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNull(cookieHandler20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNull(responseCache25);
        org.junit.Assert.assertNotNull(okAuthenticator26);
        org.junit.Assert.assertNull(hostnameVerifier27);
        org.junit.Assert.assertNotNull(sSLSocketFactory28);
        org.junit.Assert.assertNotNull(socket31);
        org.junit.Assert.assertEquals(socket31.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(socket33);
        org.junit.Assert.assertEquals(socket33.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNull(proxySelector37);
        org.junit.Assert.assertNotNull(okHttpClient39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(proxySelector41);
        org.junit.Assert.assertNull(proxySelector45);
        org.junit.Assert.assertNotNull(okHttpClient47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(okHttpClient52);
        org.junit.Assert.assertNull(cookieHandler54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(okHttpClient56);
        org.junit.Assert.assertNotNull(okHttpClient58);
        org.junit.Assert.assertNull(responseCache59);
        org.junit.Assert.assertNotNull(okAuthenticator60);
        org.junit.Assert.assertNull(hostnameVerifier61);
        org.junit.Assert.assertNotNull(sSLSocketFactory62);
        org.junit.Assert.assertNotNull(socket65);
        org.junit.Assert.assertEquals(socket65.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertNotNull(socket67);
        org.junit.Assert.assertEquals(socket67.toString(), "Socket[unconnected]");
    }

    @Test
    public void test03124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03124");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool6 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int7 = connectionPool6.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient3.setConnectionPool(connectionPool6);
        com.squareup.okhttp.OkHttpClient okHttpClient9 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector10 = null;
        okHttpClient9.proxySelector = proxySelector10;
        java.net.ProxySelector proxySelector12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient9.setProxySelector(proxySelector12);
        java.net.ProxySelector proxySelector14 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient9.setProxySelector(proxySelector14);
        okHttpClient8.proxySelector = proxySelector14;
        javax.net.ssl.HostnameVerifier hostnameVerifier17 = okHttpClient8.hostnameVerifier;
        okHttpClient8.followProtocolRedirects = false;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory20 = null;
        okHttpClient8.sslSocketFactory = sSLSocketFactory20;
        java.net.Proxy proxy22 = okHttpClient8.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier23 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient8.setHostnameVerifier(hostnameVerifier23);
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient24.copyWithDefaults();
        java.net.CookieHandler cookieHandler26 = okHttpClient25.cookieHandler;
        com.squareup.okhttp.ConnectionPool connectionPool27 = okHttpClient25.connectionPool;
        com.squareup.okhttp.Connection connection28 = null;
        // The following exception was thrown during execution in test generation
        try {
            connectionPool27.maybeShare(connection28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertNotNull(okHttpClient13);
// flaky:         org.junit.Assert.assertNull(proxySelector14);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNotNull(hostnameVerifier17);
        org.junit.Assert.assertNull(proxy22);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNotNull(okHttpClient25);
        org.junit.Assert.assertNull(cookieHandler26);
        org.junit.Assert.assertNotNull(connectionPool27);
    }

    @Test
    public void test03125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03125");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool6 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int7 = connectionPool6.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient3.setConnectionPool(connectionPool6);
        com.squareup.okhttp.OkHttpClient okHttpClient9 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector10 = null;
        okHttpClient9.proxySelector = proxySelector10;
        java.net.ProxySelector proxySelector12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient9.setProxySelector(proxySelector12);
        java.net.ProxySelector proxySelector14 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient9.setProxySelector(proxySelector14);
        okHttpClient8.proxySelector = proxySelector14;
        okHttpClient8.followProtocolRedirects = true;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient8.setFollowProtocolRedirects(false);
        com.squareup.okhttp.OkAuthenticator okAuthenticator21 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient20.setAuthenticator(okAuthenticator21);
        java.net.URL uRL23 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.HttpURLConnection httpURLConnection24 = okHttpClient20.open(uRL23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertNotNull(okHttpClient13);
// flaky:         org.junit.Assert.assertNull(proxySelector14);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNotNull(okHttpClient22);
    }

    @Test
    public void test03126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03126");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler4 = okHttpClient3.getCookieHandler();
        boolean boolean5 = okHttpClient3.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient3.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet7 = okHttpClient6.failedRoutes;
        boolean boolean8 = okHttpClient6.getFollowProtocolRedirects();
        java.net.Proxy proxy9 = java.net.Proxy.NO_PROXY;
        okHttpClient6.proxy = proxy9;
        okHttpClient0.proxy = proxy9;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient0.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet13 = okHttpClient12.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler15 = okHttpClient14.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray16 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet17 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet17, routeArray16);
        okHttpClient14.failedRoutes = routeSet17;
        java.net.Proxy proxy20 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler22 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient21.setCookieHandler(cookieHandler22);
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient21.setFollowProtocolRedirects(true);
        boolean boolean26 = proxy20.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient14.setProxy(proxy20);
        java.net.Proxy.Type type28 = proxy20.type();
        com.squareup.okhttp.OkHttpClient okHttpClient29 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler30 = okHttpClient29.getCookieHandler();
        java.net.ResponseCache responseCache31 = null;
        okHttpClient29.responseCache = responseCache31;
        boolean boolean33 = okHttpClient29.followProtocolRedirects;
        java.net.CookieHandler cookieHandler34 = okHttpClient29.cookieHandler;
        com.squareup.okhttp.ConnectionPool connectionPool35 = okHttpClient29.getConnectionPool();
        com.squareup.okhttp.OkHttpClient okHttpClient36 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector37 = null;
        okHttpClient36.proxySelector = proxySelector37;
        java.net.ProxySelector proxySelector39 = okHttpClient36.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier40 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient41 = okHttpClient36.setHostnameVerifier(hostnameVerifier40);
        java.net.ProxySelector proxySelector42 = okHttpClient36.proxySelector;
        java.net.ResponseCache responseCache43 = okHttpClient36.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet44 = okHttpClient36.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient45 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler46 = okHttpClient45.getCookieHandler();
        boolean boolean47 = okHttpClient45.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient48 = okHttpClient45.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool51 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int52 = connectionPool51.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient53 = okHttpClient48.setConnectionPool(connectionPool51);
        com.squareup.okhttp.OkHttpClient okHttpClient54 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector55 = null;
        okHttpClient54.proxySelector = proxySelector55;
        java.net.ProxySelector proxySelector57 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient58 = okHttpClient54.setProxySelector(proxySelector57);
        java.net.ProxySelector proxySelector59 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient60 = okHttpClient54.setProxySelector(proxySelector59);
        okHttpClient53.proxySelector = proxySelector59;
        javax.net.ssl.HostnameVerifier hostnameVerifier62 = okHttpClient53.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient63 = okHttpClient36.setHostnameVerifier(hostnameVerifier62);
        okHttpClient29.hostnameVerifier = hostnameVerifier62;
        boolean boolean65 = proxy20.equals((java.lang.Object) hostnameVerifier62);
        com.squareup.okhttp.OkHttpClient okHttpClient66 = okHttpClient12.setProxy(proxy20);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory67 = okHttpClient66.sslSocketFactory;
        java.util.Set<com.squareup.okhttp.Route> routeSet68 = okHttpClient66.failedRoutes;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory69 = okHttpClient66.getSslSocketFactory();
        java.net.InetAddress inetAddress70 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket72 = sSLSocketFactory69.createSocket(inetAddress70, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.net.ConnectException; message: Connection refused (Connection refused)");
        } catch (java.net.ConnectException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(cookieHandler4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(okHttpClient6);
        org.junit.Assert.assertNotNull(routeSet7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(proxy9);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertNotNull(routeSet13);
        org.junit.Assert.assertNull(cookieHandler15);
        org.junit.Assert.assertNotNull(routeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(proxy20);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertNotNull(okHttpClient25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertTrue("'" + type28 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type28.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(cookieHandler30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(cookieHandler34);
        org.junit.Assert.assertNull(connectionPool35);
        org.junit.Assert.assertNull(proxySelector39);
        org.junit.Assert.assertNotNull(okHttpClient41);
        org.junit.Assert.assertNull(proxySelector42);
        org.junit.Assert.assertNull(responseCache43);
        org.junit.Assert.assertNotNull(routeSet44);
        org.junit.Assert.assertNull(cookieHandler46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(okHttpClient48);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(okHttpClient53);
        org.junit.Assert.assertNotNull(okHttpClient58);
// flaky:         org.junit.Assert.assertNull(proxySelector59);
        org.junit.Assert.assertNotNull(okHttpClient60);
        org.junit.Assert.assertNotNull(hostnameVerifier62);
        org.junit.Assert.assertNotNull(okHttpClient63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(okHttpClient66);
        org.junit.Assert.assertNotNull(sSLSocketFactory67);
        org.junit.Assert.assertNotNull(routeSet68);
        org.junit.Assert.assertNotNull(sSLSocketFactory69);
    }

    @Test
    public void test03127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03127");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.copyWithDefaults();
        java.net.CookieHandler cookieHandler6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient0.setCookieHandler(cookieHandler6);
        com.squareup.okhttp.OkAuthenticator okAuthenticator8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient7.setAuthenticator(okAuthenticator8);
        com.squareup.okhttp.OkHttpClient okHttpClient10 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler11 = okHttpClient10.getCookieHandler();
        boolean boolean12 = okHttpClient10.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient10.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool16 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int17 = connectionPool16.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient13.setConnectionPool(connectionPool16);
        com.squareup.okhttp.ConnectionPool connectionPool19 = okHttpClient13.connectionPool;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient7.setConnectionPool(connectionPool19);
        com.squareup.okhttp.OkHttpClient okHttpClient21 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler22 = okHttpClient21.getCookieHandler();
        java.net.ResponseCache responseCache23 = null;
        okHttpClient21.responseCache = responseCache23;
        boolean boolean25 = okHttpClient21.followProtocolRedirects;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory26 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient21.setSSLSocketFactory(sSLSocketFactory26);
        java.net.Proxy proxy28 = okHttpClient27.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient29 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector30 = null;
        okHttpClient29.proxySelector = proxySelector30;
        java.net.ProxySelector proxySelector32 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient29.setProxySelector(proxySelector32);
        java.net.ProxySelector proxySelector34 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient29.setProxySelector(proxySelector34);
        java.net.ProxySelector.setDefault(proxySelector34);
        okHttpClient27.proxySelector = proxySelector34;
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient27.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient39 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler40 = okHttpClient39.getCookieHandler();
        boolean boolean41 = okHttpClient39.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient39.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier43 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient44 = okHttpClient42.setHostnameVerifier(hostnameVerifier43);
        java.net.ResponseCache responseCache45 = okHttpClient44.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator46 = okHttpClient44.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier47 = okHttpClient44.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory48 = okHttpClient44.getSslSocketFactory();
        java.lang.String[] strArray49 = sSLSocketFactory48.getSupportedCipherSuites();
        java.net.Socket socket50 = sSLSocketFactory48.createSocket();
        com.squareup.okhttp.OkHttpClient okHttpClient51 = okHttpClient27.setSSLSocketFactory(sSLSocketFactory48);
        com.squareup.okhttp.OkHttpClient okHttpClient52 = okHttpClient7.setSSLSocketFactory(sSLSocketFactory48);
        java.lang.String[] strArray53 = sSLSocketFactory48.getDefaultCipherSuites();
        java.net.Socket socket54 = sSLSocketFactory48.createSocket();
        java.lang.String[] strArray55 = sSLSocketFactory48.getSupportedCipherSuites();
        java.net.InetAddress inetAddress58 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket60 = sSLSocketFactory48.createSocket("DIRECT", (int) (byte) 1, inetAddress58, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: port out of range:-1");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNotNull(okHttpClient7);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNull(cookieHandler11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNotNull(connectionPool19);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNull(cookieHandler22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNull(proxy28);
        org.junit.Assert.assertNotNull(okHttpClient33);
// flaky:         org.junit.Assert.assertNull(proxySelector34);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNull(cookieHandler40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(okHttpClient42);
        org.junit.Assert.assertNotNull(okHttpClient44);
        org.junit.Assert.assertNull(responseCache45);
        org.junit.Assert.assertNotNull(okAuthenticator46);
        org.junit.Assert.assertNull(hostnameVerifier47);
        org.junit.Assert.assertNotNull(sSLSocketFactory48);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(socket50);
        org.junit.Assert.assertEquals(socket50.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(okHttpClient51);
        org.junit.Assert.assertNotNull(okHttpClient52);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(socket54);
        org.junit.Assert.assertEquals(socket54.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(strArray55);
    }

    @Test
    public void test03128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03128");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setHostnameVerifier(hostnameVerifier4);
        java.net.ProxySelector proxySelector6 = okHttpClient0.proxySelector;
        java.net.ResponseCache responseCache7 = okHttpClient0.getResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler9 = okHttpClient8.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray10 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet11 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet11, routeArray10);
        okHttpClient8.failedRoutes = routeSet11;
        java.net.Proxy proxy14 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient15.setCookieHandler(cookieHandler16);
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient15.setFollowProtocolRedirects(true);
        boolean boolean20 = proxy14.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient8.setProxy(proxy14);
        okHttpClient0.proxy = proxy14;
        com.squareup.okhttp.OkHttpClient okHttpClient23 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler24 = okHttpClient23.getCookieHandler();
        boolean boolean25 = okHttpClient23.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient23.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier27 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient26.setHostnameVerifier(hostnameVerifier27);
        boolean boolean29 = proxy14.equals((java.lang.Object) okHttpClient26);
        java.net.SocketAddress socketAddress30 = proxy14.address();
        java.lang.String str31 = proxy14.toString();
        java.lang.String str32 = proxy14.toString();
        java.lang.String str33 = proxy14.toString();
        java.lang.String str34 = proxy14.toString();
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(proxySelector6);
        org.junit.Assert.assertNull(responseCache7);
        org.junit.Assert.assertNull(cookieHandler9);
        org.junit.Assert.assertNotNull(routeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(proxy14);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNull(cookieHandler24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(socketAddress30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "DIRECT" + "'", str31, "DIRECT");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "DIRECT" + "'", str32, "DIRECT");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "DIRECT" + "'", str33, "DIRECT");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "DIRECT" + "'", str34, "DIRECT");
    }

    @Test
    public void test03129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03129");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient0.connectionPool;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler5 = okHttpClient4.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray6 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet7 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet7, routeArray6);
        okHttpClient4.failedRoutes = routeSet7;
        java.net.Proxy proxy10 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setCookieHandler(cookieHandler12);
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient11.setFollowProtocolRedirects(true);
        boolean boolean16 = proxy10.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient4.setProxy(proxy10);
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler19 = okHttpClient18.getCookieHandler();
        boolean boolean20 = okHttpClient18.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient18.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool24 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int25 = connectionPool24.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient21.setConnectionPool(connectionPool24);
        com.squareup.okhttp.OkHttpClient okHttpClient27 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector28 = null;
        okHttpClient27.proxySelector = proxySelector28;
        java.net.ProxySelector proxySelector30 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient27.setProxySelector(proxySelector30);
        java.net.ProxySelector proxySelector32 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient27.setProxySelector(proxySelector32);
        okHttpClient26.proxySelector = proxySelector32;
        okHttpClient4.proxySelector = proxySelector32;
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient0.setProxySelector(proxySelector32);
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient36.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient38 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector39 = null;
        okHttpClient38.proxySelector = proxySelector39;
        java.net.ProxySelector proxySelector41 = okHttpClient38.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier42 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient43 = okHttpClient38.setHostnameVerifier(hostnameVerifier42);
        java.net.ResponseCache responseCache44 = null;
        okHttpClient38.responseCache = responseCache44;
        java.net.ResponseCache responseCache46 = okHttpClient38.getResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient47 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector48 = null;
        okHttpClient47.proxySelector = proxySelector48;
        java.net.ProxySelector proxySelector50 = okHttpClient47.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier51 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient52 = okHttpClient47.setHostnameVerifier(hostnameVerifier51);
        com.squareup.okhttp.OkHttpClient okHttpClient53 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler54 = okHttpClient53.getCookieHandler();
        boolean boolean55 = okHttpClient53.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient56 = okHttpClient53.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient57 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector58 = null;
        okHttpClient57.proxySelector = proxySelector58;
        java.net.ProxySelector proxySelector60 = okHttpClient57.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier61 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient62 = okHttpClient57.setHostnameVerifier(hostnameVerifier61);
        java.net.ProxySelector proxySelector63 = okHttpClient57.proxySelector;
        java.net.ResponseCache responseCache64 = okHttpClient57.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet65 = okHttpClient57.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient66 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler67 = okHttpClient66.getCookieHandler();
        boolean boolean68 = okHttpClient66.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient69 = okHttpClient66.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool72 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int73 = connectionPool72.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient74 = okHttpClient69.setConnectionPool(connectionPool72);
        com.squareup.okhttp.OkHttpClient okHttpClient75 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector76 = null;
        okHttpClient75.proxySelector = proxySelector76;
        java.net.ProxySelector proxySelector78 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient79 = okHttpClient75.setProxySelector(proxySelector78);
        java.net.ProxySelector proxySelector80 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient81 = okHttpClient75.setProxySelector(proxySelector80);
        okHttpClient74.proxySelector = proxySelector80;
        javax.net.ssl.HostnameVerifier hostnameVerifier83 = okHttpClient74.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient84 = okHttpClient57.setHostnameVerifier(hostnameVerifier83);
        javax.net.ssl.HostnameVerifier hostnameVerifier85 = okHttpClient84.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient86 = okHttpClient53.setHostnameVerifier(hostnameVerifier85);
        javax.net.ssl.HostnameVerifier hostnameVerifier87 = okHttpClient86.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient88 = okHttpClient52.setHostnameVerifier(hostnameVerifier87);
        okHttpClient38.hostnameVerifier = hostnameVerifier87;
        javax.net.ssl.HostnameVerifier hostnameVerifier90 = okHttpClient38.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient91 = okHttpClient37.setHostnameVerifier(hostnameVerifier90);
        boolean boolean92 = okHttpClient91.getFollowProtocolRedirects();
        javax.net.ssl.HostnameVerifier hostnameVerifier93 = okHttpClient91.getHostnameVerifier();
        org.junit.Assert.assertNull(connectionPool3);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertNotNull(routeArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(proxy10);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNull(cookieHandler19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNotNull(okHttpClient31);
// flaky:         org.junit.Assert.assertNull(proxySelector32);
        org.junit.Assert.assertNotNull(okHttpClient33);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNotNull(okHttpClient37);
        org.junit.Assert.assertNull(proxySelector41);
        org.junit.Assert.assertNotNull(okHttpClient43);
        org.junit.Assert.assertNull(responseCache46);
        org.junit.Assert.assertNull(proxySelector50);
        org.junit.Assert.assertNotNull(okHttpClient52);
        org.junit.Assert.assertNull(cookieHandler54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(okHttpClient56);
        org.junit.Assert.assertNull(proxySelector60);
        org.junit.Assert.assertNotNull(okHttpClient62);
        org.junit.Assert.assertNull(proxySelector63);
        org.junit.Assert.assertNull(responseCache64);
        org.junit.Assert.assertNotNull(routeSet65);
        org.junit.Assert.assertNull(cookieHandler67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(okHttpClient69);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertNotNull(okHttpClient74);
        org.junit.Assert.assertNotNull(okHttpClient79);
// flaky:         org.junit.Assert.assertNull(proxySelector80);
        org.junit.Assert.assertNotNull(okHttpClient81);
        org.junit.Assert.assertNotNull(hostnameVerifier83);
        org.junit.Assert.assertNotNull(okHttpClient84);
        org.junit.Assert.assertNotNull(hostnameVerifier85);
        org.junit.Assert.assertNotNull(okHttpClient86);
        org.junit.Assert.assertNotNull(hostnameVerifier87);
        org.junit.Assert.assertNotNull(okHttpClient88);
        org.junit.Assert.assertNotNull(hostnameVerifier90);
        org.junit.Assert.assertNotNull(okHttpClient91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(hostnameVerifier93);
    }

    @Test
    public void test03130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03130");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray2 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet3 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet3, routeArray2);
        okHttpClient0.failedRoutes = routeSet3;
        java.net.Proxy proxy6 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient7.setCookieHandler(cookieHandler8);
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient7.setFollowProtocolRedirects(true);
        boolean boolean12 = proxy6.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient0.setProxy(proxy6);
        com.squareup.okhttp.OkHttpClient okHttpClient14 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector15 = null;
        okHttpClient14.proxySelector = proxySelector15;
        java.net.ProxySelector proxySelector17 = okHttpClient14.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient14.setHostnameVerifier(hostnameVerifier18);
        java.net.ProxySelector proxySelector20 = okHttpClient14.proxySelector;
        java.net.ResponseCache responseCache21 = okHttpClient14.getResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler23 = okHttpClient22.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray24 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet25 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet25, routeArray24);
        okHttpClient22.failedRoutes = routeSet25;
        java.net.Proxy proxy28 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient29 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler30 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient29.setCookieHandler(cookieHandler30);
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient29.setFollowProtocolRedirects(true);
        boolean boolean34 = proxy28.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient22.setProxy(proxy28);
        okHttpClient14.proxy = proxy28;
        com.squareup.okhttp.OkHttpClient okHttpClient37 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler38 = okHttpClient37.getCookieHandler();
        boolean boolean39 = okHttpClient37.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient40 = okHttpClient37.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier41 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient40.setHostnameVerifier(hostnameVerifier41);
        boolean boolean43 = proxy28.equals((java.lang.Object) okHttpClient40);
        com.squareup.okhttp.OkHttpClient okHttpClient44 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector45 = null;
        okHttpClient44.proxySelector = proxySelector45;
        java.net.ProxySelector proxySelector47 = okHttpClient44.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier48 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient49 = okHttpClient44.setHostnameVerifier(hostnameVerifier48);
        java.net.ProxySelector proxySelector50 = okHttpClient44.proxySelector;
        java.net.CookieHandler cookieHandler51 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient52 = okHttpClient44.setCookieHandler(cookieHandler51);
        com.squareup.okhttp.OkAuthenticator okAuthenticator53 = null;
        okHttpClient52.authenticator = okAuthenticator53;
        boolean boolean55 = proxy28.equals((java.lang.Object) okAuthenticator53);
        okHttpClient13.proxy = proxy28;
        java.net.ResponseCache responseCache57 = okHttpClient13.responseCache;
        okHttpClient13.followProtocolRedirects = false;
        com.squareup.okhttp.OkHttpClient okHttpClient60 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler61 = okHttpClient60.getCookieHandler();
        boolean boolean62 = okHttpClient60.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient63 = okHttpClient60.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool66 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int67 = connectionPool66.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient68 = okHttpClient63.setConnectionPool(connectionPool66);
        com.squareup.okhttp.OkHttpClient okHttpClient69 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler70 = okHttpClient69.getCookieHandler();
        boolean boolean71 = okHttpClient69.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient72 = okHttpClient69.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier73 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient74 = okHttpClient72.setHostnameVerifier(hostnameVerifier73);
        java.net.ResponseCache responseCache75 = okHttpClient74.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator76 = okHttpClient74.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier77 = okHttpClient74.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory78 = okHttpClient74.getSslSocketFactory();
        java.lang.String[] strArray79 = sSLSocketFactory78.getSupportedCipherSuites();
        java.lang.String[] strArray80 = sSLSocketFactory78.getDefaultCipherSuites();
        java.lang.String[] strArray81 = sSLSocketFactory78.getDefaultCipherSuites();
        java.lang.String[] strArray82 = sSLSocketFactory78.getDefaultCipherSuites();
        java.lang.String[] strArray83 = sSLSocketFactory78.getSupportedCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient84 = okHttpClient63.setSSLSocketFactory(sSLSocketFactory78);
        okHttpClient13.sslSocketFactory = sSLSocketFactory78;
        java.util.Set<com.squareup.okhttp.Route> routeSet86 = okHttpClient13.failedRoutes;
        com.squareup.okhttp.OkAuthenticator okAuthenticator87 = okHttpClient13.getAuthenticator();
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertNotNull(routeArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(proxy6);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNull(proxySelector17);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNull(proxySelector20);
        org.junit.Assert.assertNull(responseCache21);
        org.junit.Assert.assertNull(cookieHandler23);
        org.junit.Assert.assertNotNull(routeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(proxy28);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNotNull(okHttpClient33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNull(cookieHandler38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(okHttpClient40);
        org.junit.Assert.assertNotNull(okHttpClient42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(proxySelector47);
        org.junit.Assert.assertNotNull(okHttpClient49);
        org.junit.Assert.assertNull(proxySelector50);
        org.junit.Assert.assertNotNull(okHttpClient52);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(responseCache57);
        org.junit.Assert.assertNull(cookieHandler61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(okHttpClient63);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNotNull(okHttpClient68);
        org.junit.Assert.assertNull(cookieHandler70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(okHttpClient72);
        org.junit.Assert.assertNotNull(okHttpClient74);
        org.junit.Assert.assertNull(responseCache75);
        org.junit.Assert.assertNotNull(okAuthenticator76);
        org.junit.Assert.assertNull(hostnameVerifier77);
        org.junit.Assert.assertNotNull(sSLSocketFactory78);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertNotNull(okHttpClient84);
        org.junit.Assert.assertNotNull(routeSet86);
        org.junit.Assert.assertNull(okAuthenticator87);
    }

    @Test
    public void test03131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03131");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setHostnameVerifier(hostnameVerifier4);
        boolean boolean6 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool((int) 'a', (long) (byte) -1);
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient0.setConnectionPool(connectionPool9);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory11 = okHttpClient0.getSslSocketFactory();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache12 = okHttpClient0.okResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler14 = okHttpClient13.getCookieHandler();
        boolean boolean15 = okHttpClient13.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient13.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet17 = okHttpClient16.failedRoutes;
        boolean boolean18 = okHttpClient16.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient19 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler20 = okHttpClient19.getCookieHandler();
        boolean boolean21 = okHttpClient19.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient19.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier23 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient22.setHostnameVerifier(hostnameVerifier23);
        java.net.ResponseCache responseCache25 = okHttpClient24.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator26 = okHttpClient24.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier27 = okHttpClient24.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory28 = okHttpClient24.getSslSocketFactory();
        java.lang.String[] strArray29 = sSLSocketFactory28.getSupportedCipherSuites();
        java.lang.String[] strArray30 = sSLSocketFactory28.getDefaultCipherSuites();
        java.lang.String[] strArray31 = sSLSocketFactory28.getDefaultCipherSuites();
        java.lang.String[] strArray32 = sSLSocketFactory28.getDefaultCipherSuites();
        java.lang.String[] strArray33 = sSLSocketFactory28.getSupportedCipherSuites();
        okHttpClient16.sslSocketFactory = sSLSocketFactory28;
        java.lang.String[] strArray35 = sSLSocketFactory28.getDefaultCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory28);
        com.squareup.okhttp.ConnectionPool connectionPool37 = okHttpClient0.getConnectionPool();
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient0.copyWithDefaults();
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertNull(sSLSocketFactory11);
        org.junit.Assert.assertNull(okResponseCache12);
        org.junit.Assert.assertNull(cookieHandler14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNotNull(routeSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(cookieHandler20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNull(responseCache25);
        org.junit.Assert.assertNotNull(okAuthenticator26);
        org.junit.Assert.assertNull(hostnameVerifier27);
        org.junit.Assert.assertNotNull(sSLSocketFactory28);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNotNull(connectionPool37);
        org.junit.Assert.assertNotNull(okHttpClient38);
    }

    @Test
    public void test03132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03132");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient4 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector5 = null;
        okHttpClient4.proxySelector = proxySelector5;
        java.net.ProxySelector proxySelector7 = okHttpClient4.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient4.setHostnameVerifier(hostnameVerifier8);
        java.net.ProxySelector proxySelector10 = okHttpClient4.proxySelector;
        java.net.ResponseCache responseCache11 = okHttpClient4.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet12 = okHttpClient4.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler14 = okHttpClient13.getCookieHandler();
        boolean boolean15 = okHttpClient13.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient13.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool19 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int20 = connectionPool19.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient16.setConnectionPool(connectionPool19);
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector23 = null;
        okHttpClient22.proxySelector = proxySelector23;
        java.net.ProxySelector proxySelector25 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient22.setProxySelector(proxySelector25);
        java.net.ProxySelector proxySelector27 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient22.setProxySelector(proxySelector27);
        okHttpClient21.proxySelector = proxySelector27;
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = okHttpClient21.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient4.setHostnameVerifier(hostnameVerifier30);
        javax.net.ssl.HostnameVerifier hostnameVerifier32 = okHttpClient31.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient0.setHostnameVerifier(hostnameVerifier32);
        java.net.Proxy proxy34 = okHttpClient33.proxy;
        java.util.Set<com.squareup.okhttp.Route> routeSet35 = okHttpClient33.failedRoutes;
        java.net.ProxySelector proxySelector36 = okHttpClient33.getProxySelector();
        java.net.ResponseCache responseCache37 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient33.setResponseCache(responseCache37);
        java.net.Proxy proxy39 = okHttpClient38.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient40 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler41 = okHttpClient40.getCookieHandler();
        boolean boolean42 = okHttpClient40.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient43 = okHttpClient40.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier44 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient45 = okHttpClient43.setHostnameVerifier(hostnameVerifier44);
        com.squareup.okhttp.OkAuthenticator okAuthenticator46 = okHttpClient45.getAuthenticator();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory47 = okHttpClient45.sslSocketFactory;
        com.squareup.okhttp.OkHttpClient okHttpClient48 = okHttpClient38.setSSLSocketFactory(sSLSocketFactory47);
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache49 = okHttpClient38.okResponseCache();
        com.squareup.okhttp.ConnectionPool connectionPool50 = okHttpClient38.connectionPool;
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertNull(proxySelector7);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNull(proxySelector10);
        org.junit.Assert.assertNull(responseCache11);
        org.junit.Assert.assertNotNull(routeSet12);
        org.junit.Assert.assertNull(cookieHandler14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNotNull(okHttpClient26);
// flaky:         org.junit.Assert.assertNull(proxySelector27);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNotNull(hostnameVerifier30);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNotNull(hostnameVerifier32);
        org.junit.Assert.assertNotNull(okHttpClient33);
        org.junit.Assert.assertNull(proxy34);
        org.junit.Assert.assertNotNull(routeSet35);
        org.junit.Assert.assertNull(proxySelector36);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNull(proxy39);
        org.junit.Assert.assertNull(cookieHandler41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(okHttpClient43);
        org.junit.Assert.assertNotNull(okHttpClient45);
        org.junit.Assert.assertNotNull(okAuthenticator46);
        org.junit.Assert.assertNotNull(sSLSocketFactory47);
        org.junit.Assert.assertNotNull(okHttpClient48);
        org.junit.Assert.assertNull(okResponseCache49);
        org.junit.Assert.assertNull(connectionPool50);
    }

    @Test
    public void test03133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03133");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray2 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet3 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet3, routeArray2);
        okHttpClient0.failedRoutes = routeSet3;
        java.net.Proxy proxy6 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient7.setCookieHandler(cookieHandler8);
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient7.setFollowProtocolRedirects(true);
        boolean boolean12 = proxy6.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient0.setProxy(proxy6);
        java.net.Proxy proxy14 = okHttpClient13.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient13.copyWithDefaults();
        java.net.ResponseCache responseCache16 = okHttpClient13.getResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler18 = okHttpClient17.getCookieHandler();
        boolean boolean19 = okHttpClient17.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator20 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient17.setAuthenticator(okAuthenticator20);
        com.squareup.okhttp.OkAuthenticator okAuthenticator22 = okHttpClient17.authenticator;
        java.net.ResponseCache responseCache23 = okHttpClient17.getResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient24 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector25 = null;
        okHttpClient24.proxySelector = proxySelector25;
        java.net.ProxySelector proxySelector27 = okHttpClient24.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier28 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient24.setHostnameVerifier(hostnameVerifier28);
        boolean boolean30 = okHttpClient24.getFollowProtocolRedirects();
        java.net.ProxySelector proxySelector31 = okHttpClient24.proxySelector;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector33 = null;
        okHttpClient32.proxySelector = proxySelector33;
        java.net.ProxySelector proxySelector35 = okHttpClient32.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier36 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient32.setHostnameVerifier(hostnameVerifier36);
        boolean boolean38 = okHttpClient32.getFollowProtocolRedirects();
        com.squareup.okhttp.ConnectionPool connectionPool41 = new com.squareup.okhttp.ConnectionPool((int) 'a', (long) (byte) -1);
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient32.setConnectionPool(connectionPool41);
        com.squareup.okhttp.OkHttpClient okHttpClient43 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler44 = okHttpClient43.getCookieHandler();
        boolean boolean45 = okHttpClient43.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient46 = okHttpClient43.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier47 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient48 = okHttpClient46.setHostnameVerifier(hostnameVerifier47);
        java.net.ResponseCache responseCache49 = okHttpClient48.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator50 = okHttpClient48.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier51 = okHttpClient48.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory52 = okHttpClient48.getSslSocketFactory();
        okHttpClient32.sslSocketFactory = sSLSocketFactory52;
        okHttpClient24.sslSocketFactory = sSLSocketFactory52;
        com.squareup.okhttp.OkHttpClient okHttpClient55 = okHttpClient17.setSSLSocketFactory(sSLSocketFactory52);
        com.squareup.okhttp.ConnectionPool connectionPool58 = new com.squareup.okhttp.ConnectionPool((int) ' ', (long) (short) 100);
        com.squareup.okhttp.Address address59 = null;
        com.squareup.okhttp.Connection connection60 = connectionPool58.get(address59);
        connectionPool58.evictAll();
        int int62 = connectionPool58.getConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient63 = okHttpClient55.setConnectionPool(connectionPool58);
        okHttpClient13.connectionPool = connectionPool58;
        java.net.URL uRL65 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.HttpURLConnection httpURLConnection66 = okHttpClient13.open(uRL65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertNotNull(routeArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(proxy6);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNotNull(proxy14);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNull(responseCache16);
        org.junit.Assert.assertNull(cookieHandler18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNull(okAuthenticator22);
        org.junit.Assert.assertNull(responseCache23);
        org.junit.Assert.assertNull(proxySelector27);
        org.junit.Assert.assertNotNull(okHttpClient29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(proxySelector31);
        org.junit.Assert.assertNull(proxySelector35);
        org.junit.Assert.assertNotNull(okHttpClient37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(okHttpClient42);
        org.junit.Assert.assertNull(cookieHandler44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(okHttpClient46);
        org.junit.Assert.assertNotNull(okHttpClient48);
        org.junit.Assert.assertNull(responseCache49);
        org.junit.Assert.assertNotNull(okAuthenticator50);
        org.junit.Assert.assertNull(hostnameVerifier51);
        org.junit.Assert.assertNotNull(sSLSocketFactory52);
        org.junit.Assert.assertNotNull(okHttpClient55);
        org.junit.Assert.assertNull(connection60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(okHttpClient63);
    }

    @Test
    public void test03134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03134");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = okHttpClient0.hostnameVerifier;
        java.net.ResponseCache responseCache2 = okHttpClient0.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = okHttpClient0.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler5 = okHttpClient4.getCookieHandler();
        boolean boolean6 = okHttpClient4.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient4.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient7.setHostnameVerifier(hostnameVerifier8);
        java.net.ResponseCache responseCache10 = okHttpClient9.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator11 = okHttpClient9.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient0.setAuthenticator(okAuthenticator11);
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler14 = okHttpClient13.getCookieHandler();
        boolean boolean15 = okHttpClient13.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient13.setAuthenticator(okAuthenticator16);
        java.net.ResponseCache responseCache18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient13.setResponseCache(responseCache18);
        com.squareup.okhttp.ConnectionPool connectionPool22 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool22.evictAll();
        okHttpClient13.connectionPool = connectionPool22;
        connectionPool22.evictAll();
        int int26 = connectionPool22.getSpdyConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient0.setConnectionPool(connectionPool22);
        com.squareup.okhttp.OkHttpClient okHttpClient28 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler29 = okHttpClient28.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray30 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet31 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet31, routeArray30);
        okHttpClient28.failedRoutes = routeSet31;
        java.net.Proxy proxy34 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient35 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler36 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient35.setCookieHandler(cookieHandler36);
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient35.setFollowProtocolRedirects(true);
        boolean boolean40 = proxy34.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient41 = okHttpClient28.setProxy(proxy34);
        java.net.Proxy.Type type42 = proxy34.type();
        com.squareup.okhttp.OkHttpClient okHttpClient43 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler44 = okHttpClient43.getCookieHandler();
        java.net.ResponseCache responseCache45 = null;
        okHttpClient43.responseCache = responseCache45;
        boolean boolean47 = okHttpClient43.followProtocolRedirects;
        java.net.CookieHandler cookieHandler48 = okHttpClient43.cookieHandler;
        com.squareup.okhttp.ConnectionPool connectionPool49 = okHttpClient43.getConnectionPool();
        com.squareup.okhttp.OkHttpClient okHttpClient50 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector51 = null;
        okHttpClient50.proxySelector = proxySelector51;
        java.net.ProxySelector proxySelector53 = okHttpClient50.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier54 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient55 = okHttpClient50.setHostnameVerifier(hostnameVerifier54);
        java.net.ProxySelector proxySelector56 = okHttpClient50.proxySelector;
        java.net.ResponseCache responseCache57 = okHttpClient50.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet58 = okHttpClient50.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient59 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler60 = okHttpClient59.getCookieHandler();
        boolean boolean61 = okHttpClient59.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient62 = okHttpClient59.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool65 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int66 = connectionPool65.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient67 = okHttpClient62.setConnectionPool(connectionPool65);
        com.squareup.okhttp.OkHttpClient okHttpClient68 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector69 = null;
        okHttpClient68.proxySelector = proxySelector69;
        java.net.ProxySelector proxySelector71 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient72 = okHttpClient68.setProxySelector(proxySelector71);
        java.net.ProxySelector proxySelector73 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient74 = okHttpClient68.setProxySelector(proxySelector73);
        okHttpClient67.proxySelector = proxySelector73;
        javax.net.ssl.HostnameVerifier hostnameVerifier76 = okHttpClient67.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient77 = okHttpClient50.setHostnameVerifier(hostnameVerifier76);
        okHttpClient43.hostnameVerifier = hostnameVerifier76;
        boolean boolean79 = proxy34.equals((java.lang.Object) hostnameVerifier76);
        com.squareup.okhttp.OkHttpClient okHttpClient80 = okHttpClient0.setHostnameVerifier(hostnameVerifier76);
        java.net.CookieHandler cookieHandler81 = okHttpClient80.getCookieHandler();
        java.net.ResponseCache responseCache82 = okHttpClient80.getResponseCache();
        java.net.URL uRL83 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.HttpURLConnection httpURLConnection84 = okHttpClient80.open(uRL83);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(hostnameVerifier1);
        org.junit.Assert.assertNull(responseCache2);
        org.junit.Assert.assertNull(okAuthenticator3);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(okHttpClient7);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNull(responseCache10);
        org.junit.Assert.assertNotNull(okAuthenticator11);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertNull(cookieHandler14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNull(cookieHandler29);
        org.junit.Assert.assertNotNull(routeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(proxy34);
        org.junit.Assert.assertNotNull(okHttpClient37);
        org.junit.Assert.assertNotNull(okHttpClient39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(okHttpClient41);
        org.junit.Assert.assertTrue("'" + type42 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type42.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(cookieHandler44);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(cookieHandler48);
        org.junit.Assert.assertNull(connectionPool49);
        org.junit.Assert.assertNull(proxySelector53);
        org.junit.Assert.assertNotNull(okHttpClient55);
        org.junit.Assert.assertNull(proxySelector56);
        org.junit.Assert.assertNull(responseCache57);
        org.junit.Assert.assertNotNull(routeSet58);
        org.junit.Assert.assertNull(cookieHandler60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(okHttpClient62);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(okHttpClient67);
        org.junit.Assert.assertNotNull(okHttpClient72);
// flaky:         org.junit.Assert.assertNull(proxySelector73);
        org.junit.Assert.assertNotNull(okHttpClient74);
        org.junit.Assert.assertNotNull(hostnameVerifier76);
        org.junit.Assert.assertNotNull(okHttpClient77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(okHttpClient80);
        org.junit.Assert.assertNull(cookieHandler81);
        org.junit.Assert.assertNull(responseCache82);
    }

    @Test
    public void test03135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03135");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray2 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet3 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet3, routeArray2);
        okHttpClient0.failedRoutes = routeSet3;
        java.net.Proxy proxy6 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient7.setCookieHandler(cookieHandler8);
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient7.setFollowProtocolRedirects(true);
        boolean boolean12 = proxy6.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient0.setProxy(proxy6);
        com.squareup.okhttp.OkAuthenticator okAuthenticator14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient13.setAuthenticator(okAuthenticator14);
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient15.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector18 = null;
        okHttpClient17.proxySelector = proxySelector18;
        java.net.ProxySelector proxySelector20 = okHttpClient17.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier21 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient17.setHostnameVerifier(hostnameVerifier21);
        boolean boolean23 = okHttpClient17.getFollowProtocolRedirects();
        com.squareup.okhttp.ConnectionPool connectionPool26 = new com.squareup.okhttp.ConnectionPool((int) 'a', (long) (byte) -1);
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient17.setConnectionPool(connectionPool26);
        com.squareup.okhttp.OkHttpClient okHttpClient28 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler29 = okHttpClient28.getCookieHandler();
        boolean boolean30 = okHttpClient28.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient28.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier32 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient31.setHostnameVerifier(hostnameVerifier32);
        java.net.ResponseCache responseCache34 = okHttpClient33.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator35 = okHttpClient33.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier36 = okHttpClient33.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory37 = okHttpClient33.getSslSocketFactory();
        okHttpClient17.sslSocketFactory = sSLSocketFactory37;
        java.net.Socket socket39 = sSLSocketFactory37.createSocket();
        com.squareup.okhttp.OkHttpClient okHttpClient40 = okHttpClient15.setSSLSocketFactory(sSLSocketFactory37);
        java.net.Socket socket41 = sSLSocketFactory37.createSocket();
        java.net.Socket socket42 = sSLSocketFactory37.createSocket();
        java.net.InetAddress inetAddress43 = null;
        java.net.InetAddress inetAddress45 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket47 = sSLSocketFactory37.createSocket(inetAddress43, (int) (byte) -1, inetAddress45, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.net.BindException; message: Permission denied (Bind failed)");
        } catch (java.net.BindException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertNotNull(routeArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(proxy6);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNull(proxySelector20);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNull(cookieHandler29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNotNull(okHttpClient33);
        org.junit.Assert.assertNull(responseCache34);
        org.junit.Assert.assertNotNull(okAuthenticator35);
        org.junit.Assert.assertNull(hostnameVerifier36);
        org.junit.Assert.assertNotNull(sSLSocketFactory37);
        org.junit.Assert.assertNotNull(socket39);
        org.junit.Assert.assertEquals(socket39.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(okHttpClient40);
        org.junit.Assert.assertNotNull(socket41);
        org.junit.Assert.assertEquals(socket41.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(socket42);
        org.junit.Assert.assertEquals(socket42.toString(), "Socket[unconnected]");
    }

    @Test
    public void test03136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03136");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet4 = okHttpClient3.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient3.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector7 = null;
        okHttpClient6.proxySelector = proxySelector7;
        java.net.ProxySelector proxySelector9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient6.setProxySelector(proxySelector9);
        java.net.ProxySelector proxySelector11 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient6.setProxySelector(proxySelector11);
        java.net.ProxySelector.setDefault(proxySelector11);
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient5.setProxySelector(proxySelector11);
        java.util.Set<com.squareup.okhttp.Route> routeSet15 = null;
        okHttpClient5.failedRoutes = routeSet15;
        java.net.Proxy proxy17 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler19 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient18.setCookieHandler(cookieHandler19);
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient18.setFollowProtocolRedirects(true);
        boolean boolean23 = proxy17.equals((java.lang.Object) true);
        java.lang.String str24 = proxy17.toString();
        java.net.Proxy.Type type25 = proxy17.type();
        java.net.SocketAddress socketAddress26 = proxy17.address();
        java.net.SocketAddress socketAddress27 = proxy17.address();
        java.net.SocketAddress socketAddress28 = proxy17.address();
        okHttpClient5.proxy = proxy17;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient5.setFollowProtocolRedirects(false);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory32 = okHttpClient31.sslSocketFactory;
        java.net.InetAddress inetAddress33 = null;
        java.net.InetAddress inetAddress35 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket37 = sSLSocketFactory32.createSocket(inetAddress33, (int) (short) 10, inetAddress35, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.net.BindException; message: Permission denied (Bind failed)");
        } catch (java.net.BindException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertNotNull(routeSet4);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNotNull(okHttpClient10);
// flaky:         org.junit.Assert.assertNull(proxySelector11);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertNotNull(okHttpClient14);
        org.junit.Assert.assertNotNull(proxy17);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "DIRECT" + "'", str24, "DIRECT");
        org.junit.Assert.assertTrue("'" + type25 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type25.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress26);
        org.junit.Assert.assertNull(socketAddress27);
        org.junit.Assert.assertNull(socketAddress28);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNotNull(sSLSocketFactory32);
    }

    @Test
    public void test03137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03137");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray2 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet3 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet3, routeArray2);
        okHttpClient0.failedRoutes = routeSet3;
        java.net.Proxy proxy6 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient7.setCookieHandler(cookieHandler8);
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient7.setFollowProtocolRedirects(true);
        boolean boolean12 = proxy6.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient0.setProxy(proxy6);
        java.net.Proxy proxy14 = okHttpClient13.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool15 = okHttpClient13.getConnectionPool();
        java.net.Proxy proxy16 = okHttpClient13.getProxy();
        java.net.CookieHandler cookieHandler17 = okHttpClient13.cookieHandler;
        java.net.Proxy proxy18 = okHttpClient13.proxy;
        com.squareup.okhttp.OkAuthenticator okAuthenticator19 = okHttpClient13.getAuthenticator();
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertNotNull(routeArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(proxy6);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNotNull(proxy14);
        org.junit.Assert.assertNull(connectionPool15);
        org.junit.Assert.assertNotNull(proxy16);
        org.junit.Assert.assertNull(cookieHandler17);
        org.junit.Assert.assertNotNull(proxy18);
        org.junit.Assert.assertNull(okAuthenticator19);
    }

    @Test
    public void test03138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03138");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray2 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet3 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet3, routeArray2);
        okHttpClient0.failedRoutes = routeSet3;
        java.net.Proxy proxy6 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient7.setCookieHandler(cookieHandler8);
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient7.setFollowProtocolRedirects(true);
        boolean boolean12 = proxy6.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient0.setProxy(proxy6);
        com.squareup.okhttp.OkAuthenticator okAuthenticator14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient13.setAuthenticator(okAuthenticator14);
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient15.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient15.setFollowProtocolRedirects(true);
        java.net.Proxy proxy19 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress20 = proxy19.address();
        com.squareup.okhttp.OkHttpClient okHttpClient21 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector22 = null;
        okHttpClient21.proxySelector = proxySelector22;
        com.squareup.okhttp.ConnectionPool connectionPool24 = okHttpClient21.connectionPool;
        com.squareup.okhttp.ConnectionPool connectionPool25 = okHttpClient21.getConnectionPool();
        boolean boolean26 = proxy19.equals((java.lang.Object) okHttpClient21);
        com.squareup.okhttp.OkHttpClient okHttpClient27 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler28 = okHttpClient27.getCookieHandler();
        boolean boolean29 = okHttpClient27.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient30 = okHttpClient27.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool33 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int34 = connectionPool33.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient30.setConnectionPool(connectionPool33);
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient21.setConnectionPool(connectionPool33);
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient36.setFollowProtocolRedirects(false);
        com.squareup.okhttp.ConnectionPool connectionPool41 = new com.squareup.okhttp.ConnectionPool((-1), (long) 0);
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient36.setConnectionPool(connectionPool41);
        okHttpClient15.connectionPool = connectionPool41;
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertNotNull(routeArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(proxy6);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNotNull(proxy19);
        org.junit.Assert.assertNull(socketAddress20);
        org.junit.Assert.assertNull(connectionPool24);
        org.junit.Assert.assertNull(connectionPool25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(cookieHandler28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(okHttpClient30);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNotNull(okHttpClient42);
    }

    @Test
    public void test03139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03139");
        com.squareup.okhttp.ConnectionPool connectionPool2 = new com.squareup.okhttp.ConnectionPool((int) 'a', (long) '4');
        connectionPool2.evictAll();
        int int4 = connectionPool2.getHttpConnectionCount();
        int int5 = connectionPool2.getSpdyConnectionCount();
        connectionPool2.evictAll();
        int int7 = connectionPool2.getConnectionCount();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }

    @Test
    public void test03140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03140");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient4 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient4.hostnameVerifier;
        java.net.ResponseCache responseCache6 = okHttpClient4.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator7 = okHttpClient4.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler9 = okHttpClient8.getCookieHandler();
        boolean boolean10 = okHttpClient8.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient8.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setHostnameVerifier(hostnameVerifier12);
        java.net.ResponseCache responseCache14 = okHttpClient13.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator15 = okHttpClient13.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient4.setAuthenticator(okAuthenticator15);
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler18 = okHttpClient17.getCookieHandler();
        boolean boolean19 = okHttpClient17.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator20 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient17.setAuthenticator(okAuthenticator20);
        java.net.ResponseCache responseCache22 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient17.setResponseCache(responseCache22);
        com.squareup.okhttp.ConnectionPool connectionPool26 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool26.evictAll();
        okHttpClient17.connectionPool = connectionPool26;
        connectionPool26.evictAll();
        int int30 = connectionPool26.getSpdyConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient4.setConnectionPool(connectionPool26);
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache32 = okHttpClient4.okResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient33 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler34 = okHttpClient33.getCookieHandler();
        boolean boolean35 = okHttpClient33.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient33.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool39 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int40 = connectionPool39.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient41 = okHttpClient36.setConnectionPool(connectionPool39);
        com.squareup.okhttp.OkHttpClient okHttpClient42 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector43 = null;
        okHttpClient42.proxySelector = proxySelector43;
        java.net.ProxySelector proxySelector45 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient46 = okHttpClient42.setProxySelector(proxySelector45);
        java.net.ProxySelector proxySelector47 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient48 = okHttpClient42.setProxySelector(proxySelector47);
        okHttpClient41.proxySelector = proxySelector47;
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient4.setProxySelector(proxySelector47);
        com.squareup.okhttp.OkHttpClient okHttpClient51 = okHttpClient3.setProxySelector(proxySelector47);
        com.squareup.okhttp.OkHttpClient okHttpClient52 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector53 = null;
        okHttpClient52.proxySelector = proxySelector53;
        java.net.ProxySelector proxySelector55 = okHttpClient52.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier56 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient57 = okHttpClient52.setHostnameVerifier(hostnameVerifier56);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory58 = okHttpClient57.sslSocketFactory;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory59 = null;
        okHttpClient57.sslSocketFactory = sSLSocketFactory59;
        java.util.Set<com.squareup.okhttp.Route> routeSet61 = okHttpClient57.failedRoutes;
        okHttpClient51.failedRoutes = routeSet61;
        java.net.Proxy proxy63 = okHttpClient51.proxy;
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(responseCache6);
        org.junit.Assert.assertNull(okAuthenticator7);
        org.junit.Assert.assertNull(cookieHandler9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNull(responseCache14);
        org.junit.Assert.assertNotNull(okAuthenticator15);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNull(cookieHandler18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNull(okResponseCache32);
        org.junit.Assert.assertNull(cookieHandler34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(okHttpClient41);
        org.junit.Assert.assertNotNull(okHttpClient46);
// flaky:         org.junit.Assert.assertNull(proxySelector47);
        org.junit.Assert.assertNotNull(okHttpClient48);
        org.junit.Assert.assertNotNull(okHttpClient50);
        org.junit.Assert.assertNotNull(okHttpClient51);
        org.junit.Assert.assertNull(proxySelector55);
        org.junit.Assert.assertNotNull(okHttpClient57);
        org.junit.Assert.assertNull(sSLSocketFactory58);
        org.junit.Assert.assertNotNull(routeSet61);
        org.junit.Assert.assertNull(proxy63);
    }

    @Test
    public void test03141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03141");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setHostnameVerifier(hostnameVerifier4);
        java.net.ResponseCache responseCache6 = okHttpClient5.responseCache;
        java.net.CookieHandler cookieHandler7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient5.setCookieHandler(cookieHandler7);
        java.net.ResponseCache responseCache9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient8.setResponseCache(responseCache9);
        boolean boolean11 = okHttpClient8.getFollowProtocolRedirects();
        com.squareup.okhttp.ConnectionPool connectionPool12 = okHttpClient8.getConnectionPool();
        com.squareup.okhttp.ConnectionPool connectionPool15 = new com.squareup.okhttp.ConnectionPool(100, 0L);
        int int16 = connectionPool15.getSpdyConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient8.setConnectionPool(connectionPool15);
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient17.copyWithDefaults();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache19 = okHttpClient17.okResponseCache();
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(responseCache6);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(connectionPool12);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNull(okResponseCache19);
    }

    @Test
    public void test03142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03142");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = okHttpClient0.hostnameVerifier;
        java.net.ResponseCache responseCache2 = okHttpClient0.getResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler4 = okHttpClient3.getCookieHandler();
        boolean boolean5 = okHttpClient3.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient3.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int10 = connectionPool9.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient6.setConnectionPool(connectionPool9);
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = null;
        okHttpClient6.hostnameVerifier = hostnameVerifier12;
        com.squareup.okhttp.ConnectionPool connectionPool14 = okHttpClient6.getConnectionPool();
        okHttpClient0.connectionPool = connectionPool14;
        java.net.CookieHandler cookieHandler16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient0.setCookieHandler(cookieHandler16);
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector19 = null;
        okHttpClient18.proxySelector = proxySelector19;
        java.net.ProxySelector proxySelector21 = okHttpClient18.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier22 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient18.setHostnameVerifier(hostnameVerifier22);
        java.net.ProxySelector proxySelector24 = okHttpClient18.proxySelector;
        java.net.ResponseCache responseCache25 = okHttpClient18.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet26 = okHttpClient18.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler28 = okHttpClient27.getCookieHandler();
        boolean boolean29 = okHttpClient27.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient30 = okHttpClient27.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool33 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int34 = connectionPool33.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient30.setConnectionPool(connectionPool33);
        com.squareup.okhttp.OkHttpClient okHttpClient36 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector37 = null;
        okHttpClient36.proxySelector = proxySelector37;
        java.net.ProxySelector proxySelector39 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient40 = okHttpClient36.setProxySelector(proxySelector39);
        java.net.ProxySelector proxySelector41 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient36.setProxySelector(proxySelector41);
        okHttpClient35.proxySelector = proxySelector41;
        javax.net.ssl.HostnameVerifier hostnameVerifier44 = okHttpClient35.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient45 = okHttpClient18.setHostnameVerifier(hostnameVerifier44);
        javax.net.ssl.HostnameVerifier hostnameVerifier46 = okHttpClient45.getHostnameVerifier();
        okHttpClient17.hostnameVerifier = hostnameVerifier46;
        boolean boolean48 = okHttpClient17.followProtocolRedirects;
        boolean boolean49 = okHttpClient17.getFollowProtocolRedirects();
        org.junit.Assert.assertNull(hostnameVerifier1);
        org.junit.Assert.assertNull(responseCache2);
        org.junit.Assert.assertNull(cookieHandler4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(okHttpClient6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(connectionPool14);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNull(proxySelector21);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertNull(proxySelector24);
        org.junit.Assert.assertNull(responseCache25);
        org.junit.Assert.assertNotNull(routeSet26);
        org.junit.Assert.assertNull(cookieHandler28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(okHttpClient30);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNotNull(okHttpClient40);
// flaky:         org.junit.Assert.assertNull(proxySelector41);
        org.junit.Assert.assertNotNull(okHttpClient42);
        org.junit.Assert.assertNotNull(hostnameVerifier44);
        org.junit.Assert.assertNotNull(okHttpClient45);
        org.junit.Assert.assertNotNull(hostnameVerifier46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
    }

    @Test
    public void test03143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03143");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier6 = okHttpClient0.hostnameVerifier;
        java.net.ProxySelector proxySelector7 = java.net.ProxySelector.getDefault();
        okHttpClient0.proxySelector = proxySelector7;
        okHttpClient0.followProtocolRedirects = true;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler12 = okHttpClient11.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray13 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet14 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet14, routeArray13);
        okHttpClient11.failedRoutes = routeSet14;
        java.net.Proxy proxy17 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler19 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient18.setCookieHandler(cookieHandler19);
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient18.setFollowProtocolRedirects(true);
        boolean boolean23 = proxy17.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient11.setProxy(proxy17);
        java.lang.String str25 = proxy17.toString();
        com.squareup.okhttp.OkHttpClient okHttpClient26 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler27 = okHttpClient26.getCookieHandler();
        boolean boolean28 = okHttpClient26.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator29 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient30 = okHttpClient26.setAuthenticator(okAuthenticator29);
        java.net.ResponseCache responseCache31 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient26.setResponseCache(responseCache31);
        com.squareup.okhttp.ConnectionPool connectionPool35 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool35.evictAll();
        okHttpClient26.connectionPool = connectionPool35;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory38 = okHttpClient26.sslSocketFactory;
        com.squareup.okhttp.ConnectionPool connectionPool39 = okHttpClient26.getConnectionPool();
        boolean boolean40 = proxy17.equals((java.lang.Object) okHttpClient26);
        com.squareup.okhttp.OkHttpClient okHttpClient41 = okHttpClient0.setProxy(proxy17);
        java.lang.String str42 = proxy17.toString();
        java.net.Proxy.Type type43 = proxy17.type();
        java.net.Proxy.Type type44 = proxy17.type();
        java.net.SocketAddress socketAddress45 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Proxy proxy46 = new java.net.Proxy(type44, socketAddress45);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: type DIRECT is not compatible with address null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(hostnameVerifier6);
// flaky:         org.junit.Assert.assertNull(proxySelector7);
        org.junit.Assert.assertNull(cookieHandler12);
        org.junit.Assert.assertNotNull(routeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(proxy17);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "DIRECT" + "'", str25, "DIRECT");
        org.junit.Assert.assertNull(cookieHandler27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(okHttpClient30);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertNull(sSLSocketFactory38);
        org.junit.Assert.assertNotNull(connectionPool39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(okHttpClient41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "DIRECT" + "'", str42, "DIRECT");
        org.junit.Assert.assertTrue("'" + type43 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type43.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertTrue("'" + type44 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type44.equals(java.net.Proxy.Type.DIRECT));
    }

    @Test
    public void test03144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03144");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setHostnameVerifier(hostnameVerifier4);
        java.net.ProxySelector proxySelector6 = okHttpClient0.proxySelector;
        java.net.ResponseCache responseCache7 = okHttpClient0.getResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler9 = okHttpClient8.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray10 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet11 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet11, routeArray10);
        okHttpClient8.failedRoutes = routeSet11;
        java.net.Proxy proxy14 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient15.setCookieHandler(cookieHandler16);
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient15.setFollowProtocolRedirects(true);
        boolean boolean20 = proxy14.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient8.setProxy(proxy14);
        okHttpClient0.proxy = proxy14;
        com.squareup.okhttp.OkHttpClient okHttpClient23 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler24 = okHttpClient23.getCookieHandler();
        boolean boolean25 = okHttpClient23.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient23.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier27 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient26.setHostnameVerifier(hostnameVerifier27);
        boolean boolean29 = proxy14.equals((java.lang.Object) okHttpClient26);
        java.lang.String str30 = proxy14.toString();
        java.net.SocketAddress socketAddress31 = proxy14.address();
        java.net.Proxy.Type type32 = proxy14.type();
        java.net.SocketAddress socketAddress33 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Proxy proxy34 = new java.net.Proxy(type32, socketAddress33);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: type DIRECT is not compatible with address null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(proxySelector6);
        org.junit.Assert.assertNull(responseCache7);
        org.junit.Assert.assertNull(cookieHandler9);
        org.junit.Assert.assertNotNull(routeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(proxy14);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNull(cookieHandler24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "DIRECT" + "'", str30, "DIRECT");
        org.junit.Assert.assertNull(socketAddress31);
        org.junit.Assert.assertTrue("'" + type32 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type32.equals(java.net.Proxy.Type.DIRECT));
    }

    @Test
    public void test03145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03145");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setHostnameVerifier(hostnameVerifier4);
        java.net.ProxySelector proxySelector6 = okHttpClient0.proxySelector;
        java.net.ResponseCache responseCache7 = okHttpClient0.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet8 = okHttpClient0.failedRoutes;
        com.squareup.okhttp.ConnectionPool connectionPool11 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool11.evictAll();
        com.squareup.okhttp.Address address13 = null;
        com.squareup.okhttp.Connection connection14 = connectionPool11.get(address13);
        okHttpClient0.connectionPool = connectionPool11;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient0.setFollowProtocolRedirects(true);
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient0.copyWithDefaults();
        java.net.ResponseCache responseCache19 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient0.setResponseCache(responseCache19);
        com.squareup.okhttp.OkHttpClient okHttpClient21 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector22 = null;
        okHttpClient21.proxySelector = proxySelector22;
        java.net.ProxySelector proxySelector24 = okHttpClient21.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier25 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient21.setHostnameVerifier(hostnameVerifier25);
        java.net.ProxySelector proxySelector27 = okHttpClient21.proxySelector;
        java.net.ResponseCache responseCache28 = okHttpClient21.getResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient29 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler30 = okHttpClient29.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray31 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet32 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet32, routeArray31);
        okHttpClient29.failedRoutes = routeSet32;
        java.net.Proxy proxy35 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient36 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler37 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient36.setCookieHandler(cookieHandler37);
        com.squareup.okhttp.OkHttpClient okHttpClient40 = okHttpClient36.setFollowProtocolRedirects(true);
        boolean boolean41 = proxy35.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient29.setProxy(proxy35);
        okHttpClient21.proxy = proxy35;
        com.squareup.okhttp.OkHttpClient okHttpClient44 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler45 = okHttpClient44.getCookieHandler();
        boolean boolean46 = okHttpClient44.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient47 = okHttpClient44.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier48 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient49 = okHttpClient47.setHostnameVerifier(hostnameVerifier48);
        boolean boolean50 = proxy35.equals((java.lang.Object) okHttpClient47);
        java.net.SocketAddress socketAddress51 = proxy35.address();
        com.squareup.okhttp.OkHttpClient okHttpClient52 = okHttpClient20.setProxy(proxy35);
        java.net.CookieHandler cookieHandler53 = null;
        okHttpClient20.cookieHandler = cookieHandler53;
        java.net.URL uRL55 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.HttpURLConnection httpURLConnection56 = okHttpClient20.open(uRL55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(proxySelector6);
        org.junit.Assert.assertNull(responseCache7);
        org.junit.Assert.assertNotNull(routeSet8);
        org.junit.Assert.assertNull(connection14);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNull(proxySelector24);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNull(proxySelector27);
        org.junit.Assert.assertNull(responseCache28);
        org.junit.Assert.assertNull(cookieHandler30);
        org.junit.Assert.assertNotNull(routeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(proxy35);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNotNull(okHttpClient40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(okHttpClient42);
        org.junit.Assert.assertNull(cookieHandler45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(okHttpClient47);
        org.junit.Assert.assertNotNull(okHttpClient49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(socketAddress51);
        org.junit.Assert.assertNotNull(okHttpClient52);
    }

    @Test
    public void test03146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03146");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        java.net.Proxy proxy5 = okHttpClient0.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = okHttpClient7.hostnameVerifier;
        java.net.ResponseCache responseCache9 = okHttpClient7.getResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient10 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler11 = okHttpClient10.getCookieHandler();
        boolean boolean12 = okHttpClient10.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient10.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool16 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int17 = connectionPool16.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient13.setConnectionPool(connectionPool16);
        javax.net.ssl.HostnameVerifier hostnameVerifier19 = null;
        okHttpClient13.hostnameVerifier = hostnameVerifier19;
        com.squareup.okhttp.ConnectionPool connectionPool21 = okHttpClient13.getConnectionPool();
        okHttpClient7.connectionPool = connectionPool21;
        java.net.CookieHandler cookieHandler23 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient7.setCookieHandler(cookieHandler23);
        com.squareup.okhttp.OkHttpClient okHttpClient25 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector26 = null;
        okHttpClient25.proxySelector = proxySelector26;
        java.net.ProxySelector proxySelector28 = okHttpClient25.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier29 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient30 = okHttpClient25.setHostnameVerifier(hostnameVerifier29);
        java.net.ProxySelector proxySelector31 = okHttpClient25.proxySelector;
        java.net.ResponseCache responseCache32 = okHttpClient25.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet33 = okHttpClient25.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient34 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler35 = okHttpClient34.getCookieHandler();
        boolean boolean36 = okHttpClient34.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient34.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool40 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int41 = connectionPool40.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient37.setConnectionPool(connectionPool40);
        com.squareup.okhttp.OkHttpClient okHttpClient43 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector44 = null;
        okHttpClient43.proxySelector = proxySelector44;
        java.net.ProxySelector proxySelector46 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient47 = okHttpClient43.setProxySelector(proxySelector46);
        java.net.ProxySelector proxySelector48 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient49 = okHttpClient43.setProxySelector(proxySelector48);
        okHttpClient42.proxySelector = proxySelector48;
        javax.net.ssl.HostnameVerifier hostnameVerifier51 = okHttpClient42.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient52 = okHttpClient25.setHostnameVerifier(hostnameVerifier51);
        javax.net.ssl.HostnameVerifier hostnameVerifier53 = okHttpClient52.getHostnameVerifier();
        okHttpClient24.hostnameVerifier = hostnameVerifier53;
        com.squareup.okhttp.OkHttpClient okHttpClient55 = okHttpClient0.setHostnameVerifier(hostnameVerifier53);
        java.net.Proxy proxy56 = okHttpClient55.getProxy();
        java.net.ProxySelector proxySelector57 = okHttpClient55.getProxySelector();
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(proxy5);
        org.junit.Assert.assertNotNull(okHttpClient6);
        org.junit.Assert.assertNull(hostnameVerifier8);
        org.junit.Assert.assertNull(responseCache9);
        org.junit.Assert.assertNull(cookieHandler11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNotNull(connectionPool21);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNull(proxySelector28);
        org.junit.Assert.assertNotNull(okHttpClient30);
        org.junit.Assert.assertNull(proxySelector31);
        org.junit.Assert.assertNull(responseCache32);
        org.junit.Assert.assertNotNull(routeSet33);
        org.junit.Assert.assertNull(cookieHandler35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(okHttpClient37);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(okHttpClient42);
        org.junit.Assert.assertNotNull(okHttpClient47);
// flaky:         org.junit.Assert.assertNull(proxySelector48);
        org.junit.Assert.assertNotNull(okHttpClient49);
        org.junit.Assert.assertNotNull(hostnameVerifier51);
        org.junit.Assert.assertNotNull(okHttpClient52);
        org.junit.Assert.assertNotNull(hostnameVerifier53);
        org.junit.Assert.assertNotNull(okHttpClient55);
        org.junit.Assert.assertNull(proxy56);
        org.junit.Assert.assertNull(proxySelector57);
    }

    @Test
    public void test03147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03147");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet4 = okHttpClient3.failedRoutes;
        boolean boolean5 = okHttpClient3.getFollowProtocolRedirects();
        java.net.Proxy proxy6 = java.net.Proxy.NO_PROXY;
        okHttpClient3.proxy = proxy6;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler9 = okHttpClient8.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray10 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet11 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet11, routeArray10);
        okHttpClient8.failedRoutes = routeSet11;
        java.net.Proxy proxy14 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient15.setCookieHandler(cookieHandler16);
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient15.setFollowProtocolRedirects(true);
        boolean boolean20 = proxy14.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient8.setProxy(proxy14);
        java.net.SocketAddress socketAddress22 = proxy14.address();
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient3.setProxy(proxy14);
        java.net.CookieHandler cookieHandler24 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient3.setCookieHandler(cookieHandler24);
        java.net.ResponseCache responseCache26 = okHttpClient25.getResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient27 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler28 = okHttpClient27.getCookieHandler();
        boolean boolean29 = okHttpClient27.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient30 = okHttpClient27.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool33 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int34 = connectionPool33.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient30.setConnectionPool(connectionPool33);
        com.squareup.okhttp.ConnectionPool connectionPool36 = okHttpClient30.connectionPool;
        java.net.ResponseCache responseCache37 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient30.setResponseCache(responseCache37);
        java.net.ResponseCache responseCache39 = okHttpClient30.responseCache;
        java.net.CookieHandler cookieHandler40 = null;
        okHttpClient30.cookieHandler = cookieHandler40;
        java.net.ResponseCache responseCache42 = okHttpClient30.getResponseCache();
        javax.net.ssl.HostnameVerifier hostnameVerifier43 = okHttpClient30.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient44 = okHttpClient25.setHostnameVerifier(hostnameVerifier43);
        com.squareup.okhttp.OkHttpClient okHttpClient45 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector46 = null;
        okHttpClient45.proxySelector = proxySelector46;
        java.net.ProxySelector proxySelector48 = okHttpClient45.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier49 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient45.setHostnameVerifier(hostnameVerifier49);
        java.net.ResponseCache responseCache51 = okHttpClient50.responseCache;
        java.net.CookieHandler cookieHandler52 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient53 = okHttpClient50.setCookieHandler(cookieHandler52);
        java.net.ResponseCache responseCache54 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient55 = okHttpClient50.setResponseCache(responseCache54);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory56 = okHttpClient50.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient57 = okHttpClient50.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient58 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler59 = okHttpClient58.getCookieHandler();
        boolean boolean60 = okHttpClient58.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient61 = okHttpClient58.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet62 = okHttpClient61.failedRoutes;
        boolean boolean63 = okHttpClient61.getFollowProtocolRedirects();
        java.net.Proxy proxy64 = java.net.Proxy.NO_PROXY;
        okHttpClient61.proxy = proxy64;
        com.squareup.okhttp.OkHttpClient okHttpClient66 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler67 = okHttpClient66.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray68 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet69 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet69, routeArray68);
        okHttpClient66.failedRoutes = routeSet69;
        java.net.Proxy proxy72 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient73 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler74 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient75 = okHttpClient73.setCookieHandler(cookieHandler74);
        com.squareup.okhttp.OkHttpClient okHttpClient77 = okHttpClient73.setFollowProtocolRedirects(true);
        boolean boolean78 = proxy72.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient79 = okHttpClient66.setProxy(proxy72);
        java.net.SocketAddress socketAddress80 = proxy72.address();
        com.squareup.okhttp.OkHttpClient okHttpClient81 = okHttpClient61.setProxy(proxy72);
        com.squareup.okhttp.OkHttpClient okHttpClient83 = okHttpClient61.setFollowProtocolRedirects(false);
        javax.net.ssl.HostnameVerifier hostnameVerifier84 = okHttpClient83.getHostnameVerifier();
        okHttpClient57.hostnameVerifier = hostnameVerifier84;
        okHttpClient25.hostnameVerifier = hostnameVerifier84;
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertNotNull(routeSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(proxy6);
        org.junit.Assert.assertNull(cookieHandler9);
        org.junit.Assert.assertNotNull(routeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(proxy14);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNull(socketAddress22);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertNotNull(okHttpClient25);
        org.junit.Assert.assertNull(responseCache26);
        org.junit.Assert.assertNull(cookieHandler28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(okHttpClient30);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNotNull(connectionPool36);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNull(responseCache39);
        org.junit.Assert.assertNull(responseCache42);
        org.junit.Assert.assertNotNull(hostnameVerifier43);
        org.junit.Assert.assertNotNull(okHttpClient44);
        org.junit.Assert.assertNull(proxySelector48);
        org.junit.Assert.assertNotNull(okHttpClient50);
        org.junit.Assert.assertNull(responseCache51);
        org.junit.Assert.assertNotNull(okHttpClient53);
        org.junit.Assert.assertNotNull(okHttpClient55);
        org.junit.Assert.assertNull(sSLSocketFactory56);
        org.junit.Assert.assertNotNull(okHttpClient57);
        org.junit.Assert.assertNull(cookieHandler59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(okHttpClient61);
        org.junit.Assert.assertNotNull(routeSet62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(proxy64);
        org.junit.Assert.assertNull(cookieHandler67);
        org.junit.Assert.assertNotNull(routeArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(proxy72);
        org.junit.Assert.assertNotNull(okHttpClient75);
        org.junit.Assert.assertNotNull(okHttpClient77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(okHttpClient79);
        org.junit.Assert.assertNull(socketAddress80);
        org.junit.Assert.assertNotNull(okHttpClient81);
        org.junit.Assert.assertNotNull(okHttpClient83);
        org.junit.Assert.assertNotNull(hostnameVerifier84);
    }

    @Test
    public void test03148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03148");
        com.squareup.okhttp.ConnectionPool connectionPool2 = new com.squareup.okhttp.ConnectionPool((int) '#', (long) (-1));
        com.squareup.okhttp.Connection connection3 = null;
        // The following exception was thrown during execution in test generation
        try {
            connectionPool2.maybeShare(connection3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test03149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03149");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        java.net.ResponseCache responseCache2 = null;
        okHttpClient0.responseCache = responseCache2;
        boolean boolean4 = okHttpClient0.followProtocolRedirects;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory5);
        java.net.Proxy proxy7 = okHttpClient6.getProxy();
        boolean boolean8 = okHttpClient6.followProtocolRedirects;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory9 = okHttpClient6.sslSocketFactory;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient6.setFollowProtocolRedirects(true);
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient6.copyWithDefaults();
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(okHttpClient6);
        org.junit.Assert.assertNull(proxy7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(sSLSocketFactory9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(okHttpClient12);
    }

    @Test
    public void test03150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03150");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setHostnameVerifier(hostnameVerifier4);
        java.net.ResponseCache responseCache6 = okHttpClient5.responseCache;
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool((int) '4', 100L);
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient5.setConnectionPool(connectionPool9);
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler12 = okHttpClient11.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray13 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet14 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet14, routeArray13);
        okHttpClient11.failedRoutes = routeSet14;
        java.net.Proxy proxy17 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler19 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient18.setCookieHandler(cookieHandler19);
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient18.setFollowProtocolRedirects(true);
        boolean boolean23 = proxy17.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient11.setProxy(proxy17);
        java.net.Proxy.Type type25 = proxy17.type();
        com.squareup.okhttp.OkHttpClient okHttpClient26 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler27 = okHttpClient26.getCookieHandler();
        java.net.ResponseCache responseCache28 = null;
        okHttpClient26.responseCache = responseCache28;
        boolean boolean30 = okHttpClient26.followProtocolRedirects;
        java.net.CookieHandler cookieHandler31 = okHttpClient26.cookieHandler;
        com.squareup.okhttp.ConnectionPool connectionPool32 = okHttpClient26.getConnectionPool();
        com.squareup.okhttp.OkHttpClient okHttpClient33 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector34 = null;
        okHttpClient33.proxySelector = proxySelector34;
        java.net.ProxySelector proxySelector36 = okHttpClient33.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier37 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient33.setHostnameVerifier(hostnameVerifier37);
        java.net.ProxySelector proxySelector39 = okHttpClient33.proxySelector;
        java.net.ResponseCache responseCache40 = okHttpClient33.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet41 = okHttpClient33.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient42 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler43 = okHttpClient42.getCookieHandler();
        boolean boolean44 = okHttpClient42.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient45 = okHttpClient42.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool48 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int49 = connectionPool48.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient45.setConnectionPool(connectionPool48);
        com.squareup.okhttp.OkHttpClient okHttpClient51 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector52 = null;
        okHttpClient51.proxySelector = proxySelector52;
        java.net.ProxySelector proxySelector54 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient55 = okHttpClient51.setProxySelector(proxySelector54);
        java.net.ProxySelector proxySelector56 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient57 = okHttpClient51.setProxySelector(proxySelector56);
        okHttpClient50.proxySelector = proxySelector56;
        javax.net.ssl.HostnameVerifier hostnameVerifier59 = okHttpClient50.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient60 = okHttpClient33.setHostnameVerifier(hostnameVerifier59);
        okHttpClient26.hostnameVerifier = hostnameVerifier59;
        boolean boolean62 = proxy17.equals((java.lang.Object) hostnameVerifier59);
        com.squareup.okhttp.OkHttpClient okHttpClient63 = okHttpClient10.setHostnameVerifier(hostnameVerifier59);
        com.squareup.okhttp.OkHttpClient okHttpClient64 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler65 = okHttpClient64.getCookieHandler();
        boolean boolean66 = okHttpClient64.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient67 = okHttpClient64.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier68 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient69 = okHttpClient67.setHostnameVerifier(hostnameVerifier68);
        java.net.ResponseCache responseCache70 = okHttpClient69.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator71 = okHttpClient69.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier72 = okHttpClient69.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory73 = okHttpClient69.getSslSocketFactory();
        java.lang.String[] strArray74 = sSLSocketFactory73.getSupportedCipherSuites();
        java.lang.String[] strArray75 = sSLSocketFactory73.getDefaultCipherSuites();
        java.lang.String[] strArray76 = sSLSocketFactory73.getDefaultCipherSuites();
        java.net.Socket socket77 = sSLSocketFactory73.createSocket();
        okHttpClient10.sslSocketFactory = sSLSocketFactory73;
        java.net.CookieHandler cookieHandler79 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient80 = okHttpClient10.setCookieHandler(cookieHandler79);
        java.net.Proxy proxy81 = okHttpClient80.proxy;
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(responseCache6);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertNull(cookieHandler12);
        org.junit.Assert.assertNotNull(routeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(proxy17);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertTrue("'" + type25 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type25.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(cookieHandler27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(cookieHandler31);
        org.junit.Assert.assertNull(connectionPool32);
        org.junit.Assert.assertNull(proxySelector36);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNull(proxySelector39);
        org.junit.Assert.assertNull(responseCache40);
        org.junit.Assert.assertNotNull(routeSet41);
        org.junit.Assert.assertNull(cookieHandler43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(okHttpClient45);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(okHttpClient50);
        org.junit.Assert.assertNotNull(okHttpClient55);
// flaky:         org.junit.Assert.assertNull(proxySelector56);
        org.junit.Assert.assertNotNull(okHttpClient57);
        org.junit.Assert.assertNotNull(hostnameVerifier59);
        org.junit.Assert.assertNotNull(okHttpClient60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(okHttpClient63);
        org.junit.Assert.assertNull(cookieHandler65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(okHttpClient67);
        org.junit.Assert.assertNotNull(okHttpClient69);
        org.junit.Assert.assertNull(responseCache70);
        org.junit.Assert.assertNotNull(okAuthenticator71);
        org.junit.Assert.assertNull(hostnameVerifier72);
        org.junit.Assert.assertNotNull(sSLSocketFactory73);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertNotNull(socket77);
        org.junit.Assert.assertEquals(socket77.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(okHttpClient80);
        org.junit.Assert.assertNull(proxy81);
    }

    @Test
    public void test03151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03151");
        com.squareup.okhttp.ConnectionPool connectionPool2 = new com.squareup.okhttp.ConnectionPool((int) (short) 100, (long) ' ');
        com.squareup.okhttp.Connection connection3 = null;
        // The following exception was thrown during execution in test generation
        try {
            connectionPool2.maybeShare(connection3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test03152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03152");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = okHttpClient0.hostnameVerifier;
        java.net.ResponseCache responseCache2 = okHttpClient0.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = okHttpClient0.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler5 = okHttpClient4.getCookieHandler();
        boolean boolean6 = okHttpClient4.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient4.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient7.setHostnameVerifier(hostnameVerifier8);
        java.net.ResponseCache responseCache10 = okHttpClient9.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator11 = okHttpClient9.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient0.setAuthenticator(okAuthenticator11);
        java.net.ResponseCache responseCache13 = okHttpClient12.getResponseCache();
        com.squareup.okhttp.ConnectionPool connectionPool16 = new com.squareup.okhttp.ConnectionPool((int) 'a', (long) '4');
        okHttpClient12.connectionPool = connectionPool16;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient12.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient19 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler20 = okHttpClient19.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray21 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet22 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet22, routeArray21);
        okHttpClient19.failedRoutes = routeSet22;
        java.net.Proxy proxy25 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler27 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient26.setCookieHandler(cookieHandler27);
        com.squareup.okhttp.OkHttpClient okHttpClient30 = okHttpClient26.setFollowProtocolRedirects(true);
        boolean boolean31 = proxy25.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient19.setProxy(proxy25);
        com.squareup.okhttp.OkHttpClient okHttpClient33 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler34 = okHttpClient33.getCookieHandler();
        boolean boolean35 = okHttpClient33.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient36 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler37 = okHttpClient36.getCookieHandler();
        boolean boolean38 = okHttpClient36.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient36.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet40 = okHttpClient39.failedRoutes;
        boolean boolean41 = okHttpClient39.getFollowProtocolRedirects();
        java.net.Proxy proxy42 = java.net.Proxy.NO_PROXY;
        okHttpClient39.proxy = proxy42;
        okHttpClient33.proxy = proxy42;
        okHttpClient19.proxy = proxy42;
        com.squareup.okhttp.OkAuthenticator okAuthenticator46 = okHttpClient19.getAuthenticator();
        java.net.Proxy proxy47 = okHttpClient19.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient48 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector49 = null;
        okHttpClient48.proxySelector = proxySelector49;
        java.net.ProxySelector proxySelector51 = okHttpClient48.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier52 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient53 = okHttpClient48.setHostnameVerifier(hostnameVerifier52);
        boolean boolean54 = okHttpClient48.getFollowProtocolRedirects();
        com.squareup.okhttp.ConnectionPool connectionPool57 = new com.squareup.okhttp.ConnectionPool((int) 'a', (long) (byte) -1);
        com.squareup.okhttp.OkHttpClient okHttpClient58 = okHttpClient48.setConnectionPool(connectionPool57);
        com.squareup.okhttp.OkAuthenticator okAuthenticator59 = okHttpClient48.getAuthenticator();
        com.squareup.okhttp.OkHttpClient okHttpClient60 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler61 = okHttpClient60.getCookieHandler();
        boolean boolean62 = okHttpClient60.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator63 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient64 = okHttpClient60.setAuthenticator(okAuthenticator63);
        com.squareup.okhttp.OkHttpClient okHttpClient65 = okHttpClient60.copyWithDefaults();
        java.net.CookieHandler cookieHandler66 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient67 = okHttpClient60.setCookieHandler(cookieHandler66);
        com.squareup.okhttp.OkAuthenticator okAuthenticator68 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient69 = okHttpClient67.setAuthenticator(okAuthenticator68);
        com.squareup.okhttp.OkHttpClient okHttpClient70 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler71 = okHttpClient70.getCookieHandler();
        boolean boolean72 = okHttpClient70.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient73 = okHttpClient70.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool76 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int77 = connectionPool76.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient78 = okHttpClient73.setConnectionPool(connectionPool76);
        com.squareup.okhttp.ConnectionPool connectionPool79 = okHttpClient73.connectionPool;
        com.squareup.okhttp.OkHttpClient okHttpClient80 = okHttpClient67.setConnectionPool(connectionPool79);
        com.squareup.okhttp.OkHttpClient okHttpClient81 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler82 = okHttpClient81.getCookieHandler();
        boolean boolean83 = okHttpClient81.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient84 = okHttpClient81.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier85 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient86 = okHttpClient84.setHostnameVerifier(hostnameVerifier85);
        java.net.ResponseCache responseCache87 = okHttpClient86.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator88 = okHttpClient86.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient89 = okHttpClient67.setAuthenticator(okAuthenticator88);
        com.squareup.okhttp.OkHttpClient okHttpClient90 = okHttpClient48.setAuthenticator(okAuthenticator88);
        boolean boolean91 = proxy47.equals((java.lang.Object) okHttpClient48);
        okHttpClient12.proxy = proxy47;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory93 = okHttpClient12.getSslSocketFactory();
        com.squareup.okhttp.ConnectionPool connectionPool94 = okHttpClient12.getConnectionPool();
        org.junit.Assert.assertNull(hostnameVerifier1);
        org.junit.Assert.assertNull(responseCache2);
        org.junit.Assert.assertNull(okAuthenticator3);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(okHttpClient7);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNull(responseCache10);
        org.junit.Assert.assertNotNull(okAuthenticator11);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertNull(responseCache13);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNull(cookieHandler20);
        org.junit.Assert.assertNotNull(routeArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(proxy25);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNotNull(okHttpClient30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertNull(cookieHandler34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(cookieHandler37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(okHttpClient39);
        org.junit.Assert.assertNotNull(routeSet40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(proxy42);
        org.junit.Assert.assertNull(okAuthenticator46);
        org.junit.Assert.assertNotNull(proxy47);
        org.junit.Assert.assertNull(proxySelector51);
        org.junit.Assert.assertNotNull(okHttpClient53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(okHttpClient58);
        org.junit.Assert.assertNull(okAuthenticator59);
        org.junit.Assert.assertNull(cookieHandler61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(okHttpClient64);
        org.junit.Assert.assertNotNull(okHttpClient65);
        org.junit.Assert.assertNotNull(okHttpClient67);
        org.junit.Assert.assertNotNull(okHttpClient69);
        org.junit.Assert.assertNull(cookieHandler71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(okHttpClient73);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertNotNull(okHttpClient78);
        org.junit.Assert.assertNotNull(connectionPool79);
        org.junit.Assert.assertNotNull(okHttpClient80);
        org.junit.Assert.assertNull(cookieHandler82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(okHttpClient84);
        org.junit.Assert.assertNotNull(okHttpClient86);
        org.junit.Assert.assertNull(responseCache87);
        org.junit.Assert.assertNotNull(okAuthenticator88);
        org.junit.Assert.assertNotNull(okHttpClient89);
        org.junit.Assert.assertNotNull(okHttpClient90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNull(sSLSocketFactory93);
        org.junit.Assert.assertNotNull(connectionPool94);
    }

    @Test
    public void test03153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03153");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool6 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int7 = connectionPool6.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient3.setConnectionPool(connectionPool6);
        com.squareup.okhttp.OkHttpClient okHttpClient9 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler10 = okHttpClient9.getCookieHandler();
        boolean boolean11 = okHttpClient9.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient9.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool15 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int16 = connectionPool15.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient12.setConnectionPool(connectionPool15);
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector19 = null;
        okHttpClient18.proxySelector = proxySelector19;
        java.net.ProxySelector proxySelector21 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient18.setProxySelector(proxySelector21);
        java.net.ProxySelector proxySelector23 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient18.setProxySelector(proxySelector23);
        okHttpClient17.proxySelector = proxySelector23;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient3.setProxySelector(proxySelector23);
        java.net.CookieHandler cookieHandler27 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient26.setCookieHandler(cookieHandler27);
        com.squareup.okhttp.OkHttpClient okHttpClient29 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler30 = okHttpClient29.getCookieHandler();
        boolean boolean31 = okHttpClient29.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator32 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient29.setAuthenticator(okAuthenticator32);
        java.net.ResponseCache responseCache34 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient29.setResponseCache(responseCache34);
        com.squareup.okhttp.ConnectionPool connectionPool38 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool38.evictAll();
        okHttpClient29.connectionPool = connectionPool38;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory41 = okHttpClient29.sslSocketFactory;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory42 = null;
        okHttpClient29.sslSocketFactory = sSLSocketFactory42;
        java.net.ProxySelector proxySelector44 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient45 = okHttpClient29.setProxySelector(proxySelector44);
        com.squareup.okhttp.OkHttpClient okHttpClient46 = okHttpClient28.setProxySelector(proxySelector44);
        com.squareup.okhttp.OkAuthenticator okAuthenticator47 = okHttpClient46.getAuthenticator();
        java.net.ResponseCache responseCache48 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient49 = okHttpClient46.setResponseCache(responseCache48);
        com.squareup.okhttp.OkHttpClient okHttpClient50 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector51 = null;
        okHttpClient50.proxySelector = proxySelector51;
        java.net.ResponseCache responseCache53 = okHttpClient50.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory54 = okHttpClient50.getSslSocketFactory();
        java.util.Set<com.squareup.okhttp.Route> routeSet55 = okHttpClient50.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient56 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler57 = okHttpClient56.getCookieHandler();
        boolean boolean58 = okHttpClient56.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient59 = okHttpClient56.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool62 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int63 = connectionPool62.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient64 = okHttpClient59.setConnectionPool(connectionPool62);
        com.squareup.okhttp.ConnectionPool connectionPool65 = okHttpClient59.connectionPool;
        java.net.ResponseCache responseCache66 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient67 = okHttpClient59.setResponseCache(responseCache66);
        java.net.ResponseCache responseCache68 = okHttpClient59.responseCache;
        com.squareup.okhttp.OkAuthenticator okAuthenticator69 = okHttpClient59.authenticator;
        okHttpClient50.authenticator = okAuthenticator69;
        okHttpClient46.authenticator = okAuthenticator69;
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertNull(cookieHandler10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNotNull(okHttpClient22);
// flaky:         org.junit.Assert.assertNull(proxySelector23);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNull(cookieHandler30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(okHttpClient33);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNull(sSLSocketFactory41);
// flaky:         org.junit.Assert.assertNull(proxySelector44);
        org.junit.Assert.assertNotNull(okHttpClient45);
        org.junit.Assert.assertNotNull(okHttpClient46);
        org.junit.Assert.assertNotNull(okAuthenticator47);
        org.junit.Assert.assertNotNull(okHttpClient49);
        org.junit.Assert.assertNull(responseCache53);
        org.junit.Assert.assertNull(sSLSocketFactory54);
        org.junit.Assert.assertNotNull(routeSet55);
        org.junit.Assert.assertNull(cookieHandler57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(okHttpClient59);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(okHttpClient64);
        org.junit.Assert.assertNotNull(connectionPool65);
        org.junit.Assert.assertNotNull(okHttpClient67);
        org.junit.Assert.assertNull(responseCache68);
        org.junit.Assert.assertNotNull(okAuthenticator69);
    }

    @Test
    public void test03154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03154");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        java.net.ResponseCache responseCache5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient0.setResponseCache(responseCache5);
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool9.evictAll();
        okHttpClient0.connectionPool = connectionPool9;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory12 = okHttpClient0.sslSocketFactory;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory13 = null;
        okHttpClient0.sslSocketFactory = sSLSocketFactory13;
        java.net.ProxySelector proxySelector15 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient0.setProxySelector(proxySelector15);
        java.net.CookieHandler cookieHandler17 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient0.setCookieHandler(cookieHandler17);
        com.squareup.okhttp.OkHttpClient okHttpClient19 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler20 = okHttpClient19.getCookieHandler();
        boolean boolean21 = okHttpClient19.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient19.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier23 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient22.setHostnameVerifier(hostnameVerifier23);
        java.net.ResponseCache responseCache25 = okHttpClient24.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator26 = okHttpClient24.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier27 = okHttpClient24.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory28 = okHttpClient24.getSslSocketFactory();
        java.lang.String[] strArray29 = sSLSocketFactory28.getSupportedCipherSuites();
        java.lang.String[] strArray30 = sSLSocketFactory28.getDefaultCipherSuites();
        java.lang.String[] strArray31 = sSLSocketFactory28.getDefaultCipherSuites();
        java.lang.String[] strArray32 = sSLSocketFactory28.getDefaultCipherSuites();
        java.lang.String[] strArray33 = sSLSocketFactory28.getSupportedCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient18.setSSLSocketFactory(sSLSocketFactory28);
        java.lang.String[] strArray35 = sSLSocketFactory28.getDefaultCipherSuites();
        java.lang.String[] strArray36 = sSLSocketFactory28.getSupportedCipherSuites();
        java.net.InetAddress inetAddress39 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket41 = sSLSocketFactory28.createSocket("hi!", (int) (short) 1, inetAddress39, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: port out of range:-1");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient6);
        org.junit.Assert.assertNull(sSLSocketFactory12);
// flaky:         org.junit.Assert.assertNull(proxySelector15);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNull(cookieHandler20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNull(responseCache25);
        org.junit.Assert.assertNotNull(okAuthenticator26);
        org.junit.Assert.assertNull(hostnameVerifier27);
        org.junit.Assert.assertNotNull(sSLSocketFactory28);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strArray36);
    }

    @Test
    public void test03155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03155");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setHostnameVerifier(hostnameVerifier4);
        java.net.ResponseCache responseCache6 = okHttpClient5.responseCache;
        java.net.CookieHandler cookieHandler7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient5.setCookieHandler(cookieHandler7);
        boolean boolean9 = okHttpClient5.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator10 = okHttpClient5.authenticator;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache11 = okHttpClient5.okResponseCache();
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(responseCache6);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(okAuthenticator10);
        org.junit.Assert.assertNull(okResponseCache11);
    }

    @Test
    public void test03156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03156");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        java.net.ResponseCache responseCache5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient0.setResponseCache(responseCache5);
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool9.evictAll();
        okHttpClient0.connectionPool = connectionPool9;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory12 = okHttpClient0.sslSocketFactory;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory13 = null;
        okHttpClient0.sslSocketFactory = sSLSocketFactory13;
        java.net.ProxySelector proxySelector15 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient0.setProxySelector(proxySelector15);
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler18 = okHttpClient17.getCookieHandler();
        java.net.ResponseCache responseCache19 = null;
        okHttpClient17.responseCache = responseCache19;
        boolean boolean21 = okHttpClient17.followProtocolRedirects;
        java.net.CookieHandler cookieHandler22 = okHttpClient17.cookieHandler;
        com.squareup.okhttp.ConnectionPool connectionPool23 = okHttpClient17.getConnectionPool();
        com.squareup.okhttp.OkHttpClient okHttpClient24 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector25 = null;
        okHttpClient24.proxySelector = proxySelector25;
        java.net.ProxySelector proxySelector27 = okHttpClient24.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier28 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient24.setHostnameVerifier(hostnameVerifier28);
        java.net.ProxySelector proxySelector30 = okHttpClient24.proxySelector;
        java.net.ResponseCache responseCache31 = okHttpClient24.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet32 = okHttpClient24.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient33 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler34 = okHttpClient33.getCookieHandler();
        boolean boolean35 = okHttpClient33.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient33.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool39 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int40 = connectionPool39.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient41 = okHttpClient36.setConnectionPool(connectionPool39);
        com.squareup.okhttp.OkHttpClient okHttpClient42 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector43 = null;
        okHttpClient42.proxySelector = proxySelector43;
        java.net.ProxySelector proxySelector45 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient46 = okHttpClient42.setProxySelector(proxySelector45);
        java.net.ProxySelector proxySelector47 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient48 = okHttpClient42.setProxySelector(proxySelector47);
        okHttpClient41.proxySelector = proxySelector47;
        javax.net.ssl.HostnameVerifier hostnameVerifier50 = okHttpClient41.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient51 = okHttpClient24.setHostnameVerifier(hostnameVerifier50);
        okHttpClient17.hostnameVerifier = hostnameVerifier50;
        com.squareup.okhttp.OkHttpClient okHttpClient53 = okHttpClient0.setHostnameVerifier(hostnameVerifier50);
        com.squareup.okhttp.OkHttpClient okHttpClient54 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler55 = okHttpClient54.getCookieHandler();
        boolean boolean56 = okHttpClient54.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator57 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient58 = okHttpClient54.setAuthenticator(okAuthenticator57);
        com.squareup.okhttp.OkHttpClient okHttpClient59 = okHttpClient54.copyWithDefaults();
        java.net.CookieHandler cookieHandler60 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient61 = okHttpClient54.setCookieHandler(cookieHandler60);
        com.squareup.okhttp.OkAuthenticator okAuthenticator62 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient63 = okHttpClient61.setAuthenticator(okAuthenticator62);
        com.squareup.okhttp.OkHttpClient okHttpClient64 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector65 = null;
        okHttpClient64.proxySelector = proxySelector65;
        java.net.ProxySelector proxySelector67 = okHttpClient64.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier68 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient69 = okHttpClient64.setHostnameVerifier(hostnameVerifier68);
        java.net.ProxySelector proxySelector70 = okHttpClient64.proxySelector;
        java.net.ResponseCache responseCache71 = okHttpClient64.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet72 = okHttpClient64.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient73 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler74 = okHttpClient73.getCookieHandler();
        boolean boolean75 = okHttpClient73.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient76 = okHttpClient73.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool79 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int80 = connectionPool79.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient81 = okHttpClient76.setConnectionPool(connectionPool79);
        com.squareup.okhttp.OkHttpClient okHttpClient82 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector83 = null;
        okHttpClient82.proxySelector = proxySelector83;
        java.net.ProxySelector proxySelector85 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient86 = okHttpClient82.setProxySelector(proxySelector85);
        java.net.ProxySelector proxySelector87 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient88 = okHttpClient82.setProxySelector(proxySelector87);
        okHttpClient81.proxySelector = proxySelector87;
        javax.net.ssl.HostnameVerifier hostnameVerifier90 = okHttpClient81.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient91 = okHttpClient64.setHostnameVerifier(hostnameVerifier90);
        javax.net.ssl.HostnameVerifier hostnameVerifier92 = okHttpClient91.getHostnameVerifier();
        okHttpClient63.hostnameVerifier = hostnameVerifier92;
        com.squareup.okhttp.OkHttpClient okHttpClient94 = okHttpClient53.setHostnameVerifier(hostnameVerifier92);
        java.net.Proxy proxy95 = okHttpClient94.proxy;
        java.net.CookieHandler cookieHandler96 = null;
        okHttpClient94.cookieHandler = cookieHandler96;
        java.net.Proxy proxy98 = okHttpClient94.proxy;
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient6);
        org.junit.Assert.assertNull(sSLSocketFactory12);
// flaky:         org.junit.Assert.assertNull(proxySelector15);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNull(cookieHandler18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(cookieHandler22);
        org.junit.Assert.assertNull(connectionPool23);
        org.junit.Assert.assertNull(proxySelector27);
        org.junit.Assert.assertNotNull(okHttpClient29);
        org.junit.Assert.assertNull(proxySelector30);
        org.junit.Assert.assertNull(responseCache31);
        org.junit.Assert.assertNotNull(routeSet32);
        org.junit.Assert.assertNull(cookieHandler34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(okHttpClient41);
        org.junit.Assert.assertNotNull(okHttpClient46);
// flaky:         org.junit.Assert.assertNull(proxySelector47);
        org.junit.Assert.assertNotNull(okHttpClient48);
        org.junit.Assert.assertNotNull(hostnameVerifier50);
        org.junit.Assert.assertNotNull(okHttpClient51);
        org.junit.Assert.assertNotNull(okHttpClient53);
        org.junit.Assert.assertNull(cookieHandler55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(okHttpClient58);
        org.junit.Assert.assertNotNull(okHttpClient59);
        org.junit.Assert.assertNotNull(okHttpClient61);
        org.junit.Assert.assertNotNull(okHttpClient63);
        org.junit.Assert.assertNull(proxySelector67);
        org.junit.Assert.assertNotNull(okHttpClient69);
        org.junit.Assert.assertNull(proxySelector70);
        org.junit.Assert.assertNull(responseCache71);
        org.junit.Assert.assertNotNull(routeSet72);
        org.junit.Assert.assertNull(cookieHandler74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(okHttpClient76);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertNotNull(okHttpClient81);
        org.junit.Assert.assertNotNull(okHttpClient86);
// flaky:         org.junit.Assert.assertNull(proxySelector87);
        org.junit.Assert.assertNotNull(okHttpClient88);
        org.junit.Assert.assertNotNull(hostnameVerifier90);
        org.junit.Assert.assertNotNull(okHttpClient91);
        org.junit.Assert.assertNotNull(hostnameVerifier92);
        org.junit.Assert.assertNotNull(okHttpClient94);
        org.junit.Assert.assertNull(proxy95);
        org.junit.Assert.assertNull(proxy98);
    }

    @Test
    public void test03157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03157");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setHostnameVerifier(hostnameVerifier4);
        java.net.ProxySelector proxySelector6 = java.net.ProxySelector.getDefault();
        okHttpClient0.proxySelector = proxySelector6;
        java.net.CookieHandler cookieHandler8 = null;
        okHttpClient0.cookieHandler = cookieHandler8;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler11 = okHttpClient10.getCookieHandler();
        boolean boolean12 = okHttpClient10.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient10.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient13.setHostnameVerifier(hostnameVerifier14);
        java.net.ResponseCache responseCache16 = okHttpClient15.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator17 = okHttpClient15.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = okHttpClient15.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory19 = okHttpClient15.getSslSocketFactory();
        java.lang.String[] strArray20 = sSLSocketFactory19.getSupportedCipherSuites();
        java.lang.String[] strArray21 = sSLSocketFactory19.getDefaultCipherSuites();
        okHttpClient0.sslSocketFactory = sSLSocketFactory19;
        java.lang.String[] strArray23 = sSLSocketFactory19.getSupportedCipherSuites();
        java.net.Socket socket24 = sSLSocketFactory19.createSocket();
        com.squareup.okhttp.OkHttpClient okHttpClient25 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector26 = null;
        okHttpClient25.proxySelector = proxySelector26;
        java.net.ProxySelector proxySelector28 = okHttpClient25.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier29 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient30 = okHttpClient25.setHostnameVerifier(hostnameVerifier29);
        boolean boolean31 = okHttpClient25.getFollowProtocolRedirects();
        com.squareup.okhttp.ConnectionPool connectionPool34 = new com.squareup.okhttp.ConnectionPool((int) 'a', (long) (byte) -1);
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient25.setConnectionPool(connectionPool34);
        com.squareup.okhttp.OkHttpClient okHttpClient36 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector37 = null;
        okHttpClient36.proxySelector = proxySelector37;
        java.net.ProxySelector proxySelector39 = okHttpClient36.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier40 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient41 = okHttpClient36.setHostnameVerifier(hostnameVerifier40);
        boolean boolean42 = okHttpClient36.getFollowProtocolRedirects();
        com.squareup.okhttp.ConnectionPool connectionPool45 = new com.squareup.okhttp.ConnectionPool((int) 'a', (long) (byte) -1);
        com.squareup.okhttp.OkHttpClient okHttpClient46 = okHttpClient36.setConnectionPool(connectionPool45);
        com.squareup.okhttp.OkHttpClient okHttpClient47 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler48 = okHttpClient47.getCookieHandler();
        boolean boolean49 = okHttpClient47.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient47.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier51 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient52 = okHttpClient50.setHostnameVerifier(hostnameVerifier51);
        java.net.ResponseCache responseCache53 = okHttpClient52.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator54 = okHttpClient52.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier55 = okHttpClient52.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory56 = okHttpClient52.getSslSocketFactory();
        okHttpClient36.sslSocketFactory = sSLSocketFactory56;
        java.net.Socket socket58 = sSLSocketFactory56.createSocket();
        okHttpClient25.sslSocketFactory = sSLSocketFactory56;
        java.lang.String[] strArray60 = sSLSocketFactory56.getSupportedCipherSuites();
        java.net.Socket socket61 = sSLSocketFactory56.createSocket();
        java.io.InputStream inputStream62 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket64 = sSLSocketFactory19.createSocket(socket61, inputStream62, false);
            org.junit.Assert.fail("Expected exception of type java.net.SocketException; message: Underlying socket is not connected");
        } catch (java.net.SocketException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNotNull(okHttpClient5);
// flaky:         org.junit.Assert.assertNull(proxySelector6);
        org.junit.Assert.assertNull(cookieHandler11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNull(responseCache16);
        org.junit.Assert.assertNotNull(okAuthenticator17);
        org.junit.Assert.assertNull(hostnameVerifier18);
        org.junit.Assert.assertNotNull(sSLSocketFactory19);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(socket24);
        org.junit.Assert.assertEquals(socket24.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNull(proxySelector28);
        org.junit.Assert.assertNotNull(okHttpClient30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNull(proxySelector39);
        org.junit.Assert.assertNotNull(okHttpClient41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(okHttpClient46);
        org.junit.Assert.assertNull(cookieHandler48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(okHttpClient50);
        org.junit.Assert.assertNotNull(okHttpClient52);
        org.junit.Assert.assertNull(responseCache53);
        org.junit.Assert.assertNotNull(okAuthenticator54);
        org.junit.Assert.assertNull(hostnameVerifier55);
        org.junit.Assert.assertNotNull(sSLSocketFactory56);
        org.junit.Assert.assertNotNull(socket58);
        org.junit.Assert.assertEquals(socket58.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(socket61);
        org.junit.Assert.assertEquals(socket61.toString(), "Socket[unconnected]");
    }

    @Test
    public void test03158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03158");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient4.hostnameVerifier;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory6 = okHttpClient4.sslSocketFactory;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler8 = okHttpClient7.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray9 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet10 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet10, routeArray9);
        okHttpClient7.failedRoutes = routeSet10;
        java.net.Proxy proxy13 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient14.setCookieHandler(cookieHandler15);
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient14.setFollowProtocolRedirects(true);
        boolean boolean19 = proxy13.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient7.setProxy(proxy13);
        com.squareup.okhttp.OkAuthenticator okAuthenticator21 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient20.setAuthenticator(okAuthenticator21);
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient22.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient22.setFollowProtocolRedirects(true);
        com.squareup.okhttp.OkHttpClient okHttpClient26 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler27 = okHttpClient26.getCookieHandler();
        boolean boolean28 = okHttpClient26.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient26.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet30 = okHttpClient29.failedRoutes;
        boolean boolean31 = okHttpClient29.getFollowProtocolRedirects();
        java.net.Proxy proxy32 = java.net.Proxy.NO_PROXY;
        okHttpClient29.proxy = proxy32;
        java.net.Proxy.Type type34 = proxy32.type();
        okHttpClient25.proxy = proxy32;
        java.net.Proxy.Type type36 = proxy32.type();
        com.squareup.okhttp.OkHttpClient okHttpClient37 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector38 = null;
        okHttpClient37.proxySelector = proxySelector38;
        java.net.ResponseCache responseCache40 = okHttpClient37.responseCache;
        java.net.ProxySelector proxySelector41 = okHttpClient37.getProxySelector();
        com.squareup.okhttp.OkHttpClient okHttpClient42 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector43 = null;
        okHttpClient42.proxySelector = proxySelector43;
        java.net.ProxySelector proxySelector45 = okHttpClient42.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier46 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient47 = okHttpClient42.setHostnameVerifier(hostnameVerifier46);
        boolean boolean48 = okHttpClient42.getFollowProtocolRedirects();
        com.squareup.okhttp.ConnectionPool connectionPool51 = new com.squareup.okhttp.ConnectionPool((int) 'a', (long) (byte) -1);
        com.squareup.okhttp.OkHttpClient okHttpClient52 = okHttpClient42.setConnectionPool(connectionPool51);
        com.squareup.okhttp.OkHttpClient okHttpClient53 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler54 = okHttpClient53.getCookieHandler();
        boolean boolean55 = okHttpClient53.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient56 = okHttpClient53.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier57 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient58 = okHttpClient56.setHostnameVerifier(hostnameVerifier57);
        java.net.ResponseCache responseCache59 = okHttpClient58.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator60 = okHttpClient58.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier61 = okHttpClient58.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory62 = okHttpClient58.getSslSocketFactory();
        okHttpClient42.sslSocketFactory = sSLSocketFactory62;
        java.net.Socket socket64 = sSLSocketFactory62.createSocket();
        java.lang.String[] strArray65 = sSLSocketFactory62.getDefaultCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient66 = okHttpClient37.setSSLSocketFactory(sSLSocketFactory62);
        boolean boolean67 = proxy32.equals((java.lang.Object) sSLSocketFactory62);
        com.squareup.okhttp.OkHttpClient okHttpClient68 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler69 = okHttpClient68.getCookieHandler();
        boolean boolean70 = okHttpClient68.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient71 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler72 = okHttpClient71.getCookieHandler();
        boolean boolean73 = okHttpClient71.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient74 = okHttpClient71.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet75 = okHttpClient74.failedRoutes;
        boolean boolean76 = okHttpClient74.getFollowProtocolRedirects();
        java.net.Proxy proxy77 = java.net.Proxy.NO_PROXY;
        okHttpClient74.proxy = proxy77;
        okHttpClient68.proxy = proxy77;
        com.squareup.okhttp.OkHttpClient okHttpClient80 = okHttpClient68.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet81 = okHttpClient80.failedRoutes;
        com.squareup.okhttp.ConnectionPool connectionPool82 = okHttpClient80.getConnectionPool();
        boolean boolean83 = proxy32.equals((java.lang.Object) okHttpClient80);
        okHttpClient4.proxy = proxy32;
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(sSLSocketFactory6);
        org.junit.Assert.assertNull(cookieHandler8);
        org.junit.Assert.assertNotNull(routeArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(proxy13);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertNotNull(okHttpClient25);
        org.junit.Assert.assertNull(cookieHandler27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(okHttpClient29);
        org.junit.Assert.assertNotNull(routeSet30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(proxy32);
        org.junit.Assert.assertTrue("'" + type34 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type34.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertTrue("'" + type36 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type36.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(responseCache40);
        org.junit.Assert.assertNull(proxySelector41);
        org.junit.Assert.assertNull(proxySelector45);
        org.junit.Assert.assertNotNull(okHttpClient47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(okHttpClient52);
        org.junit.Assert.assertNull(cookieHandler54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(okHttpClient56);
        org.junit.Assert.assertNotNull(okHttpClient58);
        org.junit.Assert.assertNull(responseCache59);
        org.junit.Assert.assertNotNull(okAuthenticator60);
        org.junit.Assert.assertNull(hostnameVerifier61);
        org.junit.Assert.assertNotNull(sSLSocketFactory62);
        org.junit.Assert.assertNotNull(socket64);
        org.junit.Assert.assertEquals(socket64.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(okHttpClient66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNull(cookieHandler69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(cookieHandler72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(okHttpClient74);
        org.junit.Assert.assertNotNull(routeSet75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(proxy77);
        org.junit.Assert.assertNotNull(okHttpClient80);
        org.junit.Assert.assertNotNull(routeSet81);
        org.junit.Assert.assertNotNull(connectionPool82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test03159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03159");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        java.net.CookieHandler cookieHandler3 = null;
        okHttpClient0.cookieHandler = cookieHandler3;
        com.squareup.okhttp.ConnectionPool connectionPool5 = okHttpClient0.getConnectionPool();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient0.copyWithDefaults();
        java.net.URL uRL7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.HttpURLConnection httpURLConnection8 = okHttpClient0.open(uRL7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(connectionPool5);
        org.junit.Assert.assertNotNull(okHttpClient6);
    }

    @Test
    public void test03160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03160");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet4 = okHttpClient3.failedRoutes;
        java.net.ResponseCache responseCache5 = okHttpClient3.responseCache;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector7 = null;
        okHttpClient6.proxySelector = proxySelector7;
        java.net.ProxySelector proxySelector9 = okHttpClient6.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient6.setHostnameVerifier(hostnameVerifier10);
        java.net.ResponseCache responseCache12 = okHttpClient11.responseCache;
        com.squareup.okhttp.ConnectionPool connectionPool15 = new com.squareup.okhttp.ConnectionPool((int) '4', 100L);
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient11.setConnectionPool(connectionPool15);
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler18 = okHttpClient17.getCookieHandler();
        boolean boolean19 = okHttpClient17.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator20 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient17.setAuthenticator(okAuthenticator20);
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient17.copyWithDefaults();
        java.net.CookieHandler cookieHandler23 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient17.setCookieHandler(cookieHandler23);
        com.squareup.okhttp.OkAuthenticator okAuthenticator25 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient24.setAuthenticator(okAuthenticator25);
        com.squareup.okhttp.OkHttpClient okHttpClient27 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler28 = okHttpClient27.getCookieHandler();
        boolean boolean29 = okHttpClient27.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient30 = okHttpClient27.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool33 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int34 = connectionPool33.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient30.setConnectionPool(connectionPool33);
        com.squareup.okhttp.ConnectionPool connectionPool36 = okHttpClient30.connectionPool;
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient24.setConnectionPool(connectionPool36);
        com.squareup.okhttp.Address address38 = null;
        com.squareup.okhttp.Connection connection39 = connectionPool36.get(address38);
        com.squareup.okhttp.OkHttpClient okHttpClient40 = okHttpClient16.setConnectionPool(connectionPool36);
        java.net.ProxySelector proxySelector41 = okHttpClient16.proxySelector;
        com.squareup.okhttp.OkHttpClient okHttpClient42 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector43 = null;
        okHttpClient42.proxySelector = proxySelector43;
        java.net.ProxySelector proxySelector45 = okHttpClient42.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier46 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient47 = okHttpClient42.setHostnameVerifier(hostnameVerifier46);
        java.net.ProxySelector proxySelector48 = okHttpClient42.proxySelector;
        java.net.ResponseCache responseCache49 = okHttpClient42.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet50 = okHttpClient42.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient51 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler52 = okHttpClient51.getCookieHandler();
        boolean boolean53 = okHttpClient51.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient54 = okHttpClient51.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool57 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int58 = connectionPool57.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient59 = okHttpClient54.setConnectionPool(connectionPool57);
        com.squareup.okhttp.OkHttpClient okHttpClient60 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector61 = null;
        okHttpClient60.proxySelector = proxySelector61;
        java.net.ProxySelector proxySelector63 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient64 = okHttpClient60.setProxySelector(proxySelector63);
        java.net.ProxySelector proxySelector65 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient66 = okHttpClient60.setProxySelector(proxySelector65);
        okHttpClient59.proxySelector = proxySelector65;
        javax.net.ssl.HostnameVerifier hostnameVerifier68 = okHttpClient59.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient69 = okHttpClient42.setHostnameVerifier(hostnameVerifier68);
        okHttpClient16.hostnameVerifier = hostnameVerifier68;
        okHttpClient3.hostnameVerifier = hostnameVerifier68;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory72 = okHttpClient3.sslSocketFactory;
        java.lang.String[] strArray73 = sSLSocketFactory72.getSupportedCipherSuites();
        java.net.Socket socket74 = sSLSocketFactory72.createSocket();
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket77 = sSLSocketFactory72.createSocket("DIRECT", (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: port out of range:-1");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertNotNull(routeSet4);
        org.junit.Assert.assertNull(responseCache5);
        org.junit.Assert.assertNull(proxySelector9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(responseCache12);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNull(cookieHandler18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNull(cookieHandler28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(okHttpClient30);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNotNull(connectionPool36);
        org.junit.Assert.assertNotNull(okHttpClient37);
        org.junit.Assert.assertNull(connection39);
        org.junit.Assert.assertNotNull(okHttpClient40);
        org.junit.Assert.assertNull(proxySelector41);
        org.junit.Assert.assertNull(proxySelector45);
        org.junit.Assert.assertNotNull(okHttpClient47);
        org.junit.Assert.assertNull(proxySelector48);
        org.junit.Assert.assertNull(responseCache49);
        org.junit.Assert.assertNotNull(routeSet50);
        org.junit.Assert.assertNull(cookieHandler52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(okHttpClient54);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(okHttpClient59);
        org.junit.Assert.assertNotNull(okHttpClient64);
// flaky:         org.junit.Assert.assertNull(proxySelector65);
        org.junit.Assert.assertNotNull(okHttpClient66);
        org.junit.Assert.assertNotNull(hostnameVerifier68);
        org.junit.Assert.assertNotNull(okHttpClient69);
        org.junit.Assert.assertNotNull(sSLSocketFactory72);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertNotNull(socket74);
        org.junit.Assert.assertEquals(socket74.toString(), "Socket[unconnected]");
    }

    @Test
    public void test03161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03161");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        com.squareup.okhttp.OkAuthenticator okAuthenticator5 = okHttpClient0.authenticator;
        java.net.ResponseCache responseCache6 = okHttpClient0.getResponseCache();
        java.net.CookieHandler cookieHandler7 = okHttpClient0.cookieHandler;
        java.net.ResponseCache responseCache8 = okHttpClient0.responseCache;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler10 = okHttpClient9.getCookieHandler();
        boolean boolean11 = okHttpClient9.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient9.setAuthenticator(okAuthenticator12);
        java.net.Proxy proxy14 = okHttpClient9.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient9.copyWithDefaults();
        java.net.CookieHandler cookieHandler16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient9.setCookieHandler(cookieHandler16);
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier19 = okHttpClient18.hostnameVerifier;
        java.net.ResponseCache responseCache20 = okHttpClient18.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator21 = okHttpClient18.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler23 = okHttpClient22.getCookieHandler();
        boolean boolean24 = okHttpClient22.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient22.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier26 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient25.setHostnameVerifier(hostnameVerifier26);
        java.net.ResponseCache responseCache28 = okHttpClient27.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator29 = okHttpClient27.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = okHttpClient27.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory31 = okHttpClient27.getSslSocketFactory();
        java.lang.String[] strArray32 = sSLSocketFactory31.getSupportedCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient18.setSSLSocketFactory(sSLSocketFactory31);
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient17.setSSLSocketFactory(sSLSocketFactory31);
        okHttpClient0.sslSocketFactory = sSLSocketFactory31;
        java.net.Socket socket36 = sSLSocketFactory31.createSocket();
        java.net.Socket socket37 = sSLSocketFactory31.createSocket();
        java.lang.String[] strArray38 = sSLSocketFactory31.getDefaultCipherSuites();
        java.net.InetAddress inetAddress39 = null;
        java.net.InetAddress inetAddress41 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket43 = sSLSocketFactory31.createSocket(inetAddress39, (int) (short) 1, inetAddress41, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.net.BindException; message: Permission denied (Bind failed)");
        } catch (java.net.BindException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(okAuthenticator5);
        org.junit.Assert.assertNull(responseCache6);
        org.junit.Assert.assertNull(cookieHandler7);
        org.junit.Assert.assertNull(responseCache8);
        org.junit.Assert.assertNull(cookieHandler10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNull(proxy14);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNull(hostnameVerifier19);
        org.junit.Assert.assertNull(responseCache20);
        org.junit.Assert.assertNull(okAuthenticator21);
        org.junit.Assert.assertNull(cookieHandler23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(okHttpClient25);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNull(responseCache28);
        org.junit.Assert.assertNotNull(okAuthenticator29);
        org.junit.Assert.assertNull(hostnameVerifier30);
        org.junit.Assert.assertNotNull(sSLSocketFactory31);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(okHttpClient33);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertNotNull(socket36);
        org.junit.Assert.assertEquals(socket36.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(socket37);
        org.junit.Assert.assertEquals(socket37.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(strArray38);
    }

    @Test
    public void test03162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03162");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier6 = okHttpClient0.hostnameVerifier;
        java.net.ProxySelector proxySelector7 = java.net.ProxySelector.getDefault();
        okHttpClient0.proxySelector = proxySelector7;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.OkAuthenticator okAuthenticator10 = okHttpClient9.authenticator;
        com.squareup.okhttp.ConnectionPool connectionPool11 = null;
        okHttpClient9.connectionPool = connectionPool11;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector14 = null;
        okHttpClient13.proxySelector = proxySelector14;
        com.squareup.okhttp.ConnectionPool connectionPool16 = okHttpClient13.connectionPool;
        com.squareup.okhttp.ConnectionPool connectionPool17 = okHttpClient13.getConnectionPool();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache18 = okHttpClient13.okResponseCache();
        java.net.ResponseCache responseCache19 = null;
        okHttpClient13.responseCache = responseCache19;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler22 = okHttpClient21.getCookieHandler();
        boolean boolean23 = okHttpClient21.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient21.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier25 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient24.setHostnameVerifier(hostnameVerifier25);
        java.net.ResponseCache responseCache27 = okHttpClient26.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator28 = okHttpClient26.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier29 = okHttpClient26.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory30 = okHttpClient26.getSslSocketFactory();
        java.lang.String[] strArray31 = sSLSocketFactory30.getSupportedCipherSuites();
        java.lang.String[] strArray32 = sSLSocketFactory30.getDefaultCipherSuites();
        java.lang.String[] strArray33 = sSLSocketFactory30.getDefaultCipherSuites();
        java.lang.String[] strArray34 = sSLSocketFactory30.getSupportedCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient13.setSSLSocketFactory(sSLSocketFactory30);
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient9.setSSLSocketFactory(sSLSocketFactory30);
        com.squareup.okhttp.OkAuthenticator okAuthenticator37 = okHttpClient9.getAuthenticator();
        java.net.Proxy proxy38 = okHttpClient9.getProxy();
        com.squareup.okhttp.OkAuthenticator okAuthenticator39 = okHttpClient9.getAuthenticator();
        com.squareup.okhttp.OkHttpClient okHttpClient40 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler41 = okHttpClient40.getCookieHandler();
        boolean boolean42 = okHttpClient40.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator43 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient44 = okHttpClient40.setAuthenticator(okAuthenticator43);
        com.squareup.okhttp.OkHttpClient okHttpClient45 = okHttpClient40.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier46 = okHttpClient40.hostnameVerifier;
        java.net.ProxySelector proxySelector47 = java.net.ProxySelector.getDefault();
        okHttpClient40.proxySelector = proxySelector47;
        okHttpClient9.proxySelector = proxySelector47;
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(hostnameVerifier6);
// flaky:         org.junit.Assert.assertNull(proxySelector7);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNotNull(okAuthenticator10);
        org.junit.Assert.assertNull(connectionPool16);
        org.junit.Assert.assertNull(connectionPool17);
        org.junit.Assert.assertNull(okResponseCache18);
        org.junit.Assert.assertNull(cookieHandler22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNull(responseCache27);
        org.junit.Assert.assertNotNull(okAuthenticator28);
        org.junit.Assert.assertNull(hostnameVerifier29);
        org.junit.Assert.assertNotNull(sSLSocketFactory30);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNotNull(okAuthenticator37);
        org.junit.Assert.assertNull(proxy38);
        org.junit.Assert.assertNotNull(okAuthenticator39);
        org.junit.Assert.assertNull(cookieHandler41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(okHttpClient44);
        org.junit.Assert.assertNotNull(okHttpClient45);
        org.junit.Assert.assertNull(hostnameVerifier46);
// flaky:         org.junit.Assert.assertNull(proxySelector47);
    }

    @Test
    public void test03163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03163");
        com.squareup.okhttp.ConnectionPool connectionPool2 = new com.squareup.okhttp.ConnectionPool(100, (long) (short) 1);
        connectionPool2.evictAll();
        int int4 = connectionPool2.getConnectionCount();
        com.squareup.okhttp.Connection connection5 = null;
        // The following exception was thrown during execution in test generation
        try {
            connectionPool2.recycle(connection5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    }

    @Test
    public void test03164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03164");
        com.squareup.okhttp.ConnectionPool connectionPool2 = new com.squareup.okhttp.ConnectionPool((int) (short) 1, (-1L));
        connectionPool2.evictAll();
        com.squareup.okhttp.Connection connection4 = null;
        // The following exception was thrown during execution in test generation
        try {
            connectionPool2.recycle(connection4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test03165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03165");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        java.net.ResponseCache responseCache5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient0.setResponseCache(responseCache5);
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool9.evictAll();
        okHttpClient0.connectionPool = connectionPool9;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory12 = okHttpClient0.sslSocketFactory;
        com.squareup.okhttp.ConnectionPool connectionPool13 = okHttpClient0.getConnectionPool();
        com.squareup.okhttp.ConnectionPool connectionPool16 = new com.squareup.okhttp.ConnectionPool((int) ' ', (long) (short) 100);
        com.squareup.okhttp.Address address17 = null;
        com.squareup.okhttp.Connection connection18 = connectionPool16.get(address17);
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient0.setConnectionPool(connectionPool16);
        java.net.CookieHandler cookieHandler20 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient19.setCookieHandler(cookieHandler20);
        java.net.ResponseCache responseCache22 = null;
        okHttpClient21.responseCache = responseCache22;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler25 = okHttpClient24.getCookieHandler();
        java.net.ResponseCache responseCache26 = null;
        okHttpClient24.responseCache = responseCache26;
        boolean boolean28 = okHttpClient24.followProtocolRedirects;
        java.net.CookieHandler cookieHandler29 = okHttpClient24.cookieHandler;
        java.util.Set<com.squareup.okhttp.Route> routeSet30 = okHttpClient24.failedRoutes;
        okHttpClient21.failedRoutes = routeSet30;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient21.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient33 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler34 = okHttpClient33.getCookieHandler();
        boolean boolean35 = okHttpClient33.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient33.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet37 = okHttpClient36.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient36.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient39 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector40 = null;
        okHttpClient39.proxySelector = proxySelector40;
        java.net.ProxySelector proxySelector42 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient43 = okHttpClient39.setProxySelector(proxySelector42);
        java.net.ProxySelector proxySelector44 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient45 = okHttpClient39.setProxySelector(proxySelector44);
        java.net.ProxySelector.setDefault(proxySelector44);
        com.squareup.okhttp.OkHttpClient okHttpClient47 = okHttpClient38.setProxySelector(proxySelector44);
        java.net.ResponseCache responseCache48 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient49 = okHttpClient47.setResponseCache(responseCache48);
        com.squareup.okhttp.OkHttpClient okHttpClient50 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler51 = okHttpClient50.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray52 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet53 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet53, routeArray52);
        okHttpClient50.failedRoutes = routeSet53;
        java.net.Proxy proxy56 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient57 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler58 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient59 = okHttpClient57.setCookieHandler(cookieHandler58);
        com.squareup.okhttp.OkHttpClient okHttpClient61 = okHttpClient57.setFollowProtocolRedirects(true);
        boolean boolean62 = proxy56.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient63 = okHttpClient50.setProxy(proxy56);
        java.net.SocketAddress socketAddress64 = proxy56.address();
        java.net.SocketAddress socketAddress65 = proxy56.address();
        java.lang.String str66 = proxy56.toString();
        java.lang.String str67 = proxy56.toString();
        okHttpClient49.proxy = proxy56;
        okHttpClient21.proxy = proxy56;
        java.net.ResponseCache responseCache70 = okHttpClient21.responseCache;
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient6);
        org.junit.Assert.assertNull(sSLSocketFactory12);
        org.junit.Assert.assertNotNull(connectionPool13);
        org.junit.Assert.assertNull(connection18);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNull(cookieHandler25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(cookieHandler29);
        org.junit.Assert.assertNotNull(routeSet30);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertNull(cookieHandler34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNotNull(routeSet37);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNotNull(okHttpClient43);
// flaky:         org.junit.Assert.assertNull(proxySelector44);
        org.junit.Assert.assertNotNull(okHttpClient45);
        org.junit.Assert.assertNotNull(okHttpClient47);
        org.junit.Assert.assertNotNull(okHttpClient49);
        org.junit.Assert.assertNull(cookieHandler51);
        org.junit.Assert.assertNotNull(routeArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(proxy56);
        org.junit.Assert.assertNotNull(okHttpClient59);
        org.junit.Assert.assertNotNull(okHttpClient61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(okHttpClient63);
        org.junit.Assert.assertNull(socketAddress64);
        org.junit.Assert.assertNull(socketAddress65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "DIRECT" + "'", str66, "DIRECT");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "DIRECT" + "'", str67, "DIRECT");
        org.junit.Assert.assertNull(responseCache70);
    }

    @Test
    public void test03166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03166");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet4 = okHttpClient3.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient3.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector7 = null;
        okHttpClient6.proxySelector = proxySelector7;
        java.net.ProxySelector proxySelector9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient6.setProxySelector(proxySelector9);
        java.net.ProxySelector proxySelector11 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient6.setProxySelector(proxySelector11);
        java.net.ProxySelector.setDefault(proxySelector11);
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient5.setProxySelector(proxySelector11);
        java.util.Set<com.squareup.okhttp.Route> routeSet15 = null;
        okHttpClient5.failedRoutes = routeSet15;
        java.net.Proxy proxy17 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler19 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient18.setCookieHandler(cookieHandler19);
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient18.setFollowProtocolRedirects(true);
        boolean boolean23 = proxy17.equals((java.lang.Object) true);
        java.lang.String str24 = proxy17.toString();
        java.net.Proxy.Type type25 = proxy17.type();
        java.net.SocketAddress socketAddress26 = proxy17.address();
        java.net.SocketAddress socketAddress27 = proxy17.address();
        java.net.SocketAddress socketAddress28 = proxy17.address();
        okHttpClient5.proxy = proxy17;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient5.setFollowProtocolRedirects(false);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory32 = okHttpClient31.sslSocketFactory;
        java.net.InetAddress inetAddress33 = null;
        java.net.InetAddress inetAddress35 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket37 = sSLSocketFactory32.createSocket(inetAddress33, (int) (short) 0, inetAddress35, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.net.BindException; message: Permission denied (Bind failed)");
        } catch (java.net.BindException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertNotNull(routeSet4);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNotNull(okHttpClient10);
// flaky:         org.junit.Assert.assertNull(proxySelector11);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertNotNull(okHttpClient14);
        org.junit.Assert.assertNotNull(proxy17);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "DIRECT" + "'", str24, "DIRECT");
        org.junit.Assert.assertTrue("'" + type25 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type25.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress26);
        org.junit.Assert.assertNull(socketAddress27);
        org.junit.Assert.assertNull(socketAddress28);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNotNull(sSLSocketFactory32);
    }

    @Test
    public void test03167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03167");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier6 = okHttpClient5.getHostnameVerifier();
        java.net.ProxySelector proxySelector7 = okHttpClient5.proxySelector;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler9 = okHttpClient8.getCookieHandler();
        boolean boolean10 = okHttpClient8.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient8.setAuthenticator(okAuthenticator11);
        java.net.ResponseCache responseCache13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient8.setResponseCache(responseCache13);
        com.squareup.okhttp.ConnectionPool connectionPool17 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool17.evictAll();
        okHttpClient8.connectionPool = connectionPool17;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory20 = okHttpClient8.sslSocketFactory;
        java.net.Proxy proxy21 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient8.setProxy(proxy21);
        com.squareup.okhttp.OkHttpClient okHttpClient23 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler24 = okHttpClient23.getCookieHandler();
        boolean boolean25 = okHttpClient23.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient23.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet27 = okHttpClient26.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient26.copyWithDefaults();
        java.net.ProxySelector proxySelector29 = okHttpClient26.getProxySelector();
        okHttpClient22.proxySelector = proxySelector29;
        boolean boolean31 = okHttpClient22.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient32 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler33 = okHttpClient32.getCookieHandler();
        boolean boolean34 = okHttpClient32.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient32.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet36 = okHttpClient35.failedRoutes;
        boolean boolean37 = okHttpClient35.getFollowProtocolRedirects();
        java.net.Proxy proxy38 = java.net.Proxy.NO_PROXY;
        okHttpClient35.proxy = proxy38;
        java.lang.String str40 = proxy38.toString();
        java.lang.String str41 = proxy38.toString();
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient22.setProxy(proxy38);
        java.lang.String str43 = proxy38.toString();
        okHttpClient5.proxy = proxy38;
        java.net.Proxy proxy45 = okHttpClient5.getProxy();
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNotNull(hostnameVerifier6);
// flaky:         org.junit.Assert.assertNull(proxySelector7);
        org.junit.Assert.assertNull(cookieHandler9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertNotNull(okHttpClient14);
        org.junit.Assert.assertNull(sSLSocketFactory20);
        org.junit.Assert.assertNotNull(proxy21);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNull(cookieHandler24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNotNull(routeSet27);
        org.junit.Assert.assertNotNull(okHttpClient28);
// flaky:         org.junit.Assert.assertNull(proxySelector29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(cookieHandler33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNotNull(routeSet36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(proxy38);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "DIRECT" + "'", str40, "DIRECT");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "DIRECT" + "'", str41, "DIRECT");
        org.junit.Assert.assertNotNull(okHttpClient42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "DIRECT" + "'", str43, "DIRECT");
        org.junit.Assert.assertNotNull(proxy45);
    }

    @Test
    public void test03168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03168");
        com.squareup.okhttp.ConnectionPool connectionPool2 = new com.squareup.okhttp.ConnectionPool((int) (short) 0, (long) '4');
        com.squareup.okhttp.Connection connection3 = null;
        // The following exception was thrown during execution in test generation
        try {
            connectionPool2.maybeShare(connection3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test03169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03169");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setHostnameVerifier(hostnameVerifier4);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory6 = okHttpClient5.sslSocketFactory;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler8 = okHttpClient7.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray9 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet10 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet10, routeArray9);
        okHttpClient7.failedRoutes = routeSet10;
        okHttpClient5.failedRoutes = routeSet10;
        com.squareup.okhttp.ConnectionPool connectionPool14 = okHttpClient5.getConnectionPool();
        boolean boolean15 = okHttpClient5.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient16 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector17 = null;
        okHttpClient16.proxySelector = proxySelector17;
        java.net.ProxySelector proxySelector19 = okHttpClient16.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier20 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient16.setHostnameVerifier(hostnameVerifier20);
        java.net.ProxySelector proxySelector22 = okHttpClient16.proxySelector;
        java.net.ResponseCache responseCache23 = okHttpClient16.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet24 = okHttpClient16.failedRoutes;
        java.net.Proxy proxy25 = okHttpClient16.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient26 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler27 = okHttpClient26.getCookieHandler();
        boolean boolean28 = okHttpClient26.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient26.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool32 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int33 = connectionPool32.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient29.setConnectionPool(connectionPool32);
        com.squareup.okhttp.OkHttpClient okHttpClient35 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler36 = okHttpClient35.getCookieHandler();
        boolean boolean37 = okHttpClient35.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient35.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool41 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int42 = connectionPool41.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient43 = okHttpClient38.setConnectionPool(connectionPool41);
        com.squareup.okhttp.OkHttpClient okHttpClient44 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector45 = null;
        okHttpClient44.proxySelector = proxySelector45;
        java.net.ProxySelector proxySelector47 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient48 = okHttpClient44.setProxySelector(proxySelector47);
        java.net.ProxySelector proxySelector49 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient44.setProxySelector(proxySelector49);
        okHttpClient43.proxySelector = proxySelector49;
        com.squareup.okhttp.OkHttpClient okHttpClient52 = okHttpClient29.setProxySelector(proxySelector49);
        java.net.CookieHandler cookieHandler53 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient54 = okHttpClient52.setCookieHandler(cookieHandler53);
        com.squareup.okhttp.OkHttpClient okHttpClient55 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler56 = okHttpClient55.getCookieHandler();
        boolean boolean57 = okHttpClient55.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator58 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient59 = okHttpClient55.setAuthenticator(okAuthenticator58);
        java.net.ResponseCache responseCache60 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient61 = okHttpClient55.setResponseCache(responseCache60);
        com.squareup.okhttp.ConnectionPool connectionPool64 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool64.evictAll();
        okHttpClient55.connectionPool = connectionPool64;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory67 = okHttpClient55.sslSocketFactory;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory68 = null;
        okHttpClient55.sslSocketFactory = sSLSocketFactory68;
        java.net.ProxySelector proxySelector70 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient71 = okHttpClient55.setProxySelector(proxySelector70);
        com.squareup.okhttp.OkHttpClient okHttpClient72 = okHttpClient54.setProxySelector(proxySelector70);
        com.squareup.okhttp.OkAuthenticator okAuthenticator73 = okHttpClient72.getAuthenticator();
        okHttpClient16.authenticator = okAuthenticator73;
        com.squareup.okhttp.OkHttpClient okHttpClient75 = okHttpClient5.setAuthenticator(okAuthenticator73);
        com.squareup.okhttp.ConnectionPool connectionPool78 = new com.squareup.okhttp.ConnectionPool((int) (short) 1, 10L);
        com.squareup.okhttp.OkHttpClient okHttpClient79 = okHttpClient75.setConnectionPool(connectionPool78);
        java.net.CookieHandler cookieHandler80 = null;
        okHttpClient75.cookieHandler = cookieHandler80;
        java.net.CookieHandler cookieHandler82 = null;
        okHttpClient75.cookieHandler = cookieHandler82;
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(sSLSocketFactory6);
        org.junit.Assert.assertNull(cookieHandler8);
        org.junit.Assert.assertNotNull(routeArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(connectionPool14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(proxySelector19);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNull(proxySelector22);
        org.junit.Assert.assertNull(responseCache23);
        org.junit.Assert.assertNotNull(routeSet24);
        org.junit.Assert.assertNull(proxy25);
        org.junit.Assert.assertNull(cookieHandler27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(okHttpClient29);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertNull(cookieHandler36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(okHttpClient43);
        org.junit.Assert.assertNotNull(okHttpClient48);
// flaky:         org.junit.Assert.assertNull(proxySelector49);
        org.junit.Assert.assertNotNull(okHttpClient50);
        org.junit.Assert.assertNotNull(okHttpClient52);
        org.junit.Assert.assertNotNull(okHttpClient54);
        org.junit.Assert.assertNull(cookieHandler56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(okHttpClient59);
        org.junit.Assert.assertNotNull(okHttpClient61);
        org.junit.Assert.assertNull(sSLSocketFactory67);
// flaky:         org.junit.Assert.assertNull(proxySelector70);
        org.junit.Assert.assertNotNull(okHttpClient71);
        org.junit.Assert.assertNotNull(okHttpClient72);
        org.junit.Assert.assertNotNull(okAuthenticator73);
        org.junit.Assert.assertNotNull(okHttpClient75);
        org.junit.Assert.assertNotNull(okHttpClient79);
    }

    @Test
    public void test03170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03170");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setHostnameVerifier(hostnameVerifier4);
        boolean boolean6 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool((int) 'a', (long) (byte) -1);
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient0.setConnectionPool(connectionPool9);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory11 = okHttpClient0.getSslSocketFactory();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache12 = okHttpClient0.okResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler14 = okHttpClient13.getCookieHandler();
        boolean boolean15 = okHttpClient13.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient13.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet17 = okHttpClient16.failedRoutes;
        boolean boolean18 = okHttpClient16.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient19 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler20 = okHttpClient19.getCookieHandler();
        boolean boolean21 = okHttpClient19.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient19.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier23 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient22.setHostnameVerifier(hostnameVerifier23);
        java.net.ResponseCache responseCache25 = okHttpClient24.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator26 = okHttpClient24.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier27 = okHttpClient24.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory28 = okHttpClient24.getSslSocketFactory();
        java.lang.String[] strArray29 = sSLSocketFactory28.getSupportedCipherSuites();
        java.lang.String[] strArray30 = sSLSocketFactory28.getDefaultCipherSuites();
        java.lang.String[] strArray31 = sSLSocketFactory28.getDefaultCipherSuites();
        java.lang.String[] strArray32 = sSLSocketFactory28.getDefaultCipherSuites();
        java.lang.String[] strArray33 = sSLSocketFactory28.getSupportedCipherSuites();
        okHttpClient16.sslSocketFactory = sSLSocketFactory28;
        java.lang.String[] strArray35 = sSLSocketFactory28.getDefaultCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory28);
        java.net.InetAddress inetAddress37 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket39 = sSLSocketFactory28.createSocket(inetAddress37, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: port out of range:-1");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertNull(sSLSocketFactory11);
        org.junit.Assert.assertNull(okResponseCache12);
        org.junit.Assert.assertNull(cookieHandler14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNotNull(routeSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(cookieHandler20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNull(responseCache25);
        org.junit.Assert.assertNotNull(okAuthenticator26);
        org.junit.Assert.assertNull(hostnameVerifier27);
        org.junit.Assert.assertNotNull(sSLSocketFactory28);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(okHttpClient36);
    }

    @Test
    public void test03171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03171");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray2 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet3 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet3, routeArray2);
        okHttpClient0.failedRoutes = routeSet3;
        java.net.Proxy proxy6 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient7.setCookieHandler(cookieHandler8);
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient7.setFollowProtocolRedirects(true);
        boolean boolean12 = proxy6.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient0.setProxy(proxy6);
        java.net.Proxy.Type type14 = proxy6.type();
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler16 = okHttpClient15.getCookieHandler();
        java.net.ResponseCache responseCache17 = null;
        okHttpClient15.responseCache = responseCache17;
        boolean boolean19 = okHttpClient15.followProtocolRedirects;
        java.net.CookieHandler cookieHandler20 = okHttpClient15.cookieHandler;
        com.squareup.okhttp.ConnectionPool connectionPool21 = okHttpClient15.getConnectionPool();
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector23 = null;
        okHttpClient22.proxySelector = proxySelector23;
        java.net.ProxySelector proxySelector25 = okHttpClient22.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier26 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient22.setHostnameVerifier(hostnameVerifier26);
        java.net.ProxySelector proxySelector28 = okHttpClient22.proxySelector;
        java.net.ResponseCache responseCache29 = okHttpClient22.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet30 = okHttpClient22.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler32 = okHttpClient31.getCookieHandler();
        boolean boolean33 = okHttpClient31.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient31.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool37 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int38 = connectionPool37.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient34.setConnectionPool(connectionPool37);
        com.squareup.okhttp.OkHttpClient okHttpClient40 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector41 = null;
        okHttpClient40.proxySelector = proxySelector41;
        java.net.ProxySelector proxySelector43 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient44 = okHttpClient40.setProxySelector(proxySelector43);
        java.net.ProxySelector proxySelector45 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient46 = okHttpClient40.setProxySelector(proxySelector45);
        okHttpClient39.proxySelector = proxySelector45;
        javax.net.ssl.HostnameVerifier hostnameVerifier48 = okHttpClient39.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient49 = okHttpClient22.setHostnameVerifier(hostnameVerifier48);
        okHttpClient15.hostnameVerifier = hostnameVerifier48;
        boolean boolean51 = proxy6.equals((java.lang.Object) hostnameVerifier48);
        com.squareup.okhttp.OkHttpClient okHttpClient52 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector53 = null;
        okHttpClient52.proxySelector = proxySelector53;
        java.net.ProxySelector proxySelector55 = okHttpClient52.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier56 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient57 = okHttpClient52.setHostnameVerifier(hostnameVerifier56);
        java.net.ProxySelector proxySelector58 = java.net.ProxySelector.getDefault();
        okHttpClient52.proxySelector = proxySelector58;
        java.net.ProxySelector.setDefault(proxySelector58);
        boolean boolean61 = proxy6.equals((java.lang.Object) proxySelector58);
        java.net.SocketAddress socketAddress62 = proxy6.address();
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertNotNull(routeArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(proxy6);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertTrue("'" + type14 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type14.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(cookieHandler16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(cookieHandler20);
        org.junit.Assert.assertNull(connectionPool21);
        org.junit.Assert.assertNull(proxySelector25);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNull(proxySelector28);
        org.junit.Assert.assertNull(responseCache29);
        org.junit.Assert.assertNotNull(routeSet30);
        org.junit.Assert.assertNull(cookieHandler32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(okHttpClient39);
        org.junit.Assert.assertNotNull(okHttpClient44);
// flaky:         org.junit.Assert.assertNull(proxySelector45);
        org.junit.Assert.assertNotNull(okHttpClient46);
        org.junit.Assert.assertNotNull(hostnameVerifier48);
        org.junit.Assert.assertNotNull(okHttpClient49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(proxySelector55);
        org.junit.Assert.assertNotNull(okHttpClient57);
// flaky:         org.junit.Assert.assertNull(proxySelector58);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(socketAddress62);
    }

    @Test
    public void test03172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03172");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        java.net.ResponseCache responseCache2 = okHttpClient0.responseCache;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool6 = new com.squareup.okhttp.ConnectionPool((int) ' ', 100L);
        int int7 = connectionPool6.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient3.setConnectionPool(connectionPool6);
        javax.net.ssl.HostnameVerifier hostnameVerifier9 = okHttpClient3.hostnameVerifier;
        com.squareup.okhttp.OkAuthenticator okAuthenticator10 = okHttpClient3.authenticator;
        java.lang.Class<?> wildcardClass11 = okAuthenticator10.getClass();
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertNull(responseCache2);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertNotNull(hostnameVerifier9);
        org.junit.Assert.assertNotNull(okAuthenticator10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test03173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03173");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        java.net.ResponseCache responseCache5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient0.setResponseCache(responseCache5);
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool9.evictAll();
        okHttpClient0.connectionPool = connectionPool9;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory12 = okHttpClient0.sslSocketFactory;
        com.squareup.okhttp.ConnectionPool connectionPool13 = okHttpClient0.getConnectionPool();
        java.net.CookieHandler cookieHandler14 = null;
        okHttpClient0.cookieHandler = cookieHandler14;
        com.squareup.okhttp.ConnectionPool connectionPool18 = new com.squareup.okhttp.ConnectionPool((int) ' ', (long) ' ');
        okHttpClient0.connectionPool = connectionPool18;
        java.net.ResponseCache responseCache20 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient0.setResponseCache(responseCache20);
        java.net.Proxy proxy22 = okHttpClient0.getProxy();
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient6);
        org.junit.Assert.assertNull(sSLSocketFactory12);
        org.junit.Assert.assertNotNull(connectionPool13);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNull(proxy22);
    }

    @Test
    public void test03174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03174");
        com.squareup.okhttp.ConnectionPool connectionPool2 = new com.squareup.okhttp.ConnectionPool(0, (-1L));
        com.squareup.okhttp.Connection connection3 = null;
        // The following exception was thrown during execution in test generation
        try {
            connectionPool2.maybeShare(connection3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test03175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03175");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray2 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet3 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet3, routeArray2);
        okHttpClient0.failedRoutes = routeSet3;
        java.net.Proxy proxy6 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient7.setCookieHandler(cookieHandler8);
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient7.setFollowProtocolRedirects(true);
        boolean boolean12 = proxy6.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient0.setProxy(proxy6);
        com.squareup.okhttp.OkAuthenticator okAuthenticator14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient13.setAuthenticator(okAuthenticator14);
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient15.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler18 = okHttpClient17.getCookieHandler();
        java.net.ResponseCache responseCache19 = null;
        okHttpClient17.responseCache = responseCache19;
        boolean boolean21 = okHttpClient17.followProtocolRedirects;
        java.net.CookieHandler cookieHandler22 = okHttpClient17.cookieHandler;
        com.squareup.okhttp.ConnectionPool connectionPool23 = okHttpClient17.getConnectionPool();
        com.squareup.okhttp.OkHttpClient okHttpClient24 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector25 = null;
        okHttpClient24.proxySelector = proxySelector25;
        java.net.ProxySelector proxySelector27 = okHttpClient24.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier28 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient24.setHostnameVerifier(hostnameVerifier28);
        java.net.ProxySelector proxySelector30 = okHttpClient24.proxySelector;
        java.net.ResponseCache responseCache31 = okHttpClient24.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet32 = okHttpClient24.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient33 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler34 = okHttpClient33.getCookieHandler();
        boolean boolean35 = okHttpClient33.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient33.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool39 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int40 = connectionPool39.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient41 = okHttpClient36.setConnectionPool(connectionPool39);
        com.squareup.okhttp.OkHttpClient okHttpClient42 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector43 = null;
        okHttpClient42.proxySelector = proxySelector43;
        java.net.ProxySelector proxySelector45 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient46 = okHttpClient42.setProxySelector(proxySelector45);
        java.net.ProxySelector proxySelector47 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient48 = okHttpClient42.setProxySelector(proxySelector47);
        okHttpClient41.proxySelector = proxySelector47;
        javax.net.ssl.HostnameVerifier hostnameVerifier50 = okHttpClient41.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient51 = okHttpClient24.setHostnameVerifier(hostnameVerifier50);
        okHttpClient17.hostnameVerifier = hostnameVerifier50;
        okHttpClient16.hostnameVerifier = hostnameVerifier50;
        java.net.ProxySelector proxySelector54 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient55 = okHttpClient16.setProxySelector(proxySelector54);
        com.squareup.okhttp.OkAuthenticator okAuthenticator56 = okHttpClient55.getAuthenticator();
        com.squareup.okhttp.OkAuthenticator okAuthenticator57 = okHttpClient55.getAuthenticator();
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertNotNull(routeArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(proxy6);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNull(cookieHandler18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(cookieHandler22);
        org.junit.Assert.assertNull(connectionPool23);
        org.junit.Assert.assertNull(proxySelector27);
        org.junit.Assert.assertNotNull(okHttpClient29);
        org.junit.Assert.assertNull(proxySelector30);
        org.junit.Assert.assertNull(responseCache31);
        org.junit.Assert.assertNotNull(routeSet32);
        org.junit.Assert.assertNull(cookieHandler34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(okHttpClient41);
        org.junit.Assert.assertNotNull(okHttpClient46);
// flaky:         org.junit.Assert.assertNull(proxySelector47);
        org.junit.Assert.assertNotNull(okHttpClient48);
        org.junit.Assert.assertNotNull(hostnameVerifier50);
        org.junit.Assert.assertNotNull(okHttpClient51);
// flaky:         org.junit.Assert.assertNull(proxySelector54);
        org.junit.Assert.assertNotNull(okHttpClient55);
        org.junit.Assert.assertNotNull(okAuthenticator56);
        org.junit.Assert.assertNotNull(okAuthenticator57);
    }

    @Test
    public void test03176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03176");
        com.squareup.okhttp.ConnectionPool connectionPool2 = new com.squareup.okhttp.ConnectionPool((int) '#', 100L);
        connectionPool2.evictAll();
        int int4 = connectionPool2.getSpdyConnectionCount();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    }

    @Test
    public void test03177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03177");
        java.net.Proxy proxy0 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress1 = proxy0.address();
        java.net.Proxy.Type type2 = proxy0.type();
        java.net.Proxy.Type type3 = proxy0.type();
        java.net.SocketAddress socketAddress4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Proxy proxy5 = new java.net.Proxy(type3, socketAddress4);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: type DIRECT is not compatible with address null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(proxy0);
        org.junit.Assert.assertNull(socketAddress1);
        org.junit.Assert.assertTrue("'" + type2 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type2.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertTrue("'" + type3 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type3.equals(java.net.Proxy.Type.DIRECT));
    }

    @Test
    public void test03178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03178");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient0.connectionPool;
        com.squareup.okhttp.ConnectionPool connectionPool4 = okHttpClient0.getConnectionPool();
        java.net.CookieHandler cookieHandler5 = okHttpClient0.getCookieHandler();
        javax.net.ssl.HostnameVerifier hostnameVerifier6 = okHttpClient0.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory7 = okHttpClient0.sslSocketFactory;
        org.junit.Assert.assertNull(connectionPool3);
        org.junit.Assert.assertNull(connectionPool4);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertNull(hostnameVerifier6);
        org.junit.Assert.assertNull(sSLSocketFactory7);
    }

    @Test
    public void test03179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03179");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.copyWithDefaults();
        java.net.CookieHandler cookieHandler6 = null;
        okHttpClient5.cookieHandler = cookieHandler6;
        boolean boolean8 = okHttpClient5.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient9 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler10 = okHttpClient9.getCookieHandler();
        boolean boolean11 = okHttpClient9.getFollowProtocolRedirects();
        java.net.ProxySelector proxySelector12 = okHttpClient9.proxySelector;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector14 = null;
        okHttpClient13.proxySelector = proxySelector14;
        java.net.ProxySelector proxySelector16 = okHttpClient13.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier17 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient13.setHostnameVerifier(hostnameVerifier17);
        java.net.ProxySelector proxySelector19 = okHttpClient13.proxySelector;
        java.net.ResponseCache responseCache20 = okHttpClient13.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet21 = okHttpClient13.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler23 = okHttpClient22.getCookieHandler();
        boolean boolean24 = okHttpClient22.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient22.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool28 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int29 = connectionPool28.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient30 = okHttpClient25.setConnectionPool(connectionPool28);
        com.squareup.okhttp.OkHttpClient okHttpClient31 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector32 = null;
        okHttpClient31.proxySelector = proxySelector32;
        java.net.ProxySelector proxySelector34 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient31.setProxySelector(proxySelector34);
        java.net.ProxySelector proxySelector36 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient31.setProxySelector(proxySelector36);
        okHttpClient30.proxySelector = proxySelector36;
        javax.net.ssl.HostnameVerifier hostnameVerifier39 = okHttpClient30.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient40 = okHttpClient13.setHostnameVerifier(hostnameVerifier39);
        java.net.Proxy proxy41 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress42 = proxy41.address();
        com.squareup.okhttp.OkHttpClient okHttpClient43 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector44 = null;
        okHttpClient43.proxySelector = proxySelector44;
        com.squareup.okhttp.ConnectionPool connectionPool46 = okHttpClient43.connectionPool;
        com.squareup.okhttp.ConnectionPool connectionPool47 = okHttpClient43.getConnectionPool();
        boolean boolean48 = proxy41.equals((java.lang.Object) okHttpClient43);
        okHttpClient13.proxy = proxy41;
        com.squareup.okhttp.OkHttpClient okHttpClient50 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler51 = okHttpClient50.getCookieHandler();
        boolean boolean52 = okHttpClient50.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient53 = okHttpClient50.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier54 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient55 = okHttpClient53.setHostnameVerifier(hostnameVerifier54);
        java.net.ResponseCache responseCache56 = okHttpClient55.getResponseCache();
        java.net.ProxySelector proxySelector57 = okHttpClient55.getProxySelector();
        boolean boolean58 = proxy41.equals((java.lang.Object) proxySelector57);
        com.squareup.okhttp.OkHttpClient okHttpClient59 = okHttpClient9.setProxy(proxy41);
        java.net.CookieHandler cookieHandler60 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient61 = okHttpClient9.setCookieHandler(cookieHandler60);
        java.net.Proxy proxy62 = okHttpClient61.getProxy();
        java.net.Proxy.Type type63 = proxy62.type();
        com.squareup.okhttp.OkHttpClient okHttpClient64 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler65 = okHttpClient64.getCookieHandler();
        java.net.ResponseCache responseCache66 = null;
        okHttpClient64.responseCache = responseCache66;
        java.net.Proxy proxy68 = null;
        okHttpClient64.proxy = proxy68;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory70 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient71 = okHttpClient64.setSSLSocketFactory(sSLSocketFactory70);
        boolean boolean72 = proxy62.equals((java.lang.Object) sSLSocketFactory70);
        com.squareup.okhttp.OkHttpClient okHttpClient73 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler74 = okHttpClient73.getCookieHandler();
        boolean boolean75 = okHttpClient73.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator76 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient77 = okHttpClient73.setAuthenticator(okAuthenticator76);
        boolean boolean78 = proxy62.equals((java.lang.Object) okHttpClient77);
        javax.net.ssl.HostnameVerifier hostnameVerifier79 = okHttpClient77.hostnameVerifier;
        java.net.Proxy proxy80 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient81 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler82 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient83 = okHttpClient81.setCookieHandler(cookieHandler82);
        com.squareup.okhttp.OkHttpClient okHttpClient85 = okHttpClient81.setFollowProtocolRedirects(true);
        boolean boolean86 = proxy80.equals((java.lang.Object) true);
        java.lang.String str87 = proxy80.toString();
        java.net.Proxy.Type type88 = proxy80.type();
        java.net.SocketAddress socketAddress89 = proxy80.address();
        java.net.SocketAddress socketAddress90 = proxy80.address();
        okHttpClient77.proxy = proxy80;
        java.net.Proxy.Type type92 = proxy80.type();
        com.squareup.okhttp.OkHttpClient okHttpClient93 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler94 = okHttpClient93.getCookieHandler();
        boolean boolean95 = okHttpClient93.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient96 = okHttpClient93.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool97 = okHttpClient96.getConnectionPool();
        boolean boolean98 = proxy80.equals((java.lang.Object) connectionPool97);
        com.squareup.okhttp.OkHttpClient okHttpClient99 = okHttpClient5.setConnectionPool(connectionPool97);
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(cookieHandler10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(proxySelector12);
        org.junit.Assert.assertNull(proxySelector16);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNull(proxySelector19);
        org.junit.Assert.assertNull(responseCache20);
        org.junit.Assert.assertNotNull(routeSet21);
        org.junit.Assert.assertNull(cookieHandler23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(okHttpClient25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(okHttpClient30);
        org.junit.Assert.assertNotNull(okHttpClient35);
// flaky:         org.junit.Assert.assertNull(proxySelector36);
        org.junit.Assert.assertNotNull(okHttpClient37);
        org.junit.Assert.assertNotNull(hostnameVerifier39);
        org.junit.Assert.assertNotNull(okHttpClient40);
        org.junit.Assert.assertNotNull(proxy41);
        org.junit.Assert.assertNull(socketAddress42);
        org.junit.Assert.assertNull(connectionPool46);
        org.junit.Assert.assertNull(connectionPool47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(cookieHandler51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(okHttpClient53);
        org.junit.Assert.assertNotNull(okHttpClient55);
        org.junit.Assert.assertNull(responseCache56);
// flaky:         org.junit.Assert.assertNull(proxySelector57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(okHttpClient59);
        org.junit.Assert.assertNotNull(okHttpClient61);
        org.junit.Assert.assertNotNull(proxy62);
        org.junit.Assert.assertTrue("'" + type63 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type63.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(cookieHandler65);
        org.junit.Assert.assertNotNull(okHttpClient71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNull(cookieHandler74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(okHttpClient77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNull(hostnameVerifier79);
        org.junit.Assert.assertNotNull(proxy80);
        org.junit.Assert.assertNotNull(okHttpClient83);
        org.junit.Assert.assertNotNull(okHttpClient85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "DIRECT" + "'", str87, "DIRECT");
        org.junit.Assert.assertTrue("'" + type88 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type88.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress89);
        org.junit.Assert.assertNull(socketAddress90);
        org.junit.Assert.assertTrue("'" + type92 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type92.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(cookieHandler94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertNotNull(okHttpClient96);
        org.junit.Assert.assertNotNull(connectionPool97);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
        org.junit.Assert.assertNotNull(okHttpClient99);
    }

    @Test
    public void test03180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03180");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier6 = okHttpClient0.hostnameVerifier;
        java.net.ProxySelector proxySelector7 = java.net.ProxySelector.getDefault();
        okHttpClient0.proxySelector = proxySelector7;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient10 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient10.setCookieHandler(cookieHandler11);
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient10.setFollowProtocolRedirects(true);
        java.net.ResponseCache responseCache15 = null;
        okHttpClient10.responseCache = responseCache15;
        com.squareup.okhttp.OkAuthenticator okAuthenticator17 = okHttpClient10.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler19 = okHttpClient18.getCookieHandler();
        boolean boolean20 = okHttpClient18.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient18.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector23 = null;
        okHttpClient22.proxySelector = proxySelector23;
        java.net.ProxySelector proxySelector25 = okHttpClient22.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier26 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient22.setHostnameVerifier(hostnameVerifier26);
        java.net.ProxySelector proxySelector28 = okHttpClient22.proxySelector;
        java.net.ResponseCache responseCache29 = okHttpClient22.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet30 = okHttpClient22.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler32 = okHttpClient31.getCookieHandler();
        boolean boolean33 = okHttpClient31.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient31.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool37 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int38 = connectionPool37.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient34.setConnectionPool(connectionPool37);
        com.squareup.okhttp.OkHttpClient okHttpClient40 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector41 = null;
        okHttpClient40.proxySelector = proxySelector41;
        java.net.ProxySelector proxySelector43 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient44 = okHttpClient40.setProxySelector(proxySelector43);
        java.net.ProxySelector proxySelector45 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient46 = okHttpClient40.setProxySelector(proxySelector45);
        okHttpClient39.proxySelector = proxySelector45;
        javax.net.ssl.HostnameVerifier hostnameVerifier48 = okHttpClient39.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient49 = okHttpClient22.setHostnameVerifier(hostnameVerifier48);
        javax.net.ssl.HostnameVerifier hostnameVerifier50 = okHttpClient49.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient51 = okHttpClient18.setHostnameVerifier(hostnameVerifier50);
        javax.net.ssl.HostnameVerifier hostnameVerifier52 = okHttpClient51.getHostnameVerifier();
        okHttpClient10.hostnameVerifier = hostnameVerifier52;
        java.net.CookieHandler cookieHandler54 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient55 = okHttpClient10.setCookieHandler(cookieHandler54);
        java.net.CookieHandler cookieHandler56 = okHttpClient10.cookieHandler;
        java.net.ProxySelector proxySelector57 = okHttpClient10.proxySelector;
        com.squareup.okhttp.OkHttpClient okHttpClient58 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler59 = okHttpClient58.getCookieHandler();
        boolean boolean60 = okHttpClient58.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient61 = okHttpClient58.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool64 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int65 = connectionPool64.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient66 = okHttpClient61.setConnectionPool(connectionPool64);
        com.squareup.okhttp.ConnectionPool connectionPool67 = okHttpClient61.connectionPool;
        java.net.ResponseCache responseCache68 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient69 = okHttpClient61.setResponseCache(responseCache68);
        com.squareup.okhttp.OkHttpClient okHttpClient70 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector71 = null;
        okHttpClient70.proxySelector = proxySelector71;
        java.net.ProxySelector proxySelector73 = okHttpClient70.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier74 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient75 = okHttpClient70.setHostnameVerifier(hostnameVerifier74);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory76 = okHttpClient75.sslSocketFactory;
        com.squareup.okhttp.OkHttpClient okHttpClient77 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler78 = okHttpClient77.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray79 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet80 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet80, routeArray79);
        okHttpClient77.failedRoutes = routeSet80;
        okHttpClient75.failedRoutes = routeSet80;
        okHttpClient69.failedRoutes = routeSet80;
        okHttpClient10.failedRoutes = routeSet80;
        okHttpClient9.failedRoutes = routeSet80;
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(hostnameVerifier6);
// flaky:         org.junit.Assert.assertNull(proxySelector7);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertNotNull(okHttpClient14);
        org.junit.Assert.assertNull(okAuthenticator17);
        org.junit.Assert.assertNull(cookieHandler19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNull(proxySelector25);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNull(proxySelector28);
        org.junit.Assert.assertNull(responseCache29);
        org.junit.Assert.assertNotNull(routeSet30);
        org.junit.Assert.assertNull(cookieHandler32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(okHttpClient39);
        org.junit.Assert.assertNotNull(okHttpClient44);
// flaky:         org.junit.Assert.assertNull(proxySelector45);
        org.junit.Assert.assertNotNull(okHttpClient46);
        org.junit.Assert.assertNotNull(hostnameVerifier48);
        org.junit.Assert.assertNotNull(okHttpClient49);
        org.junit.Assert.assertNotNull(hostnameVerifier50);
        org.junit.Assert.assertNotNull(okHttpClient51);
        org.junit.Assert.assertNotNull(hostnameVerifier52);
        org.junit.Assert.assertNotNull(okHttpClient55);
        org.junit.Assert.assertNull(cookieHandler56);
        org.junit.Assert.assertNull(proxySelector57);
        org.junit.Assert.assertNull(cookieHandler59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(okHttpClient61);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNotNull(okHttpClient66);
        org.junit.Assert.assertNotNull(connectionPool67);
        org.junit.Assert.assertNotNull(okHttpClient69);
        org.junit.Assert.assertNull(proxySelector73);
        org.junit.Assert.assertNotNull(okHttpClient75);
        org.junit.Assert.assertNull(sSLSocketFactory76);
        org.junit.Assert.assertNull(cookieHandler78);
        org.junit.Assert.assertNotNull(routeArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test03181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03181");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray2 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet3 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet3, routeArray2);
        okHttpClient0.failedRoutes = routeSet3;
        java.net.Proxy proxy6 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient7.setCookieHandler(cookieHandler8);
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient7.setFollowProtocolRedirects(true);
        boolean boolean12 = proxy6.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient0.setProxy(proxy6);
        com.squareup.okhttp.OkHttpClient okHttpClient14 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector15 = null;
        okHttpClient14.proxySelector = proxySelector15;
        java.net.ProxySelector proxySelector17 = okHttpClient14.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient14.setHostnameVerifier(hostnameVerifier18);
        java.net.ProxySelector proxySelector20 = okHttpClient14.proxySelector;
        java.net.ResponseCache responseCache21 = okHttpClient14.getResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler23 = okHttpClient22.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray24 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet25 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet25, routeArray24);
        okHttpClient22.failedRoutes = routeSet25;
        java.net.Proxy proxy28 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient29 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler30 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient29.setCookieHandler(cookieHandler30);
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient29.setFollowProtocolRedirects(true);
        boolean boolean34 = proxy28.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient22.setProxy(proxy28);
        okHttpClient14.proxy = proxy28;
        com.squareup.okhttp.OkHttpClient okHttpClient37 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler38 = okHttpClient37.getCookieHandler();
        boolean boolean39 = okHttpClient37.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient40 = okHttpClient37.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier41 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient40.setHostnameVerifier(hostnameVerifier41);
        boolean boolean43 = proxy28.equals((java.lang.Object) okHttpClient40);
        com.squareup.okhttp.OkHttpClient okHttpClient44 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector45 = null;
        okHttpClient44.proxySelector = proxySelector45;
        java.net.ProxySelector proxySelector47 = okHttpClient44.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier48 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient49 = okHttpClient44.setHostnameVerifier(hostnameVerifier48);
        java.net.ProxySelector proxySelector50 = okHttpClient44.proxySelector;
        java.net.CookieHandler cookieHandler51 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient52 = okHttpClient44.setCookieHandler(cookieHandler51);
        com.squareup.okhttp.OkAuthenticator okAuthenticator53 = null;
        okHttpClient52.authenticator = okAuthenticator53;
        boolean boolean55 = proxy28.equals((java.lang.Object) okAuthenticator53);
        okHttpClient13.proxy = proxy28;
        com.squareup.okhttp.OkHttpClient okHttpClient57 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector58 = null;
        okHttpClient57.proxySelector = proxySelector58;
        java.net.ProxySelector proxySelector60 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient61 = okHttpClient57.setProxySelector(proxySelector60);
        java.net.CookieHandler cookieHandler62 = okHttpClient61.cookieHandler;
        java.net.ResponseCache responseCache63 = okHttpClient61.getResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient64 = okHttpClient61.copyWithDefaults();
        boolean boolean65 = proxy28.equals((java.lang.Object) okHttpClient64);
        java.net.SocketAddress socketAddress66 = proxy28.address();
        com.squareup.okhttp.OkHttpClient okHttpClient67 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler68 = okHttpClient67.getCookieHandler();
        java.net.ResponseCache responseCache69 = null;
        okHttpClient67.responseCache = responseCache69;
        boolean boolean71 = okHttpClient67.followProtocolRedirects;
        java.net.CookieHandler cookieHandler72 = okHttpClient67.cookieHandler;
        java.net.CookieHandler cookieHandler73 = null;
        okHttpClient67.cookieHandler = cookieHandler73;
        boolean boolean75 = proxy28.equals((java.lang.Object) okHttpClient67);
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertNotNull(routeArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(proxy6);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNull(proxySelector17);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNull(proxySelector20);
        org.junit.Assert.assertNull(responseCache21);
        org.junit.Assert.assertNull(cookieHandler23);
        org.junit.Assert.assertNotNull(routeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(proxy28);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNotNull(okHttpClient33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNull(cookieHandler38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(okHttpClient40);
        org.junit.Assert.assertNotNull(okHttpClient42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(proxySelector47);
        org.junit.Assert.assertNotNull(okHttpClient49);
        org.junit.Assert.assertNull(proxySelector50);
        org.junit.Assert.assertNotNull(okHttpClient52);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(okHttpClient61);
        org.junit.Assert.assertNull(cookieHandler62);
        org.junit.Assert.assertNull(responseCache63);
        org.junit.Assert.assertNotNull(okHttpClient64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNull(socketAddress66);
        org.junit.Assert.assertNull(cookieHandler68);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNull(cookieHandler72);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test03182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03182");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = okHttpClient0.hostnameVerifier;
        java.net.ResponseCache responseCache2 = okHttpClient0.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = okHttpClient0.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler5 = okHttpClient4.getCookieHandler();
        boolean boolean6 = okHttpClient4.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient4.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient7.setHostnameVerifier(hostnameVerifier8);
        java.net.ResponseCache responseCache10 = okHttpClient9.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator11 = okHttpClient9.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient0.setAuthenticator(okAuthenticator11);
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler14 = okHttpClient13.getCookieHandler();
        boolean boolean15 = okHttpClient13.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient13.setAuthenticator(okAuthenticator16);
        java.net.ResponseCache responseCache18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient13.setResponseCache(responseCache18);
        com.squareup.okhttp.ConnectionPool connectionPool22 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool22.evictAll();
        okHttpClient13.connectionPool = connectionPool22;
        connectionPool22.evictAll();
        int int26 = connectionPool22.getSpdyConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient0.setConnectionPool(connectionPool22);
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache28 = okHttpClient0.okResponseCache();
        java.net.Proxy proxy29 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient30 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler31 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient30.setCookieHandler(cookieHandler31);
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient30.setFollowProtocolRedirects(true);
        boolean boolean35 = proxy29.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient0.setProxy(proxy29);
        java.net.ResponseCache responseCache37 = okHttpClient36.responseCache;
        java.net.ProxySelector proxySelector38 = okHttpClient36.proxySelector;
        org.junit.Assert.assertNull(hostnameVerifier1);
        org.junit.Assert.assertNull(responseCache2);
        org.junit.Assert.assertNull(okAuthenticator3);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(okHttpClient7);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNull(responseCache10);
        org.junit.Assert.assertNotNull(okAuthenticator11);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertNull(cookieHandler14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNull(okResponseCache28);
        org.junit.Assert.assertNotNull(proxy29);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNull(responseCache37);
        org.junit.Assert.assertNull(proxySelector38);
    }

    @Test
    public void test03183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03183");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray2 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet3 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet3, routeArray2);
        okHttpClient0.failedRoutes = routeSet3;
        java.net.Proxy proxy6 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient7.setCookieHandler(cookieHandler8);
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient7.setFollowProtocolRedirects(true);
        boolean boolean12 = proxy6.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient0.setProxy(proxy6);
        com.squareup.okhttp.OkAuthenticator okAuthenticator14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient13.setAuthenticator(okAuthenticator14);
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient15.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient15.setFollowProtocolRedirects(true);
        java.net.ResponseCache responseCache19 = null;
        okHttpClient15.responseCache = responseCache19;
        com.squareup.okhttp.ConnectionPool connectionPool23 = new com.squareup.okhttp.ConnectionPool((int) (byte) 0, (long) 10);
        int int24 = connectionPool23.getSpdyConnectionCount();
        okHttpClient15.connectionPool = connectionPool23;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler27 = okHttpClient26.getCookieHandler();
        boolean boolean28 = okHttpClient26.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient26.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient29.setHostnameVerifier(hostnameVerifier30);
        java.net.ResponseCache responseCache32 = okHttpClient31.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator33 = okHttpClient31.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier34 = okHttpClient31.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory35 = okHttpClient31.getSslSocketFactory();
        java.lang.String[] strArray36 = sSLSocketFactory35.getSupportedCipherSuites();
        java.lang.String[] strArray37 = sSLSocketFactory35.getSupportedCipherSuites();
        okHttpClient15.sslSocketFactory = sSLSocketFactory35;
        java.net.InetAddress inetAddress39 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket41 = sSLSocketFactory35.createSocket(inetAddress39, 0);
            org.junit.Assert.fail("Expected exception of type java.net.ConnectException; message: Connection refused (Connection refused)");
        } catch (java.net.ConnectException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertNotNull(routeArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(proxy6);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNull(cookieHandler27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(okHttpClient29);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNull(responseCache32);
        org.junit.Assert.assertNotNull(okAuthenticator33);
        org.junit.Assert.assertNull(hostnameVerifier34);
        org.junit.Assert.assertNotNull(sSLSocketFactory35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(strArray37);
    }

    @Test
    public void test03184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03184");
        javax.net.SocketFactory socketFactory0 = javax.net.ssl.SSLSocketFactory.getDefault();
        java.net.Socket socket1 = socketFactory0.createSocket();
        java.net.Socket socket2 = socketFactory0.createSocket();
        java.net.Socket socket3 = socketFactory0.createSocket();
        java.net.Socket socket4 = socketFactory0.createSocket();
        java.net.InetAddress inetAddress5 = null;
        java.net.InetAddress inetAddress7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket9 = socketFactory0.createSocket(inetAddress5, (int) (byte) -1, inetAddress7, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: port out of range:-1");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(socketFactory0);
        org.junit.Assert.assertNotNull(socket1);
        org.junit.Assert.assertEquals(socket1.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(socket2);
        org.junit.Assert.assertEquals(socket2.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(socket3);
        org.junit.Assert.assertEquals(socket3.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(socket4);
        org.junit.Assert.assertEquals(socket4.toString(), "Socket[unconnected]");
    }

    @Test
    public void test03185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03185");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector5 = null;
        okHttpClient4.proxySelector = proxySelector5;
        java.net.ProxySelector proxySelector7 = okHttpClient4.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient4.setHostnameVerifier(hostnameVerifier8);
        java.net.ProxySelector proxySelector10 = okHttpClient4.proxySelector;
        java.net.ResponseCache responseCache11 = okHttpClient4.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet12 = okHttpClient4.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler14 = okHttpClient13.getCookieHandler();
        boolean boolean15 = okHttpClient13.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient13.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool19 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int20 = connectionPool19.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient16.setConnectionPool(connectionPool19);
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector23 = null;
        okHttpClient22.proxySelector = proxySelector23;
        java.net.ProxySelector proxySelector25 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient22.setProxySelector(proxySelector25);
        java.net.ProxySelector proxySelector27 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient22.setProxySelector(proxySelector27);
        okHttpClient21.proxySelector = proxySelector27;
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = okHttpClient21.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient4.setHostnameVerifier(hostnameVerifier30);
        java.net.Proxy proxy32 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress33 = proxy32.address();
        com.squareup.okhttp.OkHttpClient okHttpClient34 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector35 = null;
        okHttpClient34.proxySelector = proxySelector35;
        com.squareup.okhttp.ConnectionPool connectionPool37 = okHttpClient34.connectionPool;
        com.squareup.okhttp.ConnectionPool connectionPool38 = okHttpClient34.getConnectionPool();
        boolean boolean39 = proxy32.equals((java.lang.Object) okHttpClient34);
        okHttpClient4.proxy = proxy32;
        com.squareup.okhttp.OkHttpClient okHttpClient41 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler42 = okHttpClient41.getCookieHandler();
        boolean boolean43 = okHttpClient41.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient44 = okHttpClient41.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier45 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient46 = okHttpClient44.setHostnameVerifier(hostnameVerifier45);
        java.net.ResponseCache responseCache47 = okHttpClient46.getResponseCache();
        java.net.ProxySelector proxySelector48 = okHttpClient46.getProxySelector();
        boolean boolean49 = proxy32.equals((java.lang.Object) proxySelector48);
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient0.setProxy(proxy32);
        com.squareup.okhttp.ConnectionPool connectionPool51 = okHttpClient50.getConnectionPool();
        com.squareup.okhttp.OkHttpClient okHttpClient52 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler53 = okHttpClient52.getCookieHandler();
        boolean boolean54 = okHttpClient52.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient55 = okHttpClient52.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool58 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int59 = connectionPool58.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient60 = okHttpClient55.setConnectionPool(connectionPool58);
        com.squareup.okhttp.OkHttpClient okHttpClient61 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector62 = null;
        okHttpClient61.proxySelector = proxySelector62;
        java.net.ProxySelector proxySelector64 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient65 = okHttpClient61.setProxySelector(proxySelector64);
        java.net.ProxySelector proxySelector66 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient67 = okHttpClient61.setProxySelector(proxySelector66);
        okHttpClient60.proxySelector = proxySelector66;
        okHttpClient60.followProtocolRedirects = true;
        com.squareup.okhttp.OkAuthenticator okAuthenticator71 = okHttpClient60.getAuthenticator();
        okHttpClient50.authenticator = okAuthenticator71;
        com.squareup.okhttp.OkHttpClient okHttpClient74 = okHttpClient50.setFollowProtocolRedirects(true);
        java.net.ResponseCache responseCache75 = null;
        okHttpClient50.responseCache = responseCache75;
        java.net.ResponseCache responseCache77 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient78 = okHttpClient50.setResponseCache(responseCache77);
        java.net.ProxySelector proxySelector79 = okHttpClient78.proxySelector;
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNull(proxySelector7);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNull(proxySelector10);
        org.junit.Assert.assertNull(responseCache11);
        org.junit.Assert.assertNotNull(routeSet12);
        org.junit.Assert.assertNull(cookieHandler14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNotNull(okHttpClient26);
// flaky:         org.junit.Assert.assertNull(proxySelector27);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNotNull(hostnameVerifier30);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNotNull(proxy32);
        org.junit.Assert.assertNull(socketAddress33);
        org.junit.Assert.assertNull(connectionPool37);
        org.junit.Assert.assertNull(connectionPool38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(cookieHandler42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(okHttpClient44);
        org.junit.Assert.assertNotNull(okHttpClient46);
        org.junit.Assert.assertNull(responseCache47);
// flaky:         org.junit.Assert.assertNull(proxySelector48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(okHttpClient50);
        org.junit.Assert.assertNull(connectionPool51);
        org.junit.Assert.assertNull(cookieHandler53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(okHttpClient55);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(okHttpClient60);
        org.junit.Assert.assertNotNull(okHttpClient65);
// flaky:         org.junit.Assert.assertNull(proxySelector66);
        org.junit.Assert.assertNotNull(okHttpClient67);
        org.junit.Assert.assertNotNull(okAuthenticator71);
        org.junit.Assert.assertNotNull(okHttpClient74);
        org.junit.Assert.assertNotNull(okHttpClient78);
        org.junit.Assert.assertNull(proxySelector79);
    }

    @Test
    public void test03186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03186");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = okHttpClient0.hostnameVerifier;
        java.net.ResponseCache responseCache2 = okHttpClient0.getResponseCache();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory3 = okHttpClient0.sslSocketFactory;
        java.net.Proxy proxy4 = okHttpClient0.getProxy();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory5);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory7);
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache9 = okHttpClient0.okResponseCache();
        java.net.ProxySelector proxySelector10 = okHttpClient0.proxySelector;
        java.util.Set<com.squareup.okhttp.Route> routeSet11 = okHttpClient0.failedRoutes;
        org.junit.Assert.assertNull(hostnameVerifier1);
        org.junit.Assert.assertNull(responseCache2);
        org.junit.Assert.assertNull(sSLSocketFactory3);
        org.junit.Assert.assertNull(proxy4);
        org.junit.Assert.assertNotNull(okHttpClient6);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertNull(okResponseCache9);
        org.junit.Assert.assertNull(proxySelector10);
        org.junit.Assert.assertNotNull(routeSet11);
    }

    @Test
    public void test03187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03187");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setHostnameVerifier(hostnameVerifier4);
        java.net.ResponseCache responseCache6 = okHttpClient5.responseCache;
        java.net.CookieHandler cookieHandler7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient5.setCookieHandler(cookieHandler7);
        java.net.ResponseCache responseCache9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient5.setResponseCache(responseCache9);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory11 = okHttpClient5.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient12 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler13 = okHttpClient12.getCookieHandler();
        boolean boolean14 = okHttpClient12.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient12.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient15.setHostnameVerifier(hostnameVerifier16);
        java.net.ResponseCache responseCache18 = okHttpClient17.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator19 = okHttpClient17.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier20 = okHttpClient17.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory21 = okHttpClient17.getSslSocketFactory();
        java.lang.String[] strArray22 = sSLSocketFactory21.getSupportedCipherSuites();
        java.net.Socket socket23 = sSLSocketFactory21.createSocket();
        java.net.Socket socket24 = sSLSocketFactory21.createSocket();
        java.net.Socket socket25 = sSLSocketFactory21.createSocket();
        java.lang.String[] strArray26 = sSLSocketFactory21.getSupportedCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient5.setSSLSocketFactory(sSLSocketFactory21);
        java.net.InetAddress inetAddress30 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket32 = sSLSocketFactory21.createSocket("DIRECT", (-1), inetAddress30, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.net.BindException; message: Permission denied (Bind failed)");
        } catch (java.net.BindException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(responseCache6);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertNull(sSLSocketFactory11);
        org.junit.Assert.assertNull(cookieHandler13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNull(responseCache18);
        org.junit.Assert.assertNotNull(okAuthenticator19);
        org.junit.Assert.assertNull(hostnameVerifier20);
        org.junit.Assert.assertNotNull(sSLSocketFactory21);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(socket23);
        org.junit.Assert.assertEquals(socket23.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(socket24);
        org.junit.Assert.assertEquals(socket24.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(socket25);
        org.junit.Assert.assertEquals(socket25.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(okHttpClient27);
    }

    @Test
    public void test03188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03188");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector5 = null;
        okHttpClient4.proxySelector = proxySelector5;
        java.net.ProxySelector proxySelector7 = okHttpClient4.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient4.setHostnameVerifier(hostnameVerifier8);
        java.net.ProxySelector proxySelector10 = okHttpClient4.proxySelector;
        java.net.ResponseCache responseCache11 = okHttpClient4.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet12 = okHttpClient4.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler14 = okHttpClient13.getCookieHandler();
        boolean boolean15 = okHttpClient13.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient13.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool19 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int20 = connectionPool19.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient16.setConnectionPool(connectionPool19);
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector23 = null;
        okHttpClient22.proxySelector = proxySelector23;
        java.net.ProxySelector proxySelector25 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient22.setProxySelector(proxySelector25);
        java.net.ProxySelector proxySelector27 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient22.setProxySelector(proxySelector27);
        okHttpClient21.proxySelector = proxySelector27;
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = okHttpClient21.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient4.setHostnameVerifier(hostnameVerifier30);
        java.net.Proxy proxy32 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress33 = proxy32.address();
        com.squareup.okhttp.OkHttpClient okHttpClient34 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector35 = null;
        okHttpClient34.proxySelector = proxySelector35;
        com.squareup.okhttp.ConnectionPool connectionPool37 = okHttpClient34.connectionPool;
        com.squareup.okhttp.ConnectionPool connectionPool38 = okHttpClient34.getConnectionPool();
        boolean boolean39 = proxy32.equals((java.lang.Object) okHttpClient34);
        okHttpClient4.proxy = proxy32;
        com.squareup.okhttp.OkHttpClient okHttpClient41 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler42 = okHttpClient41.getCookieHandler();
        boolean boolean43 = okHttpClient41.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient44 = okHttpClient41.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier45 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient46 = okHttpClient44.setHostnameVerifier(hostnameVerifier45);
        java.net.ResponseCache responseCache47 = okHttpClient46.getResponseCache();
        java.net.ProxySelector proxySelector48 = okHttpClient46.getProxySelector();
        boolean boolean49 = proxy32.equals((java.lang.Object) proxySelector48);
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient0.setProxy(proxy32);
        java.net.CookieHandler cookieHandler51 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient52 = okHttpClient0.setCookieHandler(cookieHandler51);
        com.squareup.okhttp.OkHttpClient okHttpClient53 = okHttpClient52.copyWithDefaults();
        java.net.URL uRL54 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.HttpURLConnection httpURLConnection55 = okHttpClient52.open(uRL54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNull(proxySelector7);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNull(proxySelector10);
        org.junit.Assert.assertNull(responseCache11);
        org.junit.Assert.assertNotNull(routeSet12);
        org.junit.Assert.assertNull(cookieHandler14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNotNull(okHttpClient26);
// flaky:         org.junit.Assert.assertNull(proxySelector27);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNotNull(hostnameVerifier30);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNotNull(proxy32);
        org.junit.Assert.assertNull(socketAddress33);
        org.junit.Assert.assertNull(connectionPool37);
        org.junit.Assert.assertNull(connectionPool38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(cookieHandler42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(okHttpClient44);
        org.junit.Assert.assertNotNull(okHttpClient46);
        org.junit.Assert.assertNull(responseCache47);
// flaky:         org.junit.Assert.assertNull(proxySelector48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(okHttpClient50);
        org.junit.Assert.assertNotNull(okHttpClient52);
        org.junit.Assert.assertNotNull(okHttpClient53);
    }

    @Test
    public void test03189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03189");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setHostnameVerifier(hostnameVerifier4);
        java.net.ResponseCache responseCache6 = okHttpClient5.responseCache;
        java.net.CookieHandler cookieHandler7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient5.setCookieHandler(cookieHandler7);
        java.net.ResponseCache responseCache9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient5.setResponseCache(responseCache9);
        java.net.ResponseCache responseCache11 = okHttpClient5.getResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient12 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector13 = null;
        okHttpClient12.proxySelector = proxySelector13;
        java.net.ProxySelector proxySelector15 = okHttpClient12.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient12.setHostnameVerifier(hostnameVerifier16);
        java.net.ProxySelector proxySelector18 = okHttpClient12.proxySelector;
        java.net.ResponseCache responseCache19 = okHttpClient12.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet20 = okHttpClient12.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler22 = okHttpClient21.getCookieHandler();
        boolean boolean23 = okHttpClient21.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient21.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool27 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int28 = connectionPool27.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient24.setConnectionPool(connectionPool27);
        com.squareup.okhttp.OkHttpClient okHttpClient30 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector31 = null;
        okHttpClient30.proxySelector = proxySelector31;
        java.net.ProxySelector proxySelector33 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient30.setProxySelector(proxySelector33);
        java.net.ProxySelector proxySelector35 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient30.setProxySelector(proxySelector35);
        okHttpClient29.proxySelector = proxySelector35;
        javax.net.ssl.HostnameVerifier hostnameVerifier38 = okHttpClient29.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient12.setHostnameVerifier(hostnameVerifier38);
        com.squareup.okhttp.OkHttpClient okHttpClient40 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler41 = okHttpClient40.getCookieHandler();
        boolean boolean42 = okHttpClient40.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient43 = okHttpClient40.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool46 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int47 = connectionPool46.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient48 = okHttpClient43.setConnectionPool(connectionPool46);
        javax.net.ssl.HostnameVerifier hostnameVerifier49 = null;
        okHttpClient43.hostnameVerifier = hostnameVerifier49;
        com.squareup.okhttp.ConnectionPool connectionPool51 = okHttpClient43.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator52 = okHttpClient43.authenticator;
        okHttpClient12.authenticator = okAuthenticator52;
        okHttpClient5.authenticator = okAuthenticator52;
        java.net.CookieHandler cookieHandler55 = okHttpClient5.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient56 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier57 = okHttpClient56.hostnameVerifier;
        java.net.ResponseCache responseCache58 = okHttpClient56.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator59 = okHttpClient56.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient60 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler61 = okHttpClient60.getCookieHandler();
        boolean boolean62 = okHttpClient60.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient63 = okHttpClient60.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier64 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient65 = okHttpClient63.setHostnameVerifier(hostnameVerifier64);
        java.net.ResponseCache responseCache66 = okHttpClient65.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator67 = okHttpClient65.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient68 = okHttpClient56.setAuthenticator(okAuthenticator67);
        com.squareup.okhttp.OkHttpClient okHttpClient69 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler70 = okHttpClient69.getCookieHandler();
        boolean boolean71 = okHttpClient69.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator72 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient73 = okHttpClient69.setAuthenticator(okAuthenticator72);
        java.net.ResponseCache responseCache74 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient75 = okHttpClient69.setResponseCache(responseCache74);
        com.squareup.okhttp.ConnectionPool connectionPool78 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool78.evictAll();
        okHttpClient69.connectionPool = connectionPool78;
        connectionPool78.evictAll();
        int int82 = connectionPool78.getSpdyConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient83 = okHttpClient56.setConnectionPool(connectionPool78);
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache84 = okHttpClient56.okResponseCache();
        java.net.Proxy proxy85 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient86 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler87 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient88 = okHttpClient86.setCookieHandler(cookieHandler87);
        com.squareup.okhttp.OkHttpClient okHttpClient90 = okHttpClient86.setFollowProtocolRedirects(true);
        boolean boolean91 = proxy85.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient92 = okHttpClient56.setProxy(proxy85);
        com.squareup.okhttp.ConnectionPool connectionPool93 = okHttpClient92.getConnectionPool();
        okHttpClient5.connectionPool = connectionPool93;
        int int95 = connectionPool93.getConnectionCount();
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(responseCache6);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertNull(responseCache11);
        org.junit.Assert.assertNull(proxySelector15);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNull(proxySelector18);
        org.junit.Assert.assertNull(responseCache19);
        org.junit.Assert.assertNotNull(routeSet20);
        org.junit.Assert.assertNull(cookieHandler22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(okHttpClient29);
        org.junit.Assert.assertNotNull(okHttpClient34);
// flaky:         org.junit.Assert.assertNull(proxySelector35);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNotNull(hostnameVerifier38);
        org.junit.Assert.assertNotNull(okHttpClient39);
        org.junit.Assert.assertNull(cookieHandler41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(okHttpClient43);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(okHttpClient48);
        org.junit.Assert.assertNotNull(connectionPool51);
        org.junit.Assert.assertNotNull(okAuthenticator52);
        org.junit.Assert.assertNull(cookieHandler55);
        org.junit.Assert.assertNull(hostnameVerifier57);
        org.junit.Assert.assertNull(responseCache58);
        org.junit.Assert.assertNull(okAuthenticator59);
        org.junit.Assert.assertNull(cookieHandler61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(okHttpClient63);
        org.junit.Assert.assertNotNull(okHttpClient65);
        org.junit.Assert.assertNull(responseCache66);
        org.junit.Assert.assertNotNull(okAuthenticator67);
        org.junit.Assert.assertNotNull(okHttpClient68);
        org.junit.Assert.assertNull(cookieHandler70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(okHttpClient73);
        org.junit.Assert.assertNotNull(okHttpClient75);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertNotNull(okHttpClient83);
        org.junit.Assert.assertNull(okResponseCache84);
        org.junit.Assert.assertNotNull(proxy85);
        org.junit.Assert.assertNotNull(okHttpClient88);
        org.junit.Assert.assertNotNull(okHttpClient90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(okHttpClient92);
        org.junit.Assert.assertNotNull(connectionPool93);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 0 + "'", int95 == 0);
    }

    @Test
    public void test03190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03190");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        java.net.ResponseCache responseCache5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient0.setResponseCache(responseCache5);
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool9.evictAll();
        okHttpClient0.connectionPool = connectionPool9;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory12 = okHttpClient0.sslSocketFactory;
        java.net.ResponseCache responseCache13 = null;
        okHttpClient0.responseCache = responseCache13;
        java.net.ProxySelector proxySelector15 = okHttpClient0.getProxySelector();
        com.squareup.okhttp.ConnectionPool connectionPool18 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) 0);
        okHttpClient0.connectionPool = connectionPool18;
        okHttpClient0.followProtocolRedirects = true;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler23 = okHttpClient22.getCookieHandler();
        boolean boolean24 = okHttpClient22.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient22.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet26 = okHttpClient25.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient25.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient28 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector29 = null;
        okHttpClient28.proxySelector = proxySelector29;
        java.net.ProxySelector proxySelector31 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient28.setProxySelector(proxySelector31);
        java.net.ProxySelector proxySelector33 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient28.setProxySelector(proxySelector33);
        java.net.ProxySelector.setDefault(proxySelector33);
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient27.setProxySelector(proxySelector33);
        okHttpClient0.proxySelector = proxySelector33;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory38 = okHttpClient0.sslSocketFactory;
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient6);
        org.junit.Assert.assertNull(sSLSocketFactory12);
        org.junit.Assert.assertNull(proxySelector15);
        org.junit.Assert.assertNull(cookieHandler23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(okHttpClient25);
        org.junit.Assert.assertNotNull(routeSet26);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNotNull(okHttpClient32);
// flaky:         org.junit.Assert.assertNull(proxySelector33);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNull(sSLSocketFactory38);
    }

    @Test
    public void test03191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03191");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet4 = okHttpClient3.failedRoutes;
        boolean boolean5 = okHttpClient3.getFollowProtocolRedirects();
        java.net.Proxy proxy6 = java.net.Proxy.NO_PROXY;
        okHttpClient3.proxy = proxy6;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler9 = okHttpClient8.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray10 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet11 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet11, routeArray10);
        okHttpClient8.failedRoutes = routeSet11;
        java.net.Proxy proxy14 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient15.setCookieHandler(cookieHandler16);
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient15.setFollowProtocolRedirects(true);
        boolean boolean20 = proxy14.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient8.setProxy(proxy14);
        java.net.SocketAddress socketAddress22 = proxy14.address();
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient3.setProxy(proxy14);
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient3.setFollowProtocolRedirects(false);
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient3.copyWithDefaults();
        boolean boolean27 = okHttpClient3.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient3.copyWithDefaults();
        java.net.CookieHandler cookieHandler29 = okHttpClient28.getCookieHandler();
        okHttpClient28.followProtocolRedirects = true;
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertNotNull(routeSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(proxy6);
        org.junit.Assert.assertNull(cookieHandler9);
        org.junit.Assert.assertNotNull(routeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(proxy14);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNull(socketAddress22);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertNotNull(okHttpClient25);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNull(cookieHandler29);
    }

    @Test
    public void test03192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03192");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setHostnameVerifier(hostnameVerifier4);
        java.net.ProxySelector proxySelector6 = okHttpClient0.proxySelector;
        java.net.ResponseCache responseCache7 = okHttpClient0.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet8 = okHttpClient0.failedRoutes;
        com.squareup.okhttp.ConnectionPool connectionPool11 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool11.evictAll();
        com.squareup.okhttp.Address address13 = null;
        com.squareup.okhttp.Connection connection14 = connectionPool11.get(address13);
        okHttpClient0.connectionPool = connectionPool11;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient0.setFollowProtocolRedirects(true);
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient18.setFollowProtocolRedirects(true);
        com.squareup.okhttp.OkHttpClient okHttpClient21 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler22 = okHttpClient21.getCookieHandler();
        boolean boolean23 = okHttpClient21.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient21.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier25 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient24.setHostnameVerifier(hostnameVerifier25);
        java.net.ResponseCache responseCache27 = okHttpClient26.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator28 = okHttpClient26.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier29 = okHttpClient26.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory30 = okHttpClient26.getSslSocketFactory();
        java.lang.String[] strArray31 = sSLSocketFactory30.getSupportedCipherSuites();
        java.lang.String[] strArray32 = sSLSocketFactory30.getDefaultCipherSuites();
        java.lang.String[] strArray33 = sSLSocketFactory30.getDefaultCipherSuites();
        java.net.Socket socket34 = sSLSocketFactory30.createSocket();
        okHttpClient18.sslSocketFactory = sSLSocketFactory30;
        java.net.Socket socket36 = sSLSocketFactory30.createSocket();
        com.squareup.okhttp.OkHttpClient okHttpClient37 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler38 = okHttpClient37.getCookieHandler();
        boolean boolean39 = okHttpClient37.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient40 = okHttpClient37.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool43 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int44 = connectionPool43.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient45 = okHttpClient40.setConnectionPool(connectionPool43);
        com.squareup.okhttp.OkHttpClient okHttpClient46 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler47 = okHttpClient46.getCookieHandler();
        boolean boolean48 = okHttpClient46.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient49 = okHttpClient46.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool52 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int53 = connectionPool52.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient54 = okHttpClient49.setConnectionPool(connectionPool52);
        com.squareup.okhttp.OkHttpClient okHttpClient55 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector56 = null;
        okHttpClient55.proxySelector = proxySelector56;
        java.net.ProxySelector proxySelector58 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient59 = okHttpClient55.setProxySelector(proxySelector58);
        java.net.ProxySelector proxySelector60 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient61 = okHttpClient55.setProxySelector(proxySelector60);
        okHttpClient54.proxySelector = proxySelector60;
        com.squareup.okhttp.OkHttpClient okHttpClient63 = okHttpClient40.setProxySelector(proxySelector60);
        java.net.CookieHandler cookieHandler64 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient65 = okHttpClient63.setCookieHandler(cookieHandler64);
        com.squareup.okhttp.OkHttpClient okHttpClient66 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler67 = okHttpClient66.getCookieHandler();
        boolean boolean68 = okHttpClient66.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator69 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient70 = okHttpClient66.setAuthenticator(okAuthenticator69);
        java.net.ResponseCache responseCache71 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient72 = okHttpClient66.setResponseCache(responseCache71);
        com.squareup.okhttp.ConnectionPool connectionPool75 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool75.evictAll();
        okHttpClient66.connectionPool = connectionPool75;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory78 = okHttpClient66.sslSocketFactory;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory79 = null;
        okHttpClient66.sslSocketFactory = sSLSocketFactory79;
        java.net.ProxySelector proxySelector81 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient82 = okHttpClient66.setProxySelector(proxySelector81);
        com.squareup.okhttp.OkHttpClient okHttpClient83 = okHttpClient65.setProxySelector(proxySelector81);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory84 = okHttpClient83.sslSocketFactory;
        java.lang.String[] strArray85 = sSLSocketFactory84.getSupportedCipherSuites();
        java.net.Socket socket86 = sSLSocketFactory84.createSocket();
        java.io.InputStream inputStream87 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket89 = sSLSocketFactory30.createSocket(socket86, inputStream87, false);
            org.junit.Assert.fail("Expected exception of type java.net.SocketException; message: Underlying socket is not connected");
        } catch (java.net.SocketException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(proxySelector6);
        org.junit.Assert.assertNull(responseCache7);
        org.junit.Assert.assertNotNull(routeSet8);
        org.junit.Assert.assertNull(connection14);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNull(cookieHandler22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNull(responseCache27);
        org.junit.Assert.assertNotNull(okAuthenticator28);
        org.junit.Assert.assertNull(hostnameVerifier29);
        org.junit.Assert.assertNotNull(sSLSocketFactory30);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(socket34);
        org.junit.Assert.assertEquals(socket34.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(socket36);
        org.junit.Assert.assertEquals(socket36.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNull(cookieHandler38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(okHttpClient40);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(okHttpClient45);
        org.junit.Assert.assertNull(cookieHandler47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(okHttpClient49);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(okHttpClient54);
        org.junit.Assert.assertNotNull(okHttpClient59);
// flaky:         org.junit.Assert.assertNull(proxySelector60);
        org.junit.Assert.assertNotNull(okHttpClient61);
        org.junit.Assert.assertNotNull(okHttpClient63);
        org.junit.Assert.assertNotNull(okHttpClient65);
        org.junit.Assert.assertNull(cookieHandler67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(okHttpClient70);
        org.junit.Assert.assertNotNull(okHttpClient72);
        org.junit.Assert.assertNull(sSLSocketFactory78);
// flaky:         org.junit.Assert.assertNull(proxySelector81);
        org.junit.Assert.assertNotNull(okHttpClient82);
        org.junit.Assert.assertNotNull(okHttpClient83);
        org.junit.Assert.assertNotNull(sSLSocketFactory84);
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertNotNull(socket86);
        org.junit.Assert.assertEquals(socket86.toString(), "Socket[unconnected]");
    }

    @Test
    public void test03193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03193");
        com.squareup.okhttp.ConnectionPool connectionPool2 = new com.squareup.okhttp.ConnectionPool(0, (long) (short) 100);
        int int3 = connectionPool2.getSpdyConnectionCount();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test03194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03194");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setHostnameVerifier(hostnameVerifier4);
        java.net.ProxySelector proxySelector6 = okHttpClient0.proxySelector;
        java.net.ResponseCache responseCache7 = okHttpClient0.getResponseCache();
        java.net.CookieHandler cookieHandler8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient0.setCookieHandler(cookieHandler8);
        com.squareup.okhttp.OkAuthenticator okAuthenticator10 = okHttpClient0.getAuthenticator();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler12 = okHttpClient11.getCookieHandler();
        boolean boolean13 = okHttpClient11.getFollowProtocolRedirects();
        java.net.ProxySelector proxySelector14 = okHttpClient11.proxySelector;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector16 = null;
        okHttpClient15.proxySelector = proxySelector16;
        java.net.ProxySelector proxySelector18 = okHttpClient15.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier19 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient15.setHostnameVerifier(hostnameVerifier19);
        java.net.ProxySelector proxySelector21 = okHttpClient15.proxySelector;
        java.net.ResponseCache responseCache22 = okHttpClient15.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet23 = okHttpClient15.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler25 = okHttpClient24.getCookieHandler();
        boolean boolean26 = okHttpClient24.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient24.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool30 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int31 = connectionPool30.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient27.setConnectionPool(connectionPool30);
        com.squareup.okhttp.OkHttpClient okHttpClient33 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector34 = null;
        okHttpClient33.proxySelector = proxySelector34;
        java.net.ProxySelector proxySelector36 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient33.setProxySelector(proxySelector36);
        java.net.ProxySelector proxySelector38 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient33.setProxySelector(proxySelector38);
        okHttpClient32.proxySelector = proxySelector38;
        javax.net.ssl.HostnameVerifier hostnameVerifier41 = okHttpClient32.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient15.setHostnameVerifier(hostnameVerifier41);
        java.net.Proxy proxy43 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress44 = proxy43.address();
        com.squareup.okhttp.OkHttpClient okHttpClient45 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector46 = null;
        okHttpClient45.proxySelector = proxySelector46;
        com.squareup.okhttp.ConnectionPool connectionPool48 = okHttpClient45.connectionPool;
        com.squareup.okhttp.ConnectionPool connectionPool49 = okHttpClient45.getConnectionPool();
        boolean boolean50 = proxy43.equals((java.lang.Object) okHttpClient45);
        okHttpClient15.proxy = proxy43;
        com.squareup.okhttp.OkHttpClient okHttpClient52 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler53 = okHttpClient52.getCookieHandler();
        boolean boolean54 = okHttpClient52.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient55 = okHttpClient52.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier56 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient57 = okHttpClient55.setHostnameVerifier(hostnameVerifier56);
        java.net.ResponseCache responseCache58 = okHttpClient57.getResponseCache();
        java.net.ProxySelector proxySelector59 = okHttpClient57.getProxySelector();
        boolean boolean60 = proxy43.equals((java.lang.Object) proxySelector59);
        com.squareup.okhttp.OkHttpClient okHttpClient61 = okHttpClient11.setProxy(proxy43);
        com.squareup.okhttp.OkHttpClient okHttpClient62 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler63 = okHttpClient62.getCookieHandler();
        boolean boolean64 = okHttpClient62.getFollowProtocolRedirects();
        java.net.ProxySelector proxySelector65 = okHttpClient62.proxySelector;
        com.squareup.okhttp.ConnectionPool connectionPool68 = new com.squareup.okhttp.ConnectionPool((int) '4', (long) 100);
        okHttpClient62.connectionPool = connectionPool68;
        com.squareup.okhttp.OkHttpClient okHttpClient70 = okHttpClient61.setConnectionPool(connectionPool68);
        okHttpClient0.connectionPool = connectionPool68;
        com.squareup.okhttp.OkHttpClient okHttpClient72 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler73 = okHttpClient72.getCookieHandler();
        boolean boolean74 = okHttpClient72.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient75 = okHttpClient72.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet76 = okHttpClient75.failedRoutes;
        boolean boolean77 = okHttpClient75.getFollowProtocolRedirects();
        java.net.ResponseCache responseCache78 = null;
        okHttpClient75.responseCache = responseCache78;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory80 = okHttpClient75.getSslSocketFactory();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory81 = okHttpClient75.sslSocketFactory;
        com.squareup.okhttp.OkHttpClient okHttpClient82 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory81);
        com.squareup.okhttp.ConnectionPool connectionPool83 = okHttpClient82.getConnectionPool();
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(proxySelector6);
        org.junit.Assert.assertNull(responseCache7);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNull(okAuthenticator10);
        org.junit.Assert.assertNull(cookieHandler12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(proxySelector14);
        org.junit.Assert.assertNull(proxySelector18);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNull(proxySelector21);
        org.junit.Assert.assertNull(responseCache22);
        org.junit.Assert.assertNotNull(routeSet23);
        org.junit.Assert.assertNull(cookieHandler25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertNotNull(okHttpClient37);
// flaky:         org.junit.Assert.assertNull(proxySelector38);
        org.junit.Assert.assertNotNull(okHttpClient39);
        org.junit.Assert.assertNotNull(hostnameVerifier41);
        org.junit.Assert.assertNotNull(okHttpClient42);
        org.junit.Assert.assertNotNull(proxy43);
        org.junit.Assert.assertNull(socketAddress44);
        org.junit.Assert.assertNull(connectionPool48);
        org.junit.Assert.assertNull(connectionPool49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(cookieHandler53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(okHttpClient55);
        org.junit.Assert.assertNotNull(okHttpClient57);
        org.junit.Assert.assertNull(responseCache58);
// flaky:         org.junit.Assert.assertNull(proxySelector59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(okHttpClient61);
        org.junit.Assert.assertNull(cookieHandler63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNull(proxySelector65);
        org.junit.Assert.assertNotNull(okHttpClient70);
        org.junit.Assert.assertNull(cookieHandler73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(okHttpClient75);
        org.junit.Assert.assertNotNull(routeSet76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(sSLSocketFactory80);
        org.junit.Assert.assertNotNull(sSLSocketFactory81);
        org.junit.Assert.assertNotNull(okHttpClient82);
        org.junit.Assert.assertNotNull(connectionPool83);
    }

    @Test
    public void test03195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03195");
        com.squareup.okhttp.ConnectionPool connectionPool2 = new com.squareup.okhttp.ConnectionPool((int) (byte) 10, (long) (short) 1);
        connectionPool2.evictAll();
    }

    @Test
    public void test03196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03196");
        com.squareup.okhttp.ConnectionPool connectionPool2 = new com.squareup.okhttp.ConnectionPool((int) '4', (long) (byte) 0);
        connectionPool2.evictAll();
        int int4 = connectionPool2.getHttpConnectionCount();
        connectionPool2.evictAll();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    }

    @Test
    public void test03197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03197");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient3.setHostnameVerifier(hostnameVerifier4);
        java.net.ResponseCache responseCache6 = okHttpClient5.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator7 = okHttpClient5.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = okHttpClient5.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory9 = okHttpClient5.getSslSocketFactory();
        java.lang.String[] strArray10 = sSLSocketFactory9.getSupportedCipherSuites();
        java.lang.String[] strArray11 = sSLSocketFactory9.getSupportedCipherSuites();
        java.net.Socket socket12 = sSLSocketFactory9.createSocket();
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler14 = okHttpClient13.getCookieHandler();
        boolean boolean15 = okHttpClient13.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient13.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier17 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient16.setHostnameVerifier(hostnameVerifier17);
        java.net.ResponseCache responseCache19 = okHttpClient18.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator20 = okHttpClient18.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier21 = okHttpClient18.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory22 = okHttpClient18.getSslSocketFactory();
        java.lang.String[] strArray23 = sSLSocketFactory22.getSupportedCipherSuites();
        java.net.Socket socket24 = sSLSocketFactory22.createSocket();
        java.io.InputStream inputStream25 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket27 = sSLSocketFactory9.createSocket(socket24, inputStream25, false);
            org.junit.Assert.fail("Expected exception of type java.net.SocketException; message: Underlying socket is not connected");
        } catch (java.net.SocketException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(responseCache6);
        org.junit.Assert.assertNotNull(okAuthenticator7);
        org.junit.Assert.assertNull(hostnameVerifier8);
        org.junit.Assert.assertNotNull(sSLSocketFactory9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(socket12);
        org.junit.Assert.assertEquals(socket12.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNull(cookieHandler14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNull(responseCache19);
        org.junit.Assert.assertNotNull(okAuthenticator20);
        org.junit.Assert.assertNull(hostnameVerifier21);
        org.junit.Assert.assertNotNull(sSLSocketFactory22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(socket24);
        org.junit.Assert.assertEquals(socket24.toString(), "Socket[unconnected]");
    }

    @Test
    public void test03198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03198");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier6 = okHttpClient0.hostnameVerifier;
        java.net.ProxySelector proxySelector7 = java.net.ProxySelector.getDefault();
        okHttpClient0.proxySelector = proxySelector7;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.OkAuthenticator okAuthenticator10 = okHttpClient9.authenticator;
        com.squareup.okhttp.ConnectionPool connectionPool11 = null;
        okHttpClient9.connectionPool = connectionPool11;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector14 = null;
        okHttpClient13.proxySelector = proxySelector14;
        com.squareup.okhttp.ConnectionPool connectionPool16 = okHttpClient13.connectionPool;
        com.squareup.okhttp.ConnectionPool connectionPool17 = okHttpClient13.getConnectionPool();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache18 = okHttpClient13.okResponseCache();
        java.net.ResponseCache responseCache19 = null;
        okHttpClient13.responseCache = responseCache19;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler22 = okHttpClient21.getCookieHandler();
        boolean boolean23 = okHttpClient21.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient21.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier25 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient24.setHostnameVerifier(hostnameVerifier25);
        java.net.ResponseCache responseCache27 = okHttpClient26.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator28 = okHttpClient26.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier29 = okHttpClient26.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory30 = okHttpClient26.getSslSocketFactory();
        java.lang.String[] strArray31 = sSLSocketFactory30.getSupportedCipherSuites();
        java.lang.String[] strArray32 = sSLSocketFactory30.getDefaultCipherSuites();
        java.lang.String[] strArray33 = sSLSocketFactory30.getDefaultCipherSuites();
        java.lang.String[] strArray34 = sSLSocketFactory30.getSupportedCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient13.setSSLSocketFactory(sSLSocketFactory30);
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient9.setSSLSocketFactory(sSLSocketFactory30);
        java.net.Proxy proxy37 = okHttpClient36.proxy;
        java.net.CookieHandler cookieHandler38 = okHttpClient36.getCookieHandler();
        com.squareup.okhttp.ConnectionPool connectionPool41 = new com.squareup.okhttp.ConnectionPool((int) (short) 0, (long) (short) -1);
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient36.setConnectionPool(connectionPool41);
        java.net.ProxySelector proxySelector43 = okHttpClient42.getProxySelector();
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(hostnameVerifier6);
// flaky:         org.junit.Assert.assertNull(proxySelector7);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNotNull(okAuthenticator10);
        org.junit.Assert.assertNull(connectionPool16);
        org.junit.Assert.assertNull(connectionPool17);
        org.junit.Assert.assertNull(okResponseCache18);
        org.junit.Assert.assertNull(cookieHandler22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNull(responseCache27);
        org.junit.Assert.assertNotNull(okAuthenticator28);
        org.junit.Assert.assertNull(hostnameVerifier29);
        org.junit.Assert.assertNotNull(sSLSocketFactory30);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNull(proxy37);
        org.junit.Assert.assertNull(cookieHandler38);
        org.junit.Assert.assertNotNull(okHttpClient42);
// flaky:         org.junit.Assert.assertNull(proxySelector43);
    }

    @Test
    public void test03199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03199");
        java.net.Proxy proxy0 = java.net.Proxy.NO_PROXY;
        java.lang.String str1 = proxy0.toString();
        boolean boolean3 = proxy0.equals((java.lang.Object) 1.0d);
        com.squareup.okhttp.OkHttpClient okHttpClient4 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector5 = null;
        okHttpClient4.proxySelector = proxySelector5;
        java.net.ProxySelector proxySelector7 = okHttpClient4.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient4.setHostnameVerifier(hostnameVerifier8);
        java.net.ResponseCache responseCache10 = okHttpClient9.responseCache;
        com.squareup.okhttp.ConnectionPool connectionPool13 = new com.squareup.okhttp.ConnectionPool((int) '4', 100L);
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient9.setConnectionPool(connectionPool13);
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector16 = null;
        okHttpClient15.proxySelector = proxySelector16;
        java.net.ProxySelector proxySelector18 = okHttpClient15.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier19 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient15.setHostnameVerifier(hostnameVerifier19);
        java.net.ProxySelector proxySelector21 = okHttpClient15.proxySelector;
        java.net.ResponseCache responseCache22 = okHttpClient15.getResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient23 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler24 = okHttpClient23.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray25 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet26 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet26, routeArray25);
        okHttpClient23.failedRoutes = routeSet26;
        java.net.Proxy proxy29 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient30 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler31 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient30.setCookieHandler(cookieHandler31);
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient30.setFollowProtocolRedirects(true);
        boolean boolean35 = proxy29.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient23.setProxy(proxy29);
        okHttpClient15.proxy = proxy29;
        com.squareup.okhttp.OkHttpClient okHttpClient38 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler39 = okHttpClient38.getCookieHandler();
        boolean boolean40 = okHttpClient38.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient41 = okHttpClient38.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier42 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient43 = okHttpClient41.setHostnameVerifier(hostnameVerifier42);
        boolean boolean44 = proxy29.equals((java.lang.Object) okHttpClient41);
        com.squareup.okhttp.OkHttpClient okHttpClient45 = okHttpClient14.setProxy(proxy29);
        boolean boolean46 = okHttpClient14.followProtocolRedirects;
        java.net.CookieHandler cookieHandler47 = okHttpClient14.cookieHandler;
        boolean boolean48 = proxy0.equals((java.lang.Object) okHttpClient14);
        java.lang.String str49 = proxy0.toString();
        com.squareup.okhttp.OkHttpClient okHttpClient50 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler51 = okHttpClient50.getCookieHandler();
        boolean boolean52 = okHttpClient50.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator53 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient54 = okHttpClient50.setAuthenticator(okAuthenticator53);
        com.squareup.okhttp.OkHttpClient okHttpClient55 = okHttpClient50.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier56 = okHttpClient50.hostnameVerifier;
        java.net.ProxySelector proxySelector57 = java.net.ProxySelector.getDefault();
        okHttpClient50.proxySelector = proxySelector57;
        com.squareup.okhttp.OkHttpClient okHttpClient59 = okHttpClient50.copyWithDefaults();
        com.squareup.okhttp.OkAuthenticator okAuthenticator60 = okHttpClient59.authenticator;
        com.squareup.okhttp.ConnectionPool connectionPool61 = null;
        okHttpClient59.connectionPool = connectionPool61;
        com.squareup.okhttp.OkHttpClient okHttpClient63 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector64 = null;
        okHttpClient63.proxySelector = proxySelector64;
        com.squareup.okhttp.ConnectionPool connectionPool66 = okHttpClient63.connectionPool;
        com.squareup.okhttp.ConnectionPool connectionPool67 = okHttpClient63.getConnectionPool();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache68 = okHttpClient63.okResponseCache();
        java.net.ResponseCache responseCache69 = null;
        okHttpClient63.responseCache = responseCache69;
        com.squareup.okhttp.OkHttpClient okHttpClient71 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler72 = okHttpClient71.getCookieHandler();
        boolean boolean73 = okHttpClient71.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient74 = okHttpClient71.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier75 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient76 = okHttpClient74.setHostnameVerifier(hostnameVerifier75);
        java.net.ResponseCache responseCache77 = okHttpClient76.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator78 = okHttpClient76.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier79 = okHttpClient76.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory80 = okHttpClient76.getSslSocketFactory();
        java.lang.String[] strArray81 = sSLSocketFactory80.getSupportedCipherSuites();
        java.lang.String[] strArray82 = sSLSocketFactory80.getDefaultCipherSuites();
        java.lang.String[] strArray83 = sSLSocketFactory80.getDefaultCipherSuites();
        java.lang.String[] strArray84 = sSLSocketFactory80.getSupportedCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient85 = okHttpClient63.setSSLSocketFactory(sSLSocketFactory80);
        com.squareup.okhttp.OkHttpClient okHttpClient86 = okHttpClient59.setSSLSocketFactory(sSLSocketFactory80);
        boolean boolean87 = proxy0.equals((java.lang.Object) okHttpClient59);
        boolean boolean88 = okHttpClient59.getFollowProtocolRedirects();
        org.junit.Assert.assertNotNull(proxy0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "DIRECT" + "'", str1, "DIRECT");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(proxySelector7);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNull(responseCache10);
        org.junit.Assert.assertNotNull(okHttpClient14);
        org.junit.Assert.assertNull(proxySelector18);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNull(proxySelector21);
        org.junit.Assert.assertNull(responseCache22);
        org.junit.Assert.assertNull(cookieHandler24);
        org.junit.Assert.assertNotNull(routeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(proxy29);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNull(cookieHandler39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(okHttpClient41);
        org.junit.Assert.assertNotNull(okHttpClient43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(okHttpClient45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(cookieHandler47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "DIRECT" + "'", str49, "DIRECT");
        org.junit.Assert.assertNull(cookieHandler51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(okHttpClient54);
        org.junit.Assert.assertNotNull(okHttpClient55);
        org.junit.Assert.assertNull(hostnameVerifier56);
// flaky:         org.junit.Assert.assertNull(proxySelector57);
        org.junit.Assert.assertNotNull(okHttpClient59);
        org.junit.Assert.assertNotNull(okAuthenticator60);
        org.junit.Assert.assertNull(connectionPool66);
        org.junit.Assert.assertNull(connectionPool67);
        org.junit.Assert.assertNull(okResponseCache68);
        org.junit.Assert.assertNull(cookieHandler72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(okHttpClient74);
        org.junit.Assert.assertNotNull(okHttpClient76);
        org.junit.Assert.assertNull(responseCache77);
        org.junit.Assert.assertNotNull(okAuthenticator78);
        org.junit.Assert.assertNull(hostnameVerifier79);
        org.junit.Assert.assertNotNull(sSLSocketFactory80);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertNotNull(okHttpClient85);
        org.junit.Assert.assertNotNull(okHttpClient86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
    }

    @Test
    public void test03200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03200");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setHostnameVerifier(hostnameVerifier4);
        java.net.ProxySelector proxySelector6 = okHttpClient0.proxySelector;
        java.net.ResponseCache responseCache7 = okHttpClient0.getResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler9 = okHttpClient8.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray10 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet11 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet11, routeArray10);
        okHttpClient8.failedRoutes = routeSet11;
        java.net.Proxy proxy14 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient15.setCookieHandler(cookieHandler16);
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient15.setFollowProtocolRedirects(true);
        boolean boolean20 = proxy14.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient8.setProxy(proxy14);
        okHttpClient0.proxy = proxy14;
        com.squareup.okhttp.OkHttpClient okHttpClient23 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler24 = okHttpClient23.getCookieHandler();
        boolean boolean25 = okHttpClient23.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient23.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier27 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient26.setHostnameVerifier(hostnameVerifier27);
        boolean boolean29 = proxy14.equals((java.lang.Object) okHttpClient26);
        com.squareup.okhttp.OkHttpClient okHttpClient30 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector31 = null;
        okHttpClient30.proxySelector = proxySelector31;
        java.net.ProxySelector proxySelector33 = okHttpClient30.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier34 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient30.setHostnameVerifier(hostnameVerifier34);
        java.net.ProxySelector proxySelector36 = okHttpClient30.proxySelector;
        java.net.CookieHandler cookieHandler37 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient30.setCookieHandler(cookieHandler37);
        com.squareup.okhttp.OkAuthenticator okAuthenticator39 = null;
        okHttpClient38.authenticator = okAuthenticator39;
        boolean boolean41 = proxy14.equals((java.lang.Object) okAuthenticator39);
        com.squareup.okhttp.OkHttpClient okHttpClient42 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler43 = okHttpClient42.getCookieHandler();
        boolean boolean44 = okHttpClient42.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator45 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient46 = okHttpClient42.setAuthenticator(okAuthenticator45);
        java.net.ResponseCache responseCache47 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient48 = okHttpClient42.setResponseCache(responseCache47);
        com.squareup.okhttp.ConnectionPool connectionPool51 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool51.evictAll();
        okHttpClient42.connectionPool = connectionPool51;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory54 = okHttpClient42.sslSocketFactory;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory55 = null;
        okHttpClient42.sslSocketFactory = sSLSocketFactory55;
        java.net.ProxySelector proxySelector57 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient58 = okHttpClient42.setProxySelector(proxySelector57);
        boolean boolean59 = proxy14.equals((java.lang.Object) okHttpClient42);
        com.squareup.okhttp.OkHttpClient okHttpClient60 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier61 = okHttpClient60.hostnameVerifier;
        java.net.ResponseCache responseCache62 = okHttpClient60.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator63 = okHttpClient60.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient64 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler65 = okHttpClient64.getCookieHandler();
        boolean boolean66 = okHttpClient64.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient67 = okHttpClient64.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier68 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient69 = okHttpClient67.setHostnameVerifier(hostnameVerifier68);
        java.net.ResponseCache responseCache70 = okHttpClient69.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator71 = okHttpClient69.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier72 = okHttpClient69.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory73 = okHttpClient69.getSslSocketFactory();
        java.lang.String[] strArray74 = sSLSocketFactory73.getSupportedCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient75 = okHttpClient60.setSSLSocketFactory(sSLSocketFactory73);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory76 = okHttpClient60.getSslSocketFactory();
        java.lang.String[] strArray77 = sSLSocketFactory76.getDefaultCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient78 = okHttpClient42.setSSLSocketFactory(sSLSocketFactory76);
        java.net.Socket socket79 = sSLSocketFactory76.createSocket();
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(proxySelector6);
        org.junit.Assert.assertNull(responseCache7);
        org.junit.Assert.assertNull(cookieHandler9);
        org.junit.Assert.assertNotNull(routeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(proxy14);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNull(cookieHandler24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(proxySelector33);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNull(proxySelector36);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(cookieHandler43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(okHttpClient46);
        org.junit.Assert.assertNotNull(okHttpClient48);
        org.junit.Assert.assertNull(sSLSocketFactory54);
// flaky:         org.junit.Assert.assertNull(proxySelector57);
        org.junit.Assert.assertNotNull(okHttpClient58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(hostnameVerifier61);
        org.junit.Assert.assertNull(responseCache62);
        org.junit.Assert.assertNull(okAuthenticator63);
        org.junit.Assert.assertNull(cookieHandler65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(okHttpClient67);
        org.junit.Assert.assertNotNull(okHttpClient69);
        org.junit.Assert.assertNull(responseCache70);
        org.junit.Assert.assertNotNull(okAuthenticator71);
        org.junit.Assert.assertNull(hostnameVerifier72);
        org.junit.Assert.assertNotNull(sSLSocketFactory73);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertNotNull(okHttpClient75);
        org.junit.Assert.assertNotNull(sSLSocketFactory76);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(okHttpClient78);
        org.junit.Assert.assertNotNull(socket79);
        org.junit.Assert.assertEquals(socket79.toString(), "Socket[unconnected]");
    }

    @Test
    public void test03201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03201");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet4 = okHttpClient3.failedRoutes;
        boolean boolean5 = okHttpClient3.getFollowProtocolRedirects();
        java.net.Proxy proxy6 = java.net.Proxy.NO_PROXY;
        okHttpClient3.proxy = proxy6;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler9 = okHttpClient8.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray10 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet11 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet11, routeArray10);
        okHttpClient8.failedRoutes = routeSet11;
        java.net.Proxy proxy14 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient15.setCookieHandler(cookieHandler16);
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient15.setFollowProtocolRedirects(true);
        boolean boolean20 = proxy14.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient8.setProxy(proxy14);
        java.net.SocketAddress socketAddress22 = proxy14.address();
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient3.setProxy(proxy14);
        okHttpClient23.followProtocolRedirects = false;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector27 = null;
        okHttpClient26.proxySelector = proxySelector27;
        java.net.ProxySelector proxySelector29 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient30 = okHttpClient26.setProxySelector(proxySelector29);
        com.squareup.okhttp.OkHttpClient okHttpClient31 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector32 = null;
        okHttpClient31.proxySelector = proxySelector32;
        java.net.ProxySelector proxySelector34 = okHttpClient31.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier35 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient31.setHostnameVerifier(hostnameVerifier35);
        com.squareup.okhttp.OkHttpClient okHttpClient37 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector38 = null;
        okHttpClient37.proxySelector = proxySelector38;
        java.net.ProxySelector proxySelector40 = okHttpClient37.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier41 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient37.setHostnameVerifier(hostnameVerifier41);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory43 = okHttpClient42.sslSocketFactory;
        com.squareup.okhttp.OkHttpClient okHttpClient44 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler45 = okHttpClient44.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray46 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet47 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet47, routeArray46);
        okHttpClient44.failedRoutes = routeSet47;
        okHttpClient42.failedRoutes = routeSet47;
        okHttpClient31.failedRoutes = routeSet47;
        okHttpClient26.failedRoutes = routeSet47;
        okHttpClient23.failedRoutes = routeSet47;
        java.net.CookieHandler cookieHandler54 = okHttpClient23.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient55 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler56 = okHttpClient55.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray57 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet58 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet58, routeArray57);
        okHttpClient55.failedRoutes = routeSet58;
        java.net.Proxy proxy61 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient62 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler63 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient64 = okHttpClient62.setCookieHandler(cookieHandler63);
        com.squareup.okhttp.OkHttpClient okHttpClient66 = okHttpClient62.setFollowProtocolRedirects(true);
        boolean boolean67 = proxy61.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient68 = okHttpClient55.setProxy(proxy61);
        com.squareup.okhttp.OkHttpClient okHttpClient69 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler70 = okHttpClient69.getCookieHandler();
        boolean boolean71 = okHttpClient69.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient72 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler73 = okHttpClient72.getCookieHandler();
        boolean boolean74 = okHttpClient72.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient75 = okHttpClient72.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet76 = okHttpClient75.failedRoutes;
        boolean boolean77 = okHttpClient75.getFollowProtocolRedirects();
        java.net.Proxy proxy78 = java.net.Proxy.NO_PROXY;
        okHttpClient75.proxy = proxy78;
        okHttpClient69.proxy = proxy78;
        okHttpClient55.proxy = proxy78;
        java.net.Proxy.Type type82 = proxy78.type();
        com.squareup.okhttp.OkHttpClient okHttpClient83 = okHttpClient23.setProxy(proxy78);
        com.squareup.okhttp.OkHttpClient okHttpClient84 = okHttpClient23.copyWithDefaults();
        java.net.ProxySelector proxySelector85 = okHttpClient23.proxySelector;
        java.util.Set<com.squareup.okhttp.Route> routeSet86 = okHttpClient23.failedRoutes;
        com.squareup.okhttp.OkAuthenticator okAuthenticator87 = okHttpClient23.authenticator;
        java.net.URL uRL88 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.HttpURLConnection httpURLConnection89 = okHttpClient23.open(uRL88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertNotNull(routeSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(proxy6);
        org.junit.Assert.assertNull(cookieHandler9);
        org.junit.Assert.assertNotNull(routeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(proxy14);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNull(socketAddress22);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertNotNull(okHttpClient30);
        org.junit.Assert.assertNull(proxySelector34);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNull(proxySelector40);
        org.junit.Assert.assertNotNull(okHttpClient42);
        org.junit.Assert.assertNull(sSLSocketFactory43);
        org.junit.Assert.assertNull(cookieHandler45);
        org.junit.Assert.assertNotNull(routeArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(cookieHandler54);
        org.junit.Assert.assertNull(cookieHandler56);
        org.junit.Assert.assertNotNull(routeArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(proxy61);
        org.junit.Assert.assertNotNull(okHttpClient64);
        org.junit.Assert.assertNotNull(okHttpClient66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(okHttpClient68);
        org.junit.Assert.assertNull(cookieHandler70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNull(cookieHandler73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(okHttpClient75);
        org.junit.Assert.assertNotNull(routeSet76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(proxy78);
        org.junit.Assert.assertTrue("'" + type82 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type82.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNotNull(okHttpClient83);
        org.junit.Assert.assertNotNull(okHttpClient84);
// flaky:         org.junit.Assert.assertNull(proxySelector85);
        org.junit.Assert.assertNotNull(routeSet86);
        org.junit.Assert.assertNotNull(okAuthenticator87);
    }

    @Test
    public void test03202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03202");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool6 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int7 = connectionPool6.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient3.setConnectionPool(connectionPool6);
        com.squareup.okhttp.OkHttpClient okHttpClient9 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector10 = null;
        okHttpClient9.proxySelector = proxySelector10;
        java.net.ProxySelector proxySelector12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient9.setProxySelector(proxySelector12);
        java.net.ProxySelector proxySelector14 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient9.setProxySelector(proxySelector14);
        okHttpClient8.proxySelector = proxySelector14;
        java.net.CookieHandler cookieHandler17 = null;
        okHttpClient8.cookieHandler = cookieHandler17;
        com.squareup.okhttp.ConnectionPool connectionPool19 = okHttpClient8.connectionPool;
        java.net.CookieHandler cookieHandler20 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient8.setCookieHandler(cookieHandler20);
        javax.net.ssl.HostnameVerifier hostnameVerifier22 = okHttpClient8.getHostnameVerifier();
        com.squareup.okhttp.ConnectionPool connectionPool25 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) 10);
        int int26 = connectionPool25.getSpdyConnectionCount();
        connectionPool25.evictAll();
        okHttpClient8.connectionPool = connectionPool25;
        connectionPool25.evictAll();
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertNotNull(okHttpClient13);
// flaky:         org.junit.Assert.assertNull(proxySelector14);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNotNull(connectionPool19);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNotNull(hostnameVerifier22);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
    }

    @Test
    public void test03203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03203");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool6 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int7 = connectionPool6.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient3.setConnectionPool(connectionPool6);
        javax.net.ssl.HostnameVerifier hostnameVerifier9 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier9;
        com.squareup.okhttp.ConnectionPool connectionPool11 = okHttpClient3.getConnectionPool();
        java.net.ResponseCache responseCache12 = null;
        okHttpClient3.responseCache = responseCache12;
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = okHttpClient3.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient3.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool18 = new com.squareup.okhttp.ConnectionPool(100, (long) (short) 0);
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient15.setConnectionPool(connectionPool18);
        com.squareup.okhttp.Connection connection20 = null;
        // The following exception was thrown during execution in test generation
        try {
            connectionPool18.maybeShare(connection20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertNotNull(connectionPool11);
        org.junit.Assert.assertNull(hostnameVerifier14);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNotNull(okHttpClient19);
    }

    @Test
    public void test03204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03204");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setHostnameVerifier(hostnameVerifier4);
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler7 = okHttpClient6.getCookieHandler();
        boolean boolean8 = okHttpClient6.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient6.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient10 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector11 = null;
        okHttpClient10.proxySelector = proxySelector11;
        java.net.ProxySelector proxySelector13 = okHttpClient10.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient10.setHostnameVerifier(hostnameVerifier14);
        java.net.ProxySelector proxySelector16 = okHttpClient10.proxySelector;
        java.net.ResponseCache responseCache17 = okHttpClient10.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet18 = okHttpClient10.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler20 = okHttpClient19.getCookieHandler();
        boolean boolean21 = okHttpClient19.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient19.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool25 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int26 = connectionPool25.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient22.setConnectionPool(connectionPool25);
        com.squareup.okhttp.OkHttpClient okHttpClient28 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector29 = null;
        okHttpClient28.proxySelector = proxySelector29;
        java.net.ProxySelector proxySelector31 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient28.setProxySelector(proxySelector31);
        java.net.ProxySelector proxySelector33 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient28.setProxySelector(proxySelector33);
        okHttpClient27.proxySelector = proxySelector33;
        javax.net.ssl.HostnameVerifier hostnameVerifier36 = okHttpClient27.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient10.setHostnameVerifier(hostnameVerifier36);
        javax.net.ssl.HostnameVerifier hostnameVerifier38 = okHttpClient37.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient6.setHostnameVerifier(hostnameVerifier38);
        javax.net.ssl.HostnameVerifier hostnameVerifier40 = okHttpClient39.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient41 = okHttpClient5.setHostnameVerifier(hostnameVerifier40);
        boolean boolean42 = okHttpClient5.getFollowProtocolRedirects();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache43 = okHttpClient5.okResponseCache();
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(cookieHandler7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNull(proxySelector13);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNull(proxySelector16);
        org.junit.Assert.assertNull(responseCache17);
        org.junit.Assert.assertNotNull(routeSet18);
        org.junit.Assert.assertNull(cookieHandler20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNotNull(okHttpClient32);
// flaky:         org.junit.Assert.assertNull(proxySelector33);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertNotNull(hostnameVerifier36);
        org.junit.Assert.assertNotNull(okHttpClient37);
        org.junit.Assert.assertNotNull(hostnameVerifier38);
        org.junit.Assert.assertNotNull(okHttpClient39);
        org.junit.Assert.assertNotNull(hostnameVerifier40);
        org.junit.Assert.assertNotNull(okHttpClient41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(okResponseCache43);
    }

    @Test
    public void test03205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03205");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = okHttpClient0.hostnameVerifier;
        java.net.ResponseCache responseCache2 = okHttpClient0.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = okHttpClient0.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler5 = okHttpClient4.getCookieHandler();
        boolean boolean6 = okHttpClient4.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient4.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient7.setHostnameVerifier(hostnameVerifier8);
        java.net.ResponseCache responseCache10 = okHttpClient9.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator11 = okHttpClient9.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient0.setAuthenticator(okAuthenticator11);
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler14 = okHttpClient13.getCookieHandler();
        boolean boolean15 = okHttpClient13.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient13.setAuthenticator(okAuthenticator16);
        java.net.ResponseCache responseCache18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient13.setResponseCache(responseCache18);
        com.squareup.okhttp.ConnectionPool connectionPool22 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool22.evictAll();
        okHttpClient13.connectionPool = connectionPool22;
        connectionPool22.evictAll();
        int int26 = connectionPool22.getSpdyConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient0.setConnectionPool(connectionPool22);
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache28 = okHttpClient0.okResponseCache();
        java.net.Proxy proxy29 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient30 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler31 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient30.setCookieHandler(cookieHandler31);
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient30.setFollowProtocolRedirects(true);
        boolean boolean35 = proxy29.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient0.setProxy(proxy29);
        java.lang.String str37 = proxy29.toString();
        java.lang.String str38 = proxy29.toString();
        com.squareup.okhttp.OkHttpClient okHttpClient39 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector40 = null;
        okHttpClient39.proxySelector = proxySelector40;
        com.squareup.okhttp.ConnectionPool connectionPool42 = okHttpClient39.connectionPool;
        com.squareup.okhttp.ConnectionPool connectionPool43 = okHttpClient39.getConnectionPool();
        java.net.CookieHandler cookieHandler44 = okHttpClient39.getCookieHandler();
        java.net.CookieHandler cookieHandler45 = null;
        okHttpClient39.cookieHandler = cookieHandler45;
        com.squareup.okhttp.OkHttpClient okHttpClient47 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector48 = null;
        okHttpClient47.proxySelector = proxySelector48;
        com.squareup.okhttp.ConnectionPool connectionPool50 = okHttpClient47.connectionPool;
        com.squareup.okhttp.OkHttpClient okHttpClient51 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler52 = okHttpClient51.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray53 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet54 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet54, routeArray53);
        okHttpClient51.failedRoutes = routeSet54;
        java.net.Proxy proxy57 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient58 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler59 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient60 = okHttpClient58.setCookieHandler(cookieHandler59);
        com.squareup.okhttp.OkHttpClient okHttpClient62 = okHttpClient58.setFollowProtocolRedirects(true);
        boolean boolean63 = proxy57.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient64 = okHttpClient51.setProxy(proxy57);
        com.squareup.okhttp.OkHttpClient okHttpClient65 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler66 = okHttpClient65.getCookieHandler();
        boolean boolean67 = okHttpClient65.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient68 = okHttpClient65.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool71 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int72 = connectionPool71.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient73 = okHttpClient68.setConnectionPool(connectionPool71);
        com.squareup.okhttp.OkHttpClient okHttpClient74 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector75 = null;
        okHttpClient74.proxySelector = proxySelector75;
        java.net.ProxySelector proxySelector77 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient78 = okHttpClient74.setProxySelector(proxySelector77);
        java.net.ProxySelector proxySelector79 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient80 = okHttpClient74.setProxySelector(proxySelector79);
        okHttpClient73.proxySelector = proxySelector79;
        okHttpClient51.proxySelector = proxySelector79;
        com.squareup.okhttp.OkHttpClient okHttpClient83 = okHttpClient47.setProxySelector(proxySelector79);
        com.squareup.okhttp.OkHttpClient okHttpClient85 = okHttpClient83.setFollowProtocolRedirects(true);
        com.squareup.okhttp.OkHttpClient okHttpClient86 = okHttpClient83.copyWithDefaults();
        java.net.Proxy proxy87 = okHttpClient83.getProxy();
        java.util.Set<com.squareup.okhttp.Route> routeSet88 = okHttpClient83.failedRoutes;
        okHttpClient39.failedRoutes = routeSet88;
        boolean boolean90 = proxy29.equals((java.lang.Object) routeSet88);
        java.net.Proxy.Type type91 = proxy29.type();
        java.net.SocketAddress socketAddress92 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Proxy proxy93 = new java.net.Proxy(type91, socketAddress92);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: type DIRECT is not compatible with address null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(hostnameVerifier1);
        org.junit.Assert.assertNull(responseCache2);
        org.junit.Assert.assertNull(okAuthenticator3);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(okHttpClient7);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNull(responseCache10);
        org.junit.Assert.assertNotNull(okAuthenticator11);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertNull(cookieHandler14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNull(okResponseCache28);
        org.junit.Assert.assertNotNull(proxy29);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "DIRECT" + "'", str37, "DIRECT");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "DIRECT" + "'", str38, "DIRECT");
        org.junit.Assert.assertNull(connectionPool42);
        org.junit.Assert.assertNull(connectionPool43);
        org.junit.Assert.assertNull(cookieHandler44);
        org.junit.Assert.assertNull(connectionPool50);
        org.junit.Assert.assertNull(cookieHandler52);
        org.junit.Assert.assertNotNull(routeArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(proxy57);
        org.junit.Assert.assertNotNull(okHttpClient60);
        org.junit.Assert.assertNotNull(okHttpClient62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(okHttpClient64);
        org.junit.Assert.assertNull(cookieHandler66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(okHttpClient68);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertNotNull(okHttpClient73);
        org.junit.Assert.assertNotNull(okHttpClient78);
// flaky:         org.junit.Assert.assertNull(proxySelector79);
        org.junit.Assert.assertNotNull(okHttpClient80);
        org.junit.Assert.assertNotNull(okHttpClient83);
        org.junit.Assert.assertNotNull(okHttpClient85);
        org.junit.Assert.assertNotNull(okHttpClient86);
        org.junit.Assert.assertNull(proxy87);
        org.junit.Assert.assertNotNull(routeSet88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + type91 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type91.equals(java.net.Proxy.Type.DIRECT));
    }

    @Test
    public void test03206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03206");
        com.squareup.okhttp.ConnectionPool connectionPool2 = new com.squareup.okhttp.ConnectionPool((int) (short) 100, (long) 0);
        com.squareup.okhttp.Connection connection3 = null;
        // The following exception was thrown during execution in test generation
        try {
            connectionPool2.maybeShare(connection3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test03207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03207");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        java.net.ResponseCache responseCache2 = null;
        okHttpClient0.responseCache = responseCache2;
        boolean boolean4 = okHttpClient0.followProtocolRedirects;
        java.net.CookieHandler cookieHandler5 = okHttpClient0.cookieHandler;
        java.net.CookieHandler cookieHandler6 = null;
        okHttpClient0.cookieHandler = cookieHandler6;
        java.net.CookieHandler cookieHandler8 = null;
        okHttpClient0.cookieHandler = cookieHandler8;
        java.net.CookieHandler cookieHandler10 = null;
        okHttpClient0.cookieHandler = cookieHandler10;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler13 = okHttpClient12.getCookieHandler();
        java.net.ResponseCache responseCache14 = okHttpClient12.responseCache;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient12.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool18 = new com.squareup.okhttp.ConnectionPool((int) ' ', 100L);
        int int19 = connectionPool18.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient15.setConnectionPool(connectionPool18);
        com.squareup.okhttp.OkHttpClient okHttpClient21 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler22 = okHttpClient21.getCookieHandler();
        boolean boolean23 = okHttpClient21.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator24 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient21.setAuthenticator(okAuthenticator24);
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient21.copyWithDefaults();
        java.net.CookieHandler cookieHandler27 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient21.setCookieHandler(cookieHandler27);
        com.squareup.okhttp.OkAuthenticator okAuthenticator29 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient30 = okHttpClient28.setAuthenticator(okAuthenticator29);
        com.squareup.okhttp.OkHttpClient okHttpClient31 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector32 = null;
        okHttpClient31.proxySelector = proxySelector32;
        java.net.ProxySelector proxySelector34 = okHttpClient31.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier35 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient31.setHostnameVerifier(hostnameVerifier35);
        java.net.ProxySelector proxySelector37 = okHttpClient31.proxySelector;
        java.net.ResponseCache responseCache38 = okHttpClient31.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet39 = okHttpClient31.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient40 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler41 = okHttpClient40.getCookieHandler();
        boolean boolean42 = okHttpClient40.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient43 = okHttpClient40.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool46 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int47 = connectionPool46.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient48 = okHttpClient43.setConnectionPool(connectionPool46);
        com.squareup.okhttp.OkHttpClient okHttpClient49 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector50 = null;
        okHttpClient49.proxySelector = proxySelector50;
        java.net.ProxySelector proxySelector52 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient53 = okHttpClient49.setProxySelector(proxySelector52);
        java.net.ProxySelector proxySelector54 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient55 = okHttpClient49.setProxySelector(proxySelector54);
        okHttpClient48.proxySelector = proxySelector54;
        javax.net.ssl.HostnameVerifier hostnameVerifier57 = okHttpClient48.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient58 = okHttpClient31.setHostnameVerifier(hostnameVerifier57);
        javax.net.ssl.HostnameVerifier hostnameVerifier59 = okHttpClient58.getHostnameVerifier();
        okHttpClient30.hostnameVerifier = hostnameVerifier59;
        com.squareup.okhttp.OkHttpClient okHttpClient61 = okHttpClient15.setHostnameVerifier(hostnameVerifier59);
        com.squareup.okhttp.OkHttpClient okHttpClient62 = okHttpClient0.setHostnameVerifier(hostnameVerifier59);
        com.squareup.okhttp.OkHttpClient okHttpClient63 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler64 = okHttpClient63.getCookieHandler();
        boolean boolean65 = okHttpClient63.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient66 = okHttpClient63.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet67 = okHttpClient66.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient68 = okHttpClient66.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient69 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector70 = null;
        okHttpClient69.proxySelector = proxySelector70;
        java.net.ProxySelector proxySelector72 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient73 = okHttpClient69.setProxySelector(proxySelector72);
        java.net.ProxySelector proxySelector74 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient75 = okHttpClient69.setProxySelector(proxySelector74);
        java.net.ProxySelector.setDefault(proxySelector74);
        com.squareup.okhttp.OkHttpClient okHttpClient77 = okHttpClient68.setProxySelector(proxySelector74);
        com.squareup.okhttp.OkHttpClient okHttpClient78 = okHttpClient0.setProxySelector(proxySelector74);
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertNull(cookieHandler13);
        org.junit.Assert.assertNull(responseCache14);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNull(cookieHandler22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(okHttpClient25);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNotNull(okHttpClient30);
        org.junit.Assert.assertNull(proxySelector34);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNull(proxySelector37);
        org.junit.Assert.assertNull(responseCache38);
        org.junit.Assert.assertNotNull(routeSet39);
        org.junit.Assert.assertNull(cookieHandler41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(okHttpClient43);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(okHttpClient48);
        org.junit.Assert.assertNotNull(okHttpClient53);
// flaky:         org.junit.Assert.assertNull(proxySelector54);
        org.junit.Assert.assertNotNull(okHttpClient55);
        org.junit.Assert.assertNotNull(hostnameVerifier57);
        org.junit.Assert.assertNotNull(okHttpClient58);
        org.junit.Assert.assertNotNull(hostnameVerifier59);
        org.junit.Assert.assertNotNull(okHttpClient61);
        org.junit.Assert.assertNotNull(okHttpClient62);
        org.junit.Assert.assertNull(cookieHandler64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(okHttpClient66);
        org.junit.Assert.assertNotNull(routeSet67);
        org.junit.Assert.assertNotNull(okHttpClient68);
        org.junit.Assert.assertNotNull(okHttpClient73);
// flaky:         org.junit.Assert.assertNull(proxySelector74);
        org.junit.Assert.assertNotNull(okHttpClient75);
        org.junit.Assert.assertNotNull(okHttpClient77);
        org.junit.Assert.assertNotNull(okHttpClient78);
    }

    @Test
    public void test03208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03208");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setHostnameVerifier(hostnameVerifier4);
        java.net.ProxySelector proxySelector6 = okHttpClient0.proxySelector;
        java.net.ResponseCache responseCache7 = okHttpClient0.getResponseCache();
        java.net.CookieHandler cookieHandler8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient0.setCookieHandler(cookieHandler8);
        com.squareup.okhttp.OkAuthenticator okAuthenticator10 = okHttpClient0.getAuthenticator();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler12 = okHttpClient11.getCookieHandler();
        boolean boolean13 = okHttpClient11.getFollowProtocolRedirects();
        java.net.ProxySelector proxySelector14 = okHttpClient11.proxySelector;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector16 = null;
        okHttpClient15.proxySelector = proxySelector16;
        java.net.ProxySelector proxySelector18 = okHttpClient15.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier19 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient15.setHostnameVerifier(hostnameVerifier19);
        java.net.ProxySelector proxySelector21 = okHttpClient15.proxySelector;
        java.net.ResponseCache responseCache22 = okHttpClient15.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet23 = okHttpClient15.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler25 = okHttpClient24.getCookieHandler();
        boolean boolean26 = okHttpClient24.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient24.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool30 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int31 = connectionPool30.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient27.setConnectionPool(connectionPool30);
        com.squareup.okhttp.OkHttpClient okHttpClient33 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector34 = null;
        okHttpClient33.proxySelector = proxySelector34;
        java.net.ProxySelector proxySelector36 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient33.setProxySelector(proxySelector36);
        java.net.ProxySelector proxySelector38 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient33.setProxySelector(proxySelector38);
        okHttpClient32.proxySelector = proxySelector38;
        javax.net.ssl.HostnameVerifier hostnameVerifier41 = okHttpClient32.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient15.setHostnameVerifier(hostnameVerifier41);
        java.net.Proxy proxy43 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress44 = proxy43.address();
        com.squareup.okhttp.OkHttpClient okHttpClient45 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector46 = null;
        okHttpClient45.proxySelector = proxySelector46;
        com.squareup.okhttp.ConnectionPool connectionPool48 = okHttpClient45.connectionPool;
        com.squareup.okhttp.ConnectionPool connectionPool49 = okHttpClient45.getConnectionPool();
        boolean boolean50 = proxy43.equals((java.lang.Object) okHttpClient45);
        okHttpClient15.proxy = proxy43;
        com.squareup.okhttp.OkHttpClient okHttpClient52 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler53 = okHttpClient52.getCookieHandler();
        boolean boolean54 = okHttpClient52.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient55 = okHttpClient52.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier56 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient57 = okHttpClient55.setHostnameVerifier(hostnameVerifier56);
        java.net.ResponseCache responseCache58 = okHttpClient57.getResponseCache();
        java.net.ProxySelector proxySelector59 = okHttpClient57.getProxySelector();
        boolean boolean60 = proxy43.equals((java.lang.Object) proxySelector59);
        com.squareup.okhttp.OkHttpClient okHttpClient61 = okHttpClient11.setProxy(proxy43);
        com.squareup.okhttp.OkHttpClient okHttpClient62 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler63 = okHttpClient62.getCookieHandler();
        boolean boolean64 = okHttpClient62.getFollowProtocolRedirects();
        java.net.ProxySelector proxySelector65 = okHttpClient62.proxySelector;
        com.squareup.okhttp.ConnectionPool connectionPool68 = new com.squareup.okhttp.ConnectionPool((int) '4', (long) 100);
        okHttpClient62.connectionPool = connectionPool68;
        com.squareup.okhttp.OkHttpClient okHttpClient70 = okHttpClient61.setConnectionPool(connectionPool68);
        okHttpClient0.connectionPool = connectionPool68;
        com.squareup.okhttp.OkHttpClient okHttpClient72 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler73 = okHttpClient72.getCookieHandler();
        boolean boolean74 = okHttpClient72.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient75 = okHttpClient72.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet76 = okHttpClient75.failedRoutes;
        boolean boolean77 = okHttpClient75.getFollowProtocolRedirects();
        java.net.ResponseCache responseCache78 = null;
        okHttpClient75.responseCache = responseCache78;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory80 = okHttpClient75.getSslSocketFactory();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory81 = okHttpClient75.sslSocketFactory;
        com.squareup.okhttp.OkHttpClient okHttpClient82 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory81);
        java.lang.String[] strArray83 = sSLSocketFactory81.getSupportedCipherSuites();
        java.net.InetAddress inetAddress84 = null;
        java.net.InetAddress inetAddress86 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket88 = sSLSocketFactory81.createSocket(inetAddress84, (int) (byte) 100, inetAddress86, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: port out of range:-1");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(proxySelector6);
        org.junit.Assert.assertNull(responseCache7);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNull(okAuthenticator10);
        org.junit.Assert.assertNull(cookieHandler12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(proxySelector14);
        org.junit.Assert.assertNull(proxySelector18);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNull(proxySelector21);
        org.junit.Assert.assertNull(responseCache22);
        org.junit.Assert.assertNotNull(routeSet23);
        org.junit.Assert.assertNull(cookieHandler25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertNotNull(okHttpClient37);
// flaky:         org.junit.Assert.assertNull(proxySelector38);
        org.junit.Assert.assertNotNull(okHttpClient39);
        org.junit.Assert.assertNotNull(hostnameVerifier41);
        org.junit.Assert.assertNotNull(okHttpClient42);
        org.junit.Assert.assertNotNull(proxy43);
        org.junit.Assert.assertNull(socketAddress44);
        org.junit.Assert.assertNull(connectionPool48);
        org.junit.Assert.assertNull(connectionPool49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(cookieHandler53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(okHttpClient55);
        org.junit.Assert.assertNotNull(okHttpClient57);
        org.junit.Assert.assertNull(responseCache58);
// flaky:         org.junit.Assert.assertNull(proxySelector59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(okHttpClient61);
        org.junit.Assert.assertNull(cookieHandler63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNull(proxySelector65);
        org.junit.Assert.assertNotNull(okHttpClient70);
        org.junit.Assert.assertNull(cookieHandler73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(okHttpClient75);
        org.junit.Assert.assertNotNull(routeSet76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(sSLSocketFactory80);
        org.junit.Assert.assertNotNull(sSLSocketFactory81);
        org.junit.Assert.assertNotNull(okHttpClient82);
        org.junit.Assert.assertNotNull(strArray83);
    }

    @Test
    public void test03209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03209");
        com.squareup.okhttp.ConnectionPool connectionPool2 = new com.squareup.okhttp.ConnectionPool((int) (byte) 10, (long) 0);
        int int3 = connectionPool2.getHttpConnectionCount();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test03210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03210");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier6 = okHttpClient5.getHostnameVerifier();
        java.net.ProxySelector proxySelector7 = okHttpClient5.proxySelector;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier9 = okHttpClient8.hostnameVerifier;
        java.net.ResponseCache responseCache10 = okHttpClient8.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator11 = okHttpClient8.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler13 = okHttpClient12.getCookieHandler();
        boolean boolean14 = okHttpClient12.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient12.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient15.setHostnameVerifier(hostnameVerifier16);
        java.net.ResponseCache responseCache18 = okHttpClient17.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator19 = okHttpClient17.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier20 = okHttpClient17.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory21 = okHttpClient17.getSslSocketFactory();
        java.lang.String[] strArray22 = sSLSocketFactory21.getSupportedCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient8.setSSLSocketFactory(sSLSocketFactory21);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory24 = okHttpClient8.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient5.setSSLSocketFactory(sSLSocketFactory24);
        java.net.InetAddress inetAddress26 = null;
        java.net.InetAddress inetAddress28 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket30 = sSLSocketFactory24.createSocket(inetAddress26, (int) (short) 0, inetAddress28, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.net.ConnectException; message: Connection refused (Connection refused)");
        } catch (java.net.ConnectException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNotNull(hostnameVerifier6);
// flaky:         org.junit.Assert.assertNull(proxySelector7);
        org.junit.Assert.assertNull(hostnameVerifier9);
        org.junit.Assert.assertNull(responseCache10);
        org.junit.Assert.assertNull(okAuthenticator11);
        org.junit.Assert.assertNull(cookieHandler13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNull(responseCache18);
        org.junit.Assert.assertNotNull(okAuthenticator19);
        org.junit.Assert.assertNull(hostnameVerifier20);
        org.junit.Assert.assertNotNull(sSLSocketFactory21);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertNotNull(sSLSocketFactory24);
        org.junit.Assert.assertNotNull(okHttpClient25);
    }

    @Test
    public void test03211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03211");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setHostnameVerifier(hostnameVerifier4);
        java.net.ResponseCache responseCache6 = okHttpClient5.responseCache;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient5.setFollowProtocolRedirects(true);
        javax.net.ssl.HostnameVerifier hostnameVerifier9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient8.setHostnameVerifier(hostnameVerifier9);
        java.net.ResponseCache responseCache11 = null;
        okHttpClient8.responseCache = responseCache11;
        com.squareup.okhttp.ConnectionPool connectionPool15 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (-1L));
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient8.setConnectionPool(connectionPool15);
        com.squareup.okhttp.Connection connection17 = null;
        // The following exception was thrown during execution in test generation
        try {
            connectionPool15.maybeShare(connection17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(responseCache6);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertNotNull(okHttpClient16);
    }

    @Test
    public void test03212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03212");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        java.net.ResponseCache responseCache5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient0.setResponseCache(responseCache5);
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool9.evictAll();
        okHttpClient0.connectionPool = connectionPool9;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory12 = okHttpClient0.sslSocketFactory;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory13 = null;
        okHttpClient0.sslSocketFactory = sSLSocketFactory13;
        java.net.ProxySelector proxySelector15 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient0.setProxySelector(proxySelector15);
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler18 = okHttpClient17.getCookieHandler();
        java.net.ResponseCache responseCache19 = null;
        okHttpClient17.responseCache = responseCache19;
        boolean boolean21 = okHttpClient17.followProtocolRedirects;
        java.net.CookieHandler cookieHandler22 = okHttpClient17.cookieHandler;
        com.squareup.okhttp.ConnectionPool connectionPool23 = okHttpClient17.getConnectionPool();
        com.squareup.okhttp.OkHttpClient okHttpClient24 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector25 = null;
        okHttpClient24.proxySelector = proxySelector25;
        java.net.ProxySelector proxySelector27 = okHttpClient24.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier28 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient24.setHostnameVerifier(hostnameVerifier28);
        java.net.ProxySelector proxySelector30 = okHttpClient24.proxySelector;
        java.net.ResponseCache responseCache31 = okHttpClient24.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet32 = okHttpClient24.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient33 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler34 = okHttpClient33.getCookieHandler();
        boolean boolean35 = okHttpClient33.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient33.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool39 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int40 = connectionPool39.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient41 = okHttpClient36.setConnectionPool(connectionPool39);
        com.squareup.okhttp.OkHttpClient okHttpClient42 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector43 = null;
        okHttpClient42.proxySelector = proxySelector43;
        java.net.ProxySelector proxySelector45 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient46 = okHttpClient42.setProxySelector(proxySelector45);
        java.net.ProxySelector proxySelector47 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient48 = okHttpClient42.setProxySelector(proxySelector47);
        okHttpClient41.proxySelector = proxySelector47;
        javax.net.ssl.HostnameVerifier hostnameVerifier50 = okHttpClient41.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient51 = okHttpClient24.setHostnameVerifier(hostnameVerifier50);
        okHttpClient17.hostnameVerifier = hostnameVerifier50;
        com.squareup.okhttp.OkHttpClient okHttpClient53 = okHttpClient0.setHostnameVerifier(hostnameVerifier50);
        com.squareup.okhttp.OkHttpClient okHttpClient54 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler55 = okHttpClient54.getCookieHandler();
        boolean boolean56 = okHttpClient54.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator57 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient58 = okHttpClient54.setAuthenticator(okAuthenticator57);
        com.squareup.okhttp.OkHttpClient okHttpClient59 = okHttpClient54.copyWithDefaults();
        java.net.CookieHandler cookieHandler60 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient61 = okHttpClient54.setCookieHandler(cookieHandler60);
        com.squareup.okhttp.OkAuthenticator okAuthenticator62 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient63 = okHttpClient61.setAuthenticator(okAuthenticator62);
        com.squareup.okhttp.OkHttpClient okHttpClient64 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector65 = null;
        okHttpClient64.proxySelector = proxySelector65;
        java.net.ProxySelector proxySelector67 = okHttpClient64.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier68 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient69 = okHttpClient64.setHostnameVerifier(hostnameVerifier68);
        java.net.ProxySelector proxySelector70 = okHttpClient64.proxySelector;
        java.net.ResponseCache responseCache71 = okHttpClient64.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet72 = okHttpClient64.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient73 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler74 = okHttpClient73.getCookieHandler();
        boolean boolean75 = okHttpClient73.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient76 = okHttpClient73.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool79 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int80 = connectionPool79.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient81 = okHttpClient76.setConnectionPool(connectionPool79);
        com.squareup.okhttp.OkHttpClient okHttpClient82 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector83 = null;
        okHttpClient82.proxySelector = proxySelector83;
        java.net.ProxySelector proxySelector85 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient86 = okHttpClient82.setProxySelector(proxySelector85);
        java.net.ProxySelector proxySelector87 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient88 = okHttpClient82.setProxySelector(proxySelector87);
        okHttpClient81.proxySelector = proxySelector87;
        javax.net.ssl.HostnameVerifier hostnameVerifier90 = okHttpClient81.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient91 = okHttpClient64.setHostnameVerifier(hostnameVerifier90);
        javax.net.ssl.HostnameVerifier hostnameVerifier92 = okHttpClient91.getHostnameVerifier();
        okHttpClient63.hostnameVerifier = hostnameVerifier92;
        com.squareup.okhttp.OkHttpClient okHttpClient94 = okHttpClient53.setHostnameVerifier(hostnameVerifier92);
        java.net.Proxy proxy95 = okHttpClient94.proxy;
        java.net.CookieHandler cookieHandler96 = null;
        okHttpClient94.cookieHandler = cookieHandler96;
        javax.net.ssl.HostnameVerifier hostnameVerifier98 = okHttpClient94.hostnameVerifier;
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient6);
        org.junit.Assert.assertNull(sSLSocketFactory12);
// flaky:         org.junit.Assert.assertNull(proxySelector15);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNull(cookieHandler18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(cookieHandler22);
        org.junit.Assert.assertNull(connectionPool23);
        org.junit.Assert.assertNull(proxySelector27);
        org.junit.Assert.assertNotNull(okHttpClient29);
        org.junit.Assert.assertNull(proxySelector30);
        org.junit.Assert.assertNull(responseCache31);
        org.junit.Assert.assertNotNull(routeSet32);
        org.junit.Assert.assertNull(cookieHandler34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(okHttpClient41);
        org.junit.Assert.assertNotNull(okHttpClient46);
// flaky:         org.junit.Assert.assertNull(proxySelector47);
        org.junit.Assert.assertNotNull(okHttpClient48);
        org.junit.Assert.assertNotNull(hostnameVerifier50);
        org.junit.Assert.assertNotNull(okHttpClient51);
        org.junit.Assert.assertNotNull(okHttpClient53);
        org.junit.Assert.assertNull(cookieHandler55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(okHttpClient58);
        org.junit.Assert.assertNotNull(okHttpClient59);
        org.junit.Assert.assertNotNull(okHttpClient61);
        org.junit.Assert.assertNotNull(okHttpClient63);
        org.junit.Assert.assertNull(proxySelector67);
        org.junit.Assert.assertNotNull(okHttpClient69);
        org.junit.Assert.assertNull(proxySelector70);
        org.junit.Assert.assertNull(responseCache71);
        org.junit.Assert.assertNotNull(routeSet72);
        org.junit.Assert.assertNull(cookieHandler74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(okHttpClient76);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertNotNull(okHttpClient81);
        org.junit.Assert.assertNotNull(okHttpClient86);
// flaky:         org.junit.Assert.assertNull(proxySelector87);
        org.junit.Assert.assertNotNull(okHttpClient88);
        org.junit.Assert.assertNotNull(hostnameVerifier90);
        org.junit.Assert.assertNotNull(okHttpClient91);
        org.junit.Assert.assertNotNull(hostnameVerifier92);
        org.junit.Assert.assertNotNull(okHttpClient94);
        org.junit.Assert.assertNull(proxy95);
        org.junit.Assert.assertNotNull(hostnameVerifier98);
    }

    @Test
    public void test03213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03213");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet4 = okHttpClient3.failedRoutes;
        java.net.ResponseCache responseCache5 = okHttpClient3.responseCache;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector7 = null;
        okHttpClient6.proxySelector = proxySelector7;
        java.net.ProxySelector proxySelector9 = okHttpClient6.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient6.setHostnameVerifier(hostnameVerifier10);
        java.net.ResponseCache responseCache12 = okHttpClient11.responseCache;
        com.squareup.okhttp.ConnectionPool connectionPool15 = new com.squareup.okhttp.ConnectionPool((int) '4', 100L);
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient11.setConnectionPool(connectionPool15);
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler18 = okHttpClient17.getCookieHandler();
        boolean boolean19 = okHttpClient17.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator20 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient17.setAuthenticator(okAuthenticator20);
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient17.copyWithDefaults();
        java.net.CookieHandler cookieHandler23 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient17.setCookieHandler(cookieHandler23);
        com.squareup.okhttp.OkAuthenticator okAuthenticator25 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient24.setAuthenticator(okAuthenticator25);
        com.squareup.okhttp.OkHttpClient okHttpClient27 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler28 = okHttpClient27.getCookieHandler();
        boolean boolean29 = okHttpClient27.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient30 = okHttpClient27.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool33 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int34 = connectionPool33.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient30.setConnectionPool(connectionPool33);
        com.squareup.okhttp.ConnectionPool connectionPool36 = okHttpClient30.connectionPool;
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient24.setConnectionPool(connectionPool36);
        com.squareup.okhttp.Address address38 = null;
        com.squareup.okhttp.Connection connection39 = connectionPool36.get(address38);
        com.squareup.okhttp.OkHttpClient okHttpClient40 = okHttpClient16.setConnectionPool(connectionPool36);
        java.net.ProxySelector proxySelector41 = okHttpClient16.proxySelector;
        com.squareup.okhttp.OkHttpClient okHttpClient42 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector43 = null;
        okHttpClient42.proxySelector = proxySelector43;
        java.net.ProxySelector proxySelector45 = okHttpClient42.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier46 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient47 = okHttpClient42.setHostnameVerifier(hostnameVerifier46);
        java.net.ProxySelector proxySelector48 = okHttpClient42.proxySelector;
        java.net.ResponseCache responseCache49 = okHttpClient42.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet50 = okHttpClient42.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient51 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler52 = okHttpClient51.getCookieHandler();
        boolean boolean53 = okHttpClient51.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient54 = okHttpClient51.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool57 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int58 = connectionPool57.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient59 = okHttpClient54.setConnectionPool(connectionPool57);
        com.squareup.okhttp.OkHttpClient okHttpClient60 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector61 = null;
        okHttpClient60.proxySelector = proxySelector61;
        java.net.ProxySelector proxySelector63 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient64 = okHttpClient60.setProxySelector(proxySelector63);
        java.net.ProxySelector proxySelector65 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient66 = okHttpClient60.setProxySelector(proxySelector65);
        okHttpClient59.proxySelector = proxySelector65;
        javax.net.ssl.HostnameVerifier hostnameVerifier68 = okHttpClient59.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient69 = okHttpClient42.setHostnameVerifier(hostnameVerifier68);
        okHttpClient16.hostnameVerifier = hostnameVerifier68;
        okHttpClient3.hostnameVerifier = hostnameVerifier68;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory72 = okHttpClient3.sslSocketFactory;
        java.lang.String[] strArray73 = sSLSocketFactory72.getSupportedCipherSuites();
        java.net.InetAddress inetAddress74 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket76 = sSLSocketFactory72.createSocket(inetAddress74, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.net.ConnectException; message: Connection refused (Connection refused)");
        } catch (java.net.ConnectException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertNotNull(routeSet4);
        org.junit.Assert.assertNull(responseCache5);
        org.junit.Assert.assertNull(proxySelector9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(responseCache12);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNull(cookieHandler18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNull(cookieHandler28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(okHttpClient30);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNotNull(connectionPool36);
        org.junit.Assert.assertNotNull(okHttpClient37);
        org.junit.Assert.assertNull(connection39);
        org.junit.Assert.assertNotNull(okHttpClient40);
        org.junit.Assert.assertNull(proxySelector41);
        org.junit.Assert.assertNull(proxySelector45);
        org.junit.Assert.assertNotNull(okHttpClient47);
        org.junit.Assert.assertNull(proxySelector48);
        org.junit.Assert.assertNull(responseCache49);
        org.junit.Assert.assertNotNull(routeSet50);
        org.junit.Assert.assertNull(cookieHandler52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(okHttpClient54);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(okHttpClient59);
        org.junit.Assert.assertNotNull(okHttpClient64);
// flaky:         org.junit.Assert.assertNull(proxySelector65);
        org.junit.Assert.assertNotNull(okHttpClient66);
        org.junit.Assert.assertNotNull(hostnameVerifier68);
        org.junit.Assert.assertNotNull(okHttpClient69);
        org.junit.Assert.assertNotNull(sSLSocketFactory72);
        org.junit.Assert.assertNotNull(strArray73);
    }

    @Test
    public void test03214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03214");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        java.net.ResponseCache responseCache5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient0.setResponseCache(responseCache5);
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler8 = okHttpClient7.getCookieHandler();
        boolean boolean9 = okHttpClient7.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient7.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet11 = okHttpClient10.failedRoutes;
        boolean boolean12 = okHttpClient10.getFollowProtocolRedirects();
        java.net.Proxy proxy13 = java.net.Proxy.NO_PROXY;
        okHttpClient10.proxy = proxy13;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler16 = okHttpClient15.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray17 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet18 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet18, routeArray17);
        okHttpClient15.failedRoutes = routeSet18;
        java.net.Proxy proxy21 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler23 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient22.setCookieHandler(cookieHandler23);
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient22.setFollowProtocolRedirects(true);
        boolean boolean27 = proxy21.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient15.setProxy(proxy21);
        java.net.SocketAddress socketAddress29 = proxy21.address();
        com.squareup.okhttp.OkHttpClient okHttpClient30 = okHttpClient10.setProxy(proxy21);
        okHttpClient30.followProtocolRedirects = false;
        boolean boolean33 = okHttpClient30.followProtocolRedirects;
        java.util.Set<com.squareup.okhttp.Route> routeSet34 = null;
        okHttpClient30.failedRoutes = routeSet34;
        javax.net.ssl.HostnameVerifier hostnameVerifier36 = okHttpClient30.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient0.setHostnameVerifier(hostnameVerifier36);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory38 = okHttpClient0.sslSocketFactory;
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient6);
        org.junit.Assert.assertNull(cookieHandler8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertNotNull(routeSet11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(proxy13);
        org.junit.Assert.assertNull(cookieHandler16);
        org.junit.Assert.assertNotNull(routeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(proxy21);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNull(socketAddress29);
        org.junit.Assert.assertNotNull(okHttpClient30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(hostnameVerifier36);
        org.junit.Assert.assertNotNull(okHttpClient37);
        org.junit.Assert.assertNull(sSLSocketFactory38);
    }

    @Test
    public void test03215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03215");
        com.squareup.okhttp.ConnectionPool connectionPool2 = new com.squareup.okhttp.ConnectionPool((int) (byte) 10, (long) 10);
        int int3 = connectionPool2.getSpdyConnectionCount();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test03216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03216");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setCookieHandler(cookieHandler1);
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setFollowProtocolRedirects(true);
        java.net.ResponseCache responseCache5 = null;
        okHttpClient0.responseCache = responseCache5;
        com.squareup.okhttp.OkAuthenticator okAuthenticator7 = okHttpClient0.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler9 = okHttpClient8.getCookieHandler();
        java.net.ResponseCache responseCache10 = null;
        okHttpClient8.responseCache = responseCache10;
        boolean boolean12 = okHttpClient8.followProtocolRedirects;
        java.net.CookieHandler cookieHandler13 = okHttpClient8.cookieHandler;
        com.squareup.okhttp.ConnectionPool connectionPool14 = okHttpClient8.getConnectionPool();
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector16 = null;
        okHttpClient15.proxySelector = proxySelector16;
        java.net.ProxySelector proxySelector18 = okHttpClient15.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier19 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient15.setHostnameVerifier(hostnameVerifier19);
        java.net.ProxySelector proxySelector21 = okHttpClient15.proxySelector;
        java.net.ResponseCache responseCache22 = okHttpClient15.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet23 = okHttpClient15.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler25 = okHttpClient24.getCookieHandler();
        boolean boolean26 = okHttpClient24.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient24.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool30 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int31 = connectionPool30.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient27.setConnectionPool(connectionPool30);
        com.squareup.okhttp.OkHttpClient okHttpClient33 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector34 = null;
        okHttpClient33.proxySelector = proxySelector34;
        java.net.ProxySelector proxySelector36 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient33.setProxySelector(proxySelector36);
        java.net.ProxySelector proxySelector38 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient33.setProxySelector(proxySelector38);
        okHttpClient32.proxySelector = proxySelector38;
        javax.net.ssl.HostnameVerifier hostnameVerifier41 = okHttpClient32.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient15.setHostnameVerifier(hostnameVerifier41);
        okHttpClient8.hostnameVerifier = hostnameVerifier41;
        com.squareup.okhttp.OkHttpClient okHttpClient44 = okHttpClient8.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient45 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler46 = okHttpClient45.getCookieHandler();
        boolean boolean47 = okHttpClient45.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient48 = okHttpClient45.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet49 = okHttpClient48.failedRoutes;
        boolean boolean50 = okHttpClient48.getFollowProtocolRedirects();
        java.net.Proxy proxy51 = java.net.Proxy.NO_PROXY;
        okHttpClient48.proxy = proxy51;
        com.squareup.okhttp.OkHttpClient okHttpClient53 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler54 = okHttpClient53.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray55 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet56 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet56, routeArray55);
        okHttpClient53.failedRoutes = routeSet56;
        java.net.Proxy proxy59 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient60 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler61 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient62 = okHttpClient60.setCookieHandler(cookieHandler61);
        com.squareup.okhttp.OkHttpClient okHttpClient64 = okHttpClient60.setFollowProtocolRedirects(true);
        boolean boolean65 = proxy59.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient66 = okHttpClient53.setProxy(proxy59);
        java.net.SocketAddress socketAddress67 = proxy59.address();
        com.squareup.okhttp.OkHttpClient okHttpClient68 = okHttpClient48.setProxy(proxy59);
        com.squareup.okhttp.OkAuthenticator okAuthenticator69 = okHttpClient68.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient70 = okHttpClient44.setAuthenticator(okAuthenticator69);
        com.squareup.okhttp.OkHttpClient okHttpClient71 = okHttpClient0.setAuthenticator(okAuthenticator69);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory72 = okHttpClient0.sslSocketFactory;
        com.squareup.okhttp.OkAuthenticator okAuthenticator73 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient74 = okHttpClient0.setAuthenticator(okAuthenticator73);
        java.net.CookieHandler cookieHandler75 = okHttpClient74.getCookieHandler();
        java.net.CookieHandler cookieHandler76 = okHttpClient74.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient77 = okHttpClient74.copyWithDefaults();
        org.junit.Assert.assertNotNull(okHttpClient2);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(okAuthenticator7);
        org.junit.Assert.assertNull(cookieHandler9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(cookieHandler13);
        org.junit.Assert.assertNull(connectionPool14);
        org.junit.Assert.assertNull(proxySelector18);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNull(proxySelector21);
        org.junit.Assert.assertNull(responseCache22);
        org.junit.Assert.assertNotNull(routeSet23);
        org.junit.Assert.assertNull(cookieHandler25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertNotNull(okHttpClient37);
// flaky:         org.junit.Assert.assertNull(proxySelector38);
        org.junit.Assert.assertNotNull(okHttpClient39);
        org.junit.Assert.assertNotNull(hostnameVerifier41);
        org.junit.Assert.assertNotNull(okHttpClient42);
        org.junit.Assert.assertNotNull(okHttpClient44);
        org.junit.Assert.assertNull(cookieHandler46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(okHttpClient48);
        org.junit.Assert.assertNotNull(routeSet49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(proxy51);
        org.junit.Assert.assertNull(cookieHandler54);
        org.junit.Assert.assertNotNull(routeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(proxy59);
        org.junit.Assert.assertNotNull(okHttpClient62);
        org.junit.Assert.assertNotNull(okHttpClient64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(okHttpClient66);
        org.junit.Assert.assertNull(socketAddress67);
        org.junit.Assert.assertNotNull(okHttpClient68);
        org.junit.Assert.assertNotNull(okAuthenticator69);
        org.junit.Assert.assertNotNull(okHttpClient70);
        org.junit.Assert.assertNotNull(okHttpClient71);
        org.junit.Assert.assertNull(sSLSocketFactory72);
        org.junit.Assert.assertNotNull(okHttpClient74);
        org.junit.Assert.assertNull(cookieHandler75);
        org.junit.Assert.assertNull(cookieHandler76);
        org.junit.Assert.assertNotNull(okHttpClient77);
    }

    @Test
    public void test03217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03217");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setHostnameVerifier(hostnameVerifier4);
        java.net.ResponseCache responseCache6 = okHttpClient5.responseCache;
        java.net.ProxySelector proxySelector7 = okHttpClient5.getProxySelector();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector9 = null;
        okHttpClient8.proxySelector = proxySelector9;
        java.net.ProxySelector proxySelector11 = okHttpClient8.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient8.setHostnameVerifier(hostnameVerifier12);
        boolean boolean14 = okHttpClient8.getFollowProtocolRedirects();
        com.squareup.okhttp.ConnectionPool connectionPool17 = new com.squareup.okhttp.ConnectionPool((int) 'a', (long) (byte) -1);
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient8.setConnectionPool(connectionPool17);
        okHttpClient5.connectionPool = connectionPool17;
        java.net.ResponseCache responseCache20 = okHttpClient5.getResponseCache();
        okHttpClient5.followProtocolRedirects = false;
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(responseCache6);
        org.junit.Assert.assertNull(proxySelector7);
        org.junit.Assert.assertNull(proxySelector11);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNull(responseCache20);
    }

    @Test
    public void test03218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03218");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setHostnameVerifier(hostnameVerifier4);
        java.net.ResponseCache responseCache6 = okHttpClient5.responseCache;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient5.setFollowProtocolRedirects(true);
        com.squareup.okhttp.OkAuthenticator okAuthenticator9 = okHttpClient8.getAuthenticator();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient8.setFollowProtocolRedirects(true);
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache12 = okHttpClient8.okResponseCache();
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(responseCache6);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertNull(okAuthenticator9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(okResponseCache12);
    }

    @Test
    public void test03219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03219");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.copyWithDefaults();
        java.net.CookieHandler cookieHandler6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient0.setCookieHandler(cookieHandler6);
        java.net.CookieHandler cookieHandler8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient7.setCookieHandler(cookieHandler8);
        com.squareup.okhttp.OkHttpClient okHttpClient10 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier11 = okHttpClient10.hostnameVerifier;
        java.net.ResponseCache responseCache12 = okHttpClient10.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator13 = okHttpClient10.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler15 = okHttpClient14.getCookieHandler();
        boolean boolean16 = okHttpClient14.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient14.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient17.setHostnameVerifier(hostnameVerifier18);
        java.net.ResponseCache responseCache20 = okHttpClient19.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator21 = okHttpClient19.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient10.setAuthenticator(okAuthenticator21);
        com.squareup.okhttp.OkHttpClient okHttpClient23 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler24 = okHttpClient23.getCookieHandler();
        boolean boolean25 = okHttpClient23.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator26 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient23.setAuthenticator(okAuthenticator26);
        java.net.ResponseCache responseCache28 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient23.setResponseCache(responseCache28);
        com.squareup.okhttp.ConnectionPool connectionPool32 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool32.evictAll();
        okHttpClient23.connectionPool = connectionPool32;
        connectionPool32.evictAll();
        int int36 = connectionPool32.getSpdyConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient10.setConnectionPool(connectionPool32);
        okHttpClient9.connectionPool = connectionPool32;
        java.net.ResponseCache responseCache39 = okHttpClient9.getResponseCache();
        java.net.ResponseCache responseCache40 = null;
        okHttpClient9.responseCache = responseCache40;
        com.squareup.okhttp.OkHttpClient okHttpClient43 = okHttpClient9.setFollowProtocolRedirects(false);
        com.squareup.okhttp.OkHttpClient okHttpClient44 = okHttpClient43.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient45 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler46 = okHttpClient45.getCookieHandler();
        boolean boolean47 = okHttpClient45.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient48 = okHttpClient45.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier49 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient48.setHostnameVerifier(hostnameVerifier49);
        java.net.ResponseCache responseCache51 = okHttpClient50.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator52 = okHttpClient50.authenticator;
        boolean boolean53 = okHttpClient50.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient54 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector55 = null;
        okHttpClient54.proxySelector = proxySelector55;
        java.net.ProxySelector proxySelector57 = okHttpClient54.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier58 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient59 = okHttpClient54.setHostnameVerifier(hostnameVerifier58);
        java.net.ProxySelector proxySelector60 = okHttpClient54.proxySelector;
        java.net.ResponseCache responseCache61 = okHttpClient54.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet62 = okHttpClient54.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient63 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler64 = okHttpClient63.getCookieHandler();
        boolean boolean65 = okHttpClient63.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient66 = okHttpClient63.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool69 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int70 = connectionPool69.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient71 = okHttpClient66.setConnectionPool(connectionPool69);
        com.squareup.okhttp.OkHttpClient okHttpClient72 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector73 = null;
        okHttpClient72.proxySelector = proxySelector73;
        java.net.ProxySelector proxySelector75 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient76 = okHttpClient72.setProxySelector(proxySelector75);
        java.net.ProxySelector proxySelector77 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient78 = okHttpClient72.setProxySelector(proxySelector77);
        okHttpClient71.proxySelector = proxySelector77;
        javax.net.ssl.HostnameVerifier hostnameVerifier80 = okHttpClient71.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient81 = okHttpClient54.setHostnameVerifier(hostnameVerifier80);
        okHttpClient50.hostnameVerifier = hostnameVerifier80;
        okHttpClient44.hostnameVerifier = hostnameVerifier80;
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNotNull(okHttpClient7);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNull(hostnameVerifier11);
        org.junit.Assert.assertNull(responseCache12);
        org.junit.Assert.assertNull(okAuthenticator13);
        org.junit.Assert.assertNull(cookieHandler15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNull(responseCache20);
        org.junit.Assert.assertNotNull(okAuthenticator21);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNull(cookieHandler24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNotNull(okHttpClient29);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(okHttpClient37);
        org.junit.Assert.assertNull(responseCache39);
        org.junit.Assert.assertNotNull(okHttpClient43);
        org.junit.Assert.assertNotNull(okHttpClient44);
        org.junit.Assert.assertNull(cookieHandler46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(okHttpClient48);
        org.junit.Assert.assertNotNull(okHttpClient50);
        org.junit.Assert.assertNull(responseCache51);
        org.junit.Assert.assertNotNull(okAuthenticator52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(proxySelector57);
        org.junit.Assert.assertNotNull(okHttpClient59);
        org.junit.Assert.assertNull(proxySelector60);
        org.junit.Assert.assertNull(responseCache61);
        org.junit.Assert.assertNotNull(routeSet62);
        org.junit.Assert.assertNull(cookieHandler64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(okHttpClient66);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(okHttpClient71);
        org.junit.Assert.assertNotNull(okHttpClient76);
// flaky:         org.junit.Assert.assertNull(proxySelector77);
        org.junit.Assert.assertNotNull(okHttpClient78);
        org.junit.Assert.assertNotNull(hostnameVerifier80);
        org.junit.Assert.assertNotNull(okHttpClient81);
    }

    @Test
    public void test03220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03220");
        com.squareup.okhttp.ConnectionPool connectionPool2 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) -1);
        int int3 = connectionPool2.getSpdyConnectionCount();
        int int4 = connectionPool2.getHttpConnectionCount();
        int int5 = connectionPool2.getConnectionCount();
        int int6 = connectionPool2.getHttpConnectionCount();
        java.lang.Class<?> wildcardClass7 = connectionPool2.getClass();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test03221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03221");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector5 = null;
        okHttpClient4.proxySelector = proxySelector5;
        java.net.ProxySelector proxySelector7 = okHttpClient4.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient4.setHostnameVerifier(hostnameVerifier8);
        java.net.ProxySelector proxySelector10 = okHttpClient4.proxySelector;
        java.net.ResponseCache responseCache11 = okHttpClient4.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet12 = okHttpClient4.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler14 = okHttpClient13.getCookieHandler();
        boolean boolean15 = okHttpClient13.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient13.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool19 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int20 = connectionPool19.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient16.setConnectionPool(connectionPool19);
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector23 = null;
        okHttpClient22.proxySelector = proxySelector23;
        java.net.ProxySelector proxySelector25 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient22.setProxySelector(proxySelector25);
        java.net.ProxySelector proxySelector27 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient22.setProxySelector(proxySelector27);
        okHttpClient21.proxySelector = proxySelector27;
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = okHttpClient21.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient4.setHostnameVerifier(hostnameVerifier30);
        java.net.Proxy proxy32 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress33 = proxy32.address();
        com.squareup.okhttp.OkHttpClient okHttpClient34 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector35 = null;
        okHttpClient34.proxySelector = proxySelector35;
        com.squareup.okhttp.ConnectionPool connectionPool37 = okHttpClient34.connectionPool;
        com.squareup.okhttp.ConnectionPool connectionPool38 = okHttpClient34.getConnectionPool();
        boolean boolean39 = proxy32.equals((java.lang.Object) okHttpClient34);
        okHttpClient4.proxy = proxy32;
        com.squareup.okhttp.OkHttpClient okHttpClient41 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler42 = okHttpClient41.getCookieHandler();
        boolean boolean43 = okHttpClient41.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient44 = okHttpClient41.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier45 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient46 = okHttpClient44.setHostnameVerifier(hostnameVerifier45);
        java.net.ResponseCache responseCache47 = okHttpClient46.getResponseCache();
        java.net.ProxySelector proxySelector48 = okHttpClient46.getProxySelector();
        boolean boolean49 = proxy32.equals((java.lang.Object) proxySelector48);
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient0.setProxy(proxy32);
        com.squareup.okhttp.OkAuthenticator okAuthenticator51 = null;
        okHttpClient0.authenticator = okAuthenticator51;
        javax.net.ssl.HostnameVerifier hostnameVerifier53 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient54 = okHttpClient0.setHostnameVerifier(hostnameVerifier53);
        java.net.Proxy proxy55 = okHttpClient54.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient56 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler57 = okHttpClient56.getCookieHandler();
        boolean boolean58 = okHttpClient56.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient59 = okHttpClient56.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet60 = okHttpClient59.failedRoutes;
        boolean boolean61 = okHttpClient59.getFollowProtocolRedirects();
        java.net.ResponseCache responseCache62 = null;
        okHttpClient59.responseCache = responseCache62;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory64 = okHttpClient59.getSslSocketFactory();
        java.lang.String[] strArray65 = sSLSocketFactory64.getDefaultCipherSuites();
        java.lang.String[] strArray66 = sSLSocketFactory64.getDefaultCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient67 = okHttpClient54.setSSLSocketFactory(sSLSocketFactory64);
        com.squareup.okhttp.OkHttpClient okHttpClient68 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler69 = okHttpClient68.getCookieHandler();
        boolean boolean70 = okHttpClient68.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient71 = okHttpClient68.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier72 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient73 = okHttpClient71.setHostnameVerifier(hostnameVerifier72);
        java.net.ResponseCache responseCache74 = okHttpClient73.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator75 = okHttpClient73.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier76 = okHttpClient73.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory77 = okHttpClient73.getSslSocketFactory();
        java.lang.String[] strArray78 = sSLSocketFactory77.getSupportedCipherSuites();
        java.net.Socket socket79 = sSLSocketFactory77.createSocket();
        java.net.Socket socket80 = sSLSocketFactory77.createSocket();
        java.net.Socket socket81 = sSLSocketFactory77.createSocket();
        java.lang.String[] strArray82 = sSLSocketFactory77.getDefaultCipherSuites();
        java.net.Socket socket83 = sSLSocketFactory77.createSocket();
        java.io.InputStream inputStream84 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket86 = sSLSocketFactory64.createSocket(socket83, inputStream84, false);
            org.junit.Assert.fail("Expected exception of type java.net.SocketException; message: Underlying socket is not connected");
        } catch (java.net.SocketException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNull(proxySelector7);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNull(proxySelector10);
        org.junit.Assert.assertNull(responseCache11);
        org.junit.Assert.assertNotNull(routeSet12);
        org.junit.Assert.assertNull(cookieHandler14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNotNull(okHttpClient26);
// flaky:         org.junit.Assert.assertNull(proxySelector27);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNotNull(hostnameVerifier30);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNotNull(proxy32);
        org.junit.Assert.assertNull(socketAddress33);
        org.junit.Assert.assertNull(connectionPool37);
        org.junit.Assert.assertNull(connectionPool38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(cookieHandler42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(okHttpClient44);
        org.junit.Assert.assertNotNull(okHttpClient46);
        org.junit.Assert.assertNull(responseCache47);
// flaky:         org.junit.Assert.assertNull(proxySelector48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(okHttpClient50);
        org.junit.Assert.assertNotNull(okHttpClient54);
        org.junit.Assert.assertNotNull(proxy55);
        org.junit.Assert.assertNull(cookieHandler57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(okHttpClient59);
        org.junit.Assert.assertNotNull(routeSet60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(sSLSocketFactory64);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertNotNull(okHttpClient67);
        org.junit.Assert.assertNull(cookieHandler69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(okHttpClient71);
        org.junit.Assert.assertNotNull(okHttpClient73);
        org.junit.Assert.assertNull(responseCache74);
        org.junit.Assert.assertNotNull(okAuthenticator75);
        org.junit.Assert.assertNull(hostnameVerifier76);
        org.junit.Assert.assertNotNull(sSLSocketFactory77);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertNotNull(socket79);
        org.junit.Assert.assertEquals(socket79.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(socket80);
        org.junit.Assert.assertEquals(socket80.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(socket81);
        org.junit.Assert.assertEquals(socket81.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertNotNull(socket83);
        org.junit.Assert.assertEquals(socket83.toString(), "Socket[unconnected]");
    }

    @Test
    public void test03222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03222");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool6 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int7 = connectionPool6.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient3.setConnectionPool(connectionPool6);
        javax.net.ssl.HostnameVerifier hostnameVerifier9 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier9;
        com.squareup.okhttp.OkAuthenticator okAuthenticator11 = null;
        okHttpClient3.authenticator = okAuthenticator11;
        boolean boolean13 = okHttpClient3.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector15 = null;
        okHttpClient14.proxySelector = proxySelector15;
        java.net.ProxySelector proxySelector17 = okHttpClient14.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient14.setHostnameVerifier(hostnameVerifier18);
        java.net.ProxySelector proxySelector20 = okHttpClient14.proxySelector;
        java.net.ResponseCache responseCache21 = okHttpClient14.getResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler23 = okHttpClient22.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray24 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet25 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet25, routeArray24);
        okHttpClient22.failedRoutes = routeSet25;
        java.net.Proxy proxy28 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient29 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler30 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient29.setCookieHandler(cookieHandler30);
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient29.setFollowProtocolRedirects(true);
        boolean boolean34 = proxy28.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient22.setProxy(proxy28);
        okHttpClient14.proxy = proxy28;
        com.squareup.okhttp.OkHttpClient okHttpClient37 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler38 = okHttpClient37.getCookieHandler();
        boolean boolean39 = okHttpClient37.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient40 = okHttpClient37.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier41 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient40.setHostnameVerifier(hostnameVerifier41);
        boolean boolean43 = proxy28.equals((java.lang.Object) okHttpClient40);
        java.net.SocketAddress socketAddress44 = proxy28.address();
        java.lang.String str45 = proxy28.toString();
        com.squareup.okhttp.OkHttpClient okHttpClient46 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler47 = okHttpClient46.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray48 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet49 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet49, routeArray48);
        okHttpClient46.failedRoutes = routeSet49;
        java.net.Proxy proxy52 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient53 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler54 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient55 = okHttpClient53.setCookieHandler(cookieHandler54);
        com.squareup.okhttp.OkHttpClient okHttpClient57 = okHttpClient53.setFollowProtocolRedirects(true);
        boolean boolean58 = proxy52.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient59 = okHttpClient46.setProxy(proxy52);
        com.squareup.okhttp.OkAuthenticator okAuthenticator60 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient61 = okHttpClient59.setAuthenticator(okAuthenticator60);
        com.squareup.okhttp.OkHttpClient okHttpClient62 = okHttpClient61.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient63 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector64 = null;
        okHttpClient63.proxySelector = proxySelector64;
        java.net.ProxySelector proxySelector66 = okHttpClient63.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier67 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient68 = okHttpClient63.setHostnameVerifier(hostnameVerifier67);
        boolean boolean69 = okHttpClient63.getFollowProtocolRedirects();
        com.squareup.okhttp.ConnectionPool connectionPool72 = new com.squareup.okhttp.ConnectionPool((int) 'a', (long) (byte) -1);
        com.squareup.okhttp.OkHttpClient okHttpClient73 = okHttpClient63.setConnectionPool(connectionPool72);
        com.squareup.okhttp.OkHttpClient okHttpClient74 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler75 = okHttpClient74.getCookieHandler();
        boolean boolean76 = okHttpClient74.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient77 = okHttpClient74.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier78 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient79 = okHttpClient77.setHostnameVerifier(hostnameVerifier78);
        java.net.ResponseCache responseCache80 = okHttpClient79.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator81 = okHttpClient79.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier82 = okHttpClient79.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory83 = okHttpClient79.getSslSocketFactory();
        okHttpClient63.sslSocketFactory = sSLSocketFactory83;
        java.net.Socket socket85 = sSLSocketFactory83.createSocket();
        com.squareup.okhttp.OkHttpClient okHttpClient86 = okHttpClient61.setSSLSocketFactory(sSLSocketFactory83);
        boolean boolean87 = proxy28.equals((java.lang.Object) okHttpClient86);
        com.squareup.okhttp.OkHttpClient okHttpClient88 = okHttpClient3.setProxy(proxy28);
        java.net.CookieHandler cookieHandler89 = null;
        okHttpClient88.cookieHandler = cookieHandler89;
        com.squareup.okhttp.OkHttpClient okHttpClient92 = okHttpClient88.setFollowProtocolRedirects(true);
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(proxySelector17);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNull(proxySelector20);
        org.junit.Assert.assertNull(responseCache21);
        org.junit.Assert.assertNull(cookieHandler23);
        org.junit.Assert.assertNotNull(routeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(proxy28);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNotNull(okHttpClient33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNull(cookieHandler38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(okHttpClient40);
        org.junit.Assert.assertNotNull(okHttpClient42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(socketAddress44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "DIRECT" + "'", str45, "DIRECT");
        org.junit.Assert.assertNull(cookieHandler47);
        org.junit.Assert.assertNotNull(routeArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(proxy52);
        org.junit.Assert.assertNotNull(okHttpClient55);
        org.junit.Assert.assertNotNull(okHttpClient57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(okHttpClient59);
        org.junit.Assert.assertNotNull(okHttpClient61);
        org.junit.Assert.assertNotNull(okHttpClient62);
        org.junit.Assert.assertNull(proxySelector66);
        org.junit.Assert.assertNotNull(okHttpClient68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(okHttpClient73);
        org.junit.Assert.assertNull(cookieHandler75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(okHttpClient77);
        org.junit.Assert.assertNotNull(okHttpClient79);
        org.junit.Assert.assertNull(responseCache80);
        org.junit.Assert.assertNotNull(okAuthenticator81);
        org.junit.Assert.assertNull(hostnameVerifier82);
        org.junit.Assert.assertNotNull(sSLSocketFactory83);
        org.junit.Assert.assertNotNull(socket85);
        org.junit.Assert.assertEquals(socket85.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(okHttpClient86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(okHttpClient88);
        org.junit.Assert.assertNotNull(okHttpClient92);
    }

    @Test
    public void test03223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03223");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient3.setHostnameVerifier(hostnameVerifier4);
        java.net.ResponseCache responseCache6 = okHttpClient5.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator7 = okHttpClient5.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = okHttpClient5.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory9 = okHttpClient5.getSslSocketFactory();
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket12 = sSLSocketFactory9.createSocket("hi!", (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.net.UnknownHostException; message: hi!");
        } catch (java.net.UnknownHostException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(responseCache6);
        org.junit.Assert.assertNotNull(okAuthenticator7);
        org.junit.Assert.assertNull(hostnameVerifier8);
        org.junit.Assert.assertNotNull(sSLSocketFactory9);
    }

    @Test
    public void test03224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03224");
        com.squareup.okhttp.ConnectionPool connectionPool2 = new com.squareup.okhttp.ConnectionPool((int) (short) 100, (long) 10);
        int int3 = connectionPool2.getSpdyConnectionCount();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test03225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03225");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = okHttpClient0.hostnameVerifier;
        java.net.ResponseCache responseCache2 = okHttpClient0.getResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler4 = okHttpClient3.getCookieHandler();
        boolean boolean5 = okHttpClient3.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient3.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int10 = connectionPool9.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient6.setConnectionPool(connectionPool9);
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = null;
        okHttpClient6.hostnameVerifier = hostnameVerifier12;
        com.squareup.okhttp.ConnectionPool connectionPool14 = okHttpClient6.getConnectionPool();
        okHttpClient0.connectionPool = connectionPool14;
        java.net.CookieHandler cookieHandler16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient0.setCookieHandler(cookieHandler16);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory18 = null;
        okHttpClient17.sslSocketFactory = sSLSocketFactory18;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler21 = okHttpClient20.getCookieHandler();
        boolean boolean22 = okHttpClient20.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient20.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet24 = okHttpClient23.failedRoutes;
        boolean boolean25 = okHttpClient23.getFollowProtocolRedirects();
        java.net.Proxy proxy26 = java.net.Proxy.NO_PROXY;
        okHttpClient23.proxy = proxy26;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler29 = okHttpClient28.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray30 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet31 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet31, routeArray30);
        okHttpClient28.failedRoutes = routeSet31;
        java.net.Proxy proxy34 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient35 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler36 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient35.setCookieHandler(cookieHandler36);
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient35.setFollowProtocolRedirects(true);
        boolean boolean40 = proxy34.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient41 = okHttpClient28.setProxy(proxy34);
        java.net.SocketAddress socketAddress42 = proxy34.address();
        com.squareup.okhttp.OkHttpClient okHttpClient43 = okHttpClient23.setProxy(proxy34);
        com.squareup.okhttp.OkAuthenticator okAuthenticator44 = okHttpClient43.getAuthenticator();
        okHttpClient17.authenticator = okAuthenticator44;
        com.squareup.okhttp.OkHttpClient okHttpClient46 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler47 = okHttpClient46.getCookieHandler();
        boolean boolean48 = okHttpClient46.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient49 = okHttpClient46.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool52 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int53 = connectionPool52.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient54 = okHttpClient49.setConnectionPool(connectionPool52);
        com.squareup.okhttp.OkHttpClient okHttpClient55 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler56 = okHttpClient55.getCookieHandler();
        boolean boolean57 = okHttpClient55.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient58 = okHttpClient55.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier59 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient60 = okHttpClient58.setHostnameVerifier(hostnameVerifier59);
        java.net.ResponseCache responseCache61 = okHttpClient60.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator62 = okHttpClient60.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier63 = okHttpClient60.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory64 = okHttpClient60.getSslSocketFactory();
        java.lang.String[] strArray65 = sSLSocketFactory64.getSupportedCipherSuites();
        java.lang.String[] strArray66 = sSLSocketFactory64.getDefaultCipherSuites();
        java.lang.String[] strArray67 = sSLSocketFactory64.getDefaultCipherSuites();
        java.lang.String[] strArray68 = sSLSocketFactory64.getDefaultCipherSuites();
        java.lang.String[] strArray69 = sSLSocketFactory64.getSupportedCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient70 = okHttpClient49.setSSLSocketFactory(sSLSocketFactory64);
        com.squareup.okhttp.OkAuthenticator okAuthenticator71 = okHttpClient70.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient72 = okHttpClient17.setAuthenticator(okAuthenticator71);
        javax.net.ssl.HostnameVerifier hostnameVerifier73 = okHttpClient72.getHostnameVerifier();
        org.junit.Assert.assertNull(hostnameVerifier1);
        org.junit.Assert.assertNull(responseCache2);
        org.junit.Assert.assertNull(cookieHandler4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(okHttpClient6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(connectionPool14);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNull(cookieHandler21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertNotNull(routeSet24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(proxy26);
        org.junit.Assert.assertNull(cookieHandler29);
        org.junit.Assert.assertNotNull(routeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(proxy34);
        org.junit.Assert.assertNotNull(okHttpClient37);
        org.junit.Assert.assertNotNull(okHttpClient39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(okHttpClient41);
        org.junit.Assert.assertNull(socketAddress42);
        org.junit.Assert.assertNotNull(okHttpClient43);
        org.junit.Assert.assertNotNull(okAuthenticator44);
        org.junit.Assert.assertNull(cookieHandler47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(okHttpClient49);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(okHttpClient54);
        org.junit.Assert.assertNull(cookieHandler56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(okHttpClient58);
        org.junit.Assert.assertNotNull(okHttpClient60);
        org.junit.Assert.assertNull(responseCache61);
        org.junit.Assert.assertNotNull(okAuthenticator62);
        org.junit.Assert.assertNull(hostnameVerifier63);
        org.junit.Assert.assertNotNull(sSLSocketFactory64);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNotNull(okHttpClient70);
        org.junit.Assert.assertNotNull(okAuthenticator71);
        org.junit.Assert.assertNotNull(okHttpClient72);
        org.junit.Assert.assertNull(hostnameVerifier73);
    }

    @Test
    public void test03226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03226");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray2 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet3 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet3, routeArray2);
        okHttpClient0.failedRoutes = routeSet3;
        java.net.Proxy proxy6 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient7.setCookieHandler(cookieHandler8);
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient7.setFollowProtocolRedirects(true);
        boolean boolean12 = proxy6.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient0.setProxy(proxy6);
        com.squareup.okhttp.OkAuthenticator okAuthenticator14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient13.setAuthenticator(okAuthenticator14);
        boolean boolean16 = okHttpClient13.getFollowProtocolRedirects();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory17 = okHttpClient13.sslSocketFactory;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector19 = null;
        okHttpClient18.proxySelector = proxySelector19;
        java.net.ProxySelector proxySelector21 = okHttpClient18.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier22 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient18.setHostnameVerifier(hostnameVerifier22);
        java.net.ProxySelector proxySelector24 = okHttpClient18.proxySelector;
        java.net.ResponseCache responseCache25 = okHttpClient18.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet26 = okHttpClient18.failedRoutes;
        com.squareup.okhttp.ConnectionPool connectionPool29 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool29.evictAll();
        com.squareup.okhttp.Address address31 = null;
        com.squareup.okhttp.Connection connection32 = connectionPool29.get(address31);
        okHttpClient18.connectionPool = connectionPool29;
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient18.setFollowProtocolRedirects(true);
        java.net.ResponseCache responseCache36 = null;
        okHttpClient35.responseCache = responseCache36;
        com.squareup.okhttp.OkHttpClient okHttpClient38 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler39 = okHttpClient38.getCookieHandler();
        boolean boolean40 = okHttpClient38.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient41 = okHttpClient38.copyWithDefaults();
        java.net.ProxySelector proxySelector42 = okHttpClient38.getProxySelector();
        com.squareup.okhttp.OkHttpClient okHttpClient43 = okHttpClient38.copyWithDefaults();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory44 = okHttpClient43.sslSocketFactory;
        com.squareup.okhttp.OkHttpClient okHttpClient45 = okHttpClient35.setSSLSocketFactory(sSLSocketFactory44);
        java.net.Socket socket46 = sSLSocketFactory44.createSocket();
        java.lang.String[] strArray47 = sSLSocketFactory44.getDefaultCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient48 = okHttpClient13.setSSLSocketFactory(sSLSocketFactory44);
        java.net.ResponseCache responseCache49 = null;
        okHttpClient13.responseCache = responseCache49;
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertNotNull(routeArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(proxy6);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(sSLSocketFactory17);
        org.junit.Assert.assertNull(proxySelector21);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertNull(proxySelector24);
        org.junit.Assert.assertNull(responseCache25);
        org.junit.Assert.assertNotNull(routeSet26);
        org.junit.Assert.assertNull(connection32);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNull(cookieHandler39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(okHttpClient41);
        org.junit.Assert.assertNull(proxySelector42);
        org.junit.Assert.assertNotNull(okHttpClient43);
        org.junit.Assert.assertNotNull(sSLSocketFactory44);
        org.junit.Assert.assertNotNull(okHttpClient45);
        org.junit.Assert.assertNotNull(socket46);
        org.junit.Assert.assertEquals(socket46.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(okHttpClient48);
    }

    @Test
    public void test03227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03227");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        java.net.ResponseCache responseCache5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient0.setResponseCache(responseCache5);
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool9.evictAll();
        okHttpClient0.connectionPool = connectionPool9;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory12 = okHttpClient0.sslSocketFactory;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory13 = null;
        okHttpClient0.sslSocketFactory = sSLSocketFactory13;
        java.net.ProxySelector proxySelector15 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient0.setProxySelector(proxySelector15);
        java.net.CookieHandler cookieHandler17 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient0.setCookieHandler(cookieHandler17);
        com.squareup.okhttp.ConnectionPool connectionPool19 = okHttpClient18.connectionPool;
        int int20 = connectionPool19.getSpdyConnectionCount();
        int int21 = connectionPool19.getConnectionCount();
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient6);
        org.junit.Assert.assertNull(sSLSocketFactory12);
// flaky:         org.junit.Assert.assertNull(proxySelector15);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNotNull(connectionPool19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
    }

    @Test
    public void test03228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03228");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet4 = okHttpClient3.failedRoutes;
        boolean boolean5 = okHttpClient3.getFollowProtocolRedirects();
        java.net.Proxy proxy6 = java.net.Proxy.NO_PROXY;
        okHttpClient3.proxy = proxy6;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler9 = okHttpClient8.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray10 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet11 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet11, routeArray10);
        okHttpClient8.failedRoutes = routeSet11;
        java.net.Proxy proxy14 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient15.setCookieHandler(cookieHandler16);
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient15.setFollowProtocolRedirects(true);
        boolean boolean20 = proxy14.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient8.setProxy(proxy14);
        java.net.SocketAddress socketAddress22 = proxy14.address();
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient3.setProxy(proxy14);
        okHttpClient23.followProtocolRedirects = false;
        java.net.CookieHandler cookieHandler26 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient23.setCookieHandler(cookieHandler26);
        java.net.CookieHandler cookieHandler28 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient27.setCookieHandler(cookieHandler28);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory30 = okHttpClient27.getSslSocketFactory();
        java.lang.String[] strArray31 = sSLSocketFactory30.getDefaultCipherSuites();
        java.net.InetAddress inetAddress34 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket36 = sSLSocketFactory30.createSocket("DIRECT", 1, inetAddress34, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.net.BindException; message: Permission denied (Bind failed)");
        } catch (java.net.BindException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertNotNull(routeSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(proxy6);
        org.junit.Assert.assertNull(cookieHandler9);
        org.junit.Assert.assertNotNull(routeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(proxy14);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNull(socketAddress22);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNotNull(okHttpClient29);
        org.junit.Assert.assertNotNull(sSLSocketFactory30);
        org.junit.Assert.assertNotNull(strArray31);
    }

    @Test
    public void test03229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03229");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet4 = okHttpClient3.failedRoutes;
        java.net.Proxy proxy5 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress6 = proxy5.address();
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector8 = null;
        okHttpClient7.proxySelector = proxySelector8;
        com.squareup.okhttp.ConnectionPool connectionPool10 = okHttpClient7.connectionPool;
        com.squareup.okhttp.ConnectionPool connectionPool11 = okHttpClient7.getConnectionPool();
        boolean boolean12 = proxy5.equals((java.lang.Object) okHttpClient7);
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler14 = okHttpClient13.getCookieHandler();
        boolean boolean15 = okHttpClient13.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient13.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool19 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int20 = connectionPool19.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient16.setConnectionPool(connectionPool19);
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient7.setConnectionPool(connectionPool19);
        okHttpClient3.connectionPool = connectionPool19;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory24 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient3.setSSLSocketFactory(sSLSocketFactory24);
        okHttpClient3.followProtocolRedirects = true;
        okHttpClient3.followProtocolRedirects = false;
        okHttpClient3.followProtocolRedirects = false;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector33 = null;
        okHttpClient32.proxySelector = proxySelector33;
        java.net.ProxySelector proxySelector35 = okHttpClient32.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier36 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient32.setHostnameVerifier(hostnameVerifier36);
        java.net.ResponseCache responseCache38 = okHttpClient37.responseCache;
        boolean boolean39 = okHttpClient37.getFollowProtocolRedirects();
        java.net.ResponseCache responseCache40 = okHttpClient37.responseCache;
        com.squareup.okhttp.OkHttpClient okHttpClient41 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector42 = null;
        okHttpClient41.proxySelector = proxySelector42;
        java.net.ProxySelector proxySelector44 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient45 = okHttpClient41.setProxySelector(proxySelector44);
        java.net.ResponseCache responseCache46 = null;
        okHttpClient41.responseCache = responseCache46;
        java.net.ResponseCache responseCache48 = okHttpClient41.responseCache;
        com.squareup.okhttp.OkHttpClient okHttpClient49 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler50 = okHttpClient49.getCookieHandler();
        boolean boolean51 = okHttpClient49.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator52 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient53 = okHttpClient49.setAuthenticator(okAuthenticator52);
        java.net.ResponseCache responseCache54 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient55 = okHttpClient49.setResponseCache(responseCache54);
        com.squareup.okhttp.ConnectionPool connectionPool58 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool58.evictAll();
        okHttpClient49.connectionPool = connectionPool58;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory61 = okHttpClient49.sslSocketFactory;
        java.net.ResponseCache responseCache62 = null;
        okHttpClient49.responseCache = responseCache62;
        com.squareup.okhttp.OkAuthenticator okAuthenticator64 = okHttpClient49.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient65 = okHttpClient49.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient66 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector67 = null;
        okHttpClient66.proxySelector = proxySelector67;
        java.net.ProxySelector proxySelector69 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient70 = okHttpClient66.setProxySelector(proxySelector69);
        java.net.ProxySelector proxySelector71 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient72 = okHttpClient66.setProxySelector(proxySelector71);
        java.net.ProxySelector.setDefault(proxySelector71);
        com.squareup.okhttp.OkHttpClient okHttpClient74 = okHttpClient65.setProxySelector(proxySelector71);
        com.squareup.okhttp.OkHttpClient okHttpClient75 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler76 = okHttpClient75.getCookieHandler();
        boolean boolean77 = okHttpClient75.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient78 = okHttpClient75.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool81 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int82 = connectionPool81.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient83 = okHttpClient78.setConnectionPool(connectionPool81);
        javax.net.ssl.HostnameVerifier hostnameVerifier84 = null;
        okHttpClient78.hostnameVerifier = hostnameVerifier84;
        com.squareup.okhttp.ConnectionPool connectionPool86 = okHttpClient78.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator87 = okHttpClient78.authenticator;
        okHttpClient65.authenticator = okAuthenticator87;
        okHttpClient41.authenticator = okAuthenticator87;
        com.squareup.okhttp.OkHttpClient okHttpClient90 = okHttpClient37.setAuthenticator(okAuthenticator87);
        okHttpClient3.authenticator = okAuthenticator87;
        java.net.ResponseCache responseCache92 = okHttpClient3.responseCache;
        java.net.Proxy proxy93 = okHttpClient3.proxy;
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertNotNull(routeSet4);
        org.junit.Assert.assertNotNull(proxy5);
        org.junit.Assert.assertNull(socketAddress6);
        org.junit.Assert.assertNull(connectionPool10);
        org.junit.Assert.assertNull(connectionPool11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(cookieHandler14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNotNull(okHttpClient25);
        org.junit.Assert.assertNull(proxySelector35);
        org.junit.Assert.assertNotNull(okHttpClient37);
        org.junit.Assert.assertNull(responseCache38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(responseCache40);
        org.junit.Assert.assertNotNull(okHttpClient45);
        org.junit.Assert.assertNull(responseCache48);
        org.junit.Assert.assertNull(cookieHandler50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(okHttpClient53);
        org.junit.Assert.assertNotNull(okHttpClient55);
        org.junit.Assert.assertNull(sSLSocketFactory61);
        org.junit.Assert.assertNull(okAuthenticator64);
        org.junit.Assert.assertNotNull(okHttpClient65);
        org.junit.Assert.assertNotNull(okHttpClient70);
// flaky:         org.junit.Assert.assertNull(proxySelector71);
        org.junit.Assert.assertNotNull(okHttpClient72);
        org.junit.Assert.assertNotNull(okHttpClient74);
        org.junit.Assert.assertNull(cookieHandler76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(okHttpClient78);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertNotNull(okHttpClient83);
        org.junit.Assert.assertNotNull(connectionPool86);
        org.junit.Assert.assertNotNull(okAuthenticator87);
        org.junit.Assert.assertNotNull(okHttpClient90);
        org.junit.Assert.assertNull(responseCache92);
        org.junit.Assert.assertNull(proxy93);
    }

    @Test
    public void test03230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03230");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setHostnameVerifier(hostnameVerifier4);
        java.net.ResponseCache responseCache6 = okHttpClient5.responseCache;
        java.net.CookieHandler cookieHandler7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient5.setCookieHandler(cookieHandler7);
        java.net.CookieHandler cookieHandler9 = okHttpClient5.cookieHandler;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient5.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector12 = null;
        okHttpClient11.proxySelector = proxySelector12;
        java.net.ProxySelector proxySelector14 = okHttpClient11.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient11.setHostnameVerifier(hostnameVerifier15);
        boolean boolean17 = okHttpClient11.getFollowProtocolRedirects();
        com.squareup.okhttp.ConnectionPool connectionPool20 = new com.squareup.okhttp.ConnectionPool((int) 'a', (long) (byte) -1);
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient11.setConnectionPool(connectionPool20);
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler23 = okHttpClient22.getCookieHandler();
        boolean boolean24 = okHttpClient22.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient22.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier26 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient25.setHostnameVerifier(hostnameVerifier26);
        java.net.ResponseCache responseCache28 = okHttpClient27.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator29 = okHttpClient27.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = okHttpClient27.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory31 = okHttpClient27.getSslSocketFactory();
        okHttpClient11.sslSocketFactory = sSLSocketFactory31;
        okHttpClient5.sslSocketFactory = sSLSocketFactory31;
        java.lang.String[] strArray34 = sSLSocketFactory31.getSupportedCipherSuites();
        java.net.Socket socket35 = sSLSocketFactory31.createSocket();
        com.squareup.okhttp.OkHttpClient okHttpClient36 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler37 = okHttpClient36.getCookieHandler();
        boolean boolean38 = okHttpClient36.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator39 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient40 = okHttpClient36.setAuthenticator(okAuthenticator39);
        java.net.Proxy proxy41 = okHttpClient36.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient36.copyWithDefaults();
        java.net.CookieHandler cookieHandler43 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient44 = okHttpClient36.setCookieHandler(cookieHandler43);
        com.squareup.okhttp.OkHttpClient okHttpClient45 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler46 = okHttpClient45.getCookieHandler();
        boolean boolean47 = okHttpClient45.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient48 = okHttpClient45.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier49 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient48.setHostnameVerifier(hostnameVerifier49);
        java.net.ResponseCache responseCache51 = okHttpClient50.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator52 = okHttpClient50.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier53 = okHttpClient50.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory54 = okHttpClient50.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient55 = okHttpClient36.setSSLSocketFactory(sSLSocketFactory54);
        java.net.Socket socket56 = sSLSocketFactory54.createSocket();
        java.io.InputStream inputStream57 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket59 = sSLSocketFactory31.createSocket(socket56, inputStream57, true);
            org.junit.Assert.fail("Expected exception of type java.net.SocketException; message: Underlying socket is not connected");
        } catch (java.net.SocketException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(responseCache6);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertNull(cookieHandler9);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertNull(proxySelector14);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNull(cookieHandler23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(okHttpClient25);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNull(responseCache28);
        org.junit.Assert.assertNotNull(okAuthenticator29);
        org.junit.Assert.assertNull(hostnameVerifier30);
        org.junit.Assert.assertNotNull(sSLSocketFactory31);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(socket35);
        org.junit.Assert.assertEquals(socket35.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNull(cookieHandler37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(okHttpClient40);
        org.junit.Assert.assertNull(proxy41);
        org.junit.Assert.assertNotNull(okHttpClient42);
        org.junit.Assert.assertNotNull(okHttpClient44);
        org.junit.Assert.assertNull(cookieHandler46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(okHttpClient48);
        org.junit.Assert.assertNotNull(okHttpClient50);
        org.junit.Assert.assertNull(responseCache51);
        org.junit.Assert.assertNotNull(okAuthenticator52);
        org.junit.Assert.assertNull(hostnameVerifier53);
        org.junit.Assert.assertNotNull(sSLSocketFactory54);
        org.junit.Assert.assertNotNull(okHttpClient55);
        org.junit.Assert.assertNotNull(socket56);
        org.junit.Assert.assertEquals(socket56.toString(), "Socket[unconnected]");
    }

    @Test
    public void test03231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03231");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet4 = okHttpClient3.failedRoutes;
        java.net.Proxy proxy5 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress6 = proxy5.address();
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector8 = null;
        okHttpClient7.proxySelector = proxySelector8;
        com.squareup.okhttp.ConnectionPool connectionPool10 = okHttpClient7.connectionPool;
        com.squareup.okhttp.ConnectionPool connectionPool11 = okHttpClient7.getConnectionPool();
        boolean boolean12 = proxy5.equals((java.lang.Object) okHttpClient7);
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler14 = okHttpClient13.getCookieHandler();
        boolean boolean15 = okHttpClient13.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient13.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool19 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int20 = connectionPool19.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient16.setConnectionPool(connectionPool19);
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient7.setConnectionPool(connectionPool19);
        okHttpClient3.connectionPool = connectionPool19;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory24 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient3.setSSLSocketFactory(sSLSocketFactory24);
        java.net.Proxy proxy26 = okHttpClient3.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool29 = new com.squareup.okhttp.ConnectionPool((int) (byte) 10, (long) (-1));
        com.squareup.okhttp.Address address30 = null;
        com.squareup.okhttp.Connection connection31 = connectionPool29.get(address30);
        okHttpClient3.connectionPool = connectionPool29;
        com.squareup.okhttp.OkHttpClient okHttpClient33 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler34 = okHttpClient33.getCookieHandler();
        boolean boolean35 = okHttpClient33.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator36 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient33.setAuthenticator(okAuthenticator36);
        java.net.ResponseCache responseCache38 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient33.setResponseCache(responseCache38);
        com.squareup.okhttp.ConnectionPool connectionPool42 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool42.evictAll();
        okHttpClient33.connectionPool = connectionPool42;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory45 = okHttpClient33.sslSocketFactory;
        java.net.Proxy proxy46 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient47 = okHttpClient33.setProxy(proxy46);
        java.net.ProxySelector proxySelector48 = okHttpClient33.getProxySelector();
        com.squareup.okhttp.ConnectionPool connectionPool49 = okHttpClient33.getConnectionPool();
        com.squareup.okhttp.OkHttpClient okHttpClient50 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler51 = okHttpClient50.getCookieHandler();
        boolean boolean52 = okHttpClient50.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient53 = okHttpClient50.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet54 = okHttpClient53.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient55 = okHttpClient53.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool58 = new com.squareup.okhttp.ConnectionPool((int) '4', (long) 100);
        com.squareup.okhttp.OkHttpClient okHttpClient59 = okHttpClient53.setConnectionPool(connectionPool58);
        javax.net.ssl.HostnameVerifier hostnameVerifier60 = okHttpClient59.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient61 = okHttpClient33.setHostnameVerifier(hostnameVerifier60);
        okHttpClient3.hostnameVerifier = hostnameVerifier60;
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertNotNull(routeSet4);
        org.junit.Assert.assertNotNull(proxy5);
        org.junit.Assert.assertNull(socketAddress6);
        org.junit.Assert.assertNull(connectionPool10);
        org.junit.Assert.assertNull(connectionPool11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(cookieHandler14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNotNull(okHttpClient25);
        org.junit.Assert.assertNull(proxy26);
        org.junit.Assert.assertNull(connection31);
        org.junit.Assert.assertNull(cookieHandler34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(okHttpClient37);
        org.junit.Assert.assertNotNull(okHttpClient39);
        org.junit.Assert.assertNull(sSLSocketFactory45);
        org.junit.Assert.assertNotNull(proxy46);
        org.junit.Assert.assertNotNull(okHttpClient47);
        org.junit.Assert.assertNull(proxySelector48);
        org.junit.Assert.assertNotNull(connectionPool49);
        org.junit.Assert.assertNull(cookieHandler51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(okHttpClient53);
        org.junit.Assert.assertNotNull(routeSet54);
        org.junit.Assert.assertNotNull(okHttpClient55);
        org.junit.Assert.assertNotNull(okHttpClient59);
        org.junit.Assert.assertNotNull(hostnameVerifier60);
        org.junit.Assert.assertNotNull(okHttpClient61);
    }

    @Test
    public void test03232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03232");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool6 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int7 = connectionPool6.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient3.setConnectionPool(connectionPool6);
        com.squareup.okhttp.ConnectionPool connectionPool9 = okHttpClient3.connectionPool;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector11 = null;
        okHttpClient10.proxySelector = proxySelector11;
        java.net.ProxySelector proxySelector13 = okHttpClient10.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient10.setHostnameVerifier(hostnameVerifier14);
        java.net.ProxySelector proxySelector16 = java.net.ProxySelector.getDefault();
        okHttpClient10.proxySelector = proxySelector16;
        java.net.ProxySelector.setDefault(proxySelector16);
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient3.setProxySelector(proxySelector16);
        boolean boolean20 = okHttpClient3.getFollowProtocolRedirects();
        java.net.ResponseCache responseCache21 = okHttpClient3.getResponseCache();
        boolean boolean22 = okHttpClient3.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient23 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector24 = null;
        okHttpClient23.proxySelector = proxySelector24;
        java.net.ProxySelector proxySelector26 = okHttpClient23.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier27 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient23.setHostnameVerifier(hostnameVerifier27);
        java.net.ProxySelector proxySelector29 = okHttpClient23.proxySelector;
        java.net.ResponseCache responseCache30 = okHttpClient23.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet31 = okHttpClient23.failedRoutes;
        java.net.Proxy proxy32 = okHttpClient23.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient33 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler34 = okHttpClient33.getCookieHandler();
        boolean boolean35 = okHttpClient33.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient33.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool39 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int40 = connectionPool39.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient41 = okHttpClient36.setConnectionPool(connectionPool39);
        com.squareup.okhttp.OkHttpClient okHttpClient42 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler43 = okHttpClient42.getCookieHandler();
        boolean boolean44 = okHttpClient42.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient45 = okHttpClient42.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool48 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int49 = connectionPool48.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient45.setConnectionPool(connectionPool48);
        com.squareup.okhttp.OkHttpClient okHttpClient51 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector52 = null;
        okHttpClient51.proxySelector = proxySelector52;
        java.net.ProxySelector proxySelector54 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient55 = okHttpClient51.setProxySelector(proxySelector54);
        java.net.ProxySelector proxySelector56 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient57 = okHttpClient51.setProxySelector(proxySelector56);
        okHttpClient50.proxySelector = proxySelector56;
        com.squareup.okhttp.OkHttpClient okHttpClient59 = okHttpClient36.setProxySelector(proxySelector56);
        java.net.CookieHandler cookieHandler60 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient61 = okHttpClient59.setCookieHandler(cookieHandler60);
        com.squareup.okhttp.OkHttpClient okHttpClient62 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler63 = okHttpClient62.getCookieHandler();
        boolean boolean64 = okHttpClient62.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator65 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient66 = okHttpClient62.setAuthenticator(okAuthenticator65);
        java.net.ResponseCache responseCache67 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient68 = okHttpClient62.setResponseCache(responseCache67);
        com.squareup.okhttp.ConnectionPool connectionPool71 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool71.evictAll();
        okHttpClient62.connectionPool = connectionPool71;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory74 = okHttpClient62.sslSocketFactory;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory75 = null;
        okHttpClient62.sslSocketFactory = sSLSocketFactory75;
        java.net.ProxySelector proxySelector77 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient78 = okHttpClient62.setProxySelector(proxySelector77);
        com.squareup.okhttp.OkHttpClient okHttpClient79 = okHttpClient61.setProxySelector(proxySelector77);
        com.squareup.okhttp.OkAuthenticator okAuthenticator80 = okHttpClient79.getAuthenticator();
        okHttpClient23.authenticator = okAuthenticator80;
        com.squareup.okhttp.OkHttpClient okHttpClient82 = okHttpClient3.setAuthenticator(okAuthenticator80);
        java.net.ProxySelector proxySelector83 = okHttpClient3.proxySelector;
        java.net.URL uRL84 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.HttpURLConnection httpURLConnection85 = okHttpClient3.open(uRL84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNull(proxySelector13);
        org.junit.Assert.assertNotNull(okHttpClient15);
// flaky:         org.junit.Assert.assertNull(proxySelector16);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(responseCache21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(proxySelector26);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNull(proxySelector29);
        org.junit.Assert.assertNull(responseCache30);
        org.junit.Assert.assertNotNull(routeSet31);
        org.junit.Assert.assertNull(proxy32);
        org.junit.Assert.assertNull(cookieHandler34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(okHttpClient41);
        org.junit.Assert.assertNull(cookieHandler43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(okHttpClient45);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(okHttpClient50);
        org.junit.Assert.assertNotNull(okHttpClient55);
// flaky:         org.junit.Assert.assertNull(proxySelector56);
        org.junit.Assert.assertNotNull(okHttpClient57);
        org.junit.Assert.assertNotNull(okHttpClient59);
        org.junit.Assert.assertNotNull(okHttpClient61);
        org.junit.Assert.assertNull(cookieHandler63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(okHttpClient66);
        org.junit.Assert.assertNotNull(okHttpClient68);
        org.junit.Assert.assertNull(sSLSocketFactory74);
// flaky:         org.junit.Assert.assertNull(proxySelector77);
        org.junit.Assert.assertNotNull(okHttpClient78);
        org.junit.Assert.assertNotNull(okHttpClient79);
        org.junit.Assert.assertNotNull(okAuthenticator80);
        org.junit.Assert.assertNotNull(okHttpClient82);
// flaky:         org.junit.Assert.assertNull(proxySelector83);
    }

    @Test
    public void test03233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03233");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setHostnameVerifier(hostnameVerifier4);
        java.net.ProxySelector proxySelector6 = java.net.ProxySelector.getDefault();
        okHttpClient0.proxySelector = proxySelector6;
        java.net.ResponseCache responseCache8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient0.setResponseCache(responseCache8);
        com.squareup.okhttp.OkHttpClient okHttpClient10 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector11 = null;
        okHttpClient10.proxySelector = proxySelector11;
        java.net.ProxySelector proxySelector13 = okHttpClient10.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient10.setHostnameVerifier(hostnameVerifier14);
        java.net.ResponseCache responseCache16 = okHttpClient15.responseCache;
        java.net.CookieHandler cookieHandler17 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient15.setCookieHandler(cookieHandler17);
        java.net.CookieHandler cookieHandler19 = okHttpClient15.cookieHandler;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient15.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient21 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler22 = okHttpClient21.getCookieHandler();
        boolean boolean23 = okHttpClient21.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator24 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient21.setAuthenticator(okAuthenticator24);
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient21.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier27 = okHttpClient21.hostnameVerifier;
        java.net.ProxySelector proxySelector28 = java.net.ProxySelector.getDefault();
        okHttpClient21.proxySelector = proxySelector28;
        okHttpClient21.followProtocolRedirects = true;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector33 = null;
        okHttpClient32.proxySelector = proxySelector33;
        java.net.ProxySelector proxySelector35 = okHttpClient32.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier36 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient32.setHostnameVerifier(hostnameVerifier36);
        java.net.ProxySelector proxySelector38 = okHttpClient32.proxySelector;
        java.net.ResponseCache responseCache39 = okHttpClient32.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet40 = okHttpClient32.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient41 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler42 = okHttpClient41.getCookieHandler();
        boolean boolean43 = okHttpClient41.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient44 = okHttpClient41.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool47 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int48 = connectionPool47.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient49 = okHttpClient44.setConnectionPool(connectionPool47);
        com.squareup.okhttp.OkHttpClient okHttpClient50 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector51 = null;
        okHttpClient50.proxySelector = proxySelector51;
        java.net.ProxySelector proxySelector53 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient54 = okHttpClient50.setProxySelector(proxySelector53);
        java.net.ProxySelector proxySelector55 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient56 = okHttpClient50.setProxySelector(proxySelector55);
        okHttpClient49.proxySelector = proxySelector55;
        javax.net.ssl.HostnameVerifier hostnameVerifier58 = okHttpClient49.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient59 = okHttpClient32.setHostnameVerifier(hostnameVerifier58);
        com.squareup.okhttp.OkHttpClient okHttpClient60 = okHttpClient21.setHostnameVerifier(hostnameVerifier58);
        okHttpClient15.hostnameVerifier = hostnameVerifier58;
        com.squareup.okhttp.OkHttpClient okHttpClient62 = okHttpClient0.setHostnameVerifier(hostnameVerifier58);
        java.net.ResponseCache responseCache63 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient64 = okHttpClient62.setResponseCache(responseCache63);
        com.squareup.okhttp.OkHttpClient okHttpClient65 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler66 = okHttpClient65.getCookieHandler();
        boolean boolean67 = okHttpClient65.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator68 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient69 = okHttpClient65.setAuthenticator(okAuthenticator68);
        java.net.ResponseCache responseCache70 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient71 = okHttpClient65.setResponseCache(responseCache70);
        com.squareup.okhttp.ConnectionPool connectionPool74 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool74.evictAll();
        okHttpClient65.connectionPool = connectionPool74;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory77 = okHttpClient65.sslSocketFactory;
        java.net.ResponseCache responseCache78 = null;
        okHttpClient65.responseCache = responseCache78;
        com.squareup.okhttp.OkAuthenticator okAuthenticator80 = okHttpClient65.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient81 = okHttpClient65.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool82 = okHttpClient81.getConnectionPool();
        int int83 = connectionPool82.getHttpConnectionCount();
        connectionPool82.evictAll();
        okHttpClient64.connectionPool = connectionPool82;
        boolean boolean86 = okHttpClient64.getFollowProtocolRedirects();
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNotNull(okHttpClient5);
// flaky:         org.junit.Assert.assertNull(proxySelector6);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNull(proxySelector13);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNull(responseCache16);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNull(cookieHandler19);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNull(cookieHandler22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(okHttpClient25);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNull(hostnameVerifier27);
// flaky:         org.junit.Assert.assertNull(proxySelector28);
        org.junit.Assert.assertNull(proxySelector35);
        org.junit.Assert.assertNotNull(okHttpClient37);
        org.junit.Assert.assertNull(proxySelector38);
        org.junit.Assert.assertNull(responseCache39);
        org.junit.Assert.assertNotNull(routeSet40);
        org.junit.Assert.assertNull(cookieHandler42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(okHttpClient44);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(okHttpClient49);
        org.junit.Assert.assertNotNull(okHttpClient54);
// flaky:         org.junit.Assert.assertNull(proxySelector55);
        org.junit.Assert.assertNotNull(okHttpClient56);
        org.junit.Assert.assertNotNull(hostnameVerifier58);
        org.junit.Assert.assertNotNull(okHttpClient59);
        org.junit.Assert.assertNotNull(okHttpClient60);
        org.junit.Assert.assertNotNull(okHttpClient62);
        org.junit.Assert.assertNotNull(okHttpClient64);
        org.junit.Assert.assertNull(cookieHandler66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(okHttpClient69);
        org.junit.Assert.assertNotNull(okHttpClient71);
        org.junit.Assert.assertNull(sSLSocketFactory77);
        org.junit.Assert.assertNull(okAuthenticator80);
        org.junit.Assert.assertNotNull(okHttpClient81);
        org.junit.Assert.assertNotNull(connectionPool82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
    }

    @Test
    public void test03234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03234");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        java.net.ResponseCache responseCache3 = okHttpClient0.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory4 = okHttpClient0.getSslSocketFactory();
        java.util.Set<com.squareup.okhttp.Route> routeSet5 = okHttpClient0.failedRoutes;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        java.net.Proxy proxy7 = okHttpClient0.getProxy();
        org.junit.Assert.assertNull(responseCache3);
        org.junit.Assert.assertNull(sSLSocketFactory4);
        org.junit.Assert.assertNotNull(routeSet5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNull(proxy7);
    }

    @Test
    public void test03235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03235");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient4 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient4.hostnameVerifier;
        java.net.ResponseCache responseCache6 = okHttpClient4.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator7 = okHttpClient4.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler9 = okHttpClient8.getCookieHandler();
        boolean boolean10 = okHttpClient8.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient8.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setHostnameVerifier(hostnameVerifier12);
        java.net.ResponseCache responseCache14 = okHttpClient13.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator15 = okHttpClient13.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient4.setAuthenticator(okAuthenticator15);
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler18 = okHttpClient17.getCookieHandler();
        boolean boolean19 = okHttpClient17.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator20 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient17.setAuthenticator(okAuthenticator20);
        java.net.ResponseCache responseCache22 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient17.setResponseCache(responseCache22);
        com.squareup.okhttp.ConnectionPool connectionPool26 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool26.evictAll();
        okHttpClient17.connectionPool = connectionPool26;
        connectionPool26.evictAll();
        int int30 = connectionPool26.getSpdyConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient4.setConnectionPool(connectionPool26);
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache32 = okHttpClient4.okResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient33 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler34 = okHttpClient33.getCookieHandler();
        boolean boolean35 = okHttpClient33.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient33.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool39 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int40 = connectionPool39.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient41 = okHttpClient36.setConnectionPool(connectionPool39);
        com.squareup.okhttp.OkHttpClient okHttpClient42 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector43 = null;
        okHttpClient42.proxySelector = proxySelector43;
        java.net.ProxySelector proxySelector45 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient46 = okHttpClient42.setProxySelector(proxySelector45);
        java.net.ProxySelector proxySelector47 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient48 = okHttpClient42.setProxySelector(proxySelector47);
        okHttpClient41.proxySelector = proxySelector47;
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient4.setProxySelector(proxySelector47);
        com.squareup.okhttp.OkHttpClient okHttpClient51 = okHttpClient3.setProxySelector(proxySelector47);
        com.squareup.okhttp.OkHttpClient okHttpClient53 = okHttpClient3.setFollowProtocolRedirects(true);
        com.squareup.okhttp.ConnectionPool connectionPool54 = okHttpClient53.getConnectionPool();
        javax.net.ssl.HostnameVerifier hostnameVerifier55 = okHttpClient53.getHostnameVerifier();
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(responseCache6);
        org.junit.Assert.assertNull(okAuthenticator7);
        org.junit.Assert.assertNull(cookieHandler9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNull(responseCache14);
        org.junit.Assert.assertNotNull(okAuthenticator15);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNull(cookieHandler18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNull(okResponseCache32);
        org.junit.Assert.assertNull(cookieHandler34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(okHttpClient41);
        org.junit.Assert.assertNotNull(okHttpClient46);
// flaky:         org.junit.Assert.assertNull(proxySelector47);
        org.junit.Assert.assertNotNull(okHttpClient48);
        org.junit.Assert.assertNotNull(okHttpClient50);
        org.junit.Assert.assertNotNull(okHttpClient51);
        org.junit.Assert.assertNotNull(okHttpClient53);
        org.junit.Assert.assertNotNull(connectionPool54);
        org.junit.Assert.assertNotNull(hostnameVerifier55);
    }

    @Test
    public void test03236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03236");
        com.squareup.okhttp.ConnectionPool connectionPool2 = new com.squareup.okhttp.ConnectionPool((int) ' ', (long) (-1));
        int int3 = connectionPool2.getConnectionCount();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test03237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03237");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        java.net.ResponseCache responseCache5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient0.setResponseCache(responseCache5);
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool9.evictAll();
        okHttpClient0.connectionPool = connectionPool9;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory12 = okHttpClient0.sslSocketFactory;
        java.net.Proxy proxy13 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient0.setProxy(proxy13);
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler16 = okHttpClient15.getCookieHandler();
        boolean boolean17 = okHttpClient15.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient15.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet19 = okHttpClient18.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient18.copyWithDefaults();
        java.net.ProxySelector proxySelector21 = okHttpClient18.getProxySelector();
        okHttpClient14.proxySelector = proxySelector21;
        boolean boolean23 = okHttpClient14.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient24 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler25 = okHttpClient24.getCookieHandler();
        boolean boolean26 = okHttpClient24.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient24.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet28 = okHttpClient27.failedRoutes;
        boolean boolean29 = okHttpClient27.getFollowProtocolRedirects();
        java.net.Proxy proxy30 = java.net.Proxy.NO_PROXY;
        okHttpClient27.proxy = proxy30;
        java.lang.String str32 = proxy30.toString();
        java.lang.String str33 = proxy30.toString();
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient14.setProxy(proxy30);
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient14.copyWithDefaults();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory36 = okHttpClient35.getSslSocketFactory();
        java.lang.String[] strArray37 = sSLSocketFactory36.getDefaultCipherSuites();
        java.net.InetAddress inetAddress38 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket40 = sSLSocketFactory36.createSocket(inetAddress38, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.net.ConnectException; message: Connection refused (Connection refused)");
        } catch (java.net.ConnectException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient6);
        org.junit.Assert.assertNull(sSLSocketFactory12);
        org.junit.Assert.assertNotNull(proxy13);
        org.junit.Assert.assertNotNull(okHttpClient14);
        org.junit.Assert.assertNull(cookieHandler16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNotNull(routeSet19);
        org.junit.Assert.assertNotNull(okHttpClient20);
// flaky:         org.junit.Assert.assertNull(proxySelector21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(cookieHandler25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNotNull(routeSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(proxy30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "DIRECT" + "'", str32, "DIRECT");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "DIRECT" + "'", str33, "DIRECT");
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNotNull(sSLSocketFactory36);
        org.junit.Assert.assertNotNull(strArray37);
    }

    @Test
    public void test03238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03238");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setHostnameVerifier(hostnameVerifier4);
        java.net.ProxySelector proxySelector6 = okHttpClient0.proxySelector;
        java.net.ResponseCache responseCache7 = okHttpClient0.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet8 = okHttpClient0.failedRoutes;
        java.net.Proxy proxy9 = okHttpClient0.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector12 = null;
        okHttpClient11.proxySelector = proxySelector12;
        java.net.ProxySelector proxySelector14 = okHttpClient11.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient11.setHostnameVerifier(hostnameVerifier15);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory17 = okHttpClient16.sslSocketFactory;
        java.net.ProxySelector proxySelector18 = okHttpClient16.getProxySelector();
        com.squareup.okhttp.ConnectionPool connectionPool19 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient16.setConnectionPool(connectionPool19);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory21 = okHttpClient20.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier23 = okHttpClient22.hostnameVerifier;
        java.net.ResponseCache responseCache24 = okHttpClient22.getResponseCache();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory25 = okHttpClient22.sslSocketFactory;
        java.net.Proxy proxy26 = okHttpClient22.getProxy();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory27 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient22.setSSLSocketFactory(sSLSocketFactory27);
        java.net.CookieHandler cookieHandler29 = null;
        okHttpClient22.cookieHandler = cookieHandler29;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler32 = okHttpClient31.getCookieHandler();
        boolean boolean33 = okHttpClient31.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient31.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier35 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient34.setHostnameVerifier(hostnameVerifier35);
        java.net.ResponseCache responseCache37 = okHttpClient36.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator38 = okHttpClient36.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier39 = okHttpClient36.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory40 = okHttpClient36.getSslSocketFactory();
        java.lang.String[] strArray41 = sSLSocketFactory40.getSupportedCipherSuites();
        java.lang.String[] strArray42 = sSLSocketFactory40.getDefaultCipherSuites();
        java.lang.String[] strArray43 = sSLSocketFactory40.getDefaultCipherSuites();
        java.lang.String[] strArray44 = sSLSocketFactory40.getDefaultCipherSuites();
        java.lang.String[] strArray45 = sSLSocketFactory40.getDefaultCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient46 = okHttpClient22.setSSLSocketFactory(sSLSocketFactory40);
        com.squareup.okhttp.OkHttpClient okHttpClient47 = okHttpClient20.setSSLSocketFactory(sSLSocketFactory40);
        com.squareup.okhttp.OkHttpClient okHttpClient48 = okHttpClient10.setSSLSocketFactory(sSLSocketFactory40);
        java.lang.String[] strArray49 = sSLSocketFactory40.getSupportedCipherSuites();
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket52 = sSLSocketFactory40.createSocket("", 0);
            org.junit.Assert.fail("Expected exception of type java.net.ConnectException; message: Connection refused (Connection refused)");
        } catch (java.net.ConnectException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(proxySelector6);
        org.junit.Assert.assertNull(responseCache7);
        org.junit.Assert.assertNotNull(routeSet8);
        org.junit.Assert.assertNull(proxy9);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertNull(proxySelector14);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNull(sSLSocketFactory17);
        org.junit.Assert.assertNull(proxySelector18);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNull(sSLSocketFactory21);
        org.junit.Assert.assertNull(hostnameVerifier23);
        org.junit.Assert.assertNull(responseCache24);
        org.junit.Assert.assertNull(sSLSocketFactory25);
        org.junit.Assert.assertNull(proxy26);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNull(cookieHandler32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNull(responseCache37);
        org.junit.Assert.assertNotNull(okAuthenticator38);
        org.junit.Assert.assertNull(hostnameVerifier39);
        org.junit.Assert.assertNotNull(sSLSocketFactory40);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(okHttpClient46);
        org.junit.Assert.assertNotNull(okHttpClient47);
        org.junit.Assert.assertNotNull(okHttpClient48);
        org.junit.Assert.assertNotNull(strArray49);
    }

    @Test
    public void test03239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03239");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = okHttpClient0.hostnameVerifier;
        java.net.ResponseCache responseCache2 = okHttpClient0.getResponseCache();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory3 = okHttpClient0.sslSocketFactory;
        java.net.Proxy proxy4 = okHttpClient0.getProxy();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory5);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory7);
        com.squareup.okhttp.OkAuthenticator okAuthenticator9 = okHttpClient8.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector11 = null;
        okHttpClient10.proxySelector = proxySelector11;
        java.net.ProxySelector proxySelector13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient10.setProxySelector(proxySelector13);
        java.net.ProxySelector proxySelector15 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient10.setProxySelector(proxySelector15);
        java.net.ResponseCache responseCache17 = okHttpClient10.responseCache;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler19 = okHttpClient18.getCookieHandler();
        boolean boolean20 = okHttpClient18.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator21 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient18.setAuthenticator(okAuthenticator21);
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient18.copyWithDefaults();
        java.net.CookieHandler cookieHandler24 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient18.setCookieHandler(cookieHandler24);
        com.squareup.okhttp.OkAuthenticator okAuthenticator26 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient25.setAuthenticator(okAuthenticator26);
        com.squareup.okhttp.OkHttpClient okHttpClient28 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector29 = null;
        okHttpClient28.proxySelector = proxySelector29;
        java.net.ProxySelector proxySelector31 = okHttpClient28.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier32 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient28.setHostnameVerifier(hostnameVerifier32);
        java.net.ProxySelector proxySelector34 = okHttpClient28.proxySelector;
        java.net.ResponseCache responseCache35 = okHttpClient28.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet36 = okHttpClient28.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient37 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler38 = okHttpClient37.getCookieHandler();
        boolean boolean39 = okHttpClient37.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient40 = okHttpClient37.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool43 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int44 = connectionPool43.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient45 = okHttpClient40.setConnectionPool(connectionPool43);
        com.squareup.okhttp.OkHttpClient okHttpClient46 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector47 = null;
        okHttpClient46.proxySelector = proxySelector47;
        java.net.ProxySelector proxySelector49 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient46.setProxySelector(proxySelector49);
        java.net.ProxySelector proxySelector51 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient52 = okHttpClient46.setProxySelector(proxySelector51);
        okHttpClient45.proxySelector = proxySelector51;
        javax.net.ssl.HostnameVerifier hostnameVerifier54 = okHttpClient45.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient55 = okHttpClient28.setHostnameVerifier(hostnameVerifier54);
        javax.net.ssl.HostnameVerifier hostnameVerifier56 = okHttpClient55.getHostnameVerifier();
        okHttpClient27.hostnameVerifier = hostnameVerifier56;
        javax.net.ssl.HostnameVerifier hostnameVerifier58 = okHttpClient27.hostnameVerifier;
        okHttpClient10.hostnameVerifier = hostnameVerifier58;
        com.squareup.okhttp.OkHttpClient okHttpClient60 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector61 = null;
        okHttpClient60.proxySelector = proxySelector61;
        java.net.ProxySelector proxySelector63 = okHttpClient60.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier64 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient65 = okHttpClient60.setHostnameVerifier(hostnameVerifier64);
        java.net.ProxySelector proxySelector66 = java.net.ProxySelector.getDefault();
        okHttpClient60.proxySelector = proxySelector66;
        java.net.ProxySelector.setDefault(proxySelector66);
        okHttpClient10.proxySelector = proxySelector66;
        com.squareup.okhttp.OkHttpClient okHttpClient70 = okHttpClient8.setProxySelector(proxySelector66);
        java.net.ResponseCache responseCache71 = okHttpClient70.responseCache;
        java.net.CookieHandler cookieHandler72 = null;
        okHttpClient70.cookieHandler = cookieHandler72;
        org.junit.Assert.assertNull(hostnameVerifier1);
        org.junit.Assert.assertNull(responseCache2);
        org.junit.Assert.assertNull(sSLSocketFactory3);
        org.junit.Assert.assertNull(proxy4);
        org.junit.Assert.assertNotNull(okHttpClient6);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertNull(okAuthenticator9);
        org.junit.Assert.assertNotNull(okHttpClient14);
// flaky:         org.junit.Assert.assertNull(proxySelector15);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNull(responseCache17);
        org.junit.Assert.assertNull(cookieHandler19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertNotNull(okHttpClient25);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNull(proxySelector31);
        org.junit.Assert.assertNotNull(okHttpClient33);
        org.junit.Assert.assertNull(proxySelector34);
        org.junit.Assert.assertNull(responseCache35);
        org.junit.Assert.assertNotNull(routeSet36);
        org.junit.Assert.assertNull(cookieHandler38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(okHttpClient40);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(okHttpClient45);
        org.junit.Assert.assertNotNull(okHttpClient50);
// flaky:         org.junit.Assert.assertNull(proxySelector51);
        org.junit.Assert.assertNotNull(okHttpClient52);
        org.junit.Assert.assertNotNull(hostnameVerifier54);
        org.junit.Assert.assertNotNull(okHttpClient55);
        org.junit.Assert.assertNotNull(hostnameVerifier56);
        org.junit.Assert.assertNotNull(hostnameVerifier58);
        org.junit.Assert.assertNull(proxySelector63);
        org.junit.Assert.assertNotNull(okHttpClient65);
// flaky:         org.junit.Assert.assertNull(proxySelector66);
        org.junit.Assert.assertNotNull(okHttpClient70);
        org.junit.Assert.assertNull(responseCache71);
    }

    @Test
    public void test03240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03240");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient4 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector5 = null;
        okHttpClient4.proxySelector = proxySelector5;
        java.net.ProxySelector proxySelector7 = okHttpClient4.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient4.setHostnameVerifier(hostnameVerifier8);
        java.net.ProxySelector proxySelector10 = okHttpClient4.proxySelector;
        java.net.ResponseCache responseCache11 = okHttpClient4.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet12 = okHttpClient4.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler14 = okHttpClient13.getCookieHandler();
        boolean boolean15 = okHttpClient13.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient13.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool19 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int20 = connectionPool19.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient16.setConnectionPool(connectionPool19);
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector23 = null;
        okHttpClient22.proxySelector = proxySelector23;
        java.net.ProxySelector proxySelector25 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient22.setProxySelector(proxySelector25);
        java.net.ProxySelector proxySelector27 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient22.setProxySelector(proxySelector27);
        okHttpClient21.proxySelector = proxySelector27;
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = okHttpClient21.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient4.setHostnameVerifier(hostnameVerifier30);
        javax.net.ssl.HostnameVerifier hostnameVerifier32 = okHttpClient31.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient0.setHostnameVerifier(hostnameVerifier32);
        com.squareup.okhttp.OkHttpClient okHttpClient34 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector35 = null;
        okHttpClient34.proxySelector = proxySelector35;
        java.net.ProxySelector proxySelector37 = okHttpClient34.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier38 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient34.setHostnameVerifier(hostnameVerifier38);
        java.net.ProxySelector proxySelector40 = okHttpClient34.proxySelector;
        java.net.ResponseCache responseCache41 = okHttpClient34.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet42 = okHttpClient34.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient43 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler44 = okHttpClient43.getCookieHandler();
        boolean boolean45 = okHttpClient43.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient46 = okHttpClient43.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool49 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int50 = connectionPool49.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient51 = okHttpClient46.setConnectionPool(connectionPool49);
        com.squareup.okhttp.OkHttpClient okHttpClient52 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector53 = null;
        okHttpClient52.proxySelector = proxySelector53;
        java.net.ProxySelector proxySelector55 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient56 = okHttpClient52.setProxySelector(proxySelector55);
        java.net.ProxySelector proxySelector57 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient58 = okHttpClient52.setProxySelector(proxySelector57);
        okHttpClient51.proxySelector = proxySelector57;
        javax.net.ssl.HostnameVerifier hostnameVerifier60 = okHttpClient51.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient61 = okHttpClient34.setHostnameVerifier(hostnameVerifier60);
        javax.net.ssl.HostnameVerifier hostnameVerifier62 = okHttpClient61.getHostnameVerifier();
        okHttpClient0.hostnameVerifier = hostnameVerifier62;
        com.squareup.okhttp.OkHttpClient okHttpClient64 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector65 = null;
        okHttpClient64.proxySelector = proxySelector65;
        java.net.ProxySelector proxySelector67 = okHttpClient64.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier68 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient69 = okHttpClient64.setHostnameVerifier(hostnameVerifier68);
        java.net.ResponseCache responseCache70 = okHttpClient69.responseCache;
        java.net.CookieHandler cookieHandler71 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient72 = okHttpClient69.setCookieHandler(cookieHandler71);
        java.net.ResponseCache responseCache73 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient74 = okHttpClient69.setResponseCache(responseCache73);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory75 = okHttpClient69.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient76 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler77 = okHttpClient76.getCookieHandler();
        boolean boolean78 = okHttpClient76.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient79 = okHttpClient76.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool82 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int83 = connectionPool82.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient84 = okHttpClient79.setConnectionPool(connectionPool82);
        com.squareup.okhttp.ConnectionPool connectionPool85 = okHttpClient79.connectionPool;
        com.squareup.okhttp.OkHttpClient okHttpClient86 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector87 = null;
        okHttpClient86.proxySelector = proxySelector87;
        java.net.ProxySelector proxySelector89 = okHttpClient86.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier90 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient91 = okHttpClient86.setHostnameVerifier(hostnameVerifier90);
        java.net.ProxySelector proxySelector92 = java.net.ProxySelector.getDefault();
        okHttpClient86.proxySelector = proxySelector92;
        java.net.ProxySelector.setDefault(proxySelector92);
        com.squareup.okhttp.OkHttpClient okHttpClient95 = okHttpClient79.setProxySelector(proxySelector92);
        com.squareup.okhttp.OkHttpClient okHttpClient96 = okHttpClient69.setProxySelector(proxySelector92);
        com.squareup.okhttp.OkHttpClient okHttpClient97 = okHttpClient0.setProxySelector(proxySelector92);
        java.net.Proxy proxy98 = okHttpClient97.proxy;
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertNull(proxySelector7);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNull(proxySelector10);
        org.junit.Assert.assertNull(responseCache11);
        org.junit.Assert.assertNotNull(routeSet12);
        org.junit.Assert.assertNull(cookieHandler14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNotNull(okHttpClient26);
// flaky:         org.junit.Assert.assertNull(proxySelector27);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNotNull(hostnameVerifier30);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNotNull(hostnameVerifier32);
        org.junit.Assert.assertNotNull(okHttpClient33);
        org.junit.Assert.assertNull(proxySelector37);
        org.junit.Assert.assertNotNull(okHttpClient39);
        org.junit.Assert.assertNull(proxySelector40);
        org.junit.Assert.assertNull(responseCache41);
        org.junit.Assert.assertNotNull(routeSet42);
        org.junit.Assert.assertNull(cookieHandler44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(okHttpClient46);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(okHttpClient51);
        org.junit.Assert.assertNotNull(okHttpClient56);
// flaky:         org.junit.Assert.assertNull(proxySelector57);
        org.junit.Assert.assertNotNull(okHttpClient58);
        org.junit.Assert.assertNotNull(hostnameVerifier60);
        org.junit.Assert.assertNotNull(okHttpClient61);
        org.junit.Assert.assertNotNull(hostnameVerifier62);
        org.junit.Assert.assertNull(proxySelector67);
        org.junit.Assert.assertNotNull(okHttpClient69);
        org.junit.Assert.assertNull(responseCache70);
        org.junit.Assert.assertNotNull(okHttpClient72);
        org.junit.Assert.assertNotNull(okHttpClient74);
        org.junit.Assert.assertNull(sSLSocketFactory75);
        org.junit.Assert.assertNull(cookieHandler77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(okHttpClient79);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertNotNull(okHttpClient84);
        org.junit.Assert.assertNotNull(connectionPool85);
        org.junit.Assert.assertNull(proxySelector89);
        org.junit.Assert.assertNotNull(okHttpClient91);
// flaky:         org.junit.Assert.assertNull(proxySelector92);
        org.junit.Assert.assertNotNull(okHttpClient95);
        org.junit.Assert.assertNotNull(okHttpClient96);
        org.junit.Assert.assertNotNull(okHttpClient97);
        org.junit.Assert.assertNull(proxy98);
    }

    @Test
    public void test03241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03241");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setHostnameVerifier(hostnameVerifier4);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory6 = okHttpClient5.sslSocketFactory;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler8 = okHttpClient7.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray9 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet10 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet10, routeArray9);
        okHttpClient7.failedRoutes = routeSet10;
        okHttpClient5.failedRoutes = routeSet10;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier15 = okHttpClient14.hostnameVerifier;
        java.net.ResponseCache responseCache16 = okHttpClient14.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator17 = okHttpClient14.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler19 = okHttpClient18.getCookieHandler();
        boolean boolean20 = okHttpClient18.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient18.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier22 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient21.setHostnameVerifier(hostnameVerifier22);
        java.net.ResponseCache responseCache24 = okHttpClient23.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator25 = okHttpClient23.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient14.setAuthenticator(okAuthenticator25);
        com.squareup.okhttp.OkHttpClient okHttpClient27 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler28 = okHttpClient27.getCookieHandler();
        boolean boolean29 = okHttpClient27.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator30 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient27.setAuthenticator(okAuthenticator30);
        java.net.ResponseCache responseCache32 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient27.setResponseCache(responseCache32);
        com.squareup.okhttp.ConnectionPool connectionPool36 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool36.evictAll();
        okHttpClient27.connectionPool = connectionPool36;
        connectionPool36.evictAll();
        int int40 = connectionPool36.getSpdyConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient41 = okHttpClient14.setConnectionPool(connectionPool36);
        okHttpClient5.connectionPool = connectionPool36;
        okHttpClient5.followProtocolRedirects = true;
        com.squareup.okhttp.OkHttpClient okHttpClient45 = okHttpClient5.copyWithDefaults();
        java.net.CookieHandler cookieHandler46 = okHttpClient5.cookieHandler;
        com.squareup.okhttp.OkHttpClient okHttpClient47 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler48 = okHttpClient47.getCookieHandler();
        boolean boolean49 = okHttpClient47.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient47.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool53 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int54 = connectionPool53.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient55 = okHttpClient50.setConnectionPool(connectionPool53);
        javax.net.ssl.HostnameVerifier hostnameVerifier56 = null;
        okHttpClient50.hostnameVerifier = hostnameVerifier56;
        java.net.ResponseCache responseCache58 = okHttpClient50.responseCache;
        javax.net.ssl.HostnameVerifier hostnameVerifier59 = okHttpClient50.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient60 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector61 = null;
        okHttpClient60.proxySelector = proxySelector61;
        java.net.ProxySelector proxySelector63 = okHttpClient60.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier64 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient65 = okHttpClient60.setHostnameVerifier(hostnameVerifier64);
        java.net.ProxySelector proxySelector66 = okHttpClient60.proxySelector;
        java.net.ResponseCache responseCache67 = okHttpClient60.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet68 = okHttpClient60.failedRoutes;
        com.squareup.okhttp.ConnectionPool connectionPool71 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool71.evictAll();
        com.squareup.okhttp.Address address73 = null;
        com.squareup.okhttp.Connection connection74 = connectionPool71.get(address73);
        okHttpClient60.connectionPool = connectionPool71;
        okHttpClient50.connectionPool = connectionPool71;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory77 = okHttpClient50.getSslSocketFactory();
        com.squareup.okhttp.OkAuthenticator okAuthenticator78 = okHttpClient50.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient79 = okHttpClient5.setAuthenticator(okAuthenticator78);
        java.net.CookieHandler cookieHandler80 = okHttpClient79.getCookieHandler();
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(sSLSocketFactory6);
        org.junit.Assert.assertNull(cookieHandler8);
        org.junit.Assert.assertNotNull(routeArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(hostnameVerifier15);
        org.junit.Assert.assertNull(responseCache16);
        org.junit.Assert.assertNull(okAuthenticator17);
        org.junit.Assert.assertNull(cookieHandler19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertNull(responseCache24);
        org.junit.Assert.assertNotNull(okAuthenticator25);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNull(cookieHandler28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNotNull(okHttpClient33);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(okHttpClient41);
        org.junit.Assert.assertNotNull(okHttpClient45);
        org.junit.Assert.assertNull(cookieHandler46);
        org.junit.Assert.assertNull(cookieHandler48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(okHttpClient50);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(okHttpClient55);
        org.junit.Assert.assertNull(responseCache58);
        org.junit.Assert.assertNull(hostnameVerifier59);
        org.junit.Assert.assertNull(proxySelector63);
        org.junit.Assert.assertNotNull(okHttpClient65);
        org.junit.Assert.assertNull(proxySelector66);
        org.junit.Assert.assertNull(responseCache67);
        org.junit.Assert.assertNotNull(routeSet68);
        org.junit.Assert.assertNull(connection74);
        org.junit.Assert.assertNotNull(sSLSocketFactory77);
        org.junit.Assert.assertNotNull(okAuthenticator78);
        org.junit.Assert.assertNotNull(okHttpClient79);
        org.junit.Assert.assertNull(cookieHandler80);
    }

    @Test
    public void test03242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03242");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        java.net.ResponseCache responseCache2 = null;
        okHttpClient0.responseCache = responseCache2;
        boolean boolean4 = okHttpClient0.followProtocolRedirects;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory5);
        java.net.Proxy proxy7 = okHttpClient6.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = okHttpClient6.hostnameVerifier;
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(okHttpClient6);
        org.junit.Assert.assertNull(proxy7);
        org.junit.Assert.assertNull(hostnameVerifier8);
    }

    @Test
    public void test03243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03243");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setHostnameVerifier(hostnameVerifier4);
        java.net.ProxySelector proxySelector6 = okHttpClient0.proxySelector;
        java.net.ResponseCache responseCache7 = okHttpClient0.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet8 = okHttpClient0.failedRoutes;
        com.squareup.okhttp.ConnectionPool connectionPool11 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool11.evictAll();
        com.squareup.okhttp.Address address13 = null;
        com.squareup.okhttp.Connection connection14 = connectionPool11.get(address13);
        okHttpClient0.connectionPool = connectionPool11;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient0.setFollowProtocolRedirects(true);
        java.net.ResponseCache responseCache18 = null;
        okHttpClient17.responseCache = responseCache18;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler21 = okHttpClient20.getCookieHandler();
        boolean boolean22 = okHttpClient20.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient20.copyWithDefaults();
        java.net.ProxySelector proxySelector24 = okHttpClient20.getProxySelector();
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient20.copyWithDefaults();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory26 = okHttpClient25.sslSocketFactory;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient17.setSSLSocketFactory(sSLSocketFactory26);
        com.squareup.okhttp.OkHttpClient okHttpClient28 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier29 = okHttpClient28.hostnameVerifier;
        java.net.ResponseCache responseCache30 = okHttpClient28.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator31 = okHttpClient28.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler33 = okHttpClient32.getCookieHandler();
        boolean boolean34 = okHttpClient32.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient32.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier36 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient35.setHostnameVerifier(hostnameVerifier36);
        java.net.ResponseCache responseCache38 = okHttpClient37.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator39 = okHttpClient37.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier40 = okHttpClient37.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory41 = okHttpClient37.getSslSocketFactory();
        java.lang.String[] strArray42 = sSLSocketFactory41.getSupportedCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient43 = okHttpClient28.setSSLSocketFactory(sSLSocketFactory41);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory44 = okHttpClient28.getSslSocketFactory();
        okHttpClient17.sslSocketFactory = sSLSocketFactory44;
        java.net.InetAddress inetAddress46 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket48 = sSLSocketFactory44.createSocket(inetAddress46, 10);
            org.junit.Assert.fail("Expected exception of type java.net.ConnectException; message: Connection refused (Connection refused)");
        } catch (java.net.ConnectException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(proxySelector6);
        org.junit.Assert.assertNull(responseCache7);
        org.junit.Assert.assertNotNull(routeSet8);
        org.junit.Assert.assertNull(connection14);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNull(cookieHandler21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertNull(proxySelector24);
        org.junit.Assert.assertNotNull(okHttpClient25);
        org.junit.Assert.assertNotNull(sSLSocketFactory26);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNull(hostnameVerifier29);
        org.junit.Assert.assertNull(responseCache30);
        org.junit.Assert.assertNull(okAuthenticator31);
        org.junit.Assert.assertNull(cookieHandler33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNotNull(okHttpClient37);
        org.junit.Assert.assertNull(responseCache38);
        org.junit.Assert.assertNotNull(okAuthenticator39);
        org.junit.Assert.assertNull(hostnameVerifier40);
        org.junit.Assert.assertNotNull(sSLSocketFactory41);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(okHttpClient43);
        org.junit.Assert.assertNotNull(sSLSocketFactory44);
    }

    @Test
    public void test03244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03244");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        java.net.Proxy proxy5 = okHttpClient0.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient0.copyWithDefaults();
        java.net.ResponseCache responseCache7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient6.setResponseCache(responseCache7);
        java.net.ProxySelector proxySelector9 = okHttpClient8.getProxySelector();
        java.net.Proxy proxy10 = okHttpClient8.proxy;
        java.net.Proxy proxy11 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress12 = proxy11.address();
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector14 = null;
        okHttpClient13.proxySelector = proxySelector14;
        com.squareup.okhttp.ConnectionPool connectionPool16 = okHttpClient13.connectionPool;
        com.squareup.okhttp.ConnectionPool connectionPool17 = okHttpClient13.getConnectionPool();
        boolean boolean18 = proxy11.equals((java.lang.Object) okHttpClient13);
        com.squareup.okhttp.OkHttpClient okHttpClient19 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler20 = okHttpClient19.getCookieHandler();
        boolean boolean21 = okHttpClient19.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient19.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool25 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int26 = connectionPool25.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient22.setConnectionPool(connectionPool25);
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient13.setConnectionPool(connectionPool25);
        com.squareup.okhttp.OkHttpClient okHttpClient30 = okHttpClient28.setFollowProtocolRedirects(false);
        com.squareup.okhttp.ConnectionPool connectionPool33 = new com.squareup.okhttp.ConnectionPool((-1), (long) 0);
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient28.setConnectionPool(connectionPool33);
        com.squareup.okhttp.OkHttpClient okHttpClient35 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector36 = null;
        okHttpClient35.proxySelector = proxySelector36;
        com.squareup.okhttp.ConnectionPool connectionPool38 = okHttpClient35.connectionPool;
        com.squareup.okhttp.ConnectionPool connectionPool39 = okHttpClient35.getConnectionPool();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache40 = okHttpClient35.okResponseCache();
        java.net.ResponseCache responseCache41 = null;
        okHttpClient35.responseCache = responseCache41;
        com.squareup.okhttp.OkHttpClient okHttpClient43 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler44 = okHttpClient43.getCookieHandler();
        boolean boolean45 = okHttpClient43.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient46 = okHttpClient43.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier47 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient48 = okHttpClient46.setHostnameVerifier(hostnameVerifier47);
        java.net.ResponseCache responseCache49 = okHttpClient48.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator50 = okHttpClient48.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier51 = okHttpClient48.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory52 = okHttpClient48.getSslSocketFactory();
        java.lang.String[] strArray53 = sSLSocketFactory52.getSupportedCipherSuites();
        java.lang.String[] strArray54 = sSLSocketFactory52.getDefaultCipherSuites();
        java.lang.String[] strArray55 = sSLSocketFactory52.getDefaultCipherSuites();
        java.lang.String[] strArray56 = sSLSocketFactory52.getSupportedCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient57 = okHttpClient35.setSSLSocketFactory(sSLSocketFactory52);
        okHttpClient34.sslSocketFactory = sSLSocketFactory52;
        com.squareup.okhttp.OkHttpClient okHttpClient59 = okHttpClient8.setSSLSocketFactory(sSLSocketFactory52);
        java.net.InetAddress inetAddress62 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket64 = sSLSocketFactory52.createSocket("hi!", (-1), inetAddress62, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.net.BindException; message: Permission denied (Bind failed)");
        } catch (java.net.BindException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(proxy5);
        org.junit.Assert.assertNotNull(okHttpClient6);
        org.junit.Assert.assertNotNull(okHttpClient8);
// flaky:         org.junit.Assert.assertNull(proxySelector9);
        org.junit.Assert.assertNull(proxy10);
        org.junit.Assert.assertNotNull(proxy11);
        org.junit.Assert.assertNull(socketAddress12);
        org.junit.Assert.assertNull(connectionPool16);
        org.junit.Assert.assertNull(connectionPool17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(cookieHandler20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNotNull(okHttpClient30);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertNull(connectionPool38);
        org.junit.Assert.assertNull(connectionPool39);
        org.junit.Assert.assertNull(okResponseCache40);
        org.junit.Assert.assertNull(cookieHandler44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(okHttpClient46);
        org.junit.Assert.assertNotNull(okHttpClient48);
        org.junit.Assert.assertNull(responseCache49);
        org.junit.Assert.assertNotNull(okAuthenticator50);
        org.junit.Assert.assertNull(hostnameVerifier51);
        org.junit.Assert.assertNotNull(sSLSocketFactory52);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(okHttpClient57);
        org.junit.Assert.assertNotNull(okHttpClient59);
    }

    @Test
    public void test03245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03245");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        java.net.ResponseCache responseCache5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient0.setResponseCache(responseCache5);
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool9.evictAll();
        okHttpClient0.connectionPool = connectionPool9;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory12 = okHttpClient0.sslSocketFactory;
        java.net.ResponseCache responseCache13 = null;
        okHttpClient0.responseCache = responseCache13;
        java.net.ProxySelector proxySelector15 = okHttpClient0.getProxySelector();
        java.net.Proxy proxy16 = okHttpClient0.proxy;
        java.net.ProxySelector proxySelector17 = okHttpClient0.getProxySelector();
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient6);
        org.junit.Assert.assertNull(sSLSocketFactory12);
        org.junit.Assert.assertNull(proxySelector15);
        org.junit.Assert.assertNull(proxy16);
        org.junit.Assert.assertNull(proxySelector17);
    }

    @Test
    public void test03246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03246");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = okHttpClient0.hostnameVerifier;
        java.net.ResponseCache responseCache2 = okHttpClient0.getResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler4 = okHttpClient3.getCookieHandler();
        boolean boolean5 = okHttpClient3.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient3.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int10 = connectionPool9.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient6.setConnectionPool(connectionPool9);
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = null;
        okHttpClient6.hostnameVerifier = hostnameVerifier12;
        com.squareup.okhttp.ConnectionPool connectionPool14 = okHttpClient6.getConnectionPool();
        okHttpClient0.connectionPool = connectionPool14;
        java.net.CookieHandler cookieHandler16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient0.setCookieHandler(cookieHandler16);
        java.net.ProxySelector proxySelector18 = okHttpClient17.proxySelector;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient17.setFollowProtocolRedirects(false);
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient17.copyWithDefaults();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache22 = okHttpClient21.okResponseCache();
        org.junit.Assert.assertNull(hostnameVerifier1);
        org.junit.Assert.assertNull(responseCache2);
        org.junit.Assert.assertNull(cookieHandler4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(okHttpClient6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(connectionPool14);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNull(proxySelector18);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNull(okResponseCache22);
    }

    @Test
    public void test03247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03247");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool6 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int7 = connectionPool6.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient3.setConnectionPool(connectionPool6);
        com.squareup.okhttp.OkHttpClient okHttpClient9 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector10 = null;
        okHttpClient9.proxySelector = proxySelector10;
        java.net.ProxySelector proxySelector12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient9.setProxySelector(proxySelector12);
        java.net.ProxySelector proxySelector14 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient9.setProxySelector(proxySelector14);
        okHttpClient8.proxySelector = proxySelector14;
        javax.net.ssl.HostnameVerifier hostnameVerifier17 = okHttpClient8.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler19 = okHttpClient18.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray20 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet21 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet21, routeArray20);
        okHttpClient18.failedRoutes = routeSet21;
        java.net.Proxy proxy24 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient25 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler26 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient25.setCookieHandler(cookieHandler26);
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient25.setFollowProtocolRedirects(true);
        boolean boolean30 = proxy24.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient18.setProxy(proxy24);
        java.net.Proxy proxy32 = okHttpClient31.getProxy();
        okHttpClient8.proxy = proxy32;
        java.util.Set<com.squareup.okhttp.Route> routeSet34 = okHttpClient8.failedRoutes;
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertNotNull(okHttpClient13);
// flaky:         org.junit.Assert.assertNull(proxySelector14);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNotNull(hostnameVerifier17);
        org.junit.Assert.assertNull(cookieHandler19);
        org.junit.Assert.assertNotNull(routeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(proxy24);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNotNull(okHttpClient29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNotNull(proxy32);
        org.junit.Assert.assertNotNull(routeSet34);
    }

    @Test
    public void test03248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03248");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = okHttpClient0.hostnameVerifier;
        java.net.ResponseCache responseCache2 = okHttpClient0.getResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler4 = okHttpClient3.getCookieHandler();
        boolean boolean5 = okHttpClient3.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient3.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int10 = connectionPool9.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient6.setConnectionPool(connectionPool9);
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = null;
        okHttpClient6.hostnameVerifier = hostnameVerifier12;
        com.squareup.okhttp.ConnectionPool connectionPool14 = okHttpClient6.getConnectionPool();
        okHttpClient0.connectionPool = connectionPool14;
        java.net.CookieHandler cookieHandler16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient0.setCookieHandler(cookieHandler16);
        com.squareup.okhttp.OkAuthenticator okAuthenticator18 = okHttpClient0.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient0.copyWithDefaults();
        java.net.URL uRL20 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.HttpURLConnection httpURLConnection21 = okHttpClient0.open(uRL20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(hostnameVerifier1);
        org.junit.Assert.assertNull(responseCache2);
        org.junit.Assert.assertNull(cookieHandler4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(okHttpClient6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(connectionPool14);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNull(okAuthenticator18);
        org.junit.Assert.assertNotNull(okHttpClient19);
    }

    @Test
    public void test03249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03249");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setHostnameVerifier(hostnameVerifier4);
        java.net.ProxySelector proxySelector6 = okHttpClient0.proxySelector;
        java.net.CookieHandler cookieHandler7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient0.setCookieHandler(cookieHandler7);
        com.squareup.okhttp.OkAuthenticator okAuthenticator9 = okHttpClient0.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool12 = new com.squareup.okhttp.ConnectionPool(1, 0L);
        okHttpClient0.connectionPool = connectionPool12;
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = okHttpClient0.getHostnameVerifier();
        javax.net.ssl.HostnameVerifier hostnameVerifier15 = okHttpClient0.getHostnameVerifier();
        java.net.URL uRL16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.HttpURLConnection httpURLConnection17 = okHttpClient0.open(uRL16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(proxySelector6);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertNull(okAuthenticator9);
        org.junit.Assert.assertNull(hostnameVerifier14);
        org.junit.Assert.assertNull(hostnameVerifier15);
    }

    @Test
    public void test03250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03250");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray2 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet3 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet3, routeArray2);
        okHttpClient0.failedRoutes = routeSet3;
        java.net.Proxy proxy6 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient7.setCookieHandler(cookieHandler8);
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient7.setFollowProtocolRedirects(true);
        boolean boolean12 = proxy6.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient0.setProxy(proxy6);
        com.squareup.okhttp.OkHttpClient okHttpClient14 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector15 = null;
        okHttpClient14.proxySelector = proxySelector15;
        java.net.ProxySelector proxySelector17 = okHttpClient14.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient14.setHostnameVerifier(hostnameVerifier18);
        java.net.ProxySelector proxySelector20 = okHttpClient14.proxySelector;
        java.net.ResponseCache responseCache21 = okHttpClient14.getResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler23 = okHttpClient22.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray24 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet25 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet25, routeArray24);
        okHttpClient22.failedRoutes = routeSet25;
        java.net.Proxy proxy28 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient29 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler30 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient29.setCookieHandler(cookieHandler30);
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient29.setFollowProtocolRedirects(true);
        boolean boolean34 = proxy28.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient22.setProxy(proxy28);
        okHttpClient14.proxy = proxy28;
        com.squareup.okhttp.OkHttpClient okHttpClient37 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler38 = okHttpClient37.getCookieHandler();
        boolean boolean39 = okHttpClient37.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient40 = okHttpClient37.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier41 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient40.setHostnameVerifier(hostnameVerifier41);
        boolean boolean43 = proxy28.equals((java.lang.Object) okHttpClient40);
        com.squareup.okhttp.OkHttpClient okHttpClient44 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector45 = null;
        okHttpClient44.proxySelector = proxySelector45;
        java.net.ProxySelector proxySelector47 = okHttpClient44.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier48 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient49 = okHttpClient44.setHostnameVerifier(hostnameVerifier48);
        java.net.ProxySelector proxySelector50 = okHttpClient44.proxySelector;
        java.net.CookieHandler cookieHandler51 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient52 = okHttpClient44.setCookieHandler(cookieHandler51);
        com.squareup.okhttp.OkAuthenticator okAuthenticator53 = null;
        okHttpClient52.authenticator = okAuthenticator53;
        boolean boolean55 = proxy28.equals((java.lang.Object) okAuthenticator53);
        okHttpClient13.proxy = proxy28;
        java.net.ResponseCache responseCache57 = okHttpClient13.responseCache;
        okHttpClient13.followProtocolRedirects = false;
        com.squareup.okhttp.OkHttpClient okHttpClient60 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler61 = okHttpClient60.getCookieHandler();
        boolean boolean62 = okHttpClient60.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient63 = okHttpClient60.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool66 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int67 = connectionPool66.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient68 = okHttpClient63.setConnectionPool(connectionPool66);
        com.squareup.okhttp.OkHttpClient okHttpClient69 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler70 = okHttpClient69.getCookieHandler();
        boolean boolean71 = okHttpClient69.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient72 = okHttpClient69.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier73 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient74 = okHttpClient72.setHostnameVerifier(hostnameVerifier73);
        java.net.ResponseCache responseCache75 = okHttpClient74.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator76 = okHttpClient74.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier77 = okHttpClient74.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory78 = okHttpClient74.getSslSocketFactory();
        java.lang.String[] strArray79 = sSLSocketFactory78.getSupportedCipherSuites();
        java.lang.String[] strArray80 = sSLSocketFactory78.getDefaultCipherSuites();
        java.lang.String[] strArray81 = sSLSocketFactory78.getDefaultCipherSuites();
        java.lang.String[] strArray82 = sSLSocketFactory78.getDefaultCipherSuites();
        java.lang.String[] strArray83 = sSLSocketFactory78.getSupportedCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient84 = okHttpClient63.setSSLSocketFactory(sSLSocketFactory78);
        okHttpClient13.sslSocketFactory = sSLSocketFactory78;
        java.util.Set<com.squareup.okhttp.Route> routeSet86 = okHttpClient13.failedRoutes;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache87 = okHttpClient13.okResponseCache();
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertNotNull(routeArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(proxy6);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNull(proxySelector17);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNull(proxySelector20);
        org.junit.Assert.assertNull(responseCache21);
        org.junit.Assert.assertNull(cookieHandler23);
        org.junit.Assert.assertNotNull(routeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(proxy28);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNotNull(okHttpClient33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNull(cookieHandler38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(okHttpClient40);
        org.junit.Assert.assertNotNull(okHttpClient42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(proxySelector47);
        org.junit.Assert.assertNotNull(okHttpClient49);
        org.junit.Assert.assertNull(proxySelector50);
        org.junit.Assert.assertNotNull(okHttpClient52);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(responseCache57);
        org.junit.Assert.assertNull(cookieHandler61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(okHttpClient63);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNotNull(okHttpClient68);
        org.junit.Assert.assertNull(cookieHandler70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(okHttpClient72);
        org.junit.Assert.assertNotNull(okHttpClient74);
        org.junit.Assert.assertNull(responseCache75);
        org.junit.Assert.assertNotNull(okAuthenticator76);
        org.junit.Assert.assertNull(hostnameVerifier77);
        org.junit.Assert.assertNotNull(sSLSocketFactory78);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertNotNull(okHttpClient84);
        org.junit.Assert.assertNotNull(routeSet86);
        org.junit.Assert.assertNull(okResponseCache87);
    }

    @Test
    public void test03251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03251");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        java.net.ResponseCache responseCache5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient0.setResponseCache(responseCache5);
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool9.evictAll();
        okHttpClient0.connectionPool = connectionPool9;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory12 = okHttpClient0.sslSocketFactory;
        java.net.ResponseCache responseCache13 = null;
        okHttpClient0.responseCache = responseCache13;
        java.net.ProxySelector proxySelector15 = okHttpClient0.getProxySelector();
        com.squareup.okhttp.ConnectionPool connectionPool18 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) 0);
        okHttpClient0.connectionPool = connectionPool18;
        okHttpClient0.followProtocolRedirects = false;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler23 = okHttpClient22.getCookieHandler();
        boolean boolean24 = okHttpClient22.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator25 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient22.setAuthenticator(okAuthenticator25);
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient22.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier28 = okHttpClient22.hostnameVerifier;
        java.net.ProxySelector proxySelector29 = java.net.ProxySelector.getDefault();
        okHttpClient22.proxySelector = proxySelector29;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient0.setProxySelector(proxySelector29);
        com.squareup.okhttp.OkHttpClient okHttpClient32 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector33 = null;
        okHttpClient32.proxySelector = proxySelector33;
        java.net.ProxySelector proxySelector35 = okHttpClient32.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier36 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient32.setHostnameVerifier(hostnameVerifier36);
        boolean boolean38 = okHttpClient32.getFollowProtocolRedirects();
        com.squareup.okhttp.ConnectionPool connectionPool41 = new com.squareup.okhttp.ConnectionPool((int) 'a', (long) (byte) -1);
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient32.setConnectionPool(connectionPool41);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory43 = okHttpClient42.sslSocketFactory;
        boolean boolean44 = okHttpClient42.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient45 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler46 = okHttpClient45.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray47 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet48 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet48, routeArray47);
        okHttpClient45.failedRoutes = routeSet48;
        java.net.Proxy proxy51 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient52 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler53 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient54 = okHttpClient52.setCookieHandler(cookieHandler53);
        com.squareup.okhttp.OkHttpClient okHttpClient56 = okHttpClient52.setFollowProtocolRedirects(true);
        boolean boolean57 = proxy51.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient58 = okHttpClient45.setProxy(proxy51);
        com.squareup.okhttp.OkAuthenticator okAuthenticator59 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient60 = okHttpClient58.setAuthenticator(okAuthenticator59);
        com.squareup.okhttp.OkHttpClient okHttpClient61 = okHttpClient60.copyWithDefaults();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory62 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient63 = okHttpClient61.setSSLSocketFactory(sSLSocketFactory62);
        javax.net.ssl.HostnameVerifier hostnameVerifier64 = okHttpClient61.hostnameVerifier;
        okHttpClient42.hostnameVerifier = hostnameVerifier64;
        okHttpClient0.hostnameVerifier = hostnameVerifier64;
        java.lang.Class<?> wildcardClass67 = okHttpClient0.getClass();
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient6);
        org.junit.Assert.assertNull(sSLSocketFactory12);
        org.junit.Assert.assertNull(proxySelector15);
        org.junit.Assert.assertNull(cookieHandler23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNull(hostnameVerifier28);
// flaky:         org.junit.Assert.assertNull(proxySelector29);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNull(proxySelector35);
        org.junit.Assert.assertNotNull(okHttpClient37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(okHttpClient42);
        org.junit.Assert.assertNull(sSLSocketFactory43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(cookieHandler46);
        org.junit.Assert.assertNotNull(routeArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(proxy51);
        org.junit.Assert.assertNotNull(okHttpClient54);
        org.junit.Assert.assertNotNull(okHttpClient56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(okHttpClient58);
        org.junit.Assert.assertNotNull(okHttpClient60);
        org.junit.Assert.assertNotNull(okHttpClient61);
        org.junit.Assert.assertNotNull(okHttpClient63);
        org.junit.Assert.assertNotNull(hostnameVerifier64);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test03252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03252");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = okHttpClient0.hostnameVerifier;
        java.net.ResponseCache responseCache2 = okHttpClient0.getResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler4 = okHttpClient3.getCookieHandler();
        boolean boolean5 = okHttpClient3.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient3.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int10 = connectionPool9.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient6.setConnectionPool(connectionPool9);
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = null;
        okHttpClient6.hostnameVerifier = hostnameVerifier12;
        com.squareup.okhttp.ConnectionPool connectionPool14 = okHttpClient6.getConnectionPool();
        okHttpClient0.connectionPool = connectionPool14;
        java.net.CookieHandler cookieHandler16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient0.setCookieHandler(cookieHandler16);
        java.net.ProxySelector proxySelector18 = okHttpClient17.proxySelector;
        java.net.Proxy proxy19 = okHttpClient17.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient17.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool21 = okHttpClient17.connectionPool;
        int int22 = connectionPool21.getConnectionCount();
        com.squareup.okhttp.Address address23 = null;
        com.squareup.okhttp.Connection connection24 = connectionPool21.get(address23);
        org.junit.Assert.assertNull(hostnameVerifier1);
        org.junit.Assert.assertNull(responseCache2);
        org.junit.Assert.assertNull(cookieHandler4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(okHttpClient6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(connectionPool14);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNull(proxySelector18);
        org.junit.Assert.assertNull(proxy19);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNotNull(connectionPool21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNull(connection24);
    }

    @Test
    public void test03253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03253");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool6 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int7 = connectionPool6.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient3.setConnectionPool(connectionPool6);
        com.squareup.okhttp.ConnectionPool connectionPool9 = okHttpClient3.connectionPool;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector11 = null;
        okHttpClient10.proxySelector = proxySelector11;
        java.net.ProxySelector proxySelector13 = okHttpClient10.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient10.setHostnameVerifier(hostnameVerifier14);
        java.net.ProxySelector proxySelector16 = java.net.ProxySelector.getDefault();
        okHttpClient10.proxySelector = proxySelector16;
        java.net.ProxySelector.setDefault(proxySelector16);
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient3.setProxySelector(proxySelector16);
        boolean boolean20 = okHttpClient3.getFollowProtocolRedirects();
        java.net.ResponseCache responseCache21 = okHttpClient3.getResponseCache();
        okHttpClient3.followProtocolRedirects = false;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler25 = okHttpClient24.getCookieHandler();
        boolean boolean26 = okHttpClient24.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient24.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet28 = okHttpClient27.failedRoutes;
        boolean boolean29 = okHttpClient27.getFollowProtocolRedirects();
        java.net.Proxy proxy30 = java.net.Proxy.NO_PROXY;
        okHttpClient27.proxy = proxy30;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler33 = okHttpClient32.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray34 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet35 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet35, routeArray34);
        okHttpClient32.failedRoutes = routeSet35;
        java.net.Proxy proxy38 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient39 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler40 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient41 = okHttpClient39.setCookieHandler(cookieHandler40);
        com.squareup.okhttp.OkHttpClient okHttpClient43 = okHttpClient39.setFollowProtocolRedirects(true);
        boolean boolean44 = proxy38.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient45 = okHttpClient32.setProxy(proxy38);
        java.net.SocketAddress socketAddress46 = proxy38.address();
        com.squareup.okhttp.OkHttpClient okHttpClient47 = okHttpClient27.setProxy(proxy38);
        java.net.ResponseCache responseCache48 = okHttpClient47.getResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient49 = okHttpClient47.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier50 = okHttpClient47.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient51 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler52 = okHttpClient51.getCookieHandler();
        boolean boolean53 = okHttpClient51.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient54 = okHttpClient51.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient55 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector56 = null;
        okHttpClient55.proxySelector = proxySelector56;
        java.net.ProxySelector proxySelector58 = okHttpClient55.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier59 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient60 = okHttpClient55.setHostnameVerifier(hostnameVerifier59);
        java.net.ProxySelector proxySelector61 = okHttpClient55.proxySelector;
        java.net.ResponseCache responseCache62 = okHttpClient55.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet63 = okHttpClient55.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient64 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler65 = okHttpClient64.getCookieHandler();
        boolean boolean66 = okHttpClient64.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient67 = okHttpClient64.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool70 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int71 = connectionPool70.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient72 = okHttpClient67.setConnectionPool(connectionPool70);
        com.squareup.okhttp.OkHttpClient okHttpClient73 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector74 = null;
        okHttpClient73.proxySelector = proxySelector74;
        java.net.ProxySelector proxySelector76 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient77 = okHttpClient73.setProxySelector(proxySelector76);
        java.net.ProxySelector proxySelector78 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient79 = okHttpClient73.setProxySelector(proxySelector78);
        okHttpClient72.proxySelector = proxySelector78;
        javax.net.ssl.HostnameVerifier hostnameVerifier81 = okHttpClient72.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient82 = okHttpClient55.setHostnameVerifier(hostnameVerifier81);
        javax.net.ssl.HostnameVerifier hostnameVerifier83 = okHttpClient82.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient84 = okHttpClient51.setHostnameVerifier(hostnameVerifier83);
        java.net.Proxy proxy85 = okHttpClient84.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient86 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector87 = null;
        okHttpClient86.proxySelector = proxySelector87;
        java.net.ProxySelector proxySelector89 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient90 = okHttpClient86.setProxySelector(proxySelector89);
        java.net.ProxySelector proxySelector91 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient92 = okHttpClient86.setProxySelector(proxySelector91);
        java.net.ProxySelector.setDefault(proxySelector91);
        okHttpClient84.proxySelector = proxySelector91;
        com.squareup.okhttp.OkHttpClient okHttpClient95 = okHttpClient47.setProxySelector(proxySelector91);
        okHttpClient3.proxySelector = proxySelector91;
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNull(proxySelector13);
        org.junit.Assert.assertNotNull(okHttpClient15);
// flaky:         org.junit.Assert.assertNull(proxySelector16);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(responseCache21);
        org.junit.Assert.assertNull(cookieHandler25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNotNull(routeSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(proxy30);
        org.junit.Assert.assertNull(cookieHandler33);
        org.junit.Assert.assertNotNull(routeArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(proxy38);
        org.junit.Assert.assertNotNull(okHttpClient41);
        org.junit.Assert.assertNotNull(okHttpClient43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(okHttpClient45);
        org.junit.Assert.assertNull(socketAddress46);
        org.junit.Assert.assertNotNull(okHttpClient47);
        org.junit.Assert.assertNull(responseCache48);
        org.junit.Assert.assertNotNull(okHttpClient49);
        org.junit.Assert.assertNotNull(hostnameVerifier50);
        org.junit.Assert.assertNull(cookieHandler52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(okHttpClient54);
        org.junit.Assert.assertNull(proxySelector58);
        org.junit.Assert.assertNotNull(okHttpClient60);
        org.junit.Assert.assertNull(proxySelector61);
        org.junit.Assert.assertNull(responseCache62);
        org.junit.Assert.assertNotNull(routeSet63);
        org.junit.Assert.assertNull(cookieHandler65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(okHttpClient67);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNotNull(okHttpClient72);
        org.junit.Assert.assertNotNull(okHttpClient77);
// flaky:         org.junit.Assert.assertNull(proxySelector78);
        org.junit.Assert.assertNotNull(okHttpClient79);
        org.junit.Assert.assertNotNull(hostnameVerifier81);
        org.junit.Assert.assertNotNull(okHttpClient82);
        org.junit.Assert.assertNotNull(hostnameVerifier83);
        org.junit.Assert.assertNotNull(okHttpClient84);
        org.junit.Assert.assertNull(proxy85);
        org.junit.Assert.assertNotNull(okHttpClient90);
// flaky:         org.junit.Assert.assertNull(proxySelector91);
        org.junit.Assert.assertNotNull(okHttpClient92);
        org.junit.Assert.assertNotNull(okHttpClient95);
    }

    @Test
    public void test03254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03254");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setHostnameVerifier(hostnameVerifier4);
        java.net.ResponseCache responseCache6 = okHttpClient5.responseCache;
        java.net.CookieHandler cookieHandler7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient5.setCookieHandler(cookieHandler7);
        com.squareup.okhttp.OkHttpClient okHttpClient9 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler10 = okHttpClient9.getCookieHandler();
        boolean boolean11 = okHttpClient9.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient9.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool15 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int16 = connectionPool15.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient12.setConnectionPool(connectionPool15);
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler19 = okHttpClient18.getCookieHandler();
        boolean boolean20 = okHttpClient18.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient18.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool24 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int25 = connectionPool24.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient21.setConnectionPool(connectionPool24);
        com.squareup.okhttp.OkHttpClient okHttpClient27 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector28 = null;
        okHttpClient27.proxySelector = proxySelector28;
        java.net.ProxySelector proxySelector30 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient27.setProxySelector(proxySelector30);
        java.net.ProxySelector proxySelector32 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient27.setProxySelector(proxySelector32);
        okHttpClient26.proxySelector = proxySelector32;
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient12.setProxySelector(proxySelector32);
        java.net.CookieHandler cookieHandler36 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient35.setCookieHandler(cookieHandler36);
        com.squareup.okhttp.OkHttpClient okHttpClient38 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler39 = okHttpClient38.getCookieHandler();
        boolean boolean40 = okHttpClient38.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator41 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient38.setAuthenticator(okAuthenticator41);
        java.net.ResponseCache responseCache43 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient44 = okHttpClient38.setResponseCache(responseCache43);
        com.squareup.okhttp.ConnectionPool connectionPool47 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool47.evictAll();
        okHttpClient38.connectionPool = connectionPool47;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory50 = okHttpClient38.sslSocketFactory;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory51 = null;
        okHttpClient38.sslSocketFactory = sSLSocketFactory51;
        java.net.ProxySelector proxySelector53 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient54 = okHttpClient38.setProxySelector(proxySelector53);
        com.squareup.okhttp.OkHttpClient okHttpClient55 = okHttpClient37.setProxySelector(proxySelector53);
        com.squareup.okhttp.OkHttpClient okHttpClient56 = okHttpClient8.setProxySelector(proxySelector53);
        com.squareup.okhttp.OkHttpClient okHttpClient57 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector58 = null;
        okHttpClient57.proxySelector = proxySelector58;
        java.net.ProxySelector proxySelector60 = okHttpClient57.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier61 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient62 = okHttpClient57.setHostnameVerifier(hostnameVerifier61);
        boolean boolean63 = okHttpClient57.getFollowProtocolRedirects();
        java.net.Proxy proxy64 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress65 = proxy64.address();
        java.net.Proxy.Type type66 = proxy64.type();
        okHttpClient57.proxy = proxy64;
        com.squareup.okhttp.OkHttpClient okHttpClient68 = okHttpClient56.setProxy(proxy64);
        okHttpClient68.followProtocolRedirects = false;
        java.net.URL uRL71 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.HttpURLConnection httpURLConnection72 = okHttpClient68.open(uRL71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(responseCache6);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertNull(cookieHandler10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNull(cookieHandler19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNotNull(okHttpClient31);
// flaky:         org.junit.Assert.assertNull(proxySelector32);
        org.junit.Assert.assertNotNull(okHttpClient33);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNotNull(okHttpClient37);
        org.junit.Assert.assertNull(cookieHandler39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(okHttpClient42);
        org.junit.Assert.assertNotNull(okHttpClient44);
        org.junit.Assert.assertNull(sSLSocketFactory50);
// flaky:         org.junit.Assert.assertNull(proxySelector53);
        org.junit.Assert.assertNotNull(okHttpClient54);
        org.junit.Assert.assertNotNull(okHttpClient55);
        org.junit.Assert.assertNotNull(okHttpClient56);
        org.junit.Assert.assertNull(proxySelector60);
        org.junit.Assert.assertNotNull(okHttpClient62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(proxy64);
        org.junit.Assert.assertNull(socketAddress65);
        org.junit.Assert.assertTrue("'" + type66 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type66.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNotNull(okHttpClient68);
    }

    @Test
    public void test03255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03255");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        java.net.ResponseCache responseCache2 = null;
        okHttpClient0.responseCache = responseCache2;
        boolean boolean4 = okHttpClient0.followProtocolRedirects;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory5);
        java.net.Proxy proxy7 = okHttpClient6.getProxy();
        java.net.ResponseCache responseCache8 = null;
        okHttpClient6.responseCache = responseCache8;
        java.util.Set<com.squareup.okhttp.Route> routeSet10 = okHttpClient6.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler12 = okHttpClient11.getCookieHandler();
        boolean boolean13 = okHttpClient11.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient11.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool17 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int18 = connectionPool17.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient14.setConnectionPool(connectionPool17);
        com.squareup.okhttp.OkHttpClient okHttpClient20 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler21 = okHttpClient20.getCookieHandler();
        boolean boolean22 = okHttpClient20.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient20.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier24 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient23.setHostnameVerifier(hostnameVerifier24);
        java.net.ResponseCache responseCache26 = okHttpClient25.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator27 = okHttpClient25.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier28 = okHttpClient25.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory29 = okHttpClient25.getSslSocketFactory();
        java.lang.String[] strArray30 = sSLSocketFactory29.getSupportedCipherSuites();
        java.lang.String[] strArray31 = sSLSocketFactory29.getDefaultCipherSuites();
        java.lang.String[] strArray32 = sSLSocketFactory29.getDefaultCipherSuites();
        java.lang.String[] strArray33 = sSLSocketFactory29.getDefaultCipherSuites();
        java.lang.String[] strArray34 = sSLSocketFactory29.getSupportedCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient14.setSSLSocketFactory(sSLSocketFactory29);
        okHttpClient6.sslSocketFactory = sSLSocketFactory29;
        java.lang.String[] strArray37 = sSLSocketFactory29.getDefaultCipherSuites();
        java.lang.String[] strArray38 = sSLSocketFactory29.getSupportedCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient39 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler40 = okHttpClient39.getCookieHandler();
        boolean boolean41 = okHttpClient39.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator42 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient43 = okHttpClient39.setAuthenticator(okAuthenticator42);
        java.net.Proxy proxy44 = okHttpClient39.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient45 = okHttpClient39.copyWithDefaults();
        java.net.CookieHandler cookieHandler46 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient47 = okHttpClient39.setCookieHandler(cookieHandler46);
        com.squareup.okhttp.OkHttpClient okHttpClient48 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler49 = okHttpClient48.getCookieHandler();
        boolean boolean50 = okHttpClient48.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient51 = okHttpClient48.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier52 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient53 = okHttpClient51.setHostnameVerifier(hostnameVerifier52);
        java.net.ResponseCache responseCache54 = okHttpClient53.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator55 = okHttpClient53.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier56 = okHttpClient53.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory57 = okHttpClient53.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient58 = okHttpClient39.setSSLSocketFactory(sSLSocketFactory57);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory59 = okHttpClient39.sslSocketFactory;
        java.net.Socket socket60 = sSLSocketFactory59.createSocket();
        java.io.InputStream inputStream61 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket63 = sSLSocketFactory29.createSocket(socket60, inputStream61, false);
            org.junit.Assert.fail("Expected exception of type java.net.SocketException; message: Underlying socket is not connected");
        } catch (java.net.SocketException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(okHttpClient6);
        org.junit.Assert.assertNull(proxy7);
        org.junit.Assert.assertNotNull(routeSet10);
        org.junit.Assert.assertNull(cookieHandler12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(okHttpClient14);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNull(cookieHandler21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertNotNull(okHttpClient25);
        org.junit.Assert.assertNull(responseCache26);
        org.junit.Assert.assertNotNull(okAuthenticator27);
        org.junit.Assert.assertNull(hostnameVerifier28);
        org.junit.Assert.assertNotNull(sSLSocketFactory29);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNull(cookieHandler40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(okHttpClient43);
        org.junit.Assert.assertNull(proxy44);
        org.junit.Assert.assertNotNull(okHttpClient45);
        org.junit.Assert.assertNotNull(okHttpClient47);
        org.junit.Assert.assertNull(cookieHandler49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(okHttpClient51);
        org.junit.Assert.assertNotNull(okHttpClient53);
        org.junit.Assert.assertNull(responseCache54);
        org.junit.Assert.assertNotNull(okAuthenticator55);
        org.junit.Assert.assertNull(hostnameVerifier56);
        org.junit.Assert.assertNotNull(sSLSocketFactory57);
        org.junit.Assert.assertNotNull(okHttpClient58);
        org.junit.Assert.assertNotNull(sSLSocketFactory59);
        org.junit.Assert.assertNotNull(socket60);
        org.junit.Assert.assertEquals(socket60.toString(), "Socket[unconnected]");
    }

    @Test
    public void test03256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03256");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        java.net.ResponseCache responseCache5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient0.setResponseCache(responseCache5);
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool9.evictAll();
        okHttpClient0.connectionPool = connectionPool9;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory12 = okHttpClient0.sslSocketFactory;
        java.net.ResponseCache responseCache13 = null;
        okHttpClient0.responseCache = responseCache13;
        com.squareup.okhttp.OkAuthenticator okAuthenticator15 = okHttpClient0.authenticator;
        java.net.Proxy proxy16 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient0.setProxy(proxy16);
        java.net.ProxySelector proxySelector18 = okHttpClient17.getProxySelector();
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient17.copyWithDefaults();
        java.net.Proxy proxy20 = okHttpClient19.proxy;
        java.net.Proxy.Type type21 = proxy20.type();
        java.net.SocketAddress socketAddress22 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Proxy proxy23 = new java.net.Proxy(type21, socketAddress22);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: type DIRECT is not compatible with address null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient6);
        org.junit.Assert.assertNull(sSLSocketFactory12);
        org.junit.Assert.assertNull(okAuthenticator15);
        org.junit.Assert.assertNotNull(proxy16);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNull(proxySelector18);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNotNull(proxy20);
        org.junit.Assert.assertTrue("'" + type21 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type21.equals(java.net.Proxy.Type.DIRECT));
    }

    @Test
    public void test03257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03257");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet4 = okHttpClient3.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient3.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector7 = null;
        okHttpClient6.proxySelector = proxySelector7;
        java.net.ProxySelector proxySelector9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient6.setProxySelector(proxySelector9);
        java.net.ProxySelector proxySelector11 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient6.setProxySelector(proxySelector11);
        java.net.ProxySelector.setDefault(proxySelector11);
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient5.setProxySelector(proxySelector11);
        boolean boolean15 = okHttpClient14.getFollowProtocolRedirects();
        java.net.ProxySelector proxySelector16 = okHttpClient14.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory17 = okHttpClient14.sslSocketFactory;
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = okHttpClient14.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory19 = okHttpClient14.getSslSocketFactory();
        java.net.ProxySelector proxySelector20 = okHttpClient14.proxySelector;
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertNotNull(routeSet4);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNotNull(okHttpClient10);
// flaky:         org.junit.Assert.assertNull(proxySelector11);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertNotNull(okHttpClient14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
// flaky:         org.junit.Assert.assertNull(proxySelector16);
        org.junit.Assert.assertNotNull(sSLSocketFactory17);
        org.junit.Assert.assertNotNull(hostnameVerifier18);
        org.junit.Assert.assertNotNull(sSLSocketFactory19);
// flaky:         org.junit.Assert.assertNull(proxySelector20);
    }

    @Test
    public void test03258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03258");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray2 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet3 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet3, routeArray2);
        okHttpClient0.failedRoutes = routeSet3;
        java.net.Proxy proxy6 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient7.setCookieHandler(cookieHandler8);
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient7.setFollowProtocolRedirects(true);
        boolean boolean12 = proxy6.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient0.setProxy(proxy6);
        com.squareup.okhttp.OkAuthenticator okAuthenticator14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient13.setAuthenticator(okAuthenticator14);
        boolean boolean16 = okHttpClient15.followProtocolRedirects;
        com.squareup.okhttp.ConnectionPool connectionPool19 = new com.squareup.okhttp.ConnectionPool((int) (short) 10, (long) (short) 100);
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient15.setConnectionPool(connectionPool19);
        javax.net.ssl.HostnameVerifier hostnameVerifier21 = okHttpClient20.hostnameVerifier;
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertNotNull(routeArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(proxy6);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNull(hostnameVerifier21);
    }

    @Test
    public void test03259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03259");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray2 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet3 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet3, routeArray2);
        okHttpClient0.failedRoutes = routeSet3;
        java.net.Proxy proxy6 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient7.setCookieHandler(cookieHandler8);
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient7.setFollowProtocolRedirects(true);
        boolean boolean12 = proxy6.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient0.setProxy(proxy6);
        com.squareup.okhttp.OkHttpClient okHttpClient14 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler15 = okHttpClient14.getCookieHandler();
        boolean boolean16 = okHttpClient14.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler18 = okHttpClient17.getCookieHandler();
        boolean boolean19 = okHttpClient17.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient17.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet21 = okHttpClient20.failedRoutes;
        boolean boolean22 = okHttpClient20.getFollowProtocolRedirects();
        java.net.Proxy proxy23 = java.net.Proxy.NO_PROXY;
        okHttpClient20.proxy = proxy23;
        okHttpClient14.proxy = proxy23;
        okHttpClient0.proxy = proxy23;
        java.lang.String str27 = proxy23.toString();
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertNotNull(routeArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(proxy6);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNull(cookieHandler15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(cookieHandler18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNotNull(routeSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(proxy23);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "DIRECT" + "'", str27, "DIRECT");
    }

    @Test
    public void test03260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03260");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet4 = okHttpClient3.failedRoutes;
        boolean boolean5 = okHttpClient3.getFollowProtocolRedirects();
        java.net.Proxy proxy6 = java.net.Proxy.NO_PROXY;
        okHttpClient3.proxy = proxy6;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler9 = okHttpClient8.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray10 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet11 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet11, routeArray10);
        okHttpClient8.failedRoutes = routeSet11;
        java.net.Proxy proxy14 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient15.setCookieHandler(cookieHandler16);
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient15.setFollowProtocolRedirects(true);
        boolean boolean20 = proxy14.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient8.setProxy(proxy14);
        java.net.SocketAddress socketAddress22 = proxy14.address();
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient3.setProxy(proxy14);
        okHttpClient23.followProtocolRedirects = false;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector27 = null;
        okHttpClient26.proxySelector = proxySelector27;
        java.net.ProxySelector proxySelector29 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient30 = okHttpClient26.setProxySelector(proxySelector29);
        com.squareup.okhttp.OkHttpClient okHttpClient31 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector32 = null;
        okHttpClient31.proxySelector = proxySelector32;
        java.net.ProxySelector proxySelector34 = okHttpClient31.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier35 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient31.setHostnameVerifier(hostnameVerifier35);
        com.squareup.okhttp.OkHttpClient okHttpClient37 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector38 = null;
        okHttpClient37.proxySelector = proxySelector38;
        java.net.ProxySelector proxySelector40 = okHttpClient37.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier41 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient37.setHostnameVerifier(hostnameVerifier41);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory43 = okHttpClient42.sslSocketFactory;
        com.squareup.okhttp.OkHttpClient okHttpClient44 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler45 = okHttpClient44.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray46 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet47 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet47, routeArray46);
        okHttpClient44.failedRoutes = routeSet47;
        okHttpClient42.failedRoutes = routeSet47;
        okHttpClient31.failedRoutes = routeSet47;
        okHttpClient26.failedRoutes = routeSet47;
        okHttpClient23.failedRoutes = routeSet47;
        java.net.CookieHandler cookieHandler54 = okHttpClient23.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient55 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler56 = okHttpClient55.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray57 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet58 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet58, routeArray57);
        okHttpClient55.failedRoutes = routeSet58;
        java.net.Proxy proxy61 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient62 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler63 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient64 = okHttpClient62.setCookieHandler(cookieHandler63);
        com.squareup.okhttp.OkHttpClient okHttpClient66 = okHttpClient62.setFollowProtocolRedirects(true);
        boolean boolean67 = proxy61.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient68 = okHttpClient55.setProxy(proxy61);
        com.squareup.okhttp.OkHttpClient okHttpClient69 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler70 = okHttpClient69.getCookieHandler();
        boolean boolean71 = okHttpClient69.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient72 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler73 = okHttpClient72.getCookieHandler();
        boolean boolean74 = okHttpClient72.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient75 = okHttpClient72.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet76 = okHttpClient75.failedRoutes;
        boolean boolean77 = okHttpClient75.getFollowProtocolRedirects();
        java.net.Proxy proxy78 = java.net.Proxy.NO_PROXY;
        okHttpClient75.proxy = proxy78;
        okHttpClient69.proxy = proxy78;
        okHttpClient55.proxy = proxy78;
        java.net.Proxy.Type type82 = proxy78.type();
        com.squareup.okhttp.OkHttpClient okHttpClient83 = okHttpClient23.setProxy(proxy78);
        com.squareup.okhttp.OkHttpClient okHttpClient84 = okHttpClient23.copyWithDefaults();
        java.net.ProxySelector proxySelector85 = okHttpClient23.proxySelector;
        java.util.Set<com.squareup.okhttp.Route> routeSet86 = okHttpClient23.failedRoutes;
        java.net.CookieHandler cookieHandler87 = null;
        okHttpClient23.cookieHandler = cookieHandler87;
        com.squareup.okhttp.ConnectionPool connectionPool89 = okHttpClient23.connectionPool;
        com.squareup.okhttp.ConnectionPool connectionPool90 = okHttpClient23.getConnectionPool();
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertNotNull(routeSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(proxy6);
        org.junit.Assert.assertNull(cookieHandler9);
        org.junit.Assert.assertNotNull(routeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(proxy14);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNull(socketAddress22);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertNotNull(okHttpClient30);
        org.junit.Assert.assertNull(proxySelector34);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNull(proxySelector40);
        org.junit.Assert.assertNotNull(okHttpClient42);
        org.junit.Assert.assertNull(sSLSocketFactory43);
        org.junit.Assert.assertNull(cookieHandler45);
        org.junit.Assert.assertNotNull(routeArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(cookieHandler54);
        org.junit.Assert.assertNull(cookieHandler56);
        org.junit.Assert.assertNotNull(routeArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(proxy61);
        org.junit.Assert.assertNotNull(okHttpClient64);
        org.junit.Assert.assertNotNull(okHttpClient66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(okHttpClient68);
        org.junit.Assert.assertNull(cookieHandler70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNull(cookieHandler73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(okHttpClient75);
        org.junit.Assert.assertNotNull(routeSet76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(proxy78);
        org.junit.Assert.assertTrue("'" + type82 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type82.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNotNull(okHttpClient83);
        org.junit.Assert.assertNotNull(okHttpClient84);
// flaky:         org.junit.Assert.assertNull(proxySelector85);
        org.junit.Assert.assertNotNull(routeSet86);
        org.junit.Assert.assertNotNull(connectionPool89);
        org.junit.Assert.assertNotNull(connectionPool90);
    }

    @Test
    public void test03261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03261");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier6 = okHttpClient0.hostnameVerifier;
        java.net.ProxySelector proxySelector7 = java.net.ProxySelector.getDefault();
        okHttpClient0.proxySelector = proxySelector7;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.OkAuthenticator okAuthenticator10 = okHttpClient9.authenticator;
        com.squareup.okhttp.ConnectionPool connectionPool11 = null;
        okHttpClient9.connectionPool = connectionPool11;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector14 = null;
        okHttpClient13.proxySelector = proxySelector14;
        com.squareup.okhttp.ConnectionPool connectionPool16 = okHttpClient13.connectionPool;
        com.squareup.okhttp.ConnectionPool connectionPool17 = okHttpClient13.getConnectionPool();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache18 = okHttpClient13.okResponseCache();
        java.net.ResponseCache responseCache19 = null;
        okHttpClient13.responseCache = responseCache19;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler22 = okHttpClient21.getCookieHandler();
        boolean boolean23 = okHttpClient21.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient21.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier25 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient24.setHostnameVerifier(hostnameVerifier25);
        java.net.ResponseCache responseCache27 = okHttpClient26.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator28 = okHttpClient26.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier29 = okHttpClient26.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory30 = okHttpClient26.getSslSocketFactory();
        java.lang.String[] strArray31 = sSLSocketFactory30.getSupportedCipherSuites();
        java.lang.String[] strArray32 = sSLSocketFactory30.getDefaultCipherSuites();
        java.lang.String[] strArray33 = sSLSocketFactory30.getDefaultCipherSuites();
        java.lang.String[] strArray34 = sSLSocketFactory30.getSupportedCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient13.setSSLSocketFactory(sSLSocketFactory30);
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient9.setSSLSocketFactory(sSLSocketFactory30);
        com.squareup.okhttp.ConnectionPool connectionPool39 = new com.squareup.okhttp.ConnectionPool((int) (short) 0, (long) 'a');
        okHttpClient36.connectionPool = connectionPool39;
        com.squareup.okhttp.Address address41 = null;
        com.squareup.okhttp.Connection connection42 = connectionPool39.get(address41);
        connectionPool39.evictAll();
        com.squareup.okhttp.Connection connection44 = null;
        // The following exception was thrown during execution in test generation
        try {
            connectionPool39.recycle(connection44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(hostnameVerifier6);
// flaky:         org.junit.Assert.assertNull(proxySelector7);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNotNull(okAuthenticator10);
        org.junit.Assert.assertNull(connectionPool16);
        org.junit.Assert.assertNull(connectionPool17);
        org.junit.Assert.assertNull(okResponseCache18);
        org.junit.Assert.assertNull(cookieHandler22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNull(responseCache27);
        org.junit.Assert.assertNotNull(okAuthenticator28);
        org.junit.Assert.assertNull(hostnameVerifier29);
        org.junit.Assert.assertNotNull(sSLSocketFactory30);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNull(connection42);
    }

    @Test
    public void test03262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03262");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient3.setHostnameVerifier(hostnameVerifier4);
        java.net.ResponseCache responseCache6 = okHttpClient5.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator7 = okHttpClient5.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = okHttpClient5.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient9 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler10 = okHttpClient9.getCookieHandler();
        boolean boolean11 = okHttpClient9.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient9.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector14 = null;
        okHttpClient13.proxySelector = proxySelector14;
        java.net.ProxySelector proxySelector16 = okHttpClient13.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier17 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient13.setHostnameVerifier(hostnameVerifier17);
        java.net.ProxySelector proxySelector19 = okHttpClient13.proxySelector;
        java.net.ResponseCache responseCache20 = okHttpClient13.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet21 = okHttpClient13.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler23 = okHttpClient22.getCookieHandler();
        boolean boolean24 = okHttpClient22.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient22.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool28 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int29 = connectionPool28.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient30 = okHttpClient25.setConnectionPool(connectionPool28);
        com.squareup.okhttp.OkHttpClient okHttpClient31 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector32 = null;
        okHttpClient31.proxySelector = proxySelector32;
        java.net.ProxySelector proxySelector34 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient31.setProxySelector(proxySelector34);
        java.net.ProxySelector proxySelector36 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient31.setProxySelector(proxySelector36);
        okHttpClient30.proxySelector = proxySelector36;
        javax.net.ssl.HostnameVerifier hostnameVerifier39 = okHttpClient30.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient40 = okHttpClient13.setHostnameVerifier(hostnameVerifier39);
        javax.net.ssl.HostnameVerifier hostnameVerifier41 = okHttpClient40.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient9.setHostnameVerifier(hostnameVerifier41);
        java.net.Proxy proxy43 = okHttpClient42.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient44 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector45 = null;
        okHttpClient44.proxySelector = proxySelector45;
        java.net.ProxySelector proxySelector47 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient48 = okHttpClient44.setProxySelector(proxySelector47);
        java.net.ProxySelector proxySelector49 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient44.setProxySelector(proxySelector49);
        java.net.ProxySelector.setDefault(proxySelector49);
        okHttpClient42.proxySelector = proxySelector49;
        okHttpClient5.proxySelector = proxySelector49;
        com.squareup.okhttp.OkHttpClient okHttpClient54 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler55 = okHttpClient54.getCookieHandler();
        boolean boolean56 = okHttpClient54.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator57 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient58 = okHttpClient54.setAuthenticator(okAuthenticator57);
        com.squareup.okhttp.OkHttpClient okHttpClient59 = okHttpClient54.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier60 = okHttpClient54.hostnameVerifier;
        java.net.ProxySelector proxySelector61 = java.net.ProxySelector.getDefault();
        okHttpClient54.proxySelector = proxySelector61;
        com.squareup.okhttp.OkHttpClient okHttpClient63 = okHttpClient54.copyWithDefaults();
        com.squareup.okhttp.OkAuthenticator okAuthenticator64 = okHttpClient63.authenticator;
        java.net.CookieHandler cookieHandler65 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient66 = okHttpClient63.setCookieHandler(cookieHandler65);
        java.net.CookieHandler cookieHandler67 = okHttpClient63.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient68 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler69 = okHttpClient68.getCookieHandler();
        boolean boolean70 = okHttpClient68.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient71 = okHttpClient68.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier72 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient73 = okHttpClient71.setHostnameVerifier(hostnameVerifier72);
        java.net.ResponseCache responseCache74 = okHttpClient73.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator75 = okHttpClient73.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier76 = okHttpClient73.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory77 = okHttpClient73.getSslSocketFactory();
        okHttpClient73.followProtocolRedirects = true;
        com.squareup.okhttp.OkHttpClient okHttpClient80 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler81 = okHttpClient80.getCookieHandler();
        boolean boolean82 = okHttpClient80.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator83 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient84 = okHttpClient80.setAuthenticator(okAuthenticator83);
        com.squareup.okhttp.OkHttpClient okHttpClient85 = okHttpClient80.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier86 = okHttpClient85.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient87 = okHttpClient73.setHostnameVerifier(hostnameVerifier86);
        com.squareup.okhttp.OkHttpClient okHttpClient88 = okHttpClient63.setHostnameVerifier(hostnameVerifier86);
        com.squareup.okhttp.ConnectionPool connectionPool89 = okHttpClient88.getConnectionPool();
        okHttpClient5.connectionPool = connectionPool89;
        com.squareup.okhttp.Address address91 = null;
        com.squareup.okhttp.Connection connection92 = connectionPool89.get(address91);
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(responseCache6);
        org.junit.Assert.assertNotNull(okAuthenticator7);
        org.junit.Assert.assertNull(hostnameVerifier8);
        org.junit.Assert.assertNull(cookieHandler10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertNull(proxySelector16);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNull(proxySelector19);
        org.junit.Assert.assertNull(responseCache20);
        org.junit.Assert.assertNotNull(routeSet21);
        org.junit.Assert.assertNull(cookieHandler23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(okHttpClient25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(okHttpClient30);
        org.junit.Assert.assertNotNull(okHttpClient35);
// flaky:         org.junit.Assert.assertNull(proxySelector36);
        org.junit.Assert.assertNotNull(okHttpClient37);
        org.junit.Assert.assertNotNull(hostnameVerifier39);
        org.junit.Assert.assertNotNull(okHttpClient40);
        org.junit.Assert.assertNotNull(hostnameVerifier41);
        org.junit.Assert.assertNotNull(okHttpClient42);
        org.junit.Assert.assertNull(proxy43);
        org.junit.Assert.assertNotNull(okHttpClient48);
// flaky:         org.junit.Assert.assertNull(proxySelector49);
        org.junit.Assert.assertNotNull(okHttpClient50);
        org.junit.Assert.assertNull(cookieHandler55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(okHttpClient58);
        org.junit.Assert.assertNotNull(okHttpClient59);
        org.junit.Assert.assertNull(hostnameVerifier60);
// flaky:         org.junit.Assert.assertNull(proxySelector61);
        org.junit.Assert.assertNotNull(okHttpClient63);
        org.junit.Assert.assertNotNull(okAuthenticator64);
        org.junit.Assert.assertNotNull(okHttpClient66);
        org.junit.Assert.assertNull(cookieHandler67);
        org.junit.Assert.assertNull(cookieHandler69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(okHttpClient71);
        org.junit.Assert.assertNotNull(okHttpClient73);
        org.junit.Assert.assertNull(responseCache74);
        org.junit.Assert.assertNotNull(okAuthenticator75);
        org.junit.Assert.assertNull(hostnameVerifier76);
        org.junit.Assert.assertNotNull(sSLSocketFactory77);
        org.junit.Assert.assertNull(cookieHandler81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(okHttpClient84);
        org.junit.Assert.assertNotNull(okHttpClient85);
        org.junit.Assert.assertNotNull(hostnameVerifier86);
        org.junit.Assert.assertNotNull(okHttpClient87);
        org.junit.Assert.assertNotNull(okHttpClient88);
        org.junit.Assert.assertNotNull(connectionPool89);
        org.junit.Assert.assertNull(connection92);
    }

    @Test
    public void test03263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03263");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray2 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet3 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet3, routeArray2);
        okHttpClient0.failedRoutes = routeSet3;
        java.net.Proxy proxy6 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient7.setCookieHandler(cookieHandler8);
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient7.setFollowProtocolRedirects(true);
        boolean boolean12 = proxy6.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient0.setProxy(proxy6);
        com.squareup.okhttp.OkAuthenticator okAuthenticator14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient13.setAuthenticator(okAuthenticator14);
        boolean boolean16 = okHttpClient15.followProtocolRedirects;
        java.net.CookieHandler cookieHandler17 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient15.setCookieHandler(cookieHandler17);
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient15.copyWithDefaults();
        java.net.ResponseCache responseCache20 = okHttpClient19.getResponseCache();
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertNotNull(routeArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(proxy6);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNull(responseCache20);
    }

    @Test
    public void test03264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03264");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        java.net.ResponseCache responseCache3 = okHttpClient0.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory4 = okHttpClient0.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient5 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler6 = okHttpClient5.getCookieHandler();
        boolean boolean7 = okHttpClient5.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient5.setAuthenticator(okAuthenticator8);
        java.net.ResponseCache responseCache10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient5.setResponseCache(responseCache10);
        com.squareup.okhttp.ConnectionPool connectionPool14 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool14.evictAll();
        okHttpClient5.connectionPool = connectionPool14;
        connectionPool14.evictAll();
        int int18 = connectionPool14.getSpdyConnectionCount();
        int int19 = connectionPool14.getSpdyConnectionCount();
        connectionPool14.evictAll();
        okHttpClient0.connectionPool = connectionPool14;
        java.lang.Class<?> wildcardClass22 = connectionPool14.getClass();
        org.junit.Assert.assertNull(responseCache3);
        org.junit.Assert.assertNull(sSLSocketFactory4);
        org.junit.Assert.assertNull(cookieHandler6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test03265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03265");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setHostnameVerifier(hostnameVerifier4);
        java.net.ResponseCache responseCache6 = okHttpClient5.responseCache;
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool((int) '4', 100L);
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient5.setConnectionPool(connectionPool9);
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler12 = okHttpClient11.getCookieHandler();
        boolean boolean13 = okHttpClient11.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient11.setAuthenticator(okAuthenticator14);
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient11.copyWithDefaults();
        java.net.CookieHandler cookieHandler17 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient11.setCookieHandler(cookieHandler17);
        com.squareup.okhttp.OkAuthenticator okAuthenticator19 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient18.setAuthenticator(okAuthenticator19);
        com.squareup.okhttp.OkHttpClient okHttpClient21 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler22 = okHttpClient21.getCookieHandler();
        boolean boolean23 = okHttpClient21.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient21.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool27 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int28 = connectionPool27.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient24.setConnectionPool(connectionPool27);
        com.squareup.okhttp.ConnectionPool connectionPool30 = okHttpClient24.connectionPool;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient18.setConnectionPool(connectionPool30);
        com.squareup.okhttp.Address address32 = null;
        com.squareup.okhttp.Connection connection33 = connectionPool30.get(address32);
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient10.setConnectionPool(connectionPool30);
        com.squareup.okhttp.OkAuthenticator okAuthenticator35 = okHttpClient34.authenticator;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory36 = okHttpClient34.sslSocketFactory;
        com.squareup.okhttp.OkHttpClient okHttpClient37 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler38 = okHttpClient37.getCookieHandler();
        boolean boolean39 = okHttpClient37.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient40 = okHttpClient37.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool43 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int44 = connectionPool43.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient45 = okHttpClient40.setConnectionPool(connectionPool43);
        com.squareup.okhttp.ConnectionPool connectionPool46 = okHttpClient40.connectionPool;
        com.squareup.okhttp.OkHttpClient okHttpClient47 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector48 = null;
        okHttpClient47.proxySelector = proxySelector48;
        java.net.ProxySelector proxySelector50 = okHttpClient47.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier51 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient52 = okHttpClient47.setHostnameVerifier(hostnameVerifier51);
        java.net.ProxySelector proxySelector53 = java.net.ProxySelector.getDefault();
        okHttpClient47.proxySelector = proxySelector53;
        java.net.ProxySelector.setDefault(proxySelector53);
        com.squareup.okhttp.OkHttpClient okHttpClient56 = okHttpClient40.setProxySelector(proxySelector53);
        com.squareup.okhttp.ConnectionPool connectionPool57 = okHttpClient40.getConnectionPool();
        com.squareup.okhttp.OkHttpClient okHttpClient58 = okHttpClient34.setConnectionPool(connectionPool57);
        java.net.CookieHandler cookieHandler59 = okHttpClient34.getCookieHandler();
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(responseCache6);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertNull(cookieHandler12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNull(cookieHandler22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(okHttpClient29);
        org.junit.Assert.assertNotNull(connectionPool30);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNull(connection33);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertNull(okAuthenticator35);
        org.junit.Assert.assertNull(sSLSocketFactory36);
        org.junit.Assert.assertNull(cookieHandler38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(okHttpClient40);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(okHttpClient45);
        org.junit.Assert.assertNotNull(connectionPool46);
        org.junit.Assert.assertNull(proxySelector50);
        org.junit.Assert.assertNotNull(okHttpClient52);
// flaky:         org.junit.Assert.assertNull(proxySelector53);
        org.junit.Assert.assertNotNull(okHttpClient56);
        org.junit.Assert.assertNotNull(connectionPool57);
        org.junit.Assert.assertNotNull(okHttpClient58);
        org.junit.Assert.assertNull(cookieHandler59);
    }

    @Test
    public void test03266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03266");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool6 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int7 = connectionPool6.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient3.setConnectionPool(connectionPool6);
        javax.net.ssl.HostnameVerifier hostnameVerifier9 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier9;
        com.squareup.okhttp.ConnectionPool connectionPool11 = okHttpClient3.getConnectionPool();
        java.net.ResponseCache responseCache12 = null;
        okHttpClient3.responseCache = responseCache12;
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = okHttpClient3.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient3.setSSLSocketFactory(sSLSocketFactory15);
        java.net.ResponseCache responseCache17 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient16.setResponseCache(responseCache17);
        java.net.ResponseCache responseCache19 = null;
        okHttpClient16.responseCache = responseCache19;
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertNotNull(connectionPool11);
        org.junit.Assert.assertNull(hostnameVerifier14);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNotNull(okHttpClient18);
    }

    @Test
    public void test03267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03267");
        com.squareup.okhttp.ConnectionPool connectionPool2 = new com.squareup.okhttp.ConnectionPool(100, (long) 'a');
        int int3 = connectionPool2.getConnectionCount();
        int int4 = connectionPool2.getSpdyConnectionCount();
        int int5 = connectionPool2.getSpdyConnectionCount();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test03268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03268");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        java.net.ResponseCache responseCache2 = null;
        okHttpClient0.responseCache = responseCache2;
        java.net.Proxy proxy4 = null;
        okHttpClient0.proxy = proxy4;
        java.net.Proxy proxy6 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress7 = proxy6.address();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector9 = null;
        okHttpClient8.proxySelector = proxySelector9;
        com.squareup.okhttp.ConnectionPool connectionPool11 = okHttpClient8.connectionPool;
        com.squareup.okhttp.ConnectionPool connectionPool12 = okHttpClient8.getConnectionPool();
        boolean boolean13 = proxy6.equals((java.lang.Object) okHttpClient8);
        com.squareup.okhttp.OkHttpClient okHttpClient14 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler15 = okHttpClient14.getCookieHandler();
        boolean boolean16 = okHttpClient14.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient14.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool20 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int21 = connectionPool20.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient17.setConnectionPool(connectionPool20);
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient8.setConnectionPool(connectionPool20);
        com.squareup.okhttp.OkHttpClient okHttpClient24 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector25 = null;
        okHttpClient24.proxySelector = proxySelector25;
        java.net.ProxySelector proxySelector27 = okHttpClient24.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier28 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient24.setHostnameVerifier(hostnameVerifier28);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory30 = okHttpClient29.sslSocketFactory;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler32 = okHttpClient31.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray33 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet34 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet34, routeArray33);
        okHttpClient31.failedRoutes = routeSet34;
        okHttpClient29.failedRoutes = routeSet34;
        com.squareup.okhttp.ConnectionPool connectionPool38 = okHttpClient29.getConnectionPool();
        com.squareup.okhttp.OkHttpClient okHttpClient39 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler40 = okHttpClient39.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray41 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet42 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet42, routeArray41);
        okHttpClient39.failedRoutes = routeSet42;
        java.net.Proxy proxy45 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient46 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler47 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient48 = okHttpClient46.setCookieHandler(cookieHandler47);
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient46.setFollowProtocolRedirects(true);
        boolean boolean51 = proxy45.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient52 = okHttpClient39.setProxy(proxy45);
        com.squareup.okhttp.OkHttpClient okHttpClient53 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler54 = okHttpClient53.getCookieHandler();
        boolean boolean55 = okHttpClient53.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient56 = okHttpClient53.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool59 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int60 = connectionPool59.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient61 = okHttpClient56.setConnectionPool(connectionPool59);
        com.squareup.okhttp.OkHttpClient okHttpClient62 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector63 = null;
        okHttpClient62.proxySelector = proxySelector63;
        java.net.ProxySelector proxySelector65 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient66 = okHttpClient62.setProxySelector(proxySelector65);
        java.net.ProxySelector proxySelector67 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient68 = okHttpClient62.setProxySelector(proxySelector67);
        okHttpClient61.proxySelector = proxySelector67;
        okHttpClient39.proxySelector = proxySelector67;
        okHttpClient29.proxySelector = proxySelector67;
        okHttpClient8.proxySelector = proxySelector67;
        okHttpClient0.proxySelector = proxySelector67;
        com.squareup.okhttp.OkAuthenticator okAuthenticator74 = okHttpClient0.getAuthenticator();
        java.net.Proxy proxy75 = okHttpClient0.getProxy();
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertNotNull(proxy6);
        org.junit.Assert.assertNull(socketAddress7);
        org.junit.Assert.assertNull(connectionPool11);
        org.junit.Assert.assertNull(connectionPool12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(cookieHandler15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertNull(proxySelector27);
        org.junit.Assert.assertNotNull(okHttpClient29);
        org.junit.Assert.assertNull(sSLSocketFactory30);
        org.junit.Assert.assertNull(cookieHandler32);
        org.junit.Assert.assertNotNull(routeArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(connectionPool38);
        org.junit.Assert.assertNull(cookieHandler40);
        org.junit.Assert.assertNotNull(routeArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(proxy45);
        org.junit.Assert.assertNotNull(okHttpClient48);
        org.junit.Assert.assertNotNull(okHttpClient50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(okHttpClient52);
        org.junit.Assert.assertNull(cookieHandler54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(okHttpClient56);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNotNull(okHttpClient61);
        org.junit.Assert.assertNotNull(okHttpClient66);
// flaky:         org.junit.Assert.assertNull(proxySelector67);
        org.junit.Assert.assertNotNull(okHttpClient68);
        org.junit.Assert.assertNull(okAuthenticator74);
        org.junit.Assert.assertNull(proxy75);
    }

    @Test
    public void test03269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03269");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient0.connectionPool;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler5 = okHttpClient4.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray6 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet7 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet7, routeArray6);
        okHttpClient4.failedRoutes = routeSet7;
        java.net.Proxy proxy10 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setCookieHandler(cookieHandler12);
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient11.setFollowProtocolRedirects(true);
        boolean boolean16 = proxy10.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient4.setProxy(proxy10);
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler19 = okHttpClient18.getCookieHandler();
        boolean boolean20 = okHttpClient18.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient18.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool24 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int25 = connectionPool24.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient21.setConnectionPool(connectionPool24);
        com.squareup.okhttp.OkHttpClient okHttpClient27 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector28 = null;
        okHttpClient27.proxySelector = proxySelector28;
        java.net.ProxySelector proxySelector30 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient27.setProxySelector(proxySelector30);
        java.net.ProxySelector proxySelector32 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient27.setProxySelector(proxySelector32);
        okHttpClient26.proxySelector = proxySelector32;
        okHttpClient4.proxySelector = proxySelector32;
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient0.setProxySelector(proxySelector32);
        java.net.CookieHandler cookieHandler37 = null;
        okHttpClient36.cookieHandler = cookieHandler37;
        java.net.Proxy proxy39 = okHttpClient36.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient40 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler41 = okHttpClient40.getCookieHandler();
        boolean boolean42 = okHttpClient40.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient43 = okHttpClient40.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet44 = okHttpClient43.failedRoutes;
        boolean boolean45 = okHttpClient43.getFollowProtocolRedirects();
        java.net.ProxySelector proxySelector46 = okHttpClient43.proxySelector;
        okHttpClient36.proxySelector = proxySelector46;
        java.net.ResponseCache responseCache48 = null;
        okHttpClient36.responseCache = responseCache48;
        javax.net.ssl.HostnameVerifier hostnameVerifier50 = okHttpClient36.hostnameVerifier;
        org.junit.Assert.assertNull(connectionPool3);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertNotNull(routeArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(proxy10);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNull(cookieHandler19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNotNull(okHttpClient31);
// flaky:         org.junit.Assert.assertNull(proxySelector32);
        org.junit.Assert.assertNotNull(okHttpClient33);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNull(proxy39);
        org.junit.Assert.assertNull(cookieHandler41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(okHttpClient43);
        org.junit.Assert.assertNotNull(routeSet44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
// flaky:         org.junit.Assert.assertNull(proxySelector46);
        org.junit.Assert.assertNull(hostnameVerifier50);
    }

    @Test
    public void test03270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03270");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient0.connectionPool;
        com.squareup.okhttp.ConnectionPool connectionPool4 = okHttpClient0.getConnectionPool();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache5 = okHttpClient0.okResponseCache();
        java.net.ResponseCache responseCache6 = null;
        okHttpClient0.responseCache = responseCache6;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler9 = okHttpClient8.getCookieHandler();
        boolean boolean10 = okHttpClient8.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient8.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setHostnameVerifier(hostnameVerifier12);
        java.net.ResponseCache responseCache14 = okHttpClient13.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator15 = okHttpClient13.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier16 = okHttpClient13.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory17 = okHttpClient13.getSslSocketFactory();
        java.lang.String[] strArray18 = sSLSocketFactory17.getSupportedCipherSuites();
        java.lang.String[] strArray19 = sSLSocketFactory17.getDefaultCipherSuites();
        java.lang.String[] strArray20 = sSLSocketFactory17.getDefaultCipherSuites();
        java.lang.String[] strArray21 = sSLSocketFactory17.getSupportedCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory17);
        java.net.Socket socket23 = sSLSocketFactory17.createSocket();
        com.squareup.okhttp.OkHttpClient okHttpClient24 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector25 = null;
        okHttpClient24.proxySelector = proxySelector25;
        java.net.ProxySelector proxySelector27 = okHttpClient24.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier28 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient24.setHostnameVerifier(hostnameVerifier28);
        java.net.ResponseCache responseCache30 = okHttpClient29.responseCache;
        java.net.ProxySelector proxySelector31 = okHttpClient29.getProxySelector();
        com.squareup.okhttp.OkHttpClient okHttpClient32 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector33 = null;
        okHttpClient32.proxySelector = proxySelector33;
        java.net.ProxySelector proxySelector35 = okHttpClient32.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier36 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient32.setHostnameVerifier(hostnameVerifier36);
        boolean boolean38 = okHttpClient32.getFollowProtocolRedirects();
        com.squareup.okhttp.ConnectionPool connectionPool41 = new com.squareup.okhttp.ConnectionPool((int) 'a', (long) (byte) -1);
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient32.setConnectionPool(connectionPool41);
        okHttpClient29.connectionPool = connectionPool41;
        java.net.ResponseCache responseCache44 = okHttpClient29.getResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient45 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler46 = okHttpClient45.getCookieHandler();
        boolean boolean47 = okHttpClient45.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator48 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient49 = okHttpClient45.setAuthenticator(okAuthenticator48);
        com.squareup.okhttp.OkAuthenticator okAuthenticator50 = okHttpClient45.authenticator;
        java.net.ResponseCache responseCache51 = okHttpClient45.getResponseCache();
        java.net.CookieHandler cookieHandler52 = okHttpClient45.cookieHandler;
        java.net.ResponseCache responseCache53 = okHttpClient45.responseCache;
        com.squareup.okhttp.OkHttpClient okHttpClient54 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler55 = okHttpClient54.getCookieHandler();
        boolean boolean56 = okHttpClient54.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator57 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient58 = okHttpClient54.setAuthenticator(okAuthenticator57);
        java.net.Proxy proxy59 = okHttpClient54.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient60 = okHttpClient54.copyWithDefaults();
        java.net.CookieHandler cookieHandler61 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient62 = okHttpClient54.setCookieHandler(cookieHandler61);
        com.squareup.okhttp.OkHttpClient okHttpClient63 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier64 = okHttpClient63.hostnameVerifier;
        java.net.ResponseCache responseCache65 = okHttpClient63.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator66 = okHttpClient63.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient67 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler68 = okHttpClient67.getCookieHandler();
        boolean boolean69 = okHttpClient67.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient70 = okHttpClient67.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier71 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient72 = okHttpClient70.setHostnameVerifier(hostnameVerifier71);
        java.net.ResponseCache responseCache73 = okHttpClient72.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator74 = okHttpClient72.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier75 = okHttpClient72.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory76 = okHttpClient72.getSslSocketFactory();
        java.lang.String[] strArray77 = sSLSocketFactory76.getSupportedCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient78 = okHttpClient63.setSSLSocketFactory(sSLSocketFactory76);
        com.squareup.okhttp.OkHttpClient okHttpClient79 = okHttpClient62.setSSLSocketFactory(sSLSocketFactory76);
        okHttpClient45.sslSocketFactory = sSLSocketFactory76;
        java.lang.String[] strArray81 = sSLSocketFactory76.getSupportedCipherSuites();
        okHttpClient29.sslSocketFactory = sSLSocketFactory76;
        java.net.Socket socket83 = sSLSocketFactory76.createSocket();
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket87 = sSLSocketFactory17.createSocket(socket83, "", (int) (byte) -1, true);
            org.junit.Assert.fail("Expected exception of type java.net.SocketException; message: Underlying socket is not connected");
        } catch (java.net.SocketException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(connectionPool3);
        org.junit.Assert.assertNull(connectionPool4);
        org.junit.Assert.assertNull(okResponseCache5);
        org.junit.Assert.assertNull(cookieHandler9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNull(responseCache14);
        org.junit.Assert.assertNotNull(okAuthenticator15);
        org.junit.Assert.assertNull(hostnameVerifier16);
        org.junit.Assert.assertNotNull(sSLSocketFactory17);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNotNull(socket23);
        org.junit.Assert.assertEquals(socket23.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNull(proxySelector27);
        org.junit.Assert.assertNotNull(okHttpClient29);
        org.junit.Assert.assertNull(responseCache30);
        org.junit.Assert.assertNull(proxySelector31);
        org.junit.Assert.assertNull(proxySelector35);
        org.junit.Assert.assertNotNull(okHttpClient37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(okHttpClient42);
        org.junit.Assert.assertNull(responseCache44);
        org.junit.Assert.assertNull(cookieHandler46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(okHttpClient49);
        org.junit.Assert.assertNull(okAuthenticator50);
        org.junit.Assert.assertNull(responseCache51);
        org.junit.Assert.assertNull(cookieHandler52);
        org.junit.Assert.assertNull(responseCache53);
        org.junit.Assert.assertNull(cookieHandler55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(okHttpClient58);
        org.junit.Assert.assertNull(proxy59);
        org.junit.Assert.assertNotNull(okHttpClient60);
        org.junit.Assert.assertNotNull(okHttpClient62);
        org.junit.Assert.assertNull(hostnameVerifier64);
        org.junit.Assert.assertNull(responseCache65);
        org.junit.Assert.assertNull(okAuthenticator66);
        org.junit.Assert.assertNull(cookieHandler68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(okHttpClient70);
        org.junit.Assert.assertNotNull(okHttpClient72);
        org.junit.Assert.assertNull(responseCache73);
        org.junit.Assert.assertNotNull(okAuthenticator74);
        org.junit.Assert.assertNull(hostnameVerifier75);
        org.junit.Assert.assertNotNull(sSLSocketFactory76);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(okHttpClient78);
        org.junit.Assert.assertNotNull(okHttpClient79);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertNotNull(socket83);
        org.junit.Assert.assertEquals(socket83.toString(), "Socket[unconnected]");
    }

    @Test
    public void test03271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03271");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool6 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int7 = connectionPool6.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient3.setConnectionPool(connectionPool6);
        com.squareup.okhttp.OkHttpClient okHttpClient9 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler10 = okHttpClient9.getCookieHandler();
        boolean boolean11 = okHttpClient9.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient9.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool15 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int16 = connectionPool15.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient12.setConnectionPool(connectionPool15);
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector19 = null;
        okHttpClient18.proxySelector = proxySelector19;
        java.net.ProxySelector proxySelector21 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient18.setProxySelector(proxySelector21);
        java.net.ProxySelector proxySelector23 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient18.setProxySelector(proxySelector23);
        okHttpClient17.proxySelector = proxySelector23;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient3.setProxySelector(proxySelector23);
        java.net.CookieHandler cookieHandler27 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient26.setCookieHandler(cookieHandler27);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory29 = okHttpClient26.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient30 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector31 = null;
        okHttpClient30.proxySelector = proxySelector31;
        java.net.ProxySelector proxySelector33 = okHttpClient30.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier34 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient30.setHostnameVerifier(hostnameVerifier34);
        java.net.ResponseCache responseCache36 = okHttpClient35.responseCache;
        java.net.CookieHandler cookieHandler37 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient35.setCookieHandler(cookieHandler37);
        java.net.CookieHandler cookieHandler39 = okHttpClient35.cookieHandler;
        com.squareup.okhttp.OkHttpClient okHttpClient40 = okHttpClient35.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient41 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector42 = null;
        okHttpClient41.proxySelector = proxySelector42;
        java.net.ProxySelector proxySelector44 = okHttpClient41.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier45 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient46 = okHttpClient41.setHostnameVerifier(hostnameVerifier45);
        boolean boolean47 = okHttpClient41.getFollowProtocolRedirects();
        com.squareup.okhttp.ConnectionPool connectionPool50 = new com.squareup.okhttp.ConnectionPool((int) 'a', (long) (byte) -1);
        com.squareup.okhttp.OkHttpClient okHttpClient51 = okHttpClient41.setConnectionPool(connectionPool50);
        com.squareup.okhttp.OkHttpClient okHttpClient52 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler53 = okHttpClient52.getCookieHandler();
        boolean boolean54 = okHttpClient52.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient55 = okHttpClient52.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier56 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient57 = okHttpClient55.setHostnameVerifier(hostnameVerifier56);
        java.net.ResponseCache responseCache58 = okHttpClient57.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator59 = okHttpClient57.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier60 = okHttpClient57.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory61 = okHttpClient57.getSslSocketFactory();
        okHttpClient41.sslSocketFactory = sSLSocketFactory61;
        okHttpClient35.sslSocketFactory = sSLSocketFactory61;
        java.net.Socket socket64 = sSLSocketFactory61.createSocket();
        java.io.InputStream inputStream65 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket67 = sSLSocketFactory29.createSocket(socket64, inputStream65, false);
            org.junit.Assert.fail("Expected exception of type java.net.SocketException; message: Underlying socket is not connected");
        } catch (java.net.SocketException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertNull(cookieHandler10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNotNull(okHttpClient22);
// flaky:         org.junit.Assert.assertNull(proxySelector23);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNotNull(sSLSocketFactory29);
        org.junit.Assert.assertNull(proxySelector33);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNull(responseCache36);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNull(cookieHandler39);
        org.junit.Assert.assertNotNull(okHttpClient40);
        org.junit.Assert.assertNull(proxySelector44);
        org.junit.Assert.assertNotNull(okHttpClient46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(okHttpClient51);
        org.junit.Assert.assertNull(cookieHandler53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(okHttpClient55);
        org.junit.Assert.assertNotNull(okHttpClient57);
        org.junit.Assert.assertNull(responseCache58);
        org.junit.Assert.assertNotNull(okAuthenticator59);
        org.junit.Assert.assertNull(hostnameVerifier60);
        org.junit.Assert.assertNotNull(sSLSocketFactory61);
        org.junit.Assert.assertNotNull(socket64);
        org.junit.Assert.assertEquals(socket64.toString(), "Socket[unconnected]");
    }

    @Test
    public void test03272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03272");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = okHttpClient0.hostnameVerifier;
        java.net.ResponseCache responseCache2 = okHttpClient0.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = okHttpClient0.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler5 = okHttpClient4.getCookieHandler();
        boolean boolean6 = okHttpClient4.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient4.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient7.setHostnameVerifier(hostnameVerifier8);
        java.net.ResponseCache responseCache10 = okHttpClient9.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator11 = okHttpClient9.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient0.setAuthenticator(okAuthenticator11);
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler14 = okHttpClient13.getCookieHandler();
        boolean boolean15 = okHttpClient13.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient13.setAuthenticator(okAuthenticator16);
        java.net.ResponseCache responseCache18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient13.setResponseCache(responseCache18);
        com.squareup.okhttp.ConnectionPool connectionPool22 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool22.evictAll();
        okHttpClient13.connectionPool = connectionPool22;
        connectionPool22.evictAll();
        int int26 = connectionPool22.getSpdyConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient0.setConnectionPool(connectionPool22);
        com.squareup.okhttp.Connection connection28 = null;
        // The following exception was thrown during execution in test generation
        try {
            connectionPool22.maybeShare(connection28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(hostnameVerifier1);
        org.junit.Assert.assertNull(responseCache2);
        org.junit.Assert.assertNull(okAuthenticator3);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(okHttpClient7);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNull(responseCache10);
        org.junit.Assert.assertNotNull(okAuthenticator11);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertNull(cookieHandler14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(okHttpClient27);
    }

    @Test
    public void test03273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03273");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setHostnameVerifier(hostnameVerifier4);
        java.net.ProxySelector proxySelector6 = okHttpClient0.proxySelector;
        java.net.ResponseCache responseCache7 = okHttpClient0.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet8 = okHttpClient0.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler10 = okHttpClient9.getCookieHandler();
        boolean boolean11 = okHttpClient9.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient9.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool15 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int16 = connectionPool15.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient12.setConnectionPool(connectionPool15);
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector19 = null;
        okHttpClient18.proxySelector = proxySelector19;
        java.net.ProxySelector proxySelector21 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient18.setProxySelector(proxySelector21);
        java.net.ProxySelector proxySelector23 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient18.setProxySelector(proxySelector23);
        okHttpClient17.proxySelector = proxySelector23;
        javax.net.ssl.HostnameVerifier hostnameVerifier26 = okHttpClient17.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient0.setHostnameVerifier(hostnameVerifier26);
        java.net.CookieHandler cookieHandler28 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient27.setCookieHandler(cookieHandler28);
        com.squareup.okhttp.OkHttpClient okHttpClient30 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector31 = null;
        okHttpClient30.proxySelector = proxySelector31;
        java.net.ProxySelector proxySelector33 = okHttpClient30.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier34 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient30.setHostnameVerifier(hostnameVerifier34);
        java.net.ProxySelector proxySelector36 = okHttpClient30.proxySelector;
        java.net.ResponseCache responseCache37 = okHttpClient30.getResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient38 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler39 = okHttpClient38.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray40 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet41 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet41, routeArray40);
        okHttpClient38.failedRoutes = routeSet41;
        java.net.Proxy proxy44 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient45 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler46 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient47 = okHttpClient45.setCookieHandler(cookieHandler46);
        com.squareup.okhttp.OkHttpClient okHttpClient49 = okHttpClient45.setFollowProtocolRedirects(true);
        boolean boolean50 = proxy44.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient51 = okHttpClient38.setProxy(proxy44);
        okHttpClient30.proxy = proxy44;
        com.squareup.okhttp.OkHttpClient okHttpClient53 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler54 = okHttpClient53.getCookieHandler();
        boolean boolean55 = okHttpClient53.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient56 = okHttpClient53.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier57 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient58 = okHttpClient56.setHostnameVerifier(hostnameVerifier57);
        boolean boolean59 = proxy44.equals((java.lang.Object) okHttpClient56);
        java.net.SocketAddress socketAddress60 = proxy44.address();
        java.net.SocketAddress socketAddress61 = proxy44.address();
        com.squareup.okhttp.OkHttpClient okHttpClient62 = okHttpClient29.setProxy(proxy44);
        com.squareup.okhttp.OkHttpClient okHttpClient63 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler64 = okHttpClient63.getCookieHandler();
        boolean boolean65 = okHttpClient63.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient66 = okHttpClient63.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool69 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int70 = connectionPool69.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient71 = okHttpClient66.setConnectionPool(connectionPool69);
        java.net.CookieHandler cookieHandler72 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient73 = okHttpClient66.setCookieHandler(cookieHandler72);
        com.squareup.okhttp.ConnectionPool connectionPool74 = okHttpClient66.getConnectionPool();
        boolean boolean75 = proxy44.equals((java.lang.Object) connectionPool74);
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(proxySelector6);
        org.junit.Assert.assertNull(responseCache7);
        org.junit.Assert.assertNotNull(routeSet8);
        org.junit.Assert.assertNull(cookieHandler10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNotNull(okHttpClient22);
// flaky:         org.junit.Assert.assertNull(proxySelector23);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNotNull(hostnameVerifier26);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNotNull(okHttpClient29);
        org.junit.Assert.assertNull(proxySelector33);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNull(proxySelector36);
        org.junit.Assert.assertNull(responseCache37);
        org.junit.Assert.assertNull(cookieHandler39);
        org.junit.Assert.assertNotNull(routeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(proxy44);
        org.junit.Assert.assertNotNull(okHttpClient47);
        org.junit.Assert.assertNotNull(okHttpClient49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(okHttpClient51);
        org.junit.Assert.assertNull(cookieHandler54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(okHttpClient56);
        org.junit.Assert.assertNotNull(okHttpClient58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(socketAddress60);
        org.junit.Assert.assertNull(socketAddress61);
        org.junit.Assert.assertNotNull(okHttpClient62);
        org.junit.Assert.assertNull(cookieHandler64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(okHttpClient66);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(okHttpClient71);
        org.junit.Assert.assertNotNull(okHttpClient73);
        org.junit.Assert.assertNotNull(connectionPool74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test03274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03274");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient3.setHostnameVerifier(hostnameVerifier4);
        com.squareup.okhttp.OkAuthenticator okAuthenticator6 = okHttpClient5.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool7 = okHttpClient5.connectionPool;
        java.net.ResponseCache responseCache8 = okHttpClient5.getResponseCache();
        java.net.ProxySelector proxySelector9 = okHttpClient5.proxySelector;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler11 = okHttpClient10.getCookieHandler();
        boolean boolean12 = okHttpClient10.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient10.setAuthenticator(okAuthenticator13);
        java.net.ResponseCache responseCache15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient10.setResponseCache(responseCache15);
        com.squareup.okhttp.ConnectionPool connectionPool19 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool19.evictAll();
        okHttpClient10.connectionPool = connectionPool19;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory22 = okHttpClient10.sslSocketFactory;
        com.squareup.okhttp.ConnectionPool connectionPool23 = okHttpClient10.getConnectionPool();
        java.net.CookieHandler cookieHandler24 = null;
        okHttpClient10.cookieHandler = cookieHandler24;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler27 = okHttpClient26.getCookieHandler();
        boolean boolean28 = okHttpClient26.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient26.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool32 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int33 = connectionPool32.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient29.setConnectionPool(connectionPool32);
        com.squareup.okhttp.ConnectionPool connectionPool35 = okHttpClient29.connectionPool;
        java.net.ResponseCache responseCache36 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient29.setResponseCache(responseCache36);
        com.squareup.okhttp.OkAuthenticator okAuthenticator38 = okHttpClient29.getAuthenticator();
        com.squareup.okhttp.OkHttpClient okHttpClient39 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler40 = okHttpClient39.getCookieHandler();
        boolean boolean41 = okHttpClient39.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator42 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient43 = okHttpClient39.setAuthenticator(okAuthenticator42);
        java.net.ResponseCache responseCache44 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient45 = okHttpClient39.setResponseCache(responseCache44);
        com.squareup.okhttp.ConnectionPool connectionPool48 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool48.evictAll();
        okHttpClient39.connectionPool = connectionPool48;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory51 = okHttpClient39.sslSocketFactory;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory52 = null;
        okHttpClient39.sslSocketFactory = sSLSocketFactory52;
        java.net.ProxySelector proxySelector54 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient55 = okHttpClient39.setProxySelector(proxySelector54);
        com.squareup.okhttp.OkHttpClient okHttpClient56 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector57 = null;
        okHttpClient56.proxySelector = proxySelector57;
        java.net.ProxySelector proxySelector59 = okHttpClient56.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier60 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient61 = okHttpClient56.setHostnameVerifier(hostnameVerifier60);
        java.net.ProxySelector proxySelector62 = java.net.ProxySelector.getDefault();
        okHttpClient56.proxySelector = proxySelector62;
        okHttpClient55.proxySelector = proxySelector62;
        com.squareup.okhttp.OkHttpClient okHttpClient65 = okHttpClient29.setProxySelector(proxySelector62);
        okHttpClient10.proxySelector = proxySelector62;
        com.squareup.okhttp.OkHttpClient okHttpClient67 = okHttpClient5.setProxySelector(proxySelector62);
        com.squareup.okhttp.OkAuthenticator okAuthenticator68 = okHttpClient67.authenticator;
        com.squareup.okhttp.ConnectionPool connectionPool69 = okHttpClient67.getConnectionPool();
        connectionPool69.evictAll();
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNotNull(okAuthenticator6);
        org.junit.Assert.assertNotNull(connectionPool7);
        org.junit.Assert.assertNull(responseCache8);
// flaky:         org.junit.Assert.assertNull(proxySelector9);
        org.junit.Assert.assertNull(cookieHandler11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(okHttpClient14);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNull(sSLSocketFactory22);
        org.junit.Assert.assertNotNull(connectionPool23);
        org.junit.Assert.assertNull(cookieHandler27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(okHttpClient29);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertNotNull(connectionPool35);
        org.junit.Assert.assertNotNull(okHttpClient37);
        org.junit.Assert.assertNotNull(okAuthenticator38);
        org.junit.Assert.assertNull(cookieHandler40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(okHttpClient43);
        org.junit.Assert.assertNotNull(okHttpClient45);
        org.junit.Assert.assertNull(sSLSocketFactory51);
// flaky:         org.junit.Assert.assertNull(proxySelector54);
        org.junit.Assert.assertNotNull(okHttpClient55);
        org.junit.Assert.assertNull(proxySelector59);
        org.junit.Assert.assertNotNull(okHttpClient61);
// flaky:         org.junit.Assert.assertNull(proxySelector62);
        org.junit.Assert.assertNotNull(okHttpClient65);
        org.junit.Assert.assertNotNull(okHttpClient67);
        org.junit.Assert.assertNotNull(okAuthenticator68);
        org.junit.Assert.assertNotNull(connectionPool69);
    }

    @Test
    public void test03275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03275");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        java.net.ResponseCache responseCache2 = okHttpClient0.responseCache;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.copyWithDefaults();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory4 = okHttpClient3.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient5 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector6 = null;
        okHttpClient5.proxySelector = proxySelector6;
        java.net.ProxySelector proxySelector8 = okHttpClient5.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient5.setHostnameVerifier(hostnameVerifier9);
        java.net.ProxySelector proxySelector11 = okHttpClient5.proxySelector;
        java.net.ResponseCache responseCache12 = okHttpClient5.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet13 = okHttpClient5.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler15 = okHttpClient14.getCookieHandler();
        boolean boolean16 = okHttpClient14.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient14.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool20 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int21 = connectionPool20.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient17.setConnectionPool(connectionPool20);
        com.squareup.okhttp.OkHttpClient okHttpClient23 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector24 = null;
        okHttpClient23.proxySelector = proxySelector24;
        java.net.ProxySelector proxySelector26 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient23.setProxySelector(proxySelector26);
        java.net.ProxySelector proxySelector28 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient23.setProxySelector(proxySelector28);
        okHttpClient22.proxySelector = proxySelector28;
        javax.net.ssl.HostnameVerifier hostnameVerifier31 = okHttpClient22.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient5.setHostnameVerifier(hostnameVerifier31);
        java.net.Proxy proxy33 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress34 = proxy33.address();
        com.squareup.okhttp.OkHttpClient okHttpClient35 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector36 = null;
        okHttpClient35.proxySelector = proxySelector36;
        com.squareup.okhttp.ConnectionPool connectionPool38 = okHttpClient35.connectionPool;
        com.squareup.okhttp.ConnectionPool connectionPool39 = okHttpClient35.getConnectionPool();
        boolean boolean40 = proxy33.equals((java.lang.Object) okHttpClient35);
        okHttpClient5.proxy = proxy33;
        com.squareup.okhttp.OkHttpClient okHttpClient42 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler43 = okHttpClient42.getCookieHandler();
        boolean boolean44 = okHttpClient42.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient45 = okHttpClient42.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier46 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient47 = okHttpClient45.setHostnameVerifier(hostnameVerifier46);
        java.net.ResponseCache responseCache48 = okHttpClient47.getResponseCache();
        java.net.ProxySelector proxySelector49 = okHttpClient47.getProxySelector();
        boolean boolean50 = proxy33.equals((java.lang.Object) proxySelector49);
        java.net.Proxy.Type type51 = proxy33.type();
        okHttpClient3.proxy = proxy33;
        com.squareup.okhttp.OkHttpClient okHttpClient53 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler54 = okHttpClient53.getCookieHandler();
        boolean boolean55 = okHttpClient53.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient56 = okHttpClient53.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet57 = okHttpClient56.failedRoutes;
        boolean boolean58 = okHttpClient56.getFollowProtocolRedirects();
        java.net.Proxy proxy59 = java.net.Proxy.NO_PROXY;
        okHttpClient56.proxy = proxy59;
        com.squareup.okhttp.OkHttpClient okHttpClient61 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler62 = okHttpClient61.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray63 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet64 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet64, routeArray63);
        okHttpClient61.failedRoutes = routeSet64;
        java.net.Proxy proxy67 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient68 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler69 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient70 = okHttpClient68.setCookieHandler(cookieHandler69);
        com.squareup.okhttp.OkHttpClient okHttpClient72 = okHttpClient68.setFollowProtocolRedirects(true);
        boolean boolean73 = proxy67.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient74 = okHttpClient61.setProxy(proxy67);
        java.net.SocketAddress socketAddress75 = proxy67.address();
        com.squareup.okhttp.OkHttpClient okHttpClient76 = okHttpClient56.setProxy(proxy67);
        com.squareup.okhttp.OkAuthenticator okAuthenticator77 = okHttpClient76.authenticator;
        okHttpClient3.authenticator = okAuthenticator77;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory79 = okHttpClient3.sslSocketFactory;
        com.squareup.okhttp.OkHttpClient okHttpClient80 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler81 = okHttpClient80.getCookieHandler();
        boolean boolean82 = okHttpClient80.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator83 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient84 = okHttpClient80.setAuthenticator(okAuthenticator83);
        java.net.ResponseCache responseCache85 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient86 = okHttpClient80.setResponseCache(responseCache85);
        com.squareup.okhttp.ConnectionPool connectionPool89 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool89.evictAll();
        okHttpClient80.connectionPool = connectionPool89;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory92 = okHttpClient80.sslSocketFactory;
        java.net.Proxy proxy93 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient94 = okHttpClient80.setProxy(proxy93);
        java.net.Proxy.Type type95 = proxy93.type();
        okHttpClient3.proxy = proxy93;
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertNull(responseCache2);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertNotNull(sSLSocketFactory4);
        org.junit.Assert.assertNull(proxySelector8);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertNull(proxySelector11);
        org.junit.Assert.assertNull(responseCache12);
        org.junit.Assert.assertNotNull(routeSet13);
        org.junit.Assert.assertNull(cookieHandler15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNotNull(okHttpClient27);
// flaky:         org.junit.Assert.assertNull(proxySelector28);
        org.junit.Assert.assertNotNull(okHttpClient29);
        org.junit.Assert.assertNotNull(hostnameVerifier31);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertNotNull(proxy33);
        org.junit.Assert.assertNull(socketAddress34);
        org.junit.Assert.assertNull(connectionPool38);
        org.junit.Assert.assertNull(connectionPool39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(cookieHandler43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(okHttpClient45);
        org.junit.Assert.assertNotNull(okHttpClient47);
        org.junit.Assert.assertNull(responseCache48);
// flaky:         org.junit.Assert.assertNull(proxySelector49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + type51 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type51.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(cookieHandler54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(okHttpClient56);
        org.junit.Assert.assertNotNull(routeSet57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(proxy59);
        org.junit.Assert.assertNull(cookieHandler62);
        org.junit.Assert.assertNotNull(routeArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(proxy67);
        org.junit.Assert.assertNotNull(okHttpClient70);
        org.junit.Assert.assertNotNull(okHttpClient72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(okHttpClient74);
        org.junit.Assert.assertNull(socketAddress75);
        org.junit.Assert.assertNotNull(okHttpClient76);
        org.junit.Assert.assertNotNull(okAuthenticator77);
        org.junit.Assert.assertNotNull(sSLSocketFactory79);
        org.junit.Assert.assertNull(cookieHandler81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(okHttpClient84);
        org.junit.Assert.assertNotNull(okHttpClient86);
        org.junit.Assert.assertNull(sSLSocketFactory92);
        org.junit.Assert.assertNotNull(proxy93);
        org.junit.Assert.assertNotNull(okHttpClient94);
        org.junit.Assert.assertTrue("'" + type95 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type95.equals(java.net.Proxy.Type.DIRECT));
    }

    @Test
    public void test03276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03276");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        java.net.Proxy proxy5 = okHttpClient0.proxy;
        java.net.ProxySelector proxySelector6 = okHttpClient0.proxySelector;
        java.net.ResponseCache responseCache7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient0.setResponseCache(responseCache7);
        com.squareup.okhttp.OkHttpClient okHttpClient9 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector10 = null;
        okHttpClient9.proxySelector = proxySelector10;
        java.net.ProxySelector proxySelector12 = okHttpClient9.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient9.setHostnameVerifier(hostnameVerifier13);
        java.net.ProxySelector proxySelector15 = okHttpClient9.proxySelector;
        java.net.ResponseCache responseCache16 = okHttpClient9.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet17 = okHttpClient9.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler19 = okHttpClient18.getCookieHandler();
        boolean boolean20 = okHttpClient18.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient18.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool24 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int25 = connectionPool24.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient21.setConnectionPool(connectionPool24);
        com.squareup.okhttp.OkHttpClient okHttpClient27 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector28 = null;
        okHttpClient27.proxySelector = proxySelector28;
        java.net.ProxySelector proxySelector30 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient27.setProxySelector(proxySelector30);
        java.net.ProxySelector proxySelector32 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient27.setProxySelector(proxySelector32);
        okHttpClient26.proxySelector = proxySelector32;
        javax.net.ssl.HostnameVerifier hostnameVerifier35 = okHttpClient26.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient9.setHostnameVerifier(hostnameVerifier35);
        java.net.Proxy proxy37 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress38 = proxy37.address();
        com.squareup.okhttp.OkHttpClient okHttpClient39 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector40 = null;
        okHttpClient39.proxySelector = proxySelector40;
        com.squareup.okhttp.ConnectionPool connectionPool42 = okHttpClient39.connectionPool;
        com.squareup.okhttp.ConnectionPool connectionPool43 = okHttpClient39.getConnectionPool();
        boolean boolean44 = proxy37.equals((java.lang.Object) okHttpClient39);
        okHttpClient9.proxy = proxy37;
        com.squareup.okhttp.OkHttpClient okHttpClient46 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler47 = okHttpClient46.getCookieHandler();
        boolean boolean48 = okHttpClient46.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient49 = okHttpClient46.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier50 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient51 = okHttpClient49.setHostnameVerifier(hostnameVerifier50);
        java.net.ResponseCache responseCache52 = okHttpClient51.getResponseCache();
        java.net.ProxySelector proxySelector53 = okHttpClient51.getProxySelector();
        boolean boolean54 = proxy37.equals((java.lang.Object) proxySelector53);
        okHttpClient8.proxySelector = proxySelector53;
        javax.net.ssl.HostnameVerifier hostnameVerifier56 = okHttpClient8.hostnameVerifier;
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(proxy5);
        org.junit.Assert.assertNull(proxySelector6);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertNull(proxySelector12);
        org.junit.Assert.assertNotNull(okHttpClient14);
        org.junit.Assert.assertNull(proxySelector15);
        org.junit.Assert.assertNull(responseCache16);
        org.junit.Assert.assertNotNull(routeSet17);
        org.junit.Assert.assertNull(cookieHandler19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNotNull(okHttpClient31);
// flaky:         org.junit.Assert.assertNull(proxySelector32);
        org.junit.Assert.assertNotNull(okHttpClient33);
        org.junit.Assert.assertNotNull(hostnameVerifier35);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNotNull(proxy37);
        org.junit.Assert.assertNull(socketAddress38);
        org.junit.Assert.assertNull(connectionPool42);
        org.junit.Assert.assertNull(connectionPool43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(cookieHandler47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(okHttpClient49);
        org.junit.Assert.assertNotNull(okHttpClient51);
        org.junit.Assert.assertNull(responseCache52);
// flaky:         org.junit.Assert.assertNull(proxySelector53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(hostnameVerifier56);
    }

    @Test
    public void test03277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03277");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier6 = okHttpClient0.hostnameVerifier;
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = okHttpClient0.hostnameVerifier;
        java.net.ResponseCache responseCache8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient0.setResponseCache(responseCache8);
        java.net.ProxySelector proxySelector10 = okHttpClient0.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory11 = okHttpClient0.getSslSocketFactory();
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(hostnameVerifier6);
        org.junit.Assert.assertNull(hostnameVerifier7);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNull(proxySelector10);
        org.junit.Assert.assertNull(sSLSocketFactory11);
    }

    @Test
    public void test03278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03278");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient0.connectionPool;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler5 = okHttpClient4.getCookieHandler();
        boolean boolean6 = okHttpClient4.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient4.setAuthenticator(okAuthenticator7);
        java.net.ResponseCache responseCache9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient4.setResponseCache(responseCache9);
        com.squareup.okhttp.ConnectionPool connectionPool13 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool13.evictAll();
        okHttpClient4.connectionPool = connectionPool13;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory16 = okHttpClient4.sslSocketFactory;
        java.net.ResponseCache responseCache17 = null;
        okHttpClient4.responseCache = responseCache17;
        com.squareup.okhttp.OkAuthenticator okAuthenticator19 = okHttpClient4.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient4.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient21 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector22 = null;
        okHttpClient21.proxySelector = proxySelector22;
        java.net.ProxySelector proxySelector24 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient21.setProxySelector(proxySelector24);
        java.net.ProxySelector proxySelector26 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient21.setProxySelector(proxySelector26);
        java.net.ProxySelector.setDefault(proxySelector26);
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient20.setProxySelector(proxySelector26);
        java.net.ProxySelector.setDefault(proxySelector26);
        okHttpClient0.proxySelector = proxySelector26;
        java.net.ResponseCache responseCache32 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient0.setResponseCache(responseCache32);
        com.squareup.okhttp.OkHttpClient okHttpClient34 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector35 = null;
        okHttpClient34.proxySelector = proxySelector35;
        java.net.ProxySelector proxySelector37 = okHttpClient34.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier38 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient34.setHostnameVerifier(hostnameVerifier38);
        com.squareup.okhttp.ConnectionPool connectionPool40 = okHttpClient34.getConnectionPool();
        com.squareup.okhttp.OkHttpClient okHttpClient41 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler42 = okHttpClient41.getCookieHandler();
        boolean boolean43 = okHttpClient41.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient44 = okHttpClient41.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet45 = okHttpClient44.failedRoutes;
        boolean boolean46 = okHttpClient44.getFollowProtocolRedirects();
        java.net.Proxy proxy47 = java.net.Proxy.NO_PROXY;
        okHttpClient44.proxy = proxy47;
        com.squareup.okhttp.OkHttpClient okHttpClient49 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler50 = okHttpClient49.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray51 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet52 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet52, routeArray51);
        okHttpClient49.failedRoutes = routeSet52;
        java.net.Proxy proxy55 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient56 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler57 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient58 = okHttpClient56.setCookieHandler(cookieHandler57);
        com.squareup.okhttp.OkHttpClient okHttpClient60 = okHttpClient56.setFollowProtocolRedirects(true);
        boolean boolean61 = proxy55.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient62 = okHttpClient49.setProxy(proxy55);
        java.net.SocketAddress socketAddress63 = proxy55.address();
        com.squareup.okhttp.OkHttpClient okHttpClient64 = okHttpClient44.setProxy(proxy55);
        com.squareup.okhttp.OkHttpClient okHttpClient66 = okHttpClient44.setFollowProtocolRedirects(false);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory67 = okHttpClient66.getSslSocketFactory();
        java.lang.String[] strArray68 = sSLSocketFactory67.getSupportedCipherSuites();
        okHttpClient34.sslSocketFactory = sSLSocketFactory67;
        com.squareup.okhttp.OkHttpClient okHttpClient70 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory67);
        java.net.InetAddress inetAddress73 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket75 = sSLSocketFactory67.createSocket("DIRECT", (int) (byte) -1, inetAddress73, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: port out of range:-1");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(connectionPool3);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertNull(sSLSocketFactory16);
        org.junit.Assert.assertNull(okAuthenticator19);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNotNull(okHttpClient25);
// flaky:         org.junit.Assert.assertNull(proxySelector26);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNotNull(okHttpClient29);
        org.junit.Assert.assertNotNull(okHttpClient33);
        org.junit.Assert.assertNull(proxySelector37);
        org.junit.Assert.assertNotNull(okHttpClient39);
        org.junit.Assert.assertNull(connectionPool40);
        org.junit.Assert.assertNull(cookieHandler42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(okHttpClient44);
        org.junit.Assert.assertNotNull(routeSet45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(proxy47);
        org.junit.Assert.assertNull(cookieHandler50);
        org.junit.Assert.assertNotNull(routeArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(proxy55);
        org.junit.Assert.assertNotNull(okHttpClient58);
        org.junit.Assert.assertNotNull(okHttpClient60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(okHttpClient62);
        org.junit.Assert.assertNull(socketAddress63);
        org.junit.Assert.assertNotNull(okHttpClient64);
        org.junit.Assert.assertNotNull(okHttpClient66);
        org.junit.Assert.assertNotNull(sSLSocketFactory67);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(okHttpClient70);
    }

    @Test
    public void test03279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03279");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = okHttpClient0.hostnameVerifier;
        java.net.ResponseCache responseCache2 = okHttpClient0.getResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler4 = okHttpClient3.getCookieHandler();
        boolean boolean5 = okHttpClient3.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient3.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int10 = connectionPool9.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient6.setConnectionPool(connectionPool9);
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = null;
        okHttpClient6.hostnameVerifier = hostnameVerifier12;
        com.squareup.okhttp.ConnectionPool connectionPool14 = okHttpClient6.getConnectionPool();
        okHttpClient0.connectionPool = connectionPool14;
        java.net.CookieHandler cookieHandler16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient0.setCookieHandler(cookieHandler16);
        okHttpClient0.followProtocolRedirects = true;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient0.copyWithDefaults();
        org.junit.Assert.assertNull(hostnameVerifier1);
        org.junit.Assert.assertNull(responseCache2);
        org.junit.Assert.assertNull(cookieHandler4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(okHttpClient6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(connectionPool14);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNotNull(okHttpClient20);
    }

    @Test
    public void test03280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03280");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        java.net.ResponseCache responseCache5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient0.setResponseCache(responseCache5);
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool9.evictAll();
        okHttpClient0.connectionPool = connectionPool9;
        java.net.ResponseCache responseCache12 = okHttpClient0.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator13 = okHttpClient0.authenticator;
        java.net.ResponseCache responseCache14 = okHttpClient0.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator15 = okHttpClient0.getAuthenticator();
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient6);
        org.junit.Assert.assertNull(responseCache12);
        org.junit.Assert.assertNull(okAuthenticator13);
        org.junit.Assert.assertNull(responseCache14);
        org.junit.Assert.assertNull(okAuthenticator15);
    }

    @Test
    public void test03281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03281");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet4 = okHttpClient3.failedRoutes;
        boolean boolean5 = okHttpClient3.getFollowProtocolRedirects();
        java.net.Proxy proxy6 = java.net.Proxy.NO_PROXY;
        okHttpClient3.proxy = proxy6;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler9 = okHttpClient8.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray10 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet11 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet11, routeArray10);
        okHttpClient8.failedRoutes = routeSet11;
        java.net.Proxy proxy14 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient15.setCookieHandler(cookieHandler16);
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient15.setFollowProtocolRedirects(true);
        boolean boolean20 = proxy14.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient8.setProxy(proxy14);
        java.net.SocketAddress socketAddress22 = proxy14.address();
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient3.setProxy(proxy14);
        java.net.ResponseCache responseCache24 = okHttpClient23.getResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient25 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler26 = okHttpClient25.getCookieHandler();
        boolean boolean27 = okHttpClient25.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient25.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet29 = okHttpClient28.failedRoutes;
        boolean boolean30 = okHttpClient28.getFollowProtocolRedirects();
        java.net.Proxy proxy31 = java.net.Proxy.NO_PROXY;
        okHttpClient28.proxy = proxy31;
        java.lang.String str33 = proxy31.toString();
        okHttpClient23.proxy = proxy31;
        java.lang.String str35 = proxy31.toString();
        java.net.SocketAddress socketAddress36 = proxy31.address();
        java.lang.String str37 = proxy31.toString();
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertNotNull(routeSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(proxy6);
        org.junit.Assert.assertNull(cookieHandler9);
        org.junit.Assert.assertNotNull(routeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(proxy14);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNull(socketAddress22);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertNull(responseCache24);
        org.junit.Assert.assertNull(cookieHandler26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNotNull(routeSet29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(proxy31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "DIRECT" + "'", str33, "DIRECT");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "DIRECT" + "'", str35, "DIRECT");
        org.junit.Assert.assertNull(socketAddress36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "DIRECT" + "'", str37, "DIRECT");
    }

    @Test
    public void test03282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03282");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setHostnameVerifier(hostnameVerifier4);
        java.net.ProxySelector proxySelector6 = okHttpClient0.proxySelector;
        java.net.ResponseCache responseCache7 = okHttpClient0.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet8 = okHttpClient0.failedRoutes;
        com.squareup.okhttp.ConnectionPool connectionPool11 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool11.evictAll();
        com.squareup.okhttp.Address address13 = null;
        com.squareup.okhttp.Connection connection14 = connectionPool11.get(address13);
        okHttpClient0.connectionPool = connectionPool11;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient0.setFollowProtocolRedirects(true);
        java.net.ResponseCache responseCache18 = null;
        okHttpClient17.responseCache = responseCache18;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient17.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient21 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler22 = okHttpClient21.getCookieHandler();
        boolean boolean23 = okHttpClient21.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator24 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient21.setAuthenticator(okAuthenticator24);
        com.squareup.okhttp.OkAuthenticator okAuthenticator26 = okHttpClient21.authenticator;
        java.net.ResponseCache responseCache27 = okHttpClient21.getResponseCache();
        java.net.CookieHandler cookieHandler28 = okHttpClient21.cookieHandler;
        java.net.ResponseCache responseCache29 = okHttpClient21.responseCache;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient21.setFollowProtocolRedirects(true);
        com.squareup.okhttp.OkHttpClient okHttpClient32 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler33 = okHttpClient32.getCookieHandler();
        boolean boolean34 = okHttpClient32.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient32.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet36 = okHttpClient35.failedRoutes;
        boolean boolean37 = okHttpClient35.getFollowProtocolRedirects();
        java.net.Proxy proxy38 = java.net.Proxy.NO_PROXY;
        okHttpClient35.proxy = proxy38;
        com.squareup.okhttp.OkHttpClient okHttpClient40 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler41 = okHttpClient40.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray42 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet43 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet43, routeArray42);
        okHttpClient40.failedRoutes = routeSet43;
        java.net.Proxy proxy46 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient47 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler48 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient49 = okHttpClient47.setCookieHandler(cookieHandler48);
        com.squareup.okhttp.OkHttpClient okHttpClient51 = okHttpClient47.setFollowProtocolRedirects(true);
        boolean boolean52 = proxy46.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient53 = okHttpClient40.setProxy(proxy46);
        java.net.SocketAddress socketAddress54 = proxy46.address();
        com.squareup.okhttp.OkHttpClient okHttpClient55 = okHttpClient35.setProxy(proxy46);
        com.squareup.okhttp.OkHttpClient okHttpClient57 = okHttpClient35.setFollowProtocolRedirects(false);
        com.squareup.okhttp.OkHttpClient okHttpClient58 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler59 = okHttpClient58.getCookieHandler();
        boolean boolean60 = okHttpClient58.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient61 = okHttpClient58.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet62 = okHttpClient61.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient63 = okHttpClient61.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool66 = new com.squareup.okhttp.ConnectionPool((int) '4', (long) 100);
        com.squareup.okhttp.OkHttpClient okHttpClient67 = okHttpClient61.setConnectionPool(connectionPool66);
        okHttpClient57.connectionPool = connectionPool66;
        com.squareup.okhttp.OkHttpClient okHttpClient69 = okHttpClient21.setConnectionPool(connectionPool66);
        com.squareup.okhttp.OkHttpClient okHttpClient70 = okHttpClient20.setConnectionPool(connectionPool66);
        connectionPool66.evictAll();
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(proxySelector6);
        org.junit.Assert.assertNull(responseCache7);
        org.junit.Assert.assertNotNull(routeSet8);
        org.junit.Assert.assertNull(connection14);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNull(cookieHandler22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(okHttpClient25);
        org.junit.Assert.assertNull(okAuthenticator26);
        org.junit.Assert.assertNull(responseCache27);
        org.junit.Assert.assertNull(cookieHandler28);
        org.junit.Assert.assertNull(responseCache29);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNull(cookieHandler33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNotNull(routeSet36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(proxy38);
        org.junit.Assert.assertNull(cookieHandler41);
        org.junit.Assert.assertNotNull(routeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(proxy46);
        org.junit.Assert.assertNotNull(okHttpClient49);
        org.junit.Assert.assertNotNull(okHttpClient51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(okHttpClient53);
        org.junit.Assert.assertNull(socketAddress54);
        org.junit.Assert.assertNotNull(okHttpClient55);
        org.junit.Assert.assertNotNull(okHttpClient57);
        org.junit.Assert.assertNull(cookieHandler59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(okHttpClient61);
        org.junit.Assert.assertNotNull(routeSet62);
        org.junit.Assert.assertNotNull(okHttpClient63);
        org.junit.Assert.assertNotNull(okHttpClient67);
        org.junit.Assert.assertNotNull(okHttpClient69);
        org.junit.Assert.assertNotNull(okHttpClient70);
    }

    @Test
    public void test03283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03283");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet4 = okHttpClient3.failedRoutes;
        boolean boolean5 = okHttpClient3.getFollowProtocolRedirects();
        java.net.Proxy proxy6 = java.net.Proxy.NO_PROXY;
        okHttpClient3.proxy = proxy6;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler9 = okHttpClient8.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray10 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet11 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet11, routeArray10);
        okHttpClient8.failedRoutes = routeSet11;
        java.net.Proxy proxy14 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient15.setCookieHandler(cookieHandler16);
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient15.setFollowProtocolRedirects(true);
        boolean boolean20 = proxy14.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient8.setProxy(proxy14);
        java.net.SocketAddress socketAddress22 = proxy14.address();
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient3.setProxy(proxy14);
        java.net.SocketAddress socketAddress24 = proxy14.address();
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertNotNull(routeSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(proxy6);
        org.junit.Assert.assertNull(cookieHandler9);
        org.junit.Assert.assertNotNull(routeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(proxy14);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNull(socketAddress22);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertNull(socketAddress24);
    }

    @Test
    public void test03284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03284");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setHostnameVerifier(hostnameVerifier4);
        java.net.ResponseCache responseCache6 = okHttpClient5.responseCache;
        java.net.CookieHandler cookieHandler7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient5.setCookieHandler(cookieHandler7);
        java.net.CookieHandler cookieHandler9 = okHttpClient5.cookieHandler;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient5.copyWithDefaults();
        java.net.CookieHandler cookieHandler11 = okHttpClient10.cookieHandler;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler13 = okHttpClient12.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray14 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet15 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet15, routeArray14);
        okHttpClient12.failedRoutes = routeSet15;
        java.net.Proxy proxy18 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler20 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient19.setCookieHandler(cookieHandler20);
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient19.setFollowProtocolRedirects(true);
        boolean boolean24 = proxy18.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient12.setProxy(proxy18);
        java.lang.String str26 = proxy18.toString();
        java.net.Proxy.Type type27 = proxy18.type();
        com.squareup.okhttp.OkHttpClient okHttpClient28 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler29 = okHttpClient28.getCookieHandler();
        java.net.ResponseCache responseCache30 = null;
        okHttpClient28.responseCache = responseCache30;
        boolean boolean32 = okHttpClient28.followProtocolRedirects;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory33 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient28.setSSLSocketFactory(sSLSocketFactory33);
        java.net.CookieHandler cookieHandler35 = okHttpClient28.cookieHandler;
        boolean boolean36 = proxy18.equals((java.lang.Object) okHttpClient28);
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient10.setProxy(proxy18);
        java.net.ProxySelector proxySelector38 = okHttpClient37.proxySelector;
        java.net.ResponseCache responseCache39 = okHttpClient37.responseCache;
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(responseCache6);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertNull(cookieHandler9);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertNull(cookieHandler11);
        org.junit.Assert.assertNull(cookieHandler13);
        org.junit.Assert.assertNotNull(routeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(proxy18);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(okHttpClient25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "DIRECT" + "'", str26, "DIRECT");
        org.junit.Assert.assertTrue("'" + type27 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type27.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(cookieHandler29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertNull(cookieHandler35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(okHttpClient37);
// flaky:         org.junit.Assert.assertNull(proxySelector38);
        org.junit.Assert.assertNull(responseCache39);
    }

    @Test
    public void test03285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03285");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        com.squareup.okhttp.OkAuthenticator okAuthenticator5 = okHttpClient4.getAuthenticator();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory6 = okHttpClient4.sslSocketFactory;
        java.net.ProxySelector proxySelector7 = okHttpClient4.getProxySelector();
        java.net.CookieHandler cookieHandler8 = okHttpClient4.cookieHandler;
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(okAuthenticator5);
        org.junit.Assert.assertNull(sSLSocketFactory6);
        org.junit.Assert.assertNull(proxySelector7);
        org.junit.Assert.assertNull(cookieHandler8);
    }

    @Test
    public void test03286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03286");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setHostnameVerifier(hostnameVerifier4);
        java.net.ResponseCache responseCache6 = okHttpClient5.responseCache;
        java.net.CookieHandler cookieHandler7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient5.setCookieHandler(cookieHandler7);
        boolean boolean9 = okHttpClient5.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator10 = okHttpClient5.authenticator;
        com.squareup.okhttp.ConnectionPool connectionPool11 = okHttpClient5.getConnectionPool();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory12 = okHttpClient5.sslSocketFactory;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache13 = okHttpClient5.okResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient14 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler15 = okHttpClient14.getCookieHandler();
        boolean boolean16 = okHttpClient14.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator17 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient14.setAuthenticator(okAuthenticator17);
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient14.copyWithDefaults();
        java.net.CookieHandler cookieHandler20 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient14.setCookieHandler(cookieHandler20);
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler23 = okHttpClient22.getCookieHandler();
        boolean boolean24 = okHttpClient22.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator25 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient22.setAuthenticator(okAuthenticator25);
        java.net.ResponseCache responseCache27 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient22.setResponseCache(responseCache27);
        com.squareup.okhttp.ConnectionPool connectionPool31 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool31.evictAll();
        okHttpClient22.connectionPool = connectionPool31;
        connectionPool31.evictAll();
        int int35 = connectionPool31.getSpdyConnectionCount();
        int int36 = connectionPool31.getSpdyConnectionCount();
        int int37 = connectionPool31.getConnectionCount();
        okHttpClient21.connectionPool = connectionPool31;
        connectionPool31.evictAll();
        okHttpClient5.connectionPool = connectionPool31;
        int int41 = connectionPool31.getSpdyConnectionCount();
        com.squareup.okhttp.Connection connection42 = null;
        // The following exception was thrown during execution in test generation
        try {
            connectionPool31.recycle(connection42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(responseCache6);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(okAuthenticator10);
        org.junit.Assert.assertNull(connectionPool11);
        org.junit.Assert.assertNull(sSLSocketFactory12);
        org.junit.Assert.assertNull(okResponseCache13);
        org.junit.Assert.assertNull(cookieHandler15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNull(cookieHandler23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
    }

    @Test
    public void test03287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03287");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        com.squareup.okhttp.OkAuthenticator okAuthenticator5 = okHttpClient0.authenticator;
        java.net.ResponseCache responseCache6 = okHttpClient0.getResponseCache();
        java.net.CookieHandler cookieHandler7 = okHttpClient0.cookieHandler;
        java.net.ResponseCache responseCache8 = okHttpClient0.responseCache;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler10 = okHttpClient9.getCookieHandler();
        boolean boolean11 = okHttpClient9.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient9.setAuthenticator(okAuthenticator12);
        java.net.Proxy proxy14 = okHttpClient9.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient9.copyWithDefaults();
        java.net.CookieHandler cookieHandler16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient9.setCookieHandler(cookieHandler16);
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier19 = okHttpClient18.hostnameVerifier;
        java.net.ResponseCache responseCache20 = okHttpClient18.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator21 = okHttpClient18.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler23 = okHttpClient22.getCookieHandler();
        boolean boolean24 = okHttpClient22.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient22.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier26 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient25.setHostnameVerifier(hostnameVerifier26);
        java.net.ResponseCache responseCache28 = okHttpClient27.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator29 = okHttpClient27.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = okHttpClient27.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory31 = okHttpClient27.getSslSocketFactory();
        java.lang.String[] strArray32 = sSLSocketFactory31.getSupportedCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient18.setSSLSocketFactory(sSLSocketFactory31);
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient17.setSSLSocketFactory(sSLSocketFactory31);
        okHttpClient0.sslSocketFactory = sSLSocketFactory31;
        java.net.Socket socket36 = sSLSocketFactory31.createSocket();
        java.lang.String[] strArray37 = sSLSocketFactory31.getSupportedCipherSuites();
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket40 = sSLSocketFactory31.createSocket("hi!", (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: port out of range:-1");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(okAuthenticator5);
        org.junit.Assert.assertNull(responseCache6);
        org.junit.Assert.assertNull(cookieHandler7);
        org.junit.Assert.assertNull(responseCache8);
        org.junit.Assert.assertNull(cookieHandler10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNull(proxy14);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNull(hostnameVerifier19);
        org.junit.Assert.assertNull(responseCache20);
        org.junit.Assert.assertNull(okAuthenticator21);
        org.junit.Assert.assertNull(cookieHandler23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(okHttpClient25);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNull(responseCache28);
        org.junit.Assert.assertNotNull(okAuthenticator29);
        org.junit.Assert.assertNull(hostnameVerifier30);
        org.junit.Assert.assertNotNull(sSLSocketFactory31);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(okHttpClient33);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertNotNull(socket36);
        org.junit.Assert.assertEquals(socket36.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(strArray37);
    }

    @Test
    public void test03288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03288");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        java.net.ResponseCache responseCache5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient0.setResponseCache(responseCache5);
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool9.evictAll();
        okHttpClient0.connectionPool = connectionPool9;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory12 = okHttpClient0.sslSocketFactory;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory13 = null;
        okHttpClient0.sslSocketFactory = sSLSocketFactory13;
        java.net.CookieHandler cookieHandler15 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient0.setFollowProtocolRedirects(false);
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier19 = okHttpClient18.hostnameVerifier;
        java.net.ResponseCache responseCache20 = okHttpClient18.getResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient21 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler22 = okHttpClient21.getCookieHandler();
        boolean boolean23 = okHttpClient21.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient21.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool27 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int28 = connectionPool27.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient24.setConnectionPool(connectionPool27);
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = null;
        okHttpClient24.hostnameVerifier = hostnameVerifier30;
        com.squareup.okhttp.ConnectionPool connectionPool32 = okHttpClient24.getConnectionPool();
        okHttpClient18.connectionPool = connectionPool32;
        java.net.CookieHandler cookieHandler34 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient18.setCookieHandler(cookieHandler34);
        com.squareup.okhttp.OkHttpClient okHttpClient36 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector37 = null;
        okHttpClient36.proxySelector = proxySelector37;
        java.net.ProxySelector proxySelector39 = okHttpClient36.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier40 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient41 = okHttpClient36.setHostnameVerifier(hostnameVerifier40);
        java.net.ProxySelector proxySelector42 = okHttpClient36.proxySelector;
        java.net.ResponseCache responseCache43 = okHttpClient36.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet44 = okHttpClient36.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient45 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler46 = okHttpClient45.getCookieHandler();
        boolean boolean47 = okHttpClient45.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient48 = okHttpClient45.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool51 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int52 = connectionPool51.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient53 = okHttpClient48.setConnectionPool(connectionPool51);
        com.squareup.okhttp.OkHttpClient okHttpClient54 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector55 = null;
        okHttpClient54.proxySelector = proxySelector55;
        java.net.ProxySelector proxySelector57 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient58 = okHttpClient54.setProxySelector(proxySelector57);
        java.net.ProxySelector proxySelector59 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient60 = okHttpClient54.setProxySelector(proxySelector59);
        okHttpClient53.proxySelector = proxySelector59;
        javax.net.ssl.HostnameVerifier hostnameVerifier62 = okHttpClient53.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient63 = okHttpClient36.setHostnameVerifier(hostnameVerifier62);
        javax.net.ssl.HostnameVerifier hostnameVerifier64 = okHttpClient63.getHostnameVerifier();
        okHttpClient35.hostnameVerifier = hostnameVerifier64;
        okHttpClient0.hostnameVerifier = hostnameVerifier64;
        java.util.Set<com.squareup.okhttp.Route> routeSet67 = okHttpClient0.failedRoutes;
        java.util.Set<com.squareup.okhttp.Route> routeSet68 = null;
        okHttpClient0.failedRoutes = routeSet68;
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient6);
        org.junit.Assert.assertNull(sSLSocketFactory12);
        org.junit.Assert.assertNull(cookieHandler15);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNull(hostnameVerifier19);
        org.junit.Assert.assertNull(responseCache20);
        org.junit.Assert.assertNull(cookieHandler22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(okHttpClient29);
        org.junit.Assert.assertNotNull(connectionPool32);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNull(proxySelector39);
        org.junit.Assert.assertNotNull(okHttpClient41);
        org.junit.Assert.assertNull(proxySelector42);
        org.junit.Assert.assertNull(responseCache43);
        org.junit.Assert.assertNotNull(routeSet44);
        org.junit.Assert.assertNull(cookieHandler46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(okHttpClient48);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(okHttpClient53);
        org.junit.Assert.assertNotNull(okHttpClient58);
// flaky:         org.junit.Assert.assertNull(proxySelector59);
        org.junit.Assert.assertNotNull(okHttpClient60);
        org.junit.Assert.assertNotNull(hostnameVerifier62);
        org.junit.Assert.assertNotNull(okHttpClient63);
        org.junit.Assert.assertNotNull(hostnameVerifier64);
        org.junit.Assert.assertNotNull(routeSet67);
    }

    @Test
    public void test03289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03289");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = okHttpClient0.hostnameVerifier;
        java.net.ResponseCache responseCache2 = okHttpClient0.getResponseCache();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory3 = okHttpClient0.sslSocketFactory;
        java.net.Proxy proxy4 = okHttpClient0.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector7 = null;
        okHttpClient6.proxySelector = proxySelector7;
        java.net.ProxySelector proxySelector9 = okHttpClient6.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient6.setHostnameVerifier(hostnameVerifier10);
        boolean boolean12 = okHttpClient6.getFollowProtocolRedirects();
        com.squareup.okhttp.ConnectionPool connectionPool15 = new com.squareup.okhttp.ConnectionPool((int) 'a', (long) (byte) -1);
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient6.setConnectionPool(connectionPool15);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory17 = okHttpClient6.getSslSocketFactory();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache18 = okHttpClient6.okResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient19 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler20 = okHttpClient19.getCookieHandler();
        boolean boolean21 = okHttpClient19.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient19.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet23 = okHttpClient22.failedRoutes;
        boolean boolean24 = okHttpClient22.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient25 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler26 = okHttpClient25.getCookieHandler();
        boolean boolean27 = okHttpClient25.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient25.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier29 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient30 = okHttpClient28.setHostnameVerifier(hostnameVerifier29);
        java.net.ResponseCache responseCache31 = okHttpClient30.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator32 = okHttpClient30.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier33 = okHttpClient30.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory34 = okHttpClient30.getSslSocketFactory();
        java.lang.String[] strArray35 = sSLSocketFactory34.getSupportedCipherSuites();
        java.lang.String[] strArray36 = sSLSocketFactory34.getDefaultCipherSuites();
        java.lang.String[] strArray37 = sSLSocketFactory34.getDefaultCipherSuites();
        java.lang.String[] strArray38 = sSLSocketFactory34.getDefaultCipherSuites();
        java.lang.String[] strArray39 = sSLSocketFactory34.getSupportedCipherSuites();
        okHttpClient22.sslSocketFactory = sSLSocketFactory34;
        java.lang.String[] strArray41 = sSLSocketFactory34.getDefaultCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient6.setSSLSocketFactory(sSLSocketFactory34);
        com.squareup.okhttp.OkHttpClient okHttpClient43 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler44 = okHttpClient43.getCookieHandler();
        boolean boolean45 = okHttpClient43.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator46 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient47 = okHttpClient43.setAuthenticator(okAuthenticator46);
        com.squareup.okhttp.OkHttpClient okHttpClient48 = okHttpClient43.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier49 = okHttpClient43.hostnameVerifier;
        java.net.ProxySelector proxySelector50 = java.net.ProxySelector.getDefault();
        okHttpClient43.proxySelector = proxySelector50;
        okHttpClient43.followProtocolRedirects = true;
        com.squareup.okhttp.OkHttpClient okHttpClient54 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler55 = okHttpClient54.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray56 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet57 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet57, routeArray56);
        okHttpClient54.failedRoutes = routeSet57;
        java.net.Proxy proxy60 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient61 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler62 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient63 = okHttpClient61.setCookieHandler(cookieHandler62);
        com.squareup.okhttp.OkHttpClient okHttpClient65 = okHttpClient61.setFollowProtocolRedirects(true);
        boolean boolean66 = proxy60.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient67 = okHttpClient54.setProxy(proxy60);
        java.lang.String str68 = proxy60.toString();
        com.squareup.okhttp.OkHttpClient okHttpClient69 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler70 = okHttpClient69.getCookieHandler();
        boolean boolean71 = okHttpClient69.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator72 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient73 = okHttpClient69.setAuthenticator(okAuthenticator72);
        java.net.ResponseCache responseCache74 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient75 = okHttpClient69.setResponseCache(responseCache74);
        com.squareup.okhttp.ConnectionPool connectionPool78 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool78.evictAll();
        okHttpClient69.connectionPool = connectionPool78;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory81 = okHttpClient69.sslSocketFactory;
        com.squareup.okhttp.ConnectionPool connectionPool82 = okHttpClient69.getConnectionPool();
        boolean boolean83 = proxy60.equals((java.lang.Object) okHttpClient69);
        com.squareup.okhttp.OkHttpClient okHttpClient84 = okHttpClient43.setProxy(proxy60);
        java.lang.String str85 = proxy60.toString();
        java.net.Proxy.Type type86 = proxy60.type();
        okHttpClient42.proxy = proxy60;
        java.net.SocketAddress socketAddress88 = proxy60.address();
        com.squareup.okhttp.OkHttpClient okHttpClient89 = okHttpClient0.setProxy(proxy60);
        org.junit.Assert.assertNull(hostnameVerifier1);
        org.junit.Assert.assertNull(responseCache2);
        org.junit.Assert.assertNull(sSLSocketFactory3);
        org.junit.Assert.assertNull(proxy4);
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxySelector9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNull(sSLSocketFactory17);
        org.junit.Assert.assertNull(okResponseCache18);
        org.junit.Assert.assertNull(cookieHandler20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNotNull(routeSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(cookieHandler26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNotNull(okHttpClient30);
        org.junit.Assert.assertNull(responseCache31);
        org.junit.Assert.assertNotNull(okAuthenticator32);
        org.junit.Assert.assertNull(hostnameVerifier33);
        org.junit.Assert.assertNotNull(sSLSocketFactory34);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(okHttpClient42);
        org.junit.Assert.assertNull(cookieHandler44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(okHttpClient47);
        org.junit.Assert.assertNotNull(okHttpClient48);
        org.junit.Assert.assertNull(hostnameVerifier49);
// flaky:         org.junit.Assert.assertNull(proxySelector50);
        org.junit.Assert.assertNull(cookieHandler55);
        org.junit.Assert.assertNotNull(routeArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(proxy60);
        org.junit.Assert.assertNotNull(okHttpClient63);
        org.junit.Assert.assertNotNull(okHttpClient65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(okHttpClient67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "DIRECT" + "'", str68, "DIRECT");
        org.junit.Assert.assertNull(cookieHandler70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(okHttpClient73);
        org.junit.Assert.assertNotNull(okHttpClient75);
        org.junit.Assert.assertNull(sSLSocketFactory81);
        org.junit.Assert.assertNotNull(connectionPool82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(okHttpClient84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "DIRECT" + "'", str85, "DIRECT");
        org.junit.Assert.assertTrue("'" + type86 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type86.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress88);
        org.junit.Assert.assertNotNull(okHttpClient89);
    }

    @Test
    public void test03290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03290");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet4 = okHttpClient3.failedRoutes;
        boolean boolean5 = okHttpClient3.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler7 = okHttpClient6.getCookieHandler();
        boolean boolean8 = okHttpClient6.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient6.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient9.setHostnameVerifier(hostnameVerifier10);
        java.net.ResponseCache responseCache12 = okHttpClient11.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator13 = okHttpClient11.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = okHttpClient11.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory15 = okHttpClient11.getSslSocketFactory();
        java.lang.String[] strArray16 = sSLSocketFactory15.getSupportedCipherSuites();
        java.lang.String[] strArray17 = sSLSocketFactory15.getDefaultCipherSuites();
        java.lang.String[] strArray18 = sSLSocketFactory15.getDefaultCipherSuites();
        java.lang.String[] strArray19 = sSLSocketFactory15.getDefaultCipherSuites();
        java.lang.String[] strArray20 = sSLSocketFactory15.getSupportedCipherSuites();
        okHttpClient3.sslSocketFactory = sSLSocketFactory15;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient3.copyWithDefaults();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache23 = okHttpClient22.okResponseCache();
        java.net.ResponseCache responseCache24 = okHttpClient22.getResponseCache();
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertNotNull(routeSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(cookieHandler7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(responseCache12);
        org.junit.Assert.assertNotNull(okAuthenticator13);
        org.junit.Assert.assertNull(hostnameVerifier14);
        org.junit.Assert.assertNotNull(sSLSocketFactory15);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNull(okResponseCache23);
        org.junit.Assert.assertNull(responseCache24);
    }

    @Test
    public void test03291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03291");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = okHttpClient0.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient2 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler3 = okHttpClient2.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray4 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet5 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet5, routeArray4);
        okHttpClient2.failedRoutes = routeSet5;
        java.net.Proxy proxy8 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient9.setCookieHandler(cookieHandler10);
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient9.setFollowProtocolRedirects(true);
        boolean boolean14 = proxy8.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient2.setProxy(proxy8);
        com.squareup.okhttp.OkHttpClient okHttpClient16 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler17 = okHttpClient16.getCookieHandler();
        boolean boolean18 = okHttpClient16.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler20 = okHttpClient19.getCookieHandler();
        boolean boolean21 = okHttpClient19.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient19.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet23 = okHttpClient22.failedRoutes;
        boolean boolean24 = okHttpClient22.getFollowProtocolRedirects();
        java.net.Proxy proxy25 = java.net.Proxy.NO_PROXY;
        okHttpClient22.proxy = proxy25;
        okHttpClient16.proxy = proxy25;
        okHttpClient2.proxy = proxy25;
        java.net.Proxy.Type type29 = proxy25.type();
        okHttpClient0.proxy = proxy25;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory31 = okHttpClient0.getSslSocketFactory();
        java.net.URL uRL32 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.HttpURLConnection httpURLConnection33 = okHttpClient0.open(uRL32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(sSLSocketFactory1);
        org.junit.Assert.assertNull(cookieHandler3);
        org.junit.Assert.assertNotNull(routeArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(proxy8);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNull(cookieHandler17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(cookieHandler20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNotNull(routeSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(proxy25);
        org.junit.Assert.assertTrue("'" + type29 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type29.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(sSLSocketFactory31);
    }

    @Test
    public void test03292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03292");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        java.net.ResponseCache responseCache5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient0.setResponseCache(responseCache5);
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool9.evictAll();
        okHttpClient0.connectionPool = connectionPool9;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory12 = okHttpClient0.sslSocketFactory;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory13 = null;
        okHttpClient0.sslSocketFactory = sSLSocketFactory13;
        java.net.CookieHandler cookieHandler15 = okHttpClient0.cookieHandler;
        java.net.CookieHandler cookieHandler16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient0.setCookieHandler(cookieHandler16);
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector19 = null;
        okHttpClient18.proxySelector = proxySelector19;
        java.net.ProxySelector proxySelector21 = okHttpClient18.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier22 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient18.setHostnameVerifier(hostnameVerifier22);
        boolean boolean24 = okHttpClient18.getFollowProtocolRedirects();
        com.squareup.okhttp.ConnectionPool connectionPool27 = new com.squareup.okhttp.ConnectionPool((int) 'a', (long) (byte) -1);
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient18.setConnectionPool(connectionPool27);
        com.squareup.okhttp.OkHttpClient okHttpClient29 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler30 = okHttpClient29.getCookieHandler();
        boolean boolean31 = okHttpClient29.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient29.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier33 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient32.setHostnameVerifier(hostnameVerifier33);
        java.net.ResponseCache responseCache35 = okHttpClient34.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator36 = okHttpClient34.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier37 = okHttpClient34.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory38 = okHttpClient34.getSslSocketFactory();
        okHttpClient18.sslSocketFactory = sSLSocketFactory38;
        java.lang.String[] strArray40 = sSLSocketFactory38.getSupportedCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient41 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory38);
        java.net.Socket socket42 = sSLSocketFactory38.createSocket();
        java.lang.String[] strArray43 = sSLSocketFactory38.getDefaultCipherSuites();
        java.net.InetAddress inetAddress46 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket48 = sSLSocketFactory38.createSocket("hi!", (int) (short) 10, inetAddress46, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: port out of range:-1");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient6);
        org.junit.Assert.assertNull(sSLSocketFactory12);
        org.junit.Assert.assertNull(cookieHandler15);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNull(proxySelector21);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNull(cookieHandler30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertNull(responseCache35);
        org.junit.Assert.assertNotNull(okAuthenticator36);
        org.junit.Assert.assertNull(hostnameVerifier37);
        org.junit.Assert.assertNotNull(sSLSocketFactory38);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(okHttpClient41);
        org.junit.Assert.assertNotNull(socket42);
        org.junit.Assert.assertEquals(socket42.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(strArray43);
    }

    @Test
    public void test03293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03293");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient0.connectionPool;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler5 = okHttpClient4.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray6 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet7 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet7, routeArray6);
        okHttpClient4.failedRoutes = routeSet7;
        java.net.Proxy proxy10 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setCookieHandler(cookieHandler12);
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient11.setFollowProtocolRedirects(true);
        boolean boolean16 = proxy10.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient4.setProxy(proxy10);
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler19 = okHttpClient18.getCookieHandler();
        boolean boolean20 = okHttpClient18.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient18.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool24 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int25 = connectionPool24.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient21.setConnectionPool(connectionPool24);
        com.squareup.okhttp.OkHttpClient okHttpClient27 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector28 = null;
        okHttpClient27.proxySelector = proxySelector28;
        java.net.ProxySelector proxySelector30 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient27.setProxySelector(proxySelector30);
        java.net.ProxySelector proxySelector32 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient27.setProxySelector(proxySelector32);
        okHttpClient26.proxySelector = proxySelector32;
        okHttpClient4.proxySelector = proxySelector32;
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient0.setProxySelector(proxySelector32);
        java.net.CookieHandler cookieHandler37 = null;
        okHttpClient36.cookieHandler = cookieHandler37;
        java.net.Proxy proxy39 = okHttpClient36.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier40 = okHttpClient36.getHostnameVerifier();
        java.net.CookieHandler cookieHandler41 = okHttpClient36.getCookieHandler();
        org.junit.Assert.assertNull(connectionPool3);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertNotNull(routeArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(proxy10);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNull(cookieHandler19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNotNull(okHttpClient31);
// flaky:         org.junit.Assert.assertNull(proxySelector32);
        org.junit.Assert.assertNotNull(okHttpClient33);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNull(proxy39);
        org.junit.Assert.assertNull(hostnameVerifier40);
        org.junit.Assert.assertNull(cookieHandler41);
    }

    @Test
    public void test03294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03294");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.ResponseCache responseCache5 = null;
        okHttpClient0.responseCache = responseCache5;
        java.net.ResponseCache responseCache7 = okHttpClient0.responseCache;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler9 = okHttpClient8.getCookieHandler();
        boolean boolean10 = okHttpClient8.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient8.setAuthenticator(okAuthenticator11);
        java.net.ResponseCache responseCache13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient8.setResponseCache(responseCache13);
        com.squareup.okhttp.ConnectionPool connectionPool17 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool17.evictAll();
        okHttpClient8.connectionPool = connectionPool17;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory20 = okHttpClient8.sslSocketFactory;
        java.net.ResponseCache responseCache21 = null;
        okHttpClient8.responseCache = responseCache21;
        com.squareup.okhttp.OkAuthenticator okAuthenticator23 = okHttpClient8.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient8.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient25 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector26 = null;
        okHttpClient25.proxySelector = proxySelector26;
        java.net.ProxySelector proxySelector28 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient25.setProxySelector(proxySelector28);
        java.net.ProxySelector proxySelector30 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient25.setProxySelector(proxySelector30);
        java.net.ProxySelector.setDefault(proxySelector30);
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient24.setProxySelector(proxySelector30);
        com.squareup.okhttp.OkHttpClient okHttpClient34 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler35 = okHttpClient34.getCookieHandler();
        boolean boolean36 = okHttpClient34.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient34.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool40 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int41 = connectionPool40.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient37.setConnectionPool(connectionPool40);
        javax.net.ssl.HostnameVerifier hostnameVerifier43 = null;
        okHttpClient37.hostnameVerifier = hostnameVerifier43;
        com.squareup.okhttp.ConnectionPool connectionPool45 = okHttpClient37.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator46 = okHttpClient37.authenticator;
        okHttpClient24.authenticator = okAuthenticator46;
        okHttpClient0.authenticator = okAuthenticator46;
        java.net.CookieHandler cookieHandler49 = okHttpClient0.cookieHandler;
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(responseCache7);
        org.junit.Assert.assertNull(cookieHandler9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertNotNull(okHttpClient14);
        org.junit.Assert.assertNull(sSLSocketFactory20);
        org.junit.Assert.assertNull(okAuthenticator23);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNotNull(okHttpClient29);
// flaky:         org.junit.Assert.assertNull(proxySelector30);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNotNull(okHttpClient33);
        org.junit.Assert.assertNull(cookieHandler35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(okHttpClient37);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(okHttpClient42);
        org.junit.Assert.assertNotNull(connectionPool45);
        org.junit.Assert.assertNotNull(okAuthenticator46);
        org.junit.Assert.assertNull(cookieHandler49);
    }

    @Test
    public void test03295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03295");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler4 = okHttpClient3.getCookieHandler();
        boolean boolean5 = okHttpClient3.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient3.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int10 = connectionPool9.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient6.setConnectionPool(connectionPool9);
        com.squareup.okhttp.OkHttpClient okHttpClient12 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector13 = null;
        okHttpClient12.proxySelector = proxySelector13;
        java.net.ProxySelector proxySelector15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient12.setProxySelector(proxySelector15);
        java.net.ProxySelector proxySelector17 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient12.setProxySelector(proxySelector17);
        okHttpClient11.proxySelector = proxySelector17;
        java.net.CookieHandler cookieHandler20 = okHttpClient11.cookieHandler;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler22 = okHttpClient21.getCookieHandler();
        boolean boolean23 = okHttpClient21.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient21.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool27 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int28 = connectionPool27.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient24.setConnectionPool(connectionPool27);
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = null;
        okHttpClient24.hostnameVerifier = hostnameVerifier30;
        com.squareup.okhttp.ConnectionPool connectionPool32 = okHttpClient24.getConnectionPool();
        java.net.ResponseCache responseCache33 = null;
        okHttpClient24.responseCache = responseCache33;
        com.squareup.okhttp.OkHttpClient okHttpClient35 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler36 = okHttpClient35.getCookieHandler();
        boolean boolean37 = okHttpClient35.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient35.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet39 = okHttpClient38.failedRoutes;
        boolean boolean40 = okHttpClient38.getFollowProtocolRedirects();
        java.net.Proxy proxy41 = java.net.Proxy.NO_PROXY;
        okHttpClient38.proxy = proxy41;
        java.lang.String str43 = proxy41.toString();
        java.lang.String str44 = proxy41.toString();
        okHttpClient24.proxy = proxy41;
        com.squareup.okhttp.OkHttpClient okHttpClient46 = okHttpClient11.setProxy(proxy41);
        java.lang.String str47 = proxy41.toString();
        com.squareup.okhttp.OkHttpClient okHttpClient48 = okHttpClient0.setProxy(proxy41);
        java.net.CookieHandler cookieHandler49 = okHttpClient48.cookieHandler;
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(cookieHandler4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(okHttpClient6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(okHttpClient16);
// flaky:         org.junit.Assert.assertNull(proxySelector17);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNull(cookieHandler20);
        org.junit.Assert.assertNull(cookieHandler22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(okHttpClient29);
        org.junit.Assert.assertNotNull(connectionPool32);
        org.junit.Assert.assertNull(cookieHandler36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNotNull(routeSet39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(proxy41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "DIRECT" + "'", str43, "DIRECT");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "DIRECT" + "'", str44, "DIRECT");
        org.junit.Assert.assertNotNull(okHttpClient46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "DIRECT" + "'", str47, "DIRECT");
        org.junit.Assert.assertNotNull(okHttpClient48);
        org.junit.Assert.assertNull(cookieHandler49);
    }

    @Test
    public void test03296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03296");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient0.connectionPool;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler5 = okHttpClient4.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray6 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet7 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet7, routeArray6);
        okHttpClient4.failedRoutes = routeSet7;
        java.net.Proxy proxy10 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setCookieHandler(cookieHandler12);
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient11.setFollowProtocolRedirects(true);
        boolean boolean16 = proxy10.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient4.setProxy(proxy10);
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler19 = okHttpClient18.getCookieHandler();
        boolean boolean20 = okHttpClient18.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient18.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool24 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int25 = connectionPool24.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient21.setConnectionPool(connectionPool24);
        com.squareup.okhttp.OkHttpClient okHttpClient27 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector28 = null;
        okHttpClient27.proxySelector = proxySelector28;
        java.net.ProxySelector proxySelector30 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient27.setProxySelector(proxySelector30);
        java.net.ProxySelector proxySelector32 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient27.setProxySelector(proxySelector32);
        okHttpClient26.proxySelector = proxySelector32;
        okHttpClient4.proxySelector = proxySelector32;
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient0.setProxySelector(proxySelector32);
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient36.setFollowProtocolRedirects(true);
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient36.copyWithDefaults();
        boolean boolean40 = okHttpClient36.getFollowProtocolRedirects();
        java.util.Set<com.squareup.okhttp.Route> routeSet41 = okHttpClient36.failedRoutes;
        javax.net.ssl.HostnameVerifier hostnameVerifier42 = okHttpClient36.getHostnameVerifier();
        org.junit.Assert.assertNull(connectionPool3);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertNotNull(routeArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(proxy10);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNull(cookieHandler19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNotNull(okHttpClient31);
// flaky:         org.junit.Assert.assertNull(proxySelector32);
        org.junit.Assert.assertNotNull(okHttpClient33);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNotNull(okHttpClient39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(routeSet41);
        org.junit.Assert.assertNull(hostnameVerifier42);
    }

    @Test
    public void test03297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03297");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        com.squareup.okhttp.OkAuthenticator okAuthenticator5 = okHttpClient0.authenticator;
        java.net.ResponseCache responseCache6 = okHttpClient0.getResponseCache();
        java.net.CookieHandler cookieHandler7 = okHttpClient0.cookieHandler;
        java.net.ResponseCache responseCache8 = okHttpClient0.responseCache;
        com.squareup.okhttp.OkAuthenticator okAuthenticator9 = null;
        okHttpClient0.authenticator = okAuthenticator9;
        com.squareup.okhttp.OkAuthenticator okAuthenticator11 = okHttpClient0.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = okHttpClient0.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector14 = null;
        okHttpClient13.proxySelector = proxySelector14;
        java.net.ProxySelector proxySelector16 = okHttpClient13.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier17 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient13.setHostnameVerifier(hostnameVerifier17);
        java.net.ProxySelector proxySelector19 = okHttpClient13.proxySelector;
        java.net.ResponseCache responseCache20 = okHttpClient13.getResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient21 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler22 = okHttpClient21.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray23 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet24 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet24, routeArray23);
        okHttpClient21.failedRoutes = routeSet24;
        java.net.Proxy proxy27 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler29 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient30 = okHttpClient28.setCookieHandler(cookieHandler29);
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient28.setFollowProtocolRedirects(true);
        boolean boolean33 = proxy27.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient21.setProxy(proxy27);
        okHttpClient13.proxy = proxy27;
        com.squareup.okhttp.OkHttpClient okHttpClient36 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler37 = okHttpClient36.getCookieHandler();
        boolean boolean38 = okHttpClient36.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient36.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier40 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient41 = okHttpClient39.setHostnameVerifier(hostnameVerifier40);
        boolean boolean42 = proxy27.equals((java.lang.Object) okHttpClient39);
        com.squareup.okhttp.OkHttpClient okHttpClient43 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector44 = null;
        okHttpClient43.proxySelector = proxySelector44;
        java.net.ProxySelector proxySelector46 = okHttpClient43.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier47 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient48 = okHttpClient43.setHostnameVerifier(hostnameVerifier47);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory49 = okHttpClient48.sslSocketFactory;
        com.squareup.okhttp.OkHttpClient okHttpClient50 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler51 = okHttpClient50.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray52 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet53 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet53, routeArray52);
        okHttpClient50.failedRoutes = routeSet53;
        okHttpClient48.failedRoutes = routeSet53;
        com.squareup.okhttp.OkHttpClient okHttpClient57 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier58 = okHttpClient57.hostnameVerifier;
        java.net.ResponseCache responseCache59 = okHttpClient57.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator60 = okHttpClient57.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient61 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler62 = okHttpClient61.getCookieHandler();
        boolean boolean63 = okHttpClient61.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient64 = okHttpClient61.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier65 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient66 = okHttpClient64.setHostnameVerifier(hostnameVerifier65);
        java.net.ResponseCache responseCache67 = okHttpClient66.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator68 = okHttpClient66.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient69 = okHttpClient57.setAuthenticator(okAuthenticator68);
        com.squareup.okhttp.OkHttpClient okHttpClient70 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler71 = okHttpClient70.getCookieHandler();
        boolean boolean72 = okHttpClient70.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator73 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient74 = okHttpClient70.setAuthenticator(okAuthenticator73);
        java.net.ResponseCache responseCache75 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient76 = okHttpClient70.setResponseCache(responseCache75);
        com.squareup.okhttp.ConnectionPool connectionPool79 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool79.evictAll();
        okHttpClient70.connectionPool = connectionPool79;
        connectionPool79.evictAll();
        int int83 = connectionPool79.getSpdyConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient84 = okHttpClient57.setConnectionPool(connectionPool79);
        okHttpClient48.connectionPool = connectionPool79;
        boolean boolean86 = proxy27.equals((java.lang.Object) okHttpClient48);
        java.net.Proxy.Type type87 = proxy27.type();
        okHttpClient0.proxy = proxy27;
        java.net.ProxySelector proxySelector89 = okHttpClient0.proxySelector;
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(okAuthenticator5);
        org.junit.Assert.assertNull(responseCache6);
        org.junit.Assert.assertNull(cookieHandler7);
        org.junit.Assert.assertNull(responseCache8);
        org.junit.Assert.assertNull(okAuthenticator11);
        org.junit.Assert.assertNull(hostnameVerifier12);
        org.junit.Assert.assertNull(proxySelector16);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNull(proxySelector19);
        org.junit.Assert.assertNull(responseCache20);
        org.junit.Assert.assertNull(cookieHandler22);
        org.junit.Assert.assertNotNull(routeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(proxy27);
        org.junit.Assert.assertNotNull(okHttpClient30);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertNull(cookieHandler37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(okHttpClient39);
        org.junit.Assert.assertNotNull(okHttpClient41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(proxySelector46);
        org.junit.Assert.assertNotNull(okHttpClient48);
        org.junit.Assert.assertNull(sSLSocketFactory49);
        org.junit.Assert.assertNull(cookieHandler51);
        org.junit.Assert.assertNotNull(routeArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(hostnameVerifier58);
        org.junit.Assert.assertNull(responseCache59);
        org.junit.Assert.assertNull(okAuthenticator60);
        org.junit.Assert.assertNull(cookieHandler62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(okHttpClient64);
        org.junit.Assert.assertNotNull(okHttpClient66);
        org.junit.Assert.assertNull(responseCache67);
        org.junit.Assert.assertNotNull(okAuthenticator68);
        org.junit.Assert.assertNotNull(okHttpClient69);
        org.junit.Assert.assertNull(cookieHandler71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(okHttpClient74);
        org.junit.Assert.assertNotNull(okHttpClient76);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertNotNull(okHttpClient84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + type87 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type87.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(proxySelector89);
    }

    @Test
    public void test03298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03298");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        java.net.ResponseCache responseCache5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient0.setResponseCache(responseCache5);
        com.squareup.okhttp.ConnectionPool connectionPool7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient6.setConnectionPool(connectionPool7);
        com.squareup.okhttp.OkHttpClient okHttpClient9 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler10 = okHttpClient9.getCookieHandler();
        boolean boolean11 = okHttpClient9.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient9.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector14 = null;
        okHttpClient13.proxySelector = proxySelector14;
        java.net.ProxySelector proxySelector16 = okHttpClient13.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier17 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient13.setHostnameVerifier(hostnameVerifier17);
        java.net.ProxySelector proxySelector19 = okHttpClient13.proxySelector;
        java.net.ResponseCache responseCache20 = okHttpClient13.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet21 = okHttpClient13.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler23 = okHttpClient22.getCookieHandler();
        boolean boolean24 = okHttpClient22.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient22.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool28 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int29 = connectionPool28.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient30 = okHttpClient25.setConnectionPool(connectionPool28);
        com.squareup.okhttp.OkHttpClient okHttpClient31 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector32 = null;
        okHttpClient31.proxySelector = proxySelector32;
        java.net.ProxySelector proxySelector34 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient31.setProxySelector(proxySelector34);
        java.net.ProxySelector proxySelector36 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient31.setProxySelector(proxySelector36);
        okHttpClient30.proxySelector = proxySelector36;
        javax.net.ssl.HostnameVerifier hostnameVerifier39 = okHttpClient30.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient40 = okHttpClient13.setHostnameVerifier(hostnameVerifier39);
        javax.net.ssl.HostnameVerifier hostnameVerifier41 = okHttpClient40.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient9.setHostnameVerifier(hostnameVerifier41);
        java.net.Proxy proxy43 = okHttpClient42.proxy;
        java.util.Set<com.squareup.okhttp.Route> routeSet44 = okHttpClient42.failedRoutes;
        okHttpClient8.failedRoutes = routeSet44;
        java.net.ProxySelector proxySelector46 = okHttpClient8.proxySelector;
        java.net.ResponseCache responseCache47 = okHttpClient8.getResponseCache();
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient6);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertNull(cookieHandler10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertNull(proxySelector16);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNull(proxySelector19);
        org.junit.Assert.assertNull(responseCache20);
        org.junit.Assert.assertNotNull(routeSet21);
        org.junit.Assert.assertNull(cookieHandler23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(okHttpClient25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(okHttpClient30);
        org.junit.Assert.assertNotNull(okHttpClient35);
// flaky:         org.junit.Assert.assertNull(proxySelector36);
        org.junit.Assert.assertNotNull(okHttpClient37);
        org.junit.Assert.assertNotNull(hostnameVerifier39);
        org.junit.Assert.assertNotNull(okHttpClient40);
        org.junit.Assert.assertNotNull(hostnameVerifier41);
        org.junit.Assert.assertNotNull(okHttpClient42);
        org.junit.Assert.assertNull(proxy43);
        org.junit.Assert.assertNotNull(routeSet44);
        org.junit.Assert.assertNull(proxySelector46);
        org.junit.Assert.assertNull(responseCache47);
    }

    @Test
    public void test03299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03299");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setHostnameVerifier(hostnameVerifier4);
        java.net.ResponseCache responseCache6 = okHttpClient5.responseCache;
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool((int) '4', 100L);
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient5.setConnectionPool(connectionPool9);
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler12 = okHttpClient11.getCookieHandler();
        boolean boolean13 = okHttpClient11.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient11.setAuthenticator(okAuthenticator14);
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient11.copyWithDefaults();
        java.net.CookieHandler cookieHandler17 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient11.setCookieHandler(cookieHandler17);
        com.squareup.okhttp.OkAuthenticator okAuthenticator19 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient18.setAuthenticator(okAuthenticator19);
        com.squareup.okhttp.OkHttpClient okHttpClient21 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler22 = okHttpClient21.getCookieHandler();
        boolean boolean23 = okHttpClient21.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient21.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool27 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int28 = connectionPool27.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient24.setConnectionPool(connectionPool27);
        com.squareup.okhttp.ConnectionPool connectionPool30 = okHttpClient24.connectionPool;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient18.setConnectionPool(connectionPool30);
        com.squareup.okhttp.Address address32 = null;
        com.squareup.okhttp.Connection connection33 = connectionPool30.get(address32);
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient10.setConnectionPool(connectionPool30);
        java.net.ResponseCache responseCache35 = okHttpClient34.responseCache;
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient34.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet37 = okHttpClient34.failedRoutes;
        java.net.URL uRL38 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.HttpURLConnection httpURLConnection39 = okHttpClient34.open(uRL38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(responseCache6);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertNull(cookieHandler12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNull(cookieHandler22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(okHttpClient29);
        org.junit.Assert.assertNotNull(connectionPool30);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNull(connection33);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertNull(responseCache35);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNotNull(routeSet37);
    }

    @Test
    public void test03300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03300");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.copyWithDefaults();
        java.net.CookieHandler cookieHandler6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient0.setCookieHandler(cookieHandler6);
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache8 = okHttpClient0.okResponseCache();
        java.net.ResponseCache responseCache9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient0.setResponseCache(responseCache9);
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector12 = null;
        okHttpClient11.proxySelector = proxySelector12;
        java.net.ProxySelector proxySelector14 = okHttpClient11.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient11.setHostnameVerifier(hostnameVerifier15);
        java.net.ResponseCache responseCache17 = okHttpClient16.responseCache;
        com.squareup.okhttp.ConnectionPool connectionPool20 = new com.squareup.okhttp.ConnectionPool((int) '4', 100L);
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient16.setConnectionPool(connectionPool20);
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler23 = okHttpClient22.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray24 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet25 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet25, routeArray24);
        okHttpClient22.failedRoutes = routeSet25;
        java.net.Proxy proxy28 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient29 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler30 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient29.setCookieHandler(cookieHandler30);
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient29.setFollowProtocolRedirects(true);
        boolean boolean34 = proxy28.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient22.setProxy(proxy28);
        java.net.Proxy.Type type36 = proxy28.type();
        com.squareup.okhttp.OkHttpClient okHttpClient37 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler38 = okHttpClient37.getCookieHandler();
        java.net.ResponseCache responseCache39 = null;
        okHttpClient37.responseCache = responseCache39;
        boolean boolean41 = okHttpClient37.followProtocolRedirects;
        java.net.CookieHandler cookieHandler42 = okHttpClient37.cookieHandler;
        com.squareup.okhttp.ConnectionPool connectionPool43 = okHttpClient37.getConnectionPool();
        com.squareup.okhttp.OkHttpClient okHttpClient44 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector45 = null;
        okHttpClient44.proxySelector = proxySelector45;
        java.net.ProxySelector proxySelector47 = okHttpClient44.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier48 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient49 = okHttpClient44.setHostnameVerifier(hostnameVerifier48);
        java.net.ProxySelector proxySelector50 = okHttpClient44.proxySelector;
        java.net.ResponseCache responseCache51 = okHttpClient44.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet52 = okHttpClient44.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient53 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler54 = okHttpClient53.getCookieHandler();
        boolean boolean55 = okHttpClient53.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient56 = okHttpClient53.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool59 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int60 = connectionPool59.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient61 = okHttpClient56.setConnectionPool(connectionPool59);
        com.squareup.okhttp.OkHttpClient okHttpClient62 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector63 = null;
        okHttpClient62.proxySelector = proxySelector63;
        java.net.ProxySelector proxySelector65 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient66 = okHttpClient62.setProxySelector(proxySelector65);
        java.net.ProxySelector proxySelector67 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient68 = okHttpClient62.setProxySelector(proxySelector67);
        okHttpClient61.proxySelector = proxySelector67;
        javax.net.ssl.HostnameVerifier hostnameVerifier70 = okHttpClient61.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient71 = okHttpClient44.setHostnameVerifier(hostnameVerifier70);
        okHttpClient37.hostnameVerifier = hostnameVerifier70;
        boolean boolean73 = proxy28.equals((java.lang.Object) hostnameVerifier70);
        com.squareup.okhttp.OkHttpClient okHttpClient74 = okHttpClient21.setHostnameVerifier(hostnameVerifier70);
        com.squareup.okhttp.OkHttpClient okHttpClient75 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler76 = okHttpClient75.getCookieHandler();
        boolean boolean77 = okHttpClient75.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient78 = okHttpClient75.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier79 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient80 = okHttpClient78.setHostnameVerifier(hostnameVerifier79);
        java.net.ResponseCache responseCache81 = okHttpClient80.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator82 = okHttpClient80.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier83 = okHttpClient80.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory84 = okHttpClient80.getSslSocketFactory();
        java.lang.String[] strArray85 = sSLSocketFactory84.getSupportedCipherSuites();
        java.lang.String[] strArray86 = sSLSocketFactory84.getDefaultCipherSuites();
        java.lang.String[] strArray87 = sSLSocketFactory84.getDefaultCipherSuites();
        java.net.Socket socket88 = sSLSocketFactory84.createSocket();
        okHttpClient21.sslSocketFactory = sSLSocketFactory84;
        com.squareup.okhttp.OkHttpClient okHttpClient90 = okHttpClient10.setSSLSocketFactory(sSLSocketFactory84);
        java.net.InetAddress inetAddress91 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket93 = sSLSocketFactory84.createSocket(inetAddress91, 100);
            org.junit.Assert.fail("Expected exception of type java.net.ConnectException; message: Connection refused (Connection refused)");
        } catch (java.net.ConnectException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNotNull(okHttpClient7);
        org.junit.Assert.assertNull(okResponseCache8);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertNull(proxySelector14);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNull(responseCache17);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNull(cookieHandler23);
        org.junit.Assert.assertNotNull(routeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(proxy28);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNotNull(okHttpClient33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertTrue("'" + type36 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type36.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(cookieHandler38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(cookieHandler42);
        org.junit.Assert.assertNull(connectionPool43);
        org.junit.Assert.assertNull(proxySelector47);
        org.junit.Assert.assertNotNull(okHttpClient49);
        org.junit.Assert.assertNull(proxySelector50);
        org.junit.Assert.assertNull(responseCache51);
        org.junit.Assert.assertNotNull(routeSet52);
        org.junit.Assert.assertNull(cookieHandler54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(okHttpClient56);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNotNull(okHttpClient61);
        org.junit.Assert.assertNotNull(okHttpClient66);
// flaky:         org.junit.Assert.assertNull(proxySelector67);
        org.junit.Assert.assertNotNull(okHttpClient68);
        org.junit.Assert.assertNotNull(hostnameVerifier70);
        org.junit.Assert.assertNotNull(okHttpClient71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(okHttpClient74);
        org.junit.Assert.assertNull(cookieHandler76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(okHttpClient78);
        org.junit.Assert.assertNotNull(okHttpClient80);
        org.junit.Assert.assertNull(responseCache81);
        org.junit.Assert.assertNotNull(okAuthenticator82);
        org.junit.Assert.assertNull(hostnameVerifier83);
        org.junit.Assert.assertNotNull(sSLSocketFactory84);
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertNotNull(socket88);
        org.junit.Assert.assertEquals(socket88.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(okHttpClient90);
    }

    @Test
    public void test03301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03301");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector5 = null;
        okHttpClient4.proxySelector = proxySelector5;
        java.net.ProxySelector proxySelector7 = okHttpClient4.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient4.setHostnameVerifier(hostnameVerifier8);
        java.net.ProxySelector proxySelector10 = okHttpClient4.proxySelector;
        java.net.ResponseCache responseCache11 = okHttpClient4.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet12 = okHttpClient4.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler14 = okHttpClient13.getCookieHandler();
        boolean boolean15 = okHttpClient13.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient13.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool19 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int20 = connectionPool19.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient16.setConnectionPool(connectionPool19);
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector23 = null;
        okHttpClient22.proxySelector = proxySelector23;
        java.net.ProxySelector proxySelector25 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient22.setProxySelector(proxySelector25);
        java.net.ProxySelector proxySelector27 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient22.setProxySelector(proxySelector27);
        okHttpClient21.proxySelector = proxySelector27;
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = okHttpClient21.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient4.setHostnameVerifier(hostnameVerifier30);
        java.net.Proxy proxy32 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress33 = proxy32.address();
        com.squareup.okhttp.OkHttpClient okHttpClient34 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector35 = null;
        okHttpClient34.proxySelector = proxySelector35;
        com.squareup.okhttp.ConnectionPool connectionPool37 = okHttpClient34.connectionPool;
        com.squareup.okhttp.ConnectionPool connectionPool38 = okHttpClient34.getConnectionPool();
        boolean boolean39 = proxy32.equals((java.lang.Object) okHttpClient34);
        okHttpClient4.proxy = proxy32;
        com.squareup.okhttp.OkHttpClient okHttpClient41 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler42 = okHttpClient41.getCookieHandler();
        boolean boolean43 = okHttpClient41.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient44 = okHttpClient41.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier45 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient46 = okHttpClient44.setHostnameVerifier(hostnameVerifier45);
        java.net.ResponseCache responseCache47 = okHttpClient46.getResponseCache();
        java.net.ProxySelector proxySelector48 = okHttpClient46.getProxySelector();
        boolean boolean49 = proxy32.equals((java.lang.Object) proxySelector48);
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient0.setProxy(proxy32);
        java.net.Proxy proxy51 = okHttpClient50.getProxy();
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNull(proxySelector7);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNull(proxySelector10);
        org.junit.Assert.assertNull(responseCache11);
        org.junit.Assert.assertNotNull(routeSet12);
        org.junit.Assert.assertNull(cookieHandler14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNotNull(okHttpClient26);
// flaky:         org.junit.Assert.assertNull(proxySelector27);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNotNull(hostnameVerifier30);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNotNull(proxy32);
        org.junit.Assert.assertNull(socketAddress33);
        org.junit.Assert.assertNull(connectionPool37);
        org.junit.Assert.assertNull(connectionPool38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(cookieHandler42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(okHttpClient44);
        org.junit.Assert.assertNotNull(okHttpClient46);
        org.junit.Assert.assertNull(responseCache47);
// flaky:         org.junit.Assert.assertNull(proxySelector48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(okHttpClient50);
        org.junit.Assert.assertNotNull(proxy51);
    }

    @Test
    public void test03302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03302");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setHostnameVerifier(hostnameVerifier4);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory6 = okHttpClient5.sslSocketFactory;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler8 = okHttpClient7.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray9 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet10 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet10, routeArray9);
        okHttpClient7.failedRoutes = routeSet10;
        okHttpClient5.failedRoutes = routeSet10;
        com.squareup.okhttp.ConnectionPool connectionPool14 = okHttpClient5.getConnectionPool();
        boolean boolean15 = okHttpClient5.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient16 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector17 = null;
        okHttpClient16.proxySelector = proxySelector17;
        java.net.ProxySelector proxySelector19 = okHttpClient16.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier20 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient16.setHostnameVerifier(hostnameVerifier20);
        java.net.ProxySelector proxySelector22 = okHttpClient16.proxySelector;
        java.net.ResponseCache responseCache23 = okHttpClient16.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet24 = okHttpClient16.failedRoutes;
        java.net.Proxy proxy25 = okHttpClient16.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient26 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler27 = okHttpClient26.getCookieHandler();
        boolean boolean28 = okHttpClient26.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient26.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool32 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int33 = connectionPool32.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient29.setConnectionPool(connectionPool32);
        com.squareup.okhttp.OkHttpClient okHttpClient35 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler36 = okHttpClient35.getCookieHandler();
        boolean boolean37 = okHttpClient35.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient35.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool41 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int42 = connectionPool41.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient43 = okHttpClient38.setConnectionPool(connectionPool41);
        com.squareup.okhttp.OkHttpClient okHttpClient44 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector45 = null;
        okHttpClient44.proxySelector = proxySelector45;
        java.net.ProxySelector proxySelector47 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient48 = okHttpClient44.setProxySelector(proxySelector47);
        java.net.ProxySelector proxySelector49 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient44.setProxySelector(proxySelector49);
        okHttpClient43.proxySelector = proxySelector49;
        com.squareup.okhttp.OkHttpClient okHttpClient52 = okHttpClient29.setProxySelector(proxySelector49);
        java.net.CookieHandler cookieHandler53 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient54 = okHttpClient52.setCookieHandler(cookieHandler53);
        com.squareup.okhttp.OkHttpClient okHttpClient55 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler56 = okHttpClient55.getCookieHandler();
        boolean boolean57 = okHttpClient55.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator58 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient59 = okHttpClient55.setAuthenticator(okAuthenticator58);
        java.net.ResponseCache responseCache60 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient61 = okHttpClient55.setResponseCache(responseCache60);
        com.squareup.okhttp.ConnectionPool connectionPool64 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool64.evictAll();
        okHttpClient55.connectionPool = connectionPool64;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory67 = okHttpClient55.sslSocketFactory;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory68 = null;
        okHttpClient55.sslSocketFactory = sSLSocketFactory68;
        java.net.ProxySelector proxySelector70 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient71 = okHttpClient55.setProxySelector(proxySelector70);
        com.squareup.okhttp.OkHttpClient okHttpClient72 = okHttpClient54.setProxySelector(proxySelector70);
        com.squareup.okhttp.OkAuthenticator okAuthenticator73 = okHttpClient72.getAuthenticator();
        okHttpClient16.authenticator = okAuthenticator73;
        com.squareup.okhttp.OkHttpClient okHttpClient75 = okHttpClient5.setAuthenticator(okAuthenticator73);
        com.squareup.okhttp.ConnectionPool connectionPool78 = new com.squareup.okhttp.ConnectionPool((int) (short) 1, 10L);
        com.squareup.okhttp.OkHttpClient okHttpClient79 = okHttpClient75.setConnectionPool(connectionPool78);
        java.net.CookieHandler cookieHandler80 = null;
        okHttpClient75.cookieHandler = cookieHandler80;
        java.net.CookieHandler cookieHandler82 = okHttpClient75.cookieHandler;
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(sSLSocketFactory6);
        org.junit.Assert.assertNull(cookieHandler8);
        org.junit.Assert.assertNotNull(routeArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(connectionPool14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(proxySelector19);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNull(proxySelector22);
        org.junit.Assert.assertNull(responseCache23);
        org.junit.Assert.assertNotNull(routeSet24);
        org.junit.Assert.assertNull(proxy25);
        org.junit.Assert.assertNull(cookieHandler27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(okHttpClient29);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertNull(cookieHandler36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(okHttpClient43);
        org.junit.Assert.assertNotNull(okHttpClient48);
// flaky:         org.junit.Assert.assertNull(proxySelector49);
        org.junit.Assert.assertNotNull(okHttpClient50);
        org.junit.Assert.assertNotNull(okHttpClient52);
        org.junit.Assert.assertNotNull(okHttpClient54);
        org.junit.Assert.assertNull(cookieHandler56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(okHttpClient59);
        org.junit.Assert.assertNotNull(okHttpClient61);
        org.junit.Assert.assertNull(sSLSocketFactory67);
// flaky:         org.junit.Assert.assertNull(proxySelector70);
        org.junit.Assert.assertNotNull(okHttpClient71);
        org.junit.Assert.assertNotNull(okHttpClient72);
        org.junit.Assert.assertNotNull(okAuthenticator73);
        org.junit.Assert.assertNotNull(okHttpClient75);
        org.junit.Assert.assertNotNull(okHttpClient79);
        org.junit.Assert.assertNull(cookieHandler82);
    }

    @Test
    public void test03303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03303");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool6 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int7 = connectionPool6.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient3.setConnectionPool(connectionPool6);
        com.squareup.okhttp.OkHttpClient okHttpClient9 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector10 = null;
        okHttpClient9.proxySelector = proxySelector10;
        java.net.ProxySelector proxySelector12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient9.setProxySelector(proxySelector12);
        java.net.ProxySelector proxySelector14 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient9.setProxySelector(proxySelector14);
        okHttpClient8.proxySelector = proxySelector14;
        javax.net.ssl.HostnameVerifier hostnameVerifier17 = okHttpClient8.hostnameVerifier;
        okHttpClient8.followProtocolRedirects = false;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory20 = null;
        okHttpClient8.sslSocketFactory = sSLSocketFactory20;
        java.net.ResponseCache responseCache22 = null;
        okHttpClient8.responseCache = responseCache22;
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertNotNull(okHttpClient13);
// flaky:         org.junit.Assert.assertNull(proxySelector14);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNotNull(hostnameVerifier17);
    }

    @Test
    public void test03304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03304");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        java.net.ResponseCache responseCache5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient0.setResponseCache(responseCache5);
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool9.evictAll();
        okHttpClient0.connectionPool = connectionPool9;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory12 = okHttpClient0.sslSocketFactory;
        java.net.ResponseCache responseCache13 = null;
        okHttpClient0.responseCache = responseCache13;
        com.squareup.okhttp.OkAuthenticator okAuthenticator15 = okHttpClient0.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool17 = okHttpClient16.getConnectionPool();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory18 = null;
        okHttpClient16.sslSocketFactory = sSLSocketFactory18;
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient6);
        org.junit.Assert.assertNull(sSLSocketFactory12);
        org.junit.Assert.assertNull(okAuthenticator15);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNotNull(connectionPool17);
    }

    @Test
    public void test03305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03305");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.Proxy proxy5 = okHttpClient4.proxy;
        okHttpClient4.followProtocolRedirects = false;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler9 = okHttpClient8.getCookieHandler();
        boolean boolean10 = okHttpClient8.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient8.setAuthenticator(okAuthenticator11);
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient8.copyWithDefaults();
        java.net.CookieHandler cookieHandler14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient8.setCookieHandler(cookieHandler14);
        com.squareup.okhttp.OkAuthenticator okAuthenticator16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient15.setAuthenticator(okAuthenticator16);
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler19 = okHttpClient18.getCookieHandler();
        boolean boolean20 = okHttpClient18.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient18.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool24 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int25 = connectionPool24.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient21.setConnectionPool(connectionPool24);
        com.squareup.okhttp.ConnectionPool connectionPool27 = okHttpClient21.connectionPool;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient15.setConnectionPool(connectionPool27);
        com.squareup.okhttp.OkHttpClient okHttpClient29 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler30 = okHttpClient29.getCookieHandler();
        java.net.ResponseCache responseCache31 = null;
        okHttpClient29.responseCache = responseCache31;
        boolean boolean33 = okHttpClient29.followProtocolRedirects;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory34 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient29.setSSLSocketFactory(sSLSocketFactory34);
        java.net.Proxy proxy36 = okHttpClient35.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient37 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector38 = null;
        okHttpClient37.proxySelector = proxySelector38;
        java.net.ProxySelector proxySelector40 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient41 = okHttpClient37.setProxySelector(proxySelector40);
        java.net.ProxySelector proxySelector42 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient43 = okHttpClient37.setProxySelector(proxySelector42);
        java.net.ProxySelector.setDefault(proxySelector42);
        okHttpClient35.proxySelector = proxySelector42;
        com.squareup.okhttp.OkHttpClient okHttpClient46 = okHttpClient35.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient47 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler48 = okHttpClient47.getCookieHandler();
        boolean boolean49 = okHttpClient47.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient47.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier51 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient52 = okHttpClient50.setHostnameVerifier(hostnameVerifier51);
        java.net.ResponseCache responseCache53 = okHttpClient52.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator54 = okHttpClient52.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier55 = okHttpClient52.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory56 = okHttpClient52.getSslSocketFactory();
        java.lang.String[] strArray57 = sSLSocketFactory56.getSupportedCipherSuites();
        java.net.Socket socket58 = sSLSocketFactory56.createSocket();
        com.squareup.okhttp.OkHttpClient okHttpClient59 = okHttpClient35.setSSLSocketFactory(sSLSocketFactory56);
        com.squareup.okhttp.OkHttpClient okHttpClient60 = okHttpClient15.setSSLSocketFactory(sSLSocketFactory56);
        java.lang.String[] strArray61 = sSLSocketFactory56.getDefaultCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient62 = okHttpClient4.setSSLSocketFactory(sSLSocketFactory56);
        com.squareup.okhttp.OkHttpClient okHttpClient63 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler64 = okHttpClient63.getCookieHandler();
        boolean boolean65 = okHttpClient63.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient66 = okHttpClient63.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool69 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int70 = connectionPool69.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient71 = okHttpClient66.setConnectionPool(connectionPool69);
        com.squareup.okhttp.ConnectionPool connectionPool72 = okHttpClient66.connectionPool;
        java.net.ResponseCache responseCache73 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient74 = okHttpClient66.setResponseCache(responseCache73);
        java.net.ResponseCache responseCache75 = okHttpClient66.responseCache;
        com.squareup.okhttp.OkAuthenticator okAuthenticator76 = okHttpClient66.authenticator;
        okHttpClient62.authenticator = okAuthenticator76;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache78 = okHttpClient62.okResponseCache();
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(proxy5);
        org.junit.Assert.assertNull(cookieHandler9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNull(cookieHandler19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNotNull(connectionPool27);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNull(cookieHandler30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNull(proxy36);
        org.junit.Assert.assertNotNull(okHttpClient41);
// flaky:         org.junit.Assert.assertNull(proxySelector42);
        org.junit.Assert.assertNotNull(okHttpClient43);
        org.junit.Assert.assertNotNull(okHttpClient46);
        org.junit.Assert.assertNull(cookieHandler48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(okHttpClient50);
        org.junit.Assert.assertNotNull(okHttpClient52);
        org.junit.Assert.assertNull(responseCache53);
        org.junit.Assert.assertNotNull(okAuthenticator54);
        org.junit.Assert.assertNull(hostnameVerifier55);
        org.junit.Assert.assertNotNull(sSLSocketFactory56);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(socket58);
        org.junit.Assert.assertEquals(socket58.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(okHttpClient59);
        org.junit.Assert.assertNotNull(okHttpClient60);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(okHttpClient62);
        org.junit.Assert.assertNull(cookieHandler64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(okHttpClient66);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(okHttpClient71);
        org.junit.Assert.assertNotNull(connectionPool72);
        org.junit.Assert.assertNotNull(okHttpClient74);
        org.junit.Assert.assertNull(responseCache75);
        org.junit.Assert.assertNotNull(okAuthenticator76);
        org.junit.Assert.assertNull(okResponseCache78);
    }

    @Test
    public void test03306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03306");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setHostnameVerifier(hostnameVerifier4);
        java.net.ResponseCache responseCache6 = okHttpClient5.responseCache;
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool((int) '4', 100L);
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient5.setConnectionPool(connectionPool9);
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler12 = okHttpClient11.getCookieHandler();
        boolean boolean13 = okHttpClient11.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient11.setAuthenticator(okAuthenticator14);
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient11.copyWithDefaults();
        java.net.CookieHandler cookieHandler17 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient11.setCookieHandler(cookieHandler17);
        com.squareup.okhttp.OkAuthenticator okAuthenticator19 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient18.setAuthenticator(okAuthenticator19);
        com.squareup.okhttp.OkHttpClient okHttpClient21 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler22 = okHttpClient21.getCookieHandler();
        boolean boolean23 = okHttpClient21.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient21.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool27 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int28 = connectionPool27.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient24.setConnectionPool(connectionPool27);
        com.squareup.okhttp.ConnectionPool connectionPool30 = okHttpClient24.connectionPool;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient18.setConnectionPool(connectionPool30);
        com.squareup.okhttp.Address address32 = null;
        com.squareup.okhttp.Connection connection33 = connectionPool30.get(address32);
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient10.setConnectionPool(connectionPool30);
        java.net.ResponseCache responseCache35 = okHttpClient34.responseCache;
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient34.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient36.copyWithDefaults();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache38 = okHttpClient36.okResponseCache();
        java.net.ResponseCache responseCache39 = okHttpClient36.responseCache;
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(responseCache6);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertNull(cookieHandler12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNull(cookieHandler22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(okHttpClient29);
        org.junit.Assert.assertNotNull(connectionPool30);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNull(connection33);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertNull(responseCache35);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNotNull(okHttpClient37);
        org.junit.Assert.assertNull(okResponseCache38);
        org.junit.Assert.assertNull(responseCache39);
    }

    @Test
    public void test03307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03307");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        java.net.ResponseCache responseCache5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient0.setResponseCache(responseCache5);
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool9.evictAll();
        okHttpClient0.connectionPool = connectionPool9;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory12 = okHttpClient0.sslSocketFactory;
        java.net.Proxy proxy13 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient0.setProxy(proxy13);
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler16 = okHttpClient15.getCookieHandler();
        boolean boolean17 = okHttpClient15.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient15.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet19 = okHttpClient18.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient18.copyWithDefaults();
        java.net.ProxySelector proxySelector21 = okHttpClient18.getProxySelector();
        okHttpClient14.proxySelector = proxySelector21;
        boolean boolean23 = okHttpClient14.getFollowProtocolRedirects();
        com.squareup.okhttp.ConnectionPool connectionPool24 = okHttpClient14.getConnectionPool();
        java.net.CookieHandler cookieHandler25 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient14.setCookieHandler(cookieHandler25);
        com.squareup.okhttp.OkHttpClient okHttpClient27 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler28 = okHttpClient27.getCookieHandler();
        boolean boolean29 = okHttpClient27.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient30 = okHttpClient27.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool33 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int34 = connectionPool33.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient30.setConnectionPool(connectionPool33);
        com.squareup.okhttp.ConnectionPool connectionPool36 = okHttpClient30.connectionPool;
        com.squareup.okhttp.OkHttpClient okHttpClient37 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector38 = null;
        okHttpClient37.proxySelector = proxySelector38;
        java.net.ProxySelector proxySelector40 = okHttpClient37.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier41 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient37.setHostnameVerifier(hostnameVerifier41);
        java.net.ProxySelector proxySelector43 = java.net.ProxySelector.getDefault();
        okHttpClient37.proxySelector = proxySelector43;
        java.net.ProxySelector.setDefault(proxySelector43);
        com.squareup.okhttp.OkHttpClient okHttpClient46 = okHttpClient30.setProxySelector(proxySelector43);
        com.squareup.okhttp.ConnectionPool connectionPool47 = okHttpClient30.getConnectionPool();
        com.squareup.okhttp.ConnectionPool connectionPool48 = okHttpClient30.connectionPool;
        com.squareup.okhttp.OkHttpClient okHttpClient49 = okHttpClient26.setConnectionPool(connectionPool48);
        java.net.URL uRL50 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.HttpURLConnection httpURLConnection51 = okHttpClient49.open(uRL50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient6);
        org.junit.Assert.assertNull(sSLSocketFactory12);
        org.junit.Assert.assertNotNull(proxy13);
        org.junit.Assert.assertNotNull(okHttpClient14);
        org.junit.Assert.assertNull(cookieHandler16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNotNull(routeSet19);
        org.junit.Assert.assertNotNull(okHttpClient20);
// flaky:         org.junit.Assert.assertNull(proxySelector21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(connectionPool24);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNull(cookieHandler28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(okHttpClient30);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNotNull(connectionPool36);
        org.junit.Assert.assertNull(proxySelector40);
        org.junit.Assert.assertNotNull(okHttpClient42);
// flaky:         org.junit.Assert.assertNull(proxySelector43);
        org.junit.Assert.assertNotNull(okHttpClient46);
        org.junit.Assert.assertNotNull(connectionPool47);
        org.junit.Assert.assertNotNull(connectionPool48);
        org.junit.Assert.assertNotNull(okHttpClient49);
    }

    @Test
    public void test03308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03308");
        java.net.Proxy proxy0 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress1 = proxy0.address();
        com.squareup.okhttp.OkHttpClient okHttpClient2 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector3 = null;
        okHttpClient2.proxySelector = proxySelector3;
        com.squareup.okhttp.ConnectionPool connectionPool5 = okHttpClient2.connectionPool;
        com.squareup.okhttp.ConnectionPool connectionPool6 = okHttpClient2.getConnectionPool();
        boolean boolean7 = proxy0.equals((java.lang.Object) okHttpClient2);
        com.squareup.okhttp.OkHttpClient okHttpClient8 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler9 = okHttpClient8.getCookieHandler();
        boolean boolean10 = okHttpClient8.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient8.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool14 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int15 = connectionPool14.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient11.setConnectionPool(connectionPool14);
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient2.setConnectionPool(connectionPool14);
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache18 = okHttpClient17.okResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient19 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler20 = okHttpClient19.getCookieHandler();
        boolean boolean21 = okHttpClient19.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient19.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet23 = okHttpClient22.failedRoutes;
        boolean boolean24 = okHttpClient22.getFollowProtocolRedirects();
        java.net.Proxy proxy25 = java.net.Proxy.NO_PROXY;
        okHttpClient22.proxy = proxy25;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler28 = okHttpClient27.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray29 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet30 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet30, routeArray29);
        okHttpClient27.failedRoutes = routeSet30;
        java.net.Proxy proxy33 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient34 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler35 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient34.setCookieHandler(cookieHandler35);
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient34.setFollowProtocolRedirects(true);
        boolean boolean39 = proxy33.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient40 = okHttpClient27.setProxy(proxy33);
        com.squareup.okhttp.OkAuthenticator okAuthenticator41 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient40.setAuthenticator(okAuthenticator41);
        com.squareup.okhttp.OkHttpClient okHttpClient43 = okHttpClient42.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient44 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler45 = okHttpClient44.getCookieHandler();
        java.net.ResponseCache responseCache46 = null;
        okHttpClient44.responseCache = responseCache46;
        boolean boolean48 = okHttpClient44.followProtocolRedirects;
        java.net.CookieHandler cookieHandler49 = okHttpClient44.cookieHandler;
        com.squareup.okhttp.ConnectionPool connectionPool50 = okHttpClient44.getConnectionPool();
        com.squareup.okhttp.OkHttpClient okHttpClient51 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector52 = null;
        okHttpClient51.proxySelector = proxySelector52;
        java.net.ProxySelector proxySelector54 = okHttpClient51.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier55 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient56 = okHttpClient51.setHostnameVerifier(hostnameVerifier55);
        java.net.ProxySelector proxySelector57 = okHttpClient51.proxySelector;
        java.net.ResponseCache responseCache58 = okHttpClient51.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet59 = okHttpClient51.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient60 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler61 = okHttpClient60.getCookieHandler();
        boolean boolean62 = okHttpClient60.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient63 = okHttpClient60.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool66 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int67 = connectionPool66.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient68 = okHttpClient63.setConnectionPool(connectionPool66);
        com.squareup.okhttp.OkHttpClient okHttpClient69 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector70 = null;
        okHttpClient69.proxySelector = proxySelector70;
        java.net.ProxySelector proxySelector72 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient73 = okHttpClient69.setProxySelector(proxySelector72);
        java.net.ProxySelector proxySelector74 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient75 = okHttpClient69.setProxySelector(proxySelector74);
        okHttpClient68.proxySelector = proxySelector74;
        javax.net.ssl.HostnameVerifier hostnameVerifier77 = okHttpClient68.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient78 = okHttpClient51.setHostnameVerifier(hostnameVerifier77);
        okHttpClient44.hostnameVerifier = hostnameVerifier77;
        okHttpClient43.hostnameVerifier = hostnameVerifier77;
        okHttpClient22.hostnameVerifier = hostnameVerifier77;
        com.squareup.okhttp.OkHttpClient okHttpClient82 = okHttpClient17.setHostnameVerifier(hostnameVerifier77);
        com.squareup.okhttp.OkHttpClient okHttpClient83 = okHttpClient17.copyWithDefaults();
        boolean boolean84 = okHttpClient83.followProtocolRedirects;
        java.net.ResponseCache responseCache85 = null;
        okHttpClient83.responseCache = responseCache85;
        org.junit.Assert.assertNotNull(proxy0);
        org.junit.Assert.assertNull(socketAddress1);
        org.junit.Assert.assertNull(connectionPool5);
        org.junit.Assert.assertNull(connectionPool6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(cookieHandler9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNull(okResponseCache18);
        org.junit.Assert.assertNull(cookieHandler20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNotNull(routeSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(proxy25);
        org.junit.Assert.assertNull(cookieHandler28);
        org.junit.Assert.assertNotNull(routeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(proxy33);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(okHttpClient40);
        org.junit.Assert.assertNotNull(okHttpClient42);
        org.junit.Assert.assertNotNull(okHttpClient43);
        org.junit.Assert.assertNull(cookieHandler45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(cookieHandler49);
        org.junit.Assert.assertNull(connectionPool50);
        org.junit.Assert.assertNull(proxySelector54);
        org.junit.Assert.assertNotNull(okHttpClient56);
        org.junit.Assert.assertNull(proxySelector57);
        org.junit.Assert.assertNull(responseCache58);
        org.junit.Assert.assertNotNull(routeSet59);
        org.junit.Assert.assertNull(cookieHandler61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(okHttpClient63);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNotNull(okHttpClient68);
        org.junit.Assert.assertNotNull(okHttpClient73);
// flaky:         org.junit.Assert.assertNull(proxySelector74);
        org.junit.Assert.assertNotNull(okHttpClient75);
        org.junit.Assert.assertNotNull(hostnameVerifier77);
        org.junit.Assert.assertNotNull(okHttpClient78);
        org.junit.Assert.assertNotNull(okHttpClient82);
        org.junit.Assert.assertNotNull(okHttpClient83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
    }

    @Test
    public void test03309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03309");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = okHttpClient0.hostnameVerifier;
        java.net.ResponseCache responseCache2 = okHttpClient0.getResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler4 = okHttpClient3.getCookieHandler();
        boolean boolean5 = okHttpClient3.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient3.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int10 = connectionPool9.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient6.setConnectionPool(connectionPool9);
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = null;
        okHttpClient6.hostnameVerifier = hostnameVerifier12;
        com.squareup.okhttp.ConnectionPool connectionPool14 = okHttpClient6.getConnectionPool();
        okHttpClient0.connectionPool = connectionPool14;
        java.net.CookieHandler cookieHandler16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient0.setCookieHandler(cookieHandler16);
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector19 = null;
        okHttpClient18.proxySelector = proxySelector19;
        java.net.ProxySelector proxySelector21 = okHttpClient18.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier22 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient18.setHostnameVerifier(hostnameVerifier22);
        java.net.ProxySelector proxySelector24 = okHttpClient18.proxySelector;
        java.net.ResponseCache responseCache25 = okHttpClient18.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet26 = okHttpClient18.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler28 = okHttpClient27.getCookieHandler();
        boolean boolean29 = okHttpClient27.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient30 = okHttpClient27.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool33 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int34 = connectionPool33.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient30.setConnectionPool(connectionPool33);
        com.squareup.okhttp.OkHttpClient okHttpClient36 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector37 = null;
        okHttpClient36.proxySelector = proxySelector37;
        java.net.ProxySelector proxySelector39 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient40 = okHttpClient36.setProxySelector(proxySelector39);
        java.net.ProxySelector proxySelector41 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient36.setProxySelector(proxySelector41);
        okHttpClient35.proxySelector = proxySelector41;
        javax.net.ssl.HostnameVerifier hostnameVerifier44 = okHttpClient35.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient45 = okHttpClient18.setHostnameVerifier(hostnameVerifier44);
        javax.net.ssl.HostnameVerifier hostnameVerifier46 = okHttpClient45.getHostnameVerifier();
        okHttpClient17.hostnameVerifier = hostnameVerifier46;
        java.net.CookieHandler cookieHandler48 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient49 = okHttpClient17.setCookieHandler(cookieHandler48);
        com.squareup.okhttp.OkAuthenticator okAuthenticator50 = okHttpClient17.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool51 = okHttpClient17.getConnectionPool();
        com.squareup.okhttp.Address address52 = null;
        com.squareup.okhttp.Connection connection53 = connectionPool51.get(address52);
        org.junit.Assert.assertNull(hostnameVerifier1);
        org.junit.Assert.assertNull(responseCache2);
        org.junit.Assert.assertNull(cookieHandler4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(okHttpClient6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(connectionPool14);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNull(proxySelector21);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertNull(proxySelector24);
        org.junit.Assert.assertNull(responseCache25);
        org.junit.Assert.assertNotNull(routeSet26);
        org.junit.Assert.assertNull(cookieHandler28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(okHttpClient30);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNotNull(okHttpClient40);
// flaky:         org.junit.Assert.assertNull(proxySelector41);
        org.junit.Assert.assertNotNull(okHttpClient42);
        org.junit.Assert.assertNotNull(hostnameVerifier44);
        org.junit.Assert.assertNotNull(okHttpClient45);
        org.junit.Assert.assertNotNull(hostnameVerifier46);
        org.junit.Assert.assertNotNull(okHttpClient49);
        org.junit.Assert.assertNull(okAuthenticator50);
        org.junit.Assert.assertNotNull(connectionPool51);
        org.junit.Assert.assertNull(connection53);
    }

    @Test
    public void test03310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03310");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setHostnameVerifier(hostnameVerifier4);
        java.net.ProxySelector proxySelector6 = okHttpClient0.proxySelector;
        java.net.ResponseCache responseCache7 = okHttpClient0.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet8 = okHttpClient0.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler10 = okHttpClient9.getCookieHandler();
        boolean boolean11 = okHttpClient9.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient9.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool15 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int16 = connectionPool15.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient12.setConnectionPool(connectionPool15);
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector19 = null;
        okHttpClient18.proxySelector = proxySelector19;
        java.net.ProxySelector proxySelector21 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient18.setProxySelector(proxySelector21);
        java.net.ProxySelector proxySelector23 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient18.setProxySelector(proxySelector23);
        okHttpClient17.proxySelector = proxySelector23;
        javax.net.ssl.HostnameVerifier hostnameVerifier26 = okHttpClient17.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient0.setHostnameVerifier(hostnameVerifier26);
        java.net.CookieHandler cookieHandler28 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient27.setCookieHandler(cookieHandler28);
        com.squareup.okhttp.ConnectionPool connectionPool32 = new com.squareup.okhttp.ConnectionPool((int) 'a', (long) (byte) -1);
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient29.setConnectionPool(connectionPool32);
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient29.setFollowProtocolRedirects(false);
        java.net.ResponseCache responseCache36 = null;
        okHttpClient29.responseCache = responseCache36;
        java.util.Set<com.squareup.okhttp.Route> routeSet38 = okHttpClient29.failedRoutes;
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(proxySelector6);
        org.junit.Assert.assertNull(responseCache7);
        org.junit.Assert.assertNotNull(routeSet8);
        org.junit.Assert.assertNull(cookieHandler10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNotNull(okHttpClient22);
// flaky:         org.junit.Assert.assertNull(proxySelector23);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNotNull(hostnameVerifier26);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNotNull(okHttpClient29);
        org.junit.Assert.assertNotNull(okHttpClient33);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNotNull(routeSet38);
    }

    @Test
    public void test03311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03311");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        java.net.ResponseCache responseCache2 = null;
        okHttpClient0.responseCache = responseCache2;
        boolean boolean4 = okHttpClient0.followProtocolRedirects;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory5);
        java.net.Proxy proxy7 = okHttpClient6.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector9 = null;
        okHttpClient8.proxySelector = proxySelector9;
        java.net.ProxySelector proxySelector11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient8.setProxySelector(proxySelector11);
        java.net.ProxySelector proxySelector13 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient8.setProxySelector(proxySelector13);
        java.net.ProxySelector.setDefault(proxySelector13);
        okHttpClient6.proxySelector = proxySelector13;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient6.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler19 = okHttpClient18.getCookieHandler();
        boolean boolean20 = okHttpClient18.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient18.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier22 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient21.setHostnameVerifier(hostnameVerifier22);
        java.net.ResponseCache responseCache24 = okHttpClient23.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator25 = okHttpClient23.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier26 = okHttpClient23.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory27 = okHttpClient23.getSslSocketFactory();
        java.lang.String[] strArray28 = sSLSocketFactory27.getSupportedCipherSuites();
        java.net.Socket socket29 = sSLSocketFactory27.createSocket();
        com.squareup.okhttp.OkHttpClient okHttpClient30 = okHttpClient6.setSSLSocketFactory(sSLSocketFactory27);
        java.lang.String[] strArray31 = sSLSocketFactory27.getDefaultCipherSuites();
        java.net.InetAddress inetAddress34 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket36 = sSLSocketFactory27.createSocket("hi!", (int) (short) 0, inetAddress34, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.net.BindException; message: Permission denied (Bind failed)");
        } catch (java.net.BindException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(okHttpClient6);
        org.junit.Assert.assertNull(proxy7);
        org.junit.Assert.assertNotNull(okHttpClient12);
// flaky:         org.junit.Assert.assertNull(proxySelector13);
        org.junit.Assert.assertNotNull(okHttpClient14);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNull(cookieHandler19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertNull(responseCache24);
        org.junit.Assert.assertNotNull(okAuthenticator25);
        org.junit.Assert.assertNull(hostnameVerifier26);
        org.junit.Assert.assertNotNull(sSLSocketFactory27);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(socket29);
        org.junit.Assert.assertEquals(socket29.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(okHttpClient30);
        org.junit.Assert.assertNotNull(strArray31);
    }

    @Test
    public void test03312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03312");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setHostnameVerifier(hostnameVerifier4);
        boolean boolean6 = okHttpClient0.getFollowProtocolRedirects();
        java.net.ProxySelector proxySelector7 = okHttpClient0.proxySelector;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector9 = null;
        okHttpClient8.proxySelector = proxySelector9;
        java.net.ProxySelector proxySelector11 = okHttpClient8.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient8.setHostnameVerifier(hostnameVerifier12);
        boolean boolean14 = okHttpClient8.getFollowProtocolRedirects();
        com.squareup.okhttp.ConnectionPool connectionPool17 = new com.squareup.okhttp.ConnectionPool((int) 'a', (long) (byte) -1);
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient8.setConnectionPool(connectionPool17);
        com.squareup.okhttp.OkHttpClient okHttpClient19 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler20 = okHttpClient19.getCookieHandler();
        boolean boolean21 = okHttpClient19.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient19.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier23 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient22.setHostnameVerifier(hostnameVerifier23);
        java.net.ResponseCache responseCache25 = okHttpClient24.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator26 = okHttpClient24.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier27 = okHttpClient24.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory28 = okHttpClient24.getSslSocketFactory();
        okHttpClient8.sslSocketFactory = sSLSocketFactory28;
        okHttpClient0.sslSocketFactory = sSLSocketFactory28;
        java.net.Socket socket31 = sSLSocketFactory28.createSocket();
        java.lang.String[] strArray32 = sSLSocketFactory28.getSupportedCipherSuites();
        java.net.Socket socket33 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket37 = sSLSocketFactory28.createSocket(socket33, "", (int) (short) 1, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(proxySelector7);
        org.junit.Assert.assertNull(proxySelector11);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNull(cookieHandler20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNull(responseCache25);
        org.junit.Assert.assertNotNull(okAuthenticator26);
        org.junit.Assert.assertNull(hostnameVerifier27);
        org.junit.Assert.assertNotNull(sSLSocketFactory28);
        org.junit.Assert.assertNotNull(socket31);
        org.junit.Assert.assertEquals(socket31.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(strArray32);
    }

    @Test
    public void test03313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03313");
        com.squareup.okhttp.ConnectionPool connectionPool2 = new com.squareup.okhttp.ConnectionPool(100, 1L);
        com.squareup.okhttp.Address address3 = null;
        com.squareup.okhttp.Connection connection4 = connectionPool2.get(address3);
        int int5 = connectionPool2.getConnectionCount();
        com.squareup.okhttp.Address address6 = null;
        com.squareup.okhttp.Connection connection7 = connectionPool2.get(address6);
        org.junit.Assert.assertNull(connection4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(connection7);
    }

    @Test
    public void test03314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03314");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray2 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet3 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet3, routeArray2);
        okHttpClient0.failedRoutes = routeSet3;
        java.net.Proxy proxy6 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient7.setCookieHandler(cookieHandler8);
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient7.setFollowProtocolRedirects(true);
        boolean boolean12 = proxy6.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient0.setProxy(proxy6);
        com.squareup.okhttp.OkAuthenticator okAuthenticator14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient13.setAuthenticator(okAuthenticator14);
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient15.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient15.setFollowProtocolRedirects(true);
        com.squareup.okhttp.ConnectionPool connectionPool21 = new com.squareup.okhttp.ConnectionPool((int) (byte) 100, (long) (byte) 100);
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient15.setConnectionPool(connectionPool21);
        java.util.Set<com.squareup.okhttp.Route> routeSet23 = okHttpClient22.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler25 = okHttpClient24.getCookieHandler();
        boolean boolean26 = okHttpClient24.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient24.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet28 = okHttpClient27.failedRoutes;
        boolean boolean29 = okHttpClient27.getFollowProtocolRedirects();
        java.net.Proxy proxy30 = java.net.Proxy.NO_PROXY;
        okHttpClient27.proxy = proxy30;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler33 = okHttpClient32.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray34 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet35 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet35, routeArray34);
        okHttpClient32.failedRoutes = routeSet35;
        java.net.Proxy proxy38 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient39 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler40 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient41 = okHttpClient39.setCookieHandler(cookieHandler40);
        com.squareup.okhttp.OkHttpClient okHttpClient43 = okHttpClient39.setFollowProtocolRedirects(true);
        boolean boolean44 = proxy38.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient45 = okHttpClient32.setProxy(proxy38);
        java.net.SocketAddress socketAddress46 = proxy38.address();
        com.squareup.okhttp.OkHttpClient okHttpClient47 = okHttpClient27.setProxy(proxy38);
        okHttpClient47.followProtocolRedirects = false;
        boolean boolean50 = okHttpClient47.followProtocolRedirects;
        java.net.CookieHandler cookieHandler51 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient52 = okHttpClient47.setCookieHandler(cookieHandler51);
        com.squareup.okhttp.ConnectionPool connectionPool55 = new com.squareup.okhttp.ConnectionPool((int) (short) 10, (long) (byte) -1);
        com.squareup.okhttp.OkHttpClient okHttpClient56 = okHttpClient52.setConnectionPool(connectionPool55);
        javax.net.ssl.HostnameVerifier hostnameVerifier57 = okHttpClient56.hostnameVerifier;
        okHttpClient22.hostnameVerifier = hostnameVerifier57;
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertNotNull(routeArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(proxy6);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNotNull(routeSet23);
        org.junit.Assert.assertNull(cookieHandler25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNotNull(routeSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(proxy30);
        org.junit.Assert.assertNull(cookieHandler33);
        org.junit.Assert.assertNotNull(routeArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(proxy38);
        org.junit.Assert.assertNotNull(okHttpClient41);
        org.junit.Assert.assertNotNull(okHttpClient43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(okHttpClient45);
        org.junit.Assert.assertNull(socketAddress46);
        org.junit.Assert.assertNotNull(okHttpClient47);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(okHttpClient52);
        org.junit.Assert.assertNotNull(okHttpClient56);
        org.junit.Assert.assertNotNull(hostnameVerifier57);
    }

    @Test
    public void test03315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03315");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient4 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector5 = null;
        okHttpClient4.proxySelector = proxySelector5;
        java.net.ProxySelector proxySelector7 = okHttpClient4.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient4.setHostnameVerifier(hostnameVerifier8);
        java.net.ProxySelector proxySelector10 = okHttpClient4.proxySelector;
        java.net.ResponseCache responseCache11 = okHttpClient4.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet12 = okHttpClient4.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler14 = okHttpClient13.getCookieHandler();
        boolean boolean15 = okHttpClient13.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient13.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool19 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int20 = connectionPool19.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient16.setConnectionPool(connectionPool19);
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector23 = null;
        okHttpClient22.proxySelector = proxySelector23;
        java.net.ProxySelector proxySelector25 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient22.setProxySelector(proxySelector25);
        java.net.ProxySelector proxySelector27 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient22.setProxySelector(proxySelector27);
        okHttpClient21.proxySelector = proxySelector27;
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = okHttpClient21.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient4.setHostnameVerifier(hostnameVerifier30);
        javax.net.ssl.HostnameVerifier hostnameVerifier32 = okHttpClient31.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient0.setHostnameVerifier(hostnameVerifier32);
        java.net.Proxy proxy34 = okHttpClient33.proxy;
        java.util.Set<com.squareup.okhttp.Route> routeSet35 = okHttpClient33.failedRoutes;
        java.net.ProxySelector proxySelector36 = okHttpClient33.getProxySelector();
        com.squareup.okhttp.OkHttpClient okHttpClient37 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector38 = null;
        okHttpClient37.proxySelector = proxySelector38;
        java.net.ProxySelector proxySelector40 = okHttpClient37.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier41 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient37.setHostnameVerifier(hostnameVerifier41);
        boolean boolean43 = okHttpClient37.getFollowProtocolRedirects();
        com.squareup.okhttp.ConnectionPool connectionPool46 = new com.squareup.okhttp.ConnectionPool((int) 'a', (long) (byte) -1);
        com.squareup.okhttp.OkHttpClient okHttpClient47 = okHttpClient37.setConnectionPool(connectionPool46);
        com.squareup.okhttp.OkHttpClient okHttpClient48 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler49 = okHttpClient48.getCookieHandler();
        boolean boolean50 = okHttpClient48.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient51 = okHttpClient48.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier52 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient53 = okHttpClient51.setHostnameVerifier(hostnameVerifier52);
        java.net.ResponseCache responseCache54 = okHttpClient53.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator55 = okHttpClient53.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier56 = okHttpClient53.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory57 = okHttpClient53.getSslSocketFactory();
        okHttpClient37.sslSocketFactory = sSLSocketFactory57;
        java.lang.String[] strArray59 = sSLSocketFactory57.getSupportedCipherSuites();
        okHttpClient33.sslSocketFactory = sSLSocketFactory57;
        java.lang.String[] strArray61 = sSLSocketFactory57.getSupportedCipherSuites();
        java.net.InetAddress inetAddress64 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket66 = sSLSocketFactory57.createSocket("DIRECT", 100, inetAddress64, 0);
            org.junit.Assert.fail("Expected exception of type java.net.UnknownHostException; message: DIRECT");
        } catch (java.net.UnknownHostException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertNull(proxySelector7);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNull(proxySelector10);
        org.junit.Assert.assertNull(responseCache11);
        org.junit.Assert.assertNotNull(routeSet12);
        org.junit.Assert.assertNull(cookieHandler14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNotNull(okHttpClient26);
// flaky:         org.junit.Assert.assertNull(proxySelector27);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNotNull(hostnameVerifier30);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNotNull(hostnameVerifier32);
        org.junit.Assert.assertNotNull(okHttpClient33);
        org.junit.Assert.assertNull(proxy34);
        org.junit.Assert.assertNotNull(routeSet35);
        org.junit.Assert.assertNull(proxySelector36);
        org.junit.Assert.assertNull(proxySelector40);
        org.junit.Assert.assertNotNull(okHttpClient42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(okHttpClient47);
        org.junit.Assert.assertNull(cookieHandler49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(okHttpClient51);
        org.junit.Assert.assertNotNull(okHttpClient53);
        org.junit.Assert.assertNull(responseCache54);
        org.junit.Assert.assertNotNull(okAuthenticator55);
        org.junit.Assert.assertNull(hostnameVerifier56);
        org.junit.Assert.assertNotNull(sSLSocketFactory57);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(strArray61);
    }

    @Test
    public void test03316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03316");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = okHttpClient0.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler5 = okHttpClient4.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray6 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet7 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet7, routeArray6);
        okHttpClient4.failedRoutes = routeSet7;
        java.net.Proxy proxy10 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setCookieHandler(cookieHandler12);
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient11.setFollowProtocolRedirects(true);
        boolean boolean16 = proxy10.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient4.setProxy(proxy10);
        java.lang.String str18 = proxy10.toString();
        java.net.Proxy.Type type19 = proxy10.type();
        com.squareup.okhttp.OkHttpClient okHttpClient20 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler21 = okHttpClient20.getCookieHandler();
        java.net.ResponseCache responseCache22 = null;
        okHttpClient20.responseCache = responseCache22;
        boolean boolean24 = okHttpClient20.followProtocolRedirects;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory25 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient20.setSSLSocketFactory(sSLSocketFactory25);
        java.net.CookieHandler cookieHandler27 = okHttpClient20.cookieHandler;
        boolean boolean28 = proxy10.equals((java.lang.Object) okHttpClient20);
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient0.setProxy(proxy10);
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient29.setFollowProtocolRedirects(false);
        okHttpClient31.followProtocolRedirects = true;
        org.junit.Assert.assertNull(okAuthenticator3);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertNotNull(routeArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(proxy10);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "DIRECT" + "'", str18, "DIRECT");
        org.junit.Assert.assertTrue("'" + type19 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type19.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(cookieHandler21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNull(cookieHandler27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(okHttpClient29);
        org.junit.Assert.assertNotNull(okHttpClient31);
    }

    @Test
    public void test03317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03317");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient3.setHostnameVerifier(hostnameVerifier4);
        java.net.ResponseCache responseCache6 = okHttpClient5.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator7 = okHttpClient5.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = okHttpClient5.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory9 = okHttpClient5.getSslSocketFactory();
        java.lang.String[] strArray10 = sSLSocketFactory9.getSupportedCipherSuites();
        java.net.Socket socket11 = sSLSocketFactory9.createSocket();
        java.net.Socket socket12 = sSLSocketFactory9.createSocket();
        java.net.Socket socket13 = sSLSocketFactory9.createSocket();
        java.lang.String[] strArray14 = sSLSocketFactory9.getDefaultCipherSuites();
        java.net.InetAddress inetAddress17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket19 = sSLSocketFactory9.createSocket("", 10, inetAddress17, 1);
            org.junit.Assert.fail("Expected exception of type java.net.BindException; message: Permission denied (Bind failed)");
        } catch (java.net.BindException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(responseCache6);
        org.junit.Assert.assertNotNull(okAuthenticator7);
        org.junit.Assert.assertNull(hostnameVerifier8);
        org.junit.Assert.assertNotNull(sSLSocketFactory9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(socket11);
        org.junit.Assert.assertEquals(socket11.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(socket12);
        org.junit.Assert.assertEquals(socket12.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(socket13);
        org.junit.Assert.assertEquals(socket13.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(strArray14);
    }

    @Test
    public void test03318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03318");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        com.squareup.okhttp.OkAuthenticator okAuthenticator5 = okHttpClient0.authenticator;
        java.net.ResponseCache responseCache6 = okHttpClient0.getResponseCache();
        java.net.CookieHandler cookieHandler7 = okHttpClient0.cookieHandler;
        java.net.ResponseCache responseCache8 = okHttpClient0.responseCache;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler10 = okHttpClient9.getCookieHandler();
        boolean boolean11 = okHttpClient9.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient9.setAuthenticator(okAuthenticator12);
        java.net.Proxy proxy14 = okHttpClient9.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient9.copyWithDefaults();
        java.net.CookieHandler cookieHandler16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient9.setCookieHandler(cookieHandler16);
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier19 = okHttpClient18.hostnameVerifier;
        java.net.ResponseCache responseCache20 = okHttpClient18.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator21 = okHttpClient18.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler23 = okHttpClient22.getCookieHandler();
        boolean boolean24 = okHttpClient22.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient22.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier26 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient25.setHostnameVerifier(hostnameVerifier26);
        java.net.ResponseCache responseCache28 = okHttpClient27.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator29 = okHttpClient27.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = okHttpClient27.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory31 = okHttpClient27.getSslSocketFactory();
        java.lang.String[] strArray32 = sSLSocketFactory31.getSupportedCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient18.setSSLSocketFactory(sSLSocketFactory31);
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient17.setSSLSocketFactory(sSLSocketFactory31);
        okHttpClient0.sslSocketFactory = sSLSocketFactory31;
        java.lang.String[] strArray36 = sSLSocketFactory31.getSupportedCipherSuites();
        java.net.Socket socket37 = sSLSocketFactory31.createSocket();
        java.net.InetAddress inetAddress38 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket40 = sSLSocketFactory31.createSocket(inetAddress38, 0);
            org.junit.Assert.fail("Expected exception of type java.net.ConnectException; message: Connection refused (Connection refused)");
        } catch (java.net.ConnectException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(okAuthenticator5);
        org.junit.Assert.assertNull(responseCache6);
        org.junit.Assert.assertNull(cookieHandler7);
        org.junit.Assert.assertNull(responseCache8);
        org.junit.Assert.assertNull(cookieHandler10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNull(proxy14);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNull(hostnameVerifier19);
        org.junit.Assert.assertNull(responseCache20);
        org.junit.Assert.assertNull(okAuthenticator21);
        org.junit.Assert.assertNull(cookieHandler23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(okHttpClient25);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNull(responseCache28);
        org.junit.Assert.assertNotNull(okAuthenticator29);
        org.junit.Assert.assertNull(hostnameVerifier30);
        org.junit.Assert.assertNotNull(sSLSocketFactory31);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(okHttpClient33);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(socket37);
        org.junit.Assert.assertEquals(socket37.toString(), "Socket[unconnected]");
    }

    @Test
    public void test03319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03319");
        com.squareup.okhttp.ConnectionPool connectionPool2 = new com.squareup.okhttp.ConnectionPool((int) (short) 100, (long) 10);
        connectionPool2.evictAll();
        connectionPool2.evictAll();
        com.squareup.okhttp.Connection connection5 = null;
        // The following exception was thrown during execution in test generation
        try {
            connectionPool2.recycle(connection5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test03320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03320");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler4 = okHttpClient3.getCookieHandler();
        boolean boolean5 = okHttpClient3.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient3.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet7 = okHttpClient6.failedRoutes;
        boolean boolean8 = okHttpClient6.getFollowProtocolRedirects();
        java.net.Proxy proxy9 = java.net.Proxy.NO_PROXY;
        okHttpClient6.proxy = proxy9;
        okHttpClient0.proxy = proxy9;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient0.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet13 = okHttpClient12.failedRoutes;
        boolean boolean14 = okHttpClient12.getFollowProtocolRedirects();
        java.net.ProxySelector proxySelector15 = okHttpClient12.getProxySelector();
        com.squareup.okhttp.OkHttpClient okHttpClient16 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector17 = null;
        okHttpClient16.proxySelector = proxySelector17;
        java.net.ProxySelector proxySelector19 = okHttpClient16.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier20 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient16.setHostnameVerifier(hostnameVerifier20);
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler23 = okHttpClient22.getCookieHandler();
        boolean boolean24 = okHttpClient22.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient22.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient26 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector27 = null;
        okHttpClient26.proxySelector = proxySelector27;
        java.net.ProxySelector proxySelector29 = okHttpClient26.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient26.setHostnameVerifier(hostnameVerifier30);
        java.net.ProxySelector proxySelector32 = okHttpClient26.proxySelector;
        java.net.ResponseCache responseCache33 = okHttpClient26.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet34 = okHttpClient26.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient35 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler36 = okHttpClient35.getCookieHandler();
        boolean boolean37 = okHttpClient35.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient35.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool41 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int42 = connectionPool41.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient43 = okHttpClient38.setConnectionPool(connectionPool41);
        com.squareup.okhttp.OkHttpClient okHttpClient44 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector45 = null;
        okHttpClient44.proxySelector = proxySelector45;
        java.net.ProxySelector proxySelector47 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient48 = okHttpClient44.setProxySelector(proxySelector47);
        java.net.ProxySelector proxySelector49 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient44.setProxySelector(proxySelector49);
        okHttpClient43.proxySelector = proxySelector49;
        javax.net.ssl.HostnameVerifier hostnameVerifier52 = okHttpClient43.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient53 = okHttpClient26.setHostnameVerifier(hostnameVerifier52);
        javax.net.ssl.HostnameVerifier hostnameVerifier54 = okHttpClient53.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient55 = okHttpClient22.setHostnameVerifier(hostnameVerifier54);
        javax.net.ssl.HostnameVerifier hostnameVerifier56 = okHttpClient55.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient57 = okHttpClient21.setHostnameVerifier(hostnameVerifier56);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory58 = okHttpClient21.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient59 = okHttpClient21.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient60 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler61 = okHttpClient60.getCookieHandler();
        java.net.ResponseCache responseCache62 = null;
        okHttpClient60.responseCache = responseCache62;
        boolean boolean64 = okHttpClient60.followProtocolRedirects;
        java.net.CookieHandler cookieHandler65 = okHttpClient60.cookieHandler;
        com.squareup.okhttp.ConnectionPool connectionPool66 = okHttpClient60.getConnectionPool();
        com.squareup.okhttp.ConnectionPool connectionPool69 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool69.evictAll();
        com.squareup.okhttp.Address address71 = null;
        com.squareup.okhttp.Connection connection72 = connectionPool69.get(address71);
        int int73 = connectionPool69.getHttpConnectionCount();
        okHttpClient60.connectionPool = connectionPool69;
        com.squareup.okhttp.OkHttpClient okHttpClient75 = okHttpClient21.setConnectionPool(connectionPool69);
        java.util.Set<com.squareup.okhttp.Route> routeSet76 = okHttpClient21.failedRoutes;
        okHttpClient12.failedRoutes = routeSet76;
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(cookieHandler4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(okHttpClient6);
        org.junit.Assert.assertNotNull(routeSet7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(proxy9);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertNotNull(routeSet13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
// flaky:         org.junit.Assert.assertNull(proxySelector15);
        org.junit.Assert.assertNull(proxySelector19);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNull(cookieHandler23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(okHttpClient25);
        org.junit.Assert.assertNull(proxySelector29);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNull(proxySelector32);
        org.junit.Assert.assertNull(responseCache33);
        org.junit.Assert.assertNotNull(routeSet34);
        org.junit.Assert.assertNull(cookieHandler36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(okHttpClient43);
        org.junit.Assert.assertNotNull(okHttpClient48);
// flaky:         org.junit.Assert.assertNull(proxySelector49);
        org.junit.Assert.assertNotNull(okHttpClient50);
        org.junit.Assert.assertNotNull(hostnameVerifier52);
        org.junit.Assert.assertNotNull(okHttpClient53);
        org.junit.Assert.assertNotNull(hostnameVerifier54);
        org.junit.Assert.assertNotNull(okHttpClient55);
        org.junit.Assert.assertNotNull(hostnameVerifier56);
        org.junit.Assert.assertNotNull(okHttpClient57);
        org.junit.Assert.assertNull(sSLSocketFactory58);
        org.junit.Assert.assertNotNull(okHttpClient59);
        org.junit.Assert.assertNull(cookieHandler61);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNull(cookieHandler65);
        org.junit.Assert.assertNull(connectionPool66);
        org.junit.Assert.assertNull(connection72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertNotNull(okHttpClient75);
        org.junit.Assert.assertNotNull(routeSet76);
    }

    @Test
    public void test03321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03321");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = okHttpClient0.getSslSocketFactory();
        com.squareup.okhttp.OkAuthenticator okAuthenticator2 = okHttpClient0.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler4 = okHttpClient3.getCookieHandler();
        boolean boolean5 = okHttpClient3.getFollowProtocolRedirects();
        java.net.ProxySelector proxySelector6 = okHttpClient3.proxySelector;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector8 = null;
        okHttpClient7.proxySelector = proxySelector8;
        java.net.ProxySelector proxySelector10 = okHttpClient7.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient7.setHostnameVerifier(hostnameVerifier11);
        java.net.ProxySelector proxySelector13 = okHttpClient7.proxySelector;
        java.net.ResponseCache responseCache14 = okHttpClient7.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet15 = okHttpClient7.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler17 = okHttpClient16.getCookieHandler();
        boolean boolean18 = okHttpClient16.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient16.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool22 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int23 = connectionPool22.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient19.setConnectionPool(connectionPool22);
        com.squareup.okhttp.OkHttpClient okHttpClient25 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector26 = null;
        okHttpClient25.proxySelector = proxySelector26;
        java.net.ProxySelector proxySelector28 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient25.setProxySelector(proxySelector28);
        java.net.ProxySelector proxySelector30 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient25.setProxySelector(proxySelector30);
        okHttpClient24.proxySelector = proxySelector30;
        javax.net.ssl.HostnameVerifier hostnameVerifier33 = okHttpClient24.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient7.setHostnameVerifier(hostnameVerifier33);
        java.net.Proxy proxy35 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress36 = proxy35.address();
        com.squareup.okhttp.OkHttpClient okHttpClient37 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector38 = null;
        okHttpClient37.proxySelector = proxySelector38;
        com.squareup.okhttp.ConnectionPool connectionPool40 = okHttpClient37.connectionPool;
        com.squareup.okhttp.ConnectionPool connectionPool41 = okHttpClient37.getConnectionPool();
        boolean boolean42 = proxy35.equals((java.lang.Object) okHttpClient37);
        okHttpClient7.proxy = proxy35;
        com.squareup.okhttp.OkHttpClient okHttpClient44 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler45 = okHttpClient44.getCookieHandler();
        boolean boolean46 = okHttpClient44.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient47 = okHttpClient44.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier48 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient49 = okHttpClient47.setHostnameVerifier(hostnameVerifier48);
        java.net.ResponseCache responseCache50 = okHttpClient49.getResponseCache();
        java.net.ProxySelector proxySelector51 = okHttpClient49.getProxySelector();
        boolean boolean52 = proxy35.equals((java.lang.Object) proxySelector51);
        com.squareup.okhttp.OkHttpClient okHttpClient53 = okHttpClient3.setProxy(proxy35);
        java.net.CookieHandler cookieHandler54 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient55 = okHttpClient3.setCookieHandler(cookieHandler54);
        java.net.Proxy proxy56 = okHttpClient55.getProxy();
        java.net.Proxy.Type type57 = proxy56.type();
        okHttpClient0.proxy = proxy56;
        com.squareup.okhttp.OkHttpClient okHttpClient59 = okHttpClient0.copyWithDefaults();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory60 = okHttpClient59.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient61 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector62 = null;
        okHttpClient61.proxySelector = proxySelector62;
        java.net.ProxySelector proxySelector64 = okHttpClient61.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier65 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient66 = okHttpClient61.setHostnameVerifier(hostnameVerifier65);
        boolean boolean67 = okHttpClient61.getFollowProtocolRedirects();
        java.net.ProxySelector proxySelector68 = okHttpClient61.proxySelector;
        com.squareup.okhttp.OkHttpClient okHttpClient69 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector70 = null;
        okHttpClient69.proxySelector = proxySelector70;
        java.net.ProxySelector proxySelector72 = okHttpClient69.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier73 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient74 = okHttpClient69.setHostnameVerifier(hostnameVerifier73);
        boolean boolean75 = okHttpClient69.getFollowProtocolRedirects();
        com.squareup.okhttp.ConnectionPool connectionPool78 = new com.squareup.okhttp.ConnectionPool((int) 'a', (long) (byte) -1);
        com.squareup.okhttp.OkHttpClient okHttpClient79 = okHttpClient69.setConnectionPool(connectionPool78);
        com.squareup.okhttp.OkHttpClient okHttpClient80 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler81 = okHttpClient80.getCookieHandler();
        boolean boolean82 = okHttpClient80.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient83 = okHttpClient80.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier84 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient85 = okHttpClient83.setHostnameVerifier(hostnameVerifier84);
        java.net.ResponseCache responseCache86 = okHttpClient85.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator87 = okHttpClient85.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier88 = okHttpClient85.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory89 = okHttpClient85.getSslSocketFactory();
        okHttpClient69.sslSocketFactory = sSLSocketFactory89;
        okHttpClient61.sslSocketFactory = sSLSocketFactory89;
        java.net.Socket socket92 = sSLSocketFactory89.createSocket();
        java.io.InputStream inputStream93 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket95 = sSLSocketFactory60.createSocket(socket92, inputStream93, false);
            org.junit.Assert.fail("Expected exception of type java.net.SocketException; message: Underlying socket is not connected");
        } catch (java.net.SocketException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(sSLSocketFactory1);
        org.junit.Assert.assertNull(okAuthenticator2);
        org.junit.Assert.assertNull(cookieHandler4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(proxySelector6);
        org.junit.Assert.assertNull(proxySelector10);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertNull(proxySelector13);
        org.junit.Assert.assertNull(responseCache14);
        org.junit.Assert.assertNotNull(routeSet15);
        org.junit.Assert.assertNull(cookieHandler17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNotNull(okHttpClient29);
// flaky:         org.junit.Assert.assertNull(proxySelector30);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNotNull(hostnameVerifier33);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertNotNull(proxy35);
        org.junit.Assert.assertNull(socketAddress36);
        org.junit.Assert.assertNull(connectionPool40);
        org.junit.Assert.assertNull(connectionPool41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(cookieHandler45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(okHttpClient47);
        org.junit.Assert.assertNotNull(okHttpClient49);
        org.junit.Assert.assertNull(responseCache50);
// flaky:         org.junit.Assert.assertNull(proxySelector51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(okHttpClient53);
        org.junit.Assert.assertNotNull(okHttpClient55);
        org.junit.Assert.assertNotNull(proxy56);
        org.junit.Assert.assertTrue("'" + type57 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type57.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNotNull(okHttpClient59);
        org.junit.Assert.assertNotNull(sSLSocketFactory60);
        org.junit.Assert.assertNull(proxySelector64);
        org.junit.Assert.assertNotNull(okHttpClient66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNull(proxySelector68);
        org.junit.Assert.assertNull(proxySelector72);
        org.junit.Assert.assertNotNull(okHttpClient74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(okHttpClient79);
        org.junit.Assert.assertNull(cookieHandler81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(okHttpClient83);
        org.junit.Assert.assertNotNull(okHttpClient85);
        org.junit.Assert.assertNull(responseCache86);
        org.junit.Assert.assertNotNull(okAuthenticator87);
        org.junit.Assert.assertNull(hostnameVerifier88);
        org.junit.Assert.assertNotNull(sSLSocketFactory89);
        org.junit.Assert.assertNotNull(socket92);
        org.junit.Assert.assertEquals(socket92.toString(), "Socket[unconnected]");
    }

    @Test
    public void test03322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03322");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool4 = okHttpClient3.getConnectionPool();
        java.net.ProxySelector proxySelector5 = okHttpClient3.getProxySelector();
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.net.Proxy proxy8 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress9 = proxy8.address();
        com.squareup.okhttp.OkHttpClient okHttpClient10 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector11 = null;
        okHttpClient10.proxySelector = proxySelector11;
        com.squareup.okhttp.ConnectionPool connectionPool13 = okHttpClient10.connectionPool;
        com.squareup.okhttp.ConnectionPool connectionPool14 = okHttpClient10.getConnectionPool();
        boolean boolean15 = proxy8.equals((java.lang.Object) okHttpClient10);
        com.squareup.okhttp.OkHttpClient okHttpClient16 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler17 = okHttpClient16.getCookieHandler();
        boolean boolean18 = okHttpClient16.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient16.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool22 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int23 = connectionPool22.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient19.setConnectionPool(connectionPool22);
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient10.setConnectionPool(connectionPool22);
        com.squareup.okhttp.OkHttpClient okHttpClient26 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector27 = null;
        okHttpClient26.proxySelector = proxySelector27;
        java.net.ProxySelector proxySelector29 = okHttpClient26.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient26.setHostnameVerifier(hostnameVerifier30);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory32 = okHttpClient31.sslSocketFactory;
        com.squareup.okhttp.OkHttpClient okHttpClient33 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler34 = okHttpClient33.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray35 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet36 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet36, routeArray35);
        okHttpClient33.failedRoutes = routeSet36;
        okHttpClient31.failedRoutes = routeSet36;
        com.squareup.okhttp.ConnectionPool connectionPool40 = okHttpClient31.getConnectionPool();
        com.squareup.okhttp.OkHttpClient okHttpClient41 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler42 = okHttpClient41.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray43 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet44 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet44, routeArray43);
        okHttpClient41.failedRoutes = routeSet44;
        java.net.Proxy proxy47 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient48 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler49 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient48.setCookieHandler(cookieHandler49);
        com.squareup.okhttp.OkHttpClient okHttpClient52 = okHttpClient48.setFollowProtocolRedirects(true);
        boolean boolean53 = proxy47.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient54 = okHttpClient41.setProxy(proxy47);
        com.squareup.okhttp.OkHttpClient okHttpClient55 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler56 = okHttpClient55.getCookieHandler();
        boolean boolean57 = okHttpClient55.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient58 = okHttpClient55.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool61 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int62 = connectionPool61.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient63 = okHttpClient58.setConnectionPool(connectionPool61);
        com.squareup.okhttp.OkHttpClient okHttpClient64 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector65 = null;
        okHttpClient64.proxySelector = proxySelector65;
        java.net.ProxySelector proxySelector67 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient68 = okHttpClient64.setProxySelector(proxySelector67);
        java.net.ProxySelector proxySelector69 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient70 = okHttpClient64.setProxySelector(proxySelector69);
        okHttpClient63.proxySelector = proxySelector69;
        okHttpClient41.proxySelector = proxySelector69;
        okHttpClient31.proxySelector = proxySelector69;
        okHttpClient10.proxySelector = proxySelector69;
        com.squareup.okhttp.OkHttpClient okHttpClient75 = okHttpClient3.setProxySelector(proxySelector69);
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertNotNull(connectionPool4);
// flaky:         org.junit.Assert.assertNull(proxySelector5);
        org.junit.Assert.assertNotNull(proxy8);
        org.junit.Assert.assertNull(socketAddress9);
        org.junit.Assert.assertNull(connectionPool13);
        org.junit.Assert.assertNull(connectionPool14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(cookieHandler17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNotNull(okHttpClient25);
        org.junit.Assert.assertNull(proxySelector29);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNull(sSLSocketFactory32);
        org.junit.Assert.assertNull(cookieHandler34);
        org.junit.Assert.assertNotNull(routeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(connectionPool40);
        org.junit.Assert.assertNull(cookieHandler42);
        org.junit.Assert.assertNotNull(routeArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(proxy47);
        org.junit.Assert.assertNotNull(okHttpClient50);
        org.junit.Assert.assertNotNull(okHttpClient52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(okHttpClient54);
        org.junit.Assert.assertNull(cookieHandler56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(okHttpClient58);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(okHttpClient63);
        org.junit.Assert.assertNotNull(okHttpClient68);
// flaky:         org.junit.Assert.assertNull(proxySelector69);
        org.junit.Assert.assertNotNull(okHttpClient70);
        org.junit.Assert.assertNotNull(okHttpClient75);
    }

    @Test
    public void test03323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03323");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        java.net.ResponseCache responseCache3 = okHttpClient0.responseCache;
        java.net.Proxy proxy4 = okHttpClient0.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient5 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler6 = okHttpClient5.getCookieHandler();
        boolean boolean7 = okHttpClient5.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient5.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient9 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector10 = null;
        okHttpClient9.proxySelector = proxySelector10;
        java.net.ProxySelector proxySelector12 = okHttpClient9.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient9.setHostnameVerifier(hostnameVerifier13);
        java.net.ProxySelector proxySelector15 = okHttpClient9.proxySelector;
        java.net.ResponseCache responseCache16 = okHttpClient9.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet17 = okHttpClient9.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler19 = okHttpClient18.getCookieHandler();
        boolean boolean20 = okHttpClient18.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient18.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool24 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int25 = connectionPool24.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient21.setConnectionPool(connectionPool24);
        com.squareup.okhttp.OkHttpClient okHttpClient27 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector28 = null;
        okHttpClient27.proxySelector = proxySelector28;
        java.net.ProxySelector proxySelector30 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient27.setProxySelector(proxySelector30);
        java.net.ProxySelector proxySelector32 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient27.setProxySelector(proxySelector32);
        okHttpClient26.proxySelector = proxySelector32;
        javax.net.ssl.HostnameVerifier hostnameVerifier35 = okHttpClient26.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient9.setHostnameVerifier(hostnameVerifier35);
        javax.net.ssl.HostnameVerifier hostnameVerifier37 = okHttpClient36.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient5.setHostnameVerifier(hostnameVerifier37);
        java.net.Proxy proxy39 = okHttpClient38.proxy;
        java.util.Set<com.squareup.okhttp.Route> routeSet40 = okHttpClient38.failedRoutes;
        java.net.ProxySelector proxySelector41 = okHttpClient38.getProxySelector();
        com.squareup.okhttp.OkHttpClient okHttpClient42 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector43 = null;
        okHttpClient42.proxySelector = proxySelector43;
        java.net.ProxySelector proxySelector45 = okHttpClient42.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier46 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient47 = okHttpClient42.setHostnameVerifier(hostnameVerifier46);
        boolean boolean48 = okHttpClient42.getFollowProtocolRedirects();
        com.squareup.okhttp.ConnectionPool connectionPool51 = new com.squareup.okhttp.ConnectionPool((int) 'a', (long) (byte) -1);
        com.squareup.okhttp.OkHttpClient okHttpClient52 = okHttpClient42.setConnectionPool(connectionPool51);
        com.squareup.okhttp.OkHttpClient okHttpClient53 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler54 = okHttpClient53.getCookieHandler();
        boolean boolean55 = okHttpClient53.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient56 = okHttpClient53.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier57 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient58 = okHttpClient56.setHostnameVerifier(hostnameVerifier57);
        java.net.ResponseCache responseCache59 = okHttpClient58.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator60 = okHttpClient58.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier61 = okHttpClient58.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory62 = okHttpClient58.getSslSocketFactory();
        okHttpClient42.sslSocketFactory = sSLSocketFactory62;
        java.lang.String[] strArray64 = sSLSocketFactory62.getSupportedCipherSuites();
        okHttpClient38.sslSocketFactory = sSLSocketFactory62;
        com.squareup.okhttp.OkHttpClient okHttpClient66 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory62);
        com.squareup.okhttp.OkHttpClient okHttpClient67 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler68 = okHttpClient67.getCookieHandler();
        boolean boolean69 = okHttpClient67.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient70 = okHttpClient67.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier71 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient72 = okHttpClient70.setHostnameVerifier(hostnameVerifier71);
        java.net.ResponseCache responseCache73 = okHttpClient72.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator74 = okHttpClient72.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier75 = okHttpClient72.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory76 = okHttpClient72.getSslSocketFactory();
        java.lang.String[] strArray77 = sSLSocketFactory76.getSupportedCipherSuites();
        java.lang.String[] strArray78 = sSLSocketFactory76.getDefaultCipherSuites();
        java.lang.String[] strArray79 = sSLSocketFactory76.getDefaultCipherSuites();
        java.net.Socket socket80 = sSLSocketFactory76.createSocket();
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket84 = sSLSocketFactory62.createSocket(socket80, "DIRECT", (int) 'a', false);
            org.junit.Assert.fail("Expected exception of type java.net.SocketException; message: Underlying socket is not connected");
        } catch (java.net.SocketException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(responseCache3);
        org.junit.Assert.assertNull(proxy4);
        org.junit.Assert.assertNull(cookieHandler6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertNull(proxySelector12);
        org.junit.Assert.assertNotNull(okHttpClient14);
        org.junit.Assert.assertNull(proxySelector15);
        org.junit.Assert.assertNull(responseCache16);
        org.junit.Assert.assertNotNull(routeSet17);
        org.junit.Assert.assertNull(cookieHandler19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNotNull(okHttpClient31);
// flaky:         org.junit.Assert.assertNull(proxySelector32);
        org.junit.Assert.assertNotNull(okHttpClient33);
        org.junit.Assert.assertNotNull(hostnameVerifier35);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNotNull(hostnameVerifier37);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNull(proxy39);
        org.junit.Assert.assertNotNull(routeSet40);
        org.junit.Assert.assertNull(proxySelector41);
        org.junit.Assert.assertNull(proxySelector45);
        org.junit.Assert.assertNotNull(okHttpClient47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(okHttpClient52);
        org.junit.Assert.assertNull(cookieHandler54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(okHttpClient56);
        org.junit.Assert.assertNotNull(okHttpClient58);
        org.junit.Assert.assertNull(responseCache59);
        org.junit.Assert.assertNotNull(okAuthenticator60);
        org.junit.Assert.assertNull(hostnameVerifier61);
        org.junit.Assert.assertNotNull(sSLSocketFactory62);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(okHttpClient66);
        org.junit.Assert.assertNull(cookieHandler68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(okHttpClient70);
        org.junit.Assert.assertNotNull(okHttpClient72);
        org.junit.Assert.assertNull(responseCache73);
        org.junit.Assert.assertNotNull(okAuthenticator74);
        org.junit.Assert.assertNull(hostnameVerifier75);
        org.junit.Assert.assertNotNull(sSLSocketFactory76);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertNotNull(socket80);
        org.junit.Assert.assertEquals(socket80.toString(), "Socket[unconnected]");
    }

    @Test
    public void test03324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03324");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setHostnameVerifier(hostnameVerifier4);
        boolean boolean6 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool((int) 'a', (long) (byte) -1);
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler12 = okHttpClient11.getCookieHandler();
        boolean boolean13 = okHttpClient11.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient11.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient14.setHostnameVerifier(hostnameVerifier15);
        java.net.ResponseCache responseCache17 = okHttpClient16.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator18 = okHttpClient16.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier19 = okHttpClient16.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory20 = okHttpClient16.getSslSocketFactory();
        okHttpClient0.sslSocketFactory = sSLSocketFactory20;
        java.net.Socket socket22 = sSLSocketFactory20.createSocket();
        java.lang.String[] strArray23 = sSLSocketFactory20.getDefaultCipherSuites();
        java.lang.String[] strArray24 = sSLSocketFactory20.getSupportedCipherSuites();
        java.net.InetAddress inetAddress25 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket27 = sSLSocketFactory20.createSocket(inetAddress25, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.net.ConnectException; message: Connection refused (Connection refused)");
        } catch (java.net.ConnectException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertNull(cookieHandler12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(okHttpClient14);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNull(responseCache17);
        org.junit.Assert.assertNotNull(okAuthenticator18);
        org.junit.Assert.assertNull(hostnameVerifier19);
        org.junit.Assert.assertNotNull(sSLSocketFactory20);
        org.junit.Assert.assertNotNull(socket22);
        org.junit.Assert.assertEquals(socket22.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(strArray24);
    }

    @Test
    public void test03325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03325");
        com.squareup.okhttp.ConnectionPool connectionPool2 = new com.squareup.okhttp.ConnectionPool((-1), (long) (byte) 1);
        int int3 = connectionPool2.getSpdyConnectionCount();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test03326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03326");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setHostnameVerifier(hostnameVerifier4);
        java.net.ProxySelector proxySelector6 = okHttpClient0.proxySelector;
        java.net.ResponseCache responseCache7 = okHttpClient0.getResponseCache();
        java.net.CookieHandler cookieHandler8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient0.setCookieHandler(cookieHandler8);
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient9.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler12 = okHttpClient11.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray13 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet14 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet14, routeArray13);
        okHttpClient11.failedRoutes = routeSet14;
        java.net.Proxy proxy17 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler19 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient18.setCookieHandler(cookieHandler19);
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient18.setFollowProtocolRedirects(true);
        boolean boolean23 = proxy17.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient11.setProxy(proxy17);
        com.squareup.okhttp.OkHttpClient okHttpClient25 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler26 = okHttpClient25.getCookieHandler();
        boolean boolean27 = okHttpClient25.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler29 = okHttpClient28.getCookieHandler();
        boolean boolean30 = okHttpClient28.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient28.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet32 = okHttpClient31.failedRoutes;
        boolean boolean33 = okHttpClient31.getFollowProtocolRedirects();
        java.net.Proxy proxy34 = java.net.Proxy.NO_PROXY;
        okHttpClient31.proxy = proxy34;
        okHttpClient25.proxy = proxy34;
        okHttpClient11.proxy = proxy34;
        com.squareup.okhttp.OkAuthenticator okAuthenticator38 = okHttpClient11.getAuthenticator();
        java.net.Proxy proxy39 = okHttpClient11.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient40 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector41 = null;
        okHttpClient40.proxySelector = proxySelector41;
        java.net.ProxySelector proxySelector43 = okHttpClient40.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier44 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient45 = okHttpClient40.setHostnameVerifier(hostnameVerifier44);
        boolean boolean46 = okHttpClient40.getFollowProtocolRedirects();
        com.squareup.okhttp.ConnectionPool connectionPool49 = new com.squareup.okhttp.ConnectionPool((int) 'a', (long) (byte) -1);
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient40.setConnectionPool(connectionPool49);
        com.squareup.okhttp.OkAuthenticator okAuthenticator51 = okHttpClient40.getAuthenticator();
        com.squareup.okhttp.OkHttpClient okHttpClient52 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler53 = okHttpClient52.getCookieHandler();
        boolean boolean54 = okHttpClient52.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator55 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient56 = okHttpClient52.setAuthenticator(okAuthenticator55);
        com.squareup.okhttp.OkHttpClient okHttpClient57 = okHttpClient52.copyWithDefaults();
        java.net.CookieHandler cookieHandler58 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient59 = okHttpClient52.setCookieHandler(cookieHandler58);
        com.squareup.okhttp.OkAuthenticator okAuthenticator60 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient61 = okHttpClient59.setAuthenticator(okAuthenticator60);
        com.squareup.okhttp.OkHttpClient okHttpClient62 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler63 = okHttpClient62.getCookieHandler();
        boolean boolean64 = okHttpClient62.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient65 = okHttpClient62.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool68 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int69 = connectionPool68.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient70 = okHttpClient65.setConnectionPool(connectionPool68);
        com.squareup.okhttp.ConnectionPool connectionPool71 = okHttpClient65.connectionPool;
        com.squareup.okhttp.OkHttpClient okHttpClient72 = okHttpClient59.setConnectionPool(connectionPool71);
        com.squareup.okhttp.OkHttpClient okHttpClient73 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler74 = okHttpClient73.getCookieHandler();
        boolean boolean75 = okHttpClient73.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient76 = okHttpClient73.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier77 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient78 = okHttpClient76.setHostnameVerifier(hostnameVerifier77);
        java.net.ResponseCache responseCache79 = okHttpClient78.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator80 = okHttpClient78.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient81 = okHttpClient59.setAuthenticator(okAuthenticator80);
        com.squareup.okhttp.OkHttpClient okHttpClient82 = okHttpClient40.setAuthenticator(okAuthenticator80);
        boolean boolean83 = proxy39.equals((java.lang.Object) okHttpClient40);
        java.net.Proxy.Type type84 = proxy39.type();
        okHttpClient9.proxy = proxy39;
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(proxySelector6);
        org.junit.Assert.assertNull(responseCache7);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertNull(cookieHandler12);
        org.junit.Assert.assertNotNull(routeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(proxy17);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNull(cookieHandler26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(cookieHandler29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNotNull(routeSet32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(proxy34);
        org.junit.Assert.assertNull(okAuthenticator38);
        org.junit.Assert.assertNotNull(proxy39);
        org.junit.Assert.assertNull(proxySelector43);
        org.junit.Assert.assertNotNull(okHttpClient45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(okHttpClient50);
        org.junit.Assert.assertNull(okAuthenticator51);
        org.junit.Assert.assertNull(cookieHandler53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(okHttpClient56);
        org.junit.Assert.assertNotNull(okHttpClient57);
        org.junit.Assert.assertNotNull(okHttpClient59);
        org.junit.Assert.assertNotNull(okHttpClient61);
        org.junit.Assert.assertNull(cookieHandler63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(okHttpClient65);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNotNull(okHttpClient70);
        org.junit.Assert.assertNotNull(connectionPool71);
        org.junit.Assert.assertNotNull(okHttpClient72);
        org.junit.Assert.assertNull(cookieHandler74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(okHttpClient76);
        org.junit.Assert.assertNotNull(okHttpClient78);
        org.junit.Assert.assertNull(responseCache79);
        org.junit.Assert.assertNotNull(okAuthenticator80);
        org.junit.Assert.assertNotNull(okHttpClient81);
        org.junit.Assert.assertNotNull(okHttpClient82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + type84 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type84.equals(java.net.Proxy.Type.DIRECT));
    }

    @Test
    public void test03327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03327");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setHostnameVerifier(hostnameVerifier4);
        java.net.ProxySelector proxySelector6 = java.net.ProxySelector.getDefault();
        okHttpClient0.proxySelector = proxySelector6;
        java.net.CookieHandler cookieHandler8 = null;
        okHttpClient0.cookieHandler = cookieHandler8;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler11 = okHttpClient10.getCookieHandler();
        boolean boolean12 = okHttpClient10.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient10.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient13.setHostnameVerifier(hostnameVerifier14);
        java.net.ResponseCache responseCache16 = okHttpClient15.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator17 = okHttpClient15.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = okHttpClient15.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory19 = okHttpClient15.getSslSocketFactory();
        java.lang.String[] strArray20 = sSLSocketFactory19.getSupportedCipherSuites();
        java.lang.String[] strArray21 = sSLSocketFactory19.getDefaultCipherSuites();
        okHttpClient0.sslSocketFactory = sSLSocketFactory19;
        java.net.Socket socket23 = sSLSocketFactory19.createSocket();
        java.net.Socket socket24 = sSLSocketFactory19.createSocket();
        java.net.Socket socket25 = sSLSocketFactory19.createSocket();
        java.net.InetAddress inetAddress28 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket30 = sSLSocketFactory19.createSocket("DIRECT", 1, inetAddress28, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.net.UnknownHostException; message: DIRECT");
        } catch (java.net.UnknownHostException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNotNull(okHttpClient5);
// flaky:         org.junit.Assert.assertNull(proxySelector6);
        org.junit.Assert.assertNull(cookieHandler11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNull(responseCache16);
        org.junit.Assert.assertNotNull(okAuthenticator17);
        org.junit.Assert.assertNull(hostnameVerifier18);
        org.junit.Assert.assertNotNull(sSLSocketFactory19);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(socket23);
        org.junit.Assert.assertEquals(socket23.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(socket24);
        org.junit.Assert.assertEquals(socket24.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(socket25);
        org.junit.Assert.assertEquals(socket25.toString(), "Socket[unconnected]");
    }

    @Test
    public void test03328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03328");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier6 = okHttpClient0.hostnameVerifier;
        java.net.ProxySelector proxySelector7 = java.net.ProxySelector.getDefault();
        okHttpClient0.proxySelector = proxySelector7;
        okHttpClient0.followProtocolRedirects = true;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector12 = null;
        okHttpClient11.proxySelector = proxySelector12;
        java.net.ProxySelector proxySelector14 = okHttpClient11.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient11.setHostnameVerifier(hostnameVerifier15);
        java.net.ProxySelector proxySelector17 = okHttpClient11.proxySelector;
        java.net.ResponseCache responseCache18 = okHttpClient11.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet19 = okHttpClient11.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler21 = okHttpClient20.getCookieHandler();
        boolean boolean22 = okHttpClient20.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient20.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool26 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int27 = connectionPool26.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient23.setConnectionPool(connectionPool26);
        com.squareup.okhttp.OkHttpClient okHttpClient29 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector30 = null;
        okHttpClient29.proxySelector = proxySelector30;
        java.net.ProxySelector proxySelector32 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient29.setProxySelector(proxySelector32);
        java.net.ProxySelector proxySelector34 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient29.setProxySelector(proxySelector34);
        okHttpClient28.proxySelector = proxySelector34;
        javax.net.ssl.HostnameVerifier hostnameVerifier37 = okHttpClient28.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient11.setHostnameVerifier(hostnameVerifier37);
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient0.setHostnameVerifier(hostnameVerifier37);
        java.net.Proxy proxy40 = okHttpClient0.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient41 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.OkAuthenticator okAuthenticator42 = okHttpClient0.authenticator;
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(hostnameVerifier6);
// flaky:         org.junit.Assert.assertNull(proxySelector7);
        org.junit.Assert.assertNull(proxySelector14);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNull(proxySelector17);
        org.junit.Assert.assertNull(responseCache18);
        org.junit.Assert.assertNotNull(routeSet19);
        org.junit.Assert.assertNull(cookieHandler21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNotNull(okHttpClient33);
// flaky:         org.junit.Assert.assertNull(proxySelector34);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNotNull(hostnameVerifier37);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNotNull(okHttpClient39);
        org.junit.Assert.assertNull(proxy40);
        org.junit.Assert.assertNotNull(okHttpClient41);
        org.junit.Assert.assertNull(okAuthenticator42);
    }

    @Test
    public void test03329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03329");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier6 = okHttpClient0.hostnameVerifier;
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = okHttpClient0.hostnameVerifier;
        java.net.ResponseCache responseCache8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient0.setResponseCache(responseCache8);
        javax.net.ssl.HostnameVerifier hostnameVerifier10 = okHttpClient9.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = okHttpClient11.hostnameVerifier;
        java.net.ResponseCache responseCache13 = okHttpClient11.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator14 = okHttpClient11.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler16 = okHttpClient15.getCookieHandler();
        boolean boolean17 = okHttpClient15.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient15.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier19 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient18.setHostnameVerifier(hostnameVerifier19);
        java.net.ResponseCache responseCache21 = okHttpClient20.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator22 = okHttpClient20.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier23 = okHttpClient20.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory24 = okHttpClient20.getSslSocketFactory();
        java.lang.String[] strArray25 = sSLSocketFactory24.getSupportedCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient11.setSSLSocketFactory(sSLSocketFactory24);
        com.squareup.okhttp.OkHttpClient okHttpClient27 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector28 = null;
        okHttpClient27.proxySelector = proxySelector28;
        java.net.ProxySelector proxySelector30 = okHttpClient27.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier31 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient27.setHostnameVerifier(hostnameVerifier31);
        java.net.ProxySelector proxySelector33 = okHttpClient27.proxySelector;
        java.net.ResponseCache responseCache34 = okHttpClient27.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet35 = okHttpClient27.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient36 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler37 = okHttpClient36.getCookieHandler();
        boolean boolean38 = okHttpClient36.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient36.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool42 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int43 = connectionPool42.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient44 = okHttpClient39.setConnectionPool(connectionPool42);
        com.squareup.okhttp.OkHttpClient okHttpClient45 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector46 = null;
        okHttpClient45.proxySelector = proxySelector46;
        java.net.ProxySelector proxySelector48 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient49 = okHttpClient45.setProxySelector(proxySelector48);
        java.net.ProxySelector proxySelector50 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient51 = okHttpClient45.setProxySelector(proxySelector50);
        okHttpClient44.proxySelector = proxySelector50;
        javax.net.ssl.HostnameVerifier hostnameVerifier53 = okHttpClient44.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient54 = okHttpClient27.setHostnameVerifier(hostnameVerifier53);
        com.squareup.okhttp.OkHttpClient okHttpClient55 = okHttpClient26.setHostnameVerifier(hostnameVerifier53);
        com.squareup.okhttp.OkHttpClient okHttpClient56 = okHttpClient9.setHostnameVerifier(hostnameVerifier53);
        java.net.CookieHandler cookieHandler57 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient58 = okHttpClient9.setCookieHandler(cookieHandler57);
        com.squareup.okhttp.ConnectionPool connectionPool61 = new com.squareup.okhttp.ConnectionPool(1, 100L);
        com.squareup.okhttp.OkHttpClient okHttpClient62 = okHttpClient9.setConnectionPool(connectionPool61);
        com.squareup.okhttp.Connection connection63 = null;
        // The following exception was thrown during execution in test generation
        try {
            connectionPool61.recycle(connection63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(hostnameVerifier6);
        org.junit.Assert.assertNull(hostnameVerifier7);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNull(hostnameVerifier10);
        org.junit.Assert.assertNull(hostnameVerifier12);
        org.junit.Assert.assertNull(responseCache13);
        org.junit.Assert.assertNull(okAuthenticator14);
        org.junit.Assert.assertNull(cookieHandler16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNull(responseCache21);
        org.junit.Assert.assertNotNull(okAuthenticator22);
        org.junit.Assert.assertNull(hostnameVerifier23);
        org.junit.Assert.assertNotNull(sSLSocketFactory24);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNull(proxySelector30);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertNull(proxySelector33);
        org.junit.Assert.assertNull(responseCache34);
        org.junit.Assert.assertNotNull(routeSet35);
        org.junit.Assert.assertNull(cookieHandler37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(okHttpClient39);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(okHttpClient44);
        org.junit.Assert.assertNotNull(okHttpClient49);
// flaky:         org.junit.Assert.assertNull(proxySelector50);
        org.junit.Assert.assertNotNull(okHttpClient51);
        org.junit.Assert.assertNotNull(hostnameVerifier53);
        org.junit.Assert.assertNotNull(okHttpClient54);
        org.junit.Assert.assertNotNull(okHttpClient55);
        org.junit.Assert.assertNotNull(okHttpClient56);
        org.junit.Assert.assertNotNull(okHttpClient58);
        org.junit.Assert.assertNotNull(okHttpClient62);
    }

    @Test
    public void test03330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03330");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet4 = okHttpClient3.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient3.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector7 = null;
        okHttpClient6.proxySelector = proxySelector7;
        java.net.ProxySelector proxySelector9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient6.setProxySelector(proxySelector9);
        java.net.ProxySelector proxySelector11 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient6.setProxySelector(proxySelector11);
        java.net.ProxySelector.setDefault(proxySelector11);
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient5.setProxySelector(proxySelector11);
        boolean boolean15 = okHttpClient14.getFollowProtocolRedirects();
        java.net.Proxy proxy16 = okHttpClient14.proxy;
        java.net.CookieHandler cookieHandler17 = null;
        okHttpClient14.cookieHandler = cookieHandler17;
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertNotNull(routeSet4);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNotNull(okHttpClient10);
// flaky:         org.junit.Assert.assertNull(proxySelector11);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertNotNull(okHttpClient14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(proxy16);
    }

    @Test
    public void test03331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03331");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray2 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet3 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet3, routeArray2);
        okHttpClient0.failedRoutes = routeSet3;
        java.net.Proxy proxy6 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient7.setCookieHandler(cookieHandler8);
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient7.setFollowProtocolRedirects(true);
        boolean boolean12 = proxy6.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient0.setProxy(proxy6);
        com.squareup.okhttp.OkAuthenticator okAuthenticator14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient13.setAuthenticator(okAuthenticator14);
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient15.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient15.setFollowProtocolRedirects(true);
        com.squareup.okhttp.OkHttpClient okHttpClient19 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler20 = okHttpClient19.getCookieHandler();
        boolean boolean21 = okHttpClient19.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient19.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet23 = okHttpClient22.failedRoutes;
        boolean boolean24 = okHttpClient22.getFollowProtocolRedirects();
        java.net.Proxy proxy25 = java.net.Proxy.NO_PROXY;
        okHttpClient22.proxy = proxy25;
        java.net.Proxy.Type type27 = proxy25.type();
        okHttpClient18.proxy = proxy25;
        java.net.Proxy.Type type29 = proxy25.type();
        com.squareup.okhttp.OkHttpClient okHttpClient30 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler31 = okHttpClient30.getCookieHandler();
        boolean boolean32 = okHttpClient30.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient30.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool36 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int37 = connectionPool36.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient33.setConnectionPool(connectionPool36);
        javax.net.ssl.HostnameVerifier hostnameVerifier39 = null;
        okHttpClient33.hostnameVerifier = hostnameVerifier39;
        java.net.Proxy proxy41 = okHttpClient33.getProxy();
        okHttpClient33.followProtocolRedirects = true;
        com.squareup.okhttp.OkHttpClient okHttpClient44 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler45 = okHttpClient44.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray46 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet47 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet47, routeArray46);
        okHttpClient44.failedRoutes = routeSet47;
        java.net.Proxy proxy50 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient51 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler52 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient53 = okHttpClient51.setCookieHandler(cookieHandler52);
        com.squareup.okhttp.OkHttpClient okHttpClient55 = okHttpClient51.setFollowProtocolRedirects(true);
        boolean boolean56 = proxy50.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient57 = okHttpClient44.setProxy(proxy50);
        java.net.Proxy proxy58 = okHttpClient57.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient59 = okHttpClient33.setProxy(proxy58);
        com.squareup.okhttp.OkHttpClient okHttpClient60 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector61 = null;
        okHttpClient60.proxySelector = proxySelector61;
        java.net.ProxySelector proxySelector63 = okHttpClient60.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier64 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient65 = okHttpClient60.setHostnameVerifier(hostnameVerifier64);
        java.net.ProxySelector proxySelector66 = okHttpClient60.proxySelector;
        java.net.CookieHandler cookieHandler67 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient68 = okHttpClient60.setCookieHandler(cookieHandler67);
        com.squareup.okhttp.OkAuthenticator okAuthenticator69 = okHttpClient60.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool72 = new com.squareup.okhttp.ConnectionPool(1, 0L);
        okHttpClient60.connectionPool = connectionPool72;
        com.squareup.okhttp.OkHttpClient okHttpClient74 = okHttpClient33.setConnectionPool(connectionPool72);
        boolean boolean75 = proxy25.equals((java.lang.Object) okHttpClient74);
        java.lang.String str76 = proxy25.toString();
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertNotNull(routeArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(proxy6);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNull(cookieHandler20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNotNull(routeSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(proxy25);
        org.junit.Assert.assertTrue("'" + type27 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type27.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertTrue("'" + type29 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type29.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(cookieHandler31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(okHttpClient33);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNull(proxy41);
        org.junit.Assert.assertNull(cookieHandler45);
        org.junit.Assert.assertNotNull(routeArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(proxy50);
        org.junit.Assert.assertNotNull(okHttpClient53);
        org.junit.Assert.assertNotNull(okHttpClient55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(okHttpClient57);
        org.junit.Assert.assertNotNull(proxy58);
        org.junit.Assert.assertNotNull(okHttpClient59);
        org.junit.Assert.assertNull(proxySelector63);
        org.junit.Assert.assertNotNull(okHttpClient65);
        org.junit.Assert.assertNull(proxySelector66);
        org.junit.Assert.assertNotNull(okHttpClient68);
        org.junit.Assert.assertNull(okAuthenticator69);
        org.junit.Assert.assertNotNull(okHttpClient74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "DIRECT" + "'", str76, "DIRECT");
    }

    @Test
    public void test03332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03332");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setHostnameVerifier(hostnameVerifier4);
        java.net.ResponseCache responseCache6 = okHttpClient5.responseCache;
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool((int) '4', 100L);
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient5.setConnectionPool(connectionPool9);
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler12 = okHttpClient11.getCookieHandler();
        boolean boolean13 = okHttpClient11.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient11.setAuthenticator(okAuthenticator14);
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient11.copyWithDefaults();
        java.net.CookieHandler cookieHandler17 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient11.setCookieHandler(cookieHandler17);
        com.squareup.okhttp.OkAuthenticator okAuthenticator19 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient18.setAuthenticator(okAuthenticator19);
        com.squareup.okhttp.OkHttpClient okHttpClient21 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler22 = okHttpClient21.getCookieHandler();
        boolean boolean23 = okHttpClient21.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient21.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool27 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int28 = connectionPool27.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient24.setConnectionPool(connectionPool27);
        com.squareup.okhttp.ConnectionPool connectionPool30 = okHttpClient24.connectionPool;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient18.setConnectionPool(connectionPool30);
        com.squareup.okhttp.Address address32 = null;
        com.squareup.okhttp.Connection connection33 = connectionPool30.get(address32);
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient10.setConnectionPool(connectionPool30);
        java.net.CookieHandler cookieHandler35 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient10.setCookieHandler(cookieHandler35);
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache37 = okHttpClient10.okResponseCache();
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(responseCache6);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertNull(cookieHandler12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNull(cookieHandler22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(okHttpClient29);
        org.junit.Assert.assertNotNull(connectionPool30);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNull(connection33);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNull(okResponseCache37);
    }

    @Test
    public void test03333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03333");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        java.net.Proxy proxy5 = okHttpClient0.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient0.copyWithDefaults();
        java.net.CookieHandler cookieHandler7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient0.setCookieHandler(cookieHandler7);
        com.squareup.okhttp.OkHttpClient okHttpClient9 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier10 = okHttpClient9.hostnameVerifier;
        java.net.ResponseCache responseCache11 = okHttpClient9.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator12 = okHttpClient9.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler14 = okHttpClient13.getCookieHandler();
        boolean boolean15 = okHttpClient13.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient13.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier17 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient16.setHostnameVerifier(hostnameVerifier17);
        java.net.ResponseCache responseCache19 = okHttpClient18.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator20 = okHttpClient18.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier21 = okHttpClient18.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory22 = okHttpClient18.getSslSocketFactory();
        java.lang.String[] strArray23 = sSLSocketFactory22.getSupportedCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient9.setSSLSocketFactory(sSLSocketFactory22);
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient8.setSSLSocketFactory(sSLSocketFactory22);
        boolean boolean26 = okHttpClient25.followProtocolRedirects;
        java.net.CookieHandler cookieHandler27 = okHttpClient25.cookieHandler;
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(proxy5);
        org.junit.Assert.assertNotNull(okHttpClient6);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertNull(hostnameVerifier10);
        org.junit.Assert.assertNull(responseCache11);
        org.junit.Assert.assertNull(okAuthenticator12);
        org.junit.Assert.assertNull(cookieHandler14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNull(responseCache19);
        org.junit.Assert.assertNotNull(okAuthenticator20);
        org.junit.Assert.assertNull(hostnameVerifier21);
        org.junit.Assert.assertNotNull(sSLSocketFactory22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNotNull(okHttpClient25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(cookieHandler27);
    }

    @Test
    public void test03334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03334");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        java.net.Proxy proxy5 = okHttpClient0.proxy;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory6 = okHttpClient0.getSslSocketFactory();
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(proxy5);
        org.junit.Assert.assertNull(sSLSocketFactory6);
    }

    @Test
    public void test03335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03335");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setHostnameVerifier(hostnameVerifier4);
        java.net.ResponseCache responseCache6 = okHttpClient5.responseCache;
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool((int) '4', 100L);
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient5.setConnectionPool(connectionPool9);
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler12 = okHttpClient11.getCookieHandler();
        boolean boolean13 = okHttpClient11.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient11.setAuthenticator(okAuthenticator14);
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient11.copyWithDefaults();
        java.net.CookieHandler cookieHandler17 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient11.setCookieHandler(cookieHandler17);
        com.squareup.okhttp.OkAuthenticator okAuthenticator19 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient18.setAuthenticator(okAuthenticator19);
        com.squareup.okhttp.OkHttpClient okHttpClient21 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler22 = okHttpClient21.getCookieHandler();
        boolean boolean23 = okHttpClient21.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient21.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool27 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int28 = connectionPool27.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient24.setConnectionPool(connectionPool27);
        com.squareup.okhttp.ConnectionPool connectionPool30 = okHttpClient24.connectionPool;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient18.setConnectionPool(connectionPool30);
        com.squareup.okhttp.Address address32 = null;
        com.squareup.okhttp.Connection connection33 = connectionPool30.get(address32);
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient10.setConnectionPool(connectionPool30);
        java.net.URL uRL35 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.HttpURLConnection httpURLConnection36 = okHttpClient34.open(uRL35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(responseCache6);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertNull(cookieHandler12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNull(cookieHandler22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(okHttpClient29);
        org.junit.Assert.assertNotNull(connectionPool30);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNull(connection33);
        org.junit.Assert.assertNotNull(okHttpClient34);
    }

    @Test
    public void test03336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03336");
        com.squareup.okhttp.ConnectionPool connectionPool2 = new com.squareup.okhttp.ConnectionPool((int) (byte) 100, (long) (short) -1);
        com.squareup.okhttp.Connection connection3 = null;
        // The following exception was thrown during execution in test generation
        try {
            connectionPool2.recycle(connection3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test03337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03337");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        java.net.ResponseCache responseCache2 = null;
        okHttpClient0.responseCache = responseCache2;
        boolean boolean4 = okHttpClient0.followProtocolRedirects;
        java.net.CookieHandler cookieHandler5 = okHttpClient0.cookieHandler;
        java.util.Set<com.squareup.okhttp.Route> routeSet6 = okHttpClient0.failedRoutes;
        java.net.ProxySelector proxySelector7 = okHttpClient0.proxySelector;
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertNotNull(routeSet6);
        org.junit.Assert.assertNull(proxySelector7);
    }

    @Test
    public void test03338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03338");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        java.net.CookieHandler cookieHandler5 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler7 = okHttpClient6.getCookieHandler();
        boolean boolean8 = okHttpClient6.getFollowProtocolRedirects();
        java.net.ProxySelector proxySelector9 = okHttpClient6.proxySelector;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector11 = null;
        okHttpClient10.proxySelector = proxySelector11;
        java.net.ProxySelector proxySelector13 = okHttpClient10.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient10.setHostnameVerifier(hostnameVerifier14);
        java.net.ProxySelector proxySelector16 = okHttpClient10.proxySelector;
        java.net.ResponseCache responseCache17 = okHttpClient10.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet18 = okHttpClient10.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler20 = okHttpClient19.getCookieHandler();
        boolean boolean21 = okHttpClient19.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient19.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool25 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int26 = connectionPool25.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient22.setConnectionPool(connectionPool25);
        com.squareup.okhttp.OkHttpClient okHttpClient28 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector29 = null;
        okHttpClient28.proxySelector = proxySelector29;
        java.net.ProxySelector proxySelector31 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient28.setProxySelector(proxySelector31);
        java.net.ProxySelector proxySelector33 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient28.setProxySelector(proxySelector33);
        okHttpClient27.proxySelector = proxySelector33;
        javax.net.ssl.HostnameVerifier hostnameVerifier36 = okHttpClient27.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient10.setHostnameVerifier(hostnameVerifier36);
        java.net.Proxy proxy38 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress39 = proxy38.address();
        com.squareup.okhttp.OkHttpClient okHttpClient40 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector41 = null;
        okHttpClient40.proxySelector = proxySelector41;
        com.squareup.okhttp.ConnectionPool connectionPool43 = okHttpClient40.connectionPool;
        com.squareup.okhttp.ConnectionPool connectionPool44 = okHttpClient40.getConnectionPool();
        boolean boolean45 = proxy38.equals((java.lang.Object) okHttpClient40);
        okHttpClient10.proxy = proxy38;
        com.squareup.okhttp.OkHttpClient okHttpClient47 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler48 = okHttpClient47.getCookieHandler();
        boolean boolean49 = okHttpClient47.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient47.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier51 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient52 = okHttpClient50.setHostnameVerifier(hostnameVerifier51);
        java.net.ResponseCache responseCache53 = okHttpClient52.getResponseCache();
        java.net.ProxySelector proxySelector54 = okHttpClient52.getProxySelector();
        boolean boolean55 = proxy38.equals((java.lang.Object) proxySelector54);
        com.squareup.okhttp.OkHttpClient okHttpClient56 = okHttpClient6.setProxy(proxy38);
        java.net.CookieHandler cookieHandler57 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient58 = okHttpClient6.setCookieHandler(cookieHandler57);
        java.net.Proxy proxy59 = okHttpClient58.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient60 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler61 = okHttpClient60.getCookieHandler();
        java.net.ResponseCache responseCache62 = null;
        okHttpClient60.responseCache = responseCache62;
        boolean boolean64 = okHttpClient60.followProtocolRedirects;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory65 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient66 = okHttpClient60.setSSLSocketFactory(sSLSocketFactory65);
        java.net.Proxy proxy67 = okHttpClient66.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient68 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector69 = null;
        okHttpClient68.proxySelector = proxySelector69;
        java.net.ProxySelector proxySelector71 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient72 = okHttpClient68.setProxySelector(proxySelector71);
        java.net.ProxySelector proxySelector73 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient74 = okHttpClient68.setProxySelector(proxySelector73);
        java.net.ProxySelector.setDefault(proxySelector73);
        okHttpClient66.proxySelector = proxySelector73;
        boolean boolean77 = proxy59.equals((java.lang.Object) proxySelector73);
        com.squareup.okhttp.OkHttpClient okHttpClient78 = okHttpClient0.setProxySelector(proxySelector73);
        java.net.CookieHandler cookieHandler79 = okHttpClient0.cookieHandler;
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertNull(cookieHandler7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(proxySelector9);
        org.junit.Assert.assertNull(proxySelector13);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNull(proxySelector16);
        org.junit.Assert.assertNull(responseCache17);
        org.junit.Assert.assertNotNull(routeSet18);
        org.junit.Assert.assertNull(cookieHandler20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNotNull(okHttpClient32);
// flaky:         org.junit.Assert.assertNull(proxySelector33);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertNotNull(hostnameVerifier36);
        org.junit.Assert.assertNotNull(okHttpClient37);
        org.junit.Assert.assertNotNull(proxy38);
        org.junit.Assert.assertNull(socketAddress39);
        org.junit.Assert.assertNull(connectionPool43);
        org.junit.Assert.assertNull(connectionPool44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(cookieHandler48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(okHttpClient50);
        org.junit.Assert.assertNotNull(okHttpClient52);
        org.junit.Assert.assertNull(responseCache53);
// flaky:         org.junit.Assert.assertNull(proxySelector54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(okHttpClient56);
        org.junit.Assert.assertNotNull(okHttpClient58);
        org.junit.Assert.assertNotNull(proxy59);
        org.junit.Assert.assertNull(cookieHandler61);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(okHttpClient66);
        org.junit.Assert.assertNull(proxy67);
        org.junit.Assert.assertNotNull(okHttpClient72);
// flaky:         org.junit.Assert.assertNull(proxySelector73);
        org.junit.Assert.assertNotNull(okHttpClient74);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(okHttpClient78);
        org.junit.Assert.assertNull(cookieHandler79);
    }

    @Test
    public void test03339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03339");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient3.setHostnameVerifier(hostnameVerifier4);
        java.net.ResponseCache responseCache6 = okHttpClient5.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator7 = okHttpClient5.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = okHttpClient5.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory9 = okHttpClient5.getSslSocketFactory();
        java.lang.String[] strArray10 = sSLSocketFactory9.getDefaultCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler12 = okHttpClient11.getCookieHandler();
        boolean boolean13 = okHttpClient11.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient11.setAuthenticator(okAuthenticator14);
        java.net.Proxy proxy16 = okHttpClient11.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient11.copyWithDefaults();
        java.net.CookieHandler cookieHandler18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient11.setCookieHandler(cookieHandler18);
        com.squareup.okhttp.OkHttpClient okHttpClient20 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier21 = okHttpClient20.hostnameVerifier;
        java.net.ResponseCache responseCache22 = okHttpClient20.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator23 = okHttpClient20.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler25 = okHttpClient24.getCookieHandler();
        boolean boolean26 = okHttpClient24.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient24.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier28 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient27.setHostnameVerifier(hostnameVerifier28);
        java.net.ResponseCache responseCache30 = okHttpClient29.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator31 = okHttpClient29.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier32 = okHttpClient29.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory33 = okHttpClient29.getSslSocketFactory();
        java.lang.String[] strArray34 = sSLSocketFactory33.getSupportedCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient20.setSSLSocketFactory(sSLSocketFactory33);
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient19.setSSLSocketFactory(sSLSocketFactory33);
        java.net.Socket socket37 = sSLSocketFactory33.createSocket();
        java.io.InputStream inputStream38 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket40 = sSLSocketFactory9.createSocket(socket37, inputStream38, false);
            org.junit.Assert.fail("Expected exception of type java.net.SocketException; message: Underlying socket is not connected");
        } catch (java.net.SocketException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(responseCache6);
        org.junit.Assert.assertNotNull(okAuthenticator7);
        org.junit.Assert.assertNull(hostnameVerifier8);
        org.junit.Assert.assertNotNull(sSLSocketFactory9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNull(cookieHandler12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNull(proxy16);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNull(hostnameVerifier21);
        org.junit.Assert.assertNull(responseCache22);
        org.junit.Assert.assertNull(okAuthenticator23);
        org.junit.Assert.assertNull(cookieHandler25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNotNull(okHttpClient29);
        org.junit.Assert.assertNull(responseCache30);
        org.junit.Assert.assertNotNull(okAuthenticator31);
        org.junit.Assert.assertNull(hostnameVerifier32);
        org.junit.Assert.assertNotNull(sSLSocketFactory33);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNotNull(socket37);
        org.junit.Assert.assertEquals(socket37.toString(), "Socket[unconnected]");
    }

    @Test
    public void test03340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03340");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setHostnameVerifier(hostnameVerifier4);
        java.net.ResponseCache responseCache6 = null;
        okHttpClient0.responseCache = responseCache6;
        java.net.ResponseCache responseCache8 = okHttpClient0.getResponseCache();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory9 = okHttpClient0.sslSocketFactory;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler11 = okHttpClient10.getCookieHandler();
        boolean boolean12 = okHttpClient10.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient10.setAuthenticator(okAuthenticator13);
        java.net.ResponseCache responseCache15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient10.setResponseCache(responseCache15);
        com.squareup.okhttp.ConnectionPool connectionPool19 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool19.evictAll();
        okHttpClient10.connectionPool = connectionPool19;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory22 = okHttpClient10.sslSocketFactory;
        java.net.Proxy proxy23 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient10.setProxy(proxy23);
        com.squareup.okhttp.OkHttpClient okHttpClient25 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler26 = okHttpClient25.getCookieHandler();
        boolean boolean27 = okHttpClient25.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient25.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet29 = okHttpClient28.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient30 = okHttpClient28.copyWithDefaults();
        java.net.ProxySelector proxySelector31 = okHttpClient28.getProxySelector();
        okHttpClient24.proxySelector = proxySelector31;
        okHttpClient24.followProtocolRedirects = false;
        com.squareup.okhttp.OkHttpClient okHttpClient35 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector36 = null;
        okHttpClient35.proxySelector = proxySelector36;
        java.net.ProxySelector proxySelector38 = okHttpClient35.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier39 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient40 = okHttpClient35.setHostnameVerifier(hostnameVerifier39);
        boolean boolean41 = okHttpClient35.getFollowProtocolRedirects();
        com.squareup.okhttp.ConnectionPool connectionPool44 = new com.squareup.okhttp.ConnectionPool((int) 'a', (long) (byte) -1);
        com.squareup.okhttp.OkHttpClient okHttpClient45 = okHttpClient35.setConnectionPool(connectionPool44);
        com.squareup.okhttp.OkHttpClient okHttpClient46 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler47 = okHttpClient46.getCookieHandler();
        boolean boolean48 = okHttpClient46.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient49 = okHttpClient46.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier50 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient51 = okHttpClient49.setHostnameVerifier(hostnameVerifier50);
        java.net.ResponseCache responseCache52 = okHttpClient51.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator53 = okHttpClient51.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier54 = okHttpClient51.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory55 = okHttpClient51.getSslSocketFactory();
        okHttpClient35.sslSocketFactory = sSLSocketFactory55;
        java.net.Socket socket57 = sSLSocketFactory55.createSocket();
        okHttpClient24.sslSocketFactory = sSLSocketFactory55;
        com.squareup.okhttp.OkHttpClient okHttpClient60 = okHttpClient24.setFollowProtocolRedirects(true);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory61 = okHttpClient60.sslSocketFactory;
        com.squareup.okhttp.OkHttpClient okHttpClient62 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory61);
        com.squareup.okhttp.OkHttpClient okHttpClient63 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier64 = okHttpClient63.hostnameVerifier;
        java.net.ResponseCache responseCache65 = okHttpClient63.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator66 = okHttpClient63.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient67 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler68 = okHttpClient67.getCookieHandler();
        boolean boolean69 = okHttpClient67.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient70 = okHttpClient67.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier71 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient72 = okHttpClient70.setHostnameVerifier(hostnameVerifier71);
        java.net.ResponseCache responseCache73 = okHttpClient72.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator74 = okHttpClient72.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier75 = okHttpClient72.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory76 = okHttpClient72.getSslSocketFactory();
        java.lang.String[] strArray77 = sSLSocketFactory76.getSupportedCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient78 = okHttpClient63.setSSLSocketFactory(sSLSocketFactory76);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory79 = okHttpClient63.getSslSocketFactory();
        java.net.Socket socket80 = sSLSocketFactory79.createSocket();
        java.lang.String[] strArray81 = sSLSocketFactory79.getSupportedCipherSuites();
        java.lang.String[] strArray82 = sSLSocketFactory79.getSupportedCipherSuites();
        java.net.Socket socket83 = sSLSocketFactory79.createSocket();
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket87 = sSLSocketFactory61.createSocket(socket83, "hi!", 10, true);
            org.junit.Assert.fail("Expected exception of type java.net.SocketException; message: Underlying socket is not connected");
        } catch (java.net.SocketException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(responseCache8);
        org.junit.Assert.assertNull(sSLSocketFactory9);
        org.junit.Assert.assertNull(cookieHandler11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(okHttpClient14);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNull(sSLSocketFactory22);
        org.junit.Assert.assertNotNull(proxy23);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNull(cookieHandler26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNotNull(routeSet29);
        org.junit.Assert.assertNotNull(okHttpClient30);
// flaky:         org.junit.Assert.assertNull(proxySelector31);
        org.junit.Assert.assertNull(proxySelector38);
        org.junit.Assert.assertNotNull(okHttpClient40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(okHttpClient45);
        org.junit.Assert.assertNull(cookieHandler47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(okHttpClient49);
        org.junit.Assert.assertNotNull(okHttpClient51);
        org.junit.Assert.assertNull(responseCache52);
        org.junit.Assert.assertNotNull(okAuthenticator53);
        org.junit.Assert.assertNull(hostnameVerifier54);
        org.junit.Assert.assertNotNull(sSLSocketFactory55);
        org.junit.Assert.assertNotNull(socket57);
        org.junit.Assert.assertEquals(socket57.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(okHttpClient60);
        org.junit.Assert.assertNotNull(sSLSocketFactory61);
        org.junit.Assert.assertNotNull(okHttpClient62);
        org.junit.Assert.assertNull(hostnameVerifier64);
        org.junit.Assert.assertNull(responseCache65);
        org.junit.Assert.assertNull(okAuthenticator66);
        org.junit.Assert.assertNull(cookieHandler68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(okHttpClient70);
        org.junit.Assert.assertNotNull(okHttpClient72);
        org.junit.Assert.assertNull(responseCache73);
        org.junit.Assert.assertNotNull(okAuthenticator74);
        org.junit.Assert.assertNull(hostnameVerifier75);
        org.junit.Assert.assertNotNull(sSLSocketFactory76);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(okHttpClient78);
        org.junit.Assert.assertNotNull(sSLSocketFactory79);
        org.junit.Assert.assertNotNull(socket80);
        org.junit.Assert.assertEquals(socket80.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertNotNull(socket83);
        org.junit.Assert.assertEquals(socket83.toString(), "Socket[unconnected]");
    }

    @Test
    public void test03341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03341");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        java.net.ResponseCache responseCache2 = null;
        okHttpClient0.responseCache = responseCache2;
        boolean boolean4 = okHttpClient0.followProtocolRedirects;
        com.squareup.okhttp.ConnectionPool connectionPool7 = new com.squareup.okhttp.ConnectionPool((int) (short) -1, (long) (byte) 100);
        int int8 = connectionPool7.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient0.setConnectionPool(connectionPool7);
        com.squareup.okhttp.OkHttpClient okHttpClient10 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler11 = okHttpClient10.getCookieHandler();
        boolean boolean12 = okHttpClient10.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient10.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient13.setHostnameVerifier(hostnameVerifier14);
        java.net.ResponseCache responseCache16 = okHttpClient15.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator17 = okHttpClient15.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = okHttpClient15.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory19 = okHttpClient15.getSslSocketFactory();
        java.lang.String[] strArray20 = sSLSocketFactory19.getSupportedCipherSuites();
        java.net.Socket socket21 = sSLSocketFactory19.createSocket();
        java.net.Socket socket22 = sSLSocketFactory19.createSocket();
        java.net.Socket socket23 = sSLSocketFactory19.createSocket();
        java.lang.String[] strArray24 = sSLSocketFactory19.getDefaultCipherSuites();
        java.lang.String[] strArray25 = sSLSocketFactory19.getDefaultCipherSuites();
        java.lang.String[] strArray26 = sSLSocketFactory19.getDefaultCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient9.setSSLSocketFactory(sSLSocketFactory19);
        java.net.InetAddress inetAddress28 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket30 = sSLSocketFactory19.createSocket(inetAddress28, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.net.ConnectException; message: Connection refused (Connection refused)");
        } catch (java.net.ConnectException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNull(cookieHandler11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNull(responseCache16);
        org.junit.Assert.assertNotNull(okAuthenticator17);
        org.junit.Assert.assertNull(hostnameVerifier18);
        org.junit.Assert.assertNotNull(sSLSocketFactory19);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(socket21);
        org.junit.Assert.assertEquals(socket21.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(socket22);
        org.junit.Assert.assertEquals(socket22.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(socket23);
        org.junit.Assert.assertEquals(socket23.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(okHttpClient27);
    }

    @Test
    public void test03342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03342");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool6 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int7 = connectionPool6.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient3.setConnectionPool(connectionPool6);
        com.squareup.okhttp.ConnectionPool connectionPool9 = okHttpClient3.connectionPool;
        java.net.ResponseCache responseCache10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient3.setResponseCache(responseCache10);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory12 = null;
        okHttpClient3.sslSocketFactory = sSLSocketFactory12;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector15 = null;
        okHttpClient14.proxySelector = proxySelector15;
        java.net.ProxySelector proxySelector17 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient14.setProxySelector(proxySelector17);
        com.squareup.okhttp.OkHttpClient okHttpClient19 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector20 = null;
        okHttpClient19.proxySelector = proxySelector20;
        java.net.ProxySelector proxySelector22 = okHttpClient19.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier23 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient19.setHostnameVerifier(hostnameVerifier23);
        com.squareup.okhttp.OkHttpClient okHttpClient25 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector26 = null;
        okHttpClient25.proxySelector = proxySelector26;
        java.net.ProxySelector proxySelector28 = okHttpClient25.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier29 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient30 = okHttpClient25.setHostnameVerifier(hostnameVerifier29);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory31 = okHttpClient30.sslSocketFactory;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler33 = okHttpClient32.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray34 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet35 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet35, routeArray34);
        okHttpClient32.failedRoutes = routeSet35;
        okHttpClient30.failedRoutes = routeSet35;
        okHttpClient19.failedRoutes = routeSet35;
        okHttpClient14.failedRoutes = routeSet35;
        com.squareup.okhttp.OkHttpClient okHttpClient41 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler42 = okHttpClient41.getCookieHandler();
        boolean boolean43 = okHttpClient41.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator44 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient45 = okHttpClient41.setAuthenticator(okAuthenticator44);
        java.net.ResponseCache responseCache46 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient47 = okHttpClient41.setResponseCache(responseCache46);
        com.squareup.okhttp.ConnectionPool connectionPool50 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool50.evictAll();
        okHttpClient41.connectionPool = connectionPool50;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory53 = okHttpClient41.sslSocketFactory;
        com.squareup.okhttp.ConnectionPool connectionPool54 = okHttpClient41.getConnectionPool();
        java.net.CookieHandler cookieHandler55 = null;
        okHttpClient41.cookieHandler = cookieHandler55;
        com.squareup.okhttp.ConnectionPool connectionPool59 = new com.squareup.okhttp.ConnectionPool((int) ' ', (long) ' ');
        okHttpClient41.connectionPool = connectionPool59;
        com.squareup.okhttp.OkHttpClient okHttpClient61 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler62 = okHttpClient61.getCookieHandler();
        boolean boolean63 = okHttpClient61.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator64 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient65 = okHttpClient61.setAuthenticator(okAuthenticator64);
        java.net.ResponseCache responseCache66 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient67 = okHttpClient61.setResponseCache(responseCache66);
        com.squareup.okhttp.ConnectionPool connectionPool70 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool70.evictAll();
        okHttpClient61.connectionPool = connectionPool70;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory73 = okHttpClient61.sslSocketFactory;
        java.net.Proxy proxy74 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient75 = okHttpClient61.setProxy(proxy74);
        java.net.ProxySelector proxySelector76 = okHttpClient61.getProxySelector();
        com.squareup.okhttp.ConnectionPool connectionPool77 = okHttpClient61.getConnectionPool();
        com.squareup.okhttp.OkHttpClient okHttpClient78 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler79 = okHttpClient78.getCookieHandler();
        boolean boolean80 = okHttpClient78.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient81 = okHttpClient78.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet82 = okHttpClient81.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient83 = okHttpClient81.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool86 = new com.squareup.okhttp.ConnectionPool((int) '4', (long) 100);
        com.squareup.okhttp.OkHttpClient okHttpClient87 = okHttpClient81.setConnectionPool(connectionPool86);
        javax.net.ssl.HostnameVerifier hostnameVerifier88 = okHttpClient87.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient89 = okHttpClient61.setHostnameVerifier(hostnameVerifier88);
        com.squareup.okhttp.OkHttpClient okHttpClient90 = okHttpClient41.setHostnameVerifier(hostnameVerifier88);
        com.squareup.okhttp.OkHttpClient okHttpClient91 = okHttpClient14.setHostnameVerifier(hostnameVerifier88);
        com.squareup.okhttp.OkHttpClient okHttpClient92 = okHttpClient3.setHostnameVerifier(hostnameVerifier88);
        java.net.CookieHandler cookieHandler93 = null;
        okHttpClient92.cookieHandler = cookieHandler93;
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNull(proxySelector22);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNull(proxySelector28);
        org.junit.Assert.assertNotNull(okHttpClient30);
        org.junit.Assert.assertNull(sSLSocketFactory31);
        org.junit.Assert.assertNull(cookieHandler33);
        org.junit.Assert.assertNotNull(routeArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(cookieHandler42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(okHttpClient45);
        org.junit.Assert.assertNotNull(okHttpClient47);
        org.junit.Assert.assertNull(sSLSocketFactory53);
        org.junit.Assert.assertNotNull(connectionPool54);
        org.junit.Assert.assertNull(cookieHandler62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(okHttpClient65);
        org.junit.Assert.assertNotNull(okHttpClient67);
        org.junit.Assert.assertNull(sSLSocketFactory73);
        org.junit.Assert.assertNotNull(proxy74);
        org.junit.Assert.assertNotNull(okHttpClient75);
        org.junit.Assert.assertNull(proxySelector76);
        org.junit.Assert.assertNotNull(connectionPool77);
        org.junit.Assert.assertNull(cookieHandler79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(okHttpClient81);
        org.junit.Assert.assertNotNull(routeSet82);
        org.junit.Assert.assertNotNull(okHttpClient83);
        org.junit.Assert.assertNotNull(okHttpClient87);
        org.junit.Assert.assertNotNull(hostnameVerifier88);
        org.junit.Assert.assertNotNull(okHttpClient89);
        org.junit.Assert.assertNotNull(okHttpClient90);
        org.junit.Assert.assertNotNull(okHttpClient91);
        org.junit.Assert.assertNotNull(okHttpClient92);
    }

    @Test
    public void test03343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03343");
        com.squareup.okhttp.ConnectionPool connectionPool2 = new com.squareup.okhttp.ConnectionPool(100, 0L);
        com.squareup.okhttp.Address address3 = null;
        com.squareup.okhttp.Connection connection4 = connectionPool2.get(address3);
        org.junit.Assert.assertNull(connection4);
    }

    @Test
    public void test03344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03344");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector5 = null;
        okHttpClient4.proxySelector = proxySelector5;
        java.net.ProxySelector proxySelector7 = okHttpClient4.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient4.setHostnameVerifier(hostnameVerifier8);
        java.net.ProxySelector proxySelector10 = okHttpClient4.proxySelector;
        java.net.ResponseCache responseCache11 = okHttpClient4.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet12 = okHttpClient4.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler14 = okHttpClient13.getCookieHandler();
        boolean boolean15 = okHttpClient13.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient13.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool19 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int20 = connectionPool19.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient16.setConnectionPool(connectionPool19);
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector23 = null;
        okHttpClient22.proxySelector = proxySelector23;
        java.net.ProxySelector proxySelector25 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient22.setProxySelector(proxySelector25);
        java.net.ProxySelector proxySelector27 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient22.setProxySelector(proxySelector27);
        okHttpClient21.proxySelector = proxySelector27;
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = okHttpClient21.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient4.setHostnameVerifier(hostnameVerifier30);
        java.net.Proxy proxy32 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress33 = proxy32.address();
        com.squareup.okhttp.OkHttpClient okHttpClient34 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector35 = null;
        okHttpClient34.proxySelector = proxySelector35;
        com.squareup.okhttp.ConnectionPool connectionPool37 = okHttpClient34.connectionPool;
        com.squareup.okhttp.ConnectionPool connectionPool38 = okHttpClient34.getConnectionPool();
        boolean boolean39 = proxy32.equals((java.lang.Object) okHttpClient34);
        okHttpClient4.proxy = proxy32;
        com.squareup.okhttp.OkHttpClient okHttpClient41 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler42 = okHttpClient41.getCookieHandler();
        boolean boolean43 = okHttpClient41.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient44 = okHttpClient41.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier45 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient46 = okHttpClient44.setHostnameVerifier(hostnameVerifier45);
        java.net.ResponseCache responseCache47 = okHttpClient46.getResponseCache();
        java.net.ProxySelector proxySelector48 = okHttpClient46.getProxySelector();
        boolean boolean49 = proxy32.equals((java.lang.Object) proxySelector48);
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient0.setProxy(proxy32);
        com.squareup.okhttp.OkAuthenticator okAuthenticator51 = null;
        okHttpClient0.authenticator = okAuthenticator51;
        javax.net.ssl.HostnameVerifier hostnameVerifier53 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient54 = okHttpClient0.setHostnameVerifier(hostnameVerifier53);
        java.net.ResponseCache responseCache55 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient56 = okHttpClient54.setResponseCache(responseCache55);
        com.squareup.okhttp.OkAuthenticator okAuthenticator57 = okHttpClient56.getAuthenticator();
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNull(proxySelector7);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNull(proxySelector10);
        org.junit.Assert.assertNull(responseCache11);
        org.junit.Assert.assertNotNull(routeSet12);
        org.junit.Assert.assertNull(cookieHandler14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNotNull(okHttpClient26);
// flaky:         org.junit.Assert.assertNull(proxySelector27);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNotNull(hostnameVerifier30);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNotNull(proxy32);
        org.junit.Assert.assertNull(socketAddress33);
        org.junit.Assert.assertNull(connectionPool37);
        org.junit.Assert.assertNull(connectionPool38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(cookieHandler42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(okHttpClient44);
        org.junit.Assert.assertNotNull(okHttpClient46);
        org.junit.Assert.assertNull(responseCache47);
// flaky:         org.junit.Assert.assertNull(proxySelector48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(okHttpClient50);
        org.junit.Assert.assertNotNull(okHttpClient54);
        org.junit.Assert.assertNotNull(okHttpClient56);
        org.junit.Assert.assertNull(okAuthenticator57);
    }

    @Test
    public void test03345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03345");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setHostnameVerifier(hostnameVerifier4);
        java.net.ProxySelector proxySelector6 = okHttpClient0.proxySelector;
        java.net.ResponseCache responseCache7 = okHttpClient0.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet8 = okHttpClient0.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler10 = okHttpClient9.getCookieHandler();
        boolean boolean11 = okHttpClient9.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient9.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool15 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int16 = connectionPool15.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient12.setConnectionPool(connectionPool15);
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector19 = null;
        okHttpClient18.proxySelector = proxySelector19;
        java.net.ProxySelector proxySelector21 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient18.setProxySelector(proxySelector21);
        java.net.ProxySelector proxySelector23 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient18.setProxySelector(proxySelector23);
        okHttpClient17.proxySelector = proxySelector23;
        javax.net.ssl.HostnameVerifier hostnameVerifier26 = okHttpClient17.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient0.setHostnameVerifier(hostnameVerifier26);
        java.net.CookieHandler cookieHandler28 = okHttpClient0.getCookieHandler();
        boolean boolean29 = okHttpClient0.followProtocolRedirects;
        java.util.Set<com.squareup.okhttp.Route> routeSet30 = okHttpClient0.failedRoutes;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory31 = okHttpClient0.getSslSocketFactory();
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(proxySelector6);
        org.junit.Assert.assertNull(responseCache7);
        org.junit.Assert.assertNotNull(routeSet8);
        org.junit.Assert.assertNull(cookieHandler10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNotNull(okHttpClient22);
// flaky:         org.junit.Assert.assertNull(proxySelector23);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNotNull(hostnameVerifier26);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNull(cookieHandler28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(routeSet30);
        org.junit.Assert.assertNull(sSLSocketFactory31);
    }

    @Test
    public void test03346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03346");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = okHttpClient0.getSslSocketFactory();
        com.squareup.okhttp.OkAuthenticator okAuthenticator2 = okHttpClient0.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler4 = okHttpClient3.getCookieHandler();
        boolean boolean5 = okHttpClient3.getFollowProtocolRedirects();
        java.net.ProxySelector proxySelector6 = okHttpClient3.proxySelector;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector8 = null;
        okHttpClient7.proxySelector = proxySelector8;
        java.net.ProxySelector proxySelector10 = okHttpClient7.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient7.setHostnameVerifier(hostnameVerifier11);
        java.net.ProxySelector proxySelector13 = okHttpClient7.proxySelector;
        java.net.ResponseCache responseCache14 = okHttpClient7.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet15 = okHttpClient7.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler17 = okHttpClient16.getCookieHandler();
        boolean boolean18 = okHttpClient16.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient16.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool22 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int23 = connectionPool22.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient19.setConnectionPool(connectionPool22);
        com.squareup.okhttp.OkHttpClient okHttpClient25 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector26 = null;
        okHttpClient25.proxySelector = proxySelector26;
        java.net.ProxySelector proxySelector28 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient25.setProxySelector(proxySelector28);
        java.net.ProxySelector proxySelector30 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient25.setProxySelector(proxySelector30);
        okHttpClient24.proxySelector = proxySelector30;
        javax.net.ssl.HostnameVerifier hostnameVerifier33 = okHttpClient24.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient7.setHostnameVerifier(hostnameVerifier33);
        java.net.Proxy proxy35 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress36 = proxy35.address();
        com.squareup.okhttp.OkHttpClient okHttpClient37 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector38 = null;
        okHttpClient37.proxySelector = proxySelector38;
        com.squareup.okhttp.ConnectionPool connectionPool40 = okHttpClient37.connectionPool;
        com.squareup.okhttp.ConnectionPool connectionPool41 = okHttpClient37.getConnectionPool();
        boolean boolean42 = proxy35.equals((java.lang.Object) okHttpClient37);
        okHttpClient7.proxy = proxy35;
        com.squareup.okhttp.OkHttpClient okHttpClient44 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler45 = okHttpClient44.getCookieHandler();
        boolean boolean46 = okHttpClient44.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient47 = okHttpClient44.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier48 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient49 = okHttpClient47.setHostnameVerifier(hostnameVerifier48);
        java.net.ResponseCache responseCache50 = okHttpClient49.getResponseCache();
        java.net.ProxySelector proxySelector51 = okHttpClient49.getProxySelector();
        boolean boolean52 = proxy35.equals((java.lang.Object) proxySelector51);
        com.squareup.okhttp.OkHttpClient okHttpClient53 = okHttpClient3.setProxy(proxy35);
        java.net.CookieHandler cookieHandler54 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient55 = okHttpClient3.setCookieHandler(cookieHandler54);
        java.net.Proxy proxy56 = okHttpClient55.getProxy();
        java.net.Proxy.Type type57 = proxy56.type();
        okHttpClient0.proxy = proxy56;
        java.net.CookieHandler cookieHandler59 = null;
        okHttpClient0.cookieHandler = cookieHandler59;
        org.junit.Assert.assertNull(sSLSocketFactory1);
        org.junit.Assert.assertNull(okAuthenticator2);
        org.junit.Assert.assertNull(cookieHandler4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(proxySelector6);
        org.junit.Assert.assertNull(proxySelector10);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertNull(proxySelector13);
        org.junit.Assert.assertNull(responseCache14);
        org.junit.Assert.assertNotNull(routeSet15);
        org.junit.Assert.assertNull(cookieHandler17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNotNull(okHttpClient29);
// flaky:         org.junit.Assert.assertNull(proxySelector30);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNotNull(hostnameVerifier33);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertNotNull(proxy35);
        org.junit.Assert.assertNull(socketAddress36);
        org.junit.Assert.assertNull(connectionPool40);
        org.junit.Assert.assertNull(connectionPool41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(cookieHandler45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(okHttpClient47);
        org.junit.Assert.assertNotNull(okHttpClient49);
        org.junit.Assert.assertNull(responseCache50);
// flaky:         org.junit.Assert.assertNull(proxySelector51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(okHttpClient53);
        org.junit.Assert.assertNotNull(okHttpClient55);
        org.junit.Assert.assertNotNull(proxy56);
        org.junit.Assert.assertTrue("'" + type57 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type57.equals(java.net.Proxy.Type.DIRECT));
    }

    @Test
    public void test03347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03347");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = okHttpClient0.getSslSocketFactory();
        com.squareup.okhttp.OkAuthenticator okAuthenticator2 = okHttpClient0.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler4 = okHttpClient3.getCookieHandler();
        boolean boolean5 = okHttpClient3.getFollowProtocolRedirects();
        java.net.ProxySelector proxySelector6 = okHttpClient3.proxySelector;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector8 = null;
        okHttpClient7.proxySelector = proxySelector8;
        java.net.ProxySelector proxySelector10 = okHttpClient7.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient7.setHostnameVerifier(hostnameVerifier11);
        java.net.ProxySelector proxySelector13 = okHttpClient7.proxySelector;
        java.net.ResponseCache responseCache14 = okHttpClient7.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet15 = okHttpClient7.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler17 = okHttpClient16.getCookieHandler();
        boolean boolean18 = okHttpClient16.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient16.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool22 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int23 = connectionPool22.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient19.setConnectionPool(connectionPool22);
        com.squareup.okhttp.OkHttpClient okHttpClient25 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector26 = null;
        okHttpClient25.proxySelector = proxySelector26;
        java.net.ProxySelector proxySelector28 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient25.setProxySelector(proxySelector28);
        java.net.ProxySelector proxySelector30 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient25.setProxySelector(proxySelector30);
        okHttpClient24.proxySelector = proxySelector30;
        javax.net.ssl.HostnameVerifier hostnameVerifier33 = okHttpClient24.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient7.setHostnameVerifier(hostnameVerifier33);
        java.net.Proxy proxy35 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress36 = proxy35.address();
        com.squareup.okhttp.OkHttpClient okHttpClient37 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector38 = null;
        okHttpClient37.proxySelector = proxySelector38;
        com.squareup.okhttp.ConnectionPool connectionPool40 = okHttpClient37.connectionPool;
        com.squareup.okhttp.ConnectionPool connectionPool41 = okHttpClient37.getConnectionPool();
        boolean boolean42 = proxy35.equals((java.lang.Object) okHttpClient37);
        okHttpClient7.proxy = proxy35;
        com.squareup.okhttp.OkHttpClient okHttpClient44 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler45 = okHttpClient44.getCookieHandler();
        boolean boolean46 = okHttpClient44.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient47 = okHttpClient44.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier48 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient49 = okHttpClient47.setHostnameVerifier(hostnameVerifier48);
        java.net.ResponseCache responseCache50 = okHttpClient49.getResponseCache();
        java.net.ProxySelector proxySelector51 = okHttpClient49.getProxySelector();
        boolean boolean52 = proxy35.equals((java.lang.Object) proxySelector51);
        com.squareup.okhttp.OkHttpClient okHttpClient53 = okHttpClient3.setProxy(proxy35);
        java.net.CookieHandler cookieHandler54 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient55 = okHttpClient3.setCookieHandler(cookieHandler54);
        java.net.Proxy proxy56 = okHttpClient55.getProxy();
        java.net.Proxy.Type type57 = proxy56.type();
        okHttpClient0.proxy = proxy56;
        java.net.ResponseCache responseCache59 = null;
        okHttpClient0.responseCache = responseCache59;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory61 = okHttpClient0.getSslSocketFactory();
        org.junit.Assert.assertNull(sSLSocketFactory1);
        org.junit.Assert.assertNull(okAuthenticator2);
        org.junit.Assert.assertNull(cookieHandler4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(proxySelector6);
        org.junit.Assert.assertNull(proxySelector10);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertNull(proxySelector13);
        org.junit.Assert.assertNull(responseCache14);
        org.junit.Assert.assertNotNull(routeSet15);
        org.junit.Assert.assertNull(cookieHandler17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNotNull(okHttpClient29);
// flaky:         org.junit.Assert.assertNull(proxySelector30);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNotNull(hostnameVerifier33);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertNotNull(proxy35);
        org.junit.Assert.assertNull(socketAddress36);
        org.junit.Assert.assertNull(connectionPool40);
        org.junit.Assert.assertNull(connectionPool41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(cookieHandler45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(okHttpClient47);
        org.junit.Assert.assertNotNull(okHttpClient49);
        org.junit.Assert.assertNull(responseCache50);
// flaky:         org.junit.Assert.assertNull(proxySelector51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(okHttpClient53);
        org.junit.Assert.assertNotNull(okHttpClient55);
        org.junit.Assert.assertNotNull(proxy56);
        org.junit.Assert.assertTrue("'" + type57 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type57.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(sSLSocketFactory61);
    }

    @Test
    public void test03348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03348");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setHostnameVerifier(hostnameVerifier4);
        java.net.ProxySelector proxySelector6 = okHttpClient0.proxySelector;
        java.net.ResponseCache responseCache7 = okHttpClient0.getResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler9 = okHttpClient8.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray10 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet11 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet11, routeArray10);
        okHttpClient8.failedRoutes = routeSet11;
        java.net.Proxy proxy14 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient15.setCookieHandler(cookieHandler16);
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient15.setFollowProtocolRedirects(true);
        boolean boolean20 = proxy14.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient8.setProxy(proxy14);
        okHttpClient0.proxy = proxy14;
        com.squareup.okhttp.OkHttpClient okHttpClient23 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler24 = okHttpClient23.getCookieHandler();
        boolean boolean25 = okHttpClient23.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient23.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier27 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient26.setHostnameVerifier(hostnameVerifier27);
        boolean boolean29 = proxy14.equals((java.lang.Object) okHttpClient26);
        java.net.ResponseCache responseCache30 = okHttpClient26.getResponseCache();
        java.net.CookieHandler cookieHandler31 = okHttpClient26.getCookieHandler();
        java.net.ResponseCache responseCache32 = okHttpClient26.getResponseCache();
        boolean boolean33 = okHttpClient26.followProtocolRedirects;
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(proxySelector6);
        org.junit.Assert.assertNull(responseCache7);
        org.junit.Assert.assertNull(cookieHandler9);
        org.junit.Assert.assertNotNull(routeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(proxy14);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNull(cookieHandler24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(responseCache30);
        org.junit.Assert.assertNull(cookieHandler31);
        org.junit.Assert.assertNull(responseCache32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    }

    @Test
    public void test03349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03349");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setHostnameVerifier(hostnameVerifier4);
        boolean boolean6 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool((int) 'a', (long) (byte) -1);
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector12 = null;
        okHttpClient11.proxySelector = proxySelector12;
        java.net.ProxySelector proxySelector14 = okHttpClient11.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient11.setHostnameVerifier(hostnameVerifier15);
        boolean boolean17 = okHttpClient11.getFollowProtocolRedirects();
        com.squareup.okhttp.ConnectionPool connectionPool20 = new com.squareup.okhttp.ConnectionPool((int) 'a', (long) (byte) -1);
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient11.setConnectionPool(connectionPool20);
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler23 = okHttpClient22.getCookieHandler();
        boolean boolean24 = okHttpClient22.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient22.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier26 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient25.setHostnameVerifier(hostnameVerifier26);
        java.net.ResponseCache responseCache28 = okHttpClient27.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator29 = okHttpClient27.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = okHttpClient27.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory31 = okHttpClient27.getSslSocketFactory();
        okHttpClient11.sslSocketFactory = sSLSocketFactory31;
        java.net.Socket socket33 = sSLSocketFactory31.createSocket();
        okHttpClient0.sslSocketFactory = sSLSocketFactory31;
        java.util.Set<com.squareup.okhttp.Route> routeSet35 = okHttpClient0.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient0.copyWithDefaults();
        java.net.Proxy proxy37 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient38 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler39 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient40 = okHttpClient38.setCookieHandler(cookieHandler39);
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient38.setFollowProtocolRedirects(true);
        boolean boolean43 = proxy37.equals((java.lang.Object) true);
        java.lang.String str44 = proxy37.toString();
        java.net.Proxy.Type type45 = proxy37.type();
        java.net.SocketAddress socketAddress46 = proxy37.address();
        java.net.SocketAddress socketAddress47 = proxy37.address();
        okHttpClient36.proxy = proxy37;
        java.net.Proxy.Type type49 = proxy37.type();
        java.net.SocketAddress socketAddress50 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Proxy proxy51 = new java.net.Proxy(type49, socketAddress50);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: type DIRECT is not compatible with address null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertNull(proxySelector14);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNull(cookieHandler23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(okHttpClient25);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNull(responseCache28);
        org.junit.Assert.assertNotNull(okAuthenticator29);
        org.junit.Assert.assertNull(hostnameVerifier30);
        org.junit.Assert.assertNotNull(sSLSocketFactory31);
        org.junit.Assert.assertNotNull(socket33);
        org.junit.Assert.assertEquals(socket33.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(routeSet35);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNotNull(proxy37);
        org.junit.Assert.assertNotNull(okHttpClient40);
        org.junit.Assert.assertNotNull(okHttpClient42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "DIRECT" + "'", str44, "DIRECT");
        org.junit.Assert.assertTrue("'" + type45 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type45.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress46);
        org.junit.Assert.assertNull(socketAddress47);
        org.junit.Assert.assertTrue("'" + type49 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type49.equals(java.net.Proxy.Type.DIRECT));
    }

    @Test
    public void test03350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03350");
        com.squareup.okhttp.ConnectionPool connectionPool2 = new com.squareup.okhttp.ConnectionPool(10, (long) 1);
    }

    @Test
    public void test03351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03351");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier6 = okHttpClient0.hostnameVerifier;
        java.net.ProxySelector proxySelector7 = java.net.ProxySelector.getDefault();
        okHttpClient0.proxySelector = proxySelector7;
        okHttpClient0.followProtocolRedirects = true;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler12 = okHttpClient11.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray13 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet14 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet14, routeArray13);
        okHttpClient11.failedRoutes = routeSet14;
        java.net.Proxy proxy17 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler19 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient18.setCookieHandler(cookieHandler19);
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient18.setFollowProtocolRedirects(true);
        boolean boolean23 = proxy17.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient11.setProxy(proxy17);
        java.lang.String str25 = proxy17.toString();
        com.squareup.okhttp.OkHttpClient okHttpClient26 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler27 = okHttpClient26.getCookieHandler();
        boolean boolean28 = okHttpClient26.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator29 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient30 = okHttpClient26.setAuthenticator(okAuthenticator29);
        java.net.ResponseCache responseCache31 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient26.setResponseCache(responseCache31);
        com.squareup.okhttp.ConnectionPool connectionPool35 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool35.evictAll();
        okHttpClient26.connectionPool = connectionPool35;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory38 = okHttpClient26.sslSocketFactory;
        com.squareup.okhttp.ConnectionPool connectionPool39 = okHttpClient26.getConnectionPool();
        boolean boolean40 = proxy17.equals((java.lang.Object) okHttpClient26);
        com.squareup.okhttp.OkHttpClient okHttpClient41 = okHttpClient0.setProxy(proxy17);
        java.lang.String str42 = proxy17.toString();
        java.net.Proxy.Type type43 = proxy17.type();
        java.net.SocketAddress socketAddress44 = proxy17.address();
        java.net.SocketAddress socketAddress45 = proxy17.address();
        java.net.Proxy.Type type46 = proxy17.type();
        java.net.SocketAddress socketAddress47 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Proxy proxy48 = new java.net.Proxy(type46, socketAddress47);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: type DIRECT is not compatible with address null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(hostnameVerifier6);
// flaky:         org.junit.Assert.assertNull(proxySelector7);
        org.junit.Assert.assertNull(cookieHandler12);
        org.junit.Assert.assertNotNull(routeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(proxy17);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "DIRECT" + "'", str25, "DIRECT");
        org.junit.Assert.assertNull(cookieHandler27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(okHttpClient30);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertNull(sSLSocketFactory38);
        org.junit.Assert.assertNotNull(connectionPool39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(okHttpClient41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "DIRECT" + "'", str42, "DIRECT");
        org.junit.Assert.assertTrue("'" + type43 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type43.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress44);
        org.junit.Assert.assertNull(socketAddress45);
        org.junit.Assert.assertTrue("'" + type46 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type46.equals(java.net.Proxy.Type.DIRECT));
    }

    @Test
    public void test03352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03352");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        java.net.ResponseCache responseCache2 = null;
        okHttpClient0.responseCache = responseCache2;
        boolean boolean4 = okHttpClient0.followProtocolRedirects;
        java.net.CookieHandler cookieHandler5 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.ConnectionPool connectionPool6 = okHttpClient0.getConnectionPool();
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector8 = null;
        okHttpClient7.proxySelector = proxySelector8;
        java.net.ProxySelector proxySelector10 = okHttpClient7.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient7.setHostnameVerifier(hostnameVerifier11);
        java.net.ProxySelector proxySelector13 = okHttpClient7.proxySelector;
        java.net.ResponseCache responseCache14 = okHttpClient7.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet15 = okHttpClient7.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler17 = okHttpClient16.getCookieHandler();
        boolean boolean18 = okHttpClient16.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient16.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool22 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int23 = connectionPool22.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient19.setConnectionPool(connectionPool22);
        com.squareup.okhttp.OkHttpClient okHttpClient25 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector26 = null;
        okHttpClient25.proxySelector = proxySelector26;
        java.net.ProxySelector proxySelector28 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient25.setProxySelector(proxySelector28);
        java.net.ProxySelector proxySelector30 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient25.setProxySelector(proxySelector30);
        okHttpClient24.proxySelector = proxySelector30;
        javax.net.ssl.HostnameVerifier hostnameVerifier33 = okHttpClient24.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient7.setHostnameVerifier(hostnameVerifier33);
        okHttpClient0.hostnameVerifier = hostnameVerifier33;
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool39 = new com.squareup.okhttp.ConnectionPool((int) ' ', (long) 1);
        int int40 = connectionPool39.getSpdyConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient41 = okHttpClient36.setConnectionPool(connectionPool39);
        java.net.ResponseCache responseCache42 = okHttpClient41.getResponseCache();
        java.net.Proxy proxy43 = okHttpClient41.proxy;
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertNull(connectionPool6);
        org.junit.Assert.assertNull(proxySelector10);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertNull(proxySelector13);
        org.junit.Assert.assertNull(responseCache14);
        org.junit.Assert.assertNotNull(routeSet15);
        org.junit.Assert.assertNull(cookieHandler17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNotNull(okHttpClient29);
// flaky:         org.junit.Assert.assertNull(proxySelector30);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNotNull(hostnameVerifier33);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(okHttpClient41);
        org.junit.Assert.assertNull(responseCache42);
        org.junit.Assert.assertNull(proxy43);
    }

    @Test
    public void test03353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03353");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = okHttpClient0.hostnameVerifier;
        java.net.ResponseCache responseCache2 = okHttpClient0.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = okHttpClient0.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler5 = okHttpClient4.getCookieHandler();
        boolean boolean6 = okHttpClient4.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient4.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient7.setHostnameVerifier(hostnameVerifier8);
        java.net.ResponseCache responseCache10 = okHttpClient9.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator11 = okHttpClient9.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = okHttpClient9.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory13 = okHttpClient9.getSslSocketFactory();
        java.lang.String[] strArray14 = sSLSocketFactory13.getSupportedCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory13);
        java.lang.String[] strArray16 = sSLSocketFactory13.getSupportedCipherSuites();
        java.lang.String[] strArray17 = sSLSocketFactory13.getSupportedCipherSuites();
        java.lang.String[] strArray18 = sSLSocketFactory13.getSupportedCipherSuites();
        java.net.InetAddress inetAddress21 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket23 = sSLSocketFactory13.createSocket("DIRECT", 1, inetAddress21, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.net.BindException; message: Permission denied (Bind failed)");
        } catch (java.net.BindException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(hostnameVerifier1);
        org.junit.Assert.assertNull(responseCache2);
        org.junit.Assert.assertNull(okAuthenticator3);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(okHttpClient7);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNull(responseCache10);
        org.junit.Assert.assertNotNull(okAuthenticator11);
        org.junit.Assert.assertNull(hostnameVerifier12);
        org.junit.Assert.assertNotNull(sSLSocketFactory13);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strArray18);
    }

    @Test
    public void test03354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03354");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setHostnameVerifier(hostnameVerifier4);
        java.net.ResponseCache responseCache6 = okHttpClient5.responseCache;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient5.setFollowProtocolRedirects(true);
        java.net.CookieHandler cookieHandler9 = okHttpClient8.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient10 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector11 = null;
        okHttpClient10.proxySelector = proxySelector11;
        java.net.ProxySelector proxySelector13 = okHttpClient10.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient10.setHostnameVerifier(hostnameVerifier14);
        java.net.ResponseCache responseCache16 = okHttpClient15.responseCache;
        java.net.CookieHandler cookieHandler17 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient15.setCookieHandler(cookieHandler17);
        java.net.CookieHandler cookieHandler19 = okHttpClient15.cookieHandler;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient15.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient21 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector22 = null;
        okHttpClient21.proxySelector = proxySelector22;
        java.net.ProxySelector proxySelector24 = okHttpClient21.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier25 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient21.setHostnameVerifier(hostnameVerifier25);
        boolean boolean27 = okHttpClient21.getFollowProtocolRedirects();
        com.squareup.okhttp.ConnectionPool connectionPool30 = new com.squareup.okhttp.ConnectionPool((int) 'a', (long) (byte) -1);
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient21.setConnectionPool(connectionPool30);
        com.squareup.okhttp.OkHttpClient okHttpClient32 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler33 = okHttpClient32.getCookieHandler();
        boolean boolean34 = okHttpClient32.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient32.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier36 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient35.setHostnameVerifier(hostnameVerifier36);
        java.net.ResponseCache responseCache38 = okHttpClient37.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator39 = okHttpClient37.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier40 = okHttpClient37.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory41 = okHttpClient37.getSslSocketFactory();
        okHttpClient21.sslSocketFactory = sSLSocketFactory41;
        okHttpClient15.sslSocketFactory = sSLSocketFactory41;
        com.squareup.okhttp.OkHttpClient okHttpClient44 = okHttpClient8.setSSLSocketFactory(sSLSocketFactory41);
        java.net.InetAddress inetAddress47 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket49 = sSLSocketFactory41.createSocket("", (-1), inetAddress47, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.net.BindException; message: Permission denied (Bind failed)");
        } catch (java.net.BindException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(responseCache6);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertNull(cookieHandler9);
        org.junit.Assert.assertNull(proxySelector13);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNull(responseCache16);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNull(cookieHandler19);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNull(proxySelector24);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNull(cookieHandler33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNotNull(okHttpClient37);
        org.junit.Assert.assertNull(responseCache38);
        org.junit.Assert.assertNotNull(okAuthenticator39);
        org.junit.Assert.assertNull(hostnameVerifier40);
        org.junit.Assert.assertNotNull(sSLSocketFactory41);
        org.junit.Assert.assertNotNull(okHttpClient44);
    }

    @Test
    public void test03355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03355");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet4 = okHttpClient3.failedRoutes;
        boolean boolean5 = okHttpClient3.getFollowProtocolRedirects();
        java.net.ResponseCache responseCache6 = okHttpClient3.responseCache;
        java.net.ResponseCache responseCache7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient3.setResponseCache(responseCache7);
        com.squareup.okhttp.ConnectionPool connectionPool11 = new com.squareup.okhttp.ConnectionPool((int) (short) 0, (long) 'a');
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient3.setConnectionPool(connectionPool11);
        int int13 = connectionPool11.getSpdyConnectionCount();
        com.squareup.okhttp.Connection connection14 = null;
        // The following exception was thrown during execution in test generation
        try {
            connectionPool11.recycle(connection14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertNotNull(routeSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(responseCache6);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
    }

    @Test
    public void test03356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03356");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setCookieHandler(cookieHandler1);
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setFollowProtocolRedirects(true);
        com.squareup.okhttp.OkHttpClient okHttpClient5 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler6 = okHttpClient5.getCookieHandler();
        boolean boolean7 = okHttpClient5.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient5.setAuthenticator(okAuthenticator8);
        java.net.ResponseCache responseCache10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient5.setResponseCache(responseCache10);
        com.squareup.okhttp.ConnectionPool connectionPool14 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool14.evictAll();
        okHttpClient5.connectionPool = connectionPool14;
        connectionPool14.evictAll();
        int int18 = connectionPool14.getSpdyConnectionCount();
        int int19 = connectionPool14.getSpdyConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient0.setConnectionPool(connectionPool14);
        java.net.CookieHandler cookieHandler21 = okHttpClient0.getCookieHandler();
        org.junit.Assert.assertNotNull(okHttpClient2);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(cookieHandler6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNull(cookieHandler21);
    }

    @Test
    public void test03357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03357");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = okHttpClient0.hostnameVerifier;
        java.net.ResponseCache responseCache2 = okHttpClient0.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = okHttpClient0.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler5 = okHttpClient4.getCookieHandler();
        boolean boolean6 = okHttpClient4.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient4.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient7.setHostnameVerifier(hostnameVerifier8);
        java.net.ResponseCache responseCache10 = okHttpClient9.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator11 = okHttpClient9.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient0.setAuthenticator(okAuthenticator11);
        java.net.ResponseCache responseCache13 = okHttpClient12.getResponseCache();
        com.squareup.okhttp.ConnectionPool connectionPool16 = new com.squareup.okhttp.ConnectionPool((int) 'a', (long) '4');
        okHttpClient12.connectionPool = connectionPool16;
        java.net.ResponseCache responseCache18 = okHttpClient12.getResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient19 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector20 = null;
        okHttpClient19.proxySelector = proxySelector20;
        java.net.ProxySelector proxySelector22 = okHttpClient19.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier23 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient19.setHostnameVerifier(hostnameVerifier23);
        java.net.ResponseCache responseCache25 = okHttpClient24.responseCache;
        com.squareup.okhttp.ConnectionPool connectionPool28 = new com.squareup.okhttp.ConnectionPool((int) '4', 100L);
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient24.setConnectionPool(connectionPool28);
        com.squareup.okhttp.ConnectionPool connectionPool32 = new com.squareup.okhttp.ConnectionPool((int) '#', (long) '4');
        okHttpClient24.connectionPool = connectionPool32;
        com.squareup.okhttp.ConnectionPool connectionPool36 = new com.squareup.okhttp.ConnectionPool(0, 1L);
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient24.setConnectionPool(connectionPool36);
        java.net.CookieHandler cookieHandler38 = okHttpClient37.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient39 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler40 = okHttpClient39.getCookieHandler();
        java.net.ResponseCache responseCache41 = null;
        okHttpClient39.responseCache = responseCache41;
        boolean boolean43 = okHttpClient39.followProtocolRedirects;
        java.net.CookieHandler cookieHandler44 = okHttpClient39.cookieHandler;
        com.squareup.okhttp.ConnectionPool connectionPool45 = okHttpClient39.getConnectionPool();
        com.squareup.okhttp.OkHttpClient okHttpClient46 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector47 = null;
        okHttpClient46.proxySelector = proxySelector47;
        java.net.ProxySelector proxySelector49 = okHttpClient46.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier50 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient51 = okHttpClient46.setHostnameVerifier(hostnameVerifier50);
        java.net.ProxySelector proxySelector52 = okHttpClient46.proxySelector;
        java.net.ResponseCache responseCache53 = okHttpClient46.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet54 = okHttpClient46.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient55 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler56 = okHttpClient55.getCookieHandler();
        boolean boolean57 = okHttpClient55.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient58 = okHttpClient55.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool61 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int62 = connectionPool61.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient63 = okHttpClient58.setConnectionPool(connectionPool61);
        com.squareup.okhttp.OkHttpClient okHttpClient64 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector65 = null;
        okHttpClient64.proxySelector = proxySelector65;
        java.net.ProxySelector proxySelector67 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient68 = okHttpClient64.setProxySelector(proxySelector67);
        java.net.ProxySelector proxySelector69 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient70 = okHttpClient64.setProxySelector(proxySelector69);
        okHttpClient63.proxySelector = proxySelector69;
        javax.net.ssl.HostnameVerifier hostnameVerifier72 = okHttpClient63.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient73 = okHttpClient46.setHostnameVerifier(hostnameVerifier72);
        okHttpClient39.hostnameVerifier = hostnameVerifier72;
        okHttpClient37.hostnameVerifier = hostnameVerifier72;
        com.squareup.okhttp.OkHttpClient okHttpClient76 = okHttpClient12.setHostnameVerifier(hostnameVerifier72);
        java.net.ProxySelector proxySelector77 = okHttpClient76.proxySelector;
        org.junit.Assert.assertNull(hostnameVerifier1);
        org.junit.Assert.assertNull(responseCache2);
        org.junit.Assert.assertNull(okAuthenticator3);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(okHttpClient7);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNull(responseCache10);
        org.junit.Assert.assertNotNull(okAuthenticator11);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertNull(responseCache13);
        org.junit.Assert.assertNull(responseCache18);
        org.junit.Assert.assertNull(proxySelector22);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNull(responseCache25);
        org.junit.Assert.assertNotNull(okHttpClient29);
        org.junit.Assert.assertNotNull(okHttpClient37);
        org.junit.Assert.assertNull(cookieHandler38);
        org.junit.Assert.assertNull(cookieHandler40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(cookieHandler44);
        org.junit.Assert.assertNull(connectionPool45);
        org.junit.Assert.assertNull(proxySelector49);
        org.junit.Assert.assertNotNull(okHttpClient51);
        org.junit.Assert.assertNull(proxySelector52);
        org.junit.Assert.assertNull(responseCache53);
        org.junit.Assert.assertNotNull(routeSet54);
        org.junit.Assert.assertNull(cookieHandler56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(okHttpClient58);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(okHttpClient63);
        org.junit.Assert.assertNotNull(okHttpClient68);
// flaky:         org.junit.Assert.assertNull(proxySelector69);
        org.junit.Assert.assertNotNull(okHttpClient70);
        org.junit.Assert.assertNotNull(hostnameVerifier72);
        org.junit.Assert.assertNotNull(okHttpClient73);
        org.junit.Assert.assertNotNull(okHttpClient76);
        org.junit.Assert.assertNull(proxySelector77);
    }

    @Test
    public void test03358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03358");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet4 = okHttpClient3.failedRoutes;
        boolean boolean5 = okHttpClient3.getFollowProtocolRedirects();
        java.net.Proxy proxy6 = java.net.Proxy.NO_PROXY;
        okHttpClient3.proxy = proxy6;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler9 = okHttpClient8.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray10 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet11 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet11, routeArray10);
        okHttpClient8.failedRoutes = routeSet11;
        java.net.Proxy proxy14 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient15.setCookieHandler(cookieHandler16);
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient15.setFollowProtocolRedirects(true);
        boolean boolean20 = proxy14.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient8.setProxy(proxy14);
        java.net.SocketAddress socketAddress22 = proxy14.address();
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient3.setProxy(proxy14);
        okHttpClient23.followProtocolRedirects = false;
        boolean boolean26 = okHttpClient23.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector28 = null;
        okHttpClient27.proxySelector = proxySelector28;
        java.net.ProxySelector proxySelector30 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient27.setProxySelector(proxySelector30);
        java.net.ProxySelector proxySelector32 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient27.setProxySelector(proxySelector32);
        java.net.ProxySelector.setDefault(proxySelector32);
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient23.setProxySelector(proxySelector32);
        java.net.URI uRI36 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.net.Proxy> proxyList37 = null; // flaky: proxySelector32.select(uRI36);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertNotNull(routeSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(proxy6);
        org.junit.Assert.assertNull(cookieHandler9);
        org.junit.Assert.assertNotNull(routeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(proxy14);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNull(socketAddress22);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(okHttpClient31);
// flaky:         org.junit.Assert.assertNull(proxySelector32);
        org.junit.Assert.assertNotNull(okHttpClient33);
        org.junit.Assert.assertNotNull(okHttpClient35);
    }

    @Test
    public void test03359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03359");
        com.squareup.okhttp.ConnectionPool connectionPool2 = new com.squareup.okhttp.ConnectionPool((int) (short) -1, (long) (byte) 100);
        connectionPool2.evictAll();
        com.squareup.okhttp.Connection connection4 = null;
        // The following exception was thrown during execution in test generation
        try {
            connectionPool2.maybeShare(connection4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test03360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03360");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray2 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet3 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet3, routeArray2);
        okHttpClient0.failedRoutes = routeSet3;
        java.net.Proxy proxy6 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient7.setCookieHandler(cookieHandler8);
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient7.setFollowProtocolRedirects(true);
        boolean boolean12 = proxy6.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient0.setProxy(proxy6);
        com.squareup.okhttp.OkHttpClient okHttpClient14 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler15 = okHttpClient14.getCookieHandler();
        boolean boolean16 = okHttpClient14.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler18 = okHttpClient17.getCookieHandler();
        boolean boolean19 = okHttpClient17.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient17.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet21 = okHttpClient20.failedRoutes;
        boolean boolean22 = okHttpClient20.getFollowProtocolRedirects();
        java.net.Proxy proxy23 = java.net.Proxy.NO_PROXY;
        okHttpClient20.proxy = proxy23;
        okHttpClient14.proxy = proxy23;
        okHttpClient0.proxy = proxy23;
        com.squareup.okhttp.OkAuthenticator okAuthenticator27 = okHttpClient0.getAuthenticator();
        java.net.Proxy proxy28 = okHttpClient0.getProxy();
        com.squareup.okhttp.OkAuthenticator okAuthenticator29 = okHttpClient0.getAuthenticator();
        com.squareup.okhttp.OkAuthenticator okAuthenticator30 = okHttpClient0.authenticator;
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertNotNull(routeArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(proxy6);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNull(cookieHandler15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(cookieHandler18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNotNull(routeSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(proxy23);
        org.junit.Assert.assertNull(okAuthenticator27);
        org.junit.Assert.assertNotNull(proxy28);
        org.junit.Assert.assertNull(okAuthenticator29);
        org.junit.Assert.assertNull(okAuthenticator30);
    }

    @Test
    public void test03361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03361");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.copyWithDefaults();
        java.net.CookieHandler cookieHandler4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient3.setCookieHandler(cookieHandler4);
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient5.setFollowProtocolRedirects(false);
        java.net.CookieHandler cookieHandler8 = null;
        okHttpClient5.cookieHandler = cookieHandler8;
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNotNull(okHttpClient7);
    }

    @Test
    public void test03362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03362");
        com.squareup.okhttp.ConnectionPool connectionPool2 = new com.squareup.okhttp.ConnectionPool(100, 1L);
        com.squareup.okhttp.Address address3 = null;
        com.squareup.okhttp.Connection connection4 = connectionPool2.get(address3);
        int int5 = connectionPool2.getConnectionCount();
        connectionPool2.evictAll();
        com.squareup.okhttp.Connection connection7 = null;
        // The following exception was thrown during execution in test generation
        try {
            connectionPool2.maybeShare(connection7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(connection4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test03363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03363");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        com.squareup.okhttp.ConnectionPool connectionPool7 = new com.squareup.okhttp.ConnectionPool(1, 0L);
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient0.setConnectionPool(connectionPool7);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory9 = okHttpClient8.getSslSocketFactory();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory10 = okHttpClient8.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler12 = okHttpClient11.getCookieHandler();
        boolean boolean13 = okHttpClient11.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient11.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool15 = okHttpClient14.getConnectionPool();
        connectionPool15.evictAll();
        okHttpClient8.connectionPool = connectionPool15;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler19 = okHttpClient18.getCookieHandler();
        boolean boolean20 = okHttpClient18.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient18.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool24 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int25 = connectionPool24.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient21.setConnectionPool(connectionPool24);
        int int27 = connectionPool24.getSpdyConnectionCount();
        connectionPool24.evictAll();
        okHttpClient8.connectionPool = connectionPool24;
        connectionPool24.evictAll();
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertNull(sSLSocketFactory9);
        org.junit.Assert.assertNull(sSLSocketFactory10);
        org.junit.Assert.assertNull(cookieHandler12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(okHttpClient14);
        org.junit.Assert.assertNotNull(connectionPool15);
        org.junit.Assert.assertNull(cookieHandler19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
    }

    @Test
    public void test03364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03364");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        java.net.ResponseCache responseCache2 = null;
        okHttpClient0.responseCache = responseCache2;
        boolean boolean4 = okHttpClient0.followProtocolRedirects;
        java.net.CookieHandler cookieHandler5 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.ConnectionPool connectionPool6 = okHttpClient0.getConnectionPool();
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector8 = null;
        okHttpClient7.proxySelector = proxySelector8;
        java.net.ProxySelector proxySelector10 = okHttpClient7.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient7.setHostnameVerifier(hostnameVerifier11);
        java.net.ProxySelector proxySelector13 = okHttpClient7.proxySelector;
        java.net.ResponseCache responseCache14 = okHttpClient7.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet15 = okHttpClient7.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler17 = okHttpClient16.getCookieHandler();
        boolean boolean18 = okHttpClient16.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient16.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool22 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int23 = connectionPool22.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient19.setConnectionPool(connectionPool22);
        com.squareup.okhttp.OkHttpClient okHttpClient25 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector26 = null;
        okHttpClient25.proxySelector = proxySelector26;
        java.net.ProxySelector proxySelector28 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient25.setProxySelector(proxySelector28);
        java.net.ProxySelector proxySelector30 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient25.setProxySelector(proxySelector30);
        okHttpClient24.proxySelector = proxySelector30;
        javax.net.ssl.HostnameVerifier hostnameVerifier33 = okHttpClient24.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient7.setHostnameVerifier(hostnameVerifier33);
        okHttpClient0.hostnameVerifier = hostnameVerifier33;
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient37 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler38 = okHttpClient37.getCookieHandler();
        boolean boolean39 = okHttpClient37.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator40 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient41 = okHttpClient37.setAuthenticator(okAuthenticator40);
        java.net.ResponseCache responseCache42 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient43 = okHttpClient37.setResponseCache(responseCache42);
        com.squareup.okhttp.ConnectionPool connectionPool46 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool46.evictAll();
        okHttpClient37.connectionPool = connectionPool46;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory49 = okHttpClient37.sslSocketFactory;
        java.net.ResponseCache responseCache50 = null;
        okHttpClient37.responseCache = responseCache50;
        com.squareup.okhttp.OkAuthenticator okAuthenticator52 = okHttpClient37.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient53 = okHttpClient37.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient54 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector55 = null;
        okHttpClient54.proxySelector = proxySelector55;
        java.net.ProxySelector proxySelector57 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient58 = okHttpClient54.setProxySelector(proxySelector57);
        java.net.ProxySelector proxySelector59 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient60 = okHttpClient54.setProxySelector(proxySelector59);
        java.net.ProxySelector.setDefault(proxySelector59);
        com.squareup.okhttp.OkHttpClient okHttpClient62 = okHttpClient53.setProxySelector(proxySelector59);
        java.net.ProxySelector.setDefault(proxySelector59);
        com.squareup.okhttp.OkHttpClient okHttpClient64 = okHttpClient0.setProxySelector(proxySelector59);
        com.squareup.okhttp.OkHttpClient okHttpClient65 = okHttpClient64.copyWithDefaults();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory66 = okHttpClient65.sslSocketFactory;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket69 = sSLSocketFactory66.createSocket("hi!", (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.net.UnknownHostException; message: hi!");
        } catch (java.net.UnknownHostException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertNull(connectionPool6);
        org.junit.Assert.assertNull(proxySelector10);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertNull(proxySelector13);
        org.junit.Assert.assertNull(responseCache14);
        org.junit.Assert.assertNotNull(routeSet15);
        org.junit.Assert.assertNull(cookieHandler17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNotNull(okHttpClient29);
// flaky:         org.junit.Assert.assertNull(proxySelector30);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNotNull(hostnameVerifier33);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNull(cookieHandler38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(okHttpClient41);
        org.junit.Assert.assertNotNull(okHttpClient43);
        org.junit.Assert.assertNull(sSLSocketFactory49);
        org.junit.Assert.assertNull(okAuthenticator52);
        org.junit.Assert.assertNotNull(okHttpClient53);
        org.junit.Assert.assertNotNull(okHttpClient58);
// flaky:         org.junit.Assert.assertNull(proxySelector59);
        org.junit.Assert.assertNotNull(okHttpClient60);
        org.junit.Assert.assertNotNull(okHttpClient62);
        org.junit.Assert.assertNotNull(okHttpClient64);
        org.junit.Assert.assertNotNull(okHttpClient65);
        org.junit.Assert.assertNotNull(sSLSocketFactory66);
    }

    @Test
    public void test03365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03365");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier6 = okHttpClient0.hostnameVerifier;
        java.net.ProxySelector proxySelector7 = java.net.ProxySelector.getDefault();
        okHttpClient0.proxySelector = proxySelector7;
        okHttpClient0.followProtocolRedirects = true;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector12 = null;
        okHttpClient11.proxySelector = proxySelector12;
        java.net.ProxySelector proxySelector14 = okHttpClient11.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient11.setHostnameVerifier(hostnameVerifier15);
        java.net.ProxySelector proxySelector17 = okHttpClient11.proxySelector;
        java.net.ResponseCache responseCache18 = okHttpClient11.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet19 = okHttpClient11.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler21 = okHttpClient20.getCookieHandler();
        boolean boolean22 = okHttpClient20.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient20.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool26 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int27 = connectionPool26.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient23.setConnectionPool(connectionPool26);
        com.squareup.okhttp.OkHttpClient okHttpClient29 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector30 = null;
        okHttpClient29.proxySelector = proxySelector30;
        java.net.ProxySelector proxySelector32 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient29.setProxySelector(proxySelector32);
        java.net.ProxySelector proxySelector34 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient29.setProxySelector(proxySelector34);
        okHttpClient28.proxySelector = proxySelector34;
        javax.net.ssl.HostnameVerifier hostnameVerifier37 = okHttpClient28.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient11.setHostnameVerifier(hostnameVerifier37);
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient0.setHostnameVerifier(hostnameVerifier37);
        java.net.Proxy proxy40 = okHttpClient0.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient41 = okHttpClient0.copyWithDefaults();
        java.net.CookieHandler cookieHandler42 = okHttpClient41.cookieHandler;
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(hostnameVerifier6);
// flaky:         org.junit.Assert.assertNull(proxySelector7);
        org.junit.Assert.assertNull(proxySelector14);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNull(proxySelector17);
        org.junit.Assert.assertNull(responseCache18);
        org.junit.Assert.assertNotNull(routeSet19);
        org.junit.Assert.assertNull(cookieHandler21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNotNull(okHttpClient33);
// flaky:         org.junit.Assert.assertNull(proxySelector34);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNotNull(hostnameVerifier37);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNotNull(okHttpClient39);
        org.junit.Assert.assertNull(proxy40);
        org.junit.Assert.assertNotNull(okHttpClient41);
        org.junit.Assert.assertNull(cookieHandler42);
    }

    @Test
    public void test03366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03366");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        java.net.ResponseCache responseCache5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient0.setResponseCache(responseCache5);
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool9.evictAll();
        okHttpClient0.connectionPool = connectionPool9;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory12 = okHttpClient0.sslSocketFactory;
        java.net.Proxy proxy13 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient0.setProxy(proxy13);
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler16 = okHttpClient15.getCookieHandler();
        boolean boolean17 = okHttpClient15.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient15.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet19 = okHttpClient18.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient18.copyWithDefaults();
        java.net.ProxySelector proxySelector21 = okHttpClient18.getProxySelector();
        okHttpClient14.proxySelector = proxySelector21;
        boolean boolean23 = okHttpClient14.getFollowProtocolRedirects();
        com.squareup.okhttp.ConnectionPool connectionPool24 = okHttpClient14.getConnectionPool();
        java.net.CookieHandler cookieHandler25 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient14.setCookieHandler(cookieHandler25);
        com.squareup.okhttp.OkHttpClient okHttpClient27 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler28 = okHttpClient27.getCookieHandler();
        boolean boolean29 = okHttpClient27.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient30 = okHttpClient27.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool33 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int34 = connectionPool33.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient30.setConnectionPool(connectionPool33);
        com.squareup.okhttp.ConnectionPool connectionPool36 = okHttpClient30.connectionPool;
        com.squareup.okhttp.OkHttpClient okHttpClient37 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector38 = null;
        okHttpClient37.proxySelector = proxySelector38;
        java.net.ProxySelector proxySelector40 = okHttpClient37.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier41 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient37.setHostnameVerifier(hostnameVerifier41);
        java.net.ProxySelector proxySelector43 = java.net.ProxySelector.getDefault();
        okHttpClient37.proxySelector = proxySelector43;
        java.net.ProxySelector.setDefault(proxySelector43);
        com.squareup.okhttp.OkHttpClient okHttpClient46 = okHttpClient30.setProxySelector(proxySelector43);
        com.squareup.okhttp.ConnectionPool connectionPool47 = okHttpClient30.getConnectionPool();
        com.squareup.okhttp.ConnectionPool connectionPool48 = okHttpClient30.connectionPool;
        com.squareup.okhttp.OkHttpClient okHttpClient49 = okHttpClient26.setConnectionPool(connectionPool48);
        int int50 = connectionPool48.getHttpConnectionCount();
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient6);
        org.junit.Assert.assertNull(sSLSocketFactory12);
        org.junit.Assert.assertNotNull(proxy13);
        org.junit.Assert.assertNotNull(okHttpClient14);
        org.junit.Assert.assertNull(cookieHandler16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNotNull(routeSet19);
        org.junit.Assert.assertNotNull(okHttpClient20);
// flaky:         org.junit.Assert.assertNull(proxySelector21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(connectionPool24);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNull(cookieHandler28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(okHttpClient30);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNotNull(connectionPool36);
        org.junit.Assert.assertNull(proxySelector40);
        org.junit.Assert.assertNotNull(okHttpClient42);
// flaky:         org.junit.Assert.assertNull(proxySelector43);
        org.junit.Assert.assertNotNull(okHttpClient46);
        org.junit.Assert.assertNotNull(connectionPool47);
        org.junit.Assert.assertNotNull(connectionPool48);
        org.junit.Assert.assertNotNull(okHttpClient49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
    }

    @Test
    public void test03367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03367");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setHostnameVerifier(hostnameVerifier4);
        boolean boolean6 = okHttpClient0.getFollowProtocolRedirects();
        java.net.ProxySelector proxySelector7 = okHttpClient0.proxySelector;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector9 = null;
        okHttpClient8.proxySelector = proxySelector9;
        java.net.ProxySelector proxySelector11 = okHttpClient8.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient8.setHostnameVerifier(hostnameVerifier12);
        boolean boolean14 = okHttpClient8.getFollowProtocolRedirects();
        com.squareup.okhttp.ConnectionPool connectionPool17 = new com.squareup.okhttp.ConnectionPool((int) 'a', (long) (byte) -1);
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient8.setConnectionPool(connectionPool17);
        com.squareup.okhttp.OkHttpClient okHttpClient19 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler20 = okHttpClient19.getCookieHandler();
        boolean boolean21 = okHttpClient19.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient19.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier23 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient22.setHostnameVerifier(hostnameVerifier23);
        java.net.ResponseCache responseCache25 = okHttpClient24.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator26 = okHttpClient24.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier27 = okHttpClient24.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory28 = okHttpClient24.getSslSocketFactory();
        okHttpClient8.sslSocketFactory = sSLSocketFactory28;
        okHttpClient0.sslSocketFactory = sSLSocketFactory28;
        java.net.ResponseCache responseCache31 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient0.setResponseCache(responseCache31);
        com.squareup.okhttp.OkHttpClient okHttpClient33 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler34 = okHttpClient33.getCookieHandler();
        boolean boolean35 = okHttpClient33.getFollowProtocolRedirects();
        java.net.ProxySelector proxySelector36 = okHttpClient33.proxySelector;
        com.squareup.okhttp.OkHttpClient okHttpClient37 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector38 = null;
        okHttpClient37.proxySelector = proxySelector38;
        java.net.ProxySelector proxySelector40 = okHttpClient37.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier41 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient37.setHostnameVerifier(hostnameVerifier41);
        java.net.ProxySelector proxySelector43 = okHttpClient37.proxySelector;
        java.net.ResponseCache responseCache44 = okHttpClient37.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet45 = okHttpClient37.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient46 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler47 = okHttpClient46.getCookieHandler();
        boolean boolean48 = okHttpClient46.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient49 = okHttpClient46.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool52 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int53 = connectionPool52.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient54 = okHttpClient49.setConnectionPool(connectionPool52);
        com.squareup.okhttp.OkHttpClient okHttpClient55 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector56 = null;
        okHttpClient55.proxySelector = proxySelector56;
        java.net.ProxySelector proxySelector58 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient59 = okHttpClient55.setProxySelector(proxySelector58);
        java.net.ProxySelector proxySelector60 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient61 = okHttpClient55.setProxySelector(proxySelector60);
        okHttpClient54.proxySelector = proxySelector60;
        javax.net.ssl.HostnameVerifier hostnameVerifier63 = okHttpClient54.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient64 = okHttpClient37.setHostnameVerifier(hostnameVerifier63);
        java.net.Proxy proxy65 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress66 = proxy65.address();
        com.squareup.okhttp.OkHttpClient okHttpClient67 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector68 = null;
        okHttpClient67.proxySelector = proxySelector68;
        com.squareup.okhttp.ConnectionPool connectionPool70 = okHttpClient67.connectionPool;
        com.squareup.okhttp.ConnectionPool connectionPool71 = okHttpClient67.getConnectionPool();
        boolean boolean72 = proxy65.equals((java.lang.Object) okHttpClient67);
        okHttpClient37.proxy = proxy65;
        com.squareup.okhttp.OkHttpClient okHttpClient74 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler75 = okHttpClient74.getCookieHandler();
        boolean boolean76 = okHttpClient74.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient77 = okHttpClient74.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier78 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient79 = okHttpClient77.setHostnameVerifier(hostnameVerifier78);
        java.net.ResponseCache responseCache80 = okHttpClient79.getResponseCache();
        java.net.ProxySelector proxySelector81 = okHttpClient79.getProxySelector();
        boolean boolean82 = proxy65.equals((java.lang.Object) proxySelector81);
        com.squareup.okhttp.OkHttpClient okHttpClient83 = okHttpClient33.setProxy(proxy65);
        java.lang.String str84 = proxy65.toString();
        com.squareup.okhttp.OkHttpClient okHttpClient85 = okHttpClient32.setProxy(proxy65);
        java.net.SocketAddress socketAddress86 = proxy65.address();
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(proxySelector7);
        org.junit.Assert.assertNull(proxySelector11);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNull(cookieHandler20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNull(responseCache25);
        org.junit.Assert.assertNotNull(okAuthenticator26);
        org.junit.Assert.assertNull(hostnameVerifier27);
        org.junit.Assert.assertNotNull(sSLSocketFactory28);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertNull(cookieHandler34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(proxySelector36);
        org.junit.Assert.assertNull(proxySelector40);
        org.junit.Assert.assertNotNull(okHttpClient42);
        org.junit.Assert.assertNull(proxySelector43);
        org.junit.Assert.assertNull(responseCache44);
        org.junit.Assert.assertNotNull(routeSet45);
        org.junit.Assert.assertNull(cookieHandler47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(okHttpClient49);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(okHttpClient54);
        org.junit.Assert.assertNotNull(okHttpClient59);
// flaky:         org.junit.Assert.assertNull(proxySelector60);
        org.junit.Assert.assertNotNull(okHttpClient61);
        org.junit.Assert.assertNotNull(hostnameVerifier63);
        org.junit.Assert.assertNotNull(okHttpClient64);
        org.junit.Assert.assertNotNull(proxy65);
        org.junit.Assert.assertNull(socketAddress66);
        org.junit.Assert.assertNull(connectionPool70);
        org.junit.Assert.assertNull(connectionPool71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNull(cookieHandler75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(okHttpClient77);
        org.junit.Assert.assertNotNull(okHttpClient79);
        org.junit.Assert.assertNull(responseCache80);
// flaky:         org.junit.Assert.assertNull(proxySelector81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(okHttpClient83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "DIRECT" + "'", str84, "DIRECT");
        org.junit.Assert.assertNotNull(okHttpClient85);
        org.junit.Assert.assertNull(socketAddress86);
    }

    @Test
    public void test03368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03368");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray2 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet3 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet3, routeArray2);
        okHttpClient0.failedRoutes = routeSet3;
        java.net.ResponseCache responseCache6 = okHttpClient0.getResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler8 = okHttpClient7.getCookieHandler();
        boolean boolean9 = okHttpClient7.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient7.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet11 = okHttpClient10.failedRoutes;
        boolean boolean12 = okHttpClient10.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler14 = okHttpClient13.getCookieHandler();
        boolean boolean15 = okHttpClient13.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient13.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier17 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient16.setHostnameVerifier(hostnameVerifier17);
        java.net.ResponseCache responseCache19 = okHttpClient18.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator20 = okHttpClient18.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier21 = okHttpClient18.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory22 = okHttpClient18.getSslSocketFactory();
        java.lang.String[] strArray23 = sSLSocketFactory22.getSupportedCipherSuites();
        java.lang.String[] strArray24 = sSLSocketFactory22.getDefaultCipherSuites();
        java.lang.String[] strArray25 = sSLSocketFactory22.getDefaultCipherSuites();
        java.lang.String[] strArray26 = sSLSocketFactory22.getDefaultCipherSuites();
        java.lang.String[] strArray27 = sSLSocketFactory22.getSupportedCipherSuites();
        okHttpClient10.sslSocketFactory = sSLSocketFactory22;
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory22);
        java.net.ResponseCache responseCache30 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient0.setResponseCache(responseCache30);
        com.squareup.okhttp.OkHttpClient okHttpClient32 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler33 = okHttpClient32.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray34 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet35 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet35, routeArray34);
        okHttpClient32.failedRoutes = routeSet35;
        java.net.Proxy proxy38 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient39 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler40 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient41 = okHttpClient39.setCookieHandler(cookieHandler40);
        com.squareup.okhttp.OkHttpClient okHttpClient43 = okHttpClient39.setFollowProtocolRedirects(true);
        boolean boolean44 = proxy38.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient45 = okHttpClient32.setProxy(proxy38);
        java.lang.String str46 = proxy38.toString();
        java.net.Proxy.Type type47 = proxy38.type();
        com.squareup.okhttp.OkHttpClient okHttpClient48 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler49 = okHttpClient48.getCookieHandler();
        java.net.ResponseCache responseCache50 = null;
        okHttpClient48.responseCache = responseCache50;
        boolean boolean52 = okHttpClient48.followProtocolRedirects;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory53 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient54 = okHttpClient48.setSSLSocketFactory(sSLSocketFactory53);
        java.net.CookieHandler cookieHandler55 = okHttpClient48.cookieHandler;
        boolean boolean56 = proxy38.equals((java.lang.Object) okHttpClient48);
        com.squareup.okhttp.OkHttpClient okHttpClient57 = okHttpClient31.setProxy(proxy38);
        java.net.Proxy.Type type58 = proxy38.type();
        java.net.SocketAddress socketAddress59 = proxy38.address();
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertNotNull(routeArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(responseCache6);
        org.junit.Assert.assertNull(cookieHandler8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertNotNull(routeSet11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(cookieHandler14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNull(responseCache19);
        org.junit.Assert.assertNotNull(okAuthenticator20);
        org.junit.Assert.assertNull(hostnameVerifier21);
        org.junit.Assert.assertNotNull(sSLSocketFactory22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(okHttpClient29);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNull(cookieHandler33);
        org.junit.Assert.assertNotNull(routeArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(proxy38);
        org.junit.Assert.assertNotNull(okHttpClient41);
        org.junit.Assert.assertNotNull(okHttpClient43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(okHttpClient45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "DIRECT" + "'", str46, "DIRECT");
        org.junit.Assert.assertTrue("'" + type47 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type47.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(cookieHandler49);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(okHttpClient54);
        org.junit.Assert.assertNull(cookieHandler55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(okHttpClient57);
        org.junit.Assert.assertTrue("'" + type58 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type58.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress59);
    }

    @Test
    public void test03369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03369");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool6 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int7 = connectionPool6.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient3.setConnectionPool(connectionPool6);
        com.squareup.okhttp.OkHttpClient okHttpClient9 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector10 = null;
        okHttpClient9.proxySelector = proxySelector10;
        java.net.ProxySelector proxySelector12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient9.setProxySelector(proxySelector12);
        java.net.ProxySelector proxySelector14 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient9.setProxySelector(proxySelector14);
        okHttpClient8.proxySelector = proxySelector14;
        java.net.CookieHandler cookieHandler17 = null;
        okHttpClient8.cookieHandler = cookieHandler17;
        com.squareup.okhttp.ConnectionPool connectionPool19 = okHttpClient8.connectionPool;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler21 = okHttpClient20.getCookieHandler();
        boolean boolean22 = okHttpClient20.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator23 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient20.setAuthenticator(okAuthenticator23);
        java.net.Proxy proxy25 = okHttpClient20.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient20.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient27 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier28 = okHttpClient27.hostnameVerifier;
        java.net.ResponseCache responseCache29 = okHttpClient27.getResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient30 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler31 = okHttpClient30.getCookieHandler();
        boolean boolean32 = okHttpClient30.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient30.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool36 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int37 = connectionPool36.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient33.setConnectionPool(connectionPool36);
        javax.net.ssl.HostnameVerifier hostnameVerifier39 = null;
        okHttpClient33.hostnameVerifier = hostnameVerifier39;
        com.squareup.okhttp.ConnectionPool connectionPool41 = okHttpClient33.getConnectionPool();
        okHttpClient27.connectionPool = connectionPool41;
        java.net.CookieHandler cookieHandler43 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient44 = okHttpClient27.setCookieHandler(cookieHandler43);
        com.squareup.okhttp.OkHttpClient okHttpClient45 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector46 = null;
        okHttpClient45.proxySelector = proxySelector46;
        java.net.ProxySelector proxySelector48 = okHttpClient45.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier49 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient45.setHostnameVerifier(hostnameVerifier49);
        java.net.ProxySelector proxySelector51 = okHttpClient45.proxySelector;
        java.net.ResponseCache responseCache52 = okHttpClient45.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet53 = okHttpClient45.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient54 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler55 = okHttpClient54.getCookieHandler();
        boolean boolean56 = okHttpClient54.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient57 = okHttpClient54.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool60 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int61 = connectionPool60.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient62 = okHttpClient57.setConnectionPool(connectionPool60);
        com.squareup.okhttp.OkHttpClient okHttpClient63 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector64 = null;
        okHttpClient63.proxySelector = proxySelector64;
        java.net.ProxySelector proxySelector66 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient67 = okHttpClient63.setProxySelector(proxySelector66);
        java.net.ProxySelector proxySelector68 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient69 = okHttpClient63.setProxySelector(proxySelector68);
        okHttpClient62.proxySelector = proxySelector68;
        javax.net.ssl.HostnameVerifier hostnameVerifier71 = okHttpClient62.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient72 = okHttpClient45.setHostnameVerifier(hostnameVerifier71);
        javax.net.ssl.HostnameVerifier hostnameVerifier73 = okHttpClient72.getHostnameVerifier();
        okHttpClient44.hostnameVerifier = hostnameVerifier73;
        com.squareup.okhttp.OkHttpClient okHttpClient75 = okHttpClient20.setHostnameVerifier(hostnameVerifier73);
        com.squareup.okhttp.OkHttpClient okHttpClient76 = okHttpClient8.setHostnameVerifier(hostnameVerifier73);
        com.squareup.okhttp.OkAuthenticator okAuthenticator77 = okHttpClient8.getAuthenticator();
        java.net.URL uRL78 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.HttpURLConnection httpURLConnection79 = okHttpClient8.open(uRL78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertNotNull(okHttpClient13);
// flaky:         org.junit.Assert.assertNull(proxySelector14);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNotNull(connectionPool19);
        org.junit.Assert.assertNull(cookieHandler21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNull(proxy25);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNull(hostnameVerifier28);
        org.junit.Assert.assertNull(responseCache29);
        org.junit.Assert.assertNull(cookieHandler31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(okHttpClient33);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNotNull(connectionPool41);
        org.junit.Assert.assertNotNull(okHttpClient44);
        org.junit.Assert.assertNull(proxySelector48);
        org.junit.Assert.assertNotNull(okHttpClient50);
        org.junit.Assert.assertNull(proxySelector51);
        org.junit.Assert.assertNull(responseCache52);
        org.junit.Assert.assertNotNull(routeSet53);
        org.junit.Assert.assertNull(cookieHandler55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(okHttpClient57);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(okHttpClient62);
        org.junit.Assert.assertNotNull(okHttpClient67);
// flaky:         org.junit.Assert.assertNull(proxySelector68);
        org.junit.Assert.assertNotNull(okHttpClient69);
        org.junit.Assert.assertNotNull(hostnameVerifier71);
        org.junit.Assert.assertNotNull(okHttpClient72);
        org.junit.Assert.assertNotNull(hostnameVerifier73);
        org.junit.Assert.assertNotNull(okHttpClient75);
        org.junit.Assert.assertNotNull(okHttpClient76);
        org.junit.Assert.assertNotNull(okAuthenticator77);
    }

    @Test
    public void test03370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03370");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet4 = okHttpClient3.failedRoutes;
        boolean boolean5 = okHttpClient3.getFollowProtocolRedirects();
        java.net.Proxy proxy6 = java.net.Proxy.NO_PROXY;
        okHttpClient3.proxy = proxy6;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler9 = okHttpClient8.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray10 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet11 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet11, routeArray10);
        okHttpClient8.failedRoutes = routeSet11;
        java.net.Proxy proxy14 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient15.setCookieHandler(cookieHandler16);
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient15.setFollowProtocolRedirects(true);
        boolean boolean20 = proxy14.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient8.setProxy(proxy14);
        java.net.SocketAddress socketAddress22 = proxy14.address();
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient3.setProxy(proxy14);
        java.net.ResponseCache responseCache24 = okHttpClient23.getResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient25 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler26 = okHttpClient25.getCookieHandler();
        boolean boolean27 = okHttpClient25.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient25.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet29 = okHttpClient28.failedRoutes;
        boolean boolean30 = okHttpClient28.getFollowProtocolRedirects();
        java.net.Proxy proxy31 = java.net.Proxy.NO_PROXY;
        okHttpClient28.proxy = proxy31;
        java.lang.String str33 = proxy31.toString();
        okHttpClient23.proxy = proxy31;
        java.lang.String str35 = proxy31.toString();
        java.lang.String str36 = proxy31.toString();
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertNotNull(routeSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(proxy6);
        org.junit.Assert.assertNull(cookieHandler9);
        org.junit.Assert.assertNotNull(routeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(proxy14);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNull(socketAddress22);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertNull(responseCache24);
        org.junit.Assert.assertNull(cookieHandler26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNotNull(routeSet29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(proxy31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "DIRECT" + "'", str33, "DIRECT");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "DIRECT" + "'", str35, "DIRECT");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "DIRECT" + "'", str36, "DIRECT");
    }

    @Test
    public void test03371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03371");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray2 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet3 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet3, routeArray2);
        okHttpClient0.failedRoutes = routeSet3;
        java.net.Proxy proxy6 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient7.setCookieHandler(cookieHandler8);
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient7.setFollowProtocolRedirects(true);
        boolean boolean12 = proxy6.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient0.setProxy(proxy6);
        com.squareup.okhttp.OkAuthenticator okAuthenticator14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient13.setAuthenticator(okAuthenticator14);
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient15.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector18 = null;
        okHttpClient17.proxySelector = proxySelector18;
        java.net.ProxySelector proxySelector20 = okHttpClient17.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier21 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient17.setHostnameVerifier(hostnameVerifier21);
        boolean boolean23 = okHttpClient17.getFollowProtocolRedirects();
        com.squareup.okhttp.ConnectionPool connectionPool26 = new com.squareup.okhttp.ConnectionPool((int) 'a', (long) (byte) -1);
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient17.setConnectionPool(connectionPool26);
        com.squareup.okhttp.OkHttpClient okHttpClient28 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler29 = okHttpClient28.getCookieHandler();
        boolean boolean30 = okHttpClient28.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient28.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier32 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient31.setHostnameVerifier(hostnameVerifier32);
        java.net.ResponseCache responseCache34 = okHttpClient33.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator35 = okHttpClient33.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier36 = okHttpClient33.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory37 = okHttpClient33.getSslSocketFactory();
        okHttpClient17.sslSocketFactory = sSLSocketFactory37;
        java.net.Socket socket39 = sSLSocketFactory37.createSocket();
        com.squareup.okhttp.OkHttpClient okHttpClient40 = okHttpClient15.setSSLSocketFactory(sSLSocketFactory37);
        java.lang.String[] strArray41 = sSLSocketFactory37.getDefaultCipherSuites();
        java.net.InetAddress inetAddress42 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket44 = sSLSocketFactory37.createSocket(inetAddress42, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.net.ConnectException; message: Connection refused (Connection refused)");
        } catch (java.net.ConnectException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertNotNull(routeArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(proxy6);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNull(proxySelector20);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNull(cookieHandler29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNotNull(okHttpClient33);
        org.junit.Assert.assertNull(responseCache34);
        org.junit.Assert.assertNotNull(okAuthenticator35);
        org.junit.Assert.assertNull(hostnameVerifier36);
        org.junit.Assert.assertNotNull(sSLSocketFactory37);
        org.junit.Assert.assertNotNull(socket39);
        org.junit.Assert.assertEquals(socket39.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(okHttpClient40);
        org.junit.Assert.assertNotNull(strArray41);
    }

    @Test
    public void test03372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03372");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setHostnameVerifier(hostnameVerifier4);
        java.net.ResponseCache responseCache6 = okHttpClient5.responseCache;
        java.net.CookieHandler cookieHandler7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient5.setCookieHandler(cookieHandler7);
        boolean boolean9 = okHttpClient5.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator10 = okHttpClient5.authenticator;
        com.squareup.okhttp.ConnectionPool connectionPool11 = okHttpClient5.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator12 = okHttpClient5.getAuthenticator();
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler14 = okHttpClient13.getCookieHandler();
        boolean boolean15 = okHttpClient13.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient13.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector18 = null;
        okHttpClient17.proxySelector = proxySelector18;
        java.net.ProxySelector proxySelector20 = okHttpClient17.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier21 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient17.setHostnameVerifier(hostnameVerifier21);
        java.net.ProxySelector proxySelector23 = okHttpClient17.proxySelector;
        java.net.ResponseCache responseCache24 = okHttpClient17.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet25 = okHttpClient17.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler27 = okHttpClient26.getCookieHandler();
        boolean boolean28 = okHttpClient26.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient26.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool32 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int33 = connectionPool32.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient29.setConnectionPool(connectionPool32);
        com.squareup.okhttp.OkHttpClient okHttpClient35 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector36 = null;
        okHttpClient35.proxySelector = proxySelector36;
        java.net.ProxySelector proxySelector38 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient35.setProxySelector(proxySelector38);
        java.net.ProxySelector proxySelector40 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient41 = okHttpClient35.setProxySelector(proxySelector40);
        okHttpClient34.proxySelector = proxySelector40;
        javax.net.ssl.HostnameVerifier hostnameVerifier43 = okHttpClient34.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient44 = okHttpClient17.setHostnameVerifier(hostnameVerifier43);
        javax.net.ssl.HostnameVerifier hostnameVerifier45 = okHttpClient44.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient46 = okHttpClient13.setHostnameVerifier(hostnameVerifier45);
        java.net.Proxy proxy47 = okHttpClient46.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient48 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector49 = null;
        okHttpClient48.proxySelector = proxySelector49;
        java.net.ProxySelector proxySelector51 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient52 = okHttpClient48.setProxySelector(proxySelector51);
        java.net.ProxySelector proxySelector53 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient54 = okHttpClient48.setProxySelector(proxySelector53);
        java.net.ProxySelector.setDefault(proxySelector53);
        okHttpClient46.proxySelector = proxySelector53;
        com.squareup.okhttp.OkHttpClient okHttpClient57 = okHttpClient5.setProxySelector(proxySelector53);
        java.net.Proxy proxy58 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient59 = okHttpClient57.setProxy(proxy58);
        com.squareup.okhttp.OkHttpClient okHttpClient60 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier61 = okHttpClient60.hostnameVerifier;
        java.net.ResponseCache responseCache62 = okHttpClient60.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator63 = okHttpClient60.authenticator;
        java.util.Set<com.squareup.okhttp.Route> routeSet64 = okHttpClient60.failedRoutes;
        okHttpClient57.failedRoutes = routeSet64;
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(responseCache6);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(okAuthenticator10);
        org.junit.Assert.assertNull(connectionPool11);
        org.junit.Assert.assertNull(okAuthenticator12);
        org.junit.Assert.assertNull(cookieHandler14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNull(proxySelector20);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNull(proxySelector23);
        org.junit.Assert.assertNull(responseCache24);
        org.junit.Assert.assertNotNull(routeSet25);
        org.junit.Assert.assertNull(cookieHandler27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(okHttpClient29);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertNotNull(okHttpClient39);
// flaky:         org.junit.Assert.assertNull(proxySelector40);
        org.junit.Assert.assertNotNull(okHttpClient41);
        org.junit.Assert.assertNotNull(hostnameVerifier43);
        org.junit.Assert.assertNotNull(okHttpClient44);
        org.junit.Assert.assertNotNull(hostnameVerifier45);
        org.junit.Assert.assertNotNull(okHttpClient46);
        org.junit.Assert.assertNull(proxy47);
        org.junit.Assert.assertNotNull(okHttpClient52);
// flaky:         org.junit.Assert.assertNull(proxySelector53);
        org.junit.Assert.assertNotNull(okHttpClient54);
        org.junit.Assert.assertNotNull(okHttpClient57);
        org.junit.Assert.assertNotNull(okHttpClient59);
        org.junit.Assert.assertNull(hostnameVerifier61);
        org.junit.Assert.assertNull(responseCache62);
        org.junit.Assert.assertNull(okAuthenticator63);
        org.junit.Assert.assertNotNull(routeSet64);
    }

    @Test
    public void test03373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03373");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray2 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet3 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet3, routeArray2);
        okHttpClient0.failedRoutes = routeSet3;
        java.net.Proxy proxy6 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient7.setCookieHandler(cookieHandler8);
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient7.setFollowProtocolRedirects(true);
        boolean boolean12 = proxy6.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient0.setProxy(proxy6);
        com.squareup.okhttp.OkAuthenticator okAuthenticator14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient13.setAuthenticator(okAuthenticator14);
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient15.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient15.setFollowProtocolRedirects(true);
        java.net.ResponseCache responseCache19 = null;
        okHttpClient15.responseCache = responseCache19;
        java.net.ResponseCache responseCache21 = null;
        okHttpClient15.responseCache = responseCache21;
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertNotNull(routeArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(proxy6);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNotNull(okHttpClient18);
    }

    @Test
    public void test03374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03374");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet4 = okHttpClient3.failedRoutes;
        boolean boolean5 = okHttpClient3.getFollowProtocolRedirects();
        java.net.Proxy proxy6 = java.net.Proxy.NO_PROXY;
        okHttpClient3.proxy = proxy6;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler9 = okHttpClient8.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray10 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet11 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet11, routeArray10);
        okHttpClient8.failedRoutes = routeSet11;
        java.net.Proxy proxy14 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient15.setCookieHandler(cookieHandler16);
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient15.setFollowProtocolRedirects(true);
        boolean boolean20 = proxy14.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient8.setProxy(proxy14);
        java.net.SocketAddress socketAddress22 = proxy14.address();
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient3.setProxy(proxy14);
        okHttpClient23.followProtocolRedirects = false;
        java.net.CookieHandler cookieHandler26 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient23.setCookieHandler(cookieHandler26);
        javax.net.ssl.HostnameVerifier hostnameVerifier28 = okHttpClient23.getHostnameVerifier();
        java.net.ResponseCache responseCache29 = okHttpClient23.responseCache;
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertNotNull(routeSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(proxy6);
        org.junit.Assert.assertNull(cookieHandler9);
        org.junit.Assert.assertNotNull(routeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(proxy14);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNull(socketAddress22);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNotNull(hostnameVerifier28);
        org.junit.Assert.assertNull(responseCache29);
    }

    @Test
    public void test03375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03375");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        java.net.ResponseCache responseCache5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient0.setResponseCache(responseCache5);
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool9.evictAll();
        okHttpClient0.connectionPool = connectionPool9;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory12 = okHttpClient0.sslSocketFactory;
        com.squareup.okhttp.ConnectionPool connectionPool13 = okHttpClient0.getConnectionPool();
        com.squareup.okhttp.ConnectionPool connectionPool16 = new com.squareup.okhttp.ConnectionPool((int) ' ', (long) (short) 100);
        com.squareup.okhttp.Address address17 = null;
        com.squareup.okhttp.Connection connection18 = connectionPool16.get(address17);
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient0.setConnectionPool(connectionPool16);
        com.squareup.okhttp.OkHttpClient okHttpClient20 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler21 = okHttpClient20.getCookieHandler();
        boolean boolean22 = okHttpClient20.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator23 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient20.setAuthenticator(okAuthenticator23);
        com.squareup.okhttp.OkAuthenticator okAuthenticator25 = okHttpClient20.authenticator;
        java.net.ResponseCache responseCache26 = okHttpClient20.getResponseCache();
        java.net.CookieHandler cookieHandler27 = okHttpClient20.cookieHandler;
        java.net.ResponseCache responseCache28 = okHttpClient20.responseCache;
        com.squareup.okhttp.OkHttpClient okHttpClient29 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler30 = okHttpClient29.getCookieHandler();
        boolean boolean31 = okHttpClient29.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator32 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient29.setAuthenticator(okAuthenticator32);
        java.net.Proxy proxy34 = okHttpClient29.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient29.copyWithDefaults();
        java.net.CookieHandler cookieHandler36 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient29.setCookieHandler(cookieHandler36);
        com.squareup.okhttp.OkHttpClient okHttpClient38 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier39 = okHttpClient38.hostnameVerifier;
        java.net.ResponseCache responseCache40 = okHttpClient38.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator41 = okHttpClient38.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient42 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler43 = okHttpClient42.getCookieHandler();
        boolean boolean44 = okHttpClient42.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient45 = okHttpClient42.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier46 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient47 = okHttpClient45.setHostnameVerifier(hostnameVerifier46);
        java.net.ResponseCache responseCache48 = okHttpClient47.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator49 = okHttpClient47.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier50 = okHttpClient47.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory51 = okHttpClient47.getSslSocketFactory();
        java.lang.String[] strArray52 = sSLSocketFactory51.getSupportedCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient53 = okHttpClient38.setSSLSocketFactory(sSLSocketFactory51);
        com.squareup.okhttp.OkHttpClient okHttpClient54 = okHttpClient37.setSSLSocketFactory(sSLSocketFactory51);
        okHttpClient20.sslSocketFactory = sSLSocketFactory51;
        java.lang.String[] strArray56 = sSLSocketFactory51.getSupportedCipherSuites();
        okHttpClient19.sslSocketFactory = sSLSocketFactory51;
        java.lang.String[] strArray58 = sSLSocketFactory51.getDefaultCipherSuites();
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket61 = sSLSocketFactory51.createSocket("DIRECT", (int) '4');
            org.junit.Assert.fail("Expected exception of type java.net.UnknownHostException; message: DIRECT");
        } catch (java.net.UnknownHostException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient6);
        org.junit.Assert.assertNull(sSLSocketFactory12);
        org.junit.Assert.assertNotNull(connectionPool13);
        org.junit.Assert.assertNull(connection18);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNull(cookieHandler21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNull(okAuthenticator25);
        org.junit.Assert.assertNull(responseCache26);
        org.junit.Assert.assertNull(cookieHandler27);
        org.junit.Assert.assertNull(responseCache28);
        org.junit.Assert.assertNull(cookieHandler30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(okHttpClient33);
        org.junit.Assert.assertNull(proxy34);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNotNull(okHttpClient37);
        org.junit.Assert.assertNull(hostnameVerifier39);
        org.junit.Assert.assertNull(responseCache40);
        org.junit.Assert.assertNull(okAuthenticator41);
        org.junit.Assert.assertNull(cookieHandler43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(okHttpClient45);
        org.junit.Assert.assertNotNull(okHttpClient47);
        org.junit.Assert.assertNull(responseCache48);
        org.junit.Assert.assertNotNull(okAuthenticator49);
        org.junit.Assert.assertNull(hostnameVerifier50);
        org.junit.Assert.assertNotNull(sSLSocketFactory51);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(okHttpClient53);
        org.junit.Assert.assertNotNull(okHttpClient54);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(strArray58);
    }

    @Test
    public void test03376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03376");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = okHttpClient0.hostnameVerifier;
        java.net.ResponseCache responseCache2 = okHttpClient0.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = okHttpClient0.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setFollowProtocolRedirects(true);
        java.net.ResponseCache responseCache6 = okHttpClient5.getResponseCache();
        java.net.Proxy proxy7 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress8 = proxy7.address();
        com.squareup.okhttp.OkHttpClient okHttpClient9 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector10 = null;
        okHttpClient9.proxySelector = proxySelector10;
        com.squareup.okhttp.ConnectionPool connectionPool12 = okHttpClient9.connectionPool;
        com.squareup.okhttp.ConnectionPool connectionPool13 = okHttpClient9.getConnectionPool();
        boolean boolean14 = proxy7.equals((java.lang.Object) okHttpClient9);
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler16 = okHttpClient15.getCookieHandler();
        boolean boolean17 = okHttpClient15.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient15.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool21 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int22 = connectionPool21.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient18.setConnectionPool(connectionPool21);
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient9.setConnectionPool(connectionPool21);
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient24.setFollowProtocolRedirects(false);
        com.squareup.okhttp.ConnectionPool connectionPool29 = new com.squareup.okhttp.ConnectionPool((-1), (long) 0);
        com.squareup.okhttp.OkHttpClient okHttpClient30 = okHttpClient24.setConnectionPool(connectionPool29);
        okHttpClient5.connectionPool = connectionPool29;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache32 = okHttpClient5.okResponseCache();
        java.net.ResponseCache responseCache33 = okHttpClient5.getResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient5.copyWithDefaults();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache35 = okHttpClient5.okResponseCache();
        org.junit.Assert.assertNull(hostnameVerifier1);
        org.junit.Assert.assertNull(responseCache2);
        org.junit.Assert.assertNull(okAuthenticator3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(responseCache6);
        org.junit.Assert.assertNotNull(proxy7);
        org.junit.Assert.assertNull(socketAddress8);
        org.junit.Assert.assertNull(connectionPool12);
        org.junit.Assert.assertNull(connectionPool13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(cookieHandler16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNotNull(okHttpClient30);
        org.junit.Assert.assertNull(okResponseCache32);
        org.junit.Assert.assertNull(responseCache33);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertNull(okResponseCache35);
    }

    @Test
    public void test03377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03377");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setHostnameVerifier(hostnameVerifier4);
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler7 = okHttpClient6.getCookieHandler();
        boolean boolean8 = okHttpClient6.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient6.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient10 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector11 = null;
        okHttpClient10.proxySelector = proxySelector11;
        java.net.ProxySelector proxySelector13 = okHttpClient10.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient10.setHostnameVerifier(hostnameVerifier14);
        java.net.ProxySelector proxySelector16 = okHttpClient10.proxySelector;
        java.net.ResponseCache responseCache17 = okHttpClient10.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet18 = okHttpClient10.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler20 = okHttpClient19.getCookieHandler();
        boolean boolean21 = okHttpClient19.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient19.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool25 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int26 = connectionPool25.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient22.setConnectionPool(connectionPool25);
        com.squareup.okhttp.OkHttpClient okHttpClient28 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector29 = null;
        okHttpClient28.proxySelector = proxySelector29;
        java.net.ProxySelector proxySelector31 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient28.setProxySelector(proxySelector31);
        java.net.ProxySelector proxySelector33 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient28.setProxySelector(proxySelector33);
        okHttpClient27.proxySelector = proxySelector33;
        javax.net.ssl.HostnameVerifier hostnameVerifier36 = okHttpClient27.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient10.setHostnameVerifier(hostnameVerifier36);
        javax.net.ssl.HostnameVerifier hostnameVerifier38 = okHttpClient37.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient6.setHostnameVerifier(hostnameVerifier38);
        javax.net.ssl.HostnameVerifier hostnameVerifier40 = okHttpClient39.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient41 = okHttpClient5.setHostnameVerifier(hostnameVerifier40);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory42 = okHttpClient5.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient43 = okHttpClient5.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient44 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler45 = okHttpClient44.getCookieHandler();
        java.net.ResponseCache responseCache46 = null;
        okHttpClient44.responseCache = responseCache46;
        boolean boolean48 = okHttpClient44.followProtocolRedirects;
        java.net.CookieHandler cookieHandler49 = okHttpClient44.cookieHandler;
        com.squareup.okhttp.ConnectionPool connectionPool50 = okHttpClient44.getConnectionPool();
        com.squareup.okhttp.ConnectionPool connectionPool53 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool53.evictAll();
        com.squareup.okhttp.Address address55 = null;
        com.squareup.okhttp.Connection connection56 = connectionPool53.get(address55);
        int int57 = connectionPool53.getHttpConnectionCount();
        okHttpClient44.connectionPool = connectionPool53;
        com.squareup.okhttp.OkHttpClient okHttpClient59 = okHttpClient5.setConnectionPool(connectionPool53);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory60 = okHttpClient59.getSslSocketFactory();
        java.net.ResponseCache responseCache61 = okHttpClient59.getResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient62 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler63 = okHttpClient62.getCookieHandler();
        boolean boolean64 = okHttpClient62.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient65 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler66 = okHttpClient65.getCookieHandler();
        boolean boolean67 = okHttpClient65.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient68 = okHttpClient65.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet69 = okHttpClient68.failedRoutes;
        boolean boolean70 = okHttpClient68.getFollowProtocolRedirects();
        java.net.Proxy proxy71 = java.net.Proxy.NO_PROXY;
        okHttpClient68.proxy = proxy71;
        okHttpClient62.proxy = proxy71;
        java.net.SocketAddress socketAddress74 = proxy71.address();
        com.squareup.okhttp.OkHttpClient okHttpClient75 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler76 = okHttpClient75.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray77 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet78 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet78, routeArray77);
        okHttpClient75.failedRoutes = routeSet78;
        java.net.Proxy proxy81 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient82 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler83 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient84 = okHttpClient82.setCookieHandler(cookieHandler83);
        com.squareup.okhttp.OkHttpClient okHttpClient86 = okHttpClient82.setFollowProtocolRedirects(true);
        boolean boolean87 = proxy81.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient88 = okHttpClient75.setProxy(proxy81);
        com.squareup.okhttp.OkAuthenticator okAuthenticator89 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient90 = okHttpClient88.setAuthenticator(okAuthenticator89);
        com.squareup.okhttp.OkHttpClient okHttpClient91 = okHttpClient90.copyWithDefaults();
        boolean boolean92 = proxy71.equals((java.lang.Object) okHttpClient91);
        okHttpClient59.proxy = proxy71;
        boolean boolean94 = okHttpClient59.getFollowProtocolRedirects();
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(cookieHandler7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNull(proxySelector13);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNull(proxySelector16);
        org.junit.Assert.assertNull(responseCache17);
        org.junit.Assert.assertNotNull(routeSet18);
        org.junit.Assert.assertNull(cookieHandler20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNotNull(okHttpClient32);
// flaky:         org.junit.Assert.assertNull(proxySelector33);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertNotNull(hostnameVerifier36);
        org.junit.Assert.assertNotNull(okHttpClient37);
        org.junit.Assert.assertNotNull(hostnameVerifier38);
        org.junit.Assert.assertNotNull(okHttpClient39);
        org.junit.Assert.assertNotNull(hostnameVerifier40);
        org.junit.Assert.assertNotNull(okHttpClient41);
        org.junit.Assert.assertNull(sSLSocketFactory42);
        org.junit.Assert.assertNotNull(okHttpClient43);
        org.junit.Assert.assertNull(cookieHandler45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(cookieHandler49);
        org.junit.Assert.assertNull(connectionPool50);
        org.junit.Assert.assertNull(connection56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(okHttpClient59);
        org.junit.Assert.assertNull(sSLSocketFactory60);
        org.junit.Assert.assertNull(responseCache61);
        org.junit.Assert.assertNull(cookieHandler63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNull(cookieHandler66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(okHttpClient68);
        org.junit.Assert.assertNotNull(routeSet69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(proxy71);
        org.junit.Assert.assertNull(socketAddress74);
        org.junit.Assert.assertNull(cookieHandler76);
        org.junit.Assert.assertNotNull(routeArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(proxy81);
        org.junit.Assert.assertNotNull(okHttpClient84);
        org.junit.Assert.assertNotNull(okHttpClient86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(okHttpClient88);
        org.junit.Assert.assertNotNull(okHttpClient90);
        org.junit.Assert.assertNotNull(okHttpClient91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
    }

    @Test
    public void test03378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03378");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray2 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet3 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet3, routeArray2);
        okHttpClient0.failedRoutes = routeSet3;
        java.net.Proxy proxy6 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient7.setCookieHandler(cookieHandler8);
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient7.setFollowProtocolRedirects(true);
        boolean boolean12 = proxy6.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient0.setProxy(proxy6);
        com.squareup.okhttp.OkAuthenticator okAuthenticator14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient13.setAuthenticator(okAuthenticator14);
        boolean boolean16 = okHttpClient15.followProtocolRedirects;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory17 = okHttpClient15.getSslSocketFactory();
        com.squareup.okhttp.OkAuthenticator okAuthenticator18 = okHttpClient15.getAuthenticator();
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertNotNull(routeArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(proxy6);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(sSLSocketFactory17);
        org.junit.Assert.assertNull(okAuthenticator18);
    }

    @Test
    public void test03379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03379");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool6 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int7 = connectionPool6.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient3.setConnectionPool(connectionPool6);
        com.squareup.okhttp.ConnectionPool connectionPool9 = okHttpClient3.connectionPool;
        java.net.ResponseCache responseCache10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient3.setResponseCache(responseCache10);
        com.squareup.okhttp.OkAuthenticator okAuthenticator12 = okHttpClient3.getAuthenticator();
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler14 = okHttpClient13.getCookieHandler();
        boolean boolean15 = okHttpClient13.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient13.setAuthenticator(okAuthenticator16);
        java.net.ResponseCache responseCache18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient13.setResponseCache(responseCache18);
        com.squareup.okhttp.ConnectionPool connectionPool22 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool22.evictAll();
        okHttpClient13.connectionPool = connectionPool22;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory25 = okHttpClient13.sslSocketFactory;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory26 = null;
        okHttpClient13.sslSocketFactory = sSLSocketFactory26;
        java.net.ProxySelector proxySelector28 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient13.setProxySelector(proxySelector28);
        com.squareup.okhttp.OkHttpClient okHttpClient30 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector31 = null;
        okHttpClient30.proxySelector = proxySelector31;
        java.net.ProxySelector proxySelector33 = okHttpClient30.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier34 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient30.setHostnameVerifier(hostnameVerifier34);
        java.net.ProxySelector proxySelector36 = java.net.ProxySelector.getDefault();
        okHttpClient30.proxySelector = proxySelector36;
        okHttpClient29.proxySelector = proxySelector36;
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient3.setProxySelector(proxySelector36);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory40 = okHttpClient3.getSslSocketFactory();
        java.net.Socket socket41 = sSLSocketFactory40.createSocket();
        java.lang.String[] strArray42 = sSLSocketFactory40.getSupportedCipherSuites();
        java.lang.String[] strArray43 = sSLSocketFactory40.getDefaultCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient44 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler45 = okHttpClient44.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray46 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet47 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet47, routeArray46);
        okHttpClient44.failedRoutes = routeSet47;
        java.net.Proxy proxy50 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient51 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler52 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient53 = okHttpClient51.setCookieHandler(cookieHandler52);
        com.squareup.okhttp.OkHttpClient okHttpClient55 = okHttpClient51.setFollowProtocolRedirects(true);
        boolean boolean56 = proxy50.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient57 = okHttpClient44.setProxy(proxy50);
        com.squareup.okhttp.OkAuthenticator okAuthenticator58 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient59 = okHttpClient57.setAuthenticator(okAuthenticator58);
        com.squareup.okhttp.OkHttpClient okHttpClient60 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler61 = okHttpClient60.getCookieHandler();
        boolean boolean62 = okHttpClient60.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient63 = okHttpClient60.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier64 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient65 = okHttpClient63.setHostnameVerifier(hostnameVerifier64);
        com.squareup.okhttp.OkAuthenticator okAuthenticator66 = okHttpClient65.getAuthenticator();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory67 = okHttpClient65.sslSocketFactory;
        okHttpClient57.sslSocketFactory = sSLSocketFactory67;
        java.net.Socket socket69 = sSLSocketFactory67.createSocket();
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket73 = sSLSocketFactory40.createSocket(socket69, "DIRECT", (int) (short) -1, true);
            org.junit.Assert.fail("Expected exception of type java.net.SocketException; message: Underlying socket is not connected");
        } catch (java.net.SocketException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(okAuthenticator12);
        org.junit.Assert.assertNull(cookieHandler14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNull(sSLSocketFactory25);
// flaky:         org.junit.Assert.assertNull(proxySelector28);
        org.junit.Assert.assertNotNull(okHttpClient29);
        org.junit.Assert.assertNull(proxySelector33);
        org.junit.Assert.assertNotNull(okHttpClient35);
// flaky:         org.junit.Assert.assertNull(proxySelector36);
        org.junit.Assert.assertNotNull(okHttpClient39);
        org.junit.Assert.assertNotNull(sSLSocketFactory40);
        org.junit.Assert.assertNotNull(socket41);
        org.junit.Assert.assertEquals(socket41.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNull(cookieHandler45);
        org.junit.Assert.assertNotNull(routeArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(proxy50);
        org.junit.Assert.assertNotNull(okHttpClient53);
        org.junit.Assert.assertNotNull(okHttpClient55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(okHttpClient57);
        org.junit.Assert.assertNotNull(okHttpClient59);
        org.junit.Assert.assertNull(cookieHandler61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(okHttpClient63);
        org.junit.Assert.assertNotNull(okHttpClient65);
        org.junit.Assert.assertNotNull(okAuthenticator66);
        org.junit.Assert.assertNotNull(sSLSocketFactory67);
        org.junit.Assert.assertNotNull(socket69);
        org.junit.Assert.assertEquals(socket69.toString(), "Socket[unconnected]");
    }

    @Test
    public void test03380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03380");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        java.net.ResponseCache responseCache2 = null;
        okHttpClient0.responseCache = responseCache2;
        boolean boolean4 = okHttpClient0.followProtocolRedirects;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory5);
        java.net.Proxy proxy7 = okHttpClient6.getProxy();
        java.net.ResponseCache responseCache8 = null;
        okHttpClient6.responseCache = responseCache8;
        java.net.ProxySelector proxySelector10 = okHttpClient6.proxySelector;
        com.squareup.okhttp.OkAuthenticator okAuthenticator11 = okHttpClient6.authenticator;
        com.squareup.okhttp.ConnectionPool connectionPool12 = okHttpClient6.getConnectionPool();
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(okHttpClient6);
        org.junit.Assert.assertNull(proxy7);
        org.junit.Assert.assertNull(proxySelector10);
        org.junit.Assert.assertNull(okAuthenticator11);
        org.junit.Assert.assertNull(connectionPool12);
    }

    @Test
    public void test03381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03381");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setHostnameVerifier(hostnameVerifier4);
        java.net.ResponseCache responseCache6 = okHttpClient5.responseCache;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient5.setFollowProtocolRedirects(true);
        java.net.ResponseCache responseCache9 = null;
        okHttpClient5.responseCache = responseCache9;
        okHttpClient5.followProtocolRedirects = false;
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(responseCache6);
        org.junit.Assert.assertNotNull(okHttpClient8);
    }

    @Test
    public void test03382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03382");
        java.net.Proxy proxy0 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress1 = proxy0.address();
        com.squareup.okhttp.OkHttpClient okHttpClient2 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector3 = null;
        okHttpClient2.proxySelector = proxySelector3;
        com.squareup.okhttp.ConnectionPool connectionPool5 = okHttpClient2.connectionPool;
        com.squareup.okhttp.ConnectionPool connectionPool6 = okHttpClient2.getConnectionPool();
        boolean boolean7 = proxy0.equals((java.lang.Object) okHttpClient2);
        com.squareup.okhttp.OkHttpClient okHttpClient8 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler9 = okHttpClient8.getCookieHandler();
        boolean boolean10 = okHttpClient8.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient8.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool14 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int15 = connectionPool14.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient11.setConnectionPool(connectionPool14);
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient2.setConnectionPool(connectionPool14);
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient17.setFollowProtocolRedirects(false);
        com.squareup.okhttp.ConnectionPool connectionPool22 = new com.squareup.okhttp.ConnectionPool((-1), (long) 0);
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient17.setConnectionPool(connectionPool22);
        java.net.ResponseCache responseCache24 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient17.setResponseCache(responseCache24);
        com.squareup.okhttp.OkHttpClient okHttpClient26 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler27 = okHttpClient26.getCookieHandler();
        boolean boolean28 = okHttpClient26.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator29 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient30 = okHttpClient26.setAuthenticator(okAuthenticator29);
        java.net.Proxy proxy31 = okHttpClient26.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient26.copyWithDefaults();
        java.net.CookieHandler cookieHandler33 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient26.setCookieHandler(cookieHandler33);
        com.squareup.okhttp.OkHttpClient okHttpClient35 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler36 = okHttpClient35.getCookieHandler();
        boolean boolean37 = okHttpClient35.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient35.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier39 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient40 = okHttpClient38.setHostnameVerifier(hostnameVerifier39);
        java.net.ResponseCache responseCache41 = okHttpClient40.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator42 = okHttpClient40.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier43 = okHttpClient40.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory44 = okHttpClient40.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient45 = okHttpClient26.setSSLSocketFactory(sSLSocketFactory44);
        com.squareup.okhttp.OkHttpClient okHttpClient46 = okHttpClient25.setSSLSocketFactory(sSLSocketFactory44);
        java.net.Socket socket47 = sSLSocketFactory44.createSocket();
        java.net.InetAddress inetAddress48 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket50 = sSLSocketFactory44.createSocket(inetAddress48, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.net.ConnectException; message: Connection refused (Connection refused)");
        } catch (java.net.ConnectException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(proxy0);
        org.junit.Assert.assertNull(socketAddress1);
        org.junit.Assert.assertNull(connectionPool5);
        org.junit.Assert.assertNull(connectionPool6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(cookieHandler9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertNotNull(okHttpClient25);
        org.junit.Assert.assertNull(cookieHandler27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(okHttpClient30);
        org.junit.Assert.assertNull(proxy31);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertNull(cookieHandler36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNotNull(okHttpClient40);
        org.junit.Assert.assertNull(responseCache41);
        org.junit.Assert.assertNotNull(okAuthenticator42);
        org.junit.Assert.assertNull(hostnameVerifier43);
        org.junit.Assert.assertNotNull(sSLSocketFactory44);
        org.junit.Assert.assertNotNull(okHttpClient45);
        org.junit.Assert.assertNotNull(okHttpClient46);
        org.junit.Assert.assertNotNull(socket47);
        org.junit.Assert.assertEquals(socket47.toString(), "Socket[unconnected]");
    }

    @Test
    public void test03383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03383");
        com.squareup.okhttp.ConnectionPool connectionPool2 = new com.squareup.okhttp.ConnectionPool((int) (byte) 100, (long) (byte) -1);
    }

    @Test
    public void test03384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03384");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        com.squareup.okhttp.ConnectionPool connectionPool7 = new com.squareup.okhttp.ConnectionPool(1, 0L);
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient0.setConnectionPool(connectionPool7);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory9 = okHttpClient8.getSslSocketFactory();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory10 = okHttpClient8.getSslSocketFactory();
        java.net.ProxySelector proxySelector11 = okHttpClient8.getProxySelector();
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient8.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool13 = okHttpClient12.getConnectionPool();
        com.squareup.okhttp.OkHttpClient okHttpClient14 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector15 = null;
        okHttpClient14.proxySelector = proxySelector15;
        java.net.ProxySelector proxySelector17 = okHttpClient14.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient14.setHostnameVerifier(hostnameVerifier18);
        java.net.ResponseCache responseCache20 = okHttpClient19.responseCache;
        java.net.CookieHandler cookieHandler21 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient19.setCookieHandler(cookieHandler21);
        java.net.CookieHandler cookieHandler23 = okHttpClient19.cookieHandler;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient19.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool27 = new com.squareup.okhttp.ConnectionPool((int) (short) 100, (-1L));
        okHttpClient24.connectionPool = connectionPool27;
        com.squareup.okhttp.OkHttpClient okHttpClient30 = okHttpClient24.setFollowProtocolRedirects(false);
        com.squareup.okhttp.ConnectionPool connectionPool33 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool33.evictAll();
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient24.setConnectionPool(connectionPool33);
        java.net.CookieHandler cookieHandler36 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient35.setCookieHandler(cookieHandler36);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory38 = okHttpClient37.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient12.setSSLSocketFactory(sSLSocketFactory38);
        java.net.InetAddress inetAddress40 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket42 = sSLSocketFactory38.createSocket(inetAddress40, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.net.ConnectException; message: Connection refused (Connection refused)");
        } catch (java.net.ConnectException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertNull(sSLSocketFactory9);
        org.junit.Assert.assertNull(sSLSocketFactory10);
        org.junit.Assert.assertNull(proxySelector11);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertNotNull(connectionPool13);
        org.junit.Assert.assertNull(proxySelector17);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNull(responseCache20);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNull(cookieHandler23);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNotNull(okHttpClient30);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNotNull(okHttpClient37);
        org.junit.Assert.assertNotNull(sSLSocketFactory38);
        org.junit.Assert.assertNotNull(okHttpClient39);
    }

    @Test
    public void test03385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03385");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.ProxySelector proxySelector5 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient0.setProxySelector(proxySelector5);
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler8 = okHttpClient7.getCookieHandler();
        java.net.ResponseCache responseCache9 = null;
        okHttpClient7.responseCache = responseCache9;
        boolean boolean11 = okHttpClient7.followProtocolRedirects;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient7.setSSLSocketFactory(sSLSocketFactory12);
        java.net.Proxy proxy14 = okHttpClient13.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector16 = null;
        okHttpClient15.proxySelector = proxySelector16;
        java.net.ProxySelector proxySelector18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient15.setProxySelector(proxySelector18);
        java.net.ProxySelector proxySelector20 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient15.setProxySelector(proxySelector20);
        java.net.ProxySelector.setDefault(proxySelector20);
        okHttpClient13.proxySelector = proxySelector20;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler25 = okHttpClient24.getCookieHandler();
        boolean boolean26 = okHttpClient24.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator27 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient24.setAuthenticator(okAuthenticator27);
        java.net.ResponseCache responseCache29 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient30 = okHttpClient24.setResponseCache(responseCache29);
        com.squareup.okhttp.ConnectionPool connectionPool33 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool33.evictAll();
        okHttpClient24.connectionPool = connectionPool33;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory36 = okHttpClient24.sslSocketFactory;
        java.net.Proxy proxy37 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient24.setProxy(proxy37);
        com.squareup.okhttp.OkHttpClient okHttpClient39 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler40 = okHttpClient39.getCookieHandler();
        boolean boolean41 = okHttpClient39.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient39.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet43 = okHttpClient42.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient44 = okHttpClient42.copyWithDefaults();
        java.net.ProxySelector proxySelector45 = okHttpClient42.getProxySelector();
        okHttpClient38.proxySelector = proxySelector45;
        boolean boolean47 = okHttpClient38.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient48 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler49 = okHttpClient48.getCookieHandler();
        boolean boolean50 = okHttpClient48.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient51 = okHttpClient48.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet52 = okHttpClient51.failedRoutes;
        boolean boolean53 = okHttpClient51.getFollowProtocolRedirects();
        java.net.Proxy proxy54 = java.net.Proxy.NO_PROXY;
        okHttpClient51.proxy = proxy54;
        java.lang.String str56 = proxy54.toString();
        java.lang.String str57 = proxy54.toString();
        com.squareup.okhttp.OkHttpClient okHttpClient58 = okHttpClient38.setProxy(proxy54);
        java.lang.String str59 = proxy54.toString();
        okHttpClient13.proxy = proxy54;
        okHttpClient6.proxy = proxy54;
        com.squareup.okhttp.OkAuthenticator okAuthenticator62 = okHttpClient6.getAuthenticator();
        com.squareup.okhttp.OkHttpClient okHttpClient63 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler64 = okHttpClient63.getCookieHandler();
        java.net.ResponseCache responseCache65 = okHttpClient63.responseCache;
        com.squareup.okhttp.OkHttpClient okHttpClient66 = okHttpClient63.copyWithDefaults();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory67 = okHttpClient66.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient68 = okHttpClient6.setSSLSocketFactory(sSLSocketFactory67);
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket71 = sSLSocketFactory67.createSocket("hi!", (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: port out of range:-1");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(okHttpClient4);
// flaky:         org.junit.Assert.assertNull(proxySelector5);
        org.junit.Assert.assertNotNull(okHttpClient6);
        org.junit.Assert.assertNull(cookieHandler8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNull(proxy14);
        org.junit.Assert.assertNotNull(okHttpClient19);
// flaky:         org.junit.Assert.assertNull(proxySelector20);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNull(cookieHandler25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNotNull(okHttpClient30);
        org.junit.Assert.assertNull(sSLSocketFactory36);
        org.junit.Assert.assertNotNull(proxy37);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNull(cookieHandler40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(okHttpClient42);
        org.junit.Assert.assertNotNull(routeSet43);
        org.junit.Assert.assertNotNull(okHttpClient44);
// flaky:         org.junit.Assert.assertNull(proxySelector45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(cookieHandler49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(okHttpClient51);
        org.junit.Assert.assertNotNull(routeSet52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(proxy54);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "DIRECT" + "'", str56, "DIRECT");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "DIRECT" + "'", str57, "DIRECT");
        org.junit.Assert.assertNotNull(okHttpClient58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "DIRECT" + "'", str59, "DIRECT");
        org.junit.Assert.assertNull(okAuthenticator62);
        org.junit.Assert.assertNull(cookieHandler64);
        org.junit.Assert.assertNull(responseCache65);
        org.junit.Assert.assertNotNull(okHttpClient66);
        org.junit.Assert.assertNotNull(sSLSocketFactory67);
        org.junit.Assert.assertNotNull(okHttpClient68);
    }

    @Test
    public void test03386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03386");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray2 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet3 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet3, routeArray2);
        okHttpClient0.failedRoutes = routeSet3;
        java.net.Proxy proxy6 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient7.setCookieHandler(cookieHandler8);
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient7.setFollowProtocolRedirects(true);
        boolean boolean12 = proxy6.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient0.setProxy(proxy6);
        com.squareup.okhttp.OkAuthenticator okAuthenticator14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient13.setAuthenticator(okAuthenticator14);
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient15.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient15.setFollowProtocolRedirects(true);
        java.net.ResponseCache responseCache19 = null;
        okHttpClient15.responseCache = responseCache19;
        java.net.URL uRL21 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.HttpURLConnection httpURLConnection22 = okHttpClient15.open(uRL21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertNotNull(routeArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(proxy6);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNotNull(okHttpClient18);
    }

    @Test
    public void test03387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03387");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setHostnameVerifier(hostnameVerifier4);
        java.net.ProxySelector proxySelector6 = okHttpClient0.proxySelector;
        java.net.ResponseCache responseCache7 = okHttpClient0.getResponseCache();
        java.net.CookieHandler cookieHandler8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient0.setCookieHandler(cookieHandler8);
        com.squareup.okhttp.OkAuthenticator okAuthenticator10 = okHttpClient0.getAuthenticator();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler12 = okHttpClient11.getCookieHandler();
        boolean boolean13 = okHttpClient11.getFollowProtocolRedirects();
        java.net.ProxySelector proxySelector14 = okHttpClient11.proxySelector;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector16 = null;
        okHttpClient15.proxySelector = proxySelector16;
        java.net.ProxySelector proxySelector18 = okHttpClient15.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier19 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient15.setHostnameVerifier(hostnameVerifier19);
        java.net.ProxySelector proxySelector21 = okHttpClient15.proxySelector;
        java.net.ResponseCache responseCache22 = okHttpClient15.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet23 = okHttpClient15.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler25 = okHttpClient24.getCookieHandler();
        boolean boolean26 = okHttpClient24.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient24.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool30 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int31 = connectionPool30.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient27.setConnectionPool(connectionPool30);
        com.squareup.okhttp.OkHttpClient okHttpClient33 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector34 = null;
        okHttpClient33.proxySelector = proxySelector34;
        java.net.ProxySelector proxySelector36 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient33.setProxySelector(proxySelector36);
        java.net.ProxySelector proxySelector38 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient33.setProxySelector(proxySelector38);
        okHttpClient32.proxySelector = proxySelector38;
        javax.net.ssl.HostnameVerifier hostnameVerifier41 = okHttpClient32.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient15.setHostnameVerifier(hostnameVerifier41);
        java.net.Proxy proxy43 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress44 = proxy43.address();
        com.squareup.okhttp.OkHttpClient okHttpClient45 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector46 = null;
        okHttpClient45.proxySelector = proxySelector46;
        com.squareup.okhttp.ConnectionPool connectionPool48 = okHttpClient45.connectionPool;
        com.squareup.okhttp.ConnectionPool connectionPool49 = okHttpClient45.getConnectionPool();
        boolean boolean50 = proxy43.equals((java.lang.Object) okHttpClient45);
        okHttpClient15.proxy = proxy43;
        com.squareup.okhttp.OkHttpClient okHttpClient52 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler53 = okHttpClient52.getCookieHandler();
        boolean boolean54 = okHttpClient52.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient55 = okHttpClient52.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier56 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient57 = okHttpClient55.setHostnameVerifier(hostnameVerifier56);
        java.net.ResponseCache responseCache58 = okHttpClient57.getResponseCache();
        java.net.ProxySelector proxySelector59 = okHttpClient57.getProxySelector();
        boolean boolean60 = proxy43.equals((java.lang.Object) proxySelector59);
        com.squareup.okhttp.OkHttpClient okHttpClient61 = okHttpClient11.setProxy(proxy43);
        com.squareup.okhttp.OkHttpClient okHttpClient62 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler63 = okHttpClient62.getCookieHandler();
        boolean boolean64 = okHttpClient62.getFollowProtocolRedirects();
        java.net.ProxySelector proxySelector65 = okHttpClient62.proxySelector;
        com.squareup.okhttp.ConnectionPool connectionPool68 = new com.squareup.okhttp.ConnectionPool((int) '4', (long) 100);
        okHttpClient62.connectionPool = connectionPool68;
        com.squareup.okhttp.OkHttpClient okHttpClient70 = okHttpClient61.setConnectionPool(connectionPool68);
        okHttpClient0.connectionPool = connectionPool68;
        com.squareup.okhttp.OkHttpClient okHttpClient72 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler73 = okHttpClient72.getCookieHandler();
        boolean boolean74 = okHttpClient72.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient75 = okHttpClient72.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet76 = okHttpClient75.failedRoutes;
        boolean boolean77 = okHttpClient75.getFollowProtocolRedirects();
        java.net.ResponseCache responseCache78 = null;
        okHttpClient75.responseCache = responseCache78;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory80 = okHttpClient75.getSslSocketFactory();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory81 = okHttpClient75.sslSocketFactory;
        com.squareup.okhttp.OkHttpClient okHttpClient82 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory81);
        java.net.InetAddress inetAddress83 = null;
        java.net.InetAddress inetAddress85 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket87 = sSLSocketFactory81.createSocket(inetAddress83, (int) 'a', inetAddress85, 1);
            org.junit.Assert.fail("Expected exception of type java.net.BindException; message: Permission denied (Bind failed)");
        } catch (java.net.BindException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(proxySelector6);
        org.junit.Assert.assertNull(responseCache7);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNull(okAuthenticator10);
        org.junit.Assert.assertNull(cookieHandler12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(proxySelector14);
        org.junit.Assert.assertNull(proxySelector18);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNull(proxySelector21);
        org.junit.Assert.assertNull(responseCache22);
        org.junit.Assert.assertNotNull(routeSet23);
        org.junit.Assert.assertNull(cookieHandler25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertNotNull(okHttpClient37);
// flaky:         org.junit.Assert.assertNull(proxySelector38);
        org.junit.Assert.assertNotNull(okHttpClient39);
        org.junit.Assert.assertNotNull(hostnameVerifier41);
        org.junit.Assert.assertNotNull(okHttpClient42);
        org.junit.Assert.assertNotNull(proxy43);
        org.junit.Assert.assertNull(socketAddress44);
        org.junit.Assert.assertNull(connectionPool48);
        org.junit.Assert.assertNull(connectionPool49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(cookieHandler53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(okHttpClient55);
        org.junit.Assert.assertNotNull(okHttpClient57);
        org.junit.Assert.assertNull(responseCache58);
// flaky:         org.junit.Assert.assertNull(proxySelector59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(okHttpClient61);
        org.junit.Assert.assertNull(cookieHandler63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNull(proxySelector65);
        org.junit.Assert.assertNotNull(okHttpClient70);
        org.junit.Assert.assertNull(cookieHandler73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(okHttpClient75);
        org.junit.Assert.assertNotNull(routeSet76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(sSLSocketFactory80);
        org.junit.Assert.assertNotNull(sSLSocketFactory81);
        org.junit.Assert.assertNotNull(okHttpClient82);
    }

    @Test
    public void test03388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03388");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        com.squareup.okhttp.OkHttpClient okHttpClient5 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector6 = null;
        okHttpClient5.proxySelector = proxySelector6;
        java.net.ProxySelector proxySelector8 = okHttpClient5.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient5.setHostnameVerifier(hostnameVerifier9);
        java.net.ProxySelector proxySelector11 = okHttpClient5.proxySelector;
        java.net.ResponseCache responseCache12 = okHttpClient5.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet13 = okHttpClient5.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler15 = okHttpClient14.getCookieHandler();
        boolean boolean16 = okHttpClient14.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient14.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool20 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int21 = connectionPool20.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient17.setConnectionPool(connectionPool20);
        com.squareup.okhttp.OkHttpClient okHttpClient23 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector24 = null;
        okHttpClient23.proxySelector = proxySelector24;
        java.net.ProxySelector proxySelector26 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient23.setProxySelector(proxySelector26);
        java.net.ProxySelector proxySelector28 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient23.setProxySelector(proxySelector28);
        okHttpClient22.proxySelector = proxySelector28;
        javax.net.ssl.HostnameVerifier hostnameVerifier31 = okHttpClient22.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient5.setHostnameVerifier(hostnameVerifier31);
        com.squareup.okhttp.OkHttpClient okHttpClient33 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler34 = okHttpClient33.getCookieHandler();
        boolean boolean35 = okHttpClient33.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient33.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool39 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int40 = connectionPool39.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient41 = okHttpClient36.setConnectionPool(connectionPool39);
        javax.net.ssl.HostnameVerifier hostnameVerifier42 = null;
        okHttpClient36.hostnameVerifier = hostnameVerifier42;
        com.squareup.okhttp.ConnectionPool connectionPool44 = okHttpClient36.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator45 = okHttpClient36.authenticator;
        okHttpClient5.authenticator = okAuthenticator45;
        com.squareup.okhttp.OkHttpClient okHttpClient47 = okHttpClient0.setAuthenticator(okAuthenticator45);
        com.squareup.okhttp.OkHttpClient okHttpClient48 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient49 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler50 = okHttpClient49.getCookieHandler();
        boolean boolean51 = okHttpClient49.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator52 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient53 = okHttpClient49.setAuthenticator(okAuthenticator52);
        java.net.ResponseCache responseCache54 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient55 = okHttpClient49.setResponseCache(responseCache54);
        com.squareup.okhttp.ConnectionPool connectionPool58 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool58.evictAll();
        okHttpClient49.connectionPool = connectionPool58;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory61 = okHttpClient49.sslSocketFactory;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory62 = null;
        okHttpClient49.sslSocketFactory = sSLSocketFactory62;
        java.net.ProxySelector proxySelector64 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient65 = okHttpClient49.setProxySelector(proxySelector64);
        okHttpClient0.proxySelector = proxySelector64;
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(proxySelector8);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertNull(proxySelector11);
        org.junit.Assert.assertNull(responseCache12);
        org.junit.Assert.assertNotNull(routeSet13);
        org.junit.Assert.assertNull(cookieHandler15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNotNull(okHttpClient27);
// flaky:         org.junit.Assert.assertNull(proxySelector28);
        org.junit.Assert.assertNotNull(okHttpClient29);
        org.junit.Assert.assertNotNull(hostnameVerifier31);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertNull(cookieHandler34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(okHttpClient41);
        org.junit.Assert.assertNotNull(connectionPool44);
        org.junit.Assert.assertNotNull(okAuthenticator45);
        org.junit.Assert.assertNotNull(okHttpClient47);
        org.junit.Assert.assertNotNull(okHttpClient48);
        org.junit.Assert.assertNull(cookieHandler50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(okHttpClient53);
        org.junit.Assert.assertNotNull(okHttpClient55);
        org.junit.Assert.assertNull(sSLSocketFactory61);
// flaky:         org.junit.Assert.assertNull(proxySelector64);
        org.junit.Assert.assertNotNull(okHttpClient65);
    }

    @Test
    public void test03389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03389");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient0.connectionPool;
        java.net.ResponseCache responseCache4 = null;
        okHttpClient0.responseCache = responseCache4;
        boolean boolean6 = okHttpClient0.getFollowProtocolRedirects();
        org.junit.Assert.assertNull(connectionPool3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test03390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03390");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient0.connectionPool;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler5 = okHttpClient4.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray6 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet7 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet7, routeArray6);
        okHttpClient4.failedRoutes = routeSet7;
        java.net.Proxy proxy10 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setCookieHandler(cookieHandler12);
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient11.setFollowProtocolRedirects(true);
        boolean boolean16 = proxy10.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient4.setProxy(proxy10);
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler19 = okHttpClient18.getCookieHandler();
        boolean boolean20 = okHttpClient18.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient18.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool24 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int25 = connectionPool24.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient21.setConnectionPool(connectionPool24);
        com.squareup.okhttp.OkHttpClient okHttpClient27 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector28 = null;
        okHttpClient27.proxySelector = proxySelector28;
        java.net.ProxySelector proxySelector30 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient27.setProxySelector(proxySelector30);
        java.net.ProxySelector proxySelector32 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient27.setProxySelector(proxySelector32);
        okHttpClient26.proxySelector = proxySelector32;
        okHttpClient4.proxySelector = proxySelector32;
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient0.setProxySelector(proxySelector32);
        java.net.CookieHandler cookieHandler37 = null;
        okHttpClient36.cookieHandler = cookieHandler37;
        java.net.Proxy proxy39 = okHttpClient36.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient40 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler41 = okHttpClient40.getCookieHandler();
        boolean boolean42 = okHttpClient40.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient43 = okHttpClient40.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet44 = okHttpClient43.failedRoutes;
        boolean boolean45 = okHttpClient43.getFollowProtocolRedirects();
        java.net.ProxySelector proxySelector46 = okHttpClient43.proxySelector;
        okHttpClient36.proxySelector = proxySelector46;
        java.net.ResponseCache responseCache48 = null;
        okHttpClient36.responseCache = responseCache48;
        java.util.Set<com.squareup.okhttp.Route> routeSet50 = okHttpClient36.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient51 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector52 = null;
        okHttpClient51.proxySelector = proxySelector52;
        java.net.ProxySelector proxySelector54 = okHttpClient51.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier55 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient56 = okHttpClient51.setHostnameVerifier(hostnameVerifier55);
        java.net.ResponseCache responseCache57 = okHttpClient56.responseCache;
        java.net.CookieHandler cookieHandler58 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient59 = okHttpClient56.setCookieHandler(cookieHandler58);
        java.net.ResponseCache responseCache60 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient61 = okHttpClient56.setResponseCache(responseCache60);
        java.net.ResponseCache responseCache62 = null;
        okHttpClient56.responseCache = responseCache62;
        com.squareup.okhttp.OkHttpClient okHttpClient64 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler65 = okHttpClient64.getCookieHandler();
        boolean boolean66 = okHttpClient64.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator67 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient68 = okHttpClient64.setAuthenticator(okAuthenticator67);
        com.squareup.okhttp.OkHttpClient okHttpClient69 = okHttpClient64.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier70 = okHttpClient64.hostnameVerifier;
        java.net.ProxySelector proxySelector71 = java.net.ProxySelector.getDefault();
        okHttpClient64.proxySelector = proxySelector71;
        com.squareup.okhttp.OkHttpClient okHttpClient73 = okHttpClient64.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient74 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler75 = okHttpClient74.getCookieHandler();
        boolean boolean76 = okHttpClient74.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient77 = okHttpClient74.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool80 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int81 = connectionPool80.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient82 = okHttpClient77.setConnectionPool(connectionPool80);
        com.squareup.okhttp.ConnectionPool connectionPool83 = okHttpClient77.connectionPool;
        java.net.ResponseCache responseCache84 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient85 = okHttpClient77.setResponseCache(responseCache84);
        com.squareup.okhttp.OkAuthenticator okAuthenticator86 = okHttpClient77.getAuthenticator();
        okHttpClient73.authenticator = okAuthenticator86;
        okHttpClient56.authenticator = okAuthenticator86;
        com.squareup.okhttp.OkHttpClient okHttpClient89 = okHttpClient36.setAuthenticator(okAuthenticator86);
        com.squareup.okhttp.OkAuthenticator okAuthenticator90 = okHttpClient89.getAuthenticator();
        org.junit.Assert.assertNull(connectionPool3);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertNotNull(routeArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(proxy10);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNull(cookieHandler19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNotNull(okHttpClient31);
// flaky:         org.junit.Assert.assertNull(proxySelector32);
        org.junit.Assert.assertNotNull(okHttpClient33);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNull(proxy39);
        org.junit.Assert.assertNull(cookieHandler41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(okHttpClient43);
        org.junit.Assert.assertNotNull(routeSet44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
// flaky:         org.junit.Assert.assertNull(proxySelector46);
        org.junit.Assert.assertNotNull(routeSet50);
        org.junit.Assert.assertNull(proxySelector54);
        org.junit.Assert.assertNotNull(okHttpClient56);
        org.junit.Assert.assertNull(responseCache57);
        org.junit.Assert.assertNotNull(okHttpClient59);
        org.junit.Assert.assertNotNull(okHttpClient61);
        org.junit.Assert.assertNull(cookieHandler65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(okHttpClient68);
        org.junit.Assert.assertNotNull(okHttpClient69);
        org.junit.Assert.assertNull(hostnameVerifier70);
// flaky:         org.junit.Assert.assertNull(proxySelector71);
        org.junit.Assert.assertNotNull(okHttpClient73);
        org.junit.Assert.assertNull(cookieHandler75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(okHttpClient77);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertNotNull(okHttpClient82);
        org.junit.Assert.assertNotNull(connectionPool83);
        org.junit.Assert.assertNotNull(okHttpClient85);
        org.junit.Assert.assertNotNull(okAuthenticator86);
        org.junit.Assert.assertNotNull(okHttpClient89);
        org.junit.Assert.assertNotNull(okAuthenticator90);
    }

    @Test
    public void test03391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03391");
        com.squareup.okhttp.ConnectionPool connectionPool2 = new com.squareup.okhttp.ConnectionPool((int) ' ', (long) 1);
        int int3 = connectionPool2.getConnectionCount();
        int int4 = connectionPool2.getConnectionCount();
        com.squareup.okhttp.Address address5 = null;
        com.squareup.okhttp.Connection connection6 = connectionPool2.get(address5);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(connection6);
    }

    @Test
    public void test03392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03392");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier6 = okHttpClient0.hostnameVerifier;
        java.net.ProxySelector proxySelector7 = java.net.ProxySelector.getDefault();
        okHttpClient0.proxySelector = proxySelector7;
        okHttpClient0.followProtocolRedirects = true;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler12 = okHttpClient11.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray13 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet14 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet14, routeArray13);
        okHttpClient11.failedRoutes = routeSet14;
        java.net.Proxy proxy17 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler19 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient18.setCookieHandler(cookieHandler19);
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient18.setFollowProtocolRedirects(true);
        boolean boolean23 = proxy17.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient11.setProxy(proxy17);
        java.lang.String str25 = proxy17.toString();
        com.squareup.okhttp.OkHttpClient okHttpClient26 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler27 = okHttpClient26.getCookieHandler();
        boolean boolean28 = okHttpClient26.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator29 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient30 = okHttpClient26.setAuthenticator(okAuthenticator29);
        java.net.ResponseCache responseCache31 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient26.setResponseCache(responseCache31);
        com.squareup.okhttp.ConnectionPool connectionPool35 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool35.evictAll();
        okHttpClient26.connectionPool = connectionPool35;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory38 = okHttpClient26.sslSocketFactory;
        com.squareup.okhttp.ConnectionPool connectionPool39 = okHttpClient26.getConnectionPool();
        boolean boolean40 = proxy17.equals((java.lang.Object) okHttpClient26);
        com.squareup.okhttp.OkHttpClient okHttpClient41 = okHttpClient0.setProxy(proxy17);
        java.lang.String str42 = proxy17.toString();
        java.net.SocketAddress socketAddress43 = proxy17.address();
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(hostnameVerifier6);
// flaky:         org.junit.Assert.assertNull(proxySelector7);
        org.junit.Assert.assertNull(cookieHandler12);
        org.junit.Assert.assertNotNull(routeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(proxy17);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "DIRECT" + "'", str25, "DIRECT");
        org.junit.Assert.assertNull(cookieHandler27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(okHttpClient30);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertNull(sSLSocketFactory38);
        org.junit.Assert.assertNotNull(connectionPool39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(okHttpClient41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "DIRECT" + "'", str42, "DIRECT");
        org.junit.Assert.assertNull(socketAddress43);
    }

    @Test
    public void test03393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03393");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray2 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet3 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet3, routeArray2);
        okHttpClient0.failedRoutes = routeSet3;
        java.net.Proxy proxy6 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient7.setCookieHandler(cookieHandler8);
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient7.setFollowProtocolRedirects(true);
        boolean boolean12 = proxy6.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient0.setProxy(proxy6);
        java.net.Proxy proxy14 = okHttpClient13.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool15 = okHttpClient13.getConnectionPool();
        java.net.Proxy proxy16 = okHttpClient13.getProxy();
        java.net.CookieHandler cookieHandler17 = okHttpClient13.cookieHandler;
        java.net.Proxy proxy18 = okHttpClient13.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient13.setFollowProtocolRedirects(false);
        com.squareup.okhttp.OkHttpClient okHttpClient21 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler22 = okHttpClient21.getCookieHandler();
        boolean boolean23 = okHttpClient21.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient21.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier25 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient24.setHostnameVerifier(hostnameVerifier25);
        java.net.ResponseCache responseCache27 = okHttpClient26.getResponseCache();
        java.net.ProxySelector proxySelector28 = okHttpClient26.getProxySelector();
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient13.setProxySelector(proxySelector28);
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertNotNull(routeArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(proxy6);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNotNull(proxy14);
        org.junit.Assert.assertNull(connectionPool15);
        org.junit.Assert.assertNotNull(proxy16);
        org.junit.Assert.assertNull(cookieHandler17);
        org.junit.Assert.assertNotNull(proxy18);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNull(cookieHandler22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNull(responseCache27);
// flaky:         org.junit.Assert.assertNull(proxySelector28);
        org.junit.Assert.assertNotNull(okHttpClient29);
    }

    @Test
    public void test03394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03394");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        java.net.ResponseCache responseCache2 = null;
        okHttpClient0.responseCache = responseCache2;
        boolean boolean4 = okHttpClient0.followProtocolRedirects;
        java.net.CookieHandler cookieHandler5 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.ConnectionPool connectionPool6 = okHttpClient0.getConnectionPool();
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector8 = null;
        okHttpClient7.proxySelector = proxySelector8;
        java.net.ProxySelector proxySelector10 = okHttpClient7.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient7.setHostnameVerifier(hostnameVerifier11);
        java.net.ProxySelector proxySelector13 = okHttpClient7.proxySelector;
        java.net.ResponseCache responseCache14 = okHttpClient7.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet15 = okHttpClient7.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler17 = okHttpClient16.getCookieHandler();
        boolean boolean18 = okHttpClient16.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient16.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool22 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int23 = connectionPool22.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient19.setConnectionPool(connectionPool22);
        com.squareup.okhttp.OkHttpClient okHttpClient25 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector26 = null;
        okHttpClient25.proxySelector = proxySelector26;
        java.net.ProxySelector proxySelector28 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient25.setProxySelector(proxySelector28);
        java.net.ProxySelector proxySelector30 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient25.setProxySelector(proxySelector30);
        okHttpClient24.proxySelector = proxySelector30;
        javax.net.ssl.HostnameVerifier hostnameVerifier33 = okHttpClient24.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient7.setHostnameVerifier(hostnameVerifier33);
        okHttpClient0.hostnameVerifier = hostnameVerifier33;
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient37 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler38 = okHttpClient37.getCookieHandler();
        boolean boolean39 = okHttpClient37.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator40 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient41 = okHttpClient37.setAuthenticator(okAuthenticator40);
        java.net.ResponseCache responseCache42 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient43 = okHttpClient37.setResponseCache(responseCache42);
        com.squareup.okhttp.ConnectionPool connectionPool46 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool46.evictAll();
        okHttpClient37.connectionPool = connectionPool46;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory49 = okHttpClient37.sslSocketFactory;
        java.net.ResponseCache responseCache50 = null;
        okHttpClient37.responseCache = responseCache50;
        com.squareup.okhttp.OkAuthenticator okAuthenticator52 = okHttpClient37.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient53 = okHttpClient37.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient54 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector55 = null;
        okHttpClient54.proxySelector = proxySelector55;
        java.net.ProxySelector proxySelector57 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient58 = okHttpClient54.setProxySelector(proxySelector57);
        java.net.ProxySelector proxySelector59 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient60 = okHttpClient54.setProxySelector(proxySelector59);
        java.net.ProxySelector.setDefault(proxySelector59);
        com.squareup.okhttp.OkHttpClient okHttpClient62 = okHttpClient53.setProxySelector(proxySelector59);
        java.net.ProxySelector.setDefault(proxySelector59);
        com.squareup.okhttp.OkHttpClient okHttpClient64 = okHttpClient0.setProxySelector(proxySelector59);
        java.net.URI uRI65 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.net.Proxy> proxyList66 = null; // flaky: proxySelector59.select(uRI65);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertNull(connectionPool6);
        org.junit.Assert.assertNull(proxySelector10);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertNull(proxySelector13);
        org.junit.Assert.assertNull(responseCache14);
        org.junit.Assert.assertNotNull(routeSet15);
        org.junit.Assert.assertNull(cookieHandler17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNotNull(okHttpClient29);
// flaky:         org.junit.Assert.assertNull(proxySelector30);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNotNull(hostnameVerifier33);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNull(cookieHandler38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(okHttpClient41);
        org.junit.Assert.assertNotNull(okHttpClient43);
        org.junit.Assert.assertNull(sSLSocketFactory49);
        org.junit.Assert.assertNull(okAuthenticator52);
        org.junit.Assert.assertNotNull(okHttpClient53);
        org.junit.Assert.assertNotNull(okHttpClient58);
// flaky:         org.junit.Assert.assertNull(proxySelector59);
        org.junit.Assert.assertNotNull(okHttpClient60);
        org.junit.Assert.assertNotNull(okHttpClient62);
        org.junit.Assert.assertNotNull(okHttpClient64);
    }

    @Test
    public void test03395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03395");
        com.squareup.okhttp.ConnectionPool connectionPool2 = new com.squareup.okhttp.ConnectionPool((int) (short) 0, 10L);
    }

    @Test
    public void test03396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03396");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setHostnameVerifier(hostnameVerifier4);
        boolean boolean6 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool((int) 'a', (long) (byte) -1);
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector12 = null;
        okHttpClient11.proxySelector = proxySelector12;
        java.net.ProxySelector proxySelector14 = okHttpClient11.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient11.setHostnameVerifier(hostnameVerifier15);
        boolean boolean17 = okHttpClient11.getFollowProtocolRedirects();
        com.squareup.okhttp.ConnectionPool connectionPool20 = new com.squareup.okhttp.ConnectionPool((int) 'a', (long) (byte) -1);
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient11.setConnectionPool(connectionPool20);
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler23 = okHttpClient22.getCookieHandler();
        boolean boolean24 = okHttpClient22.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient22.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier26 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient25.setHostnameVerifier(hostnameVerifier26);
        java.net.ResponseCache responseCache28 = okHttpClient27.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator29 = okHttpClient27.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = okHttpClient27.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory31 = okHttpClient27.getSslSocketFactory();
        okHttpClient11.sslSocketFactory = sSLSocketFactory31;
        java.net.Socket socket33 = sSLSocketFactory31.createSocket();
        okHttpClient0.sslSocketFactory = sSLSocketFactory31;
        java.lang.String[] strArray35 = sSLSocketFactory31.getSupportedCipherSuites();
        java.net.InetAddress inetAddress38 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket40 = sSLSocketFactory31.createSocket("DIRECT", (-1), inetAddress38, 100);
            org.junit.Assert.fail("Expected exception of type java.net.BindException; message: Permission denied (Bind failed)");
        } catch (java.net.BindException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertNull(proxySelector14);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNull(cookieHandler23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(okHttpClient25);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNull(responseCache28);
        org.junit.Assert.assertNotNull(okAuthenticator29);
        org.junit.Assert.assertNull(hostnameVerifier30);
        org.junit.Assert.assertNotNull(sSLSocketFactory31);
        org.junit.Assert.assertNotNull(socket33);
        org.junit.Assert.assertEquals(socket33.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(strArray35);
    }

    @Test
    public void test03397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03397");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setHostnameVerifier(hostnameVerifier4);
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler7 = okHttpClient6.getCookieHandler();
        boolean boolean8 = okHttpClient6.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient6.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient10 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector11 = null;
        okHttpClient10.proxySelector = proxySelector11;
        java.net.ProxySelector proxySelector13 = okHttpClient10.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient10.setHostnameVerifier(hostnameVerifier14);
        java.net.ProxySelector proxySelector16 = okHttpClient10.proxySelector;
        java.net.ResponseCache responseCache17 = okHttpClient10.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet18 = okHttpClient10.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler20 = okHttpClient19.getCookieHandler();
        boolean boolean21 = okHttpClient19.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient19.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool25 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int26 = connectionPool25.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient22.setConnectionPool(connectionPool25);
        com.squareup.okhttp.OkHttpClient okHttpClient28 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector29 = null;
        okHttpClient28.proxySelector = proxySelector29;
        java.net.ProxySelector proxySelector31 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient28.setProxySelector(proxySelector31);
        java.net.ProxySelector proxySelector33 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient28.setProxySelector(proxySelector33);
        okHttpClient27.proxySelector = proxySelector33;
        javax.net.ssl.HostnameVerifier hostnameVerifier36 = okHttpClient27.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient10.setHostnameVerifier(hostnameVerifier36);
        javax.net.ssl.HostnameVerifier hostnameVerifier38 = okHttpClient37.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient6.setHostnameVerifier(hostnameVerifier38);
        javax.net.ssl.HostnameVerifier hostnameVerifier40 = okHttpClient39.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient41 = okHttpClient5.setHostnameVerifier(hostnameVerifier40);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory42 = okHttpClient5.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient43 = okHttpClient5.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool46 = new com.squareup.okhttp.ConnectionPool(100, 0L);
        com.squareup.okhttp.OkHttpClient okHttpClient47 = okHttpClient5.setConnectionPool(connectionPool46);
        com.squareup.okhttp.OkHttpClient okHttpClient48 = okHttpClient47.copyWithDefaults();
        java.net.CookieHandler cookieHandler49 = null;
        okHttpClient47.cookieHandler = cookieHandler49;
        boolean boolean51 = okHttpClient47.followProtocolRedirects;
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(cookieHandler7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNull(proxySelector13);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNull(proxySelector16);
        org.junit.Assert.assertNull(responseCache17);
        org.junit.Assert.assertNotNull(routeSet18);
        org.junit.Assert.assertNull(cookieHandler20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNotNull(okHttpClient32);
// flaky:         org.junit.Assert.assertNull(proxySelector33);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertNotNull(hostnameVerifier36);
        org.junit.Assert.assertNotNull(okHttpClient37);
        org.junit.Assert.assertNotNull(hostnameVerifier38);
        org.junit.Assert.assertNotNull(okHttpClient39);
        org.junit.Assert.assertNotNull(hostnameVerifier40);
        org.junit.Assert.assertNotNull(okHttpClient41);
        org.junit.Assert.assertNull(sSLSocketFactory42);
        org.junit.Assert.assertNotNull(okHttpClient43);
        org.junit.Assert.assertNotNull(okHttpClient47);
        org.junit.Assert.assertNotNull(okHttpClient48);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
    }

    @Test
    public void test03398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03398");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        java.net.ResponseCache responseCache5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient0.setResponseCache(responseCache5);
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool9.evictAll();
        okHttpClient0.connectionPool = connectionPool9;
        connectionPool9.evictAll();
        int int13 = connectionPool9.getSpdyConnectionCount();
        int int14 = connectionPool9.getSpdyConnectionCount();
        int int15 = connectionPool9.getConnectionCount();
        connectionPool9.evictAll();
        int int17 = connectionPool9.getHttpConnectionCount();
        int int18 = connectionPool9.getHttpConnectionCount();
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient6);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
    }

    @Test
    public void test03399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03399");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet4 = okHttpClient3.failedRoutes;
        boolean boolean5 = okHttpClient3.getFollowProtocolRedirects();
        java.net.Proxy proxy6 = java.net.Proxy.NO_PROXY;
        okHttpClient3.proxy = proxy6;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler9 = okHttpClient8.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray10 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet11 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet11, routeArray10);
        okHttpClient8.failedRoutes = routeSet11;
        java.net.Proxy proxy14 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient15.setCookieHandler(cookieHandler16);
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient15.setFollowProtocolRedirects(true);
        boolean boolean20 = proxy14.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient8.setProxy(proxy14);
        java.net.SocketAddress socketAddress22 = proxy14.address();
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient3.setProxy(proxy14);
        okHttpClient23.followProtocolRedirects = false;
        boolean boolean26 = okHttpClient23.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector28 = null;
        okHttpClient27.proxySelector = proxySelector28;
        java.net.ProxySelector proxySelector30 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient27.setProxySelector(proxySelector30);
        java.net.ProxySelector proxySelector32 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient27.setProxySelector(proxySelector32);
        java.net.ProxySelector.setDefault(proxySelector32);
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient23.setProxySelector(proxySelector32);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory36 = okHttpClient23.getSslSocketFactory();
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket39 = sSLSocketFactory36.createSocket("hi!", 0);
            org.junit.Assert.fail("Expected exception of type java.net.UnknownHostException; message: hi!");
        } catch (java.net.UnknownHostException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertNotNull(routeSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(proxy6);
        org.junit.Assert.assertNull(cookieHandler9);
        org.junit.Assert.assertNotNull(routeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(proxy14);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNull(socketAddress22);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(okHttpClient31);
// flaky:         org.junit.Assert.assertNull(proxySelector32);
        org.junit.Assert.assertNotNull(okHttpClient33);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNotNull(sSLSocketFactory36);
    }

    @Test
    public void test03400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03400");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool6 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int7 = connectionPool6.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient3.setConnectionPool(connectionPool6);
        javax.net.ssl.HostnameVerifier hostnameVerifier9 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector12 = null;
        okHttpClient11.proxySelector = proxySelector12;
        java.net.ProxySelector proxySelector14 = okHttpClient11.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient11.setHostnameVerifier(hostnameVerifier15);
        boolean boolean17 = okHttpClient11.getFollowProtocolRedirects();
        com.squareup.okhttp.ConnectionPool connectionPool18 = okHttpClient11.getConnectionPool();
        java.net.ProxySelector proxySelector19 = okHttpClient11.proxySelector;
        java.net.ResponseCache responseCache20 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient11.setResponseCache(responseCache20);
        java.util.Set<com.squareup.okhttp.Route> routeSet22 = okHttpClient11.failedRoutes;
        okHttpClient3.failedRoutes = routeSet22;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector25 = null;
        okHttpClient24.proxySelector = proxySelector25;
        java.net.ProxySelector proxySelector27 = okHttpClient24.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier28 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient24.setHostnameVerifier(hostnameVerifier28);
        java.net.ProxySelector proxySelector30 = okHttpClient24.proxySelector;
        java.net.ResponseCache responseCache31 = okHttpClient24.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet32 = okHttpClient24.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient33 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler34 = okHttpClient33.getCookieHandler();
        boolean boolean35 = okHttpClient33.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient33.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool39 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int40 = connectionPool39.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient41 = okHttpClient36.setConnectionPool(connectionPool39);
        com.squareup.okhttp.OkHttpClient okHttpClient42 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector43 = null;
        okHttpClient42.proxySelector = proxySelector43;
        java.net.ProxySelector proxySelector45 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient46 = okHttpClient42.setProxySelector(proxySelector45);
        java.net.ProxySelector proxySelector47 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient48 = okHttpClient42.setProxySelector(proxySelector47);
        okHttpClient41.proxySelector = proxySelector47;
        javax.net.ssl.HostnameVerifier hostnameVerifier50 = okHttpClient41.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient51 = okHttpClient24.setHostnameVerifier(hostnameVerifier50);
        com.squareup.okhttp.OkHttpClient okHttpClient52 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler53 = okHttpClient52.getCookieHandler();
        boolean boolean54 = okHttpClient52.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator55 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient56 = okHttpClient52.setAuthenticator(okAuthenticator55);
        java.net.ResponseCache responseCache57 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient58 = okHttpClient52.setResponseCache(responseCache57);
        com.squareup.okhttp.ConnectionPool connectionPool61 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool61.evictAll();
        okHttpClient52.connectionPool = connectionPool61;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory64 = okHttpClient52.sslSocketFactory;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory65 = null;
        okHttpClient52.sslSocketFactory = sSLSocketFactory65;
        java.net.ProxySelector proxySelector67 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient68 = okHttpClient52.setProxySelector(proxySelector67);
        okHttpClient24.proxySelector = proxySelector67;
        com.squareup.okhttp.OkHttpClient okHttpClient70 = okHttpClient3.setProxySelector(proxySelector67);
        java.net.ResponseCache responseCache71 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient72 = okHttpClient70.setResponseCache(responseCache71);
        java.net.URL uRL73 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.HttpURLConnection httpURLConnection74 = okHttpClient72.open(uRL73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertNull(proxySelector14);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(connectionPool18);
        org.junit.Assert.assertNull(proxySelector19);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNotNull(routeSet22);
        org.junit.Assert.assertNull(proxySelector27);
        org.junit.Assert.assertNotNull(okHttpClient29);
        org.junit.Assert.assertNull(proxySelector30);
        org.junit.Assert.assertNull(responseCache31);
        org.junit.Assert.assertNotNull(routeSet32);
        org.junit.Assert.assertNull(cookieHandler34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(okHttpClient41);
        org.junit.Assert.assertNotNull(okHttpClient46);
// flaky:         org.junit.Assert.assertNull(proxySelector47);
        org.junit.Assert.assertNotNull(okHttpClient48);
        org.junit.Assert.assertNotNull(hostnameVerifier50);
        org.junit.Assert.assertNotNull(okHttpClient51);
        org.junit.Assert.assertNull(cookieHandler53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(okHttpClient56);
        org.junit.Assert.assertNotNull(okHttpClient58);
        org.junit.Assert.assertNull(sSLSocketFactory64);
// flaky:         org.junit.Assert.assertNull(proxySelector67);
        org.junit.Assert.assertNotNull(okHttpClient68);
        org.junit.Assert.assertNotNull(okHttpClient70);
        org.junit.Assert.assertNotNull(okHttpClient72);
    }

    @Test
    public void test03401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03401");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler4 = okHttpClient3.getCookieHandler();
        boolean boolean5 = okHttpClient3.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient3.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet7 = okHttpClient6.failedRoutes;
        boolean boolean8 = okHttpClient6.getFollowProtocolRedirects();
        java.net.Proxy proxy9 = java.net.Proxy.NO_PROXY;
        okHttpClient6.proxy = proxy9;
        okHttpClient0.proxy = proxy9;
        java.net.SocketAddress socketAddress12 = proxy9.address();
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler14 = okHttpClient13.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray15 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet16 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet16, routeArray15);
        okHttpClient13.failedRoutes = routeSet16;
        java.net.Proxy proxy19 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler21 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient20.setCookieHandler(cookieHandler21);
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient20.setFollowProtocolRedirects(true);
        boolean boolean25 = proxy19.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient13.setProxy(proxy19);
        com.squareup.okhttp.OkAuthenticator okAuthenticator27 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient26.setAuthenticator(okAuthenticator27);
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient28.copyWithDefaults();
        boolean boolean30 = proxy9.equals((java.lang.Object) okHttpClient29);
        boolean boolean31 = okHttpClient29.getFollowProtocolRedirects();
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(cookieHandler4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(okHttpClient6);
        org.junit.Assert.assertNotNull(routeSet7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(proxy9);
        org.junit.Assert.assertNull(socketAddress12);
        org.junit.Assert.assertNull(cookieHandler14);
        org.junit.Assert.assertNotNull(routeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(proxy19);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNotNull(okHttpClient29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
    }

    @Test
    public void test03402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03402");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient4 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector5 = null;
        okHttpClient4.proxySelector = proxySelector5;
        java.net.ProxySelector proxySelector7 = okHttpClient4.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient4.setHostnameVerifier(hostnameVerifier8);
        java.net.ProxySelector proxySelector10 = okHttpClient4.proxySelector;
        java.net.ResponseCache responseCache11 = okHttpClient4.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet12 = okHttpClient4.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler14 = okHttpClient13.getCookieHandler();
        boolean boolean15 = okHttpClient13.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient13.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool19 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int20 = connectionPool19.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient16.setConnectionPool(connectionPool19);
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector23 = null;
        okHttpClient22.proxySelector = proxySelector23;
        java.net.ProxySelector proxySelector25 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient22.setProxySelector(proxySelector25);
        java.net.ProxySelector proxySelector27 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient22.setProxySelector(proxySelector27);
        okHttpClient21.proxySelector = proxySelector27;
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = okHttpClient21.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient4.setHostnameVerifier(hostnameVerifier30);
        javax.net.ssl.HostnameVerifier hostnameVerifier32 = okHttpClient31.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient0.setHostnameVerifier(hostnameVerifier32);
        java.net.Proxy proxy34 = okHttpClient33.proxy;
        java.util.Set<com.squareup.okhttp.Route> routeSet35 = okHttpClient33.failedRoutes;
        java.net.ProxySelector proxySelector36 = okHttpClient33.getProxySelector();
        java.net.ResponseCache responseCache37 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient33.setResponseCache(responseCache37);
        com.squareup.okhttp.OkAuthenticator okAuthenticator39 = okHttpClient33.getAuthenticator();
        java.net.Proxy proxy40 = okHttpClient33.proxy;
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertNull(proxySelector7);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNull(proxySelector10);
        org.junit.Assert.assertNull(responseCache11);
        org.junit.Assert.assertNotNull(routeSet12);
        org.junit.Assert.assertNull(cookieHandler14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNotNull(okHttpClient26);
// flaky:         org.junit.Assert.assertNull(proxySelector27);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNotNull(hostnameVerifier30);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNotNull(hostnameVerifier32);
        org.junit.Assert.assertNotNull(okHttpClient33);
        org.junit.Assert.assertNull(proxy34);
        org.junit.Assert.assertNotNull(routeSet35);
        org.junit.Assert.assertNull(proxySelector36);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNull(okAuthenticator39);
        org.junit.Assert.assertNull(proxy40);
    }

    @Test
    public void test03403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03403");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray2 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet3 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet3, routeArray2);
        okHttpClient0.failedRoutes = routeSet3;
        java.net.Proxy proxy6 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient7.setCookieHandler(cookieHandler8);
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient7.setFollowProtocolRedirects(true);
        boolean boolean12 = proxy6.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient0.setProxy(proxy6);
        com.squareup.okhttp.OkAuthenticator okAuthenticator14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient13.setAuthenticator(okAuthenticator14);
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient15.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler18 = okHttpClient17.getCookieHandler();
        java.net.ResponseCache responseCache19 = null;
        okHttpClient17.responseCache = responseCache19;
        boolean boolean21 = okHttpClient17.followProtocolRedirects;
        java.net.CookieHandler cookieHandler22 = okHttpClient17.cookieHandler;
        com.squareup.okhttp.ConnectionPool connectionPool23 = okHttpClient17.getConnectionPool();
        com.squareup.okhttp.OkHttpClient okHttpClient24 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector25 = null;
        okHttpClient24.proxySelector = proxySelector25;
        java.net.ProxySelector proxySelector27 = okHttpClient24.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier28 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient24.setHostnameVerifier(hostnameVerifier28);
        java.net.ProxySelector proxySelector30 = okHttpClient24.proxySelector;
        java.net.ResponseCache responseCache31 = okHttpClient24.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet32 = okHttpClient24.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient33 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler34 = okHttpClient33.getCookieHandler();
        boolean boolean35 = okHttpClient33.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient33.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool39 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int40 = connectionPool39.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient41 = okHttpClient36.setConnectionPool(connectionPool39);
        com.squareup.okhttp.OkHttpClient okHttpClient42 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector43 = null;
        okHttpClient42.proxySelector = proxySelector43;
        java.net.ProxySelector proxySelector45 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient46 = okHttpClient42.setProxySelector(proxySelector45);
        java.net.ProxySelector proxySelector47 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient48 = okHttpClient42.setProxySelector(proxySelector47);
        okHttpClient41.proxySelector = proxySelector47;
        javax.net.ssl.HostnameVerifier hostnameVerifier50 = okHttpClient41.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient51 = okHttpClient24.setHostnameVerifier(hostnameVerifier50);
        okHttpClient17.hostnameVerifier = hostnameVerifier50;
        okHttpClient16.hostnameVerifier = hostnameVerifier50;
        com.squareup.okhttp.ConnectionPool connectionPool56 = new com.squareup.okhttp.ConnectionPool((int) 'a', 0L);
        int int57 = connectionPool56.getHttpConnectionCount();
        connectionPool56.evictAll();
        com.squareup.okhttp.OkHttpClient okHttpClient59 = okHttpClient16.setConnectionPool(connectionPool56);
        com.squareup.okhttp.OkAuthenticator okAuthenticator60 = okHttpClient16.authenticator;
        java.net.ProxySelector proxySelector61 = okHttpClient16.proxySelector;
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertNotNull(routeArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(proxy6);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNull(cookieHandler18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(cookieHandler22);
        org.junit.Assert.assertNull(connectionPool23);
        org.junit.Assert.assertNull(proxySelector27);
        org.junit.Assert.assertNotNull(okHttpClient29);
        org.junit.Assert.assertNull(proxySelector30);
        org.junit.Assert.assertNull(responseCache31);
        org.junit.Assert.assertNotNull(routeSet32);
        org.junit.Assert.assertNull(cookieHandler34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(okHttpClient41);
        org.junit.Assert.assertNotNull(okHttpClient46);
// flaky:         org.junit.Assert.assertNull(proxySelector47);
        org.junit.Assert.assertNotNull(okHttpClient48);
        org.junit.Assert.assertNotNull(hostnameVerifier50);
        org.junit.Assert.assertNotNull(okHttpClient51);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(okHttpClient59);
        org.junit.Assert.assertNotNull(okAuthenticator60);
// flaky:         org.junit.Assert.assertNull(proxySelector61);
    }

    @Test
    public void test03404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03404");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = okHttpClient0.getSslSocketFactory();
        com.squareup.okhttp.OkAuthenticator okAuthenticator2 = okHttpClient0.authenticator;
        java.net.ResponseCache responseCache3 = okHttpClient0.responseCache;
        com.squareup.okhttp.OkAuthenticator okAuthenticator4 = okHttpClient0.authenticator;
        com.squareup.okhttp.ConnectionPool connectionPool7 = new com.squareup.okhttp.ConnectionPool((int) ' ', (long) '4');
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient0.setConnectionPool(connectionPool7);
        com.squareup.okhttp.Connection connection9 = null;
        // The following exception was thrown during execution in test generation
        try {
            connectionPool7.recycle(connection9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(sSLSocketFactory1);
        org.junit.Assert.assertNull(okAuthenticator2);
        org.junit.Assert.assertNull(responseCache3);
        org.junit.Assert.assertNull(okAuthenticator4);
        org.junit.Assert.assertNotNull(okHttpClient8);
    }

    @Test
    public void test03405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03405");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        java.net.ResponseCache responseCache5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient0.setResponseCache(responseCache5);
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool9.evictAll();
        okHttpClient0.connectionPool = connectionPool9;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory12 = okHttpClient0.sslSocketFactory;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory13 = null;
        okHttpClient0.sslSocketFactory = sSLSocketFactory13;
        java.net.ProxySelector proxySelector15 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient0.setProxySelector(proxySelector15);
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector18 = null;
        okHttpClient17.proxySelector = proxySelector18;
        java.net.ProxySelector proxySelector20 = okHttpClient17.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier21 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient17.setHostnameVerifier(hostnameVerifier21);
        java.net.ProxySelector proxySelector23 = java.net.ProxySelector.getDefault();
        okHttpClient17.proxySelector = proxySelector23;
        okHttpClient16.proxySelector = proxySelector23;
        boolean boolean26 = okHttpClient16.followProtocolRedirects;
        com.squareup.okhttp.ConnectionPool connectionPool27 = okHttpClient16.connectionPool;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler29 = okHttpClient28.getCookieHandler();
        boolean boolean30 = okHttpClient28.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator31 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient28.setAuthenticator(okAuthenticator31);
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient28.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier34 = okHttpClient33.getHostnameVerifier();
        javax.net.ssl.HostnameVerifier hostnameVerifier35 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient33.setHostnameVerifier(hostnameVerifier35);
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient33.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient38 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector39 = null;
        okHttpClient38.proxySelector = proxySelector39;
        java.net.ProxySelector proxySelector41 = okHttpClient38.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier42 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient43 = okHttpClient38.setHostnameVerifier(hostnameVerifier42);
        java.net.ResponseCache responseCache44 = okHttpClient43.responseCache;
        com.squareup.okhttp.ConnectionPool connectionPool47 = new com.squareup.okhttp.ConnectionPool((int) '4', 100L);
        com.squareup.okhttp.OkHttpClient okHttpClient48 = okHttpClient43.setConnectionPool(connectionPool47);
        com.squareup.okhttp.OkHttpClient okHttpClient49 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector50 = null;
        okHttpClient49.proxySelector = proxySelector50;
        java.net.ProxySelector proxySelector52 = okHttpClient49.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier53 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient54 = okHttpClient49.setHostnameVerifier(hostnameVerifier53);
        java.net.ProxySelector proxySelector55 = okHttpClient49.proxySelector;
        java.net.ResponseCache responseCache56 = okHttpClient49.getResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient57 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler58 = okHttpClient57.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray59 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet60 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet60, routeArray59);
        okHttpClient57.failedRoutes = routeSet60;
        java.net.Proxy proxy63 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient64 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler65 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient66 = okHttpClient64.setCookieHandler(cookieHandler65);
        com.squareup.okhttp.OkHttpClient okHttpClient68 = okHttpClient64.setFollowProtocolRedirects(true);
        boolean boolean69 = proxy63.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient70 = okHttpClient57.setProxy(proxy63);
        okHttpClient49.proxy = proxy63;
        com.squareup.okhttp.OkHttpClient okHttpClient72 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler73 = okHttpClient72.getCookieHandler();
        boolean boolean74 = okHttpClient72.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient75 = okHttpClient72.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier76 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient77 = okHttpClient75.setHostnameVerifier(hostnameVerifier76);
        boolean boolean78 = proxy63.equals((java.lang.Object) okHttpClient75);
        com.squareup.okhttp.OkHttpClient okHttpClient79 = okHttpClient48.setProxy(proxy63);
        okHttpClient37.proxy = proxy63;
        javax.net.ssl.HostnameVerifier hostnameVerifier81 = okHttpClient37.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient82 = okHttpClient16.setHostnameVerifier(hostnameVerifier81);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory83 = okHttpClient16.getSslSocketFactory();
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient6);
        org.junit.Assert.assertNull(sSLSocketFactory12);
// flaky:         org.junit.Assert.assertNull(proxySelector15);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNull(proxySelector20);
        org.junit.Assert.assertNotNull(okHttpClient22);
// flaky:         org.junit.Assert.assertNull(proxySelector23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(connectionPool27);
        org.junit.Assert.assertNull(cookieHandler29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertNotNull(okHttpClient33);
        org.junit.Assert.assertNotNull(hostnameVerifier34);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNotNull(okHttpClient37);
        org.junit.Assert.assertNull(proxySelector41);
        org.junit.Assert.assertNotNull(okHttpClient43);
        org.junit.Assert.assertNull(responseCache44);
        org.junit.Assert.assertNotNull(okHttpClient48);
        org.junit.Assert.assertNull(proxySelector52);
        org.junit.Assert.assertNotNull(okHttpClient54);
        org.junit.Assert.assertNull(proxySelector55);
        org.junit.Assert.assertNull(responseCache56);
        org.junit.Assert.assertNull(cookieHandler58);
        org.junit.Assert.assertNotNull(routeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(proxy63);
        org.junit.Assert.assertNotNull(okHttpClient66);
        org.junit.Assert.assertNotNull(okHttpClient68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(okHttpClient70);
        org.junit.Assert.assertNull(cookieHandler73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(okHttpClient75);
        org.junit.Assert.assertNotNull(okHttpClient77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(okHttpClient79);
        org.junit.Assert.assertNotNull(hostnameVerifier81);
        org.junit.Assert.assertNotNull(okHttpClient82);
        org.junit.Assert.assertNull(sSLSocketFactory83);
    }

    @Test
    public void test03406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03406");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier6 = okHttpClient0.hostnameVerifier;
        java.net.ProxySelector proxySelector7 = java.net.ProxySelector.getDefault();
        okHttpClient0.proxySelector = proxySelector7;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient0.copyWithDefaults();
        java.net.CookieHandler cookieHandler10 = null;
        okHttpClient9.cookieHandler = cookieHandler10;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient9.setFollowProtocolRedirects(false);
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(hostnameVerifier6);
// flaky:         org.junit.Assert.assertNull(proxySelector7);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNotNull(okHttpClient13);
    }

    @Test
    public void test03407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03407");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool6 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int7 = connectionPool6.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient3.setConnectionPool(connectionPool6);
        javax.net.ssl.HostnameVerifier hostnameVerifier9 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier9;
        java.net.Proxy proxy11 = okHttpClient3.getProxy();
        okHttpClient3.followProtocolRedirects = true;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler15 = okHttpClient14.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray16 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet17 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet17, routeArray16);
        okHttpClient14.failedRoutes = routeSet17;
        java.net.Proxy proxy20 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler22 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient21.setCookieHandler(cookieHandler22);
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient21.setFollowProtocolRedirects(true);
        boolean boolean26 = proxy20.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient14.setProxy(proxy20);
        java.net.Proxy proxy28 = okHttpClient27.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient3.setProxy(proxy28);
        java.net.ResponseCache responseCache30 = okHttpClient3.getResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient31 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector32 = null;
        okHttpClient31.proxySelector = proxySelector32;
        java.net.ProxySelector proxySelector34 = okHttpClient31.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier35 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient31.setHostnameVerifier(hostnameVerifier35);
        java.net.ProxySelector proxySelector37 = java.net.ProxySelector.getDefault();
        okHttpClient31.proxySelector = proxySelector37;
        java.net.ProxySelector.setDefault(proxySelector37);
        okHttpClient3.proxySelector = proxySelector37;
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertNull(proxy11);
        org.junit.Assert.assertNull(cookieHandler15);
        org.junit.Assert.assertNotNull(routeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(proxy20);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertNotNull(okHttpClient25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNotNull(proxy28);
        org.junit.Assert.assertNotNull(okHttpClient29);
        org.junit.Assert.assertNull(responseCache30);
        org.junit.Assert.assertNull(proxySelector34);
        org.junit.Assert.assertNotNull(okHttpClient36);
// flaky:         org.junit.Assert.assertNull(proxySelector37);
    }

    @Test
    public void test03408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03408");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        com.squareup.okhttp.OkAuthenticator okAuthenticator5 = okHttpClient0.authenticator;
        java.net.ResponseCache responseCache6 = okHttpClient0.getResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector8 = null;
        okHttpClient7.proxySelector = proxySelector8;
        java.net.ProxySelector proxySelector10 = okHttpClient7.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient7.setHostnameVerifier(hostnameVerifier11);
        boolean boolean13 = okHttpClient7.getFollowProtocolRedirects();
        java.net.ProxySelector proxySelector14 = okHttpClient7.proxySelector;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector16 = null;
        okHttpClient15.proxySelector = proxySelector16;
        java.net.ProxySelector proxySelector18 = okHttpClient15.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier19 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient15.setHostnameVerifier(hostnameVerifier19);
        boolean boolean21 = okHttpClient15.getFollowProtocolRedirects();
        com.squareup.okhttp.ConnectionPool connectionPool24 = new com.squareup.okhttp.ConnectionPool((int) 'a', (long) (byte) -1);
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient15.setConnectionPool(connectionPool24);
        com.squareup.okhttp.OkHttpClient okHttpClient26 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler27 = okHttpClient26.getCookieHandler();
        boolean boolean28 = okHttpClient26.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient26.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient29.setHostnameVerifier(hostnameVerifier30);
        java.net.ResponseCache responseCache32 = okHttpClient31.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator33 = okHttpClient31.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier34 = okHttpClient31.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory35 = okHttpClient31.getSslSocketFactory();
        okHttpClient15.sslSocketFactory = sSLSocketFactory35;
        okHttpClient7.sslSocketFactory = sSLSocketFactory35;
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory35);
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient0.copyWithDefaults();
        java.net.CookieHandler cookieHandler40 = null;
        okHttpClient0.cookieHandler = cookieHandler40;
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(okAuthenticator5);
        org.junit.Assert.assertNull(responseCache6);
        org.junit.Assert.assertNull(proxySelector10);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(proxySelector14);
        org.junit.Assert.assertNull(proxySelector18);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(okHttpClient25);
        org.junit.Assert.assertNull(cookieHandler27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(okHttpClient29);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNull(responseCache32);
        org.junit.Assert.assertNotNull(okAuthenticator33);
        org.junit.Assert.assertNull(hostnameVerifier34);
        org.junit.Assert.assertNotNull(sSLSocketFactory35);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNotNull(okHttpClient39);
    }

    @Test
    public void test03409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03409");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet4 = okHttpClient3.failedRoutes;
        boolean boolean5 = okHttpClient3.getFollowProtocolRedirects();
        java.net.Proxy proxy6 = java.net.Proxy.NO_PROXY;
        okHttpClient3.proxy = proxy6;
        java.net.Proxy.Type type8 = proxy6.type();
        java.net.SocketAddress socketAddress9 = proxy6.address();
        java.lang.String str10 = proxy6.toString();
        java.net.Proxy.Type type11 = proxy6.type();
        java.lang.String str12 = proxy6.toString();
        java.net.SocketAddress socketAddress13 = proxy6.address();
        java.net.Proxy.Type type14 = proxy6.type();
        java.net.SocketAddress socketAddress15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Proxy proxy16 = new java.net.Proxy(type14, socketAddress15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: type DIRECT is not compatible with address null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertNotNull(routeSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(proxy6);
        org.junit.Assert.assertTrue("'" + type8 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type8.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "DIRECT" + "'", str10, "DIRECT");
        org.junit.Assert.assertTrue("'" + type11 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type11.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "DIRECT" + "'", str12, "DIRECT");
        org.junit.Assert.assertNull(socketAddress13);
        org.junit.Assert.assertTrue("'" + type14 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type14.equals(java.net.Proxy.Type.DIRECT));
    }

    @Test
    public void test03410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03410");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        java.net.ResponseCache responseCache5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient0.setResponseCache(responseCache5);
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool9.evictAll();
        okHttpClient0.connectionPool = connectionPool9;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory12 = okHttpClient0.sslSocketFactory;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory13 = null;
        okHttpClient0.sslSocketFactory = sSLSocketFactory13;
        java.net.ProxySelector proxySelector15 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient0.setProxySelector(proxySelector15);
        java.net.CookieHandler cookieHandler17 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient0.setCookieHandler(cookieHandler17);
        com.squareup.okhttp.OkHttpClient okHttpClient19 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler20 = okHttpClient19.getCookieHandler();
        boolean boolean21 = okHttpClient19.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient19.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier23 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient22.setHostnameVerifier(hostnameVerifier23);
        java.net.ResponseCache responseCache25 = okHttpClient24.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator26 = okHttpClient24.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier27 = okHttpClient24.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory28 = okHttpClient24.getSslSocketFactory();
        java.lang.String[] strArray29 = sSLSocketFactory28.getSupportedCipherSuites();
        java.lang.String[] strArray30 = sSLSocketFactory28.getDefaultCipherSuites();
        java.lang.String[] strArray31 = sSLSocketFactory28.getDefaultCipherSuites();
        java.lang.String[] strArray32 = sSLSocketFactory28.getDefaultCipherSuites();
        java.lang.String[] strArray33 = sSLSocketFactory28.getSupportedCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient18.setSSLSocketFactory(sSLSocketFactory28);
        java.net.InetAddress inetAddress37 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket39 = sSLSocketFactory28.createSocket("", (int) 'a', inetAddress37, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: port out of range:-1");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient6);
        org.junit.Assert.assertNull(sSLSocketFactory12);
// flaky:         org.junit.Assert.assertNull(proxySelector15);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNull(cookieHandler20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNull(responseCache25);
        org.junit.Assert.assertNotNull(okAuthenticator26);
        org.junit.Assert.assertNull(hostnameVerifier27);
        org.junit.Assert.assertNotNull(sSLSocketFactory28);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(okHttpClient34);
    }

    @Test
    public void test03411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03411");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier6 = okHttpClient0.hostnameVerifier;
        java.net.ProxySelector proxySelector7 = java.net.ProxySelector.getDefault();
        okHttpClient0.proxySelector = proxySelector7;
        okHttpClient0.followProtocolRedirects = true;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector12 = null;
        okHttpClient11.proxySelector = proxySelector12;
        java.net.ProxySelector proxySelector14 = okHttpClient11.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient11.setHostnameVerifier(hostnameVerifier15);
        java.net.ProxySelector proxySelector17 = okHttpClient11.proxySelector;
        java.net.ResponseCache responseCache18 = okHttpClient11.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet19 = okHttpClient11.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler21 = okHttpClient20.getCookieHandler();
        boolean boolean22 = okHttpClient20.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient20.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool26 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int27 = connectionPool26.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient23.setConnectionPool(connectionPool26);
        com.squareup.okhttp.OkHttpClient okHttpClient29 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector30 = null;
        okHttpClient29.proxySelector = proxySelector30;
        java.net.ProxySelector proxySelector32 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient29.setProxySelector(proxySelector32);
        java.net.ProxySelector proxySelector34 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient29.setProxySelector(proxySelector34);
        okHttpClient28.proxySelector = proxySelector34;
        javax.net.ssl.HostnameVerifier hostnameVerifier37 = okHttpClient28.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient11.setHostnameVerifier(hostnameVerifier37);
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient0.setHostnameVerifier(hostnameVerifier37);
        java.net.Proxy proxy40 = okHttpClient0.proxy;
        java.util.Set<com.squareup.okhttp.Route> routeSet41 = okHttpClient0.failedRoutes;
        okHttpClient0.followProtocolRedirects = true;
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(hostnameVerifier6);
// flaky:         org.junit.Assert.assertNull(proxySelector7);
        org.junit.Assert.assertNull(proxySelector14);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNull(proxySelector17);
        org.junit.Assert.assertNull(responseCache18);
        org.junit.Assert.assertNotNull(routeSet19);
        org.junit.Assert.assertNull(cookieHandler21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNotNull(okHttpClient33);
// flaky:         org.junit.Assert.assertNull(proxySelector34);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNotNull(hostnameVerifier37);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNotNull(okHttpClient39);
        org.junit.Assert.assertNull(proxy40);
        org.junit.Assert.assertNotNull(routeSet41);
    }

    @Test
    public void test03412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03412");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setHostnameVerifier(hostnameVerifier4);
        boolean boolean6 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool((int) 'a', (long) (byte) -1);
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient0.setConnectionPool(connectionPool9);
        java.net.ResponseCache responseCache11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient0.setResponseCache(responseCache11);
        boolean boolean13 = okHttpClient0.followProtocolRedirects;
        com.squareup.okhttp.ConnectionPool connectionPool14 = okHttpClient0.getConnectionPool();
        com.squareup.okhttp.Address address15 = null;
        com.squareup.okhttp.Connection connection16 = connectionPool14.get(address15);
        com.squareup.okhttp.Address address17 = null;
        com.squareup.okhttp.Connection connection18 = connectionPool14.get(address17);
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(connectionPool14);
        org.junit.Assert.assertNull(connection16);
        org.junit.Assert.assertNull(connection18);
    }

    @Test
    public void test03413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03413");
        com.squareup.okhttp.ConnectionPool connectionPool2 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (short) 100);
        int int3 = connectionPool2.getHttpConnectionCount();
        connectionPool2.evictAll();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test03414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03414");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        java.net.ResponseCache responseCache2 = null;
        okHttpClient0.responseCache = responseCache2;
        boolean boolean4 = okHttpClient0.followProtocolRedirects;
        java.net.CookieHandler cookieHandler5 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.ConnectionPool connectionPool6 = okHttpClient0.getConnectionPool();
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector8 = null;
        okHttpClient7.proxySelector = proxySelector8;
        java.net.ProxySelector proxySelector10 = okHttpClient7.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient7.setHostnameVerifier(hostnameVerifier11);
        java.net.ProxySelector proxySelector13 = okHttpClient7.proxySelector;
        java.net.ResponseCache responseCache14 = okHttpClient7.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet15 = okHttpClient7.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler17 = okHttpClient16.getCookieHandler();
        boolean boolean18 = okHttpClient16.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient16.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool22 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int23 = connectionPool22.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient19.setConnectionPool(connectionPool22);
        com.squareup.okhttp.OkHttpClient okHttpClient25 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector26 = null;
        okHttpClient25.proxySelector = proxySelector26;
        java.net.ProxySelector proxySelector28 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient25.setProxySelector(proxySelector28);
        java.net.ProxySelector proxySelector30 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient25.setProxySelector(proxySelector30);
        okHttpClient24.proxySelector = proxySelector30;
        javax.net.ssl.HostnameVerifier hostnameVerifier33 = okHttpClient24.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient7.setHostnameVerifier(hostnameVerifier33);
        okHttpClient0.hostnameVerifier = hostnameVerifier33;
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient37 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler38 = okHttpClient37.getCookieHandler();
        boolean boolean39 = okHttpClient37.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator40 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient41 = okHttpClient37.setAuthenticator(okAuthenticator40);
        java.net.ResponseCache responseCache42 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient43 = okHttpClient37.setResponseCache(responseCache42);
        com.squareup.okhttp.ConnectionPool connectionPool46 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool46.evictAll();
        okHttpClient37.connectionPool = connectionPool46;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory49 = okHttpClient37.sslSocketFactory;
        java.net.ResponseCache responseCache50 = null;
        okHttpClient37.responseCache = responseCache50;
        com.squareup.okhttp.OkAuthenticator okAuthenticator52 = okHttpClient37.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient53 = okHttpClient37.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient54 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector55 = null;
        okHttpClient54.proxySelector = proxySelector55;
        java.net.ProxySelector proxySelector57 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient58 = okHttpClient54.setProxySelector(proxySelector57);
        java.net.ProxySelector proxySelector59 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient60 = okHttpClient54.setProxySelector(proxySelector59);
        java.net.ProxySelector.setDefault(proxySelector59);
        com.squareup.okhttp.OkHttpClient okHttpClient62 = okHttpClient53.setProxySelector(proxySelector59);
        java.net.ProxySelector.setDefault(proxySelector59);
        com.squareup.okhttp.OkHttpClient okHttpClient64 = okHttpClient0.setProxySelector(proxySelector59);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory65 = okHttpClient0.sslSocketFactory;
        java.net.ResponseCache responseCache66 = okHttpClient0.getResponseCache();
        java.net.ResponseCache responseCache67 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient68 = okHttpClient0.setResponseCache(responseCache67);
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertNull(connectionPool6);
        org.junit.Assert.assertNull(proxySelector10);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertNull(proxySelector13);
        org.junit.Assert.assertNull(responseCache14);
        org.junit.Assert.assertNotNull(routeSet15);
        org.junit.Assert.assertNull(cookieHandler17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNotNull(okHttpClient29);
// flaky:         org.junit.Assert.assertNull(proxySelector30);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNotNull(hostnameVerifier33);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNull(cookieHandler38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(okHttpClient41);
        org.junit.Assert.assertNotNull(okHttpClient43);
        org.junit.Assert.assertNull(sSLSocketFactory49);
        org.junit.Assert.assertNull(okAuthenticator52);
        org.junit.Assert.assertNotNull(okHttpClient53);
        org.junit.Assert.assertNotNull(okHttpClient58);
// flaky:         org.junit.Assert.assertNull(proxySelector59);
        org.junit.Assert.assertNotNull(okHttpClient60);
        org.junit.Assert.assertNotNull(okHttpClient62);
        org.junit.Assert.assertNotNull(okHttpClient64);
        org.junit.Assert.assertNull(sSLSocketFactory65);
        org.junit.Assert.assertNull(responseCache66);
        org.junit.Assert.assertNotNull(okHttpClient68);
    }

    @Test
    public void test03415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03415");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setHostnameVerifier(hostnameVerifier4);
        java.net.ProxySelector proxySelector6 = okHttpClient0.proxySelector;
        java.net.ResponseCache responseCache7 = okHttpClient0.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet8 = okHttpClient0.failedRoutes;
        com.squareup.okhttp.ConnectionPool connectionPool11 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool11.evictAll();
        com.squareup.okhttp.Address address13 = null;
        com.squareup.okhttp.Connection connection14 = connectionPool11.get(address13);
        okHttpClient0.connectionPool = connectionPool11;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient0.setFollowProtocolRedirects(true);
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient0.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier19 = okHttpClient0.hostnameVerifier;
        com.squareup.okhttp.ConnectionPool connectionPool20 = okHttpClient0.getConnectionPool();
        java.net.ProxySelector proxySelector21 = okHttpClient0.getProxySelector();
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(proxySelector6);
        org.junit.Assert.assertNull(responseCache7);
        org.junit.Assert.assertNotNull(routeSet8);
        org.junit.Assert.assertNull(connection14);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNull(hostnameVerifier19);
        org.junit.Assert.assertNotNull(connectionPool20);
        org.junit.Assert.assertNull(proxySelector21);
    }

    @Test
    public void test03416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03416");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.copyWithDefaults();
        java.net.CookieHandler cookieHandler6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient0.setCookieHandler(cookieHandler6);
        com.squareup.okhttp.OkAuthenticator okAuthenticator8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient7.setAuthenticator(okAuthenticator8);
        com.squareup.okhttp.OkHttpClient okHttpClient10 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector11 = null;
        okHttpClient10.proxySelector = proxySelector11;
        java.net.ProxySelector proxySelector13 = okHttpClient10.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient10.setHostnameVerifier(hostnameVerifier14);
        java.net.ProxySelector proxySelector16 = okHttpClient10.proxySelector;
        java.net.ResponseCache responseCache17 = okHttpClient10.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet18 = okHttpClient10.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler20 = okHttpClient19.getCookieHandler();
        boolean boolean21 = okHttpClient19.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient19.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool25 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int26 = connectionPool25.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient22.setConnectionPool(connectionPool25);
        com.squareup.okhttp.OkHttpClient okHttpClient28 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector29 = null;
        okHttpClient28.proxySelector = proxySelector29;
        java.net.ProxySelector proxySelector31 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient28.setProxySelector(proxySelector31);
        java.net.ProxySelector proxySelector33 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient28.setProxySelector(proxySelector33);
        okHttpClient27.proxySelector = proxySelector33;
        javax.net.ssl.HostnameVerifier hostnameVerifier36 = okHttpClient27.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient10.setHostnameVerifier(hostnameVerifier36);
        javax.net.ssl.HostnameVerifier hostnameVerifier38 = okHttpClient37.getHostnameVerifier();
        okHttpClient9.hostnameVerifier = hostnameVerifier38;
        com.squareup.okhttp.OkHttpClient okHttpClient40 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler41 = okHttpClient40.getCookieHandler();
        java.net.ResponseCache responseCache42 = null;
        okHttpClient40.responseCache = responseCache42;
        boolean boolean44 = okHttpClient40.followProtocolRedirects;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory45 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient46 = okHttpClient40.setSSLSocketFactory(sSLSocketFactory45);
        java.net.Proxy proxy47 = okHttpClient46.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient48 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector49 = null;
        okHttpClient48.proxySelector = proxySelector49;
        java.net.ProxySelector proxySelector51 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient52 = okHttpClient48.setProxySelector(proxySelector51);
        java.net.ProxySelector proxySelector53 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient54 = okHttpClient48.setProxySelector(proxySelector53);
        java.net.ProxySelector.setDefault(proxySelector53);
        okHttpClient46.proxySelector = proxySelector53;
        okHttpClient9.proxySelector = proxySelector53;
        com.squareup.okhttp.OkHttpClient okHttpClient58 = okHttpClient9.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier59 = okHttpClient58.getHostnameVerifier();
        boolean boolean60 = okHttpClient58.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient62 = okHttpClient58.setFollowProtocolRedirects(true);
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNotNull(okHttpClient7);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNull(proxySelector13);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNull(proxySelector16);
        org.junit.Assert.assertNull(responseCache17);
        org.junit.Assert.assertNotNull(routeSet18);
        org.junit.Assert.assertNull(cookieHandler20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNotNull(okHttpClient32);
// flaky:         org.junit.Assert.assertNull(proxySelector33);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertNotNull(hostnameVerifier36);
        org.junit.Assert.assertNotNull(okHttpClient37);
        org.junit.Assert.assertNotNull(hostnameVerifier38);
        org.junit.Assert.assertNull(cookieHandler41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(okHttpClient46);
        org.junit.Assert.assertNull(proxy47);
        org.junit.Assert.assertNotNull(okHttpClient52);
// flaky:         org.junit.Assert.assertNull(proxySelector53);
        org.junit.Assert.assertNotNull(okHttpClient54);
        org.junit.Assert.assertNotNull(okHttpClient58);
        org.junit.Assert.assertNotNull(hostnameVerifier59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(okHttpClient62);
    }

    @Test
    public void test03417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03417");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setHostnameVerifier(hostnameVerifier4);
        java.net.ResponseCache responseCache6 = okHttpClient5.responseCache;
        java.net.CookieHandler cookieHandler7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient5.setCookieHandler(cookieHandler7);
        java.net.CookieHandler cookieHandler9 = okHttpClient5.cookieHandler;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient5.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool13 = new com.squareup.okhttp.ConnectionPool((int) (short) 100, (-1L));
        okHttpClient10.connectionPool = connectionPool13;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient10.setFollowProtocolRedirects(false);
        com.squareup.okhttp.ConnectionPool connectionPool19 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool19.evictAll();
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient10.setConnectionPool(connectionPool19);
        java.net.CookieHandler cookieHandler22 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient21.setCookieHandler(cookieHandler22);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory24 = okHttpClient23.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient25 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler26 = okHttpClient25.getCookieHandler();
        boolean boolean27 = okHttpClient25.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient25.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool31 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int32 = connectionPool31.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient28.setConnectionPool(connectionPool31);
        com.squareup.okhttp.OkHttpClient okHttpClient34 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler35 = okHttpClient34.getCookieHandler();
        boolean boolean36 = okHttpClient34.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient34.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool40 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int41 = connectionPool40.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient37.setConnectionPool(connectionPool40);
        com.squareup.okhttp.OkHttpClient okHttpClient43 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector44 = null;
        okHttpClient43.proxySelector = proxySelector44;
        java.net.ProxySelector proxySelector46 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient47 = okHttpClient43.setProxySelector(proxySelector46);
        java.net.ProxySelector proxySelector48 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient49 = okHttpClient43.setProxySelector(proxySelector48);
        okHttpClient42.proxySelector = proxySelector48;
        com.squareup.okhttp.OkHttpClient okHttpClient51 = okHttpClient28.setProxySelector(proxySelector48);
        java.net.CookieHandler cookieHandler52 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient53 = okHttpClient51.setCookieHandler(cookieHandler52);
        com.squareup.okhttp.OkHttpClient okHttpClient54 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler55 = okHttpClient54.getCookieHandler();
        boolean boolean56 = okHttpClient54.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator57 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient58 = okHttpClient54.setAuthenticator(okAuthenticator57);
        java.net.ResponseCache responseCache59 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient60 = okHttpClient54.setResponseCache(responseCache59);
        com.squareup.okhttp.ConnectionPool connectionPool63 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool63.evictAll();
        okHttpClient54.connectionPool = connectionPool63;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory66 = okHttpClient54.sslSocketFactory;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory67 = null;
        okHttpClient54.sslSocketFactory = sSLSocketFactory67;
        java.net.ProxySelector proxySelector69 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient70 = okHttpClient54.setProxySelector(proxySelector69);
        com.squareup.okhttp.OkHttpClient okHttpClient71 = okHttpClient53.setProxySelector(proxySelector69);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory72 = okHttpClient71.sslSocketFactory;
        java.net.Socket socket73 = sSLSocketFactory72.createSocket();
        java.lang.String[] strArray74 = sSLSocketFactory72.getSupportedCipherSuites();
        java.net.Socket socket75 = sSLSocketFactory72.createSocket();
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket79 = sSLSocketFactory24.createSocket(socket75, "DIRECT", (int) '4', false);
            org.junit.Assert.fail("Expected exception of type java.net.SocketException; message: Underlying socket is not connected");
        } catch (java.net.SocketException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(responseCache6);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertNull(cookieHandler9);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertNotNull(sSLSocketFactory24);
        org.junit.Assert.assertNull(cookieHandler26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(okHttpClient33);
        org.junit.Assert.assertNull(cookieHandler35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(okHttpClient37);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(okHttpClient42);
        org.junit.Assert.assertNotNull(okHttpClient47);
// flaky:         org.junit.Assert.assertNull(proxySelector48);
        org.junit.Assert.assertNotNull(okHttpClient49);
        org.junit.Assert.assertNotNull(okHttpClient51);
        org.junit.Assert.assertNotNull(okHttpClient53);
        org.junit.Assert.assertNull(cookieHandler55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(okHttpClient58);
        org.junit.Assert.assertNotNull(okHttpClient60);
        org.junit.Assert.assertNull(sSLSocketFactory66);
// flaky:         org.junit.Assert.assertNull(proxySelector69);
        org.junit.Assert.assertNotNull(okHttpClient70);
        org.junit.Assert.assertNotNull(okHttpClient71);
        org.junit.Assert.assertNotNull(sSLSocketFactory72);
        org.junit.Assert.assertNotNull(socket73);
        org.junit.Assert.assertEquals(socket73.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertNotNull(socket75);
        org.junit.Assert.assertEquals(socket75.toString(), "Socket[unconnected]");
    }

    @Test
    public void test03418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03418");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool6 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int7 = connectionPool6.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient3.setConnectionPool(connectionPool6);
        javax.net.ssl.HostnameVerifier hostnameVerifier9 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier9;
        com.squareup.okhttp.ConnectionPool connectionPool11 = okHttpClient3.getConnectionPool();
        com.squareup.okhttp.OkHttpClient okHttpClient12 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler13 = okHttpClient12.getCookieHandler();
        java.net.ResponseCache responseCache14 = null;
        okHttpClient12.responseCache = responseCache14;
        boolean boolean16 = okHttpClient12.followProtocolRedirects;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory17 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient12.setSSLSocketFactory(sSLSocketFactory17);
        java.net.Proxy proxy19 = okHttpClient18.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient20 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector21 = null;
        okHttpClient20.proxySelector = proxySelector21;
        java.net.ProxySelector proxySelector23 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient20.setProxySelector(proxySelector23);
        java.net.ProxySelector proxySelector25 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient20.setProxySelector(proxySelector25);
        java.net.ProxySelector.setDefault(proxySelector25);
        okHttpClient18.proxySelector = proxySelector25;
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient18.copyWithDefaults();
        java.net.CookieHandler cookieHandler30 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient18.setCookieHandler(cookieHandler30);
        com.squareup.okhttp.OkHttpClient okHttpClient32 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector33 = null;
        okHttpClient32.proxySelector = proxySelector33;
        java.net.ProxySelector proxySelector35 = okHttpClient32.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier36 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient32.setHostnameVerifier(hostnameVerifier36);
        java.net.ResponseCache responseCache38 = okHttpClient37.responseCache;
        java.net.CookieHandler cookieHandler39 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient40 = okHttpClient37.setCookieHandler(cookieHandler39);
        java.net.CookieHandler cookieHandler41 = okHttpClient37.cookieHandler;
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient37.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient43 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector44 = null;
        okHttpClient43.proxySelector = proxySelector44;
        java.net.ProxySelector proxySelector46 = okHttpClient43.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier47 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient48 = okHttpClient43.setHostnameVerifier(hostnameVerifier47);
        boolean boolean49 = okHttpClient43.getFollowProtocolRedirects();
        com.squareup.okhttp.ConnectionPool connectionPool52 = new com.squareup.okhttp.ConnectionPool((int) 'a', (long) (byte) -1);
        com.squareup.okhttp.OkHttpClient okHttpClient53 = okHttpClient43.setConnectionPool(connectionPool52);
        com.squareup.okhttp.OkHttpClient okHttpClient54 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler55 = okHttpClient54.getCookieHandler();
        boolean boolean56 = okHttpClient54.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient57 = okHttpClient54.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier58 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient59 = okHttpClient57.setHostnameVerifier(hostnameVerifier58);
        java.net.ResponseCache responseCache60 = okHttpClient59.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator61 = okHttpClient59.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier62 = okHttpClient59.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory63 = okHttpClient59.getSslSocketFactory();
        okHttpClient43.sslSocketFactory = sSLSocketFactory63;
        okHttpClient37.sslSocketFactory = sSLSocketFactory63;
        java.net.Socket socket66 = sSLSocketFactory63.createSocket();
        com.squareup.okhttp.OkHttpClient okHttpClient67 = okHttpClient31.setSSLSocketFactory(sSLSocketFactory63);
        okHttpClient3.sslSocketFactory = sSLSocketFactory63;
        java.net.Socket socket69 = sSLSocketFactory63.createSocket();
        java.net.InetAddress inetAddress72 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket74 = sSLSocketFactory63.createSocket("", 1, inetAddress72, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.net.BindException; message: Permission denied (Bind failed)");
        } catch (java.net.BindException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertNotNull(connectionPool11);
        org.junit.Assert.assertNull(cookieHandler13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNull(proxy19);
        org.junit.Assert.assertNotNull(okHttpClient24);
// flaky:         org.junit.Assert.assertNull(proxySelector25);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNotNull(okHttpClient29);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNull(proxySelector35);
        org.junit.Assert.assertNotNull(okHttpClient37);
        org.junit.Assert.assertNull(responseCache38);
        org.junit.Assert.assertNotNull(okHttpClient40);
        org.junit.Assert.assertNull(cookieHandler41);
        org.junit.Assert.assertNotNull(okHttpClient42);
        org.junit.Assert.assertNull(proxySelector46);
        org.junit.Assert.assertNotNull(okHttpClient48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(okHttpClient53);
        org.junit.Assert.assertNull(cookieHandler55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(okHttpClient57);
        org.junit.Assert.assertNotNull(okHttpClient59);
        org.junit.Assert.assertNull(responseCache60);
        org.junit.Assert.assertNotNull(okAuthenticator61);
        org.junit.Assert.assertNull(hostnameVerifier62);
        org.junit.Assert.assertNotNull(sSLSocketFactory63);
        org.junit.Assert.assertNotNull(socket66);
        org.junit.Assert.assertEquals(socket66.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(okHttpClient67);
        org.junit.Assert.assertNotNull(socket69);
        org.junit.Assert.assertEquals(socket69.toString(), "Socket[unconnected]");
    }

    @Test
    public void test03419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03419");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setHostnameVerifier(hostnameVerifier4);
        java.net.ResponseCache responseCache6 = okHttpClient5.responseCache;
        java.net.CookieHandler cookieHandler7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient5.setCookieHandler(cookieHandler7);
        java.net.ResponseCache responseCache9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient5.setResponseCache(responseCache9);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory11 = okHttpClient5.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient12 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler13 = okHttpClient12.getCookieHandler();
        boolean boolean14 = okHttpClient12.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient12.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient15.setHostnameVerifier(hostnameVerifier16);
        java.net.ResponseCache responseCache18 = okHttpClient17.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator19 = okHttpClient17.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier20 = okHttpClient17.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory21 = okHttpClient17.getSslSocketFactory();
        java.lang.String[] strArray22 = sSLSocketFactory21.getSupportedCipherSuites();
        java.net.Socket socket23 = sSLSocketFactory21.createSocket();
        java.net.Socket socket24 = sSLSocketFactory21.createSocket();
        java.net.Socket socket25 = sSLSocketFactory21.createSocket();
        java.lang.String[] strArray26 = sSLSocketFactory21.getSupportedCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient5.setSSLSocketFactory(sSLSocketFactory21);
        java.net.InetAddress inetAddress30 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket32 = sSLSocketFactory21.createSocket("", (int) (byte) 10, inetAddress30, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: port out of range:-1");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(responseCache6);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertNull(sSLSocketFactory11);
        org.junit.Assert.assertNull(cookieHandler13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNull(responseCache18);
        org.junit.Assert.assertNotNull(okAuthenticator19);
        org.junit.Assert.assertNull(hostnameVerifier20);
        org.junit.Assert.assertNotNull(sSLSocketFactory21);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(socket23);
        org.junit.Assert.assertEquals(socket23.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(socket24);
        org.junit.Assert.assertEquals(socket24.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(socket25);
        org.junit.Assert.assertEquals(socket25.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(okHttpClient27);
    }

    @Test
    public void test03420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03420");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler7 = okHttpClient6.getCookieHandler();
        boolean boolean8 = okHttpClient6.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient6.setAuthenticator(okAuthenticator9);
        java.net.ResponseCache responseCache11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient6.setResponseCache(responseCache11);
        com.squareup.okhttp.ConnectionPool connectionPool15 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool15.evictAll();
        okHttpClient6.connectionPool = connectionPool15;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory18 = okHttpClient6.sslSocketFactory;
        java.net.Proxy proxy19 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient6.setProxy(proxy19);
        com.squareup.okhttp.OkHttpClient okHttpClient21 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler22 = okHttpClient21.getCookieHandler();
        boolean boolean23 = okHttpClient21.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient21.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet25 = okHttpClient24.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient24.copyWithDefaults();
        java.net.ProxySelector proxySelector27 = okHttpClient24.getProxySelector();
        okHttpClient20.proxySelector = proxySelector27;
        boolean boolean29 = okHttpClient20.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient30 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler31 = okHttpClient30.getCookieHandler();
        boolean boolean32 = okHttpClient30.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient30.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet34 = okHttpClient33.failedRoutes;
        boolean boolean35 = okHttpClient33.getFollowProtocolRedirects();
        java.net.Proxy proxy36 = java.net.Proxy.NO_PROXY;
        okHttpClient33.proxy = proxy36;
        java.lang.String str38 = proxy36.toString();
        java.lang.String str39 = proxy36.toString();
        com.squareup.okhttp.OkHttpClient okHttpClient40 = okHttpClient20.setProxy(proxy36);
        java.lang.String str41 = proxy36.toString();
        com.squareup.okhttp.OkHttpClient okHttpClient42 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler43 = okHttpClient42.getCookieHandler();
        boolean boolean44 = okHttpClient42.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator45 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient46 = okHttpClient42.setAuthenticator(okAuthenticator45);
        java.net.Proxy proxy47 = okHttpClient42.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient48 = okHttpClient42.copyWithDefaults();
        java.net.CookieHandler cookieHandler49 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient42.setCookieHandler(cookieHandler49);
        com.squareup.okhttp.OkHttpClient okHttpClient51 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler52 = okHttpClient51.getCookieHandler();
        boolean boolean53 = okHttpClient51.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient54 = okHttpClient51.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier55 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient56 = okHttpClient54.setHostnameVerifier(hostnameVerifier55);
        java.net.ResponseCache responseCache57 = okHttpClient56.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator58 = okHttpClient56.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier59 = okHttpClient56.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory60 = okHttpClient56.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient61 = okHttpClient42.setSSLSocketFactory(sSLSocketFactory60);
        javax.net.ssl.HostnameVerifier hostnameVerifier62 = okHttpClient61.hostnameVerifier;
        boolean boolean63 = proxy36.equals((java.lang.Object) hostnameVerifier62);
        okHttpClient5.proxy = proxy36;
        java.net.Proxy.Type type65 = proxy36.type();
        java.net.SocketAddress socketAddress66 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Proxy proxy67 = new java.net.Proxy(type65, socketAddress66);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: type DIRECT is not compatible with address null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(cookieHandler7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertNull(sSLSocketFactory18);
        org.junit.Assert.assertNotNull(proxy19);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNull(cookieHandler22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNotNull(routeSet25);
        org.junit.Assert.assertNotNull(okHttpClient26);
// flaky:         org.junit.Assert.assertNull(proxySelector27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(cookieHandler31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(okHttpClient33);
        org.junit.Assert.assertNotNull(routeSet34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(proxy36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "DIRECT" + "'", str38, "DIRECT");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "DIRECT" + "'", str39, "DIRECT");
        org.junit.Assert.assertNotNull(okHttpClient40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "DIRECT" + "'", str41, "DIRECT");
        org.junit.Assert.assertNull(cookieHandler43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(okHttpClient46);
        org.junit.Assert.assertNull(proxy47);
        org.junit.Assert.assertNotNull(okHttpClient48);
        org.junit.Assert.assertNotNull(okHttpClient50);
        org.junit.Assert.assertNull(cookieHandler52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(okHttpClient54);
        org.junit.Assert.assertNotNull(okHttpClient56);
        org.junit.Assert.assertNull(responseCache57);
        org.junit.Assert.assertNotNull(okAuthenticator58);
        org.junit.Assert.assertNull(hostnameVerifier59);
        org.junit.Assert.assertNotNull(sSLSocketFactory60);
        org.junit.Assert.assertNotNull(okHttpClient61);
        org.junit.Assert.assertNull(hostnameVerifier62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + type65 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type65.equals(java.net.Proxy.Type.DIRECT));
    }

    @Test
    public void test03421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03421");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        java.net.ResponseCache responseCache5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient0.setResponseCache(responseCache5);
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool9.evictAll();
        okHttpClient0.connectionPool = connectionPool9;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory12 = okHttpClient0.sslSocketFactory;
        java.net.ResponseCache responseCache13 = null;
        okHttpClient0.responseCache = responseCache13;
        com.squareup.okhttp.OkAuthenticator okAuthenticator15 = okHttpClient0.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool17 = okHttpClient16.getConnectionPool();
        com.squareup.okhttp.ConnectionPool connectionPool20 = new com.squareup.okhttp.ConnectionPool((int) 'a', (long) (byte) 1);
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient16.setConnectionPool(connectionPool20);
        java.net.Proxy proxy22 = okHttpClient16.getProxy();
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient6);
        org.junit.Assert.assertNull(sSLSocketFactory12);
        org.junit.Assert.assertNull(okAuthenticator15);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNotNull(connectionPool17);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNull(proxy22);
    }

    @Test
    public void test03422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03422");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        java.net.ResponseCache responseCache5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient0.setResponseCache(responseCache5);
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool9.evictAll();
        okHttpClient0.connectionPool = connectionPool9;
        boolean boolean12 = okHttpClient0.followProtocolRedirects;
        java.net.CookieHandler cookieHandler13 = null;
        okHttpClient0.cookieHandler = cookieHandler13;
        com.squareup.okhttp.OkAuthenticator okAuthenticator15 = okHttpClient0.authenticator;
        java.net.ProxySelector proxySelector16 = okHttpClient0.getProxySelector();
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient6);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(okAuthenticator15);
        org.junit.Assert.assertNull(proxySelector16);
    }

    @Test
    public void test03423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03423");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient3.setHostnameVerifier(hostnameVerifier4);
        java.net.ResponseCache responseCache6 = okHttpClient5.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator7 = okHttpClient5.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = okHttpClient5.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory9 = okHttpClient5.getSslSocketFactory();
        java.lang.String[] strArray10 = sSLSocketFactory9.getSupportedCipherSuites();
        java.lang.String[] strArray11 = sSLSocketFactory9.getDefaultCipherSuites();
        java.lang.String[] strArray12 = sSLSocketFactory9.getDefaultCipherSuites();
        java.lang.String[] strArray13 = sSLSocketFactory9.getDefaultCipherSuites();
        java.lang.String[] strArray14 = sSLSocketFactory9.getSupportedCipherSuites();
        java.lang.String[] strArray15 = sSLSocketFactory9.getDefaultCipherSuites();
        java.lang.String[] strArray16 = sSLSocketFactory9.getSupportedCipherSuites();
        javax.net.SocketFactory socketFactory17 = javax.net.ssl.SSLSocketFactory.getDefault();
        java.net.Socket socket18 = socketFactory17.createSocket();
        java.net.Socket socket19 = socketFactory17.createSocket();
        java.net.Socket socket20 = socketFactory17.createSocket();
        java.net.Socket socket21 = socketFactory17.createSocket();
        java.io.InputStream inputStream22 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket24 = sSLSocketFactory9.createSocket(socket21, inputStream22, false);
            org.junit.Assert.fail("Expected exception of type java.net.SocketException; message: Underlying socket is not connected");
        } catch (java.net.SocketException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(responseCache6);
        org.junit.Assert.assertNotNull(okAuthenticator7);
        org.junit.Assert.assertNull(hostnameVerifier8);
        org.junit.Assert.assertNotNull(sSLSocketFactory9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(socketFactory17);
        org.junit.Assert.assertNotNull(socket18);
        org.junit.Assert.assertEquals(socket18.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(socket19);
        org.junit.Assert.assertEquals(socket19.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(socket20);
        org.junit.Assert.assertEquals(socket20.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(socket21);
        org.junit.Assert.assertEquals(socket21.toString(), "Socket[unconnected]");
    }

    @Test
    public void test03424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03424");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool6 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int7 = connectionPool6.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient3.setConnectionPool(connectionPool6);
        javax.net.ssl.HostnameVerifier hostnameVerifier9 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier9;
        java.net.Proxy proxy11 = okHttpClient3.getProxy();
        okHttpClient3.followProtocolRedirects = true;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler15 = okHttpClient14.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray16 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet17 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet17, routeArray16);
        okHttpClient14.failedRoutes = routeSet17;
        java.net.Proxy proxy20 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler22 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient21.setCookieHandler(cookieHandler22);
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient21.setFollowProtocolRedirects(true);
        boolean boolean26 = proxy20.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient14.setProxy(proxy20);
        java.net.Proxy proxy28 = okHttpClient27.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient3.setProxy(proxy28);
        com.squareup.okhttp.OkHttpClient okHttpClient30 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector31 = null;
        okHttpClient30.proxySelector = proxySelector31;
        java.net.ProxySelector proxySelector33 = okHttpClient30.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier34 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient30.setHostnameVerifier(hostnameVerifier34);
        java.net.ProxySelector proxySelector36 = okHttpClient30.proxySelector;
        java.net.CookieHandler cookieHandler37 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient30.setCookieHandler(cookieHandler37);
        com.squareup.okhttp.OkAuthenticator okAuthenticator39 = okHttpClient30.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool42 = new com.squareup.okhttp.ConnectionPool(1, 0L);
        okHttpClient30.connectionPool = connectionPool42;
        com.squareup.okhttp.OkHttpClient okHttpClient44 = okHttpClient3.setConnectionPool(connectionPool42);
        com.squareup.okhttp.OkHttpClient okHttpClient45 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector46 = null;
        okHttpClient45.proxySelector = proxySelector46;
        com.squareup.okhttp.ConnectionPool connectionPool48 = okHttpClient45.connectionPool;
        com.squareup.okhttp.ConnectionPool connectionPool49 = okHttpClient45.getConnectionPool();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache50 = okHttpClient45.okResponseCache();
        java.net.ResponseCache responseCache51 = null;
        okHttpClient45.responseCache = responseCache51;
        com.squareup.okhttp.OkAuthenticator okAuthenticator53 = okHttpClient45.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient54 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler55 = okHttpClient54.getCookieHandler();
        boolean boolean56 = okHttpClient54.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient57 = okHttpClient54.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool60 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int61 = connectionPool60.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient62 = okHttpClient57.setConnectionPool(connectionPool60);
        com.squareup.okhttp.OkHttpClient okHttpClient63 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector64 = null;
        okHttpClient63.proxySelector = proxySelector64;
        java.net.ProxySelector proxySelector66 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient67 = okHttpClient63.setProxySelector(proxySelector66);
        java.net.ProxySelector proxySelector68 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient69 = okHttpClient63.setProxySelector(proxySelector68);
        okHttpClient62.proxySelector = proxySelector68;
        okHttpClient45.proxySelector = proxySelector68;
        okHttpClient3.proxySelector = proxySelector68;
        com.squareup.okhttp.OkHttpClient okHttpClient73 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector74 = null;
        okHttpClient73.proxySelector = proxySelector74;
        java.net.ProxySelector proxySelector76 = okHttpClient73.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier77 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient78 = okHttpClient73.setHostnameVerifier(hostnameVerifier77);
        java.net.ProxySelector proxySelector79 = java.net.ProxySelector.getDefault();
        okHttpClient73.proxySelector = proxySelector79;
        java.net.CookieHandler cookieHandler81 = null;
        okHttpClient73.cookieHandler = cookieHandler81;
        com.squareup.okhttp.OkHttpClient okHttpClient83 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler84 = okHttpClient83.getCookieHandler();
        boolean boolean85 = okHttpClient83.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient86 = okHttpClient83.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier87 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient88 = okHttpClient86.setHostnameVerifier(hostnameVerifier87);
        java.net.ResponseCache responseCache89 = okHttpClient88.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator90 = okHttpClient88.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier91 = okHttpClient88.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory92 = okHttpClient88.getSslSocketFactory();
        java.lang.String[] strArray93 = sSLSocketFactory92.getSupportedCipherSuites();
        java.lang.String[] strArray94 = sSLSocketFactory92.getDefaultCipherSuites();
        okHttpClient73.sslSocketFactory = sSLSocketFactory92;
        okHttpClient3.sslSocketFactory = sSLSocketFactory92;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory97 = okHttpClient3.getSslSocketFactory();
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertNull(proxy11);
        org.junit.Assert.assertNull(cookieHandler15);
        org.junit.Assert.assertNotNull(routeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(proxy20);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertNotNull(okHttpClient25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNotNull(proxy28);
        org.junit.Assert.assertNotNull(okHttpClient29);
        org.junit.Assert.assertNull(proxySelector33);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNull(proxySelector36);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNull(okAuthenticator39);
        org.junit.Assert.assertNotNull(okHttpClient44);
        org.junit.Assert.assertNull(connectionPool48);
        org.junit.Assert.assertNull(connectionPool49);
        org.junit.Assert.assertNull(okResponseCache50);
        org.junit.Assert.assertNull(okAuthenticator53);
        org.junit.Assert.assertNull(cookieHandler55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(okHttpClient57);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(okHttpClient62);
        org.junit.Assert.assertNotNull(okHttpClient67);
// flaky:         org.junit.Assert.assertNull(proxySelector68);
        org.junit.Assert.assertNotNull(okHttpClient69);
        org.junit.Assert.assertNull(proxySelector76);
        org.junit.Assert.assertNotNull(okHttpClient78);
// flaky:         org.junit.Assert.assertNull(proxySelector79);
        org.junit.Assert.assertNull(cookieHandler84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(okHttpClient86);
        org.junit.Assert.assertNotNull(okHttpClient88);
        org.junit.Assert.assertNull(responseCache89);
        org.junit.Assert.assertNotNull(okAuthenticator90);
        org.junit.Assert.assertNull(hostnameVerifier91);
        org.junit.Assert.assertNotNull(sSLSocketFactory92);
        org.junit.Assert.assertNotNull(strArray93);
        org.junit.Assert.assertNotNull(strArray94);
        org.junit.Assert.assertNotNull(sSLSocketFactory97);
    }

    @Test
    public void test03425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03425");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setHostnameVerifier(hostnameVerifier4);
        boolean boolean6 = okHttpClient0.getFollowProtocolRedirects();
        java.net.ProxySelector proxySelector7 = okHttpClient0.proxySelector;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector9 = null;
        okHttpClient8.proxySelector = proxySelector9;
        java.net.ProxySelector proxySelector11 = okHttpClient8.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient8.setHostnameVerifier(hostnameVerifier12);
        boolean boolean14 = okHttpClient8.getFollowProtocolRedirects();
        com.squareup.okhttp.ConnectionPool connectionPool17 = new com.squareup.okhttp.ConnectionPool((int) 'a', (long) (byte) -1);
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient8.setConnectionPool(connectionPool17);
        com.squareup.okhttp.OkHttpClient okHttpClient19 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler20 = okHttpClient19.getCookieHandler();
        boolean boolean21 = okHttpClient19.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient19.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier23 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient22.setHostnameVerifier(hostnameVerifier23);
        java.net.ResponseCache responseCache25 = okHttpClient24.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator26 = okHttpClient24.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier27 = okHttpClient24.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory28 = okHttpClient24.getSslSocketFactory();
        okHttpClient8.sslSocketFactory = sSLSocketFactory28;
        okHttpClient0.sslSocketFactory = sSLSocketFactory28;
        java.net.ResponseCache responseCache31 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient0.setResponseCache(responseCache31);
        com.squareup.okhttp.OkHttpClient okHttpClient33 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler34 = okHttpClient33.getCookieHandler();
        boolean boolean35 = okHttpClient33.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator36 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient33.setAuthenticator(okAuthenticator36);
        java.net.ResponseCache responseCache38 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient33.setResponseCache(responseCache38);
        com.squareup.okhttp.ConnectionPool connectionPool42 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool42.evictAll();
        okHttpClient33.connectionPool = connectionPool42;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory45 = okHttpClient33.sslSocketFactory;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory46 = null;
        okHttpClient33.sslSocketFactory = sSLSocketFactory46;
        java.net.ProxySelector proxySelector48 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient49 = okHttpClient33.setProxySelector(proxySelector48);
        java.net.CookieHandler cookieHandler50 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient51 = okHttpClient33.setCookieHandler(cookieHandler50);
        com.squareup.okhttp.OkHttpClient okHttpClient52 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler53 = okHttpClient52.getCookieHandler();
        boolean boolean54 = okHttpClient52.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient55 = okHttpClient52.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier56 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient57 = okHttpClient55.setHostnameVerifier(hostnameVerifier56);
        java.net.ResponseCache responseCache58 = okHttpClient57.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator59 = okHttpClient57.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier60 = okHttpClient57.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory61 = okHttpClient57.getSslSocketFactory();
        java.lang.String[] strArray62 = sSLSocketFactory61.getSupportedCipherSuites();
        java.lang.String[] strArray63 = sSLSocketFactory61.getDefaultCipherSuites();
        java.lang.String[] strArray64 = sSLSocketFactory61.getDefaultCipherSuites();
        java.lang.String[] strArray65 = sSLSocketFactory61.getDefaultCipherSuites();
        java.lang.String[] strArray66 = sSLSocketFactory61.getSupportedCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient67 = okHttpClient51.setSSLSocketFactory(sSLSocketFactory61);
        java.lang.String[] strArray68 = sSLSocketFactory61.getDefaultCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient69 = okHttpClient32.setSSLSocketFactory(sSLSocketFactory61);
        java.net.InetAddress inetAddress70 = null;
        java.net.InetAddress inetAddress72 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket74 = sSLSocketFactory61.createSocket(inetAddress70, (-1), inetAddress72, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.net.BindException; message: Permission denied (Bind failed)");
        } catch (java.net.BindException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(proxySelector7);
        org.junit.Assert.assertNull(proxySelector11);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNull(cookieHandler20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNull(responseCache25);
        org.junit.Assert.assertNotNull(okAuthenticator26);
        org.junit.Assert.assertNull(hostnameVerifier27);
        org.junit.Assert.assertNotNull(sSLSocketFactory28);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertNull(cookieHandler34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(okHttpClient37);
        org.junit.Assert.assertNotNull(okHttpClient39);
        org.junit.Assert.assertNull(sSLSocketFactory45);
// flaky:         org.junit.Assert.assertNull(proxySelector48);
        org.junit.Assert.assertNotNull(okHttpClient49);
        org.junit.Assert.assertNotNull(okHttpClient51);
        org.junit.Assert.assertNull(cookieHandler53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(okHttpClient55);
        org.junit.Assert.assertNotNull(okHttpClient57);
        org.junit.Assert.assertNull(responseCache58);
        org.junit.Assert.assertNotNull(okAuthenticator59);
        org.junit.Assert.assertNull(hostnameVerifier60);
        org.junit.Assert.assertNotNull(sSLSocketFactory61);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertNotNull(okHttpClient67);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(okHttpClient69);
    }

    @Test
    public void test03426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03426");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector5 = null;
        okHttpClient4.proxySelector = proxySelector5;
        java.net.ProxySelector proxySelector7 = okHttpClient4.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient4.setHostnameVerifier(hostnameVerifier8);
        java.net.ProxySelector proxySelector10 = okHttpClient4.proxySelector;
        java.net.ResponseCache responseCache11 = okHttpClient4.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet12 = okHttpClient4.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler14 = okHttpClient13.getCookieHandler();
        boolean boolean15 = okHttpClient13.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient13.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool19 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int20 = connectionPool19.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient16.setConnectionPool(connectionPool19);
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector23 = null;
        okHttpClient22.proxySelector = proxySelector23;
        java.net.ProxySelector proxySelector25 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient22.setProxySelector(proxySelector25);
        java.net.ProxySelector proxySelector27 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient22.setProxySelector(proxySelector27);
        okHttpClient21.proxySelector = proxySelector27;
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = okHttpClient21.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient4.setHostnameVerifier(hostnameVerifier30);
        java.net.Proxy proxy32 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress33 = proxy32.address();
        com.squareup.okhttp.OkHttpClient okHttpClient34 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector35 = null;
        okHttpClient34.proxySelector = proxySelector35;
        com.squareup.okhttp.ConnectionPool connectionPool37 = okHttpClient34.connectionPool;
        com.squareup.okhttp.ConnectionPool connectionPool38 = okHttpClient34.getConnectionPool();
        boolean boolean39 = proxy32.equals((java.lang.Object) okHttpClient34);
        okHttpClient4.proxy = proxy32;
        com.squareup.okhttp.OkHttpClient okHttpClient41 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler42 = okHttpClient41.getCookieHandler();
        boolean boolean43 = okHttpClient41.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient44 = okHttpClient41.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier45 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient46 = okHttpClient44.setHostnameVerifier(hostnameVerifier45);
        java.net.ResponseCache responseCache47 = okHttpClient46.getResponseCache();
        java.net.ProxySelector proxySelector48 = okHttpClient46.getProxySelector();
        boolean boolean49 = proxy32.equals((java.lang.Object) proxySelector48);
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient0.setProxy(proxy32);
        java.net.CookieHandler cookieHandler51 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient52 = okHttpClient0.setCookieHandler(cookieHandler51);
        java.net.Proxy proxy53 = okHttpClient52.getProxy();
        java.net.Proxy.Type type54 = proxy53.type();
        com.squareup.okhttp.OkHttpClient okHttpClient55 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler56 = okHttpClient55.getCookieHandler();
        java.net.ResponseCache responseCache57 = null;
        okHttpClient55.responseCache = responseCache57;
        java.net.Proxy proxy59 = null;
        okHttpClient55.proxy = proxy59;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory61 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient62 = okHttpClient55.setSSLSocketFactory(sSLSocketFactory61);
        boolean boolean63 = proxy53.equals((java.lang.Object) sSLSocketFactory61);
        com.squareup.okhttp.OkHttpClient okHttpClient64 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler65 = okHttpClient64.getCookieHandler();
        boolean boolean66 = okHttpClient64.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator67 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient68 = okHttpClient64.setAuthenticator(okAuthenticator67);
        boolean boolean69 = proxy53.equals((java.lang.Object) okHttpClient68);
        javax.net.ssl.HostnameVerifier hostnameVerifier70 = okHttpClient68.hostnameVerifier;
        java.net.Proxy proxy71 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient72 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler73 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient74 = okHttpClient72.setCookieHandler(cookieHandler73);
        com.squareup.okhttp.OkHttpClient okHttpClient76 = okHttpClient72.setFollowProtocolRedirects(true);
        boolean boolean77 = proxy71.equals((java.lang.Object) true);
        java.lang.String str78 = proxy71.toString();
        java.net.Proxy.Type type79 = proxy71.type();
        java.net.SocketAddress socketAddress80 = proxy71.address();
        java.net.SocketAddress socketAddress81 = proxy71.address();
        okHttpClient68.proxy = proxy71;
        java.net.SocketAddress socketAddress83 = proxy71.address();
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNull(proxySelector7);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNull(proxySelector10);
        org.junit.Assert.assertNull(responseCache11);
        org.junit.Assert.assertNotNull(routeSet12);
        org.junit.Assert.assertNull(cookieHandler14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNotNull(okHttpClient26);
// flaky:         org.junit.Assert.assertNull(proxySelector27);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNotNull(hostnameVerifier30);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNotNull(proxy32);
        org.junit.Assert.assertNull(socketAddress33);
        org.junit.Assert.assertNull(connectionPool37);
        org.junit.Assert.assertNull(connectionPool38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(cookieHandler42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(okHttpClient44);
        org.junit.Assert.assertNotNull(okHttpClient46);
        org.junit.Assert.assertNull(responseCache47);
// flaky:         org.junit.Assert.assertNull(proxySelector48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(okHttpClient50);
        org.junit.Assert.assertNotNull(okHttpClient52);
        org.junit.Assert.assertNotNull(proxy53);
        org.junit.Assert.assertTrue("'" + type54 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type54.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(cookieHandler56);
        org.junit.Assert.assertNotNull(okHttpClient62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(cookieHandler65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(okHttpClient68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(hostnameVerifier70);
        org.junit.Assert.assertNotNull(proxy71);
        org.junit.Assert.assertNotNull(okHttpClient74);
        org.junit.Assert.assertNotNull(okHttpClient76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "DIRECT" + "'", str78, "DIRECT");
        org.junit.Assert.assertTrue("'" + type79 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type79.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress80);
        org.junit.Assert.assertNull(socketAddress81);
        org.junit.Assert.assertNull(socketAddress83);
    }

    @Test
    public void test03427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03427");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setHostnameVerifier(hostnameVerifier4);
        java.net.ProxySelector proxySelector6 = okHttpClient0.proxySelector;
        java.net.ResponseCache responseCache7 = okHttpClient0.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet8 = okHttpClient0.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler10 = okHttpClient9.getCookieHandler();
        boolean boolean11 = okHttpClient9.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient9.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool15 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int16 = connectionPool15.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient12.setConnectionPool(connectionPool15);
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector19 = null;
        okHttpClient18.proxySelector = proxySelector19;
        java.net.ProxySelector proxySelector21 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient18.setProxySelector(proxySelector21);
        java.net.ProxySelector proxySelector23 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient18.setProxySelector(proxySelector23);
        okHttpClient17.proxySelector = proxySelector23;
        javax.net.ssl.HostnameVerifier hostnameVerifier26 = okHttpClient17.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient0.setHostnameVerifier(hostnameVerifier26);
        com.squareup.okhttp.OkHttpClient okHttpClient28 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler29 = okHttpClient28.getCookieHandler();
        boolean boolean30 = okHttpClient28.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator31 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient28.setAuthenticator(okAuthenticator31);
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient28.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier34 = okHttpClient28.hostnameVerifier;
        java.net.ProxySelector proxySelector35 = java.net.ProxySelector.getDefault();
        okHttpClient28.proxySelector = proxySelector35;
        okHttpClient28.followProtocolRedirects = true;
        com.squareup.okhttp.OkHttpClient okHttpClient39 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler40 = okHttpClient39.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray41 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet42 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet42, routeArray41);
        okHttpClient39.failedRoutes = routeSet42;
        java.net.Proxy proxy45 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient46 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler47 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient48 = okHttpClient46.setCookieHandler(cookieHandler47);
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient46.setFollowProtocolRedirects(true);
        boolean boolean51 = proxy45.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient52 = okHttpClient39.setProxy(proxy45);
        java.lang.String str53 = proxy45.toString();
        com.squareup.okhttp.OkHttpClient okHttpClient54 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler55 = okHttpClient54.getCookieHandler();
        boolean boolean56 = okHttpClient54.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator57 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient58 = okHttpClient54.setAuthenticator(okAuthenticator57);
        java.net.ResponseCache responseCache59 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient60 = okHttpClient54.setResponseCache(responseCache59);
        com.squareup.okhttp.ConnectionPool connectionPool63 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool63.evictAll();
        okHttpClient54.connectionPool = connectionPool63;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory66 = okHttpClient54.sslSocketFactory;
        com.squareup.okhttp.ConnectionPool connectionPool67 = okHttpClient54.getConnectionPool();
        boolean boolean68 = proxy45.equals((java.lang.Object) okHttpClient54);
        com.squareup.okhttp.OkHttpClient okHttpClient69 = okHttpClient28.setProxy(proxy45);
        com.squareup.okhttp.OkHttpClient okHttpClient70 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier71 = okHttpClient70.hostnameVerifier;
        java.net.ResponseCache responseCache72 = okHttpClient70.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator73 = okHttpClient70.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient74 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler75 = okHttpClient74.getCookieHandler();
        boolean boolean76 = okHttpClient74.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient77 = okHttpClient74.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier78 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient79 = okHttpClient77.setHostnameVerifier(hostnameVerifier78);
        java.net.ResponseCache responseCache80 = okHttpClient79.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator81 = okHttpClient79.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier82 = okHttpClient79.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory83 = okHttpClient79.getSslSocketFactory();
        java.lang.String[] strArray84 = sSLSocketFactory83.getSupportedCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient85 = okHttpClient70.setSSLSocketFactory(sSLSocketFactory83);
        com.squareup.okhttp.OkHttpClient okHttpClient86 = okHttpClient69.setSSLSocketFactory(sSLSocketFactory83);
        okHttpClient0.sslSocketFactory = sSLSocketFactory83;
        java.lang.String[] strArray88 = sSLSocketFactory83.getSupportedCipherSuites();
        java.net.InetAddress inetAddress89 = null;
        java.net.InetAddress inetAddress91 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket93 = sSLSocketFactory83.createSocket(inetAddress89, (int) (byte) 0, inetAddress91, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: port out of range:-1");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(proxySelector6);
        org.junit.Assert.assertNull(responseCache7);
        org.junit.Assert.assertNotNull(routeSet8);
        org.junit.Assert.assertNull(cookieHandler10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNotNull(okHttpClient22);
// flaky:         org.junit.Assert.assertNull(proxySelector23);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNotNull(hostnameVerifier26);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNull(cookieHandler29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertNotNull(okHttpClient33);
        org.junit.Assert.assertNull(hostnameVerifier34);
// flaky:         org.junit.Assert.assertNull(proxySelector35);
        org.junit.Assert.assertNull(cookieHandler40);
        org.junit.Assert.assertNotNull(routeArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(proxy45);
        org.junit.Assert.assertNotNull(okHttpClient48);
        org.junit.Assert.assertNotNull(okHttpClient50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(okHttpClient52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "DIRECT" + "'", str53, "DIRECT");
        org.junit.Assert.assertNull(cookieHandler55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(okHttpClient58);
        org.junit.Assert.assertNotNull(okHttpClient60);
        org.junit.Assert.assertNull(sSLSocketFactory66);
        org.junit.Assert.assertNotNull(connectionPool67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(okHttpClient69);
        org.junit.Assert.assertNull(hostnameVerifier71);
        org.junit.Assert.assertNull(responseCache72);
        org.junit.Assert.assertNull(okAuthenticator73);
        org.junit.Assert.assertNull(cookieHandler75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(okHttpClient77);
        org.junit.Assert.assertNotNull(okHttpClient79);
        org.junit.Assert.assertNull(responseCache80);
        org.junit.Assert.assertNotNull(okAuthenticator81);
        org.junit.Assert.assertNull(hostnameVerifier82);
        org.junit.Assert.assertNotNull(sSLSocketFactory83);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertNotNull(okHttpClient85);
        org.junit.Assert.assertNotNull(okHttpClient86);
        org.junit.Assert.assertNotNull(strArray88);
    }

    @Test
    public void test03428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03428");
        com.squareup.okhttp.ConnectionPool connectionPool2 = new com.squareup.okhttp.ConnectionPool((int) (byte) 100, (-1L));
        com.squareup.okhttp.Connection connection3 = null;
        // The following exception was thrown during execution in test generation
        try {
            connectionPool2.recycle(connection3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test03429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03429");
        com.squareup.okhttp.ConnectionPool connectionPool2 = new com.squareup.okhttp.ConnectionPool((int) '#', (long) 0);
        int int3 = connectionPool2.getSpdyConnectionCount();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test03430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03430");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = okHttpClient0.hostnameVerifier;
        java.net.ResponseCache responseCache2 = okHttpClient0.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = okHttpClient0.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler5 = okHttpClient4.getCookieHandler();
        boolean boolean6 = okHttpClient4.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient4.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient7.setHostnameVerifier(hostnameVerifier8);
        java.net.ResponseCache responseCache10 = okHttpClient9.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator11 = okHttpClient9.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient0.setAuthenticator(okAuthenticator11);
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler14 = okHttpClient13.getCookieHandler();
        boolean boolean15 = okHttpClient13.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient13.setAuthenticator(okAuthenticator16);
        java.net.ResponseCache responseCache18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient13.setResponseCache(responseCache18);
        com.squareup.okhttp.ConnectionPool connectionPool22 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool22.evictAll();
        okHttpClient13.connectionPool = connectionPool22;
        connectionPool22.evictAll();
        int int26 = connectionPool22.getSpdyConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient0.setConnectionPool(connectionPool22);
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache28 = okHttpClient0.okResponseCache();
        java.net.Proxy proxy29 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient30 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler31 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient30.setCookieHandler(cookieHandler31);
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient30.setFollowProtocolRedirects(true);
        boolean boolean35 = proxy29.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient0.setProxy(proxy29);
        com.squareup.okhttp.ConnectionPool connectionPool37 = okHttpClient36.getConnectionPool();
        java.net.CookieHandler cookieHandler38 = okHttpClient36.getCookieHandler();
        boolean boolean39 = okHttpClient36.getFollowProtocolRedirects();
        org.junit.Assert.assertNull(hostnameVerifier1);
        org.junit.Assert.assertNull(responseCache2);
        org.junit.Assert.assertNull(okAuthenticator3);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(okHttpClient7);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNull(responseCache10);
        org.junit.Assert.assertNotNull(okAuthenticator11);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertNull(cookieHandler14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNull(okResponseCache28);
        org.junit.Assert.assertNotNull(proxy29);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNotNull(connectionPool37);
        org.junit.Assert.assertNull(cookieHandler38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
    }

    @Test
    public void test03431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03431");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = okHttpClient0.hostnameVerifier;
        java.net.ResponseCache responseCache2 = okHttpClient0.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = okHttpClient0.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setFollowProtocolRedirects(true);
        java.net.ResponseCache responseCache6 = okHttpClient5.getResponseCache();
        java.net.Proxy proxy7 = okHttpClient5.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool8 = okHttpClient5.connectionPool;
        org.junit.Assert.assertNull(hostnameVerifier1);
        org.junit.Assert.assertNull(responseCache2);
        org.junit.Assert.assertNull(okAuthenticator3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(responseCache6);
        org.junit.Assert.assertNull(proxy7);
        org.junit.Assert.assertNull(connectionPool8);
    }

    @Test
    public void test03432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03432");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        java.net.ResponseCache responseCache5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient0.setResponseCache(responseCache5);
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool9.evictAll();
        okHttpClient0.connectionPool = connectionPool9;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory12 = okHttpClient0.sslSocketFactory;
        java.net.Proxy proxy13 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient0.setProxy(proxy13);
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler16 = okHttpClient15.getCookieHandler();
        boolean boolean17 = okHttpClient15.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient15.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet19 = okHttpClient18.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient18.copyWithDefaults();
        java.net.ProxySelector proxySelector21 = okHttpClient18.getProxySelector();
        okHttpClient14.proxySelector = proxySelector21;
        okHttpClient14.followProtocolRedirects = false;
        java.net.ProxySelector proxySelector25 = okHttpClient14.getProxySelector();
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient14.copyWithDefaults();
        java.net.CookieHandler cookieHandler27 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient26.setCookieHandler(cookieHandler27);
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient6);
        org.junit.Assert.assertNull(sSLSocketFactory12);
        org.junit.Assert.assertNotNull(proxy13);
        org.junit.Assert.assertNotNull(okHttpClient14);
        org.junit.Assert.assertNull(cookieHandler16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNotNull(routeSet19);
        org.junit.Assert.assertNotNull(okHttpClient20);
// flaky:         org.junit.Assert.assertNull(proxySelector21);
// flaky:         org.junit.Assert.assertNull(proxySelector25);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNotNull(okHttpClient28);
    }

    @Test
    public void test03433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03433");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient0.connectionPool;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler5 = okHttpClient4.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray6 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet7 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet7, routeArray6);
        okHttpClient4.failedRoutes = routeSet7;
        java.net.Proxy proxy10 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setCookieHandler(cookieHandler12);
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient11.setFollowProtocolRedirects(true);
        boolean boolean16 = proxy10.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient4.setProxy(proxy10);
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler19 = okHttpClient18.getCookieHandler();
        boolean boolean20 = okHttpClient18.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient18.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool24 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int25 = connectionPool24.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient21.setConnectionPool(connectionPool24);
        com.squareup.okhttp.OkHttpClient okHttpClient27 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector28 = null;
        okHttpClient27.proxySelector = proxySelector28;
        java.net.ProxySelector proxySelector30 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient27.setProxySelector(proxySelector30);
        java.net.ProxySelector proxySelector32 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient27.setProxySelector(proxySelector32);
        okHttpClient26.proxySelector = proxySelector32;
        okHttpClient4.proxySelector = proxySelector32;
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient0.setProxySelector(proxySelector32);
        java.net.ResponseCache responseCache37 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient36.setResponseCache(responseCache37);
        com.squareup.okhttp.ConnectionPool connectionPool41 = new com.squareup.okhttp.ConnectionPool(10, (-1L));
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient38.setConnectionPool(connectionPool41);
        connectionPool41.evictAll();
        org.junit.Assert.assertNull(connectionPool3);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertNotNull(routeArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(proxy10);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNull(cookieHandler19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNotNull(okHttpClient31);
// flaky:         org.junit.Assert.assertNull(proxySelector32);
        org.junit.Assert.assertNotNull(okHttpClient33);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNotNull(okHttpClient42);
    }

    @Test
    public void test03434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03434");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setHostnameVerifier(hostnameVerifier4);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory6 = okHttpClient5.sslSocketFactory;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler8 = okHttpClient7.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray9 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet10 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet10, routeArray9);
        okHttpClient7.failedRoutes = routeSet10;
        okHttpClient5.failedRoutes = routeSet10;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier15 = okHttpClient14.hostnameVerifier;
        java.net.ResponseCache responseCache16 = okHttpClient14.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator17 = okHttpClient14.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler19 = okHttpClient18.getCookieHandler();
        boolean boolean20 = okHttpClient18.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient18.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier22 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient21.setHostnameVerifier(hostnameVerifier22);
        java.net.ResponseCache responseCache24 = okHttpClient23.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator25 = okHttpClient23.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient14.setAuthenticator(okAuthenticator25);
        com.squareup.okhttp.OkHttpClient okHttpClient27 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler28 = okHttpClient27.getCookieHandler();
        boolean boolean29 = okHttpClient27.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator30 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient27.setAuthenticator(okAuthenticator30);
        java.net.ResponseCache responseCache32 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient27.setResponseCache(responseCache32);
        com.squareup.okhttp.ConnectionPool connectionPool36 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool36.evictAll();
        okHttpClient27.connectionPool = connectionPool36;
        connectionPool36.evictAll();
        int int40 = connectionPool36.getSpdyConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient41 = okHttpClient14.setConnectionPool(connectionPool36);
        okHttpClient5.connectionPool = connectionPool36;
        int int43 = connectionPool36.getHttpConnectionCount();
        int int44 = connectionPool36.getSpdyConnectionCount();
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(sSLSocketFactory6);
        org.junit.Assert.assertNull(cookieHandler8);
        org.junit.Assert.assertNotNull(routeArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(hostnameVerifier15);
        org.junit.Assert.assertNull(responseCache16);
        org.junit.Assert.assertNull(okAuthenticator17);
        org.junit.Assert.assertNull(cookieHandler19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertNull(responseCache24);
        org.junit.Assert.assertNotNull(okAuthenticator25);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNull(cookieHandler28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNotNull(okHttpClient33);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(okHttpClient41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
    }

    @Test
    public void test03435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03435");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray2 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet3 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet3, routeArray2);
        okHttpClient0.failedRoutes = routeSet3;
        java.net.Proxy proxy6 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient7.setCookieHandler(cookieHandler8);
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient7.setFollowProtocolRedirects(true);
        boolean boolean12 = proxy6.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient0.setProxy(proxy6);
        com.squareup.okhttp.OkAuthenticator okAuthenticator14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient13.setAuthenticator(okAuthenticator14);
        boolean boolean16 = okHttpClient13.getFollowProtocolRedirects();
        boolean boolean17 = okHttpClient13.followProtocolRedirects;
        java.net.ProxySelector proxySelector18 = okHttpClient13.proxySelector;
        java.net.Proxy proxy19 = okHttpClient13.proxy;
        java.net.Proxy.Type type20 = proxy19.type();
        com.squareup.okhttp.ConnectionPool connectionPool23 = new com.squareup.okhttp.ConnectionPool((int) (byte) 10, (long) '4');
        connectionPool23.evictAll();
        boolean boolean25 = proxy19.equals((java.lang.Object) connectionPool23);
        java.net.Proxy.Type type26 = proxy19.type();
        java.net.SocketAddress socketAddress27 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Proxy proxy28 = new java.net.Proxy(type26, socketAddress27);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: type DIRECT is not compatible with address null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertNotNull(routeArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(proxy6);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(proxySelector18);
        org.junit.Assert.assertNotNull(proxy19);
        org.junit.Assert.assertTrue("'" + type20 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type20.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + type26 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type26.equals(java.net.Proxy.Type.DIRECT));
    }

    @Test
    public void test03436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03436");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory1 = okHttpClient0.getSslSocketFactory();
        com.squareup.okhttp.OkAuthenticator okAuthenticator2 = okHttpClient0.authenticator;
        java.net.CookieHandler cookieHandler3 = null;
        okHttpClient0.cookieHandler = cookieHandler3;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory5 = okHttpClient0.sslSocketFactory;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient0.copyWithDefaults();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory7 = okHttpClient6.sslSocketFactory;
        java.net.InetAddress inetAddress8 = null;
        java.net.InetAddress inetAddress10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket12 = sSLSocketFactory7.createSocket(inetAddress8, (int) ' ', inetAddress10, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.net.BindException; message: Permission denied (Bind failed)");
        } catch (java.net.BindException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(sSLSocketFactory1);
        org.junit.Assert.assertNull(okAuthenticator2);
        org.junit.Assert.assertNull(sSLSocketFactory5);
        org.junit.Assert.assertNotNull(okHttpClient6);
        org.junit.Assert.assertNotNull(sSLSocketFactory7);
    }

    @Test
    public void test03437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03437");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        java.net.ResponseCache responseCache5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient0.setResponseCache(responseCache5);
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool9.evictAll();
        okHttpClient0.connectionPool = connectionPool9;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory12 = okHttpClient0.sslSocketFactory;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory13 = null;
        okHttpClient0.sslSocketFactory = sSLSocketFactory13;
        java.net.ProxySelector proxySelector15 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient0.setProxySelector(proxySelector15);
        java.net.CookieHandler cookieHandler17 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient0.setCookieHandler(cookieHandler17);
        com.squareup.okhttp.OkHttpClient okHttpClient19 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler20 = okHttpClient19.getCookieHandler();
        boolean boolean21 = okHttpClient19.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient19.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier23 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient22.setHostnameVerifier(hostnameVerifier23);
        java.net.ResponseCache responseCache25 = okHttpClient24.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator26 = okHttpClient24.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier27 = okHttpClient24.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory28 = okHttpClient24.getSslSocketFactory();
        java.lang.String[] strArray29 = sSLSocketFactory28.getSupportedCipherSuites();
        java.lang.String[] strArray30 = sSLSocketFactory28.getDefaultCipherSuites();
        java.lang.String[] strArray31 = sSLSocketFactory28.getDefaultCipherSuites();
        java.lang.String[] strArray32 = sSLSocketFactory28.getDefaultCipherSuites();
        java.lang.String[] strArray33 = sSLSocketFactory28.getSupportedCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient18.setSSLSocketFactory(sSLSocketFactory28);
        java.lang.String[] strArray35 = sSLSocketFactory28.getDefaultCipherSuites();
        java.lang.String[] strArray36 = sSLSocketFactory28.getSupportedCipherSuites();
        java.net.InetAddress inetAddress37 = null;
        java.net.InetAddress inetAddress39 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket41 = sSLSocketFactory28.createSocket(inetAddress37, (int) (short) 100, inetAddress39, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: port out of range:-1");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient6);
        org.junit.Assert.assertNull(sSLSocketFactory12);
// flaky:         org.junit.Assert.assertNull(proxySelector15);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNull(cookieHandler20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNull(responseCache25);
        org.junit.Assert.assertNotNull(okAuthenticator26);
        org.junit.Assert.assertNull(hostnameVerifier27);
        org.junit.Assert.assertNotNull(sSLSocketFactory28);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strArray36);
    }

    @Test
    public void test03438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03438");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.copyWithDefaults();
        java.net.CookieHandler cookieHandler6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient0.setCookieHandler(cookieHandler6);
        java.net.CookieHandler cookieHandler8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient7.setCookieHandler(cookieHandler8);
        com.squareup.okhttp.OkHttpClient okHttpClient10 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler11 = okHttpClient10.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray12 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet13 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet13, routeArray12);
        okHttpClient10.failedRoutes = routeSet13;
        java.net.Proxy proxy16 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient17.setCookieHandler(cookieHandler18);
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient17.setFollowProtocolRedirects(true);
        boolean boolean22 = proxy16.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient10.setProxy(proxy16);
        java.lang.String str24 = proxy16.toString();
        com.squareup.okhttp.OkHttpClient okHttpClient25 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler26 = okHttpClient25.getCookieHandler();
        boolean boolean27 = okHttpClient25.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator28 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient25.setAuthenticator(okAuthenticator28);
        java.net.ResponseCache responseCache30 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient25.setResponseCache(responseCache30);
        com.squareup.okhttp.ConnectionPool connectionPool34 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool34.evictAll();
        okHttpClient25.connectionPool = connectionPool34;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory37 = okHttpClient25.sslSocketFactory;
        com.squareup.okhttp.ConnectionPool connectionPool38 = okHttpClient25.getConnectionPool();
        boolean boolean39 = proxy16.equals((java.lang.Object) okHttpClient25);
        java.net.ResponseCache responseCache40 = okHttpClient25.getResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient41 = okHttpClient25.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient42 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler43 = okHttpClient42.getCookieHandler();
        boolean boolean44 = okHttpClient42.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator45 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient46 = okHttpClient42.setAuthenticator(okAuthenticator45);
        java.net.Proxy proxy47 = okHttpClient42.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient48 = okHttpClient42.copyWithDefaults();
        java.net.CookieHandler cookieHandler49 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient42.setCookieHandler(cookieHandler49);
        com.squareup.okhttp.OkHttpClient okHttpClient51 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler52 = okHttpClient51.getCookieHandler();
        boolean boolean53 = okHttpClient51.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator54 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient55 = okHttpClient51.setAuthenticator(okAuthenticator54);
        com.squareup.okhttp.OkHttpClient okHttpClient56 = okHttpClient51.copyWithDefaults();
        java.net.CookieHandler cookieHandler57 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient58 = okHttpClient51.setCookieHandler(cookieHandler57);
        com.squareup.okhttp.OkAuthenticator okAuthenticator59 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient60 = okHttpClient58.setAuthenticator(okAuthenticator59);
        com.squareup.okhttp.OkHttpClient okHttpClient61 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector62 = null;
        okHttpClient61.proxySelector = proxySelector62;
        java.net.ProxySelector proxySelector64 = okHttpClient61.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier65 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient66 = okHttpClient61.setHostnameVerifier(hostnameVerifier65);
        java.net.ProxySelector proxySelector67 = okHttpClient61.proxySelector;
        java.net.ResponseCache responseCache68 = okHttpClient61.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet69 = okHttpClient61.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient70 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler71 = okHttpClient70.getCookieHandler();
        boolean boolean72 = okHttpClient70.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient73 = okHttpClient70.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool76 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int77 = connectionPool76.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient78 = okHttpClient73.setConnectionPool(connectionPool76);
        com.squareup.okhttp.OkHttpClient okHttpClient79 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector80 = null;
        okHttpClient79.proxySelector = proxySelector80;
        java.net.ProxySelector proxySelector82 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient83 = okHttpClient79.setProxySelector(proxySelector82);
        java.net.ProxySelector proxySelector84 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient85 = okHttpClient79.setProxySelector(proxySelector84);
        okHttpClient78.proxySelector = proxySelector84;
        javax.net.ssl.HostnameVerifier hostnameVerifier87 = okHttpClient78.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient88 = okHttpClient61.setHostnameVerifier(hostnameVerifier87);
        javax.net.ssl.HostnameVerifier hostnameVerifier89 = okHttpClient88.getHostnameVerifier();
        okHttpClient60.hostnameVerifier = hostnameVerifier89;
        javax.net.ssl.HostnameVerifier hostnameVerifier91 = okHttpClient60.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient92 = okHttpClient42.setHostnameVerifier(hostnameVerifier91);
        okHttpClient25.hostnameVerifier = hostnameVerifier91;
        okHttpClient9.hostnameVerifier = hostnameVerifier91;
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNotNull(okHttpClient7);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNull(cookieHandler11);
        org.junit.Assert.assertNotNull(routeArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(proxy16);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "DIRECT" + "'", str24, "DIRECT");
        org.junit.Assert.assertNull(cookieHandler26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(okHttpClient29);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNull(sSLSocketFactory37);
        org.junit.Assert.assertNotNull(connectionPool38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(responseCache40);
        org.junit.Assert.assertNotNull(okHttpClient41);
        org.junit.Assert.assertNull(cookieHandler43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(okHttpClient46);
        org.junit.Assert.assertNull(proxy47);
        org.junit.Assert.assertNotNull(okHttpClient48);
        org.junit.Assert.assertNotNull(okHttpClient50);
        org.junit.Assert.assertNull(cookieHandler52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(okHttpClient55);
        org.junit.Assert.assertNotNull(okHttpClient56);
        org.junit.Assert.assertNotNull(okHttpClient58);
        org.junit.Assert.assertNotNull(okHttpClient60);
        org.junit.Assert.assertNull(proxySelector64);
        org.junit.Assert.assertNotNull(okHttpClient66);
        org.junit.Assert.assertNull(proxySelector67);
        org.junit.Assert.assertNull(responseCache68);
        org.junit.Assert.assertNotNull(routeSet69);
        org.junit.Assert.assertNull(cookieHandler71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(okHttpClient73);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertNotNull(okHttpClient78);
        org.junit.Assert.assertNotNull(okHttpClient83);
// flaky:         org.junit.Assert.assertNull(proxySelector84);
        org.junit.Assert.assertNotNull(okHttpClient85);
        org.junit.Assert.assertNotNull(hostnameVerifier87);
        org.junit.Assert.assertNotNull(okHttpClient88);
        org.junit.Assert.assertNotNull(hostnameVerifier89);
        org.junit.Assert.assertNotNull(hostnameVerifier91);
        org.junit.Assert.assertNotNull(okHttpClient92);
    }

    @Test
    public void test03439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03439");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler5 = okHttpClient4.getCookieHandler();
        java.net.ResponseCache responseCache6 = null;
        okHttpClient4.responseCache = responseCache6;
        boolean boolean8 = okHttpClient4.followProtocolRedirects;
        java.net.CookieHandler cookieHandler9 = okHttpClient4.cookieHandler;
        com.squareup.okhttp.ConnectionPool connectionPool10 = okHttpClient4.getConnectionPool();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector12 = null;
        okHttpClient11.proxySelector = proxySelector12;
        java.net.ProxySelector proxySelector14 = okHttpClient11.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient11.setHostnameVerifier(hostnameVerifier15);
        java.net.ProxySelector proxySelector17 = okHttpClient11.proxySelector;
        java.net.ResponseCache responseCache18 = okHttpClient11.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet19 = okHttpClient11.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler21 = okHttpClient20.getCookieHandler();
        boolean boolean22 = okHttpClient20.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient20.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool26 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int27 = connectionPool26.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient23.setConnectionPool(connectionPool26);
        com.squareup.okhttp.OkHttpClient okHttpClient29 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector30 = null;
        okHttpClient29.proxySelector = proxySelector30;
        java.net.ProxySelector proxySelector32 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient29.setProxySelector(proxySelector32);
        java.net.ProxySelector proxySelector34 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient29.setProxySelector(proxySelector34);
        okHttpClient28.proxySelector = proxySelector34;
        javax.net.ssl.HostnameVerifier hostnameVerifier37 = okHttpClient28.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient11.setHostnameVerifier(hostnameVerifier37);
        okHttpClient4.hostnameVerifier = hostnameVerifier37;
        com.squareup.okhttp.OkHttpClient okHttpClient40 = okHttpClient4.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient41 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler42 = okHttpClient41.getCookieHandler();
        boolean boolean43 = okHttpClient41.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient44 = okHttpClient41.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet45 = okHttpClient44.failedRoutes;
        boolean boolean46 = okHttpClient44.getFollowProtocolRedirects();
        java.net.Proxy proxy47 = java.net.Proxy.NO_PROXY;
        okHttpClient44.proxy = proxy47;
        com.squareup.okhttp.OkHttpClient okHttpClient49 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler50 = okHttpClient49.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray51 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet52 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet52, routeArray51);
        okHttpClient49.failedRoutes = routeSet52;
        java.net.Proxy proxy55 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient56 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler57 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient58 = okHttpClient56.setCookieHandler(cookieHandler57);
        com.squareup.okhttp.OkHttpClient okHttpClient60 = okHttpClient56.setFollowProtocolRedirects(true);
        boolean boolean61 = proxy55.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient62 = okHttpClient49.setProxy(proxy55);
        java.net.SocketAddress socketAddress63 = proxy55.address();
        com.squareup.okhttp.OkHttpClient okHttpClient64 = okHttpClient44.setProxy(proxy55);
        com.squareup.okhttp.OkAuthenticator okAuthenticator65 = okHttpClient64.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient66 = okHttpClient40.setAuthenticator(okAuthenticator65);
        com.squareup.okhttp.OkHttpClient okHttpClient67 = okHttpClient40.copyWithDefaults();
        com.squareup.okhttp.OkAuthenticator okAuthenticator68 = okHttpClient40.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient69 = okHttpClient0.setAuthenticator(okAuthenticator68);
        java.net.ResponseCache responseCache70 = okHttpClient69.responseCache;
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(cookieHandler9);
        org.junit.Assert.assertNull(connectionPool10);
        org.junit.Assert.assertNull(proxySelector14);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNull(proxySelector17);
        org.junit.Assert.assertNull(responseCache18);
        org.junit.Assert.assertNotNull(routeSet19);
        org.junit.Assert.assertNull(cookieHandler21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNotNull(okHttpClient33);
// flaky:         org.junit.Assert.assertNull(proxySelector34);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNotNull(hostnameVerifier37);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNotNull(okHttpClient40);
        org.junit.Assert.assertNull(cookieHandler42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(okHttpClient44);
        org.junit.Assert.assertNotNull(routeSet45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(proxy47);
        org.junit.Assert.assertNull(cookieHandler50);
        org.junit.Assert.assertNotNull(routeArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(proxy55);
        org.junit.Assert.assertNotNull(okHttpClient58);
        org.junit.Assert.assertNotNull(okHttpClient60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(okHttpClient62);
        org.junit.Assert.assertNull(socketAddress63);
        org.junit.Assert.assertNotNull(okHttpClient64);
        org.junit.Assert.assertNotNull(okAuthenticator65);
        org.junit.Assert.assertNotNull(okHttpClient66);
        org.junit.Assert.assertNotNull(okHttpClient67);
        org.junit.Assert.assertNotNull(okAuthenticator68);
        org.junit.Assert.assertNotNull(okHttpClient69);
        org.junit.Assert.assertNull(responseCache70);
    }

    @Test
    public void test03440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03440");
        com.squareup.okhttp.ConnectionPool connectionPool2 = new com.squareup.okhttp.ConnectionPool((-1), 100L);
        com.squareup.okhttp.Connection connection3 = null;
        // The following exception was thrown during execution in test generation
        try {
            connectionPool2.maybeShare(connection3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test03441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03441");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool6 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int7 = connectionPool6.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient3.setConnectionPool(connectionPool6);
        com.squareup.okhttp.OkHttpClient okHttpClient9 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler10 = okHttpClient9.getCookieHandler();
        boolean boolean11 = okHttpClient9.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient9.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool15 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int16 = connectionPool15.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient12.setConnectionPool(connectionPool15);
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector19 = null;
        okHttpClient18.proxySelector = proxySelector19;
        java.net.ProxySelector proxySelector21 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient18.setProxySelector(proxySelector21);
        java.net.ProxySelector proxySelector23 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient18.setProxySelector(proxySelector23);
        okHttpClient17.proxySelector = proxySelector23;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient3.setProxySelector(proxySelector23);
        java.net.CookieHandler cookieHandler27 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient26.setCookieHandler(cookieHandler27);
        com.squareup.okhttp.OkHttpClient okHttpClient29 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler30 = okHttpClient29.getCookieHandler();
        boolean boolean31 = okHttpClient29.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient29.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool35 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int36 = connectionPool35.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient32.setConnectionPool(connectionPool35);
        javax.net.ssl.HostnameVerifier hostnameVerifier38 = null;
        okHttpClient32.hostnameVerifier = hostnameVerifier38;
        java.net.Proxy proxy40 = okHttpClient32.getProxy();
        okHttpClient32.followProtocolRedirects = true;
        com.squareup.okhttp.OkHttpClient okHttpClient43 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler44 = okHttpClient43.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray45 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet46 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet46, routeArray45);
        okHttpClient43.failedRoutes = routeSet46;
        java.net.Proxy proxy49 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient50 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler51 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient52 = okHttpClient50.setCookieHandler(cookieHandler51);
        com.squareup.okhttp.OkHttpClient okHttpClient54 = okHttpClient50.setFollowProtocolRedirects(true);
        boolean boolean55 = proxy49.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient56 = okHttpClient43.setProxy(proxy49);
        java.net.Proxy proxy57 = okHttpClient56.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient58 = okHttpClient32.setProxy(proxy57);
        com.squareup.okhttp.OkHttpClient okHttpClient59 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector60 = null;
        okHttpClient59.proxySelector = proxySelector60;
        java.net.ProxySelector proxySelector62 = okHttpClient59.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier63 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient64 = okHttpClient59.setHostnameVerifier(hostnameVerifier63);
        java.net.ProxySelector proxySelector65 = okHttpClient59.proxySelector;
        java.net.CookieHandler cookieHandler66 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient67 = okHttpClient59.setCookieHandler(cookieHandler66);
        com.squareup.okhttp.OkAuthenticator okAuthenticator68 = okHttpClient59.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool71 = new com.squareup.okhttp.ConnectionPool(1, 0L);
        okHttpClient59.connectionPool = connectionPool71;
        com.squareup.okhttp.OkHttpClient okHttpClient73 = okHttpClient32.setConnectionPool(connectionPool71);
        java.net.ProxySelector proxySelector74 = okHttpClient32.proxySelector;
        okHttpClient28.proxySelector = proxySelector74;
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertNull(cookieHandler10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNotNull(okHttpClient22);
// flaky:         org.junit.Assert.assertNull(proxySelector23);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNull(cookieHandler30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(okHttpClient37);
        org.junit.Assert.assertNull(proxy40);
        org.junit.Assert.assertNull(cookieHandler44);
        org.junit.Assert.assertNotNull(routeArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(proxy49);
        org.junit.Assert.assertNotNull(okHttpClient52);
        org.junit.Assert.assertNotNull(okHttpClient54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(okHttpClient56);
        org.junit.Assert.assertNotNull(proxy57);
        org.junit.Assert.assertNotNull(okHttpClient58);
        org.junit.Assert.assertNull(proxySelector62);
        org.junit.Assert.assertNotNull(okHttpClient64);
        org.junit.Assert.assertNull(proxySelector65);
        org.junit.Assert.assertNotNull(okHttpClient67);
        org.junit.Assert.assertNull(okAuthenticator68);
        org.junit.Assert.assertNotNull(okHttpClient73);
// flaky:         org.junit.Assert.assertNull(proxySelector74);
    }

    @Test
    public void test03442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03442");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.copyWithDefaults();
        java.net.ProxySelector proxySelector4 = okHttpClient0.getProxySelector();
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.copyWithDefaults();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory6 = okHttpClient5.sslSocketFactory;
        java.net.InetAddress inetAddress7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket9 = sSLSocketFactory6.createSocket(inetAddress7, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.net.ConnectException; message: Connection refused (Connection refused)");
        } catch (java.net.ConnectException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertNull(proxySelector4);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNotNull(sSLSocketFactory6);
    }

    @Test
    public void test03443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03443");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient4 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector5 = null;
        okHttpClient4.proxySelector = proxySelector5;
        java.net.ProxySelector proxySelector7 = okHttpClient4.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient4.setHostnameVerifier(hostnameVerifier8);
        java.net.ProxySelector proxySelector10 = okHttpClient4.proxySelector;
        java.net.ResponseCache responseCache11 = okHttpClient4.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet12 = okHttpClient4.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler14 = okHttpClient13.getCookieHandler();
        boolean boolean15 = okHttpClient13.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient13.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool19 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int20 = connectionPool19.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient16.setConnectionPool(connectionPool19);
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector23 = null;
        okHttpClient22.proxySelector = proxySelector23;
        java.net.ProxySelector proxySelector25 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient22.setProxySelector(proxySelector25);
        java.net.ProxySelector proxySelector27 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient22.setProxySelector(proxySelector27);
        okHttpClient21.proxySelector = proxySelector27;
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = okHttpClient21.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient4.setHostnameVerifier(hostnameVerifier30);
        javax.net.ssl.HostnameVerifier hostnameVerifier32 = okHttpClient31.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient0.setHostnameVerifier(hostnameVerifier32);
        java.net.Proxy proxy34 = okHttpClient33.proxy;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory35 = okHttpClient33.getSslSocketFactory();
        com.squareup.okhttp.ConnectionPool connectionPool38 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        okHttpClient33.connectionPool = connectionPool38;
        com.squareup.okhttp.Connection connection40 = null;
        // The following exception was thrown during execution in test generation
        try {
            connectionPool38.maybeShare(connection40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertNull(proxySelector7);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNull(proxySelector10);
        org.junit.Assert.assertNull(responseCache11);
        org.junit.Assert.assertNotNull(routeSet12);
        org.junit.Assert.assertNull(cookieHandler14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNotNull(okHttpClient26);
// flaky:         org.junit.Assert.assertNull(proxySelector27);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNotNull(hostnameVerifier30);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNotNull(hostnameVerifier32);
        org.junit.Assert.assertNotNull(okHttpClient33);
        org.junit.Assert.assertNull(proxy34);
        org.junit.Assert.assertNull(sSLSocketFactory35);
    }

    @Test
    public void test03444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03444");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        java.net.ResponseCache responseCache5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient0.setResponseCache(responseCache5);
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool9.evictAll();
        okHttpClient0.connectionPool = connectionPool9;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory12 = okHttpClient0.sslSocketFactory;
        java.net.ResponseCache responseCache13 = null;
        okHttpClient0.responseCache = responseCache13;
        com.squareup.okhttp.OkAuthenticator okAuthenticator15 = okHttpClient0.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool17 = okHttpClient16.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient16.setAuthenticator(okAuthenticator18);
        com.squareup.okhttp.OkHttpClient okHttpClient20 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler21 = okHttpClient20.getCookieHandler();
        boolean boolean22 = okHttpClient20.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient20.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet24 = okHttpClient23.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient23.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool28 = new com.squareup.okhttp.ConnectionPool((int) '4', (long) 100);
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient23.setConnectionPool(connectionPool28);
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = okHttpClient29.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient19.setHostnameVerifier(hostnameVerifier30);
        com.squareup.okhttp.OkHttpClient okHttpClient32 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler33 = okHttpClient32.getCookieHandler();
        boolean boolean34 = okHttpClient32.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient32.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet36 = okHttpClient35.failedRoutes;
        boolean boolean37 = okHttpClient35.getFollowProtocolRedirects();
        java.net.Proxy proxy38 = java.net.Proxy.NO_PROXY;
        okHttpClient35.proxy = proxy38;
        com.squareup.okhttp.OkHttpClient okHttpClient40 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler41 = okHttpClient40.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray42 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet43 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet43, routeArray42);
        okHttpClient40.failedRoutes = routeSet43;
        java.net.Proxy proxy46 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient47 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler48 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient49 = okHttpClient47.setCookieHandler(cookieHandler48);
        com.squareup.okhttp.OkHttpClient okHttpClient51 = okHttpClient47.setFollowProtocolRedirects(true);
        boolean boolean52 = proxy46.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient53 = okHttpClient40.setProxy(proxy46);
        java.net.SocketAddress socketAddress54 = proxy46.address();
        com.squareup.okhttp.OkHttpClient okHttpClient55 = okHttpClient35.setProxy(proxy46);
        com.squareup.okhttp.OkAuthenticator okAuthenticator56 = okHttpClient55.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient57 = okHttpClient19.setAuthenticator(okAuthenticator56);
        java.net.CookieHandler cookieHandler58 = okHttpClient57.cookieHandler;
        java.net.Proxy proxy59 = okHttpClient57.getProxy();
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient6);
        org.junit.Assert.assertNull(sSLSocketFactory12);
        org.junit.Assert.assertNull(okAuthenticator15);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNotNull(connectionPool17);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNull(cookieHandler21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertNotNull(routeSet24);
        org.junit.Assert.assertNotNull(okHttpClient25);
        org.junit.Assert.assertNotNull(okHttpClient29);
        org.junit.Assert.assertNotNull(hostnameVerifier30);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNull(cookieHandler33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNotNull(routeSet36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(proxy38);
        org.junit.Assert.assertNull(cookieHandler41);
        org.junit.Assert.assertNotNull(routeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(proxy46);
        org.junit.Assert.assertNotNull(okHttpClient49);
        org.junit.Assert.assertNotNull(okHttpClient51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(okHttpClient53);
        org.junit.Assert.assertNull(socketAddress54);
        org.junit.Assert.assertNotNull(okHttpClient55);
        org.junit.Assert.assertNotNull(okAuthenticator56);
        org.junit.Assert.assertNotNull(okHttpClient57);
        org.junit.Assert.assertNull(cookieHandler58);
        org.junit.Assert.assertNull(proxy59);
    }

    @Test
    public void test03445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03445");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient0.connectionPool;
        com.squareup.okhttp.ConnectionPool connectionPool4 = okHttpClient0.getConnectionPool();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache5 = okHttpClient0.okResponseCache();
        java.net.ResponseCache responseCache6 = null;
        okHttpClient0.responseCache = responseCache6;
        com.squareup.okhttp.OkAuthenticator okAuthenticator8 = okHttpClient0.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler10 = okHttpClient9.getCookieHandler();
        boolean boolean11 = okHttpClient9.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient9.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool15 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int16 = connectionPool15.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient12.setConnectionPool(connectionPool15);
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector19 = null;
        okHttpClient18.proxySelector = proxySelector19;
        java.net.ProxySelector proxySelector21 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient18.setProxySelector(proxySelector21);
        java.net.ProxySelector proxySelector23 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient18.setProxySelector(proxySelector23);
        okHttpClient17.proxySelector = proxySelector23;
        okHttpClient0.proxySelector = proxySelector23;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory27 = okHttpClient0.sslSocketFactory;
        javax.net.ssl.HostnameVerifier hostnameVerifier28 = okHttpClient0.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient29 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector30 = null;
        okHttpClient29.proxySelector = proxySelector30;
        java.net.ProxySelector proxySelector32 = okHttpClient29.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier33 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient29.setHostnameVerifier(hostnameVerifier33);
        java.net.ProxySelector proxySelector35 = okHttpClient29.proxySelector;
        java.net.ResponseCache responseCache36 = okHttpClient29.getResponseCache();
        java.net.CookieHandler cookieHandler37 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient29.setCookieHandler(cookieHandler37);
        com.squareup.okhttp.OkHttpClient okHttpClient39 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler40 = okHttpClient39.getCookieHandler();
        boolean boolean41 = okHttpClient39.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient39.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet43 = okHttpClient42.failedRoutes;
        boolean boolean44 = okHttpClient42.getFollowProtocolRedirects();
        java.net.Proxy proxy45 = java.net.Proxy.NO_PROXY;
        okHttpClient42.proxy = proxy45;
        com.squareup.okhttp.OkHttpClient okHttpClient47 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler48 = okHttpClient47.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray49 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet50 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet50, routeArray49);
        okHttpClient47.failedRoutes = routeSet50;
        java.net.Proxy proxy53 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient54 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler55 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient56 = okHttpClient54.setCookieHandler(cookieHandler55);
        com.squareup.okhttp.OkHttpClient okHttpClient58 = okHttpClient54.setFollowProtocolRedirects(true);
        boolean boolean59 = proxy53.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient60 = okHttpClient47.setProxy(proxy53);
        java.net.SocketAddress socketAddress61 = proxy53.address();
        com.squareup.okhttp.OkHttpClient okHttpClient62 = okHttpClient42.setProxy(proxy53);
        java.net.ResponseCache responseCache63 = okHttpClient62.getResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient64 = okHttpClient62.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier65 = okHttpClient62.getHostnameVerifier();
        okHttpClient29.hostnameVerifier = hostnameVerifier65;
        okHttpClient0.hostnameVerifier = hostnameVerifier65;
        org.junit.Assert.assertNull(connectionPool3);
        org.junit.Assert.assertNull(connectionPool4);
        org.junit.Assert.assertNull(okResponseCache5);
        org.junit.Assert.assertNull(okAuthenticator8);
        org.junit.Assert.assertNull(cookieHandler10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNotNull(okHttpClient22);
// flaky:         org.junit.Assert.assertNull(proxySelector23);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNull(sSLSocketFactory27);
        org.junit.Assert.assertNull(hostnameVerifier28);
        org.junit.Assert.assertNull(proxySelector32);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertNull(proxySelector35);
        org.junit.Assert.assertNull(responseCache36);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNull(cookieHandler40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(okHttpClient42);
        org.junit.Assert.assertNotNull(routeSet43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(proxy45);
        org.junit.Assert.assertNull(cookieHandler48);
        org.junit.Assert.assertNotNull(routeArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(proxy53);
        org.junit.Assert.assertNotNull(okHttpClient56);
        org.junit.Assert.assertNotNull(okHttpClient58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(okHttpClient60);
        org.junit.Assert.assertNull(socketAddress61);
        org.junit.Assert.assertNotNull(okHttpClient62);
        org.junit.Assert.assertNull(responseCache63);
        org.junit.Assert.assertNotNull(okHttpClient64);
        org.junit.Assert.assertNotNull(hostnameVerifier65);
    }

    @Test
    public void test03446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03446");
        com.squareup.okhttp.ConnectionPool connectionPool2 = new com.squareup.okhttp.ConnectionPool((int) (byte) 10, 100L);
        int int3 = connectionPool2.getConnectionCount();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test03447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03447");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = okHttpClient0.hostnameVerifier;
        java.net.ResponseCache responseCache2 = okHttpClient0.getResponseCache();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory3 = okHttpClient0.sslSocketFactory;
        java.net.Proxy proxy4 = okHttpClient0.getProxy();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory5);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory7);
        okHttpClient0.followProtocolRedirects = true;
        org.junit.Assert.assertNull(hostnameVerifier1);
        org.junit.Assert.assertNull(responseCache2);
        org.junit.Assert.assertNull(sSLSocketFactory3);
        org.junit.Assert.assertNull(proxy4);
        org.junit.Assert.assertNotNull(okHttpClient6);
        org.junit.Assert.assertNotNull(okHttpClient8);
    }

    @Test
    public void test03448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03448");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setCookieHandler(cookieHandler1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        com.squareup.okhttp.OkHttpClient okHttpClient4 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector5 = null;
        okHttpClient4.proxySelector = proxySelector5;
        java.net.ProxySelector proxySelector7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient4.setProxySelector(proxySelector7);
        java.net.ProxySelector proxySelector9 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient4.setProxySelector(proxySelector9);
        java.net.ResponseCache responseCache11 = okHttpClient4.responseCache;
        java.net.ProxySelector proxySelector12 = okHttpClient4.getProxySelector();
        okHttpClient2.proxySelector = proxySelector12;
        com.squareup.okhttp.ConnectionPool connectionPool14 = okHttpClient2.connectionPool;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler16 = okHttpClient15.getCookieHandler();
        boolean boolean17 = okHttpClient15.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient15.setAuthenticator(okAuthenticator18);
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient15.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier21 = okHttpClient15.hostnameVerifier;
        java.net.ProxySelector proxySelector22 = java.net.ProxySelector.getDefault();
        okHttpClient15.proxySelector = proxySelector22;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient2.setProxySelector(proxySelector22);
        com.squareup.okhttp.OkHttpClient okHttpClient25 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler26 = okHttpClient25.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray27 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet28 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet28, routeArray27);
        okHttpClient25.failedRoutes = routeSet28;
        java.net.Proxy proxy31 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler33 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient32.setCookieHandler(cookieHandler33);
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient32.setFollowProtocolRedirects(true);
        boolean boolean37 = proxy31.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient25.setProxy(proxy31);
        com.squareup.okhttp.OkAuthenticator okAuthenticator39 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient40 = okHttpClient38.setAuthenticator(okAuthenticator39);
        boolean boolean41 = okHttpClient40.followProtocolRedirects;
        java.net.CookieHandler cookieHandler42 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient43 = okHttpClient40.setCookieHandler(cookieHandler42);
        com.squareup.okhttp.OkHttpClient okHttpClient44 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler45 = okHttpClient44.getCookieHandler();
        boolean boolean46 = okHttpClient44.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient47 = okHttpClient44.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool48 = okHttpClient47.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator49 = okHttpClient47.getAuthenticator();
        okHttpClient43.authenticator = okAuthenticator49;
        com.squareup.okhttp.OkHttpClient okHttpClient51 = okHttpClient24.setAuthenticator(okAuthenticator49);
        org.junit.Assert.assertNotNull(okHttpClient2);
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNotNull(okHttpClient8);
// flaky:         org.junit.Assert.assertNull(proxySelector9);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertNull(responseCache11);
// flaky:         org.junit.Assert.assertNull(proxySelector12);
        org.junit.Assert.assertNull(connectionPool14);
        org.junit.Assert.assertNull(cookieHandler16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNull(hostnameVerifier21);
// flaky:         org.junit.Assert.assertNull(proxySelector22);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNull(cookieHandler26);
        org.junit.Assert.assertNotNull(routeArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(proxy31);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNotNull(okHttpClient40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(okHttpClient43);
        org.junit.Assert.assertNull(cookieHandler45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(okHttpClient47);
        org.junit.Assert.assertNotNull(connectionPool48);
        org.junit.Assert.assertNotNull(okAuthenticator49);
        org.junit.Assert.assertNotNull(okHttpClient51);
    }

    @Test
    public void test03449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03449");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray2 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet3 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet3, routeArray2);
        okHttpClient0.failedRoutes = routeSet3;
        java.net.CookieHandler cookieHandler6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient0.setCookieHandler(cookieHandler6);
        java.net.CookieHandler cookieHandler8 = okHttpClient7.cookieHandler;
        com.squareup.okhttp.OkAuthenticator okAuthenticator9 = okHttpClient7.authenticator;
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertNotNull(routeArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(okHttpClient7);
        org.junit.Assert.assertNull(cookieHandler8);
        org.junit.Assert.assertNull(okAuthenticator9);
    }

    @Test
    public void test03450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03450");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setHostnameVerifier(hostnameVerifier4);
        boolean boolean6 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool((int) 'a', (long) (byte) -1);
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler12 = okHttpClient11.getCookieHandler();
        boolean boolean13 = okHttpClient11.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient11.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient14.setHostnameVerifier(hostnameVerifier15);
        java.net.ResponseCache responseCache17 = okHttpClient16.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator18 = okHttpClient16.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier19 = okHttpClient16.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory20 = okHttpClient16.getSslSocketFactory();
        okHttpClient0.sslSocketFactory = sSLSocketFactory20;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler23 = okHttpClient22.getCookieHandler();
        boolean boolean24 = okHttpClient22.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator25 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient22.setAuthenticator(okAuthenticator25);
        java.net.ResponseCache responseCache27 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient22.setResponseCache(responseCache27);
        com.squareup.okhttp.ConnectionPool connectionPool31 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool31.evictAll();
        okHttpClient22.connectionPool = connectionPool31;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory34 = okHttpClient22.sslSocketFactory;
        java.net.Proxy proxy35 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient22.setProxy(proxy35);
        com.squareup.okhttp.OkHttpClient okHttpClient37 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler38 = okHttpClient37.getCookieHandler();
        boolean boolean39 = okHttpClient37.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient40 = okHttpClient37.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet41 = okHttpClient40.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient40.copyWithDefaults();
        java.net.ProxySelector proxySelector43 = okHttpClient40.getProxySelector();
        okHttpClient36.proxySelector = proxySelector43;
        okHttpClient36.followProtocolRedirects = false;
        com.squareup.okhttp.OkHttpClient okHttpClient47 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector48 = null;
        okHttpClient47.proxySelector = proxySelector48;
        java.net.ProxySelector proxySelector50 = okHttpClient47.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier51 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient52 = okHttpClient47.setHostnameVerifier(hostnameVerifier51);
        boolean boolean53 = okHttpClient47.getFollowProtocolRedirects();
        com.squareup.okhttp.ConnectionPool connectionPool56 = new com.squareup.okhttp.ConnectionPool((int) 'a', (long) (byte) -1);
        com.squareup.okhttp.OkHttpClient okHttpClient57 = okHttpClient47.setConnectionPool(connectionPool56);
        com.squareup.okhttp.OkHttpClient okHttpClient58 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler59 = okHttpClient58.getCookieHandler();
        boolean boolean60 = okHttpClient58.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient61 = okHttpClient58.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier62 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient63 = okHttpClient61.setHostnameVerifier(hostnameVerifier62);
        java.net.ResponseCache responseCache64 = okHttpClient63.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator65 = okHttpClient63.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier66 = okHttpClient63.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory67 = okHttpClient63.getSslSocketFactory();
        okHttpClient47.sslSocketFactory = sSLSocketFactory67;
        java.net.Socket socket69 = sSLSocketFactory67.createSocket();
        okHttpClient36.sslSocketFactory = sSLSocketFactory67;
        java.net.Socket socket71 = sSLSocketFactory67.createSocket();
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket75 = sSLSocketFactory20.createSocket(socket71, "hi!", (int) (byte) 0, true);
            org.junit.Assert.fail("Expected exception of type java.net.SocketException; message: Underlying socket is not connected");
        } catch (java.net.SocketException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertNull(cookieHandler12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(okHttpClient14);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNull(responseCache17);
        org.junit.Assert.assertNotNull(okAuthenticator18);
        org.junit.Assert.assertNull(hostnameVerifier19);
        org.junit.Assert.assertNotNull(sSLSocketFactory20);
        org.junit.Assert.assertNull(cookieHandler23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNull(sSLSocketFactory34);
        org.junit.Assert.assertNotNull(proxy35);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNull(cookieHandler38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(okHttpClient40);
        org.junit.Assert.assertNotNull(routeSet41);
        org.junit.Assert.assertNotNull(okHttpClient42);
// flaky:         org.junit.Assert.assertNull(proxySelector43);
        org.junit.Assert.assertNull(proxySelector50);
        org.junit.Assert.assertNotNull(okHttpClient52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(okHttpClient57);
        org.junit.Assert.assertNull(cookieHandler59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(okHttpClient61);
        org.junit.Assert.assertNotNull(okHttpClient63);
        org.junit.Assert.assertNull(responseCache64);
        org.junit.Assert.assertNotNull(okAuthenticator65);
        org.junit.Assert.assertNull(hostnameVerifier66);
        org.junit.Assert.assertNotNull(sSLSocketFactory67);
        org.junit.Assert.assertNotNull(socket69);
        org.junit.Assert.assertEquals(socket69.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(socket71);
        org.junit.Assert.assertEquals(socket71.toString(), "Socket[unconnected]");
    }

    @Test
    public void test03451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03451");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray2 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet3 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet3, routeArray2);
        okHttpClient0.failedRoutes = routeSet3;
        java.net.Proxy proxy6 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient7.setCookieHandler(cookieHandler8);
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient7.setFollowProtocolRedirects(true);
        boolean boolean12 = proxy6.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient0.setProxy(proxy6);
        java.lang.String str14 = proxy6.toString();
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler16 = okHttpClient15.getCookieHandler();
        boolean boolean17 = okHttpClient15.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient15.setAuthenticator(okAuthenticator18);
        java.net.ResponseCache responseCache20 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient15.setResponseCache(responseCache20);
        com.squareup.okhttp.ConnectionPool connectionPool24 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool24.evictAll();
        okHttpClient15.connectionPool = connectionPool24;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory27 = okHttpClient15.sslSocketFactory;
        com.squareup.okhttp.ConnectionPool connectionPool28 = okHttpClient15.getConnectionPool();
        boolean boolean29 = proxy6.equals((java.lang.Object) okHttpClient15);
        com.squareup.okhttp.OkHttpClient okHttpClient30 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler31 = okHttpClient30.getCookieHandler();
        boolean boolean32 = okHttpClient30.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator33 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient30.setAuthenticator(okAuthenticator33);
        java.net.Proxy proxy35 = okHttpClient30.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient30.copyWithDefaults();
        java.net.CookieHandler cookieHandler37 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient30.setCookieHandler(cookieHandler37);
        boolean boolean39 = proxy6.equals((java.lang.Object) okHttpClient38);
        boolean boolean40 = okHttpClient38.followProtocolRedirects;
        javax.net.ssl.HostnameVerifier hostnameVerifier41 = okHttpClient38.getHostnameVerifier();
        java.net.ResponseCache responseCache42 = null;
        okHttpClient38.responseCache = responseCache42;
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertNotNull(routeArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(proxy6);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "DIRECT" + "'", str14, "DIRECT");
        org.junit.Assert.assertNull(cookieHandler16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNull(sSLSocketFactory27);
        org.junit.Assert.assertNotNull(connectionPool28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(cookieHandler31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertNull(proxy35);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(hostnameVerifier41);
    }

    @Test
    public void test03452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03452");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray2 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet3 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet3, routeArray2);
        okHttpClient0.failedRoutes = routeSet3;
        java.net.Proxy proxy6 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient7.setCookieHandler(cookieHandler8);
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient7.setFollowProtocolRedirects(true);
        boolean boolean12 = proxy6.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient0.setProxy(proxy6);
        com.squareup.okhttp.OkHttpClient okHttpClient14 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler15 = okHttpClient14.getCookieHandler();
        boolean boolean16 = okHttpClient14.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler18 = okHttpClient17.getCookieHandler();
        boolean boolean19 = okHttpClient17.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient17.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet21 = okHttpClient20.failedRoutes;
        boolean boolean22 = okHttpClient20.getFollowProtocolRedirects();
        java.net.Proxy proxy23 = java.net.Proxy.NO_PROXY;
        okHttpClient20.proxy = proxy23;
        okHttpClient14.proxy = proxy23;
        okHttpClient0.proxy = proxy23;
        com.squareup.okhttp.OkAuthenticator okAuthenticator27 = okHttpClient0.getAuthenticator();
        java.net.CookieHandler cookieHandler28 = null;
        okHttpClient0.cookieHandler = cookieHandler28;
        java.net.CookieHandler cookieHandler30 = okHttpClient0.getCookieHandler();
        boolean boolean31 = okHttpClient0.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler33 = okHttpClient32.getCookieHandler();
        boolean boolean34 = okHttpClient32.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient32.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier36 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient35.setHostnameVerifier(hostnameVerifier36);
        java.net.ResponseCache responseCache38 = okHttpClient37.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator39 = okHttpClient37.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier40 = okHttpClient37.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory41 = okHttpClient37.getSslSocketFactory();
        java.lang.String[] strArray42 = sSLSocketFactory41.getSupportedCipherSuites();
        java.lang.String[] strArray43 = sSLSocketFactory41.getSupportedCipherSuites();
        java.net.Socket socket44 = sSLSocketFactory41.createSocket();
        com.squareup.okhttp.OkHttpClient okHttpClient45 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory41);
        java.net.CookieHandler cookieHandler46 = okHttpClient45.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient47 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler48 = okHttpClient47.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray49 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet50 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet50, routeArray49);
        okHttpClient47.failedRoutes = routeSet50;
        java.net.Proxy proxy53 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient54 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler55 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient56 = okHttpClient54.setCookieHandler(cookieHandler55);
        com.squareup.okhttp.OkHttpClient okHttpClient58 = okHttpClient54.setFollowProtocolRedirects(true);
        boolean boolean59 = proxy53.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient60 = okHttpClient47.setProxy(proxy53);
        com.squareup.okhttp.OkHttpClient okHttpClient61 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler62 = okHttpClient61.getCookieHandler();
        boolean boolean63 = okHttpClient61.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient64 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler65 = okHttpClient64.getCookieHandler();
        boolean boolean66 = okHttpClient64.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient67 = okHttpClient64.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet68 = okHttpClient67.failedRoutes;
        boolean boolean69 = okHttpClient67.getFollowProtocolRedirects();
        java.net.Proxy proxy70 = java.net.Proxy.NO_PROXY;
        okHttpClient67.proxy = proxy70;
        okHttpClient61.proxy = proxy70;
        okHttpClient47.proxy = proxy70;
        java.net.Proxy.Type type74 = proxy70.type();
        com.squareup.okhttp.OkHttpClient okHttpClient75 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier76 = okHttpClient75.hostnameVerifier;
        java.net.ResponseCache responseCache77 = okHttpClient75.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator78 = okHttpClient75.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient79 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler80 = okHttpClient79.getCookieHandler();
        boolean boolean81 = okHttpClient79.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient82 = okHttpClient79.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier83 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient84 = okHttpClient82.setHostnameVerifier(hostnameVerifier83);
        java.net.ResponseCache responseCache85 = okHttpClient84.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator86 = okHttpClient84.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient87 = okHttpClient75.setAuthenticator(okAuthenticator86);
        java.net.ResponseCache responseCache88 = okHttpClient87.getResponseCache();
        com.squareup.okhttp.ConnectionPool connectionPool91 = new com.squareup.okhttp.ConnectionPool((int) 'a', (long) '4');
        okHttpClient87.connectionPool = connectionPool91;
        boolean boolean93 = proxy70.equals((java.lang.Object) okHttpClient87);
        com.squareup.okhttp.OkHttpClient okHttpClient94 = okHttpClient45.setProxy(proxy70);
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertNotNull(routeArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(proxy6);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNull(cookieHandler15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(cookieHandler18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNotNull(routeSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(proxy23);
        org.junit.Assert.assertNull(okAuthenticator27);
        org.junit.Assert.assertNull(cookieHandler30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(cookieHandler33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNotNull(okHttpClient37);
        org.junit.Assert.assertNull(responseCache38);
        org.junit.Assert.assertNotNull(okAuthenticator39);
        org.junit.Assert.assertNull(hostnameVerifier40);
        org.junit.Assert.assertNotNull(sSLSocketFactory41);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(socket44);
        org.junit.Assert.assertEquals(socket44.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(okHttpClient45);
        org.junit.Assert.assertNull(cookieHandler46);
        org.junit.Assert.assertNull(cookieHandler48);
        org.junit.Assert.assertNotNull(routeArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(proxy53);
        org.junit.Assert.assertNotNull(okHttpClient56);
        org.junit.Assert.assertNotNull(okHttpClient58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(okHttpClient60);
        org.junit.Assert.assertNull(cookieHandler62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(cookieHandler65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(okHttpClient67);
        org.junit.Assert.assertNotNull(routeSet68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(proxy70);
        org.junit.Assert.assertTrue("'" + type74 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type74.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(hostnameVerifier76);
        org.junit.Assert.assertNull(responseCache77);
        org.junit.Assert.assertNull(okAuthenticator78);
        org.junit.Assert.assertNull(cookieHandler80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(okHttpClient82);
        org.junit.Assert.assertNotNull(okHttpClient84);
        org.junit.Assert.assertNull(responseCache85);
        org.junit.Assert.assertNotNull(okAuthenticator86);
        org.junit.Assert.assertNotNull(okHttpClient87);
        org.junit.Assert.assertNull(responseCache88);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(okHttpClient94);
    }

    @Test
    public void test03453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03453");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        com.squareup.okhttp.OkAuthenticator okAuthenticator5 = okHttpClient0.authenticator;
        java.net.ResponseCache responseCache6 = okHttpClient0.getResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector8 = null;
        okHttpClient7.proxySelector = proxySelector8;
        java.net.ProxySelector proxySelector10 = okHttpClient7.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient7.setHostnameVerifier(hostnameVerifier11);
        boolean boolean13 = okHttpClient7.getFollowProtocolRedirects();
        java.net.ProxySelector proxySelector14 = okHttpClient7.proxySelector;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector16 = null;
        okHttpClient15.proxySelector = proxySelector16;
        java.net.ProxySelector proxySelector18 = okHttpClient15.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier19 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient15.setHostnameVerifier(hostnameVerifier19);
        boolean boolean21 = okHttpClient15.getFollowProtocolRedirects();
        com.squareup.okhttp.ConnectionPool connectionPool24 = new com.squareup.okhttp.ConnectionPool((int) 'a', (long) (byte) -1);
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient15.setConnectionPool(connectionPool24);
        com.squareup.okhttp.OkHttpClient okHttpClient26 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler27 = okHttpClient26.getCookieHandler();
        boolean boolean28 = okHttpClient26.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient26.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient29.setHostnameVerifier(hostnameVerifier30);
        java.net.ResponseCache responseCache32 = okHttpClient31.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator33 = okHttpClient31.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier34 = okHttpClient31.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory35 = okHttpClient31.getSslSocketFactory();
        okHttpClient15.sslSocketFactory = sSLSocketFactory35;
        okHttpClient7.sslSocketFactory = sSLSocketFactory35;
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory35);
        java.net.CookieHandler cookieHandler39 = null;
        okHttpClient0.cookieHandler = cookieHandler39;
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(okAuthenticator5);
        org.junit.Assert.assertNull(responseCache6);
        org.junit.Assert.assertNull(proxySelector10);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(proxySelector14);
        org.junit.Assert.assertNull(proxySelector18);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(okHttpClient25);
        org.junit.Assert.assertNull(cookieHandler27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(okHttpClient29);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNull(responseCache32);
        org.junit.Assert.assertNotNull(okAuthenticator33);
        org.junit.Assert.assertNull(hostnameVerifier34);
        org.junit.Assert.assertNotNull(sSLSocketFactory35);
        org.junit.Assert.assertNotNull(okHttpClient38);
    }

    @Test
    public void test03454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03454");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray2 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet3 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet3, routeArray2);
        okHttpClient0.failedRoutes = routeSet3;
        java.net.Proxy proxy6 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient7.setCookieHandler(cookieHandler8);
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient7.setFollowProtocolRedirects(true);
        boolean boolean12 = proxy6.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient0.setProxy(proxy6);
        com.squareup.okhttp.OkAuthenticator okAuthenticator14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient13.setAuthenticator(okAuthenticator14);
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient15.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler18 = okHttpClient17.getCookieHandler();
        java.net.ResponseCache responseCache19 = null;
        okHttpClient17.responseCache = responseCache19;
        boolean boolean21 = okHttpClient17.followProtocolRedirects;
        java.net.CookieHandler cookieHandler22 = okHttpClient17.cookieHandler;
        com.squareup.okhttp.ConnectionPool connectionPool23 = okHttpClient17.getConnectionPool();
        com.squareup.okhttp.OkHttpClient okHttpClient24 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector25 = null;
        okHttpClient24.proxySelector = proxySelector25;
        java.net.ProxySelector proxySelector27 = okHttpClient24.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier28 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient24.setHostnameVerifier(hostnameVerifier28);
        java.net.ProxySelector proxySelector30 = okHttpClient24.proxySelector;
        java.net.ResponseCache responseCache31 = okHttpClient24.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet32 = okHttpClient24.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient33 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler34 = okHttpClient33.getCookieHandler();
        boolean boolean35 = okHttpClient33.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient33.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool39 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int40 = connectionPool39.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient41 = okHttpClient36.setConnectionPool(connectionPool39);
        com.squareup.okhttp.OkHttpClient okHttpClient42 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector43 = null;
        okHttpClient42.proxySelector = proxySelector43;
        java.net.ProxySelector proxySelector45 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient46 = okHttpClient42.setProxySelector(proxySelector45);
        java.net.ProxySelector proxySelector47 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient48 = okHttpClient42.setProxySelector(proxySelector47);
        okHttpClient41.proxySelector = proxySelector47;
        javax.net.ssl.HostnameVerifier hostnameVerifier50 = okHttpClient41.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient51 = okHttpClient24.setHostnameVerifier(hostnameVerifier50);
        okHttpClient17.hostnameVerifier = hostnameVerifier50;
        okHttpClient16.hostnameVerifier = hostnameVerifier50;
        java.net.ProxySelector proxySelector54 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient55 = okHttpClient16.setProxySelector(proxySelector54);
        com.squareup.okhttp.ConnectionPool connectionPool58 = new com.squareup.okhttp.ConnectionPool((int) (byte) 10, (long) (short) 10);
        connectionPool58.evictAll();
        okHttpClient55.connectionPool = connectionPool58;
        com.squareup.okhttp.Connection connection61 = null;
        // The following exception was thrown during execution in test generation
        try {
            connectionPool58.recycle(connection61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertNotNull(routeArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(proxy6);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNull(cookieHandler18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(cookieHandler22);
        org.junit.Assert.assertNull(connectionPool23);
        org.junit.Assert.assertNull(proxySelector27);
        org.junit.Assert.assertNotNull(okHttpClient29);
        org.junit.Assert.assertNull(proxySelector30);
        org.junit.Assert.assertNull(responseCache31);
        org.junit.Assert.assertNotNull(routeSet32);
        org.junit.Assert.assertNull(cookieHandler34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(okHttpClient41);
        org.junit.Assert.assertNotNull(okHttpClient46);
// flaky:         org.junit.Assert.assertNull(proxySelector47);
        org.junit.Assert.assertNotNull(okHttpClient48);
        org.junit.Assert.assertNotNull(hostnameVerifier50);
        org.junit.Assert.assertNotNull(okHttpClient51);
// flaky:         org.junit.Assert.assertNull(proxySelector54);
        org.junit.Assert.assertNotNull(okHttpClient55);
    }

    @Test
    public void test03455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03455");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient4 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector5 = null;
        okHttpClient4.proxySelector = proxySelector5;
        java.net.ProxySelector proxySelector7 = okHttpClient4.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient4.setHostnameVerifier(hostnameVerifier8);
        java.net.ProxySelector proxySelector10 = okHttpClient4.proxySelector;
        java.net.ResponseCache responseCache11 = okHttpClient4.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet12 = okHttpClient4.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler14 = okHttpClient13.getCookieHandler();
        boolean boolean15 = okHttpClient13.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient13.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool19 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int20 = connectionPool19.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient16.setConnectionPool(connectionPool19);
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector23 = null;
        okHttpClient22.proxySelector = proxySelector23;
        java.net.ProxySelector proxySelector25 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient22.setProxySelector(proxySelector25);
        java.net.ProxySelector proxySelector27 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient22.setProxySelector(proxySelector27);
        okHttpClient21.proxySelector = proxySelector27;
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = okHttpClient21.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient4.setHostnameVerifier(hostnameVerifier30);
        javax.net.ssl.HostnameVerifier hostnameVerifier32 = okHttpClient31.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient0.setHostnameVerifier(hostnameVerifier32);
        java.net.Proxy proxy34 = okHttpClient33.proxy;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory35 = okHttpClient33.getSslSocketFactory();
        com.squareup.okhttp.ConnectionPool connectionPool38 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        okHttpClient33.connectionPool = connectionPool38;
        java.net.Proxy proxy40 = okHttpClient33.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient41 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler42 = okHttpClient41.getCookieHandler();
        boolean boolean43 = okHttpClient41.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient44 = okHttpClient41.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier45 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient46 = okHttpClient44.setHostnameVerifier(hostnameVerifier45);
        com.squareup.okhttp.OkAuthenticator okAuthenticator47 = okHttpClient46.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool48 = okHttpClient46.connectionPool;
        com.squareup.okhttp.ConnectionPool connectionPool49 = okHttpClient46.connectionPool;
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient33.setConnectionPool(connectionPool49);
        int int51 = connectionPool49.getConnectionCount();
        int int52 = connectionPool49.getHttpConnectionCount();
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertNull(proxySelector7);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNull(proxySelector10);
        org.junit.Assert.assertNull(responseCache11);
        org.junit.Assert.assertNotNull(routeSet12);
        org.junit.Assert.assertNull(cookieHandler14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNotNull(okHttpClient26);
// flaky:         org.junit.Assert.assertNull(proxySelector27);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNotNull(hostnameVerifier30);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNotNull(hostnameVerifier32);
        org.junit.Assert.assertNotNull(okHttpClient33);
        org.junit.Assert.assertNull(proxy34);
        org.junit.Assert.assertNull(sSLSocketFactory35);
        org.junit.Assert.assertNull(proxy40);
        org.junit.Assert.assertNull(cookieHandler42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(okHttpClient44);
        org.junit.Assert.assertNotNull(okHttpClient46);
        org.junit.Assert.assertNotNull(okAuthenticator47);
        org.junit.Assert.assertNotNull(connectionPool48);
        org.junit.Assert.assertNotNull(connectionPool49);
        org.junit.Assert.assertNotNull(okHttpClient50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
    }

    @Test
    public void test03456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03456");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = okHttpClient0.hostnameVerifier;
        java.net.ResponseCache responseCache2 = okHttpClient0.getResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler4 = okHttpClient3.getCookieHandler();
        boolean boolean5 = okHttpClient3.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient3.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int10 = connectionPool9.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient6.setConnectionPool(connectionPool9);
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = null;
        okHttpClient6.hostnameVerifier = hostnameVerifier12;
        com.squareup.okhttp.ConnectionPool connectionPool14 = okHttpClient6.getConnectionPool();
        okHttpClient0.connectionPool = connectionPool14;
        java.net.CookieHandler cookieHandler16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient0.setCookieHandler(cookieHandler16);
        java.net.ProxySelector proxySelector18 = okHttpClient17.proxySelector;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient17.setFollowProtocolRedirects(false);
        com.squareup.okhttp.OkHttpClient okHttpClient21 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler22 = okHttpClient21.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray23 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet24 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet24, routeArray23);
        okHttpClient21.failedRoutes = routeSet24;
        java.net.Proxy proxy27 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler29 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient30 = okHttpClient28.setCookieHandler(cookieHandler29);
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient28.setFollowProtocolRedirects(true);
        boolean boolean33 = proxy27.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient21.setProxy(proxy27);
        java.lang.String str35 = proxy27.toString();
        java.net.Proxy.Type type36 = proxy27.type();
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient20.setProxy(proxy27);
        com.squareup.okhttp.OkHttpClient okHttpClient38 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler39 = okHttpClient38.getCookieHandler();
        boolean boolean40 = okHttpClient38.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator41 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient38.setAuthenticator(okAuthenticator41);
        java.net.ResponseCache responseCache43 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient44 = okHttpClient38.setResponseCache(responseCache43);
        com.squareup.okhttp.ConnectionPool connectionPool47 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool47.evictAll();
        okHttpClient38.connectionPool = connectionPool47;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory50 = okHttpClient38.sslSocketFactory;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory51 = null;
        okHttpClient38.sslSocketFactory = sSLSocketFactory51;
        java.net.ProxySelector proxySelector53 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient54 = okHttpClient38.setProxySelector(proxySelector53);
        com.squareup.okhttp.OkHttpClient okHttpClient55 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector56 = null;
        okHttpClient55.proxySelector = proxySelector56;
        java.net.ProxySelector proxySelector58 = okHttpClient55.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier59 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient60 = okHttpClient55.setHostnameVerifier(hostnameVerifier59);
        java.net.ProxySelector proxySelector61 = java.net.ProxySelector.getDefault();
        okHttpClient55.proxySelector = proxySelector61;
        okHttpClient54.proxySelector = proxySelector61;
        boolean boolean64 = okHttpClient54.followProtocolRedirects;
        com.squareup.okhttp.ConnectionPool connectionPool65 = okHttpClient54.connectionPool;
        boolean boolean66 = proxy27.equals((java.lang.Object) okHttpClient54);
        java.net.ProxySelector proxySelector67 = okHttpClient54.proxySelector;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache68 = okHttpClient54.okResponseCache();
        org.junit.Assert.assertNull(hostnameVerifier1);
        org.junit.Assert.assertNull(responseCache2);
        org.junit.Assert.assertNull(cookieHandler4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(okHttpClient6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(connectionPool14);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNull(proxySelector18);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNull(cookieHandler22);
        org.junit.Assert.assertNotNull(routeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(proxy27);
        org.junit.Assert.assertNotNull(okHttpClient30);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "DIRECT" + "'", str35, "DIRECT");
        org.junit.Assert.assertTrue("'" + type36 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type36.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNotNull(okHttpClient37);
        org.junit.Assert.assertNull(cookieHandler39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(okHttpClient42);
        org.junit.Assert.assertNotNull(okHttpClient44);
        org.junit.Assert.assertNull(sSLSocketFactory50);
// flaky:         org.junit.Assert.assertNull(proxySelector53);
        org.junit.Assert.assertNotNull(okHttpClient54);
        org.junit.Assert.assertNull(proxySelector58);
        org.junit.Assert.assertNotNull(okHttpClient60);
// flaky:         org.junit.Assert.assertNull(proxySelector61);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(connectionPool65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
// flaky:         org.junit.Assert.assertNull(proxySelector67);
        org.junit.Assert.assertNull(okResponseCache68);
    }

    @Test
    public void test03457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03457");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setHostnameVerifier(hostnameVerifier4);
        java.net.ProxySelector proxySelector6 = okHttpClient0.proxySelector;
        java.net.ResponseCache responseCache7 = okHttpClient0.getResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler9 = okHttpClient8.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray10 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet11 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet11, routeArray10);
        okHttpClient8.failedRoutes = routeSet11;
        java.net.Proxy proxy14 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient15.setCookieHandler(cookieHandler16);
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient15.setFollowProtocolRedirects(true);
        boolean boolean20 = proxy14.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient8.setProxy(proxy14);
        okHttpClient0.proxy = proxy14;
        com.squareup.okhttp.OkHttpClient okHttpClient23 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler24 = okHttpClient23.getCookieHandler();
        boolean boolean25 = okHttpClient23.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient23.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier27 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient26.setHostnameVerifier(hostnameVerifier27);
        boolean boolean29 = proxy14.equals((java.lang.Object) okHttpClient26);
        java.net.SocketAddress socketAddress30 = proxy14.address();
        java.lang.String str31 = proxy14.toString();
        com.squareup.okhttp.OkHttpClient okHttpClient32 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler33 = okHttpClient32.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray34 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet35 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet35, routeArray34);
        okHttpClient32.failedRoutes = routeSet35;
        java.net.Proxy proxy38 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient39 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler40 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient41 = okHttpClient39.setCookieHandler(cookieHandler40);
        com.squareup.okhttp.OkHttpClient okHttpClient43 = okHttpClient39.setFollowProtocolRedirects(true);
        boolean boolean44 = proxy38.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient45 = okHttpClient32.setProxy(proxy38);
        com.squareup.okhttp.OkAuthenticator okAuthenticator46 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient47 = okHttpClient45.setAuthenticator(okAuthenticator46);
        com.squareup.okhttp.OkHttpClient okHttpClient48 = okHttpClient47.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient49 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector50 = null;
        okHttpClient49.proxySelector = proxySelector50;
        java.net.ProxySelector proxySelector52 = okHttpClient49.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier53 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient54 = okHttpClient49.setHostnameVerifier(hostnameVerifier53);
        boolean boolean55 = okHttpClient49.getFollowProtocolRedirects();
        com.squareup.okhttp.ConnectionPool connectionPool58 = new com.squareup.okhttp.ConnectionPool((int) 'a', (long) (byte) -1);
        com.squareup.okhttp.OkHttpClient okHttpClient59 = okHttpClient49.setConnectionPool(connectionPool58);
        com.squareup.okhttp.OkHttpClient okHttpClient60 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler61 = okHttpClient60.getCookieHandler();
        boolean boolean62 = okHttpClient60.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient63 = okHttpClient60.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier64 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient65 = okHttpClient63.setHostnameVerifier(hostnameVerifier64);
        java.net.ResponseCache responseCache66 = okHttpClient65.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator67 = okHttpClient65.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier68 = okHttpClient65.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory69 = okHttpClient65.getSslSocketFactory();
        okHttpClient49.sslSocketFactory = sSLSocketFactory69;
        java.net.Socket socket71 = sSLSocketFactory69.createSocket();
        com.squareup.okhttp.OkHttpClient okHttpClient72 = okHttpClient47.setSSLSocketFactory(sSLSocketFactory69);
        boolean boolean73 = proxy14.equals((java.lang.Object) okHttpClient72);
        com.squareup.okhttp.OkAuthenticator okAuthenticator74 = okHttpClient72.authenticator;
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(proxySelector6);
        org.junit.Assert.assertNull(responseCache7);
        org.junit.Assert.assertNull(cookieHandler9);
        org.junit.Assert.assertNotNull(routeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(proxy14);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNull(cookieHandler24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(socketAddress30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "DIRECT" + "'", str31, "DIRECT");
        org.junit.Assert.assertNull(cookieHandler33);
        org.junit.Assert.assertNotNull(routeArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(proxy38);
        org.junit.Assert.assertNotNull(okHttpClient41);
        org.junit.Assert.assertNotNull(okHttpClient43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(okHttpClient45);
        org.junit.Assert.assertNotNull(okHttpClient47);
        org.junit.Assert.assertNotNull(okHttpClient48);
        org.junit.Assert.assertNull(proxySelector52);
        org.junit.Assert.assertNotNull(okHttpClient54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(okHttpClient59);
        org.junit.Assert.assertNull(cookieHandler61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(okHttpClient63);
        org.junit.Assert.assertNotNull(okHttpClient65);
        org.junit.Assert.assertNull(responseCache66);
        org.junit.Assert.assertNotNull(okAuthenticator67);
        org.junit.Assert.assertNull(hostnameVerifier68);
        org.junit.Assert.assertNotNull(sSLSocketFactory69);
        org.junit.Assert.assertNotNull(socket71);
        org.junit.Assert.assertEquals(socket71.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(okHttpClient72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNull(okAuthenticator74);
    }

    @Test
    public void test03458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03458");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setHostnameVerifier(hostnameVerifier4);
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler7 = okHttpClient6.getCookieHandler();
        boolean boolean8 = okHttpClient6.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient6.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient10 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector11 = null;
        okHttpClient10.proxySelector = proxySelector11;
        java.net.ProxySelector proxySelector13 = okHttpClient10.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient10.setHostnameVerifier(hostnameVerifier14);
        java.net.ProxySelector proxySelector16 = okHttpClient10.proxySelector;
        java.net.ResponseCache responseCache17 = okHttpClient10.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet18 = okHttpClient10.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler20 = okHttpClient19.getCookieHandler();
        boolean boolean21 = okHttpClient19.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient19.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool25 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int26 = connectionPool25.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient22.setConnectionPool(connectionPool25);
        com.squareup.okhttp.OkHttpClient okHttpClient28 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector29 = null;
        okHttpClient28.proxySelector = proxySelector29;
        java.net.ProxySelector proxySelector31 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient28.setProxySelector(proxySelector31);
        java.net.ProxySelector proxySelector33 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient28.setProxySelector(proxySelector33);
        okHttpClient27.proxySelector = proxySelector33;
        javax.net.ssl.HostnameVerifier hostnameVerifier36 = okHttpClient27.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient10.setHostnameVerifier(hostnameVerifier36);
        javax.net.ssl.HostnameVerifier hostnameVerifier38 = okHttpClient37.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient6.setHostnameVerifier(hostnameVerifier38);
        javax.net.ssl.HostnameVerifier hostnameVerifier40 = okHttpClient39.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient41 = okHttpClient5.setHostnameVerifier(hostnameVerifier40);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory42 = okHttpClient5.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient43 = okHttpClient5.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool46 = new com.squareup.okhttp.ConnectionPool(100, 0L);
        com.squareup.okhttp.OkHttpClient okHttpClient47 = okHttpClient5.setConnectionPool(connectionPool46);
        connectionPool46.evictAll();
        int int49 = connectionPool46.getSpdyConnectionCount();
        int int50 = connectionPool46.getHttpConnectionCount();
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(cookieHandler7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNull(proxySelector13);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNull(proxySelector16);
        org.junit.Assert.assertNull(responseCache17);
        org.junit.Assert.assertNotNull(routeSet18);
        org.junit.Assert.assertNull(cookieHandler20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNotNull(okHttpClient32);
// flaky:         org.junit.Assert.assertNull(proxySelector33);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertNotNull(hostnameVerifier36);
        org.junit.Assert.assertNotNull(okHttpClient37);
        org.junit.Assert.assertNotNull(hostnameVerifier38);
        org.junit.Assert.assertNotNull(okHttpClient39);
        org.junit.Assert.assertNotNull(hostnameVerifier40);
        org.junit.Assert.assertNotNull(okHttpClient41);
        org.junit.Assert.assertNull(sSLSocketFactory42);
        org.junit.Assert.assertNotNull(okHttpClient43);
        org.junit.Assert.assertNotNull(okHttpClient47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
    }

    @Test
    public void test03459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03459");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool6 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int7 = connectionPool6.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient3.setConnectionPool(connectionPool6);
        com.squareup.okhttp.OkHttpClient okHttpClient9 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler10 = okHttpClient9.getCookieHandler();
        boolean boolean11 = okHttpClient9.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient9.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool15 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int16 = connectionPool15.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient12.setConnectionPool(connectionPool15);
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector19 = null;
        okHttpClient18.proxySelector = proxySelector19;
        java.net.ProxySelector proxySelector21 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient18.setProxySelector(proxySelector21);
        java.net.ProxySelector proxySelector23 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient18.setProxySelector(proxySelector23);
        okHttpClient17.proxySelector = proxySelector23;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient3.setProxySelector(proxySelector23);
        java.net.CookieHandler cookieHandler27 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient26.setCookieHandler(cookieHandler27);
        com.squareup.okhttp.OkHttpClient okHttpClient29 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler30 = okHttpClient29.getCookieHandler();
        boolean boolean31 = okHttpClient29.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator32 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient29.setAuthenticator(okAuthenticator32);
        java.net.ResponseCache responseCache34 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient29.setResponseCache(responseCache34);
        com.squareup.okhttp.ConnectionPool connectionPool38 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool38.evictAll();
        okHttpClient29.connectionPool = connectionPool38;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory41 = okHttpClient29.sslSocketFactory;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory42 = null;
        okHttpClient29.sslSocketFactory = sSLSocketFactory42;
        java.net.ProxySelector proxySelector44 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient45 = okHttpClient29.setProxySelector(proxySelector44);
        com.squareup.okhttp.OkHttpClient okHttpClient46 = okHttpClient28.setProxySelector(proxySelector44);
        java.net.ProxySelector.setDefault(proxySelector44);
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertNull(cookieHandler10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNotNull(okHttpClient22);
// flaky:         org.junit.Assert.assertNull(proxySelector23);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNull(cookieHandler30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(okHttpClient33);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNull(sSLSocketFactory41);
// flaky:         org.junit.Assert.assertNull(proxySelector44);
        org.junit.Assert.assertNotNull(okHttpClient45);
        org.junit.Assert.assertNotNull(okHttpClient46);
    }

    @Test
    public void test03460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03460");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setHostnameVerifier(hostnameVerifier4);
        java.net.ResponseCache responseCache6 = okHttpClient5.responseCache;
        java.net.CookieHandler cookieHandler7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient5.setCookieHandler(cookieHandler7);
        java.net.ResponseCache responseCache9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient5.setResponseCache(responseCache9);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory11 = okHttpClient5.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient5.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient5.setFollowProtocolRedirects(false);
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient5.setFollowProtocolRedirects(true);
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient16.setFollowProtocolRedirects(false);
        com.squareup.okhttp.OkHttpClient okHttpClient19 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler20 = okHttpClient19.getCookieHandler();
        boolean boolean21 = okHttpClient19.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient19.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool25 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int26 = connectionPool25.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient22.setConnectionPool(connectionPool25);
        com.squareup.okhttp.ConnectionPool connectionPool28 = okHttpClient22.connectionPool;
        java.net.ResponseCache responseCache29 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient30 = okHttpClient22.setResponseCache(responseCache29);
        com.squareup.okhttp.OkHttpClient okHttpClient31 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector32 = null;
        okHttpClient31.proxySelector = proxySelector32;
        java.net.ProxySelector proxySelector34 = okHttpClient31.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier35 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient31.setHostnameVerifier(hostnameVerifier35);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory37 = okHttpClient36.sslSocketFactory;
        com.squareup.okhttp.OkHttpClient okHttpClient38 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler39 = okHttpClient38.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray40 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet41 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet41, routeArray40);
        okHttpClient38.failedRoutes = routeSet41;
        okHttpClient36.failedRoutes = routeSet41;
        okHttpClient30.failedRoutes = routeSet41;
        okHttpClient18.failedRoutes = routeSet41;
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(responseCache6);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertNull(sSLSocketFactory11);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertNotNull(okHttpClient14);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNull(cookieHandler20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNotNull(connectionPool28);
        org.junit.Assert.assertNotNull(okHttpClient30);
        org.junit.Assert.assertNull(proxySelector34);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNull(sSLSocketFactory37);
        org.junit.Assert.assertNull(cookieHandler39);
        org.junit.Assert.assertNotNull(routeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test03461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03461");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        java.net.ResponseCache responseCache5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient0.setResponseCache(responseCache5);
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool9.evictAll();
        okHttpClient0.connectionPool = connectionPool9;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory12 = okHttpClient0.sslSocketFactory;
        java.net.Proxy proxy13 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient0.setProxy(proxy13);
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler16 = okHttpClient15.getCookieHandler();
        boolean boolean17 = okHttpClient15.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient15.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet19 = okHttpClient18.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient18.copyWithDefaults();
        java.net.ProxySelector proxySelector21 = okHttpClient18.getProxySelector();
        okHttpClient14.proxySelector = proxySelector21;
        boolean boolean23 = okHttpClient14.getFollowProtocolRedirects();
        com.squareup.okhttp.ConnectionPool connectionPool24 = okHttpClient14.getConnectionPool();
        connectionPool24.evictAll();
        int int26 = connectionPool24.getHttpConnectionCount();
        com.squareup.okhttp.Connection connection27 = null;
        // The following exception was thrown during execution in test generation
        try {
            connectionPool24.maybeShare(connection27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient6);
        org.junit.Assert.assertNull(sSLSocketFactory12);
        org.junit.Assert.assertNotNull(proxy13);
        org.junit.Assert.assertNotNull(okHttpClient14);
        org.junit.Assert.assertNull(cookieHandler16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNotNull(routeSet19);
        org.junit.Assert.assertNotNull(okHttpClient20);
// flaky:         org.junit.Assert.assertNull(proxySelector21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(connectionPool24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
    }

    @Test
    public void test03462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03462");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = okHttpClient0.hostnameVerifier;
        java.net.ResponseCache responseCache2 = okHttpClient0.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = okHttpClient0.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler5 = okHttpClient4.getCookieHandler();
        boolean boolean6 = okHttpClient4.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient4.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient7.setHostnameVerifier(hostnameVerifier8);
        java.net.ResponseCache responseCache10 = okHttpClient9.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator11 = okHttpClient9.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = okHttpClient9.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory13 = okHttpClient9.getSslSocketFactory();
        java.lang.String[] strArray14 = sSLSocketFactory13.getSupportedCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory13);
        com.squareup.okhttp.OkHttpClient okHttpClient16 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector17 = null;
        okHttpClient16.proxySelector = proxySelector17;
        java.net.ProxySelector proxySelector19 = okHttpClient16.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier20 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient16.setHostnameVerifier(hostnameVerifier20);
        java.net.ProxySelector proxySelector22 = okHttpClient16.proxySelector;
        java.net.ResponseCache responseCache23 = okHttpClient16.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet24 = okHttpClient16.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient25 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler26 = okHttpClient25.getCookieHandler();
        boolean boolean27 = okHttpClient25.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient25.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool31 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int32 = connectionPool31.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient28.setConnectionPool(connectionPool31);
        com.squareup.okhttp.OkHttpClient okHttpClient34 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector35 = null;
        okHttpClient34.proxySelector = proxySelector35;
        java.net.ProxySelector proxySelector37 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient34.setProxySelector(proxySelector37);
        java.net.ProxySelector proxySelector39 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient40 = okHttpClient34.setProxySelector(proxySelector39);
        okHttpClient33.proxySelector = proxySelector39;
        javax.net.ssl.HostnameVerifier hostnameVerifier42 = okHttpClient33.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient43 = okHttpClient16.setHostnameVerifier(hostnameVerifier42);
        com.squareup.okhttp.OkHttpClient okHttpClient44 = okHttpClient15.setHostnameVerifier(hostnameVerifier42);
        boolean boolean45 = okHttpClient15.getFollowProtocolRedirects();
        com.squareup.okhttp.ConnectionPool connectionPool46 = okHttpClient15.getConnectionPool();
        java.net.CookieHandler cookieHandler47 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient48 = okHttpClient15.setCookieHandler(cookieHandler47);
        com.squareup.okhttp.OkAuthenticator okAuthenticator49 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient48.setAuthenticator(okAuthenticator49);
        org.junit.Assert.assertNull(hostnameVerifier1);
        org.junit.Assert.assertNull(responseCache2);
        org.junit.Assert.assertNull(okAuthenticator3);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(okHttpClient7);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNull(responseCache10);
        org.junit.Assert.assertNotNull(okAuthenticator11);
        org.junit.Assert.assertNull(hostnameVerifier12);
        org.junit.Assert.assertNotNull(sSLSocketFactory13);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNull(proxySelector19);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNull(proxySelector22);
        org.junit.Assert.assertNull(responseCache23);
        org.junit.Assert.assertNotNull(routeSet24);
        org.junit.Assert.assertNull(cookieHandler26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(okHttpClient33);
        org.junit.Assert.assertNotNull(okHttpClient38);
// flaky:         org.junit.Assert.assertNull(proxySelector39);
        org.junit.Assert.assertNotNull(okHttpClient40);
        org.junit.Assert.assertNotNull(hostnameVerifier42);
        org.junit.Assert.assertNotNull(okHttpClient43);
        org.junit.Assert.assertNotNull(okHttpClient44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(connectionPool46);
        org.junit.Assert.assertNotNull(okHttpClient48);
        org.junit.Assert.assertNotNull(okHttpClient50);
    }

    @Test
    public void test03463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03463");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector5 = null;
        okHttpClient4.proxySelector = proxySelector5;
        java.net.ProxySelector proxySelector7 = okHttpClient4.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient4.setHostnameVerifier(hostnameVerifier8);
        java.net.ProxySelector proxySelector10 = okHttpClient4.proxySelector;
        java.net.ResponseCache responseCache11 = okHttpClient4.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet12 = okHttpClient4.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler14 = okHttpClient13.getCookieHandler();
        boolean boolean15 = okHttpClient13.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient13.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool19 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int20 = connectionPool19.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient16.setConnectionPool(connectionPool19);
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector23 = null;
        okHttpClient22.proxySelector = proxySelector23;
        java.net.ProxySelector proxySelector25 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient22.setProxySelector(proxySelector25);
        java.net.ProxySelector proxySelector27 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient22.setProxySelector(proxySelector27);
        okHttpClient21.proxySelector = proxySelector27;
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = okHttpClient21.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient4.setHostnameVerifier(hostnameVerifier30);
        java.net.Proxy proxy32 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress33 = proxy32.address();
        com.squareup.okhttp.OkHttpClient okHttpClient34 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector35 = null;
        okHttpClient34.proxySelector = proxySelector35;
        com.squareup.okhttp.ConnectionPool connectionPool37 = okHttpClient34.connectionPool;
        com.squareup.okhttp.ConnectionPool connectionPool38 = okHttpClient34.getConnectionPool();
        boolean boolean39 = proxy32.equals((java.lang.Object) okHttpClient34);
        okHttpClient4.proxy = proxy32;
        com.squareup.okhttp.OkHttpClient okHttpClient41 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler42 = okHttpClient41.getCookieHandler();
        boolean boolean43 = okHttpClient41.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient44 = okHttpClient41.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier45 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient46 = okHttpClient44.setHostnameVerifier(hostnameVerifier45);
        java.net.ResponseCache responseCache47 = okHttpClient46.getResponseCache();
        java.net.ProxySelector proxySelector48 = okHttpClient46.getProxySelector();
        boolean boolean49 = proxy32.equals((java.lang.Object) proxySelector48);
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient0.setProxy(proxy32);
        com.squareup.okhttp.OkAuthenticator okAuthenticator51 = null;
        okHttpClient0.authenticator = okAuthenticator51;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache53 = okHttpClient0.okResponseCache();
        javax.net.ssl.HostnameVerifier hostnameVerifier54 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient55 = okHttpClient0.setHostnameVerifier(hostnameVerifier54);
        okHttpClient0.followProtocolRedirects = false;
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNull(proxySelector7);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNull(proxySelector10);
        org.junit.Assert.assertNull(responseCache11);
        org.junit.Assert.assertNotNull(routeSet12);
        org.junit.Assert.assertNull(cookieHandler14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNotNull(okHttpClient26);
// flaky:         org.junit.Assert.assertNull(proxySelector27);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNotNull(hostnameVerifier30);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNotNull(proxy32);
        org.junit.Assert.assertNull(socketAddress33);
        org.junit.Assert.assertNull(connectionPool37);
        org.junit.Assert.assertNull(connectionPool38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(cookieHandler42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(okHttpClient44);
        org.junit.Assert.assertNotNull(okHttpClient46);
        org.junit.Assert.assertNull(responseCache47);
// flaky:         org.junit.Assert.assertNull(proxySelector48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(okHttpClient50);
        org.junit.Assert.assertNull(okResponseCache53);
        org.junit.Assert.assertNotNull(okHttpClient55);
    }

    @Test
    public void test03464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03464");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool6 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int7 = connectionPool6.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient3.setConnectionPool(connectionPool6);
        com.squareup.okhttp.ConnectionPool connectionPool9 = okHttpClient3.connectionPool;
        java.net.ResponseCache responseCache10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient3.setResponseCache(responseCache10);
        java.net.ResponseCache responseCache12 = okHttpClient3.responseCache;
        com.squareup.okhttp.OkAuthenticator okAuthenticator13 = okHttpClient3.authenticator;
        java.net.ResponseCache responseCache14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient3.setResponseCache(responseCache14);
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(responseCache12);
        org.junit.Assert.assertNotNull(okAuthenticator13);
        org.junit.Assert.assertNotNull(okHttpClient15);
    }

    @Test
    public void test03465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03465");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setHostnameVerifier(hostnameVerifier4);
        boolean boolean6 = okHttpClient0.getFollowProtocolRedirects();
        java.net.ProxySelector proxySelector7 = okHttpClient0.proxySelector;
        boolean boolean8 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient0.setFollowProtocolRedirects(false);
        com.squareup.okhttp.ConnectionPool connectionPool11 = okHttpClient0.getConnectionPool();
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(proxySelector7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertNull(connectionPool11);
    }

    @Test
    public void test03466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03466");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        java.net.ResponseCache responseCache2 = null;
        okHttpClient0.responseCache = responseCache2;
        boolean boolean4 = okHttpClient0.followProtocolRedirects;
        java.net.CookieHandler cookieHandler5 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.ConnectionPool connectionPool6 = okHttpClient0.getConnectionPool();
        java.net.ResponseCache responseCache7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient0.setResponseCache(responseCache7);
        java.net.ProxySelector proxySelector9 = okHttpClient0.getProxySelector();
        java.net.ResponseCache responseCache10 = null;
        okHttpClient0.responseCache = responseCache10;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier13 = okHttpClient12.hostnameVerifier;
        java.net.ResponseCache responseCache14 = okHttpClient12.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator15 = okHttpClient12.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler17 = okHttpClient16.getCookieHandler();
        boolean boolean18 = okHttpClient16.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient16.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier20 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient19.setHostnameVerifier(hostnameVerifier20);
        java.net.ResponseCache responseCache22 = okHttpClient21.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator23 = okHttpClient21.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient12.setAuthenticator(okAuthenticator23);
        com.squareup.okhttp.OkHttpClient okHttpClient25 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler26 = okHttpClient25.getCookieHandler();
        boolean boolean27 = okHttpClient25.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator28 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient25.setAuthenticator(okAuthenticator28);
        java.net.ResponseCache responseCache30 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient25.setResponseCache(responseCache30);
        com.squareup.okhttp.ConnectionPool connectionPool34 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool34.evictAll();
        okHttpClient25.connectionPool = connectionPool34;
        connectionPool34.evictAll();
        int int38 = connectionPool34.getSpdyConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient12.setConnectionPool(connectionPool34);
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache40 = okHttpClient12.okResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient41 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler42 = okHttpClient41.getCookieHandler();
        boolean boolean43 = okHttpClient41.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient44 = okHttpClient41.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool47 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int48 = connectionPool47.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient49 = okHttpClient44.setConnectionPool(connectionPool47);
        com.squareup.okhttp.OkHttpClient okHttpClient50 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector51 = null;
        okHttpClient50.proxySelector = proxySelector51;
        java.net.ProxySelector proxySelector53 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient54 = okHttpClient50.setProxySelector(proxySelector53);
        java.net.ProxySelector proxySelector55 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient56 = okHttpClient50.setProxySelector(proxySelector55);
        okHttpClient49.proxySelector = proxySelector55;
        com.squareup.okhttp.OkHttpClient okHttpClient58 = okHttpClient12.setProxySelector(proxySelector55);
        java.net.CookieHandler cookieHandler59 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient60 = okHttpClient58.setCookieHandler(cookieHandler59);
        com.squareup.okhttp.OkHttpClient okHttpClient61 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector62 = null;
        okHttpClient61.proxySelector = proxySelector62;
        java.net.ProxySelector proxySelector64 = okHttpClient61.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier65 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient66 = okHttpClient61.setHostnameVerifier(hostnameVerifier65);
        java.net.ResponseCache responseCache67 = okHttpClient66.responseCache;
        java.net.ProxySelector proxySelector68 = okHttpClient66.getProxySelector();
        com.squareup.okhttp.OkHttpClient okHttpClient69 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector70 = null;
        okHttpClient69.proxySelector = proxySelector70;
        java.net.ProxySelector proxySelector72 = okHttpClient69.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier73 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient74 = okHttpClient69.setHostnameVerifier(hostnameVerifier73);
        boolean boolean75 = okHttpClient69.getFollowProtocolRedirects();
        com.squareup.okhttp.ConnectionPool connectionPool78 = new com.squareup.okhttp.ConnectionPool((int) 'a', (long) (byte) -1);
        com.squareup.okhttp.OkHttpClient okHttpClient79 = okHttpClient69.setConnectionPool(connectionPool78);
        okHttpClient66.connectionPool = connectionPool78;
        com.squareup.okhttp.OkHttpClient okHttpClient81 = okHttpClient58.setConnectionPool(connectionPool78);
        com.squareup.okhttp.OkHttpClient okHttpClient82 = okHttpClient0.setConnectionPool(connectionPool78);
        com.squareup.okhttp.OkHttpClient okHttpClient83 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler84 = okHttpClient83.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray85 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet86 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet86, routeArray85);
        okHttpClient83.failedRoutes = routeSet86;
        com.squareup.okhttp.OkHttpClient okHttpClient89 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler90 = okHttpClient89.getCookieHandler();
        java.net.ResponseCache responseCache91 = okHttpClient89.responseCache;
        com.squareup.okhttp.OkHttpClient okHttpClient92 = okHttpClient89.copyWithDefaults();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory93 = okHttpClient92.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient94 = okHttpClient83.setSSLSocketFactory(sSLSocketFactory93);
        okHttpClient82.sslSocketFactory = sSLSocketFactory93;
        java.net.ProxySelector proxySelector96 = okHttpClient82.proxySelector;
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertNull(connectionPool6);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertNull(proxySelector9);
        org.junit.Assert.assertNull(hostnameVerifier13);
        org.junit.Assert.assertNull(responseCache14);
        org.junit.Assert.assertNull(okAuthenticator15);
        org.junit.Assert.assertNull(cookieHandler17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNull(responseCache22);
        org.junit.Assert.assertNotNull(okAuthenticator23);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNull(cookieHandler26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(okHttpClient29);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(okHttpClient39);
        org.junit.Assert.assertNull(okResponseCache40);
        org.junit.Assert.assertNull(cookieHandler42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(okHttpClient44);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(okHttpClient49);
        org.junit.Assert.assertNotNull(okHttpClient54);
// flaky:         org.junit.Assert.assertNull(proxySelector55);
        org.junit.Assert.assertNotNull(okHttpClient56);
        org.junit.Assert.assertNotNull(okHttpClient58);
        org.junit.Assert.assertNotNull(okHttpClient60);
        org.junit.Assert.assertNull(proxySelector64);
        org.junit.Assert.assertNotNull(okHttpClient66);
        org.junit.Assert.assertNull(responseCache67);
        org.junit.Assert.assertNull(proxySelector68);
        org.junit.Assert.assertNull(proxySelector72);
        org.junit.Assert.assertNotNull(okHttpClient74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(okHttpClient79);
        org.junit.Assert.assertNotNull(okHttpClient81);
        org.junit.Assert.assertNotNull(okHttpClient82);
        org.junit.Assert.assertNull(cookieHandler84);
        org.junit.Assert.assertNotNull(routeArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNull(cookieHandler90);
        org.junit.Assert.assertNull(responseCache91);
        org.junit.Assert.assertNotNull(okHttpClient92);
        org.junit.Assert.assertNotNull(sSLSocketFactory93);
        org.junit.Assert.assertNotNull(okHttpClient94);
        org.junit.Assert.assertNull(proxySelector96);
    }

    @Test
    public void test03467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03467");
        com.squareup.okhttp.ConnectionPool connectionPool2 = new com.squareup.okhttp.ConnectionPool(100, (-1L));
        int int3 = connectionPool2.getConnectionCount();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test03468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03468");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setHostnameVerifier(hostnameVerifier4);
        java.net.ResponseCache responseCache6 = okHttpClient5.responseCache;
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool((int) '4', 100L);
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient5.setConnectionPool(connectionPool9);
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler12 = okHttpClient11.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray13 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet14 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet14, routeArray13);
        okHttpClient11.failedRoutes = routeSet14;
        java.net.Proxy proxy17 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler19 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient18.setCookieHandler(cookieHandler19);
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient18.setFollowProtocolRedirects(true);
        boolean boolean23 = proxy17.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient11.setProxy(proxy17);
        java.net.Proxy.Type type25 = proxy17.type();
        com.squareup.okhttp.OkHttpClient okHttpClient26 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler27 = okHttpClient26.getCookieHandler();
        java.net.ResponseCache responseCache28 = null;
        okHttpClient26.responseCache = responseCache28;
        boolean boolean30 = okHttpClient26.followProtocolRedirects;
        java.net.CookieHandler cookieHandler31 = okHttpClient26.cookieHandler;
        com.squareup.okhttp.ConnectionPool connectionPool32 = okHttpClient26.getConnectionPool();
        com.squareup.okhttp.OkHttpClient okHttpClient33 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector34 = null;
        okHttpClient33.proxySelector = proxySelector34;
        java.net.ProxySelector proxySelector36 = okHttpClient33.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier37 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient33.setHostnameVerifier(hostnameVerifier37);
        java.net.ProxySelector proxySelector39 = okHttpClient33.proxySelector;
        java.net.ResponseCache responseCache40 = okHttpClient33.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet41 = okHttpClient33.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient42 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler43 = okHttpClient42.getCookieHandler();
        boolean boolean44 = okHttpClient42.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient45 = okHttpClient42.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool48 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int49 = connectionPool48.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient45.setConnectionPool(connectionPool48);
        com.squareup.okhttp.OkHttpClient okHttpClient51 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector52 = null;
        okHttpClient51.proxySelector = proxySelector52;
        java.net.ProxySelector proxySelector54 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient55 = okHttpClient51.setProxySelector(proxySelector54);
        java.net.ProxySelector proxySelector56 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient57 = okHttpClient51.setProxySelector(proxySelector56);
        okHttpClient50.proxySelector = proxySelector56;
        javax.net.ssl.HostnameVerifier hostnameVerifier59 = okHttpClient50.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient60 = okHttpClient33.setHostnameVerifier(hostnameVerifier59);
        okHttpClient26.hostnameVerifier = hostnameVerifier59;
        boolean boolean62 = proxy17.equals((java.lang.Object) hostnameVerifier59);
        com.squareup.okhttp.OkHttpClient okHttpClient63 = okHttpClient10.setHostnameVerifier(hostnameVerifier59);
        java.lang.Class<?> wildcardClass64 = okHttpClient10.getClass();
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(responseCache6);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertNull(cookieHandler12);
        org.junit.Assert.assertNotNull(routeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(proxy17);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertTrue("'" + type25 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type25.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(cookieHandler27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(cookieHandler31);
        org.junit.Assert.assertNull(connectionPool32);
        org.junit.Assert.assertNull(proxySelector36);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNull(proxySelector39);
        org.junit.Assert.assertNull(responseCache40);
        org.junit.Assert.assertNotNull(routeSet41);
        org.junit.Assert.assertNull(cookieHandler43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(okHttpClient45);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(okHttpClient50);
        org.junit.Assert.assertNotNull(okHttpClient55);
// flaky:         org.junit.Assert.assertNull(proxySelector56);
        org.junit.Assert.assertNotNull(okHttpClient57);
        org.junit.Assert.assertNotNull(hostnameVerifier59);
        org.junit.Assert.assertNotNull(okHttpClient60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(okHttpClient63);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test03469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03469");
        java.net.Proxy proxy0 = java.net.Proxy.NO_PROXY;
        java.lang.String str1 = proxy0.toString();
        boolean boolean3 = proxy0.equals((java.lang.Object) 1.0d);
        com.squareup.okhttp.OkHttpClient okHttpClient4 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector5 = null;
        okHttpClient4.proxySelector = proxySelector5;
        java.net.ProxySelector proxySelector7 = okHttpClient4.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient4.setHostnameVerifier(hostnameVerifier8);
        java.net.ResponseCache responseCache10 = okHttpClient9.responseCache;
        com.squareup.okhttp.ConnectionPool connectionPool13 = new com.squareup.okhttp.ConnectionPool((int) '4', 100L);
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient9.setConnectionPool(connectionPool13);
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector16 = null;
        okHttpClient15.proxySelector = proxySelector16;
        java.net.ProxySelector proxySelector18 = okHttpClient15.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier19 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient15.setHostnameVerifier(hostnameVerifier19);
        java.net.ProxySelector proxySelector21 = okHttpClient15.proxySelector;
        java.net.ResponseCache responseCache22 = okHttpClient15.getResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient23 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler24 = okHttpClient23.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray25 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet26 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet26, routeArray25);
        okHttpClient23.failedRoutes = routeSet26;
        java.net.Proxy proxy29 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient30 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler31 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient30.setCookieHandler(cookieHandler31);
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient30.setFollowProtocolRedirects(true);
        boolean boolean35 = proxy29.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient23.setProxy(proxy29);
        okHttpClient15.proxy = proxy29;
        com.squareup.okhttp.OkHttpClient okHttpClient38 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler39 = okHttpClient38.getCookieHandler();
        boolean boolean40 = okHttpClient38.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient41 = okHttpClient38.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier42 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient43 = okHttpClient41.setHostnameVerifier(hostnameVerifier42);
        boolean boolean44 = proxy29.equals((java.lang.Object) okHttpClient41);
        com.squareup.okhttp.OkHttpClient okHttpClient45 = okHttpClient14.setProxy(proxy29);
        boolean boolean46 = okHttpClient14.followProtocolRedirects;
        java.net.CookieHandler cookieHandler47 = okHttpClient14.cookieHandler;
        boolean boolean48 = proxy0.equals((java.lang.Object) okHttpClient14);
        java.net.Proxy proxy49 = okHttpClient14.getProxy();
        org.junit.Assert.assertNotNull(proxy0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "DIRECT" + "'", str1, "DIRECT");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(proxySelector7);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNull(responseCache10);
        org.junit.Assert.assertNotNull(okHttpClient14);
        org.junit.Assert.assertNull(proxySelector18);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNull(proxySelector21);
        org.junit.Assert.assertNull(responseCache22);
        org.junit.Assert.assertNull(cookieHandler24);
        org.junit.Assert.assertNotNull(routeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(proxy29);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNull(cookieHandler39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(okHttpClient41);
        org.junit.Assert.assertNotNull(okHttpClient43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(okHttpClient45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(cookieHandler47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(proxy49);
    }

    @Test
    public void test03470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03470");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setHostnameVerifier(hostnameVerifier4);
        java.net.ResponseCache responseCache6 = okHttpClient5.responseCache;
        java.net.ProxySelector proxySelector7 = okHttpClient5.getProxySelector();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector9 = null;
        okHttpClient8.proxySelector = proxySelector9;
        java.net.ProxySelector proxySelector11 = okHttpClient8.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient8.setHostnameVerifier(hostnameVerifier12);
        boolean boolean14 = okHttpClient8.getFollowProtocolRedirects();
        com.squareup.okhttp.ConnectionPool connectionPool17 = new com.squareup.okhttp.ConnectionPool((int) 'a', (long) (byte) -1);
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient8.setConnectionPool(connectionPool17);
        okHttpClient5.connectionPool = connectionPool17;
        java.net.ResponseCache responseCache20 = okHttpClient5.getResponseCache();
        java.net.ResponseCache responseCache21 = okHttpClient5.getResponseCache();
        java.net.CookieHandler cookieHandler22 = null;
        okHttpClient5.cookieHandler = cookieHandler22;
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(responseCache6);
        org.junit.Assert.assertNull(proxySelector7);
        org.junit.Assert.assertNull(proxySelector11);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNull(responseCache20);
        org.junit.Assert.assertNull(responseCache21);
    }

    @Test
    public void test03471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03471");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setHostnameVerifier(hostnameVerifier4);
        java.net.ResponseCache responseCache6 = okHttpClient5.responseCache;
        java.net.CookieHandler cookieHandler7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient5.setCookieHandler(cookieHandler7);
        boolean boolean9 = okHttpClient5.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator10 = okHttpClient5.authenticator;
        com.squareup.okhttp.ConnectionPool connectionPool11 = okHttpClient5.getConnectionPool();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory12 = okHttpClient5.sslSocketFactory;
        java.net.CookieHandler cookieHandler13 = okHttpClient5.getCookieHandler();
        java.net.ResponseCache responseCache14 = okHttpClient5.responseCache;
        java.net.ResponseCache responseCache15 = okHttpClient5.responseCache;
        java.net.URL uRL16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.HttpURLConnection httpURLConnection17 = okHttpClient5.open(uRL16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(responseCache6);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(okAuthenticator10);
        org.junit.Assert.assertNull(connectionPool11);
        org.junit.Assert.assertNull(sSLSocketFactory12);
        org.junit.Assert.assertNull(cookieHandler13);
        org.junit.Assert.assertNull(responseCache14);
        org.junit.Assert.assertNull(responseCache15);
    }

    @Test
    public void test03472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03472");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray2 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet3 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet3, routeArray2);
        okHttpClient0.failedRoutes = routeSet3;
        java.net.Proxy proxy6 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient7.setCookieHandler(cookieHandler8);
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient7.setFollowProtocolRedirects(true);
        boolean boolean12 = proxy6.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient0.setProxy(proxy6);
        com.squareup.okhttp.OkAuthenticator okAuthenticator14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient13.setAuthenticator(okAuthenticator14);
        boolean boolean16 = okHttpClient15.followProtocolRedirects;
        com.squareup.okhttp.ConnectionPool connectionPool19 = new com.squareup.okhttp.ConnectionPool((int) (short) 10, (long) (short) 100);
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient15.setConnectionPool(connectionPool19);
        java.net.CookieHandler cookieHandler21 = okHttpClient20.cookieHandler;
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertNotNull(routeArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(proxy6);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNull(cookieHandler21);
    }

    @Test
    public void test03473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03473");
        java.net.Proxy proxy0 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress1 = proxy0.address();
        com.squareup.okhttp.OkHttpClient okHttpClient2 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector3 = null;
        okHttpClient2.proxySelector = proxySelector3;
        com.squareup.okhttp.ConnectionPool connectionPool5 = okHttpClient2.connectionPool;
        com.squareup.okhttp.ConnectionPool connectionPool6 = okHttpClient2.getConnectionPool();
        boolean boolean7 = proxy0.equals((java.lang.Object) okHttpClient2);
        java.lang.String str8 = proxy0.toString();
        com.squareup.okhttp.OkHttpClient okHttpClient9 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler10 = okHttpClient9.getCookieHandler();
        java.net.ResponseCache responseCache11 = okHttpClient9.responseCache;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient9.copyWithDefaults();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory13 = okHttpClient12.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient14 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector15 = null;
        okHttpClient14.proxySelector = proxySelector15;
        java.net.ProxySelector proxySelector17 = okHttpClient14.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient14.setHostnameVerifier(hostnameVerifier18);
        java.net.ProxySelector proxySelector20 = okHttpClient14.proxySelector;
        java.net.ResponseCache responseCache21 = okHttpClient14.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet22 = okHttpClient14.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient23 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler24 = okHttpClient23.getCookieHandler();
        boolean boolean25 = okHttpClient23.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient23.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool29 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int30 = connectionPool29.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient26.setConnectionPool(connectionPool29);
        com.squareup.okhttp.OkHttpClient okHttpClient32 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector33 = null;
        okHttpClient32.proxySelector = proxySelector33;
        java.net.ProxySelector proxySelector35 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient32.setProxySelector(proxySelector35);
        java.net.ProxySelector proxySelector37 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient32.setProxySelector(proxySelector37);
        okHttpClient31.proxySelector = proxySelector37;
        javax.net.ssl.HostnameVerifier hostnameVerifier40 = okHttpClient31.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient41 = okHttpClient14.setHostnameVerifier(hostnameVerifier40);
        java.net.Proxy proxy42 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress43 = proxy42.address();
        com.squareup.okhttp.OkHttpClient okHttpClient44 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector45 = null;
        okHttpClient44.proxySelector = proxySelector45;
        com.squareup.okhttp.ConnectionPool connectionPool47 = okHttpClient44.connectionPool;
        com.squareup.okhttp.ConnectionPool connectionPool48 = okHttpClient44.getConnectionPool();
        boolean boolean49 = proxy42.equals((java.lang.Object) okHttpClient44);
        okHttpClient14.proxy = proxy42;
        com.squareup.okhttp.OkHttpClient okHttpClient51 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler52 = okHttpClient51.getCookieHandler();
        boolean boolean53 = okHttpClient51.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient54 = okHttpClient51.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier55 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient56 = okHttpClient54.setHostnameVerifier(hostnameVerifier55);
        java.net.ResponseCache responseCache57 = okHttpClient56.getResponseCache();
        java.net.ProxySelector proxySelector58 = okHttpClient56.getProxySelector();
        boolean boolean59 = proxy42.equals((java.lang.Object) proxySelector58);
        java.net.Proxy.Type type60 = proxy42.type();
        okHttpClient12.proxy = proxy42;
        com.squareup.okhttp.OkHttpClient okHttpClient62 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler63 = okHttpClient62.getCookieHandler();
        boolean boolean64 = okHttpClient62.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient65 = okHttpClient62.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet66 = okHttpClient65.failedRoutes;
        boolean boolean67 = okHttpClient65.getFollowProtocolRedirects();
        java.net.Proxy proxy68 = java.net.Proxy.NO_PROXY;
        okHttpClient65.proxy = proxy68;
        com.squareup.okhttp.OkHttpClient okHttpClient70 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler71 = okHttpClient70.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray72 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet73 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet73, routeArray72);
        okHttpClient70.failedRoutes = routeSet73;
        java.net.Proxy proxy76 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient77 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler78 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient79 = okHttpClient77.setCookieHandler(cookieHandler78);
        com.squareup.okhttp.OkHttpClient okHttpClient81 = okHttpClient77.setFollowProtocolRedirects(true);
        boolean boolean82 = proxy76.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient83 = okHttpClient70.setProxy(proxy76);
        java.net.SocketAddress socketAddress84 = proxy76.address();
        com.squareup.okhttp.OkHttpClient okHttpClient85 = okHttpClient65.setProxy(proxy76);
        com.squareup.okhttp.OkAuthenticator okAuthenticator86 = okHttpClient85.authenticator;
        okHttpClient12.authenticator = okAuthenticator86;
        boolean boolean88 = proxy0.equals((java.lang.Object) okAuthenticator86);
        java.net.SocketAddress socketAddress89 = proxy0.address();
        java.net.SocketAddress socketAddress90 = proxy0.address();
        org.junit.Assert.assertNotNull(proxy0);
        org.junit.Assert.assertNull(socketAddress1);
        org.junit.Assert.assertNull(connectionPool5);
        org.junit.Assert.assertNull(connectionPool6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "DIRECT" + "'", str8, "DIRECT");
        org.junit.Assert.assertNull(cookieHandler10);
        org.junit.Assert.assertNull(responseCache11);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertNotNull(sSLSocketFactory13);
        org.junit.Assert.assertNull(proxySelector17);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNull(proxySelector20);
        org.junit.Assert.assertNull(responseCache21);
        org.junit.Assert.assertNotNull(routeSet22);
        org.junit.Assert.assertNull(cookieHandler24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNotNull(okHttpClient36);
// flaky:         org.junit.Assert.assertNull(proxySelector37);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNotNull(hostnameVerifier40);
        org.junit.Assert.assertNotNull(okHttpClient41);
        org.junit.Assert.assertNotNull(proxy42);
        org.junit.Assert.assertNull(socketAddress43);
        org.junit.Assert.assertNull(connectionPool47);
        org.junit.Assert.assertNull(connectionPool48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(cookieHandler52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(okHttpClient54);
        org.junit.Assert.assertNotNull(okHttpClient56);
        org.junit.Assert.assertNull(responseCache57);
// flaky:         org.junit.Assert.assertNull(proxySelector58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + type60 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type60.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(cookieHandler63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(okHttpClient65);
        org.junit.Assert.assertNotNull(routeSet66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(proxy68);
        org.junit.Assert.assertNull(cookieHandler71);
        org.junit.Assert.assertNotNull(routeArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(proxy76);
        org.junit.Assert.assertNotNull(okHttpClient79);
        org.junit.Assert.assertNotNull(okHttpClient81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(okHttpClient83);
        org.junit.Assert.assertNull(socketAddress84);
        org.junit.Assert.assertNotNull(okHttpClient85);
        org.junit.Assert.assertNotNull(okAuthenticator86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNull(socketAddress89);
        org.junit.Assert.assertNull(socketAddress90);
    }

    @Test
    public void test03474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03474");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        java.net.ResponseCache responseCache2 = null;
        okHttpClient0.responseCache = responseCache2;
        boolean boolean4 = okHttpClient0.followProtocolRedirects;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory5);
        java.net.Proxy proxy7 = okHttpClient6.getProxy();
        java.net.ResponseCache responseCache8 = null;
        okHttpClient6.responseCache = responseCache8;
        java.net.ProxySelector proxySelector10 = okHttpClient6.proxySelector;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler12 = okHttpClient11.getCookieHandler();
        boolean boolean13 = okHttpClient11.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient11.setAuthenticator(okAuthenticator14);
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient11.copyWithDefaults();
        java.net.CookieHandler cookieHandler17 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient11.setCookieHandler(cookieHandler17);
        com.squareup.okhttp.OkAuthenticator okAuthenticator19 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient18.setAuthenticator(okAuthenticator19);
        com.squareup.okhttp.OkHttpClient okHttpClient21 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector22 = null;
        okHttpClient21.proxySelector = proxySelector22;
        java.net.ProxySelector proxySelector24 = okHttpClient21.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier25 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient21.setHostnameVerifier(hostnameVerifier25);
        java.net.ProxySelector proxySelector27 = okHttpClient21.proxySelector;
        java.net.ResponseCache responseCache28 = okHttpClient21.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet29 = okHttpClient21.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient30 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler31 = okHttpClient30.getCookieHandler();
        boolean boolean32 = okHttpClient30.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient30.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool36 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int37 = connectionPool36.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient33.setConnectionPool(connectionPool36);
        com.squareup.okhttp.OkHttpClient okHttpClient39 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector40 = null;
        okHttpClient39.proxySelector = proxySelector40;
        java.net.ProxySelector proxySelector42 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient43 = okHttpClient39.setProxySelector(proxySelector42);
        java.net.ProxySelector proxySelector44 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient45 = okHttpClient39.setProxySelector(proxySelector44);
        okHttpClient38.proxySelector = proxySelector44;
        javax.net.ssl.HostnameVerifier hostnameVerifier47 = okHttpClient38.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient48 = okHttpClient21.setHostnameVerifier(hostnameVerifier47);
        javax.net.ssl.HostnameVerifier hostnameVerifier49 = okHttpClient48.getHostnameVerifier();
        okHttpClient20.hostnameVerifier = hostnameVerifier49;
        javax.net.ssl.HostnameVerifier hostnameVerifier51 = okHttpClient20.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient52 = okHttpClient6.setHostnameVerifier(hostnameVerifier51);
        java.net.Proxy proxy53 = okHttpClient6.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient54 = okHttpClient6.copyWithDefaults();
        java.net.CookieHandler cookieHandler55 = okHttpClient54.cookieHandler;
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(okHttpClient6);
        org.junit.Assert.assertNull(proxy7);
        org.junit.Assert.assertNull(proxySelector10);
        org.junit.Assert.assertNull(cookieHandler12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNull(proxySelector24);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNull(proxySelector27);
        org.junit.Assert.assertNull(responseCache28);
        org.junit.Assert.assertNotNull(routeSet29);
        org.junit.Assert.assertNull(cookieHandler31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(okHttpClient33);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNotNull(okHttpClient43);
// flaky:         org.junit.Assert.assertNull(proxySelector44);
        org.junit.Assert.assertNotNull(okHttpClient45);
        org.junit.Assert.assertNotNull(hostnameVerifier47);
        org.junit.Assert.assertNotNull(okHttpClient48);
        org.junit.Assert.assertNotNull(hostnameVerifier49);
        org.junit.Assert.assertNotNull(hostnameVerifier51);
        org.junit.Assert.assertNotNull(okHttpClient52);
        org.junit.Assert.assertNull(proxy53);
        org.junit.Assert.assertNotNull(okHttpClient54);
        org.junit.Assert.assertNull(cookieHandler55);
    }

    @Test
    public void test03475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03475");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient2 = okHttpClient0.setCookieHandler(cookieHandler1);
        java.net.ProxySelector proxySelector3 = okHttpClient2.getProxySelector();
        com.squareup.okhttp.OkHttpClient okHttpClient4 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector5 = null;
        okHttpClient4.proxySelector = proxySelector5;
        java.net.ProxySelector proxySelector7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient4.setProxySelector(proxySelector7);
        java.net.ProxySelector proxySelector9 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient4.setProxySelector(proxySelector9);
        java.net.ResponseCache responseCache11 = okHttpClient4.responseCache;
        java.net.ProxySelector proxySelector12 = okHttpClient4.getProxySelector();
        okHttpClient2.proxySelector = proxySelector12;
        boolean boolean14 = okHttpClient2.getFollowProtocolRedirects();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory15 = okHttpClient2.sslSocketFactory;
        com.squareup.okhttp.OkAuthenticator okAuthenticator16 = okHttpClient2.authenticator;
        org.junit.Assert.assertNotNull(okHttpClient2);
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNotNull(okHttpClient8);
// flaky:         org.junit.Assert.assertNull(proxySelector9);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertNull(responseCache11);
// flaky:         org.junit.Assert.assertNull(proxySelector12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(sSLSocketFactory15);
        org.junit.Assert.assertNull(okAuthenticator16);
    }

    @Test
    public void test03476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03476");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray2 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet3 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet3, routeArray2);
        okHttpClient0.failedRoutes = routeSet3;
        java.net.Proxy proxy6 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient7.setCookieHandler(cookieHandler8);
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient7.setFollowProtocolRedirects(true);
        boolean boolean12 = proxy6.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient0.setProxy(proxy6);
        com.squareup.okhttp.OkHttpClient okHttpClient14 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler15 = okHttpClient14.getCookieHandler();
        boolean boolean16 = okHttpClient14.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient14.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool20 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int21 = connectionPool20.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient17.setConnectionPool(connectionPool20);
        com.squareup.okhttp.OkHttpClient okHttpClient23 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector24 = null;
        okHttpClient23.proxySelector = proxySelector24;
        java.net.ProxySelector proxySelector26 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient23.setProxySelector(proxySelector26);
        java.net.ProxySelector proxySelector28 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient23.setProxySelector(proxySelector28);
        okHttpClient22.proxySelector = proxySelector28;
        okHttpClient0.proxySelector = proxySelector28;
        java.net.URI uRI32 = null;
        java.net.SocketAddress socketAddress33 = null;
        java.io.IOException iOException34 = null;
        // The following exception was thrown during execution in test generation
        try {
// flaky:             proxySelector28.connectFailed(uRI32, socketAddress33, iOException34);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertNotNull(routeArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(proxy6);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNull(cookieHandler15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNotNull(okHttpClient27);
// flaky:         org.junit.Assert.assertNull(proxySelector28);
        org.junit.Assert.assertNotNull(okHttpClient29);
    }

    @Test
    public void test03477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03477");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool6 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int7 = connectionPool6.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient3.setConnectionPool(connectionPool6);
        com.squareup.okhttp.ConnectionPool connectionPool9 = okHttpClient3.connectionPool;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector11 = null;
        okHttpClient10.proxySelector = proxySelector11;
        java.net.ProxySelector proxySelector13 = okHttpClient10.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient10.setHostnameVerifier(hostnameVerifier14);
        java.net.ProxySelector proxySelector16 = java.net.ProxySelector.getDefault();
        okHttpClient10.proxySelector = proxySelector16;
        java.net.ProxySelector.setDefault(proxySelector16);
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient3.setProxySelector(proxySelector16);
        com.squareup.okhttp.ConnectionPool connectionPool20 = okHttpClient3.getConnectionPool();
        com.squareup.okhttp.ConnectionPool connectionPool21 = okHttpClient3.connectionPool;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector23 = null;
        okHttpClient22.proxySelector = proxySelector23;
        java.net.ProxySelector proxySelector25 = okHttpClient22.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier26 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient22.setHostnameVerifier(hostnameVerifier26);
        boolean boolean28 = okHttpClient22.getFollowProtocolRedirects();
        com.squareup.okhttp.ConnectionPool connectionPool31 = new com.squareup.okhttp.ConnectionPool((int) 'a', (long) (byte) -1);
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient22.setConnectionPool(connectionPool31);
        com.squareup.okhttp.OkHttpClient okHttpClient33 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector34 = null;
        okHttpClient33.proxySelector = proxySelector34;
        java.net.ProxySelector proxySelector36 = okHttpClient33.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier37 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient33.setHostnameVerifier(hostnameVerifier37);
        boolean boolean39 = okHttpClient33.getFollowProtocolRedirects();
        com.squareup.okhttp.ConnectionPool connectionPool42 = new com.squareup.okhttp.ConnectionPool((int) 'a', (long) (byte) -1);
        com.squareup.okhttp.OkHttpClient okHttpClient43 = okHttpClient33.setConnectionPool(connectionPool42);
        com.squareup.okhttp.OkHttpClient okHttpClient44 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler45 = okHttpClient44.getCookieHandler();
        boolean boolean46 = okHttpClient44.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient47 = okHttpClient44.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier48 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient49 = okHttpClient47.setHostnameVerifier(hostnameVerifier48);
        java.net.ResponseCache responseCache50 = okHttpClient49.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator51 = okHttpClient49.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier52 = okHttpClient49.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory53 = okHttpClient49.getSslSocketFactory();
        okHttpClient33.sslSocketFactory = sSLSocketFactory53;
        java.net.Socket socket55 = sSLSocketFactory53.createSocket();
        okHttpClient22.sslSocketFactory = sSLSocketFactory53;
        java.util.Set<com.squareup.okhttp.Route> routeSet57 = okHttpClient22.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient58 = okHttpClient22.copyWithDefaults();
        java.net.Proxy proxy59 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient60 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler61 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient62 = okHttpClient60.setCookieHandler(cookieHandler61);
        com.squareup.okhttp.OkHttpClient okHttpClient64 = okHttpClient60.setFollowProtocolRedirects(true);
        boolean boolean65 = proxy59.equals((java.lang.Object) true);
        java.lang.String str66 = proxy59.toString();
        java.net.Proxy.Type type67 = proxy59.type();
        java.net.SocketAddress socketAddress68 = proxy59.address();
        java.net.SocketAddress socketAddress69 = proxy59.address();
        okHttpClient58.proxy = proxy59;
        java.net.SocketAddress socketAddress71 = proxy59.address();
        okHttpClient3.proxy = proxy59;
        com.squareup.okhttp.OkHttpClient okHttpClient73 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler74 = okHttpClient73.getCookieHandler();
        boolean boolean75 = okHttpClient73.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator76 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient77 = okHttpClient73.setAuthenticator(okAuthenticator76);
        java.net.ResponseCache responseCache78 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient79 = okHttpClient73.setResponseCache(responseCache78);
        com.squareup.okhttp.ConnectionPool connectionPool82 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool82.evictAll();
        okHttpClient73.connectionPool = connectionPool82;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory85 = okHttpClient73.sslSocketFactory;
        java.net.Proxy proxy86 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient87 = okHttpClient73.setProxy(proxy86);
        com.squareup.okhttp.OkHttpClient okHttpClient88 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler89 = okHttpClient88.getCookieHandler();
        boolean boolean90 = okHttpClient88.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient91 = okHttpClient88.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet92 = okHttpClient91.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient93 = okHttpClient91.copyWithDefaults();
        java.net.ProxySelector proxySelector94 = okHttpClient91.getProxySelector();
        okHttpClient87.proxySelector = proxySelector94;
        java.net.ProxySelector proxySelector96 = okHttpClient87.getProxySelector();
        com.squareup.okhttp.OkHttpClient okHttpClient97 = okHttpClient3.setProxySelector(proxySelector96);
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNull(proxySelector13);
        org.junit.Assert.assertNotNull(okHttpClient15);
// flaky:         org.junit.Assert.assertNull(proxySelector16);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNotNull(connectionPool20);
        org.junit.Assert.assertNotNull(connectionPool21);
        org.junit.Assert.assertNull(proxySelector25);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertNull(proxySelector36);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(okHttpClient43);
        org.junit.Assert.assertNull(cookieHandler45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(okHttpClient47);
        org.junit.Assert.assertNotNull(okHttpClient49);
        org.junit.Assert.assertNull(responseCache50);
        org.junit.Assert.assertNotNull(okAuthenticator51);
        org.junit.Assert.assertNull(hostnameVerifier52);
        org.junit.Assert.assertNotNull(sSLSocketFactory53);
        org.junit.Assert.assertNotNull(socket55);
        org.junit.Assert.assertEquals(socket55.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(routeSet57);
        org.junit.Assert.assertNotNull(okHttpClient58);
        org.junit.Assert.assertNotNull(proxy59);
        org.junit.Assert.assertNotNull(okHttpClient62);
        org.junit.Assert.assertNotNull(okHttpClient64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "DIRECT" + "'", str66, "DIRECT");
        org.junit.Assert.assertTrue("'" + type67 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type67.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress68);
        org.junit.Assert.assertNull(socketAddress69);
        org.junit.Assert.assertNull(socketAddress71);
        org.junit.Assert.assertNull(cookieHandler74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(okHttpClient77);
        org.junit.Assert.assertNotNull(okHttpClient79);
        org.junit.Assert.assertNull(sSLSocketFactory85);
        org.junit.Assert.assertNotNull(proxy86);
        org.junit.Assert.assertNotNull(okHttpClient87);
        org.junit.Assert.assertNull(cookieHandler89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(okHttpClient91);
        org.junit.Assert.assertNotNull(routeSet92);
        org.junit.Assert.assertNotNull(okHttpClient93);
// flaky:         org.junit.Assert.assertNull(proxySelector94);
// flaky:         org.junit.Assert.assertNull(proxySelector96);
        org.junit.Assert.assertNotNull(okHttpClient97);
    }

    @Test
    public void test03478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03478");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        java.net.ResponseCache responseCache5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient0.setResponseCache(responseCache5);
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool9.evictAll();
        okHttpClient0.connectionPool = connectionPool9;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory12 = okHttpClient0.sslSocketFactory;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory13 = null;
        okHttpClient0.sslSocketFactory = sSLSocketFactory13;
        java.net.CookieHandler cookieHandler15 = okHttpClient0.cookieHandler;
        java.net.CookieHandler cookieHandler16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient0.setCookieHandler(cookieHandler16);
        com.squareup.okhttp.ConnectionPool connectionPool18 = okHttpClient0.connectionPool;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient0.copyWithDefaults();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory20 = okHttpClient19.getSslSocketFactory();
        java.net.InetAddress inetAddress21 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket23 = sSLSocketFactory20.createSocket(inetAddress21, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: port out of range:-1");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient6);
        org.junit.Assert.assertNull(sSLSocketFactory12);
        org.junit.Assert.assertNull(cookieHandler15);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNotNull(connectionPool18);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNotNull(sSLSocketFactory20);
    }

    @Test
    public void test03479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03479");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        java.net.ResponseCache responseCache5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient0.setResponseCache(responseCache5);
        java.net.Proxy proxy7 = okHttpClient0.proxy;
        java.net.CookieHandler cookieHandler8 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.OkAuthenticator okAuthenticator9 = okHttpClient0.getAuthenticator();
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient6);
        org.junit.Assert.assertNull(proxy7);
        org.junit.Assert.assertNull(cookieHandler8);
        org.junit.Assert.assertNull(okAuthenticator9);
    }

    @Test
    public void test03480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03480");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setHostnameVerifier(hostnameVerifier4);
        java.net.ProxySelector proxySelector6 = okHttpClient0.proxySelector;
        java.net.ResponseCache responseCache7 = okHttpClient0.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet8 = okHttpClient0.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler10 = okHttpClient9.getCookieHandler();
        boolean boolean11 = okHttpClient9.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient9.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool15 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int16 = connectionPool15.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient12.setConnectionPool(connectionPool15);
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector19 = null;
        okHttpClient18.proxySelector = proxySelector19;
        java.net.ProxySelector proxySelector21 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient18.setProxySelector(proxySelector21);
        java.net.ProxySelector proxySelector23 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient18.setProxySelector(proxySelector23);
        okHttpClient17.proxySelector = proxySelector23;
        javax.net.ssl.HostnameVerifier hostnameVerifier26 = okHttpClient17.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient0.setHostnameVerifier(hostnameVerifier26);
        java.net.CookieHandler cookieHandler28 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient29 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler30 = okHttpClient29.getCookieHandler();
        boolean boolean31 = okHttpClient29.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator32 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient29.setAuthenticator(okAuthenticator32);
        java.net.ResponseCache responseCache34 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient29.setResponseCache(responseCache34);
        com.squareup.okhttp.ConnectionPool connectionPool38 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool38.evictAll();
        okHttpClient29.connectionPool = connectionPool38;
        boolean boolean41 = okHttpClient29.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient42 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler43 = okHttpClient42.getCookieHandler();
        boolean boolean44 = okHttpClient42.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator45 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient46 = okHttpClient42.setAuthenticator(okAuthenticator45);
        com.squareup.okhttp.OkHttpClient okHttpClient47 = okHttpClient42.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier48 = okHttpClient47.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient49 = okHttpClient29.setHostnameVerifier(hostnameVerifier48);
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient0.setHostnameVerifier(hostnameVerifier48);
        java.net.ProxySelector proxySelector51 = okHttpClient50.proxySelector;
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(proxySelector6);
        org.junit.Assert.assertNull(responseCache7);
        org.junit.Assert.assertNotNull(routeSet8);
        org.junit.Assert.assertNull(cookieHandler10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNotNull(okHttpClient22);
// flaky:         org.junit.Assert.assertNull(proxySelector23);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNotNull(hostnameVerifier26);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNull(cookieHandler28);
        org.junit.Assert.assertNull(cookieHandler30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(okHttpClient33);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(cookieHandler43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(okHttpClient46);
        org.junit.Assert.assertNotNull(okHttpClient47);
        org.junit.Assert.assertNotNull(hostnameVerifier48);
        org.junit.Assert.assertNotNull(okHttpClient49);
        org.junit.Assert.assertNotNull(okHttpClient50);
        org.junit.Assert.assertNull(proxySelector51);
    }

    @Test
    public void test03481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03481");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool6 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int7 = connectionPool6.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient3.setConnectionPool(connectionPool6);
        com.squareup.okhttp.ConnectionPool connectionPool9 = okHttpClient3.connectionPool;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector11 = null;
        okHttpClient10.proxySelector = proxySelector11;
        java.net.ProxySelector proxySelector13 = okHttpClient10.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient10.setHostnameVerifier(hostnameVerifier14);
        java.net.ProxySelector proxySelector16 = java.net.ProxySelector.getDefault();
        okHttpClient10.proxySelector = proxySelector16;
        java.net.ProxySelector.setDefault(proxySelector16);
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient3.setProxySelector(proxySelector16);
        boolean boolean20 = okHttpClient3.getFollowProtocolRedirects();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory21 = okHttpClient3.getSslSocketFactory();
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNull(proxySelector13);
        org.junit.Assert.assertNotNull(okHttpClient15);
// flaky:         org.junit.Assert.assertNull(proxySelector16);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(sSLSocketFactory21);
    }

    @Test
    public void test03482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03482");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray2 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet3 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet3, routeArray2);
        okHttpClient0.failedRoutes = routeSet3;
        java.net.Proxy proxy6 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient7.setCookieHandler(cookieHandler8);
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient7.setFollowProtocolRedirects(true);
        boolean boolean12 = proxy6.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient0.setProxy(proxy6);
        java.lang.String str14 = proxy6.toString();
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler16 = okHttpClient15.getCookieHandler();
        boolean boolean17 = okHttpClient15.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient15.setAuthenticator(okAuthenticator18);
        java.net.ResponseCache responseCache20 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient15.setResponseCache(responseCache20);
        com.squareup.okhttp.ConnectionPool connectionPool24 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool24.evictAll();
        okHttpClient15.connectionPool = connectionPool24;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory27 = okHttpClient15.sslSocketFactory;
        com.squareup.okhttp.ConnectionPool connectionPool28 = okHttpClient15.getConnectionPool();
        boolean boolean29 = proxy6.equals((java.lang.Object) okHttpClient15);
        java.net.ResponseCache responseCache30 = okHttpClient15.getResponseCache();
        com.squareup.okhttp.ConnectionPool connectionPool33 = new com.squareup.okhttp.ConnectionPool(0, (long) '4');
        int int34 = connectionPool33.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient15.setConnectionPool(connectionPool33);
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient35.setFollowProtocolRedirects(true);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory38 = okHttpClient37.getSslSocketFactory();
        okHttpClient37.followProtocolRedirects = true;
        java.net.ResponseCache responseCache41 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient37.setResponseCache(responseCache41);
        java.net.CookieHandler cookieHandler43 = null;
        okHttpClient42.cookieHandler = cookieHandler43;
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertNotNull(routeArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(proxy6);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "DIRECT" + "'", str14, "DIRECT");
        org.junit.Assert.assertNull(cookieHandler16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNull(sSLSocketFactory27);
        org.junit.Assert.assertNotNull(connectionPool28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(responseCache30);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNotNull(okHttpClient37);
        org.junit.Assert.assertNull(sSLSocketFactory38);
        org.junit.Assert.assertNotNull(okHttpClient42);
    }

    @Test
    public void test03483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03483");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = okHttpClient0.hostnameVerifier;
        java.net.ResponseCache responseCache2 = okHttpClient0.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = okHttpClient0.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler5 = okHttpClient4.getCookieHandler();
        boolean boolean6 = okHttpClient4.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient4.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient7.setHostnameVerifier(hostnameVerifier8);
        java.net.ResponseCache responseCache10 = okHttpClient9.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator11 = okHttpClient9.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = okHttpClient9.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory13 = okHttpClient9.getSslSocketFactory();
        java.lang.String[] strArray14 = sSLSocketFactory13.getSupportedCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory13);
        java.lang.String[] strArray16 = sSLSocketFactory13.getSupportedCipherSuites();
        java.lang.String[] strArray17 = sSLSocketFactory13.getSupportedCipherSuites();
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket20 = sSLSocketFactory13.createSocket("", (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.net.ConnectException; message: Connection refused (Connection refused)");
        } catch (java.net.ConnectException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(hostnameVerifier1);
        org.junit.Assert.assertNull(responseCache2);
        org.junit.Assert.assertNull(okAuthenticator3);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(okHttpClient7);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNull(responseCache10);
        org.junit.Assert.assertNotNull(okAuthenticator11);
        org.junit.Assert.assertNull(hostnameVerifier12);
        org.junit.Assert.assertNotNull(sSLSocketFactory13);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strArray17);
    }

    @Test
    public void test03484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03484");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setHostnameVerifier(hostnameVerifier4);
        java.net.ResponseCache responseCache6 = okHttpClient5.responseCache;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient5.setFollowProtocolRedirects(true);
        boolean boolean9 = okHttpClient8.getFollowProtocolRedirects();
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(responseCache6);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test03485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03485");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        java.net.ResponseCache responseCache2 = null;
        okHttpClient0.responseCache = responseCache2;
        boolean boolean4 = okHttpClient0.followProtocolRedirects;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory5);
        java.net.Proxy proxy7 = okHttpClient6.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector9 = null;
        okHttpClient8.proxySelector = proxySelector9;
        java.net.ProxySelector proxySelector11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient8.setProxySelector(proxySelector11);
        java.net.ProxySelector proxySelector13 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient8.setProxySelector(proxySelector13);
        java.net.ProxySelector.setDefault(proxySelector13);
        okHttpClient6.proxySelector = proxySelector13;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler18 = okHttpClient17.getCookieHandler();
        boolean boolean19 = okHttpClient17.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator20 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient17.setAuthenticator(okAuthenticator20);
        java.net.ResponseCache responseCache22 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient17.setResponseCache(responseCache22);
        com.squareup.okhttp.ConnectionPool connectionPool26 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool26.evictAll();
        okHttpClient17.connectionPool = connectionPool26;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory29 = okHttpClient17.sslSocketFactory;
        java.net.Proxy proxy30 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient17.setProxy(proxy30);
        com.squareup.okhttp.OkHttpClient okHttpClient32 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler33 = okHttpClient32.getCookieHandler();
        boolean boolean34 = okHttpClient32.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient32.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet36 = okHttpClient35.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient35.copyWithDefaults();
        java.net.ProxySelector proxySelector38 = okHttpClient35.getProxySelector();
        okHttpClient31.proxySelector = proxySelector38;
        boolean boolean40 = okHttpClient31.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient41 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler42 = okHttpClient41.getCookieHandler();
        boolean boolean43 = okHttpClient41.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient44 = okHttpClient41.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet45 = okHttpClient44.failedRoutes;
        boolean boolean46 = okHttpClient44.getFollowProtocolRedirects();
        java.net.Proxy proxy47 = java.net.Proxy.NO_PROXY;
        okHttpClient44.proxy = proxy47;
        java.lang.String str49 = proxy47.toString();
        java.lang.String str50 = proxy47.toString();
        com.squareup.okhttp.OkHttpClient okHttpClient51 = okHttpClient31.setProxy(proxy47);
        java.lang.String str52 = proxy47.toString();
        okHttpClient6.proxy = proxy47;
        java.net.Proxy.Type type54 = proxy47.type();
        java.net.SocketAddress socketAddress55 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Proxy proxy56 = new java.net.Proxy(type54, socketAddress55);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: type DIRECT is not compatible with address null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(okHttpClient6);
        org.junit.Assert.assertNull(proxy7);
        org.junit.Assert.assertNotNull(okHttpClient12);
// flaky:         org.junit.Assert.assertNull(proxySelector13);
        org.junit.Assert.assertNotNull(okHttpClient14);
        org.junit.Assert.assertNull(cookieHandler18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertNull(sSLSocketFactory29);
        org.junit.Assert.assertNotNull(proxy30);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNull(cookieHandler33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNotNull(routeSet36);
        org.junit.Assert.assertNotNull(okHttpClient37);
// flaky:         org.junit.Assert.assertNull(proxySelector38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(cookieHandler42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(okHttpClient44);
        org.junit.Assert.assertNotNull(routeSet45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(proxy47);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "DIRECT" + "'", str49, "DIRECT");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "DIRECT" + "'", str50, "DIRECT");
        org.junit.Assert.assertNotNull(okHttpClient51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "DIRECT" + "'", str52, "DIRECT");
        org.junit.Assert.assertTrue("'" + type54 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type54.equals(java.net.Proxy.Type.DIRECT));
    }

    @Test
    public void test03486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03486");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet4 = okHttpClient3.failedRoutes;
        boolean boolean5 = okHttpClient3.getFollowProtocolRedirects();
        java.net.Proxy proxy6 = java.net.Proxy.NO_PROXY;
        okHttpClient3.proxy = proxy6;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler9 = okHttpClient8.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray10 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet11 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet11, routeArray10);
        okHttpClient8.failedRoutes = routeSet11;
        java.net.Proxy proxy14 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient15.setCookieHandler(cookieHandler16);
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient15.setFollowProtocolRedirects(true);
        boolean boolean20 = proxy14.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient8.setProxy(proxy14);
        java.net.SocketAddress socketAddress22 = proxy14.address();
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient3.setProxy(proxy14);
        java.net.ResponseCache responseCache24 = okHttpClient23.getResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient23.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier26 = okHttpClient23.getHostnameVerifier();
        java.net.ResponseCache responseCache27 = okHttpClient23.responseCache;
        java.net.ResponseCache responseCache28 = okHttpClient23.getResponseCache();
        boolean boolean29 = okHttpClient23.followProtocolRedirects;
        java.net.ProxySelector proxySelector30 = okHttpClient23.getProxySelector();
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertNotNull(routeSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(proxy6);
        org.junit.Assert.assertNull(cookieHandler9);
        org.junit.Assert.assertNotNull(routeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(proxy14);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNull(socketAddress22);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertNull(responseCache24);
        org.junit.Assert.assertNotNull(okHttpClient25);
        org.junit.Assert.assertNotNull(hostnameVerifier26);
        org.junit.Assert.assertNull(responseCache27);
        org.junit.Assert.assertNull(responseCache28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
// flaky:         org.junit.Assert.assertNull(proxySelector30);
    }

    @Test
    public void test03487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03487");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        java.net.ResponseCache responseCache2 = null;
        okHttpClient0.responseCache = responseCache2;
        boolean boolean4 = okHttpClient0.followProtocolRedirects;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory5);
        java.net.Proxy proxy7 = okHttpClient6.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector9 = null;
        okHttpClient8.proxySelector = proxySelector9;
        java.net.ProxySelector proxySelector11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient8.setProxySelector(proxySelector11);
        java.net.ProxySelector proxySelector13 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient8.setProxySelector(proxySelector13);
        java.net.ProxySelector.setDefault(proxySelector13);
        okHttpClient6.proxySelector = proxySelector13;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient6.copyWithDefaults();
        java.net.CookieHandler cookieHandler18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient6.setCookieHandler(cookieHandler18);
        com.squareup.okhttp.OkAuthenticator okAuthenticator20 = okHttpClient19.authenticator;
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(okHttpClient6);
        org.junit.Assert.assertNull(proxy7);
        org.junit.Assert.assertNotNull(okHttpClient12);
// flaky:         org.junit.Assert.assertNull(proxySelector13);
        org.junit.Assert.assertNotNull(okHttpClient14);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNull(okAuthenticator20);
    }

    @Test
    public void test03488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03488");
        com.squareup.okhttp.ConnectionPool connectionPool2 = new com.squareup.okhttp.ConnectionPool((int) (short) -1, (long) (byte) 100);
        connectionPool2.evictAll();
        int int4 = connectionPool2.getHttpConnectionCount();
        int int5 = connectionPool2.getHttpConnectionCount();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test03489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03489");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool6 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int7 = connectionPool6.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient3.setConnectionPool(connectionPool6);
        javax.net.ssl.HostnameVerifier hostnameVerifier9 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier9;
        java.net.ResponseCache responseCache11 = okHttpClient3.responseCache;
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = okHttpClient3.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector14 = null;
        okHttpClient13.proxySelector = proxySelector14;
        java.net.ProxySelector proxySelector16 = okHttpClient13.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier17 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient13.setHostnameVerifier(hostnameVerifier17);
        java.net.ProxySelector proxySelector19 = okHttpClient13.proxySelector;
        java.net.ResponseCache responseCache20 = okHttpClient13.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet21 = okHttpClient13.failedRoutes;
        com.squareup.okhttp.ConnectionPool connectionPool24 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool24.evictAll();
        com.squareup.okhttp.Address address26 = null;
        com.squareup.okhttp.Connection connection27 = connectionPool24.get(address26);
        okHttpClient13.connectionPool = connectionPool24;
        okHttpClient3.connectionPool = connectionPool24;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory30 = okHttpClient3.getSslSocketFactory();
        com.squareup.okhttp.OkAuthenticator okAuthenticator31 = okHttpClient3.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier32 = okHttpClient3.getHostnameVerifier();
        com.squareup.okhttp.ConnectionPool connectionPool35 = new com.squareup.okhttp.ConnectionPool((int) (byte) 100, 0L);
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient3.setConnectionPool(connectionPool35);
        com.squareup.okhttp.Connection connection37 = null;
        // The following exception was thrown during execution in test generation
        try {
            connectionPool35.maybeShare(connection37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertNull(responseCache11);
        org.junit.Assert.assertNull(hostnameVerifier12);
        org.junit.Assert.assertNull(proxySelector16);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNull(proxySelector19);
        org.junit.Assert.assertNull(responseCache20);
        org.junit.Assert.assertNotNull(routeSet21);
        org.junit.Assert.assertNull(connection27);
        org.junit.Assert.assertNotNull(sSLSocketFactory30);
        org.junit.Assert.assertNotNull(okAuthenticator31);
        org.junit.Assert.assertNull(hostnameVerifier32);
        org.junit.Assert.assertNotNull(okHttpClient36);
    }

    @Test
    public void test03490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03490");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setHostnameVerifier(hostnameVerifier4);
        java.net.ProxySelector proxySelector6 = java.net.ProxySelector.getDefault();
        okHttpClient0.proxySelector = proxySelector6;
        java.net.CookieHandler cookieHandler8 = null;
        okHttpClient0.cookieHandler = cookieHandler8;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler11 = okHttpClient10.getCookieHandler();
        boolean boolean12 = okHttpClient10.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient10.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient13.setHostnameVerifier(hostnameVerifier14);
        java.net.ResponseCache responseCache16 = okHttpClient15.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator17 = okHttpClient15.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = okHttpClient15.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory19 = okHttpClient15.getSslSocketFactory();
        java.lang.String[] strArray20 = sSLSocketFactory19.getSupportedCipherSuites();
        java.lang.String[] strArray21 = sSLSocketFactory19.getDefaultCipherSuites();
        okHttpClient0.sslSocketFactory = sSLSocketFactory19;
        java.lang.String[] strArray23 = sSLSocketFactory19.getSupportedCipherSuites();
        java.lang.String[] strArray24 = sSLSocketFactory19.getSupportedCipherSuites();
        java.net.Socket socket25 = sSLSocketFactory19.createSocket();
        java.lang.String[] strArray26 = sSLSocketFactory19.getDefaultCipherSuites();
        java.net.InetAddress inetAddress29 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket31 = sSLSocketFactory19.createSocket("hi!", 0, inetAddress29, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.net.BindException; message: Permission denied (Bind failed)");
        } catch (java.net.BindException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNotNull(okHttpClient5);
// flaky:         org.junit.Assert.assertNull(proxySelector6);
        org.junit.Assert.assertNull(cookieHandler11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNull(responseCache16);
        org.junit.Assert.assertNotNull(okAuthenticator17);
        org.junit.Assert.assertNull(hostnameVerifier18);
        org.junit.Assert.assertNotNull(sSLSocketFactory19);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(socket25);
        org.junit.Assert.assertEquals(socket25.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(strArray26);
    }

    @Test
    public void test03491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03491");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setHostnameVerifier(hostnameVerifier4);
        java.net.ProxySelector proxySelector6 = okHttpClient0.proxySelector;
        java.net.ResponseCache responseCache7 = okHttpClient0.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet8 = okHttpClient0.failedRoutes;
        java.net.ResponseCache responseCache9 = okHttpClient0.responseCache;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setFollowProtocolRedirects(true);
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient0.setFollowProtocolRedirects(false);
        com.squareup.okhttp.OkHttpClient okHttpClient14 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler15 = okHttpClient14.getCookieHandler();
        boolean boolean16 = okHttpClient14.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient14.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient17.setHostnameVerifier(hostnameVerifier18);
        java.net.ResponseCache responseCache20 = okHttpClient19.getResponseCache();
        java.net.ProxySelector proxySelector21 = okHttpClient19.getProxySelector();
        com.squareup.okhttp.ConnectionPool connectionPool22 = okHttpClient19.connectionPool;
        java.net.ResponseCache responseCache23 = okHttpClient19.getResponseCache();
        java.net.ProxySelector proxySelector24 = okHttpClient19.getProxySelector();
        okHttpClient0.proxySelector = proxySelector24;
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(proxySelector6);
        org.junit.Assert.assertNull(responseCache7);
        org.junit.Assert.assertNotNull(routeSet8);
        org.junit.Assert.assertNull(responseCache9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNull(cookieHandler15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNull(responseCache20);
// flaky:         org.junit.Assert.assertNull(proxySelector21);
        org.junit.Assert.assertNotNull(connectionPool22);
        org.junit.Assert.assertNull(responseCache23);
// flaky:         org.junit.Assert.assertNull(proxySelector24);
    }

    @Test
    public void test03492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03492");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setHostnameVerifier(hostnameVerifier4);
        java.net.ResponseCache responseCache6 = okHttpClient5.responseCache;
        java.net.CookieHandler cookieHandler7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient5.setCookieHandler(cookieHandler7);
        java.net.ResponseCache responseCache9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient5.setResponseCache(responseCache9);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory11 = okHttpClient5.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient5.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient5.setFollowProtocolRedirects(false);
        javax.net.ssl.HostnameVerifier hostnameVerifier15 = okHttpClient5.hostnameVerifier;
        boolean boolean16 = okHttpClient5.followProtocolRedirects;
        javax.net.ssl.HostnameVerifier hostnameVerifier17 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient5.setHostnameVerifier(hostnameVerifier17);
        java.net.CookieHandler cookieHandler19 = okHttpClient5.cookieHandler;
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(responseCache6);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertNull(sSLSocketFactory11);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertNotNull(okHttpClient14);
        org.junit.Assert.assertNull(hostnameVerifier15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNull(cookieHandler19);
    }

    @Test
    public void test03493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03493");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = okHttpClient0.hostnameVerifier;
        java.net.ResponseCache responseCache2 = okHttpClient0.getResponseCache();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory3 = okHttpClient0.sslSocketFactory;
        java.net.Proxy proxy4 = okHttpClient0.getProxy();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory5);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory7);
        com.squareup.okhttp.OkHttpClient okHttpClient9 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector10 = null;
        okHttpClient9.proxySelector = proxySelector10;
        java.net.ProxySelector proxySelector12 = okHttpClient9.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient9.setHostnameVerifier(hostnameVerifier13);
        java.net.ResponseCache responseCache15 = null;
        okHttpClient9.responseCache = responseCache15;
        java.net.ResponseCache responseCache17 = okHttpClient9.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator18 = okHttpClient9.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier20 = okHttpClient19.hostnameVerifier;
        java.net.ResponseCache responseCache21 = okHttpClient19.getResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler23 = okHttpClient22.getCookieHandler();
        boolean boolean24 = okHttpClient22.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient22.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool28 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int29 = connectionPool28.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient30 = okHttpClient25.setConnectionPool(connectionPool28);
        javax.net.ssl.HostnameVerifier hostnameVerifier31 = null;
        okHttpClient25.hostnameVerifier = hostnameVerifier31;
        com.squareup.okhttp.ConnectionPool connectionPool33 = okHttpClient25.getConnectionPool();
        okHttpClient19.connectionPool = connectionPool33;
        java.net.CookieHandler cookieHandler35 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient19.setCookieHandler(cookieHandler35);
        com.squareup.okhttp.OkHttpClient okHttpClient37 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector38 = null;
        okHttpClient37.proxySelector = proxySelector38;
        java.net.ProxySelector proxySelector40 = okHttpClient37.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier41 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient37.setHostnameVerifier(hostnameVerifier41);
        java.net.ProxySelector proxySelector43 = okHttpClient37.proxySelector;
        java.net.ResponseCache responseCache44 = okHttpClient37.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet45 = okHttpClient37.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient46 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler47 = okHttpClient46.getCookieHandler();
        boolean boolean48 = okHttpClient46.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient49 = okHttpClient46.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool52 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int53 = connectionPool52.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient54 = okHttpClient49.setConnectionPool(connectionPool52);
        com.squareup.okhttp.OkHttpClient okHttpClient55 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector56 = null;
        okHttpClient55.proxySelector = proxySelector56;
        java.net.ProxySelector proxySelector58 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient59 = okHttpClient55.setProxySelector(proxySelector58);
        java.net.ProxySelector proxySelector60 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient61 = okHttpClient55.setProxySelector(proxySelector60);
        okHttpClient54.proxySelector = proxySelector60;
        javax.net.ssl.HostnameVerifier hostnameVerifier63 = okHttpClient54.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient64 = okHttpClient37.setHostnameVerifier(hostnameVerifier63);
        javax.net.ssl.HostnameVerifier hostnameVerifier65 = okHttpClient64.getHostnameVerifier();
        okHttpClient36.hostnameVerifier = hostnameVerifier65;
        okHttpClient9.hostnameVerifier = hostnameVerifier65;
        okHttpClient8.hostnameVerifier = hostnameVerifier65;
        com.squareup.okhttp.OkHttpClient okHttpClient69 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler70 = okHttpClient69.getCookieHandler();
        boolean boolean71 = okHttpClient69.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient72 = okHttpClient69.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool75 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int76 = connectionPool75.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient77 = okHttpClient72.setConnectionPool(connectionPool75);
        com.squareup.okhttp.ConnectionPool connectionPool78 = okHttpClient72.connectionPool;
        int int79 = connectionPool78.getConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient80 = okHttpClient8.setConnectionPool(connectionPool78);
        com.squareup.okhttp.OkHttpClient okHttpClient81 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler82 = okHttpClient81.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray83 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet84 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet84, routeArray83);
        okHttpClient81.failedRoutes = routeSet84;
        java.net.ResponseCache responseCache87 = okHttpClient81.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet88 = okHttpClient81.failedRoutes;
        okHttpClient8.failedRoutes = routeSet88;
        javax.net.ssl.HostnameVerifier hostnameVerifier90 = okHttpClient8.hostnameVerifier;
        org.junit.Assert.assertNull(hostnameVerifier1);
        org.junit.Assert.assertNull(responseCache2);
        org.junit.Assert.assertNull(sSLSocketFactory3);
        org.junit.Assert.assertNull(proxy4);
        org.junit.Assert.assertNotNull(okHttpClient6);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertNull(proxySelector12);
        org.junit.Assert.assertNotNull(okHttpClient14);
        org.junit.Assert.assertNull(responseCache17);
        org.junit.Assert.assertNull(okAuthenticator18);
        org.junit.Assert.assertNull(hostnameVerifier20);
        org.junit.Assert.assertNull(responseCache21);
        org.junit.Assert.assertNull(cookieHandler23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(okHttpClient25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(okHttpClient30);
        org.junit.Assert.assertNotNull(connectionPool33);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNull(proxySelector40);
        org.junit.Assert.assertNotNull(okHttpClient42);
        org.junit.Assert.assertNull(proxySelector43);
        org.junit.Assert.assertNull(responseCache44);
        org.junit.Assert.assertNotNull(routeSet45);
        org.junit.Assert.assertNull(cookieHandler47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(okHttpClient49);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(okHttpClient54);
        org.junit.Assert.assertNotNull(okHttpClient59);
// flaky:         org.junit.Assert.assertNull(proxySelector60);
        org.junit.Assert.assertNotNull(okHttpClient61);
        org.junit.Assert.assertNotNull(hostnameVerifier63);
        org.junit.Assert.assertNotNull(okHttpClient64);
        org.junit.Assert.assertNotNull(hostnameVerifier65);
        org.junit.Assert.assertNull(cookieHandler70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(okHttpClient72);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNotNull(okHttpClient77);
        org.junit.Assert.assertNotNull(connectionPool78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertNotNull(okHttpClient80);
        org.junit.Assert.assertNull(cookieHandler82);
        org.junit.Assert.assertNotNull(routeArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNull(responseCache87);
        org.junit.Assert.assertNotNull(routeSet88);
        org.junit.Assert.assertNotNull(hostnameVerifier90);
    }

    @Test
    public void test03494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03494");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet4 = okHttpClient3.failedRoutes;
        boolean boolean5 = okHttpClient3.getFollowProtocolRedirects();
        java.net.Proxy proxy6 = java.net.Proxy.NO_PROXY;
        okHttpClient3.proxy = proxy6;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler9 = okHttpClient8.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray10 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet11 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet11, routeArray10);
        okHttpClient8.failedRoutes = routeSet11;
        java.net.Proxy proxy14 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient15.setCookieHandler(cookieHandler16);
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient15.setFollowProtocolRedirects(true);
        boolean boolean20 = proxy14.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient8.setProxy(proxy14);
        java.net.SocketAddress socketAddress22 = proxy14.address();
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient3.setProxy(proxy14);
        okHttpClient23.followProtocolRedirects = false;
        boolean boolean26 = okHttpClient23.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector28 = null;
        okHttpClient27.proxySelector = proxySelector28;
        java.net.ProxySelector proxySelector30 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient27.setProxySelector(proxySelector30);
        java.net.ProxySelector proxySelector32 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient27.setProxySelector(proxySelector32);
        java.net.ProxySelector.setDefault(proxySelector32);
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient23.setProxySelector(proxySelector32);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory36 = okHttpClient23.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient37 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler38 = okHttpClient37.getCookieHandler();
        boolean boolean39 = okHttpClient37.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient40 = okHttpClient37.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet41 = okHttpClient40.failedRoutes;
        boolean boolean42 = okHttpClient40.getFollowProtocolRedirects();
        java.net.Proxy proxy43 = java.net.Proxy.NO_PROXY;
        okHttpClient40.proxy = proxy43;
        com.squareup.okhttp.OkHttpClient okHttpClient45 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler46 = okHttpClient45.getCookieHandler();
        com.squareup.okhttp.Route[] routeArray47 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet48 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet48, routeArray47);
        okHttpClient45.failedRoutes = routeSet48;
        java.net.Proxy proxy51 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient52 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler53 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient54 = okHttpClient52.setCookieHandler(cookieHandler53);
        com.squareup.okhttp.OkHttpClient okHttpClient56 = okHttpClient52.setFollowProtocolRedirects(true);
        boolean boolean57 = proxy51.equals((java.lang.Object) true);
        com.squareup.okhttp.OkHttpClient okHttpClient58 = okHttpClient45.setProxy(proxy51);
        java.net.SocketAddress socketAddress59 = proxy51.address();
        com.squareup.okhttp.OkHttpClient okHttpClient60 = okHttpClient40.setProxy(proxy51);
        com.squareup.okhttp.OkHttpClient okHttpClient62 = okHttpClient40.setFollowProtocolRedirects(false);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory63 = okHttpClient62.getSslSocketFactory();
        java.lang.String[] strArray64 = sSLSocketFactory63.getSupportedCipherSuites();
        java.net.Socket socket65 = sSLSocketFactory63.createSocket();
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket69 = sSLSocketFactory36.createSocket(socket65, "", (int) (short) 10, false);
            org.junit.Assert.fail("Expected exception of type java.net.SocketException; message: Underlying socket is not connected");
        } catch (java.net.SocketException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertNotNull(routeSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(proxy6);
        org.junit.Assert.assertNull(cookieHandler9);
        org.junit.Assert.assertNotNull(routeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(proxy14);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNull(socketAddress22);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(okHttpClient31);
// flaky:         org.junit.Assert.assertNull(proxySelector32);
        org.junit.Assert.assertNotNull(okHttpClient33);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNotNull(sSLSocketFactory36);
        org.junit.Assert.assertNull(cookieHandler38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(okHttpClient40);
        org.junit.Assert.assertNotNull(routeSet41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(proxy43);
        org.junit.Assert.assertNull(cookieHandler46);
        org.junit.Assert.assertNotNull(routeArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(proxy51);
        org.junit.Assert.assertNotNull(okHttpClient54);
        org.junit.Assert.assertNotNull(okHttpClient56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(okHttpClient58);
        org.junit.Assert.assertNull(socketAddress59);
        org.junit.Assert.assertNotNull(okHttpClient60);
        org.junit.Assert.assertNotNull(okHttpClient62);
        org.junit.Assert.assertNotNull(sSLSocketFactory63);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(socket65);
        org.junit.Assert.assertEquals(socket65.toString(), "Socket[unconnected]");
    }

    @Test
    public void test03495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03495");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector1 = null;
        okHttpClient0.proxySelector = proxySelector1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setHostnameVerifier(hostnameVerifier4);
        java.net.ResponseCache responseCache6 = okHttpClient5.responseCache;
        java.net.CookieHandler cookieHandler7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient5.setCookieHandler(cookieHandler7);
        java.net.ResponseCache responseCache9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient5.setResponseCache(responseCache9);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory11 = okHttpClient5.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient12 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector13 = null;
        okHttpClient12.proxySelector = proxySelector13;
        java.net.ProxySelector proxySelector15 = okHttpClient12.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient12.setHostnameVerifier(hostnameVerifier16);
        java.net.ProxySelector proxySelector18 = okHttpClient12.proxySelector;
        java.net.ResponseCache responseCache19 = okHttpClient12.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet20 = okHttpClient12.failedRoutes;
        java.net.Proxy proxy21 = okHttpClient12.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler23 = okHttpClient22.getCookieHandler();
        boolean boolean24 = okHttpClient22.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient22.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool28 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int29 = connectionPool28.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient30 = okHttpClient25.setConnectionPool(connectionPool28);
        com.squareup.okhttp.OkHttpClient okHttpClient31 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler32 = okHttpClient31.getCookieHandler();
        boolean boolean33 = okHttpClient31.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient31.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool37 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int38 = connectionPool37.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient34.setConnectionPool(connectionPool37);
        com.squareup.okhttp.OkHttpClient okHttpClient40 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector41 = null;
        okHttpClient40.proxySelector = proxySelector41;
        java.net.ProxySelector proxySelector43 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient44 = okHttpClient40.setProxySelector(proxySelector43);
        java.net.ProxySelector proxySelector45 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient46 = okHttpClient40.setProxySelector(proxySelector45);
        okHttpClient39.proxySelector = proxySelector45;
        com.squareup.okhttp.OkHttpClient okHttpClient48 = okHttpClient25.setProxySelector(proxySelector45);
        java.net.CookieHandler cookieHandler49 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient48.setCookieHandler(cookieHandler49);
        com.squareup.okhttp.OkHttpClient okHttpClient51 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler52 = okHttpClient51.getCookieHandler();
        boolean boolean53 = okHttpClient51.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator54 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient55 = okHttpClient51.setAuthenticator(okAuthenticator54);
        java.net.ResponseCache responseCache56 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient57 = okHttpClient51.setResponseCache(responseCache56);
        com.squareup.okhttp.ConnectionPool connectionPool60 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool60.evictAll();
        okHttpClient51.connectionPool = connectionPool60;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory63 = okHttpClient51.sslSocketFactory;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory64 = null;
        okHttpClient51.sslSocketFactory = sSLSocketFactory64;
        java.net.ProxySelector proxySelector66 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient67 = okHttpClient51.setProxySelector(proxySelector66);
        com.squareup.okhttp.OkHttpClient okHttpClient68 = okHttpClient50.setProxySelector(proxySelector66);
        com.squareup.okhttp.OkAuthenticator okAuthenticator69 = okHttpClient68.getAuthenticator();
        okHttpClient12.authenticator = okAuthenticator69;
        okHttpClient5.authenticator = okAuthenticator69;
        com.squareup.okhttp.ConnectionPool connectionPool72 = okHttpClient5.connectionPool;
        java.net.ProxySelector proxySelector73 = okHttpClient5.proxySelector;
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(responseCache6);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertNull(sSLSocketFactory11);
        org.junit.Assert.assertNull(proxySelector15);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNull(proxySelector18);
        org.junit.Assert.assertNull(responseCache19);
        org.junit.Assert.assertNotNull(routeSet20);
        org.junit.Assert.assertNull(proxy21);
        org.junit.Assert.assertNull(cookieHandler23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(okHttpClient25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(okHttpClient30);
        org.junit.Assert.assertNull(cookieHandler32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(okHttpClient39);
        org.junit.Assert.assertNotNull(okHttpClient44);
// flaky:         org.junit.Assert.assertNull(proxySelector45);
        org.junit.Assert.assertNotNull(okHttpClient46);
        org.junit.Assert.assertNotNull(okHttpClient48);
        org.junit.Assert.assertNotNull(okHttpClient50);
        org.junit.Assert.assertNull(cookieHandler52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(okHttpClient55);
        org.junit.Assert.assertNotNull(okHttpClient57);
        org.junit.Assert.assertNull(sSLSocketFactory63);
// flaky:         org.junit.Assert.assertNull(proxySelector66);
        org.junit.Assert.assertNotNull(okHttpClient67);
        org.junit.Assert.assertNotNull(okHttpClient68);
        org.junit.Assert.assertNotNull(okAuthenticator69);
        org.junit.Assert.assertNull(connectionPool72);
        org.junit.Assert.assertNull(proxySelector73);
    }

    @Test
    public void test03496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03496");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = okHttpClient0.hostnameVerifier;
        java.net.ResponseCache responseCache2 = okHttpClient0.getResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler4 = okHttpClient3.getCookieHandler();
        boolean boolean5 = okHttpClient3.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient3.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int10 = connectionPool9.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient6.setConnectionPool(connectionPool9);
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = null;
        okHttpClient6.hostnameVerifier = hostnameVerifier12;
        com.squareup.okhttp.ConnectionPool connectionPool14 = okHttpClient6.getConnectionPool();
        okHttpClient0.connectionPool = connectionPool14;
        java.net.CookieHandler cookieHandler16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient0.setCookieHandler(cookieHandler16);
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector19 = null;
        okHttpClient18.proxySelector = proxySelector19;
        java.net.ProxySelector proxySelector21 = okHttpClient18.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier22 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient18.setHostnameVerifier(hostnameVerifier22);
        java.net.ProxySelector proxySelector24 = okHttpClient18.proxySelector;
        java.net.ResponseCache responseCache25 = okHttpClient18.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet26 = okHttpClient18.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler28 = okHttpClient27.getCookieHandler();
        boolean boolean29 = okHttpClient27.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient30 = okHttpClient27.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool33 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int34 = connectionPool33.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient30.setConnectionPool(connectionPool33);
        com.squareup.okhttp.OkHttpClient okHttpClient36 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector37 = null;
        okHttpClient36.proxySelector = proxySelector37;
        java.net.ProxySelector proxySelector39 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient40 = okHttpClient36.setProxySelector(proxySelector39);
        java.net.ProxySelector proxySelector41 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient36.setProxySelector(proxySelector41);
        okHttpClient35.proxySelector = proxySelector41;
        javax.net.ssl.HostnameVerifier hostnameVerifier44 = okHttpClient35.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient45 = okHttpClient18.setHostnameVerifier(hostnameVerifier44);
        javax.net.ssl.HostnameVerifier hostnameVerifier46 = okHttpClient45.getHostnameVerifier();
        okHttpClient17.hostnameVerifier = hostnameVerifier46;
        java.net.CookieHandler cookieHandler48 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient49 = okHttpClient17.setCookieHandler(cookieHandler48);
        boolean boolean50 = okHttpClient49.getFollowProtocolRedirects();
        org.junit.Assert.assertNull(hostnameVerifier1);
        org.junit.Assert.assertNull(responseCache2);
        org.junit.Assert.assertNull(cookieHandler4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(okHttpClient6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(connectionPool14);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNull(proxySelector21);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertNull(proxySelector24);
        org.junit.Assert.assertNull(responseCache25);
        org.junit.Assert.assertNotNull(routeSet26);
        org.junit.Assert.assertNull(cookieHandler28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(okHttpClient30);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNotNull(okHttpClient40);
// flaky:         org.junit.Assert.assertNull(proxySelector41);
        org.junit.Assert.assertNotNull(okHttpClient42);
        org.junit.Assert.assertNotNull(hostnameVerifier44);
        org.junit.Assert.assertNotNull(okHttpClient45);
        org.junit.Assert.assertNotNull(hostnameVerifier46);
        org.junit.Assert.assertNotNull(okHttpClient49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
    }

    @Test
    public void test03497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03497");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        java.net.ResponseCache responseCache5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient0.setResponseCache(responseCache5);
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool9.evictAll();
        okHttpClient0.connectionPool = connectionPool9;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory12 = okHttpClient0.sslSocketFactory;
        com.squareup.okhttp.ConnectionPool connectionPool13 = okHttpClient0.getConnectionPool();
        java.net.CookieHandler cookieHandler14 = null;
        okHttpClient0.cookieHandler = cookieHandler14;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler17 = okHttpClient16.getCookieHandler();
        boolean boolean18 = okHttpClient16.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient16.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool22 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int23 = connectionPool22.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient19.setConnectionPool(connectionPool22);
        com.squareup.okhttp.ConnectionPool connectionPool25 = okHttpClient19.connectionPool;
        java.net.ResponseCache responseCache26 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient19.setResponseCache(responseCache26);
        com.squareup.okhttp.OkAuthenticator okAuthenticator28 = okHttpClient19.getAuthenticator();
        com.squareup.okhttp.OkHttpClient okHttpClient29 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler30 = okHttpClient29.getCookieHandler();
        boolean boolean31 = okHttpClient29.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator32 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient29.setAuthenticator(okAuthenticator32);
        java.net.ResponseCache responseCache34 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient29.setResponseCache(responseCache34);
        com.squareup.okhttp.ConnectionPool connectionPool38 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool38.evictAll();
        okHttpClient29.connectionPool = connectionPool38;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory41 = okHttpClient29.sslSocketFactory;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory42 = null;
        okHttpClient29.sslSocketFactory = sSLSocketFactory42;
        java.net.ProxySelector proxySelector44 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient45 = okHttpClient29.setProxySelector(proxySelector44);
        com.squareup.okhttp.OkHttpClient okHttpClient46 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector47 = null;
        okHttpClient46.proxySelector = proxySelector47;
        java.net.ProxySelector proxySelector49 = okHttpClient46.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier50 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient51 = okHttpClient46.setHostnameVerifier(hostnameVerifier50);
        java.net.ProxySelector proxySelector52 = java.net.ProxySelector.getDefault();
        okHttpClient46.proxySelector = proxySelector52;
        okHttpClient45.proxySelector = proxySelector52;
        com.squareup.okhttp.OkHttpClient okHttpClient55 = okHttpClient19.setProxySelector(proxySelector52);
        okHttpClient0.proxySelector = proxySelector52;
        java.net.ProxySelector.setDefault(proxySelector52);
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient6);
        org.junit.Assert.assertNull(sSLSocketFactory12);
        org.junit.Assert.assertNotNull(connectionPool13);
        org.junit.Assert.assertNull(cookieHandler17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNotNull(connectionPool25);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNotNull(okAuthenticator28);
        org.junit.Assert.assertNull(cookieHandler30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(okHttpClient33);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNull(sSLSocketFactory41);
// flaky:         org.junit.Assert.assertNull(proxySelector44);
        org.junit.Assert.assertNotNull(okHttpClient45);
        org.junit.Assert.assertNull(proxySelector49);
        org.junit.Assert.assertNotNull(okHttpClient51);
// flaky:         org.junit.Assert.assertNull(proxySelector52);
        org.junit.Assert.assertNotNull(okHttpClient55);
    }

    @Test
    public void test03498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03498");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setAuthenticator(okAuthenticator3);
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier6 = okHttpClient0.hostnameVerifier;
        java.net.ProxySelector proxySelector7 = java.net.ProxySelector.getDefault();
        okHttpClient0.proxySelector = proxySelector7;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient0.copyWithDefaults();
        boolean boolean10 = okHttpClient9.followProtocolRedirects;
        java.net.ResponseCache responseCache11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient9.setResponseCache(responseCache11);
        java.net.URL uRL13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.HttpURLConnection httpURLConnection14 = okHttpClient9.open(uRL13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(hostnameVerifier6);
// flaky:         org.junit.Assert.assertNull(proxySelector7);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(okHttpClient12);
    }

    @Test
    public void test03499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03499");
        java.net.Proxy proxy0 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress1 = proxy0.address();
        com.squareup.okhttp.OkHttpClient okHttpClient2 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector3 = null;
        okHttpClient2.proxySelector = proxySelector3;
        com.squareup.okhttp.ConnectionPool connectionPool5 = okHttpClient2.connectionPool;
        com.squareup.okhttp.ConnectionPool connectionPool6 = okHttpClient2.getConnectionPool();
        boolean boolean7 = proxy0.equals((java.lang.Object) okHttpClient2);
        com.squareup.okhttp.OkHttpClient okHttpClient8 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler9 = okHttpClient8.getCookieHandler();
        boolean boolean10 = okHttpClient8.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient8.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool14 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        int int15 = connectionPool14.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient11.setConnectionPool(connectionPool14);
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient2.setConnectionPool(connectionPool14);
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient17.setFollowProtocolRedirects(false);
        com.squareup.okhttp.ConnectionPool connectionPool22 = new com.squareup.okhttp.ConnectionPool((-1), (long) 0);
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient17.setConnectionPool(connectionPool22);
        java.net.ResponseCache responseCache24 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient17.setResponseCache(responseCache24);
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient17.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient27 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler28 = okHttpClient27.getCookieHandler();
        boolean boolean29 = okHttpClient27.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator30 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient27.setAuthenticator(okAuthenticator30);
        java.net.ResponseCache responseCache32 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient27.setResponseCache(responseCache32);
        com.squareup.okhttp.ConnectionPool connectionPool36 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) -1);
        connectionPool36.evictAll();
        okHttpClient27.connectionPool = connectionPool36;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory39 = okHttpClient27.sslSocketFactory;
        java.net.Proxy proxy40 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient41 = okHttpClient27.setProxy(proxy40);
        com.squareup.okhttp.OkHttpClient okHttpClient42 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler43 = okHttpClient42.getCookieHandler();
        boolean boolean44 = okHttpClient42.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient45 = okHttpClient42.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet46 = okHttpClient45.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient47 = okHttpClient45.copyWithDefaults();
        java.net.ProxySelector proxySelector48 = okHttpClient45.getProxySelector();
        okHttpClient41.proxySelector = proxySelector48;
        boolean boolean50 = okHttpClient41.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient51 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler52 = okHttpClient51.getCookieHandler();
        boolean boolean53 = okHttpClient51.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient54 = okHttpClient51.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet55 = okHttpClient54.failedRoutes;
        boolean boolean56 = okHttpClient54.getFollowProtocolRedirects();
        java.net.Proxy proxy57 = java.net.Proxy.NO_PROXY;
        okHttpClient54.proxy = proxy57;
        java.lang.String str59 = proxy57.toString();
        java.lang.String str60 = proxy57.toString();
        com.squareup.okhttp.OkHttpClient okHttpClient61 = okHttpClient41.setProxy(proxy57);
        java.lang.String str62 = proxy57.toString();
        com.squareup.okhttp.OkHttpClient okHttpClient63 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler64 = okHttpClient63.getCookieHandler();
        boolean boolean65 = okHttpClient63.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator66 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient67 = okHttpClient63.setAuthenticator(okAuthenticator66);
        java.net.Proxy proxy68 = okHttpClient63.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient69 = okHttpClient63.copyWithDefaults();
        java.net.CookieHandler cookieHandler70 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient71 = okHttpClient63.setCookieHandler(cookieHandler70);
        com.squareup.okhttp.OkHttpClient okHttpClient72 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler73 = okHttpClient72.getCookieHandler();
        boolean boolean74 = okHttpClient72.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient75 = okHttpClient72.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier76 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient77 = okHttpClient75.setHostnameVerifier(hostnameVerifier76);
        java.net.ResponseCache responseCache78 = okHttpClient77.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator79 = okHttpClient77.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier80 = okHttpClient77.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory81 = okHttpClient77.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient82 = okHttpClient63.setSSLSocketFactory(sSLSocketFactory81);
        javax.net.ssl.HostnameVerifier hostnameVerifier83 = okHttpClient82.hostnameVerifier;
        boolean boolean84 = proxy57.equals((java.lang.Object) hostnameVerifier83);
        com.squareup.okhttp.OkHttpClient okHttpClient85 = okHttpClient17.setProxy(proxy57);
        com.squareup.okhttp.OkHttpClient okHttpClient86 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector87 = null;
        okHttpClient86.proxySelector = proxySelector87;
        java.net.ProxySelector proxySelector89 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient90 = okHttpClient86.setProxySelector(proxySelector89);
        java.net.ProxySelector proxySelector91 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient92 = okHttpClient86.setProxySelector(proxySelector91);
        java.net.ResponseCache responseCache93 = okHttpClient86.responseCache;
        java.net.ProxySelector proxySelector94 = okHttpClient86.getProxySelector();
        java.net.ProxySelector proxySelector95 = okHttpClient86.proxySelector;
        com.squareup.okhttp.OkHttpClient okHttpClient96 = okHttpClient85.setProxySelector(proxySelector95);
        java.net.ResponseCache responseCache97 = null;
        okHttpClient96.responseCache = responseCache97;
        org.junit.Assert.assertNotNull(proxy0);
        org.junit.Assert.assertNull(socketAddress1);
        org.junit.Assert.assertNull(connectionPool5);
        org.junit.Assert.assertNull(connectionPool6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(cookieHandler9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertNotNull(okHttpClient25);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNull(cookieHandler28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNotNull(okHttpClient33);
        org.junit.Assert.assertNull(sSLSocketFactory39);
        org.junit.Assert.assertNotNull(proxy40);
        org.junit.Assert.assertNotNull(okHttpClient41);
        org.junit.Assert.assertNull(cookieHandler43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(okHttpClient45);
        org.junit.Assert.assertNotNull(routeSet46);
        org.junit.Assert.assertNotNull(okHttpClient47);
// flaky:         org.junit.Assert.assertNull(proxySelector48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(cookieHandler52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(okHttpClient54);
        org.junit.Assert.assertNotNull(routeSet55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(proxy57);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "DIRECT" + "'", str59, "DIRECT");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "DIRECT" + "'", str60, "DIRECT");
        org.junit.Assert.assertNotNull(okHttpClient61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "DIRECT" + "'", str62, "DIRECT");
        org.junit.Assert.assertNull(cookieHandler64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(okHttpClient67);
        org.junit.Assert.assertNull(proxy68);
        org.junit.Assert.assertNotNull(okHttpClient69);
        org.junit.Assert.assertNotNull(okHttpClient71);
        org.junit.Assert.assertNull(cookieHandler73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(okHttpClient75);
        org.junit.Assert.assertNotNull(okHttpClient77);
        org.junit.Assert.assertNull(responseCache78);
        org.junit.Assert.assertNotNull(okAuthenticator79);
        org.junit.Assert.assertNull(hostnameVerifier80);
        org.junit.Assert.assertNotNull(sSLSocketFactory81);
        org.junit.Assert.assertNotNull(okHttpClient82);
        org.junit.Assert.assertNull(hostnameVerifier83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(okHttpClient85);
        org.junit.Assert.assertNotNull(okHttpClient90);
// flaky:         org.junit.Assert.assertNull(proxySelector91);
        org.junit.Assert.assertNotNull(okHttpClient92);
        org.junit.Assert.assertNull(responseCache93);
// flaky:         org.junit.Assert.assertNull(proxySelector94);
// flaky:         org.junit.Assert.assertNull(proxySelector95);
        org.junit.Assert.assertNotNull(okHttpClient96);
    }

    @Test
    public void test03500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03500");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        java.net.CookieHandler cookieHandler1 = okHttpClient0.getCookieHandler();
        boolean boolean2 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet4 = okHttpClient3.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient3.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        java.net.ProxySelector proxySelector7 = null;
        okHttpClient6.proxySelector = proxySelector7;
        java.net.ProxySelector proxySelector9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient6.setProxySelector(proxySelector9);
        java.net.ProxySelector proxySelector11 = java.net.ProxySelector.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient6.setProxySelector(proxySelector11);
        java.net.ProxySelector.setDefault(proxySelector11);
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient5.setProxySelector(proxySelector11);
        boolean boolean15 = okHttpClient14.getFollowProtocolRedirects();
        java.net.ProxySelector proxySelector16 = okHttpClient14.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory17 = okHttpClient14.sslSocketFactory;
        java.net.Socket socket18 = sSLSocketFactory17.createSocket();
        java.net.InetAddress inetAddress19 = null;
        java.net.InetAddress inetAddress21 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket23 = sSLSocketFactory17.createSocket(inetAddress19, (int) (byte) -1, inetAddress21, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: port out of range:-1");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(cookieHandler1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertNotNull(routeSet4);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNotNull(okHttpClient10);
// flaky:         org.junit.Assert.assertNull(proxySelector11);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertNotNull(okHttpClient14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
// flaky:         org.junit.Assert.assertNull(proxySelector16);
        org.junit.Assert.assertNotNull(sSLSocketFactory17);
        org.junit.Assert.assertNotNull(socket18);
        org.junit.Assert.assertEquals(socket18.toString(), "Socket[unconnected]");
    }
}
