import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest14 {

    public static boolean debug = false;

    @Test
    public void test07001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07001");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.OkAuthenticator okAuthenticator12 = okHttpClient11.getAuthenticator();
        java.util.List<java.lang.String> strList13 = okHttpClient11.transports;
        java.net.ProxySelector proxySelector14 = okHttpClient11.getProxySelector();
        java.net.ResponseCache responseCache15 = okHttpClient11.responseCache;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient11.copyWithDefaults();
        okHttpClient11.followProtocolRedirects = false;
        javax.net.ssl.HostnameVerifier hostnameVerifier19 = okHttpClient11.getHostnameVerifier();
        java.util.List<java.lang.String> strList20 = okHttpClient11.getTransports();
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(okAuthenticator12);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNull(proxySelector14);
        org.junit.Assert.assertNull(responseCache15);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNull(hostnameVerifier19);
        org.junit.Assert.assertNull(strList20);
    }

    @Test
    public void test07002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07002");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.Proxy proxy8 = null;
        okHttpClient0.proxy = proxy8;
        boolean boolean10 = okHttpClient0.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        java.util.Set<com.squareup.okhttp.Route> routeSet12 = okHttpClient0.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        java.net.ProxySelector proxySelector14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient13.setProxySelector(proxySelector14);
        com.squareup.okhttp.ConnectionPool connectionPool16 = okHttpClient13.getConnectionPool();
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(routeSet12);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNull(connectionPool16);
    }

    @Test
    public void test07003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07003");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        boolean boolean3 = okHttpClient0.getFollowProtocolRedirects();
        java.util.List<java.lang.String> strList4 = okHttpClient0.transports;
        com.squareup.okhttp.OkAuthenticator okAuthenticator5 = okHttpClient0.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient6.setFollowProtocolRedirects(true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(okAuthenticator5);
        org.junit.Assert.assertNotNull(okHttpClient6);
        org.junit.Assert.assertNotNull(okHttpClient8);
    }

    @Test
    public void test07004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07004");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.CookieHandler cookieHandler5 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = null;
        okHttpClient6.hostnameVerifier = hostnameVerifier7;
        java.net.ResponseCache responseCache9 = null;
        okHttpClient6.responseCache = responseCache9;
        java.util.List<java.lang.String> strList11 = okHttpClient6.transports;
        com.squareup.okhttp.ConnectionPool connectionPool12 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient6.connectionPool = connectionPool12;
        java.net.Proxy proxy14 = null;
        okHttpClient6.proxy = proxy14;
        java.util.Set<com.squareup.okhttp.Route> routeSet16 = okHttpClient6.failedRoutes;
        okHttpClient0.failedRoutes = routeSet16;
        java.net.ProxySelector proxySelector18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient0.setProxySelector(proxySelector18);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory20 = null;
        okHttpClient19.sslSocketFactory = sSLSocketFactory20;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient(okHttpClient19);
        java.net.ResponseCache responseCache23 = null;
        okHttpClient22.responseCache = responseCache23;
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient22.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient26 = new com.squareup.okhttp.OkHttpClient(okHttpClient25);
        java.net.CookieHandler cookieHandler27 = okHttpClient25.getCookieHandler();
        java.net.CookieHandler cookieHandler28 = okHttpClient25.getCookieHandler();
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNotNull(routeSet16);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNotNull(okHttpClient25);
        org.junit.Assert.assertNull(cookieHandler27);
        org.junit.Assert.assertNull(cookieHandler28);
    }

    @Test
    public void test07005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07005");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory8 = okHttpClient0.getSslSocketFactory();
        java.net.ProxySelector proxySelector9 = null;
        okHttpClient0.proxySelector = proxySelector9;
        com.squareup.okhttp.ConnectionPool connectionPool11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient0.setConnectionPool(connectionPool11);
        java.net.Proxy proxy13 = okHttpClient0.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient14 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool15 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient14.connectionPool = connectionPool15;
        com.squareup.okhttp.OkAuthenticator okAuthenticator17 = null;
        okHttpClient14.authenticator = okAuthenticator17;
        java.util.List<java.lang.String> strList19 = okHttpClient14.transports;
        java.net.ResponseCache responseCache20 = null;
        okHttpClient14.responseCache = responseCache20;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier23 = null;
        okHttpClient22.hostnameVerifier = hostnameVerifier23;
        java.net.ResponseCache responseCache25 = null;
        okHttpClient22.responseCache = responseCache25;
        javax.net.ssl.HostnameVerifier hostnameVerifier27 = okHttpClient22.hostnameVerifier;
        java.net.Proxy proxy28 = okHttpClient22.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool31 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient22.connectionPool = connectionPool31;
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient22.copyWithDefaults();
        java.net.Proxy proxy34 = okHttpClient33.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier35 = okHttpClient33.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient14.setHostnameVerifier(hostnameVerifier35);
        java.net.CookieHandler cookieHandler37 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient36.setCookieHandler(cookieHandler37);
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient36.copyWithDefaults();
        java.util.List<java.lang.String> strList40 = okHttpClient36.transports;
        com.squareup.okhttp.OkHttpClient okHttpClient41 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier42 = null;
        okHttpClient41.hostnameVerifier = hostnameVerifier42;
        java.net.ResponseCache responseCache44 = null;
        okHttpClient41.responseCache = responseCache44;
        java.util.List<java.lang.String> strList46 = okHttpClient41.transports;
        com.squareup.okhttp.ConnectionPool connectionPool47 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient41.connectionPool = connectionPool47;
        java.net.Proxy proxy49 = null;
        okHttpClient41.proxy = proxy49;
        boolean boolean51 = okHttpClient41.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient52 = okHttpClient41.copyWithDefaults();
        java.net.CookieHandler cookieHandler53 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient54 = okHttpClient52.setCookieHandler(cookieHandler53);
        boolean boolean55 = okHttpClient52.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient56 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool57 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient56.connectionPool = connectionPool57;
        com.squareup.okhttp.OkHttpClient okHttpClient59 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier60 = null;
        okHttpClient59.hostnameVerifier = hostnameVerifier60;
        java.net.ResponseCache responseCache62 = null;
        okHttpClient59.responseCache = responseCache62;
        java.util.List<java.lang.String> strList64 = okHttpClient59.transports;
        com.squareup.okhttp.ConnectionPool connectionPool65 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient59.connectionPool = connectionPool65;
        com.squareup.okhttp.OkHttpClient okHttpClient67 = okHttpClient56.setConnectionPool(connectionPool65);
        java.net.Proxy proxy68 = okHttpClient67.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient69 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool70 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient69.connectionPool = connectionPool70;
        int int72 = connectionPool70.getSpdyConnectionCount();
        okHttpClient67.connectionPool = connectionPool70;
        com.squareup.okhttp.ConnectionPool connectionPool74 = okHttpClient67.getConnectionPool();
        com.squareup.okhttp.Address address75 = null;
        com.squareup.okhttp.Connection connection76 = connectionPool74.get(address75);
        com.squareup.okhttp.OkHttpClient okHttpClient77 = okHttpClient52.setConnectionPool(connectionPool74);
        com.squareup.okhttp.OkHttpClient okHttpClient78 = okHttpClient36.setConnectionPool(connectionPool74);
        java.net.ProxySelector proxySelector79 = null;
        okHttpClient78.proxySelector = proxySelector79;
        com.squareup.okhttp.OkHttpClient okHttpClient81 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier82 = null;
        okHttpClient81.hostnameVerifier = hostnameVerifier82;
        java.net.ResponseCache responseCache84 = null;
        okHttpClient81.responseCache = responseCache84;
        javax.net.ssl.HostnameVerifier hostnameVerifier86 = okHttpClient81.hostnameVerifier;
        java.net.Proxy proxy87 = okHttpClient81.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool90 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient81.connectionPool = connectionPool90;
        com.squareup.okhttp.OkHttpClient okHttpClient92 = okHttpClient81.copyWithDefaults();
        java.net.ResponseCache responseCache93 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient94 = okHttpClient92.setResponseCache(responseCache93);
        java.net.ProxySelector proxySelector95 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient96 = okHttpClient92.setProxySelector(proxySelector95);
        javax.net.ssl.HostnameVerifier hostnameVerifier97 = okHttpClient96.getHostnameVerifier();
        okHttpClient78.hostnameVerifier = hostnameVerifier97;
        okHttpClient0.hostnameVerifier = hostnameVerifier97;
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNull(sSLSocketFactory8);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertNull(proxy13);
        org.junit.Assert.assertNotNull(connectionPool15);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(hostnameVerifier27);
        org.junit.Assert.assertNull(proxy28);
        org.junit.Assert.assertNotNull(okHttpClient33);
        org.junit.Assert.assertNull(proxy34);
        org.junit.Assert.assertNotNull(hostnameVerifier35);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNotNull(okHttpClient39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNotNull(connectionPool47);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(okHttpClient52);
        org.junit.Assert.assertNotNull(okHttpClient54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(connectionPool57);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNotNull(connectionPool65);
        org.junit.Assert.assertNotNull(okHttpClient67);
        org.junit.Assert.assertNull(proxy68);
        org.junit.Assert.assertNotNull(connectionPool70);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertNotNull(connectionPool74);
        org.junit.Assert.assertNull(connection76);
        org.junit.Assert.assertNotNull(okHttpClient77);
        org.junit.Assert.assertNotNull(okHttpClient78);
        org.junit.Assert.assertNull(hostnameVerifier86);
        org.junit.Assert.assertNull(proxy87);
        org.junit.Assert.assertNotNull(okHttpClient92);
        org.junit.Assert.assertNotNull(okHttpClient94);
        org.junit.Assert.assertNotNull(okHttpClient96);
        org.junit.Assert.assertNotNull(hostnameVerifier97);
    }

    @Test
    public void test07006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07006");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        java.net.CookieHandler cookieHandler7 = null;
        okHttpClient0.cookieHandler = cookieHandler7;
        okHttpClient0.followProtocolRedirects = true;
        java.net.CookieHandler cookieHandler11 = okHttpClient0.getCookieHandler();
        java.net.CookieHandler cookieHandler12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient0.setCookieHandler(cookieHandler12);
        boolean boolean14 = okHttpClient0.getFollowProtocolRedirects();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory15 = okHttpClient0.sslSocketFactory;
        com.squareup.okhttp.OkAuthenticator okAuthenticator16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient0.setAuthenticator(okAuthenticator16);
        java.net.URL uRL18 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.HttpURLConnection httpURLConnection19 = okHttpClient0.open(uRL18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNull(cookieHandler11);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(sSLSocketFactory15);
        org.junit.Assert.assertNotNull(okHttpClient17);
    }

    @Test
    public void test07007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07007");
        com.squareup.okhttp.ConnectionPool connectionPool2 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) '#');
        com.squareup.okhttp.Address address3 = null;
        com.squareup.okhttp.Connection connection4 = connectionPool2.get(address3);
        com.squareup.okhttp.Connection connection5 = null;
        // The following exception was thrown during execution in test generation
        try {
            connectionPool2.maybeShare(connection5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(connection4);
    }

    @Test
    public void test07008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07008");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient4.copyWithDefaults();
        com.squareup.okhttp.Route[] routeArray6 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet7 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet7, routeArray6);
        okHttpClient5.failedRoutes = routeSet7;
        java.net.CookieHandler cookieHandler10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient5.setCookieHandler(cookieHandler10);
        com.squareup.okhttp.OkHttpClient okHttpClient12 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier13 = null;
        okHttpClient12.hostnameVerifier = hostnameVerifier13;
        java.net.ResponseCache responseCache15 = null;
        okHttpClient12.responseCache = responseCache15;
        javax.net.ssl.HostnameVerifier hostnameVerifier17 = okHttpClient12.hostnameVerifier;
        java.net.Proxy proxy18 = okHttpClient12.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool21 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient12.connectionPool = connectionPool21;
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient12.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier24 = okHttpClient23.getHostnameVerifier();
        okHttpClient5.hostnameVerifier = hostnameVerifier24;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier27 = null;
        okHttpClient26.hostnameVerifier = hostnameVerifier27;
        java.net.ProxySelector proxySelector29 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient30 = okHttpClient26.setProxySelector(proxySelector29);
        java.net.ResponseCache responseCache31 = null;
        okHttpClient30.responseCache = responseCache31;
        javax.net.ssl.HostnameVerifier hostnameVerifier33 = okHttpClient30.hostnameVerifier;
        java.util.List<java.lang.String> strList34 = okHttpClient30.getTransports();
        com.squareup.okhttp.OkHttpClient okHttpClient35 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier36 = null;
        okHttpClient35.hostnameVerifier = hostnameVerifier36;
        java.net.ResponseCache responseCache38 = null;
        okHttpClient35.responseCache = responseCache38;
        javax.net.ssl.HostnameVerifier hostnameVerifier40 = okHttpClient35.hostnameVerifier;
        java.net.Proxy proxy41 = okHttpClient35.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient42 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache43 = okHttpClient42.okResponseCache();
        java.net.ResponseCache responseCache44 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient45 = okHttpClient42.setResponseCache(responseCache44);
        java.lang.String[] strArray47 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList48 = new java.util.ArrayList<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        okHttpClient42.transports = strList48;
        okHttpClient35.transports = strList48;
        com.squareup.okhttp.OkHttpClient.DEFAULT_TRANSPORTS = strList48;
        com.squareup.okhttp.OkHttpClient.DEFAULT_TRANSPORTS = strList48;
        okHttpClient30.transports = strList48;
        // The following exception was thrown during execution in test generation
        try {
            com.squareup.okhttp.OkHttpClient okHttpClient55 = okHttpClient5.setTransports((java.util.List<java.lang.String>) strList48);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: transports doesn't contain http/1.1: [hi!]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNotNull(routeArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(hostnameVerifier17);
        org.junit.Assert.assertNull(proxy18);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertNotNull(hostnameVerifier24);
        org.junit.Assert.assertNotNull(okHttpClient30);
        org.junit.Assert.assertNull(hostnameVerifier33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNull(hostnameVerifier40);
        org.junit.Assert.assertNull(proxy41);
        org.junit.Assert.assertNull(okResponseCache43);
        org.junit.Assert.assertNotNull(okHttpClient45);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
    }

    @Test
    public void test07009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07009");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.ResponseCache responseCache5 = null;
        okHttpClient4.responseCache = responseCache5;
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = okHttpClient4.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient4.setFollowProtocolRedirects(false);
        com.squareup.okhttp.OkHttpClient okHttpClient10 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier11 = null;
        okHttpClient10.hostnameVerifier = hostnameVerifier11;
        java.net.ResponseCache responseCache13 = null;
        okHttpClient10.responseCache = responseCache13;
        java.util.List<java.lang.String> strList15 = okHttpClient10.transports;
        com.squareup.okhttp.ConnectionPool connectionPool16 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient10.connectionPool = connectionPool16;
        com.squareup.okhttp.ConnectionPool connectionPool18 = okHttpClient10.connectionPool;
        int int19 = connectionPool18.getHttpConnectionCount();
        okHttpClient4.connectionPool = connectionPool18;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = new com.squareup.okhttp.OkHttpClient(okHttpClient4);
        java.net.ResponseCache responseCache22 = okHttpClient4.responseCache;
        javax.net.ssl.HostnameVerifier hostnameVerifier23 = okHttpClient4.getHostnameVerifier();
        java.net.ResponseCache responseCache24 = okHttpClient4.getResponseCache();
        java.util.List<java.lang.String> strList25 = okHttpClient4.getTransports();
        java.net.CookieHandler cookieHandler26 = null;
        okHttpClient4.cookieHandler = cookieHandler26;
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(hostnameVerifier7);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(connectionPool16);
        org.junit.Assert.assertNotNull(connectionPool18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNull(responseCache22);
        org.junit.Assert.assertNull(hostnameVerifier23);
        org.junit.Assert.assertNull(responseCache24);
        org.junit.Assert.assertNull(strList25);
    }

    @Test
    public void test07010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07010");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.CookieHandler cookieHandler8 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache9 = okHttpClient0.okResponseCache();
        java.net.CookieHandler cookieHandler10 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        java.net.Proxy proxy12 = java.net.Proxy.NO_PROXY;
        boolean boolean14 = proxy12.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type15 = proxy12.type();
        java.net.SocketAddress socketAddress16 = proxy12.address();
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient0.setProxy(proxy12);
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier19 = null;
        okHttpClient18.hostnameVerifier = hostnameVerifier19;
        java.net.ResponseCache responseCache21 = null;
        okHttpClient18.responseCache = responseCache21;
        java.util.List<java.lang.String> strList23 = okHttpClient18.transports;
        com.squareup.okhttp.ConnectionPool connectionPool24 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient18.connectionPool = connectionPool24;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient18.copyWithDefaults();
        java.net.ProxySelector proxySelector27 = okHttpClient26.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory28 = okHttpClient26.getSslSocketFactory();
        okHttpClient17.sslSocketFactory = sSLSocketFactory28;
        java.lang.String[] strArray30 = sSLSocketFactory28.getDefaultCipherSuites();
        java.lang.String[] strArray31 = sSLSocketFactory28.getDefaultCipherSuites();
        java.lang.String[] strArray32 = sSLSocketFactory28.getSupportedCipherSuites();
        java.net.Socket socket33 = sSLSocketFactory28.createSocket();
        com.squareup.okhttp.OkHttpClient okHttpClient34 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier35 = null;
        okHttpClient34.hostnameVerifier = hostnameVerifier35;
        java.net.ResponseCache responseCache37 = null;
        okHttpClient34.responseCache = responseCache37;
        javax.net.ssl.HostnameVerifier hostnameVerifier39 = okHttpClient34.hostnameVerifier;
        java.net.Proxy proxy40 = okHttpClient34.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool43 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient34.connectionPool = connectionPool43;
        com.squareup.okhttp.OkHttpClient okHttpClient45 = okHttpClient34.copyWithDefaults();
        java.net.ResponseCache responseCache46 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient47 = okHttpClient45.setResponseCache(responseCache46);
        javax.net.ssl.HostnameVerifier hostnameVerifier48 = okHttpClient47.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient49 = okHttpClient47.copyWithDefaults();
        java.util.List<java.lang.String> strList50 = okHttpClient47.getTransports();
        com.squareup.okhttp.OkHttpClient okHttpClient51 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier52 = null;
        okHttpClient51.hostnameVerifier = hostnameVerifier52;
        java.net.ResponseCache responseCache54 = null;
        okHttpClient51.responseCache = responseCache54;
        java.util.List<java.lang.String> strList56 = okHttpClient51.transports;
        java.net.Proxy proxy57 = java.net.Proxy.NO_PROXY;
        boolean boolean59 = proxy57.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type60 = proxy57.type();
        java.net.SocketAddress socketAddress61 = proxy57.address();
        com.squareup.okhttp.OkHttpClient okHttpClient62 = okHttpClient51.setProxy(proxy57);
        com.squareup.okhttp.OkHttpClient okHttpClient63 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier64 = null;
        okHttpClient63.hostnameVerifier = hostnameVerifier64;
        java.net.ProxySelector proxySelector66 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient67 = okHttpClient63.setProxySelector(proxySelector66);
        javax.net.ssl.HostnameVerifier hostnameVerifier68 = okHttpClient63.hostnameVerifier;
        java.net.CookieHandler cookieHandler69 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient70 = okHttpClient63.setCookieHandler(cookieHandler69);
        java.net.ResponseCache responseCache71 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient72 = okHttpClient70.setResponseCache(responseCache71);
        com.squareup.okhttp.OkHttpClient okHttpClient73 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier74 = null;
        okHttpClient73.hostnameVerifier = hostnameVerifier74;
        java.net.ResponseCache responseCache76 = null;
        okHttpClient73.responseCache = responseCache76;
        java.util.List<java.lang.String> strList78 = okHttpClient73.transports;
        com.squareup.okhttp.ConnectionPool connectionPool79 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient73.connectionPool = connectionPool79;
        com.squareup.okhttp.OkHttpClient okHttpClient81 = okHttpClient73.copyWithDefaults();
        java.net.ProxySelector proxySelector82 = okHttpClient81.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory83 = okHttpClient81.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient84 = okHttpClient70.setSSLSocketFactory(sSLSocketFactory83);
        boolean boolean85 = proxy57.equals((java.lang.Object) sSLSocketFactory83);
        java.lang.String[] strArray86 = sSLSocketFactory83.getSupportedCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient87 = okHttpClient47.setSSLSocketFactory(sSLSocketFactory83);
        java.net.Socket socket88 = sSLSocketFactory83.createSocket();
        java.lang.String[] strArray89 = sSLSocketFactory83.getSupportedCipherSuites();
        java.net.Socket socket90 = sSLSocketFactory83.createSocket();
        java.io.InputStream inputStream91 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket93 = sSLSocketFactory28.createSocket(socket90, inputStream91, true);
            org.junit.Assert.fail("Expected exception of type java.net.SocketException; message: Underlying socket is not connected");
        } catch (java.net.SocketException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNull(cookieHandler8);
        org.junit.Assert.assertNull(okResponseCache9);
        org.junit.Assert.assertNull(cookieHandler10);
        org.junit.Assert.assertNotNull(proxy12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + type15 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type15.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress16);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNotNull(connectionPool24);
        org.junit.Assert.assertNotNull(okHttpClient26);
// flaky:         org.junit.Assert.assertNull(proxySelector27);
        org.junit.Assert.assertNotNull(sSLSocketFactory28);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(socket33);
        org.junit.Assert.assertEquals(socket33.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNull(hostnameVerifier39);
        org.junit.Assert.assertNull(proxy40);
        org.junit.Assert.assertNotNull(okHttpClient45);
        org.junit.Assert.assertNotNull(okHttpClient47);
        org.junit.Assert.assertNotNull(hostnameVerifier48);
        org.junit.Assert.assertNotNull(okHttpClient49);
        org.junit.Assert.assertNotNull(strList50);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNotNull(proxy57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + type60 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type60.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress61);
        org.junit.Assert.assertNotNull(okHttpClient62);
        org.junit.Assert.assertNotNull(okHttpClient67);
        org.junit.Assert.assertNull(hostnameVerifier68);
        org.junit.Assert.assertNotNull(okHttpClient70);
        org.junit.Assert.assertNotNull(okHttpClient72);
        org.junit.Assert.assertNull(strList78);
        org.junit.Assert.assertNotNull(connectionPool79);
        org.junit.Assert.assertNotNull(okHttpClient81);
// flaky:         org.junit.Assert.assertNull(proxySelector82);
        org.junit.Assert.assertNotNull(sSLSocketFactory83);
        org.junit.Assert.assertNotNull(okHttpClient84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertNotNull(okHttpClient87);
        org.junit.Assert.assertNotNull(socket88);
        org.junit.Assert.assertEquals(socket88.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(strArray89);
        org.junit.Assert.assertNotNull(socket90);
        org.junit.Assert.assertEquals(socket90.toString(), "Socket[unconnected]");
    }

    @Test
    public void test07011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07011");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.CookieHandler cookieHandler8 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache9 = okHttpClient0.okResponseCache();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory10 = null;
        okHttpClient0.sslSocketFactory = sSLSocketFactory10;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory12);
        java.net.ProxySelector proxySelector14 = null;
        okHttpClient0.proxySelector = proxySelector14;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool17 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient16.connectionPool = connectionPool17;
        java.net.ResponseCache responseCache19 = null;
        okHttpClient16.responseCache = responseCache19;
        java.net.Proxy proxy21 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress22 = proxy21.address();
        java.net.SocketAddress socketAddress23 = proxy21.address();
        okHttpClient16.proxy = proxy21;
        com.squareup.okhttp.ConnectionPool connectionPool27 = new com.squareup.okhttp.ConnectionPool((-1), (long) '#');
        com.squareup.okhttp.Address address28 = null;
        com.squareup.okhttp.Connection connection29 = connectionPool27.get(address28);
        int int30 = connectionPool27.getSpdyConnectionCount();
        connectionPool27.evictAll();
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient16.setConnectionPool(connectionPool27);
        com.squareup.okhttp.OkHttpClient okHttpClient33 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier34 = null;
        okHttpClient33.hostnameVerifier = hostnameVerifier34;
        java.net.ProxySelector proxySelector36 = okHttpClient33.proxySelector;
        java.net.ProxySelector proxySelector37 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient33.setProxySelector(proxySelector37);
        com.squareup.okhttp.OkHttpClient okHttpClient39 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier40 = null;
        okHttpClient39.hostnameVerifier = hostnameVerifier40;
        java.net.ResponseCache responseCache42 = null;
        okHttpClient39.responseCache = responseCache42;
        java.util.List<java.lang.String> strList44 = okHttpClient39.transports;
        com.squareup.okhttp.ConnectionPool connectionPool45 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient39.connectionPool = connectionPool45;
        com.squareup.okhttp.OkHttpClient okHttpClient47 = okHttpClient39.copyWithDefaults();
        java.net.ProxySelector proxySelector48 = okHttpClient47.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory49 = okHttpClient47.getSslSocketFactory();
        okHttpClient33.sslSocketFactory = sSLSocketFactory49;
        okHttpClient16.sslSocketFactory = sSLSocketFactory49;
        com.squareup.okhttp.OkHttpClient okHttpClient52 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory49);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory53 = okHttpClient52.getSslSocketFactory();
        java.net.InetAddress inetAddress56 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket58 = sSLSocketFactory53.createSocket("DIRECT", (int) (byte) 10, inetAddress56, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.net.BindException; message: Permission denied (Bind failed)");
        } catch (java.net.BindException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNull(cookieHandler8);
        org.junit.Assert.assertNull(okResponseCache9);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNotNull(connectionPool17);
        org.junit.Assert.assertNotNull(proxy21);
        org.junit.Assert.assertNull(socketAddress22);
        org.junit.Assert.assertNull(socketAddress23);
        org.junit.Assert.assertNull(connection29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertNull(proxySelector36);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNotNull(connectionPool45);
        org.junit.Assert.assertNotNull(okHttpClient47);
// flaky:         org.junit.Assert.assertNull(proxySelector48);
        org.junit.Assert.assertNotNull(sSLSocketFactory49);
        org.junit.Assert.assertNotNull(okHttpClient52);
        org.junit.Assert.assertNotNull(sSLSocketFactory53);
    }

    @Test
    public void test07012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07012");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.OkAuthenticator okAuthenticator12 = okHttpClient11.getAuthenticator();
        java.net.ProxySelector proxySelector13 = okHttpClient11.getProxySelector();
        java.net.ProxySelector proxySelector14 = null;
        okHttpClient11.proxySelector = proxySelector14;
        java.net.ProxySelector proxySelector16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient11.setProxySelector(proxySelector16);
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient17.copyWithDefaults();
        java.net.CookieHandler cookieHandler19 = okHttpClient18.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient20 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier21 = null;
        okHttpClient20.hostnameVerifier = hostnameVerifier21;
        java.net.ResponseCache responseCache23 = null;
        okHttpClient20.responseCache = responseCache23;
        javax.net.ssl.HostnameVerifier hostnameVerifier25 = okHttpClient20.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient20.setFollowProtocolRedirects(false);
        java.net.Proxy proxy28 = okHttpClient20.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier29 = okHttpClient20.getHostnameVerifier();
        java.util.Set<com.squareup.okhttp.Route> routeSet30 = okHttpClient20.failedRoutes;
        com.squareup.okhttp.ConnectionPool connectionPool33 = new com.squareup.okhttp.ConnectionPool((int) '4', (long) (short) 10);
        int int34 = connectionPool33.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient20.setConnectionPool(connectionPool33);
        com.squareup.okhttp.OkHttpClient okHttpClient36 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier37 = null;
        okHttpClient36.hostnameVerifier = hostnameVerifier37;
        java.net.ResponseCache responseCache39 = null;
        okHttpClient36.responseCache = responseCache39;
        javax.net.ssl.HostnameVerifier hostnameVerifier41 = okHttpClient36.hostnameVerifier;
        java.net.Proxy proxy42 = okHttpClient36.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool45 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient36.connectionPool = connectionPool45;
        com.squareup.okhttp.OkHttpClient okHttpClient47 = okHttpClient36.copyWithDefaults();
        java.net.CookieHandler cookieHandler48 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient49 = okHttpClient47.setCookieHandler(cookieHandler48);
        java.util.List<java.lang.String> strList50 = okHttpClient47.getTransports();
        okHttpClient20.transports = strList50;
        com.squareup.okhttp.OkHttpClient okHttpClient52 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier53 = null;
        okHttpClient52.hostnameVerifier = hostnameVerifier53;
        java.net.ResponseCache responseCache55 = null;
        okHttpClient52.responseCache = responseCache55;
        java.util.List<java.lang.String> strList57 = okHttpClient52.transports;
        java.net.Proxy proxy58 = java.net.Proxy.NO_PROXY;
        boolean boolean60 = proxy58.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type61 = proxy58.type();
        java.net.SocketAddress socketAddress62 = proxy58.address();
        com.squareup.okhttp.OkHttpClient okHttpClient63 = okHttpClient52.setProxy(proxy58);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory64 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient65 = okHttpClient63.setSSLSocketFactory(sSLSocketFactory64);
        java.net.CookieHandler cookieHandler66 = okHttpClient63.cookieHandler;
        java.net.ProxySelector proxySelector67 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient68 = okHttpClient63.setProxySelector(proxySelector67);
        java.net.ResponseCache responseCache69 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient70 = okHttpClient63.setResponseCache(responseCache69);
        com.squareup.okhttp.ConnectionPool connectionPool73 = new com.squareup.okhttp.ConnectionPool((int) '4', (long) 1);
        com.squareup.okhttp.OkHttpClient okHttpClient74 = okHttpClient70.setConnectionPool(connectionPool73);
        java.util.Set<com.squareup.okhttp.Route> routeSet75 = okHttpClient70.failedRoutes;
        okHttpClient20.failedRoutes = routeSet75;
        okHttpClient18.failedRoutes = routeSet75;
        java.net.ResponseCache responseCache78 = null;
        okHttpClient18.responseCache = responseCache78;
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(okAuthenticator12);
        org.junit.Assert.assertNull(proxySelector13);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNull(cookieHandler19);
        org.junit.Assert.assertNull(hostnameVerifier25);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNull(proxy28);
        org.junit.Assert.assertNull(hostnameVerifier29);
        org.junit.Assert.assertNotNull(routeSet30);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNull(hostnameVerifier41);
        org.junit.Assert.assertNull(proxy42);
        org.junit.Assert.assertNotNull(okHttpClient47);
        org.junit.Assert.assertNotNull(okHttpClient49);
        org.junit.Assert.assertNotNull(strList50);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNotNull(proxy58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + type61 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type61.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress62);
        org.junit.Assert.assertNotNull(okHttpClient63);
        org.junit.Assert.assertNotNull(okHttpClient65);
        org.junit.Assert.assertNull(cookieHandler66);
        org.junit.Assert.assertNotNull(okHttpClient68);
        org.junit.Assert.assertNotNull(okHttpClient70);
        org.junit.Assert.assertNotNull(okHttpClient74);
        org.junit.Assert.assertNotNull(routeSet75);
    }

    @Test
    public void test07013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07013");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.ConnectionPool connectionPool12 = okHttpClient11.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator13 = okHttpClient11.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool16 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient11.connectionPool = connectionPool16;
        java.net.ResponseCache responseCache18 = okHttpClient11.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory19 = okHttpClient11.sslSocketFactory;
        java.net.Proxy proxy20 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress21 = proxy20.address();
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient11.setProxy(proxy20);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory23 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient11.setSSLSocketFactory(sSLSocketFactory23);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory25 = okHttpClient24.sslSocketFactory;
        com.squareup.okhttp.OkAuthenticator okAuthenticator26 = okHttpClient24.getAuthenticator();
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNull(okAuthenticator13);
        org.junit.Assert.assertNull(responseCache18);
        org.junit.Assert.assertNull(sSLSocketFactory19);
        org.junit.Assert.assertNotNull(proxy20);
        org.junit.Assert.assertNull(socketAddress21);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNull(sSLSocketFactory25);
        org.junit.Assert.assertNull(okAuthenticator26);
    }

    @Test
    public void test07014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07014");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.CookieHandler cookieHandler5 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = null;
        okHttpClient6.hostnameVerifier = hostnameVerifier7;
        java.net.ResponseCache responseCache9 = null;
        okHttpClient6.responseCache = responseCache9;
        java.util.List<java.lang.String> strList11 = okHttpClient6.transports;
        com.squareup.okhttp.ConnectionPool connectionPool12 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient6.connectionPool = connectionPool12;
        java.net.Proxy proxy14 = null;
        okHttpClient6.proxy = proxy14;
        java.util.Set<com.squareup.okhttp.Route> routeSet16 = okHttpClient6.failedRoutes;
        okHttpClient0.failedRoutes = routeSet16;
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient0.setHostnameVerifier(hostnameVerifier18);
        java.net.ResponseCache responseCache20 = okHttpClient0.responseCache;
        com.squareup.okhttp.OkAuthenticator okAuthenticator21 = okHttpClient0.authenticator;
        java.net.ProxySelector proxySelector22 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient0.setProxySelector(proxySelector22);
        com.squareup.okhttp.ConnectionPool connectionPool26 = new com.squareup.okhttp.ConnectionPool((int) '4', (long) '4');
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient23.setConnectionPool(connectionPool26);
        com.squareup.okhttp.Connection connection28 = null;
        // The following exception was thrown during execution in test generation
        try {
            connectionPool26.maybeShare(connection28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNotNull(routeSet16);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNull(responseCache20);
        org.junit.Assert.assertNull(okAuthenticator21);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertNotNull(okHttpClient27);
    }

    @Test
    public void test07015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07015");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        okHttpClient0.authenticator = okAuthenticator3;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.copyWithDefaults();
        java.net.ResponseCache responseCache6 = okHttpClient0.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator7 = okHttpClient0.getAuthenticator();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier9 = null;
        okHttpClient8.hostnameVerifier = hostnameVerifier9;
        java.net.ResponseCache responseCache11 = null;
        okHttpClient8.responseCache = responseCache11;
        javax.net.ssl.HostnameVerifier hostnameVerifier13 = okHttpClient8.hostnameVerifier;
        java.net.Proxy proxy14 = okHttpClient8.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool17 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient8.connectionPool = connectionPool17;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient8.copyWithDefaults();
        java.net.Proxy proxy20 = okHttpClient19.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient21 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier22 = null;
        okHttpClient21.hostnameVerifier = hostnameVerifier22;
        java.net.ResponseCache responseCache24 = null;
        okHttpClient21.responseCache = responseCache24;
        javax.net.ssl.HostnameVerifier hostnameVerifier26 = okHttpClient21.hostnameVerifier;
        java.net.Proxy proxy27 = okHttpClient21.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool30 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient21.connectionPool = connectionPool30;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient21.copyWithDefaults();
        java.net.ResponseCache responseCache33 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient32.setResponseCache(responseCache33);
        okHttpClient34.followProtocolRedirects = true;
        java.util.List<java.lang.String> strList37 = okHttpClient34.getTransports();
        okHttpClient19.transports = strList37;
        com.squareup.okhttp.ConnectionPool connectionPool41 = new com.squareup.okhttp.ConnectionPool((int) (byte) 0, (long) (byte) 100);
        okHttpClient19.connectionPool = connectionPool41;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory43 = okHttpClient19.sslSocketFactory;
        java.net.Socket socket44 = sSLSocketFactory43.createSocket();
        com.squareup.okhttp.OkHttpClient okHttpClient45 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory43);
        com.squareup.okhttp.OkHttpClient okHttpClient46 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool47 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient46.connectionPool = connectionPool47;
        com.squareup.okhttp.OkHttpClient okHttpClient49 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier50 = null;
        okHttpClient49.hostnameVerifier = hostnameVerifier50;
        java.net.ResponseCache responseCache52 = null;
        okHttpClient49.responseCache = responseCache52;
        java.util.List<java.lang.String> strList54 = okHttpClient49.transports;
        com.squareup.okhttp.ConnectionPool connectionPool55 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient49.connectionPool = connectionPool55;
        com.squareup.okhttp.OkHttpClient okHttpClient57 = okHttpClient46.setConnectionPool(connectionPool55);
        com.squareup.okhttp.ConnectionPool connectionPool58 = okHttpClient57.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator59 = okHttpClient57.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool62 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient57.connectionPool = connectionPool62;
        java.net.ResponseCache responseCache64 = okHttpClient57.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory65 = okHttpClient57.sslSocketFactory;
        com.squareup.okhttp.OkHttpClient okHttpClient66 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier67 = null;
        okHttpClient66.hostnameVerifier = hostnameVerifier67;
        java.net.ResponseCache responseCache69 = null;
        okHttpClient66.responseCache = responseCache69;
        javax.net.ssl.HostnameVerifier hostnameVerifier71 = okHttpClient66.hostnameVerifier;
        java.net.Proxy proxy72 = okHttpClient66.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool75 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient66.connectionPool = connectionPool75;
        boolean boolean77 = okHttpClient66.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient78 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier79 = null;
        okHttpClient78.hostnameVerifier = hostnameVerifier79;
        java.net.ResponseCache responseCache81 = null;
        okHttpClient78.responseCache = responseCache81;
        javax.net.ssl.HostnameVerifier hostnameVerifier83 = okHttpClient78.hostnameVerifier;
        java.net.Proxy proxy84 = okHttpClient78.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool87 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient78.connectionPool = connectionPool87;
        com.squareup.okhttp.OkHttpClient okHttpClient89 = okHttpClient78.copyWithDefaults();
        java.net.Proxy proxy90 = okHttpClient89.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier91 = okHttpClient89.getHostnameVerifier();
        okHttpClient66.hostnameVerifier = hostnameVerifier91;
        okHttpClient57.hostnameVerifier = hostnameVerifier91;
        okHttpClient45.hostnameVerifier = hostnameVerifier91;
        java.net.ResponseCache responseCache95 = null;
        okHttpClient45.responseCache = responseCache95;
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(responseCache6);
        org.junit.Assert.assertNull(okAuthenticator7);
        org.junit.Assert.assertNull(hostnameVerifier13);
        org.junit.Assert.assertNull(proxy14);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNull(proxy20);
        org.junit.Assert.assertNull(hostnameVerifier26);
        org.junit.Assert.assertNull(proxy27);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertNotNull(strList37);
        org.junit.Assert.assertNotNull(sSLSocketFactory43);
        org.junit.Assert.assertNotNull(socket44);
        org.junit.Assert.assertEquals(socket44.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(okHttpClient45);
        org.junit.Assert.assertNotNull(connectionPool47);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNotNull(connectionPool55);
        org.junit.Assert.assertNotNull(okHttpClient57);
        org.junit.Assert.assertNotNull(connectionPool58);
        org.junit.Assert.assertNull(okAuthenticator59);
        org.junit.Assert.assertNull(responseCache64);
        org.junit.Assert.assertNull(sSLSocketFactory65);
        org.junit.Assert.assertNull(hostnameVerifier71);
        org.junit.Assert.assertNull(proxy72);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNull(hostnameVerifier83);
        org.junit.Assert.assertNull(proxy84);
        org.junit.Assert.assertNotNull(okHttpClient89);
        org.junit.Assert.assertNull(proxy90);
        org.junit.Assert.assertNotNull(hostnameVerifier91);
    }

    @Test
    public void test07016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07016");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient0.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.copyWithDefaults();
        java.util.List<java.lang.String> strList12 = okHttpClient0.getTransports();
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient13.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient14.copyWithDefaults();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory16 = okHttpClient15.sslSocketFactory;
        java.lang.String[] strArray17 = sSLSocketFactory16.getDefaultCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier19 = null;
        okHttpClient18.hostnameVerifier = hostnameVerifier19;
        java.net.ProxySelector proxySelector21 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient18.setProxySelector(proxySelector21);
        java.net.ResponseCache responseCache23 = null;
        okHttpClient22.responseCache = responseCache23;
        javax.net.ssl.HostnameVerifier hostnameVerifier25 = okHttpClient22.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient22.setFollowProtocolRedirects(false);
        java.net.ProxySelector proxySelector28 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient27.setProxySelector(proxySelector28);
        com.squareup.okhttp.OkHttpClient okHttpClient30 = okHttpClient29.copyWithDefaults();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory31 = okHttpClient30.sslSocketFactory;
        java.lang.String[] strArray32 = sSLSocketFactory31.getSupportedCipherSuites();
        java.net.Socket socket33 = sSLSocketFactory31.createSocket();
        java.net.Socket socket34 = sSLSocketFactory31.createSocket();
        java.io.InputStream inputStream35 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket37 = sSLSocketFactory16.createSocket(socket34, inputStream35, true);
            org.junit.Assert.fail("Expected exception of type java.net.SocketException; message: Underlying socket is not connected");
        } catch (java.net.SocketException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNotNull(okHttpClient14);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNotNull(sSLSocketFactory16);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNull(hostnameVerifier25);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNotNull(okHttpClient29);
        org.junit.Assert.assertNotNull(okHttpClient30);
        org.junit.Assert.assertNotNull(sSLSocketFactory31);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(socket33);
        org.junit.Assert.assertEquals(socket33.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(socket34);
        org.junit.Assert.assertEquals(socket34.toString(), "Socket[unconnected]");
    }

    @Test
    public void test07017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07017");
        com.squareup.okhttp.ConnectionPool connectionPool2 = new com.squareup.okhttp.ConnectionPool((int) (byte) 100, (long) (byte) -1);
        com.squareup.okhttp.Address address3 = null;
        com.squareup.okhttp.Connection connection4 = connectionPool2.get(address3);
        int int5 = connectionPool2.getConnectionCount();
        java.lang.Class<?> wildcardClass6 = connectionPool2.getClass();
        org.junit.Assert.assertNull(connection4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test07018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07018");
        com.squareup.okhttp.ConnectionPool connectionPool2 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) ' ');
        com.squareup.okhttp.Connection connection3 = null;
        // The following exception was thrown during execution in test generation
        try {
            connectionPool2.recycle(connection3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test07019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07019");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient0.setFollowProtocolRedirects(false);
        java.util.List<java.lang.String> strList8 = okHttpClient7.transports;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = new com.squareup.okhttp.OkHttpClient(okHttpClient7);
        com.squareup.okhttp.OkHttpClient okHttpClient10 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier11 = null;
        okHttpClient10.hostnameVerifier = hostnameVerifier11;
        java.net.ProxySelector proxySelector13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient10.setProxySelector(proxySelector13);
        javax.net.ssl.HostnameVerifier hostnameVerifier15 = okHttpClient10.hostnameVerifier;
        java.net.CookieHandler cookieHandler16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient10.setCookieHandler(cookieHandler16);
        com.squareup.okhttp.OkAuthenticator okAuthenticator18 = okHttpClient17.authenticator;
        java.net.ProxySelector proxySelector19 = okHttpClient17.getProxySelector();
        com.squareup.okhttp.OkHttpClient okHttpClient20 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier21 = null;
        okHttpClient20.hostnameVerifier = hostnameVerifier21;
        java.net.ResponseCache responseCache23 = null;
        okHttpClient20.responseCache = responseCache23;
        java.util.List<java.lang.String> strList25 = okHttpClient20.transports;
        com.squareup.okhttp.ConnectionPool connectionPool26 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient20.connectionPool = connectionPool26;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient20.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient29 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = null;
        okHttpClient29.hostnameVerifier = hostnameVerifier30;
        java.net.ResponseCache responseCache32 = null;
        okHttpClient29.responseCache = responseCache32;
        java.util.List<java.lang.String> strList34 = okHttpClient29.transports;
        com.squareup.okhttp.ConnectionPool connectionPool35 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient29.connectionPool = connectionPool35;
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient29.copyWithDefaults();
        java.net.ProxySelector proxySelector38 = okHttpClient37.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory39 = okHttpClient37.getSslSocketFactory();
        okHttpClient20.sslSocketFactory = sSLSocketFactory39;
        java.net.Socket socket41 = sSLSocketFactory39.createSocket();
        java.net.Socket socket42 = sSLSocketFactory39.createSocket();
        okHttpClient17.sslSocketFactory = sSLSocketFactory39;
        com.squareup.okhttp.OkHttpClient okHttpClient44 = okHttpClient9.setSSLSocketFactory(sSLSocketFactory39);
        java.net.Socket socket45 = sSLSocketFactory39.createSocket();
        java.net.InetAddress inetAddress46 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket48 = sSLSocketFactory39.createSocket(inetAddress46, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.net.ConnectException; message: Connection refused (Connection refused)");
        } catch (java.net.ConnectException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNotNull(okHttpClient7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(okHttpClient14);
        org.junit.Assert.assertNull(hostnameVerifier15);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNull(okAuthenticator18);
        org.junit.Assert.assertNull(proxySelector19);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNotNull(connectionPool26);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(connectionPool35);
        org.junit.Assert.assertNotNull(okHttpClient37);
// flaky:         org.junit.Assert.assertNull(proxySelector38);
        org.junit.Assert.assertNotNull(sSLSocketFactory39);
        org.junit.Assert.assertNotNull(socket41);
        org.junit.Assert.assertEquals(socket41.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(socket42);
        org.junit.Assert.assertEquals(socket42.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(okHttpClient44);
        org.junit.Assert.assertNotNull(socket45);
        org.junit.Assert.assertEquals(socket45.toString(), "Socket[unconnected]");
    }

    @Test
    public void test07020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07020");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache1 = okHttpClient0.okResponseCache();
        java.net.ResponseCache responseCache2 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.setResponseCache(responseCache2);
        java.net.ProxySelector proxySelector4 = okHttpClient0.getProxySelector();
        boolean boolean5 = okHttpClient0.getFollowProtocolRedirects();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory6 = okHttpClient0.getSslSocketFactory();
        java.net.ResponseCache responseCache7 = okHttpClient0.getResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient8.connectionPool = connectionPool9;
        java.net.ResponseCache responseCache11 = null;
        okHttpClient8.responseCache = responseCache11;
        com.squareup.okhttp.OkAuthenticator okAuthenticator13 = null;
        okHttpClient8.authenticator = okAuthenticator13;
        okHttpClient8.followProtocolRedirects = false;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool18 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient17.connectionPool = connectionPool18;
        com.squareup.okhttp.OkAuthenticator okAuthenticator20 = null;
        okHttpClient17.authenticator = okAuthenticator20;
        java.util.List<java.lang.String> strList22 = okHttpClient17.transports;
        com.squareup.okhttp.OkHttpClient okHttpClient23 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier24 = null;
        okHttpClient23.hostnameVerifier = hostnameVerifier24;
        java.net.ResponseCache responseCache26 = null;
        okHttpClient23.responseCache = responseCache26;
        java.util.List<java.lang.String> strList28 = okHttpClient23.transports;
        com.squareup.okhttp.ConnectionPool connectionPool29 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient23.connectionPool = connectionPool29;
        java.net.CookieHandler cookieHandler31 = okHttpClient23.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache32 = okHttpClient23.okResponseCache();
        java.net.CookieHandler cookieHandler33 = okHttpClient23.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient34 = new com.squareup.okhttp.OkHttpClient(okHttpClient23);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory35 = okHttpClient34.sslSocketFactory;
        com.squareup.okhttp.OkAuthenticator okAuthenticator36 = okHttpClient34.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient37 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier38 = null;
        okHttpClient37.hostnameVerifier = hostnameVerifier38;
        java.net.ResponseCache responseCache40 = null;
        okHttpClient37.responseCache = responseCache40;
        java.util.List<java.lang.String> strList42 = okHttpClient37.transports;
        com.squareup.okhttp.ConnectionPool connectionPool43 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient37.connectionPool = connectionPool43;
        java.net.CookieHandler cookieHandler45 = okHttpClient37.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache46 = okHttpClient37.okResponseCache();
        java.net.CookieHandler cookieHandler47 = okHttpClient37.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient48 = new com.squareup.okhttp.OkHttpClient(okHttpClient37);
        com.squareup.okhttp.OkHttpClient okHttpClient49 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier50 = null;
        okHttpClient49.hostnameVerifier = hostnameVerifier50;
        java.net.ProxySelector proxySelector52 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient53 = okHttpClient49.setProxySelector(proxySelector52);
        java.net.CookieHandler cookieHandler54 = okHttpClient49.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient55 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier56 = null;
        okHttpClient55.hostnameVerifier = hostnameVerifier56;
        java.net.ResponseCache responseCache58 = null;
        okHttpClient55.responseCache = responseCache58;
        java.util.List<java.lang.String> strList60 = okHttpClient55.transports;
        com.squareup.okhttp.ConnectionPool connectionPool61 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient55.connectionPool = connectionPool61;
        java.net.Proxy proxy63 = null;
        okHttpClient55.proxy = proxy63;
        java.util.Set<com.squareup.okhttp.Route> routeSet65 = okHttpClient55.failedRoutes;
        okHttpClient49.failedRoutes = routeSet65;
        okHttpClient48.failedRoutes = routeSet65;
        okHttpClient34.failedRoutes = routeSet65;
        okHttpClient17.failedRoutes = routeSet65;
        okHttpClient8.failedRoutes = routeSet65;
        okHttpClient0.failedRoutes = routeSet65;
        com.squareup.okhttp.OkHttpClient okHttpClient72 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        com.squareup.okhttp.OkHttpClient okHttpClient73 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier74 = null;
        okHttpClient73.hostnameVerifier = hostnameVerifier74;
        java.net.ProxySelector proxySelector76 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient77 = okHttpClient73.setProxySelector(proxySelector76);
        com.squareup.okhttp.OkHttpClient okHttpClient78 = okHttpClient77.copyWithDefaults();
        com.squareup.okhttp.Route[] routeArray79 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet80 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet80, routeArray79);
        okHttpClient78.failedRoutes = routeSet80;
        java.net.CookieHandler cookieHandler83 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient84 = okHttpClient78.setCookieHandler(cookieHandler83);
        java.util.List<java.lang.String> strList85 = okHttpClient78.getTransports();
        okHttpClient72.transports = strList85;
        com.squareup.okhttp.OkHttpClient.DEFAULT_TRANSPORTS = strList85;
        org.junit.Assert.assertNull(okResponseCache1);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertNull(proxySelector4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(sSLSocketFactory6);
        org.junit.Assert.assertNull(responseCache7);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(connectionPool18);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNotNull(connectionPool29);
        org.junit.Assert.assertNull(cookieHandler31);
        org.junit.Assert.assertNull(okResponseCache32);
        org.junit.Assert.assertNull(cookieHandler33);
        org.junit.Assert.assertNull(sSLSocketFactory35);
        org.junit.Assert.assertNull(okAuthenticator36);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNotNull(connectionPool43);
        org.junit.Assert.assertNull(cookieHandler45);
        org.junit.Assert.assertNull(okResponseCache46);
        org.junit.Assert.assertNull(cookieHandler47);
        org.junit.Assert.assertNotNull(okHttpClient53);
        org.junit.Assert.assertNull(cookieHandler54);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNotNull(connectionPool61);
        org.junit.Assert.assertNotNull(routeSet65);
        org.junit.Assert.assertNotNull(okHttpClient77);
        org.junit.Assert.assertNotNull(okHttpClient78);
        org.junit.Assert.assertNotNull(routeArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(okHttpClient84);
        org.junit.Assert.assertNotNull(strList85);
    }

    @Test
    public void test07021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07021");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.ConnectionPool connectionPool12 = okHttpClient11.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator13 = okHttpClient11.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool16 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient11.connectionPool = connectionPool16;
        java.net.ResponseCache responseCache18 = okHttpClient11.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory19 = okHttpClient11.sslSocketFactory;
        java.net.Proxy proxy20 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress21 = proxy20.address();
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient11.setProxy(proxy20);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory23 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient11.setSSLSocketFactory(sSLSocketFactory23);
        com.squareup.okhttp.OkHttpClient okHttpClient25 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier26 = null;
        okHttpClient25.hostnameVerifier = hostnameVerifier26;
        java.net.ResponseCache responseCache28 = null;
        okHttpClient25.responseCache = responseCache28;
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = okHttpClient25.hostnameVerifier;
        java.net.Proxy proxy31 = okHttpClient25.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool34 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient25.connectionPool = connectionPool34;
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient25.copyWithDefaults();
        java.net.ResponseCache responseCache37 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient36.setResponseCache(responseCache37);
        com.squareup.okhttp.OkAuthenticator okAuthenticator39 = okHttpClient36.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient40 = okHttpClient11.setAuthenticator(okAuthenticator39);
        java.net.Proxy proxy41 = okHttpClient40.getProxy();
        java.net.SocketAddress socketAddress42 = proxy41.address();
        com.squareup.okhttp.OkHttpClient okHttpClient43 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier44 = null;
        okHttpClient43.hostnameVerifier = hostnameVerifier44;
        boolean boolean46 = okHttpClient43.getFollowProtocolRedirects();
        java.net.CookieHandler cookieHandler47 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient48 = okHttpClient43.setCookieHandler(cookieHandler47);
        com.squareup.okhttp.OkHttpClient okHttpClient49 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier50 = null;
        okHttpClient49.hostnameVerifier = hostnameVerifier50;
        java.net.ResponseCache responseCache52 = null;
        okHttpClient49.responseCache = responseCache52;
        java.util.List<java.lang.String> strList54 = okHttpClient49.transports;
        com.squareup.okhttp.ConnectionPool connectionPool55 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient49.connectionPool = connectionPool55;
        com.squareup.okhttp.Address address57 = null;
        com.squareup.okhttp.Connection connection58 = connectionPool55.get(address57);
        com.squareup.okhttp.OkHttpClient okHttpClient59 = okHttpClient48.setConnectionPool(connectionPool55);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory60 = okHttpClient48.sslSocketFactory;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory61 = okHttpClient48.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient62 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier63 = null;
        okHttpClient62.hostnameVerifier = hostnameVerifier63;
        java.net.ResponseCache responseCache65 = null;
        okHttpClient62.responseCache = responseCache65;
        javax.net.ssl.HostnameVerifier hostnameVerifier67 = okHttpClient62.hostnameVerifier;
        java.net.Proxy proxy68 = okHttpClient62.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool71 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient62.connectionPool = connectionPool71;
        com.squareup.okhttp.OkHttpClient okHttpClient73 = okHttpClient62.copyWithDefaults();
        java.net.Proxy proxy74 = okHttpClient73.getProxy();
        java.net.CookieHandler cookieHandler75 = null;
        okHttpClient73.cookieHandler = cookieHandler75;
        com.squareup.okhttp.OkAuthenticator okAuthenticator77 = okHttpClient73.getAuthenticator();
        com.squareup.okhttp.OkHttpClient okHttpClient78 = okHttpClient48.setAuthenticator(okAuthenticator77);
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache79 = okHttpClient48.okResponseCache();
        boolean boolean80 = proxy41.equals((java.lang.Object) okHttpClient48);
        com.squareup.okhttp.OkAuthenticator okAuthenticator81 = okHttpClient48.authenticator;
        java.util.List<java.lang.String> strList82 = okHttpClient48.transports;
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNull(okAuthenticator13);
        org.junit.Assert.assertNull(responseCache18);
        org.junit.Assert.assertNull(sSLSocketFactory19);
        org.junit.Assert.assertNotNull(proxy20);
        org.junit.Assert.assertNull(socketAddress21);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNull(hostnameVerifier30);
        org.junit.Assert.assertNull(proxy31);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNotNull(okAuthenticator39);
        org.junit.Assert.assertNotNull(okHttpClient40);
        org.junit.Assert.assertNotNull(proxy41);
        org.junit.Assert.assertNull(socketAddress42);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(okHttpClient48);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNotNull(connectionPool55);
        org.junit.Assert.assertNull(connection58);
        org.junit.Assert.assertNotNull(okHttpClient59);
        org.junit.Assert.assertNull(sSLSocketFactory60);
        org.junit.Assert.assertNull(sSLSocketFactory61);
        org.junit.Assert.assertNull(hostnameVerifier67);
        org.junit.Assert.assertNull(proxy68);
        org.junit.Assert.assertNotNull(okHttpClient73);
        org.junit.Assert.assertNull(proxy74);
        org.junit.Assert.assertNotNull(okAuthenticator77);
        org.junit.Assert.assertNotNull(okHttpClient78);
        org.junit.Assert.assertNull(okResponseCache79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(okAuthenticator81);
        org.junit.Assert.assertNull(strList82);
    }

    @Test
    public void test07022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07022");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.CookieHandler cookieHandler5 = okHttpClient0.getCookieHandler();
        java.net.ResponseCache responseCache6 = okHttpClient0.getResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = null;
        okHttpClient7.hostnameVerifier = hostnameVerifier8;
        java.net.ResponseCache responseCache10 = null;
        okHttpClient7.responseCache = responseCache10;
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = okHttpClient7.hostnameVerifier;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory13 = okHttpClient7.sslSocketFactory;
        java.net.CookieHandler cookieHandler14 = okHttpClient7.cookieHandler;
        javax.net.ssl.HostnameVerifier hostnameVerifier15 = okHttpClient7.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool17 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient16.connectionPool = connectionPool17;
        com.squareup.okhttp.OkAuthenticator okAuthenticator19 = null;
        okHttpClient16.authenticator = okAuthenticator19;
        java.util.List<java.lang.String> strList21 = okHttpClient16.transports;
        java.net.ResponseCache responseCache22 = null;
        okHttpClient16.responseCache = responseCache22;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier25 = null;
        okHttpClient24.hostnameVerifier = hostnameVerifier25;
        java.net.ResponseCache responseCache27 = null;
        okHttpClient24.responseCache = responseCache27;
        javax.net.ssl.HostnameVerifier hostnameVerifier29 = okHttpClient24.hostnameVerifier;
        java.net.Proxy proxy30 = okHttpClient24.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool33 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient24.connectionPool = connectionPool33;
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient24.copyWithDefaults();
        java.net.Proxy proxy36 = okHttpClient35.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier37 = okHttpClient35.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient16.setHostnameVerifier(hostnameVerifier37);
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient7.setHostnameVerifier(hostnameVerifier37);
        java.net.Proxy proxy40 = okHttpClient39.proxy;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory41 = okHttpClient39.sslSocketFactory;
        com.squareup.okhttp.OkHttpClient okHttpClient42 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier43 = null;
        okHttpClient42.hostnameVerifier = hostnameVerifier43;
        java.net.ResponseCache responseCache45 = null;
        okHttpClient42.responseCache = responseCache45;
        java.util.List<java.lang.String> strList47 = okHttpClient42.transports;
        com.squareup.okhttp.ConnectionPool connectionPool48 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient42.connectionPool = connectionPool48;
        com.squareup.okhttp.ConnectionPool connectionPool50 = okHttpClient42.connectionPool;
        boolean boolean51 = okHttpClient42.getFollowProtocolRedirects();
        com.squareup.okhttp.ConnectionPool connectionPool52 = okHttpClient42.getConnectionPool();
        com.squareup.okhttp.OkHttpClient okHttpClient53 = okHttpClient39.setConnectionPool(connectionPool52);
        java.net.ResponseCache responseCache54 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient55 = okHttpClient53.setResponseCache(responseCache54);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory56 = okHttpClient53.sslSocketFactory;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory57 = okHttpClient53.getSslSocketFactory();
        javax.net.ssl.HostnameVerifier hostnameVerifier58 = okHttpClient53.hostnameVerifier;
        okHttpClient0.hostnameVerifier = hostnameVerifier58;
        com.squareup.okhttp.ConnectionPool connectionPool62 = new com.squareup.okhttp.ConnectionPool((int) (short) 0, (long) (byte) 1);
        okHttpClient0.connectionPool = connectionPool62;
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertNull(responseCache6);
        org.junit.Assert.assertNull(hostnameVerifier12);
        org.junit.Assert.assertNull(sSLSocketFactory13);
        org.junit.Assert.assertNull(cookieHandler14);
        org.junit.Assert.assertNull(hostnameVerifier15);
        org.junit.Assert.assertNotNull(connectionPool17);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNull(hostnameVerifier29);
        org.junit.Assert.assertNull(proxy30);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNull(proxy36);
        org.junit.Assert.assertNotNull(hostnameVerifier37);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNotNull(okHttpClient39);
        org.junit.Assert.assertNull(proxy40);
        org.junit.Assert.assertNull(sSLSocketFactory41);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNotNull(connectionPool48);
        org.junit.Assert.assertNotNull(connectionPool50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(connectionPool52);
        org.junit.Assert.assertNotNull(okHttpClient53);
        org.junit.Assert.assertNotNull(okHttpClient55);
        org.junit.Assert.assertNull(sSLSocketFactory56);
        org.junit.Assert.assertNull(sSLSocketFactory57);
        org.junit.Assert.assertNotNull(hostnameVerifier58);
    }

    @Test
    public void test07023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07023");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient4.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool7 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient6.connectionPool = connectionPool7;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier10 = null;
        okHttpClient9.hostnameVerifier = hostnameVerifier10;
        java.net.ResponseCache responseCache12 = null;
        okHttpClient9.responseCache = responseCache12;
        java.util.List<java.lang.String> strList14 = okHttpClient9.transports;
        com.squareup.okhttp.ConnectionPool connectionPool15 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient9.connectionPool = connectionPool15;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient6.setConnectionPool(connectionPool15);
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier19 = null;
        okHttpClient18.hostnameVerifier = hostnameVerifier19;
        java.net.ProxySelector proxySelector21 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient18.setProxySelector(proxySelector21);
        java.net.CookieHandler cookieHandler23 = okHttpClient18.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient24 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier25 = null;
        okHttpClient24.hostnameVerifier = hostnameVerifier25;
        java.net.ResponseCache responseCache27 = null;
        okHttpClient24.responseCache = responseCache27;
        java.util.List<java.lang.String> strList29 = okHttpClient24.transports;
        com.squareup.okhttp.ConnectionPool connectionPool30 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient24.connectionPool = connectionPool30;
        java.net.Proxy proxy32 = null;
        okHttpClient24.proxy = proxy32;
        java.util.Set<com.squareup.okhttp.Route> routeSet34 = okHttpClient24.failedRoutes;
        okHttpClient18.failedRoutes = routeSet34;
        java.net.ProxySelector proxySelector36 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient18.setProxySelector(proxySelector36);
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient18.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient39 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier40 = null;
        okHttpClient39.hostnameVerifier = hostnameVerifier40;
        java.net.ResponseCache responseCache42 = null;
        okHttpClient39.responseCache = responseCache42;
        javax.net.ssl.HostnameVerifier hostnameVerifier44 = okHttpClient39.hostnameVerifier;
        java.net.Proxy proxy45 = okHttpClient39.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool48 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient39.connectionPool = connectionPool48;
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient39.copyWithDefaults();
        java.net.Proxy proxy51 = okHttpClient50.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier52 = okHttpClient50.getHostnameVerifier();
        okHttpClient18.hostnameVerifier = hostnameVerifier52;
        okHttpClient17.hostnameVerifier = hostnameVerifier52;
        okHttpClient5.hostnameVerifier = hostnameVerifier52;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache56 = okHttpClient5.okResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient57 = okHttpClient5.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient58 = new com.squareup.okhttp.OkHttpClient(okHttpClient57);
        java.net.ResponseCache responseCache59 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient60 = okHttpClient57.setResponseCache(responseCache59);
        java.net.ProxySelector proxySelector61 = okHttpClient57.getProxySelector();
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNotNull(connectionPool7);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNotNull(connectionPool15);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNull(cookieHandler23);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(connectionPool30);
        org.junit.Assert.assertNotNull(routeSet34);
        org.junit.Assert.assertNotNull(okHttpClient37);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNull(hostnameVerifier44);
        org.junit.Assert.assertNull(proxy45);
        org.junit.Assert.assertNotNull(okHttpClient50);
        org.junit.Assert.assertNull(proxy51);
        org.junit.Assert.assertNotNull(hostnameVerifier52);
        org.junit.Assert.assertNull(okResponseCache56);
        org.junit.Assert.assertNotNull(okHttpClient57);
        org.junit.Assert.assertNotNull(okHttpClient60);
// flaky:         org.junit.Assert.assertNull(proxySelector61);
    }

    @Test
    public void test07024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07024");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        java.net.Proxy proxy6 = java.net.Proxy.NO_PROXY;
        boolean boolean8 = proxy6.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type9 = proxy6.type();
        java.net.SocketAddress socketAddress10 = proxy6.address();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setProxy(proxy6);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setSSLSocketFactory(sSLSocketFactory12);
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = okHttpClient11.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient(okHttpClient11);
        java.util.List<java.lang.String> strList16 = okHttpClient15.transports;
        boolean boolean17 = okHttpClient15.followProtocolRedirects;
        boolean boolean18 = okHttpClient15.getFollowProtocolRedirects();
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(proxy6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + type9 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type9.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress10);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNull(hostnameVerifier14);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test07025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07025");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.ResponseCache responseCache5 = null;
        okHttpClient4.responseCache = responseCache5;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient4.setSSLSocketFactory(sSLSocketFactory7);
        java.net.ProxySelector proxySelector9 = null;
        okHttpClient4.proxySelector = proxySelector9;
        com.squareup.okhttp.ConnectionPool connectionPool13 = new com.squareup.okhttp.ConnectionPool((int) ' ', (long) (short) 100);
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient4.setConnectionPool(connectionPool13);
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient14.setFollowProtocolRedirects(true);
        java.util.List<java.lang.String> strList17 = okHttpClient14.transports;
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertNotNull(okHttpClient14);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNull(strList17);
    }

    @Test
    public void test07026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07026");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.Proxy proxy8 = null;
        okHttpClient0.proxy = proxy8;
        boolean boolean10 = okHttpClient0.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = null;
        okHttpClient11.hostnameVerifier = hostnameVerifier12;
        java.net.ResponseCache responseCache14 = null;
        okHttpClient11.responseCache = responseCache14;
        java.util.List<java.lang.String> strList16 = okHttpClient11.transports;
        com.squareup.okhttp.ConnectionPool connectionPool17 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient11.connectionPool = connectionPool17;
        java.net.Proxy proxy19 = null;
        okHttpClient11.proxy = proxy19;
        boolean boolean21 = okHttpClient11.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient(okHttpClient11);
        java.net.ProxySelector proxySelector23 = okHttpClient22.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier24 = okHttpClient22.hostnameVerifier;
        javax.net.ssl.HostnameVerifier hostnameVerifier25 = okHttpClient22.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient26 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool27 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient26.connectionPool = connectionPool27;
        com.squareup.okhttp.OkAuthenticator okAuthenticator29 = null;
        okHttpClient26.authenticator = okAuthenticator29;
        java.net.CookieHandler cookieHandler31 = null;
        okHttpClient26.cookieHandler = cookieHandler31;
        java.net.Proxy proxy33 = java.net.Proxy.NO_PROXY;
        boolean boolean35 = proxy33.equals((java.lang.Object) 1L);
        com.squareup.okhttp.OkHttpClient okHttpClient36 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache37 = okHttpClient36.okResponseCache();
        java.net.ResponseCache responseCache38 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient36.setResponseCache(responseCache38);
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList42 = new java.util.ArrayList<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        okHttpClient36.transports = strList42;
        boolean boolean45 = proxy33.equals((java.lang.Object) strList42);
        com.squareup.okhttp.OkHttpClient okHttpClient46 = okHttpClient26.setProxy(proxy33);
        com.squareup.okhttp.OkHttpClient okHttpClient47 = okHttpClient22.setProxy(proxy33);
        java.lang.String str48 = proxy33.toString();
        java.net.Proxy.Type type49 = proxy33.type();
        java.net.SocketAddress socketAddress50 = proxy33.address();
        com.squareup.okhttp.OkHttpClient okHttpClient51 = okHttpClient0.setProxy(proxy33);
        java.net.CookieHandler cookieHandler52 = okHttpClient51.cookieHandler;
        java.net.ProxySelector proxySelector53 = okHttpClient51.getProxySelector();
        java.net.ResponseCache responseCache54 = okHttpClient51.getResponseCache();
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNotNull(connectionPool17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(proxySelector23);
        org.junit.Assert.assertNull(hostnameVerifier24);
        org.junit.Assert.assertNull(hostnameVerifier25);
        org.junit.Assert.assertNotNull(connectionPool27);
        org.junit.Assert.assertNotNull(proxy33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(okResponseCache37);
        org.junit.Assert.assertNotNull(okHttpClient39);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(okHttpClient46);
        org.junit.Assert.assertNotNull(okHttpClient47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "DIRECT" + "'", str48, "DIRECT");
        org.junit.Assert.assertTrue("'" + type49 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type49.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress50);
        org.junit.Assert.assertNotNull(okHttpClient51);
        org.junit.Assert.assertNull(cookieHandler52);
        org.junit.Assert.assertNull(proxySelector53);
        org.junit.Assert.assertNull(responseCache54);
    }

    @Test
    public void test07027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07027");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory5 = okHttpClient4.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = null;
        okHttpClient6.hostnameVerifier = hostnameVerifier7;
        java.net.ResponseCache responseCache9 = null;
        okHttpClient6.responseCache = responseCache9;
        java.util.List<java.lang.String> strList11 = okHttpClient6.transports;
        com.squareup.okhttp.ConnectionPool connectionPool12 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient6.connectionPool = connectionPool12;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient6.copyWithDefaults();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory15 = okHttpClient14.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient4.setSSLSocketFactory(sSLSocketFactory15);
        java.net.Socket socket17 = sSLSocketFactory15.createSocket();
        java.net.InetAddress inetAddress18 = null;
        java.net.InetAddress inetAddress20 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket22 = sSLSocketFactory15.createSocket(inetAddress18, (int) (byte) 0, inetAddress20, 0);
            org.junit.Assert.fail("Expected exception of type java.net.ConnectException; message: Connection refused (Connection refused)");
        } catch (java.net.ConnectException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(sSLSocketFactory5);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNotNull(okHttpClient14);
        org.junit.Assert.assertNotNull(sSLSocketFactory15);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNotNull(socket17);
        org.junit.Assert.assertEquals(socket17.toString(), "Socket[unconnected]");
    }

    @Test
    public void test07028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07028");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.CookieHandler cookieHandler8 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache9 = okHttpClient0.okResponseCache();
        java.net.CookieHandler cookieHandler10 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        java.net.Proxy proxy12 = java.net.Proxy.NO_PROXY;
        boolean boolean14 = proxy12.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type15 = proxy12.type();
        java.net.SocketAddress socketAddress16 = proxy12.address();
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient0.setProxy(proxy12);
        com.squareup.okhttp.ConnectionPool connectionPool18 = okHttpClient0.connectionPool;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient0.copyWithDefaults();
        java.net.CookieHandler cookieHandler20 = null;
        okHttpClient0.cookieHandler = cookieHandler20;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory22 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory22);
        com.squareup.okhttp.ConnectionPool connectionPool24 = okHttpClient23.getConnectionPool();
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNull(cookieHandler8);
        org.junit.Assert.assertNull(okResponseCache9);
        org.junit.Assert.assertNull(cookieHandler10);
        org.junit.Assert.assertNotNull(proxy12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + type15 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type15.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress16);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNotNull(connectionPool18);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertNotNull(connectionPool24);
    }

    @Test
    public void test07029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07029");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.CookieHandler cookieHandler8 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache9 = okHttpClient0.okResponseCache();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory10 = null;
        okHttpClient0.sslSocketFactory = sSLSocketFactory10;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient0.copyWithDefaults();
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNull(cookieHandler8);
        org.junit.Assert.assertNull(okResponseCache9);
        org.junit.Assert.assertNotNull(okHttpClient13);
    }

    @Test
    public void test07030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07030");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.ConnectionPool connectionPool12 = okHttpClient11.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator13 = okHttpClient11.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool16 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient11.connectionPool = connectionPool16;
        java.net.ResponseCache responseCache18 = okHttpClient11.responseCache;
        com.squareup.okhttp.ConnectionPool connectionPool21 = new com.squareup.okhttp.ConnectionPool((int) (byte) 0, 10L);
        okHttpClient11.connectionPool = connectionPool21;
        com.squareup.okhttp.ConnectionPool connectionPool25 = new com.squareup.okhttp.ConnectionPool((int) (byte) 10, 0L);
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient11.setConnectionPool(connectionPool25);
        java.net.ResponseCache responseCache27 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient26.setResponseCache(responseCache27);
        com.squareup.okhttp.OkHttpClient okHttpClient30 = okHttpClient28.setFollowProtocolRedirects(true);
        com.squareup.okhttp.OkAuthenticator okAuthenticator31 = okHttpClient28.getAuthenticator();
        com.squareup.okhttp.OkHttpClient okHttpClient32 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier33 = null;
        okHttpClient32.hostnameVerifier = hostnameVerifier33;
        java.net.ProxySelector proxySelector35 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient32.setProxySelector(proxySelector35);
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient36.copyWithDefaults();
        java.net.CookieHandler cookieHandler38 = null;
        okHttpClient36.cookieHandler = cookieHandler38;
        java.net.CookieHandler cookieHandler40 = null;
        okHttpClient36.cookieHandler = cookieHandler40;
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient36.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient43 = okHttpClient42.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient44 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool45 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient44.connectionPool = connectionPool45;
        com.squareup.okhttp.OkHttpClient okHttpClient47 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier48 = null;
        okHttpClient47.hostnameVerifier = hostnameVerifier48;
        java.net.ResponseCache responseCache50 = null;
        okHttpClient47.responseCache = responseCache50;
        java.util.List<java.lang.String> strList52 = okHttpClient47.transports;
        com.squareup.okhttp.ConnectionPool connectionPool53 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient47.connectionPool = connectionPool53;
        com.squareup.okhttp.OkHttpClient okHttpClient55 = okHttpClient44.setConnectionPool(connectionPool53);
        com.squareup.okhttp.ConnectionPool connectionPool56 = okHttpClient55.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator57 = okHttpClient55.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool58 = okHttpClient55.getConnectionPool();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory59 = okHttpClient55.getSslSocketFactory();
        java.net.ProxySelector proxySelector60 = okHttpClient55.getProxySelector();
        java.util.Set<com.squareup.okhttp.Route> routeSet61 = okHttpClient55.failedRoutes;
        okHttpClient42.failedRoutes = routeSet61;
        okHttpClient28.failedRoutes = routeSet61;
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNull(okAuthenticator13);
        org.junit.Assert.assertNull(responseCache18);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNotNull(okHttpClient30);
        org.junit.Assert.assertNull(okAuthenticator31);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNotNull(okHttpClient37);
        org.junit.Assert.assertNotNull(okHttpClient42);
        org.junit.Assert.assertNotNull(okHttpClient43);
        org.junit.Assert.assertNotNull(connectionPool45);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNotNull(connectionPool53);
        org.junit.Assert.assertNotNull(okHttpClient55);
        org.junit.Assert.assertNotNull(connectionPool56);
        org.junit.Assert.assertNull(okAuthenticator57);
        org.junit.Assert.assertNotNull(connectionPool58);
        org.junit.Assert.assertNull(sSLSocketFactory59);
        org.junit.Assert.assertNull(proxySelector60);
        org.junit.Assert.assertNotNull(routeSet61);
    }

    @Test
    public void test07031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07031");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.CookieHandler cookieHandler8 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache9 = okHttpClient0.okResponseCache();
        java.net.CookieHandler cookieHandler10 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory12 = okHttpClient11.sslSocketFactory;
        java.util.List<java.lang.String> strList13 = okHttpClient11.transports;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = new com.squareup.okhttp.OkHttpClient(okHttpClient11);
        java.net.ResponseCache responseCache15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient11.setResponseCache(responseCache15);
        com.squareup.okhttp.OkAuthenticator okAuthenticator17 = okHttpClient16.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool18 = okHttpClient16.getConnectionPool();
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNull(cookieHandler8);
        org.junit.Assert.assertNull(okResponseCache9);
        org.junit.Assert.assertNull(cookieHandler10);
        org.junit.Assert.assertNull(sSLSocketFactory12);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNull(okAuthenticator17);
        org.junit.Assert.assertNull(connectionPool18);
    }

    @Test
    public void test07032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07032");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setProxySelector(proxySelector4);
        java.net.ProxySelector proxySelector6 = okHttpClient0.proxySelector;
        boolean boolean7 = okHttpClient0.getFollowProtocolRedirects();
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(proxySelector6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test07033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07033");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.Proxy proxy8 = null;
        okHttpClient0.proxy = proxy8;
        java.net.Proxy proxy10 = okHttpClient0.getProxy();
        java.net.ProxySelector proxySelector11 = null;
        okHttpClient0.proxySelector = proxySelector11;
        java.net.Proxy proxy13 = okHttpClient0.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool16 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient15.connectionPool = connectionPool16;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier19 = null;
        okHttpClient18.hostnameVerifier = hostnameVerifier19;
        java.net.ResponseCache responseCache21 = null;
        okHttpClient18.responseCache = responseCache21;
        java.util.List<java.lang.String> strList23 = okHttpClient18.transports;
        com.squareup.okhttp.ConnectionPool connectionPool24 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient18.connectionPool = connectionPool24;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient15.setConnectionPool(connectionPool24);
        java.net.Proxy proxy27 = okHttpClient26.proxy;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory28 = null;
        okHttpClient26.sslSocketFactory = sSLSocketFactory28;
        com.squareup.okhttp.OkHttpClient okHttpClient30 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier31 = null;
        okHttpClient30.hostnameVerifier = hostnameVerifier31;
        java.net.ResponseCache responseCache33 = null;
        okHttpClient30.responseCache = responseCache33;
        java.util.List<java.lang.String> strList35 = okHttpClient30.transports;
        com.squareup.okhttp.ConnectionPool connectionPool36 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient30.connectionPool = connectionPool36;
        com.squareup.okhttp.ConnectionPool connectionPool38 = okHttpClient30.connectionPool;
        int int39 = connectionPool38.getHttpConnectionCount();
        com.squareup.okhttp.Address address40 = null;
        com.squareup.okhttp.Connection connection41 = connectionPool38.get(address40);
        okHttpClient26.connectionPool = connectionPool38;
        java.net.ProxySelector proxySelector43 = okHttpClient26.proxySelector;
        java.net.Proxy proxy44 = java.net.Proxy.NO_PROXY;
        boolean boolean46 = proxy44.equals((java.lang.Object) 1L);
        com.squareup.okhttp.OkHttpClient okHttpClient47 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache48 = okHttpClient47.okResponseCache();
        java.net.ResponseCache responseCache49 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient47.setResponseCache(responseCache49);
        java.lang.String[] strArray52 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList53 = new java.util.ArrayList<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList53, strArray52);
        okHttpClient47.transports = strList53;
        boolean boolean56 = proxy44.equals((java.lang.Object) strList53);
        okHttpClient26.proxy = proxy44;
        java.lang.String str58 = proxy44.toString();
        java.net.SocketAddress socketAddress59 = proxy44.address();
        okHttpClient14.proxy = proxy44;
        java.util.Set<com.squareup.okhttp.Route> routeSet61 = okHttpClient14.failedRoutes;
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNull(proxy10);
        org.junit.Assert.assertNull(proxy13);
        org.junit.Assert.assertNotNull(okHttpClient14);
        org.junit.Assert.assertNotNull(connectionPool16);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNotNull(connectionPool24);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNull(proxy27);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNotNull(connectionPool36);
        org.junit.Assert.assertNotNull(connectionPool38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNull(connection41);
        org.junit.Assert.assertNull(proxySelector43);
        org.junit.Assert.assertNotNull(proxy44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(okResponseCache48);
        org.junit.Assert.assertNotNull(okHttpClient50);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "DIRECT" + "'", str58, "DIRECT");
        org.junit.Assert.assertNull(socketAddress59);
        org.junit.Assert.assertNotNull(routeSet61);
    }

    @Test
    public void test07034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07034");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache8 = okHttpClient7.okResponseCache();
        java.net.ResponseCache responseCache9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient7.setResponseCache(responseCache9);
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        okHttpClient7.transports = strList13;
        okHttpClient0.transports = strList13;
        java.util.Set<com.squareup.okhttp.Route> routeSet17 = okHttpClient0.failedRoutes;
        okHttpClient0.followProtocolRedirects = false;
        com.squareup.okhttp.OkAuthenticator okAuthenticator20 = okHttpClient0.getAuthenticator();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache21 = okHttpClient0.okResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier23 = null;
        okHttpClient22.hostnameVerifier = hostnameVerifier23;
        java.net.ResponseCache responseCache25 = null;
        okHttpClient22.responseCache = responseCache25;
        java.util.List<java.lang.String> strList27 = okHttpClient22.transports;
        com.squareup.okhttp.ConnectionPool connectionPool28 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient22.connectionPool = connectionPool28;
        com.squareup.okhttp.ConnectionPool connectionPool30 = okHttpClient22.connectionPool;
        boolean boolean31 = okHttpClient22.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient32 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier33 = null;
        okHttpClient32.hostnameVerifier = hostnameVerifier33;
        java.net.ResponseCache responseCache35 = null;
        okHttpClient32.responseCache = responseCache35;
        javax.net.ssl.HostnameVerifier hostnameVerifier37 = okHttpClient32.hostnameVerifier;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory38 = okHttpClient32.sslSocketFactory;
        java.net.CookieHandler cookieHandler39 = okHttpClient32.cookieHandler;
        javax.net.ssl.HostnameVerifier hostnameVerifier40 = okHttpClient32.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient41 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool42 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient41.connectionPool = connectionPool42;
        com.squareup.okhttp.OkAuthenticator okAuthenticator44 = null;
        okHttpClient41.authenticator = okAuthenticator44;
        java.util.List<java.lang.String> strList46 = okHttpClient41.transports;
        java.net.ResponseCache responseCache47 = null;
        okHttpClient41.responseCache = responseCache47;
        com.squareup.okhttp.OkHttpClient okHttpClient49 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier50 = null;
        okHttpClient49.hostnameVerifier = hostnameVerifier50;
        java.net.ResponseCache responseCache52 = null;
        okHttpClient49.responseCache = responseCache52;
        javax.net.ssl.HostnameVerifier hostnameVerifier54 = okHttpClient49.hostnameVerifier;
        java.net.Proxy proxy55 = okHttpClient49.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool58 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient49.connectionPool = connectionPool58;
        com.squareup.okhttp.OkHttpClient okHttpClient60 = okHttpClient49.copyWithDefaults();
        java.net.Proxy proxy61 = okHttpClient60.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier62 = okHttpClient60.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient63 = okHttpClient41.setHostnameVerifier(hostnameVerifier62);
        com.squareup.okhttp.OkHttpClient okHttpClient64 = okHttpClient32.setHostnameVerifier(hostnameVerifier62);
        com.squareup.okhttp.OkHttpClient okHttpClient65 = okHttpClient22.setHostnameVerifier(hostnameVerifier62);
        okHttpClient0.hostnameVerifier = hostnameVerifier62;
        java.net.ProxySelector proxySelector67 = null;
        okHttpClient0.proxySelector = proxySelector67;
        com.squareup.okhttp.OkHttpClient okHttpClient69 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier70 = null;
        okHttpClient69.hostnameVerifier = hostnameVerifier70;
        java.net.ProxySelector proxySelector72 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient73 = okHttpClient69.setProxySelector(proxySelector72);
        javax.net.ssl.HostnameVerifier hostnameVerifier74 = okHttpClient69.hostnameVerifier;
        java.net.CookieHandler cookieHandler75 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient76 = okHttpClient69.setCookieHandler(cookieHandler75);
        com.squareup.okhttp.ConnectionPool connectionPool79 = new com.squareup.okhttp.ConnectionPool((int) ' ', (long) (byte) 100);
        int int80 = connectionPool79.getConnectionCount();
        okHttpClient69.connectionPool = connectionPool79;
        okHttpClient0.connectionPool = connectionPool79;
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNull(okResponseCache8);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(routeSet17);
        org.junit.Assert.assertNull(okAuthenticator20);
        org.junit.Assert.assertNull(okResponseCache21);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNotNull(connectionPool28);
        org.junit.Assert.assertNotNull(connectionPool30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(hostnameVerifier37);
        org.junit.Assert.assertNull(sSLSocketFactory38);
        org.junit.Assert.assertNull(cookieHandler39);
        org.junit.Assert.assertNull(hostnameVerifier40);
        org.junit.Assert.assertNotNull(connectionPool42);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNull(hostnameVerifier54);
        org.junit.Assert.assertNull(proxy55);
        org.junit.Assert.assertNotNull(okHttpClient60);
        org.junit.Assert.assertNull(proxy61);
        org.junit.Assert.assertNotNull(hostnameVerifier62);
        org.junit.Assert.assertNotNull(okHttpClient63);
        org.junit.Assert.assertNotNull(okHttpClient64);
        org.junit.Assert.assertNotNull(okHttpClient65);
        org.junit.Assert.assertNotNull(okHttpClient73);
        org.junit.Assert.assertNull(hostnameVerifier74);
        org.junit.Assert.assertNotNull(okHttpClient76);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
    }

    @Test
    public void test07035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07035");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.Proxy proxy8 = null;
        okHttpClient0.proxy = proxy8;
        boolean boolean10 = okHttpClient0.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        java.net.ProxySelector proxySelector12 = okHttpClient11.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier13 = okHttpClient11.hostnameVerifier;
        java.net.CookieHandler cookieHandler14 = null;
        okHttpClient11.cookieHandler = cookieHandler14;
        com.squareup.okhttp.OkAuthenticator okAuthenticator16 = okHttpClient11.authenticator;
        boolean boolean17 = okHttpClient11.followProtocolRedirects;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory18 = okHttpClient11.sslSocketFactory;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = new com.squareup.okhttp.OkHttpClient(okHttpClient11);
        okHttpClient19.followProtocolRedirects = true;
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(proxySelector12);
        org.junit.Assert.assertNull(hostnameVerifier13);
        org.junit.Assert.assertNull(okAuthenticator16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(sSLSocketFactory18);
    }

    @Test
    public void test07036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07036");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        java.net.Proxy proxy12 = okHttpClient11.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool14 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient13.connectionPool = connectionPool14;
        int int16 = connectionPool14.getSpdyConnectionCount();
        okHttpClient11.connectionPool = connectionPool14;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier19 = null;
        okHttpClient18.hostnameVerifier = hostnameVerifier19;
        java.net.ResponseCache responseCache21 = null;
        okHttpClient18.responseCache = responseCache21;
        javax.net.ssl.HostnameVerifier hostnameVerifier23 = okHttpClient18.hostnameVerifier;
        java.net.Proxy proxy24 = okHttpClient18.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool27 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient18.connectionPool = connectionPool27;
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient18.copyWithDefaults();
        java.net.ResponseCache responseCache30 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient29.setResponseCache(responseCache30);
        com.squareup.okhttp.OkAuthenticator okAuthenticator32 = okHttpClient29.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient11.setAuthenticator(okAuthenticator32);
        java.net.ResponseCache responseCache34 = okHttpClient11.responseCache;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache35 = okHttpClient11.okResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient36 = new com.squareup.okhttp.OkHttpClient(okHttpClient11);
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(proxy12);
        org.junit.Assert.assertNotNull(connectionPool14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNull(hostnameVerifier23);
        org.junit.Assert.assertNull(proxy24);
        org.junit.Assert.assertNotNull(okHttpClient29);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNotNull(okAuthenticator32);
        org.junit.Assert.assertNotNull(okHttpClient33);
        org.junit.Assert.assertNull(responseCache34);
        org.junit.Assert.assertNull(okResponseCache35);
    }

    @Test
    public void test07037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07037");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.CookieHandler cookieHandler8 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache9 = okHttpClient0.okResponseCache();
        java.net.CookieHandler cookieHandler10 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory12 = okHttpClient11.sslSocketFactory;
        java.net.Proxy proxy13 = okHttpClient11.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient11.setFollowProtocolRedirects(true);
        java.net.Proxy proxy16 = okHttpClient11.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool18 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient17.connectionPool = connectionPool18;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier21 = null;
        okHttpClient20.hostnameVerifier = hostnameVerifier21;
        java.net.ResponseCache responseCache23 = null;
        okHttpClient20.responseCache = responseCache23;
        java.util.List<java.lang.String> strList25 = okHttpClient20.transports;
        com.squareup.okhttp.ConnectionPool connectionPool26 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient20.connectionPool = connectionPool26;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient17.setConnectionPool(connectionPool26);
        com.squareup.okhttp.ConnectionPool connectionPool29 = okHttpClient28.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator30 = okHttpClient28.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool33 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient28.connectionPool = connectionPool33;
        java.net.ResponseCache responseCache35 = okHttpClient28.responseCache;
        com.squareup.okhttp.ConnectionPool connectionPool38 = new com.squareup.okhttp.ConnectionPool((int) (byte) 0, 10L);
        okHttpClient28.connectionPool = connectionPool38;
        com.squareup.okhttp.ConnectionPool connectionPool42 = new com.squareup.okhttp.ConnectionPool((int) (byte) 10, 0L);
        com.squareup.okhttp.OkHttpClient okHttpClient43 = okHttpClient28.setConnectionPool(connectionPool42);
        com.squareup.okhttp.OkHttpClient okHttpClient44 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier45 = null;
        okHttpClient44.hostnameVerifier = hostnameVerifier45;
        java.net.ProxySelector proxySelector47 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient48 = okHttpClient44.setProxySelector(proxySelector47);
        java.net.ResponseCache responseCache49 = null;
        okHttpClient48.responseCache = responseCache49;
        com.squareup.okhttp.OkHttpClient okHttpClient51 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier52 = null;
        okHttpClient51.hostnameVerifier = hostnameVerifier52;
        java.net.ResponseCache responseCache54 = null;
        okHttpClient51.responseCache = responseCache54;
        java.util.List<java.lang.String> strList56 = okHttpClient51.transports;
        com.squareup.okhttp.ConnectionPool connectionPool57 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient51.connectionPool = connectionPool57;
        java.net.CookieHandler cookieHandler59 = okHttpClient51.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache60 = okHttpClient51.okResponseCache();
        java.net.CookieHandler cookieHandler61 = okHttpClient51.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient62 = new com.squareup.okhttp.OkHttpClient(okHttpClient51);
        java.net.Proxy proxy63 = java.net.Proxy.NO_PROXY;
        boolean boolean65 = proxy63.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type66 = proxy63.type();
        java.net.SocketAddress socketAddress67 = proxy63.address();
        com.squareup.okhttp.OkHttpClient okHttpClient68 = okHttpClient51.setProxy(proxy63);
        com.squareup.okhttp.OkHttpClient okHttpClient69 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier70 = null;
        okHttpClient69.hostnameVerifier = hostnameVerifier70;
        java.net.ResponseCache responseCache72 = null;
        okHttpClient69.responseCache = responseCache72;
        java.util.List<java.lang.String> strList74 = okHttpClient69.transports;
        com.squareup.okhttp.ConnectionPool connectionPool75 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient69.connectionPool = connectionPool75;
        com.squareup.okhttp.OkHttpClient okHttpClient77 = okHttpClient69.copyWithDefaults();
        java.net.ProxySelector proxySelector78 = okHttpClient77.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory79 = okHttpClient77.getSslSocketFactory();
        okHttpClient68.sslSocketFactory = sSLSocketFactory79;
        java.lang.String[] strArray81 = sSLSocketFactory79.getDefaultCipherSuites();
        java.lang.String[] strArray82 = sSLSocketFactory79.getSupportedCipherSuites();
        java.net.Socket socket83 = sSLSocketFactory79.createSocket();
        okHttpClient48.sslSocketFactory = sSLSocketFactory79;
        okHttpClient28.sslSocketFactory = sSLSocketFactory79;
        java.net.Socket socket86 = sSLSocketFactory79.createSocket();
        java.lang.String[] strArray87 = sSLSocketFactory79.getDefaultCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient88 = okHttpClient11.setSSLSocketFactory(sSLSocketFactory79);
        com.squareup.okhttp.OkAuthenticator okAuthenticator89 = okHttpClient11.getAuthenticator();
        com.squareup.okhttp.OkHttpClient okHttpClient90 = new com.squareup.okhttp.OkHttpClient(okHttpClient11);
        java.util.Set<com.squareup.okhttp.Route> routeSet91 = okHttpClient90.failedRoutes;
        java.net.CookieHandler cookieHandler92 = null;
        okHttpClient90.cookieHandler = cookieHandler92;
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNull(cookieHandler8);
        org.junit.Assert.assertNull(okResponseCache9);
        org.junit.Assert.assertNull(cookieHandler10);
        org.junit.Assert.assertNull(sSLSocketFactory12);
        org.junit.Assert.assertNull(proxy13);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNull(proxy16);
        org.junit.Assert.assertNotNull(connectionPool18);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNotNull(connectionPool26);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNotNull(connectionPool29);
        org.junit.Assert.assertNull(okAuthenticator30);
        org.junit.Assert.assertNull(responseCache35);
        org.junit.Assert.assertNotNull(okHttpClient43);
        org.junit.Assert.assertNotNull(okHttpClient48);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNotNull(connectionPool57);
        org.junit.Assert.assertNull(cookieHandler59);
        org.junit.Assert.assertNull(okResponseCache60);
        org.junit.Assert.assertNull(cookieHandler61);
        org.junit.Assert.assertNotNull(proxy63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + type66 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type66.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress67);
        org.junit.Assert.assertNotNull(okHttpClient68);
        org.junit.Assert.assertNull(strList74);
        org.junit.Assert.assertNotNull(connectionPool75);
        org.junit.Assert.assertNotNull(okHttpClient77);
// flaky:         org.junit.Assert.assertNull(proxySelector78);
        org.junit.Assert.assertNotNull(sSLSocketFactory79);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertNotNull(socket83);
        org.junit.Assert.assertEquals(socket83.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(socket86);
        org.junit.Assert.assertEquals(socket86.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertNotNull(okHttpClient88);
        org.junit.Assert.assertNull(okAuthenticator89);
        org.junit.Assert.assertNotNull(routeSet91);
    }

    @Test
    public void test07038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07038");
        com.squareup.okhttp.ConnectionPool connectionPool2 = new com.squareup.okhttp.ConnectionPool(0, (long) 1);
        com.squareup.okhttp.Connection connection3 = null;
        // The following exception was thrown during execution in test generation
        try {
            connectionPool2.recycle(connection3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test07039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07039");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.ResponseCache responseCache5 = null;
        okHttpClient4.responseCache = responseCache5;
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = okHttpClient4.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient4.setFollowProtocolRedirects(false);
        java.net.ProxySelector proxySelector10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient9.setProxySelector(proxySelector10);
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache12 = okHttpClient9.okResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool14 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient13.connectionPool = connectionPool14;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier17 = null;
        okHttpClient16.hostnameVerifier = hostnameVerifier17;
        java.net.ResponseCache responseCache19 = null;
        okHttpClient16.responseCache = responseCache19;
        java.util.List<java.lang.String> strList21 = okHttpClient16.transports;
        com.squareup.okhttp.ConnectionPool connectionPool22 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient16.connectionPool = connectionPool22;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient13.setConnectionPool(connectionPool22);
        com.squareup.okhttp.ConnectionPool connectionPool25 = okHttpClient24.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator26 = okHttpClient24.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool29 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient24.connectionPool = connectionPool29;
        java.net.ResponseCache responseCache31 = okHttpClient24.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory32 = okHttpClient24.sslSocketFactory;
        java.net.Proxy proxy33 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress34 = proxy33.address();
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient24.setProxy(proxy33);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory36 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient24.setSSLSocketFactory(sSLSocketFactory36);
        com.squareup.okhttp.OkHttpClient okHttpClient38 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier39 = null;
        okHttpClient38.hostnameVerifier = hostnameVerifier39;
        java.net.ResponseCache responseCache41 = null;
        okHttpClient38.responseCache = responseCache41;
        javax.net.ssl.HostnameVerifier hostnameVerifier43 = okHttpClient38.hostnameVerifier;
        java.net.Proxy proxy44 = okHttpClient38.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool47 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient38.connectionPool = connectionPool47;
        com.squareup.okhttp.OkHttpClient okHttpClient49 = okHttpClient38.copyWithDefaults();
        java.net.ResponseCache responseCache50 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient51 = okHttpClient49.setResponseCache(responseCache50);
        com.squareup.okhttp.OkAuthenticator okAuthenticator52 = okHttpClient49.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient53 = okHttpClient24.setAuthenticator(okAuthenticator52);
        com.squareup.okhttp.OkHttpClient okHttpClient54 = okHttpClient9.setAuthenticator(okAuthenticator52);
        com.squareup.okhttp.OkHttpClient okHttpClient55 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool56 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient55.connectionPool = connectionPool56;
        com.squareup.okhttp.OkHttpClient okHttpClient58 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier59 = null;
        okHttpClient58.hostnameVerifier = hostnameVerifier59;
        java.net.ResponseCache responseCache61 = null;
        okHttpClient58.responseCache = responseCache61;
        java.util.List<java.lang.String> strList63 = okHttpClient58.transports;
        com.squareup.okhttp.ConnectionPool connectionPool64 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient58.connectionPool = connectionPool64;
        com.squareup.okhttp.OkHttpClient okHttpClient66 = okHttpClient55.setConnectionPool(connectionPool64);
        com.squareup.okhttp.ConnectionPool connectionPool67 = okHttpClient55.connectionPool;
        connectionPool67.evictAll();
        connectionPool67.evictAll();
        com.squareup.okhttp.Address address70 = null;
        com.squareup.okhttp.Connection connection71 = connectionPool67.get(address70);
        okHttpClient9.connectionPool = connectionPool67;
        com.squareup.okhttp.ConnectionPool connectionPool75 = new com.squareup.okhttp.ConnectionPool((int) (short) 0, 100L);
        connectionPool75.evictAll();
        okHttpClient9.connectionPool = connectionPool75;
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(hostnameVerifier7);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(okResponseCache12);
        org.junit.Assert.assertNotNull(connectionPool14);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(connectionPool22);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNotNull(connectionPool25);
        org.junit.Assert.assertNull(okAuthenticator26);
        org.junit.Assert.assertNull(responseCache31);
        org.junit.Assert.assertNull(sSLSocketFactory32);
        org.junit.Assert.assertNotNull(proxy33);
        org.junit.Assert.assertNull(socketAddress34);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNotNull(okHttpClient37);
        org.junit.Assert.assertNull(hostnameVerifier43);
        org.junit.Assert.assertNull(proxy44);
        org.junit.Assert.assertNotNull(okHttpClient49);
        org.junit.Assert.assertNotNull(okHttpClient51);
        org.junit.Assert.assertNotNull(okAuthenticator52);
        org.junit.Assert.assertNotNull(okHttpClient53);
        org.junit.Assert.assertNotNull(okHttpClient54);
        org.junit.Assert.assertNotNull(connectionPool56);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNotNull(connectionPool64);
        org.junit.Assert.assertNotNull(okHttpClient66);
        org.junit.Assert.assertNotNull(connectionPool67);
        org.junit.Assert.assertNull(connection71);
    }

    @Test
    public void test07040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07040");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache5 = okHttpClient0.okResponseCache();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory6);
        java.net.Proxy proxy8 = okHttpClient0.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier10 = null;
        okHttpClient9.hostnameVerifier = hostnameVerifier10;
        java.net.ProxySelector proxySelector12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient9.setProxySelector(proxySelector12);
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = okHttpClient9.hostnameVerifier;
        java.net.CookieHandler cookieHandler15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient9.setCookieHandler(cookieHandler15);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory17 = null;
        okHttpClient16.sslSocketFactory = sSLSocketFactory17;
        com.squareup.okhttp.OkAuthenticator okAuthenticator19 = okHttpClient16.authenticator;
        java.net.ResponseCache responseCache20 = okHttpClient16.responseCache;
        java.net.ResponseCache responseCache21 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient16.setResponseCache(responseCache21);
        java.net.ProxySelector proxySelector23 = okHttpClient16.proxySelector;
        java.net.ProxySelector proxySelector24 = okHttpClient16.proxySelector;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient16.setFollowProtocolRedirects(false);
        com.squareup.okhttp.OkHttpClient okHttpClient27 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier28 = null;
        okHttpClient27.hostnameVerifier = hostnameVerifier28;
        java.net.ResponseCache responseCache30 = null;
        okHttpClient27.responseCache = responseCache30;
        java.util.List<java.lang.String> strList32 = okHttpClient27.transports;
        com.squareup.okhttp.ConnectionPool connectionPool33 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient27.connectionPool = connectionPool33;
        java.net.Proxy proxy35 = null;
        okHttpClient27.proxy = proxy35;
        boolean boolean37 = okHttpClient27.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient27.copyWithDefaults();
        java.net.CookieHandler cookieHandler39 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient40 = okHttpClient27.setCookieHandler(cookieHandler39);
        com.squareup.okhttp.OkHttpClient okHttpClient41 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache42 = okHttpClient41.okResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient43 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier44 = null;
        okHttpClient43.hostnameVerifier = hostnameVerifier44;
        java.net.ResponseCache responseCache46 = null;
        okHttpClient43.responseCache = responseCache46;
        java.util.List<java.lang.String> strList48 = okHttpClient43.transports;
        com.squareup.okhttp.ConnectionPool connectionPool49 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient43.connectionPool = connectionPool49;
        java.net.Proxy proxy51 = null;
        okHttpClient43.proxy = proxy51;
        boolean boolean53 = okHttpClient43.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient54 = okHttpClient43.copyWithDefaults();
        java.net.CookieHandler cookieHandler55 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient56 = okHttpClient54.setCookieHandler(cookieHandler55);
        java.util.List<java.lang.String> strList57 = okHttpClient56.transports;
        javax.net.ssl.HostnameVerifier hostnameVerifier58 = okHttpClient56.hostnameVerifier;
        okHttpClient41.hostnameVerifier = hostnameVerifier58;
        okHttpClient40.hostnameVerifier = hostnameVerifier58;
        com.squareup.okhttp.OkHttpClient okHttpClient61 = okHttpClient16.setHostnameVerifier(hostnameVerifier58);
        com.squareup.okhttp.OkHttpClient okHttpClient62 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier63 = null;
        okHttpClient62.hostnameVerifier = hostnameVerifier63;
        java.net.ResponseCache responseCache65 = null;
        okHttpClient62.responseCache = responseCache65;
        javax.net.ssl.HostnameVerifier hostnameVerifier67 = okHttpClient62.hostnameVerifier;
        java.net.Proxy proxy68 = okHttpClient62.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool71 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient62.connectionPool = connectionPool71;
        java.util.List<java.lang.String> strList73 = okHttpClient62.getTransports();
        javax.net.ssl.HostnameVerifier hostnameVerifier74 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient75 = okHttpClient62.setHostnameVerifier(hostnameVerifier74);
        com.squareup.okhttp.OkHttpClient okHttpClient76 = new com.squareup.okhttp.OkHttpClient(okHttpClient62);
        com.squareup.okhttp.OkHttpClient okHttpClient77 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier78 = null;
        okHttpClient77.hostnameVerifier = hostnameVerifier78;
        java.net.ProxySelector proxySelector80 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient81 = okHttpClient77.setProxySelector(proxySelector80);
        com.squareup.okhttp.OkHttpClient okHttpClient82 = okHttpClient81.copyWithDefaults();
        java.net.ProxySelector proxySelector83 = null;
        okHttpClient82.proxySelector = proxySelector83;
        com.squareup.okhttp.OkAuthenticator okAuthenticator85 = okHttpClient82.authenticator;
        okHttpClient76.authenticator = okAuthenticator85;
        com.squareup.okhttp.OkHttpClient okHttpClient87 = okHttpClient61.setAuthenticator(okAuthenticator85);
        javax.net.ssl.HostnameVerifier hostnameVerifier88 = okHttpClient61.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient89 = okHttpClient0.setHostnameVerifier(hostnameVerifier88);
        org.junit.Assert.assertNull(okResponseCache5);
        org.junit.Assert.assertNotNull(okHttpClient7);
        org.junit.Assert.assertNull(proxy8);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNull(hostnameVerifier14);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNull(okAuthenticator19);
        org.junit.Assert.assertNull(responseCache20);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNull(proxySelector23);
        org.junit.Assert.assertNull(proxySelector24);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNotNull(connectionPool33);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNotNull(okHttpClient40);
        org.junit.Assert.assertNull(okResponseCache42);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNotNull(connectionPool49);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(okHttpClient54);
        org.junit.Assert.assertNotNull(okHttpClient56);
        org.junit.Assert.assertNotNull(strList57);
        org.junit.Assert.assertNotNull(hostnameVerifier58);
        org.junit.Assert.assertNotNull(okHttpClient61);
        org.junit.Assert.assertNull(hostnameVerifier67);
        org.junit.Assert.assertNull(proxy68);
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertNotNull(okHttpClient75);
        org.junit.Assert.assertNotNull(okHttpClient81);
        org.junit.Assert.assertNotNull(okHttpClient82);
        org.junit.Assert.assertNotNull(okAuthenticator85);
        org.junit.Assert.assertNotNull(okHttpClient87);
        org.junit.Assert.assertNotNull(hostnameVerifier88);
        org.junit.Assert.assertNotNull(okHttpClient89);
    }

    @Test
    public void test07041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07041");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient9 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier10 = null;
        okHttpClient9.hostnameVerifier = hostnameVerifier10;
        java.net.ResponseCache responseCache12 = null;
        okHttpClient9.responseCache = responseCache12;
        java.util.List<java.lang.String> strList14 = okHttpClient9.transports;
        com.squareup.okhttp.ConnectionPool connectionPool15 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient9.connectionPool = connectionPool15;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient9.copyWithDefaults();
        java.net.ProxySelector proxySelector18 = okHttpClient17.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory19 = okHttpClient17.getSslSocketFactory();
        okHttpClient0.sslSocketFactory = sSLSocketFactory19;
        java.net.Socket socket21 = sSLSocketFactory19.createSocket();
        java.lang.String[] strArray22 = sSLSocketFactory19.getDefaultCipherSuites();
        java.lang.String[] strArray23 = sSLSocketFactory19.getDefaultCipherSuites();
        java.lang.String[] strArray24 = sSLSocketFactory19.getDefaultCipherSuites();
        java.net.Socket socket25 = sSLSocketFactory19.createSocket();
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket28 = sSLSocketFactory19.createSocket("DIRECT", (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.net.UnknownHostException; message: DIRECT");
        } catch (java.net.UnknownHostException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNotNull(connectionPool15);
        org.junit.Assert.assertNotNull(okHttpClient17);
// flaky:         org.junit.Assert.assertNull(proxySelector18);
        org.junit.Assert.assertNotNull(sSLSocketFactory19);
        org.junit.Assert.assertNotNull(socket21);
        org.junit.Assert.assertEquals(socket21.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(socket25);
        org.junit.Assert.assertEquals(socket25.toString(), "Socket[unconnected]");
    }

    @Test
    public void test07042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07042");
        com.squareup.okhttp.ConnectionPool connectionPool2 = new com.squareup.okhttp.ConnectionPool(10, (long) (byte) 100);
        com.squareup.okhttp.Address address3 = null;
        com.squareup.okhttp.Connection connection4 = connectionPool2.get(address3);
        org.junit.Assert.assertNull(connection4);
    }

    @Test
    public void test07043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07043");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        java.net.CookieHandler cookieHandler7 = null;
        okHttpClient0.cookieHandler = cookieHandler7;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier10 = null;
        okHttpClient9.hostnameVerifier = hostnameVerifier10;
        java.net.ResponseCache responseCache12 = null;
        okHttpClient9.responseCache = responseCache12;
        java.util.List<java.lang.String> strList14 = okHttpClient9.transports;
        com.squareup.okhttp.ConnectionPool connectionPool15 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient9.connectionPool = connectionPool15;
        java.net.CookieHandler cookieHandler17 = okHttpClient9.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache18 = okHttpClient9.okResponseCache();
        java.net.CookieHandler cookieHandler19 = okHttpClient9.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient20 = new com.squareup.okhttp.OkHttpClient(okHttpClient9);
        com.squareup.okhttp.OkHttpClient okHttpClient21 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier22 = null;
        okHttpClient21.hostnameVerifier = hostnameVerifier22;
        java.net.ProxySelector proxySelector24 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient21.setProxySelector(proxySelector24);
        java.net.CookieHandler cookieHandler26 = okHttpClient21.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient27 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier28 = null;
        okHttpClient27.hostnameVerifier = hostnameVerifier28;
        java.net.ResponseCache responseCache30 = null;
        okHttpClient27.responseCache = responseCache30;
        java.util.List<java.lang.String> strList32 = okHttpClient27.transports;
        com.squareup.okhttp.ConnectionPool connectionPool33 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient27.connectionPool = connectionPool33;
        java.net.Proxy proxy35 = null;
        okHttpClient27.proxy = proxy35;
        java.util.Set<com.squareup.okhttp.Route> routeSet37 = okHttpClient27.failedRoutes;
        okHttpClient21.failedRoutes = routeSet37;
        okHttpClient20.failedRoutes = routeSet37;
        okHttpClient0.failedRoutes = routeSet37;
        com.squareup.okhttp.OkHttpClient okHttpClient41 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier42 = null;
        okHttpClient41.hostnameVerifier = hostnameVerifier42;
        java.net.ProxySelector proxySelector44 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient45 = okHttpClient41.setProxySelector(proxySelector44);
        java.net.CookieHandler cookieHandler46 = okHttpClient41.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient47 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier48 = null;
        okHttpClient47.hostnameVerifier = hostnameVerifier48;
        java.net.ResponseCache responseCache50 = null;
        okHttpClient47.responseCache = responseCache50;
        java.util.List<java.lang.String> strList52 = okHttpClient47.transports;
        com.squareup.okhttp.ConnectionPool connectionPool53 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient47.connectionPool = connectionPool53;
        java.net.Proxy proxy55 = null;
        okHttpClient47.proxy = proxy55;
        java.util.Set<com.squareup.okhttp.Route> routeSet57 = okHttpClient47.failedRoutes;
        okHttpClient41.failedRoutes = routeSet57;
        java.net.ProxySelector proxySelector59 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient60 = okHttpClient41.setProxySelector(proxySelector59);
        com.squareup.okhttp.ConnectionPool connectionPool63 = new com.squareup.okhttp.ConnectionPool((int) (short) 10, (long) '4');
        okHttpClient41.connectionPool = connectionPool63;
        connectionPool63.evictAll();
        okHttpClient0.connectionPool = connectionPool63;
        java.net.CookieHandler cookieHandler67 = null;
        okHttpClient0.cookieHandler = cookieHandler67;
        boolean boolean69 = okHttpClient0.followProtocolRedirects;
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNotNull(connectionPool15);
        org.junit.Assert.assertNull(cookieHandler17);
        org.junit.Assert.assertNull(okResponseCache18);
        org.junit.Assert.assertNull(cookieHandler19);
        org.junit.Assert.assertNotNull(okHttpClient25);
        org.junit.Assert.assertNull(cookieHandler26);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNotNull(connectionPool33);
        org.junit.Assert.assertNotNull(routeSet37);
        org.junit.Assert.assertNotNull(okHttpClient45);
        org.junit.Assert.assertNull(cookieHandler46);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNotNull(connectionPool53);
        org.junit.Assert.assertNotNull(routeSet57);
        org.junit.Assert.assertNotNull(okHttpClient60);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
    }

    @Test
    public void test07044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07044");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        boolean boolean3 = okHttpClient0.getFollowProtocolRedirects();
        java.net.CookieHandler cookieHandler4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setCookieHandler(cookieHandler4);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory6 = null;
        okHttpClient5.sslSocketFactory = sSLSocketFactory6;
        java.net.ResponseCache responseCache8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient5.setResponseCache(responseCache8);
        java.net.ProxySelector proxySelector10 = okHttpClient9.getProxySelector();
        java.net.ProxySelector proxySelector11 = okHttpClient9.proxySelector;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier13 = null;
        okHttpClient12.hostnameVerifier = hostnameVerifier13;
        java.net.ResponseCache responseCache15 = null;
        okHttpClient12.responseCache = responseCache15;
        java.util.List<java.lang.String> strList17 = okHttpClient12.transports;
        com.squareup.okhttp.ConnectionPool connectionPool18 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient12.connectionPool = connectionPool18;
        java.net.Proxy proxy20 = null;
        okHttpClient12.proxy = proxy20;
        boolean boolean22 = okHttpClient12.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient12.setFollowProtocolRedirects(true);
        javax.net.ssl.HostnameVerifier hostnameVerifier25 = null;
        okHttpClient12.hostnameVerifier = hostnameVerifier25;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier28 = null;
        okHttpClient27.hostnameVerifier = hostnameVerifier28;
        java.net.ResponseCache responseCache30 = null;
        okHttpClient27.responseCache = responseCache30;
        javax.net.ssl.HostnameVerifier hostnameVerifier32 = okHttpClient27.hostnameVerifier;
        java.net.Proxy proxy33 = okHttpClient27.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool36 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient27.connectionPool = connectionPool36;
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient27.copyWithDefaults();
        java.net.Proxy proxy39 = okHttpClient38.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier40 = okHttpClient38.getHostnameVerifier();
        okHttpClient12.hostnameVerifier = hostnameVerifier40;
        okHttpClient9.hostnameVerifier = hostnameVerifier40;
        java.net.CookieHandler cookieHandler43 = okHttpClient9.cookieHandler;
        com.squareup.okhttp.ConnectionPool connectionPool46 = new com.squareup.okhttp.ConnectionPool((int) ' ', (long) (byte) 0);
        okHttpClient9.connectionPool = connectionPool46;
        connectionPool46.evictAll();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNull(proxySelector10);
        org.junit.Assert.assertNull(proxySelector11);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNotNull(connectionPool18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNull(hostnameVerifier32);
        org.junit.Assert.assertNull(proxy33);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNull(proxy39);
        org.junit.Assert.assertNotNull(hostnameVerifier40);
        org.junit.Assert.assertNull(cookieHandler43);
    }

    @Test
    public void test07045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07045");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.CookieHandler cookieHandler8 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache9 = okHttpClient0.okResponseCache();
        java.net.CookieHandler cookieHandler10 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        java.net.Proxy proxy12 = java.net.Proxy.NO_PROXY;
        boolean boolean14 = proxy12.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type15 = proxy12.type();
        java.net.SocketAddress socketAddress16 = proxy12.address();
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient0.setProxy(proxy12);
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier19 = null;
        okHttpClient18.hostnameVerifier = hostnameVerifier19;
        java.net.ResponseCache responseCache21 = null;
        okHttpClient18.responseCache = responseCache21;
        java.util.List<java.lang.String> strList23 = okHttpClient18.transports;
        com.squareup.okhttp.ConnectionPool connectionPool24 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient18.connectionPool = connectionPool24;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient18.copyWithDefaults();
        java.net.ProxySelector proxySelector27 = okHttpClient26.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory28 = okHttpClient26.getSslSocketFactory();
        okHttpClient17.sslSocketFactory = sSLSocketFactory28;
        java.lang.String[] strArray30 = sSLSocketFactory28.getDefaultCipherSuites();
        java.lang.String[] strArray31 = sSLSocketFactory28.getSupportedCipherSuites();
        java.net.Socket socket32 = sSLSocketFactory28.createSocket();
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket35 = sSLSocketFactory28.createSocket("hi!", (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.net.UnknownHostException; message: hi!");
        } catch (java.net.UnknownHostException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNull(cookieHandler8);
        org.junit.Assert.assertNull(okResponseCache9);
        org.junit.Assert.assertNull(cookieHandler10);
        org.junit.Assert.assertNotNull(proxy12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + type15 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type15.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress16);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNotNull(connectionPool24);
        org.junit.Assert.assertNotNull(okHttpClient26);
// flaky:         org.junit.Assert.assertNull(proxySelector27);
        org.junit.Assert.assertNotNull(sSLSocketFactory28);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(socket32);
        org.junit.Assert.assertEquals(socket32.toString(), "Socket[unconnected]");
    }

    @Test
    public void test07046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07046");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient0.connectionPool = connectionPool9;
        java.util.List<java.lang.String> strList11 = okHttpClient0.getTransports();
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient0.setHostnameVerifier(hostnameVerifier12);
        com.squareup.okhttp.OkHttpClient okHttpClient14 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        java.net.CookieHandler cookieHandler15 = okHttpClient14.getCookieHandler();
        java.net.ProxySelector proxySelector16 = okHttpClient14.proxySelector;
        java.net.ResponseCache responseCache17 = okHttpClient14.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory18 = okHttpClient14.getSslSocketFactory();
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNull(cookieHandler15);
        org.junit.Assert.assertNull(proxySelector16);
        org.junit.Assert.assertNull(responseCache17);
        org.junit.Assert.assertNull(sSLSocketFactory18);
    }

    @Test
    public void test07047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07047");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient0.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.copyWithDefaults();
        java.net.Proxy proxy12 = okHttpClient11.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier13 = okHttpClient11.getHostnameVerifier();
        com.squareup.okhttp.ConnectionPool connectionPool14 = null;
        okHttpClient11.connectionPool = connectionPool14;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier17 = null;
        okHttpClient16.hostnameVerifier = hostnameVerifier17;
        java.net.ResponseCache responseCache19 = null;
        okHttpClient16.responseCache = responseCache19;
        java.util.List<java.lang.String> strList21 = okHttpClient16.transports;
        com.squareup.okhttp.ConnectionPool connectionPool22 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient16.connectionPool = connectionPool22;
        java.net.CookieHandler cookieHandler24 = okHttpClient16.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache25 = okHttpClient16.okResponseCache();
        java.net.CookieHandler cookieHandler26 = okHttpClient16.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient27 = new com.squareup.okhttp.OkHttpClient(okHttpClient16);
        com.squareup.okhttp.OkHttpClient okHttpClient28 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier29 = null;
        okHttpClient28.hostnameVerifier = hostnameVerifier29;
        java.net.ProxySelector proxySelector31 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient28.setProxySelector(proxySelector31);
        java.net.CookieHandler cookieHandler33 = okHttpClient28.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient34 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier35 = null;
        okHttpClient34.hostnameVerifier = hostnameVerifier35;
        java.net.ResponseCache responseCache37 = null;
        okHttpClient34.responseCache = responseCache37;
        java.util.List<java.lang.String> strList39 = okHttpClient34.transports;
        com.squareup.okhttp.ConnectionPool connectionPool40 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient34.connectionPool = connectionPool40;
        java.net.Proxy proxy42 = null;
        okHttpClient34.proxy = proxy42;
        java.util.Set<com.squareup.okhttp.Route> routeSet44 = okHttpClient34.failedRoutes;
        okHttpClient28.failedRoutes = routeSet44;
        okHttpClient27.failedRoutes = routeSet44;
        java.util.List<java.lang.String> strList47 = okHttpClient27.getTransports();
        java.net.ResponseCache responseCache48 = null;
        okHttpClient27.responseCache = responseCache48;
        java.net.Proxy proxy50 = java.net.Proxy.NO_PROXY;
        boolean boolean52 = proxy50.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type53 = proxy50.type();
        java.net.Proxy.Type type54 = proxy50.type();
        okHttpClient27.proxy = proxy50;
        okHttpClient11.proxy = proxy50;
        java.net.ResponseCache responseCache57 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient58 = okHttpClient11.setResponseCache(responseCache57);
        com.squareup.okhttp.OkHttpClient okHttpClient59 = new com.squareup.okhttp.OkHttpClient(okHttpClient58);
        java.util.List<java.lang.String> strList60 = okHttpClient58.getTransports();
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(proxy12);
        org.junit.Assert.assertNotNull(hostnameVerifier13);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(connectionPool22);
        org.junit.Assert.assertNull(cookieHandler24);
        org.junit.Assert.assertNull(okResponseCache25);
        org.junit.Assert.assertNull(cookieHandler26);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertNull(cookieHandler33);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNotNull(connectionPool40);
        org.junit.Assert.assertNotNull(routeSet44);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNotNull(proxy50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + type53 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type53.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertTrue("'" + type54 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type54.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNotNull(okHttpClient58);
        org.junit.Assert.assertNotNull(strList60);
    }

    @Test
    public void test07048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07048");
        com.squareup.okhttp.ConnectionPool connectionPool2 = new com.squareup.okhttp.ConnectionPool((int) (short) 100, (long) 1);
        connectionPool2.evictAll();
    }

    @Test
    public void test07049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07049");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        boolean boolean3 = okHttpClient0.getFollowProtocolRedirects();
        java.net.Proxy proxy4 = okHttpClient0.proxy;
        java.util.Set<com.squareup.okhttp.Route> routeSet5 = okHttpClient0.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool8 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient7.connectionPool = connectionPool8;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier11 = null;
        okHttpClient10.hostnameVerifier = hostnameVerifier11;
        java.net.ResponseCache responseCache13 = null;
        okHttpClient10.responseCache = responseCache13;
        java.util.List<java.lang.String> strList15 = okHttpClient10.transports;
        com.squareup.okhttp.ConnectionPool connectionPool16 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient10.connectionPool = connectionPool16;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient7.setConnectionPool(connectionPool16);
        java.net.ResponseCache responseCache19 = okHttpClient7.responseCache;
        java.net.ResponseCache responseCache20 = okHttpClient7.getResponseCache();
        java.net.ResponseCache responseCache21 = okHttpClient7.responseCache;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache23 = okHttpClient22.okResponseCache();
        java.net.ResponseCache responseCache24 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient22.setResponseCache(responseCache24);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory26 = okHttpClient22.sslSocketFactory;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory27 = okHttpClient22.sslSocketFactory;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier29 = null;
        okHttpClient28.hostnameVerifier = hostnameVerifier29;
        boolean boolean31 = okHttpClient28.getFollowProtocolRedirects();
        java.net.CookieHandler cookieHandler32 = okHttpClient28.cookieHandler;
        com.squareup.okhttp.OkHttpClient okHttpClient33 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier34 = null;
        okHttpClient33.hostnameVerifier = hostnameVerifier34;
        java.net.ResponseCache responseCache36 = null;
        okHttpClient33.responseCache = responseCache36;
        javax.net.ssl.HostnameVerifier hostnameVerifier38 = okHttpClient33.hostnameVerifier;
        java.net.Proxy proxy39 = okHttpClient33.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool42 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient33.connectionPool = connectionPool42;
        com.squareup.okhttp.OkHttpClient okHttpClient44 = okHttpClient33.copyWithDefaults();
        java.net.ResponseCache responseCache45 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient46 = okHttpClient44.setResponseCache(responseCache45);
        com.squareup.okhttp.OkAuthenticator okAuthenticator47 = okHttpClient44.authenticator;
        okHttpClient28.authenticator = okAuthenticator47;
        com.squareup.okhttp.OkHttpClient okHttpClient49 = okHttpClient22.setAuthenticator(okAuthenticator47);
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient7.setAuthenticator(okAuthenticator47);
        com.squareup.okhttp.OkHttpClient okHttpClient51 = okHttpClient6.setAuthenticator(okAuthenticator47);
        java.net.CookieHandler cookieHandler52 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient53 = okHttpClient51.setCookieHandler(cookieHandler52);
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache54 = okHttpClient51.okResponseCache();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(proxy4);
        org.junit.Assert.assertNotNull(routeSet5);
        org.junit.Assert.assertNotNull(connectionPool8);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(connectionPool16);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNull(responseCache19);
        org.junit.Assert.assertNull(responseCache20);
        org.junit.Assert.assertNull(responseCache21);
        org.junit.Assert.assertNull(okResponseCache23);
        org.junit.Assert.assertNotNull(okHttpClient25);
        org.junit.Assert.assertNull(sSLSocketFactory26);
        org.junit.Assert.assertNull(sSLSocketFactory27);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(cookieHandler32);
        org.junit.Assert.assertNull(hostnameVerifier38);
        org.junit.Assert.assertNull(proxy39);
        org.junit.Assert.assertNotNull(okHttpClient44);
        org.junit.Assert.assertNotNull(okHttpClient46);
        org.junit.Assert.assertNotNull(okAuthenticator47);
        org.junit.Assert.assertNotNull(okHttpClient49);
        org.junit.Assert.assertNotNull(okHttpClient50);
        org.junit.Assert.assertNotNull(okHttpClient51);
        org.junit.Assert.assertNotNull(okHttpClient53);
        org.junit.Assert.assertNull(okResponseCache54);
    }

    @Test
    public void test07050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07050");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.ResponseCache responseCache5 = null;
        okHttpClient4.responseCache = responseCache5;
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = okHttpClient4.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient4.setFollowProtocolRedirects(false);
        java.net.ProxySelector proxySelector10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient9.setProxySelector(proxySelector10);
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient11.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool15 = new com.squareup.okhttp.ConnectionPool(10, 0L);
        int int16 = connectionPool15.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient12.setConnectionPool(connectionPool15);
        com.squareup.okhttp.ConnectionPool connectionPool18 = okHttpClient12.connectionPool;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory19 = okHttpClient12.getSslSocketFactory();
        boolean boolean20 = okHttpClient12.getFollowProtocolRedirects();
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(hostnameVerifier7);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNotNull(connectionPool18);
        org.junit.Assert.assertNotNull(sSLSocketFactory19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test07051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07051");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache8 = okHttpClient7.okResponseCache();
        java.net.ResponseCache responseCache9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient7.setResponseCache(responseCache9);
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        okHttpClient7.transports = strList13;
        okHttpClient0.transports = strList13;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient0.setFollowProtocolRedirects(true);
        javax.net.ssl.HostnameVerifier hostnameVerifier19 = okHttpClient18.hostnameVerifier;
        java.net.ResponseCache responseCache20 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient18.setResponseCache(responseCache20);
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier23 = null;
        okHttpClient22.hostnameVerifier = hostnameVerifier23;
        java.net.ResponseCache responseCache25 = null;
        okHttpClient22.responseCache = responseCache25;
        javax.net.ssl.HostnameVerifier hostnameVerifier27 = okHttpClient22.hostnameVerifier;
        java.net.Proxy proxy28 = okHttpClient22.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient29 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache30 = okHttpClient29.okResponseCache();
        java.net.ResponseCache responseCache31 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient29.setResponseCache(responseCache31);
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        okHttpClient29.transports = strList35;
        okHttpClient22.transports = strList35;
        com.squareup.okhttp.OkHttpClient.DEFAULT_TRANSPORTS = strList35;
        com.squareup.okhttp.OkHttpClient.DEFAULT_TRANSPORTS = strList35;
        com.squareup.okhttp.OkHttpClient.DEFAULT_TRANSPORTS = strList35;
        // The following exception was thrown during execution in test generation
        try {
            com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient18.setTransports((java.util.List<java.lang.String>) strList35);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: transports doesn't contain http/1.1: [hi!]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNull(okResponseCache8);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNull(hostnameVerifier19);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNull(hostnameVerifier27);
        org.junit.Assert.assertNull(proxy28);
        org.junit.Assert.assertNull(okResponseCache30);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
    }

    @Test
    public void test07052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07052");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient0.connectionPool = connectionPool9;
        java.util.List<java.lang.String> strList11 = okHttpClient0.getTransports();
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient0.setHostnameVerifier(hostnameVerifier12);
        boolean boolean14 = okHttpClient13.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient(okHttpClient13);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory16 = okHttpClient13.getSslSocketFactory();
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(sSLSocketFactory16);
    }

    @Test
    public void test07053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07053");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.Proxy proxy8 = null;
        okHttpClient0.proxy = proxy8;
        boolean boolean10 = okHttpClient0.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.copyWithDefaults();
        java.net.CookieHandler cookieHandler12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setCookieHandler(cookieHandler12);
        boolean boolean14 = okHttpClient11.followProtocolRedirects;
        java.net.ResponseCache responseCache15 = null;
        okHttpClient11.responseCache = responseCache15;
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test07054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07054");
        com.squareup.okhttp.ConnectionPool connectionPool2 = new com.squareup.okhttp.ConnectionPool((int) '4', 1L);
        com.squareup.okhttp.Address address3 = null;
        com.squareup.okhttp.Connection connection4 = connectionPool2.get(address3);
        org.junit.Assert.assertNull(connection4);
    }

    @Test
    public void test07055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07055");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory8 = okHttpClient0.getSslSocketFactory();
        java.net.CookieHandler cookieHandler9 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.ConnectionPool connectionPool10 = com.squareup.okhttp.ConnectionPool.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool10);
        java.net.CookieHandler cookieHandler12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient0.setCookieHandler(cookieHandler12);
        com.squareup.okhttp.OkHttpClient okHttpClient14 = new com.squareup.okhttp.OkHttpClient(okHttpClient13);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNull(sSLSocketFactory8);
        org.junit.Assert.assertNull(cookieHandler9);
        org.junit.Assert.assertNotNull(connectionPool10);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(okHttpClient13);
    }

    @Test
    public void test07056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07056");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.CookieHandler cookieHandler5 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = null;
        okHttpClient6.hostnameVerifier = hostnameVerifier7;
        java.net.ResponseCache responseCache9 = null;
        okHttpClient6.responseCache = responseCache9;
        java.util.List<java.lang.String> strList11 = okHttpClient6.transports;
        com.squareup.okhttp.ConnectionPool connectionPool12 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient6.connectionPool = connectionPool12;
        java.net.Proxy proxy14 = null;
        okHttpClient6.proxy = proxy14;
        java.util.Set<com.squareup.okhttp.Route> routeSet16 = okHttpClient6.failedRoutes;
        okHttpClient0.failedRoutes = routeSet16;
        java.net.ProxySelector proxySelector18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient0.setProxySelector(proxySelector18);
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient21 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier22 = null;
        okHttpClient21.hostnameVerifier = hostnameVerifier22;
        java.net.ResponseCache responseCache24 = null;
        okHttpClient21.responseCache = responseCache24;
        javax.net.ssl.HostnameVerifier hostnameVerifier26 = okHttpClient21.hostnameVerifier;
        java.net.Proxy proxy27 = okHttpClient21.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool30 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient21.connectionPool = connectionPool30;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient21.copyWithDefaults();
        java.net.Proxy proxy33 = okHttpClient32.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier34 = okHttpClient32.getHostnameVerifier();
        okHttpClient0.hostnameVerifier = hostnameVerifier34;
        java.net.CookieHandler cookieHandler36 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient0.setFollowProtocolRedirects(false);
        com.squareup.okhttp.OkHttpClient okHttpClient39 = new com.squareup.okhttp.OkHttpClient(okHttpClient38);
        com.squareup.okhttp.OkHttpClient okHttpClient40 = okHttpClient38.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient41 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool42 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient41.connectionPool = connectionPool42;
        com.squareup.okhttp.OkHttpClient okHttpClient44 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier45 = null;
        okHttpClient44.hostnameVerifier = hostnameVerifier45;
        java.net.ResponseCache responseCache47 = null;
        okHttpClient44.responseCache = responseCache47;
        java.util.List<java.lang.String> strList49 = okHttpClient44.transports;
        com.squareup.okhttp.ConnectionPool connectionPool50 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient44.connectionPool = connectionPool50;
        com.squareup.okhttp.OkHttpClient okHttpClient52 = okHttpClient41.setConnectionPool(connectionPool50);
        com.squareup.okhttp.ConnectionPool connectionPool53 = okHttpClient52.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator54 = okHttpClient52.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool57 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient52.connectionPool = connectionPool57;
        java.net.ResponseCache responseCache59 = okHttpClient52.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory60 = okHttpClient52.sslSocketFactory;
        java.net.Proxy proxy61 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress62 = proxy61.address();
        com.squareup.okhttp.OkHttpClient okHttpClient63 = okHttpClient52.setProxy(proxy61);
        com.squareup.okhttp.ConnectionPool connectionPool64 = okHttpClient52.getConnectionPool();
        connectionPool64.evictAll();
        okHttpClient38.connectionPool = connectionPool64;
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNotNull(routeSet16);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNull(hostnameVerifier26);
        org.junit.Assert.assertNull(proxy27);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertNull(proxy33);
        org.junit.Assert.assertNotNull(hostnameVerifier34);
        org.junit.Assert.assertNull(cookieHandler36);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNotNull(okHttpClient40);
        org.junit.Assert.assertNotNull(connectionPool42);
        org.junit.Assert.assertNull(strList49);
        org.junit.Assert.assertNotNull(connectionPool50);
        org.junit.Assert.assertNotNull(okHttpClient52);
        org.junit.Assert.assertNotNull(connectionPool53);
        org.junit.Assert.assertNull(okAuthenticator54);
        org.junit.Assert.assertNull(responseCache59);
        org.junit.Assert.assertNull(sSLSocketFactory60);
        org.junit.Assert.assertNotNull(proxy61);
        org.junit.Assert.assertNull(socketAddress62);
        org.junit.Assert.assertNotNull(okHttpClient63);
        org.junit.Assert.assertNotNull(connectionPool64);
    }

    @Test
    public void test07057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07057");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient0.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.copyWithDefaults();
        java.net.Proxy proxy12 = okHttpClient11.proxy;
        com.squareup.okhttp.OkAuthenticator okAuthenticator13 = okHttpClient11.authenticator;
        java.net.ProxySelector proxySelector14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient11.setProxySelector(proxySelector14);
        java.net.Proxy proxy16 = okHttpClient11.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = null;
        okHttpClient17.hostnameVerifier = hostnameVerifier18;
        java.net.ResponseCache responseCache20 = null;
        okHttpClient17.responseCache = responseCache20;
        java.util.List<java.lang.String> strList22 = okHttpClient17.transports;
        com.squareup.okhttp.ConnectionPool connectionPool23 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient17.connectionPool = connectionPool23;
        java.net.Proxy proxy25 = null;
        okHttpClient17.proxy = proxy25;
        boolean boolean27 = okHttpClient17.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = new com.squareup.okhttp.OkHttpClient(okHttpClient17);
        java.net.ProxySelector proxySelector29 = okHttpClient28.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = okHttpClient28.hostnameVerifier;
        java.net.Proxy proxy31 = java.net.Proxy.NO_PROXY;
        boolean boolean33 = proxy31.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type34 = proxy31.type();
        java.net.Proxy.Type type35 = proxy31.type();
        okHttpClient28.proxy = proxy31;
        com.squareup.okhttp.OkHttpClient okHttpClient37 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier38 = null;
        okHttpClient37.hostnameVerifier = hostnameVerifier38;
        java.net.ResponseCache responseCache40 = null;
        okHttpClient37.responseCache = responseCache40;
        java.util.List<java.lang.String> strList42 = okHttpClient37.transports;
        com.squareup.okhttp.ConnectionPool connectionPool43 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient37.connectionPool = connectionPool43;
        com.squareup.okhttp.OkHttpClient okHttpClient45 = okHttpClient37.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient46 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier47 = null;
        okHttpClient46.hostnameVerifier = hostnameVerifier47;
        java.net.ResponseCache responseCache49 = null;
        okHttpClient46.responseCache = responseCache49;
        java.util.List<java.lang.String> strList51 = okHttpClient46.transports;
        com.squareup.okhttp.ConnectionPool connectionPool52 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient46.connectionPool = connectionPool52;
        com.squareup.okhttp.OkHttpClient okHttpClient54 = okHttpClient46.copyWithDefaults();
        java.net.ProxySelector proxySelector55 = okHttpClient54.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory56 = okHttpClient54.getSslSocketFactory();
        okHttpClient37.sslSocketFactory = sSLSocketFactory56;
        okHttpClient28.sslSocketFactory = sSLSocketFactory56;
        java.net.Socket socket59 = sSLSocketFactory56.createSocket();
        com.squareup.okhttp.OkHttpClient okHttpClient60 = okHttpClient11.setSSLSocketFactory(sSLSocketFactory56);
        java.net.Socket socket61 = sSLSocketFactory56.createSocket();
        java.net.InetAddress inetAddress62 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket64 = sSLSocketFactory56.createSocket(inetAddress62, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: port out of range:-1");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(proxy12);
        org.junit.Assert.assertNotNull(okAuthenticator13);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNull(proxy16);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNotNull(connectionPool23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(proxySelector29);
        org.junit.Assert.assertNull(hostnameVerifier30);
        org.junit.Assert.assertNotNull(proxy31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + type34 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type34.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertTrue("'" + type35 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type35.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNotNull(connectionPool43);
        org.junit.Assert.assertNotNull(okHttpClient45);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNotNull(connectionPool52);
        org.junit.Assert.assertNotNull(okHttpClient54);
// flaky:         org.junit.Assert.assertNull(proxySelector55);
        org.junit.Assert.assertNotNull(sSLSocketFactory56);
        org.junit.Assert.assertNotNull(socket59);
        org.junit.Assert.assertEquals(socket59.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(okHttpClient60);
        org.junit.Assert.assertNotNull(socket61);
        org.junit.Assert.assertEquals(socket61.toString(), "Socket[unconnected]");
    }

    @Test
    public void test07058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07058");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.ResponseCache responseCache5 = null;
        okHttpClient4.responseCache = responseCache5;
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = okHttpClient4.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient4.copyWithDefaults();
        java.net.ResponseCache responseCache9 = okHttpClient8.responseCache;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = new com.squareup.okhttp.OkHttpClient(okHttpClient8);
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient8.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setConnectionPool(connectionPool12);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(hostnameVerifier7);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertNull(responseCache9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(okHttpClient13);
    }

    @Test
    public void test07059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07059");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient4.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool8 = new com.squareup.okhttp.ConnectionPool(10, (long) 10);
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient5.setConnectionPool(connectionPool8);
        java.net.CookieHandler cookieHandler10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient9.setCookieHandler(cookieHandler10);
        com.squareup.okhttp.OkHttpClient okHttpClient12 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier13 = null;
        okHttpClient12.hostnameVerifier = hostnameVerifier13;
        java.net.ResponseCache responseCache15 = null;
        okHttpClient12.responseCache = responseCache15;
        java.util.List<java.lang.String> strList17 = okHttpClient12.transports;
        com.squareup.okhttp.ConnectionPool connectionPool18 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient12.connectionPool = connectionPool18;
        java.net.Proxy proxy20 = null;
        okHttpClient12.proxy = proxy20;
        boolean boolean22 = okHttpClient12.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient23 = new com.squareup.okhttp.OkHttpClient(okHttpClient12);
        java.net.Proxy proxy24 = okHttpClient12.proxy;
        boolean boolean25 = okHttpClient12.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient12.setFollowProtocolRedirects(true);
        com.squareup.okhttp.OkHttpClient okHttpClient28 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier29 = null;
        okHttpClient28.hostnameVerifier = hostnameVerifier29;
        java.net.ResponseCache responseCache31 = null;
        okHttpClient28.responseCache = responseCache31;
        javax.net.ssl.HostnameVerifier hostnameVerifier33 = okHttpClient28.hostnameVerifier;
        java.net.Proxy proxy34 = okHttpClient28.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient35 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache36 = okHttpClient35.okResponseCache();
        java.net.ResponseCache responseCache37 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient35.setResponseCache(responseCache37);
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList41 = new java.util.ArrayList<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        okHttpClient35.transports = strList41;
        okHttpClient28.transports = strList41;
        javax.net.ssl.HostnameVerifier hostnameVerifier45 = null;
        okHttpClient28.hostnameVerifier = hostnameVerifier45;
        com.squareup.okhttp.OkHttpClient okHttpClient47 = new com.squareup.okhttp.OkHttpClient(okHttpClient28);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory48 = okHttpClient28.sslSocketFactory;
        java.net.CookieHandler cookieHandler49 = okHttpClient28.cookieHandler;
        java.net.CookieHandler cookieHandler50 = null;
        okHttpClient28.cookieHandler = cookieHandler50;
        com.squareup.okhttp.OkHttpClient okHttpClient52 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool53 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient52.connectionPool = connectionPool53;
        com.squareup.okhttp.OkHttpClient okHttpClient55 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier56 = null;
        okHttpClient55.hostnameVerifier = hostnameVerifier56;
        java.net.ResponseCache responseCache58 = null;
        okHttpClient55.responseCache = responseCache58;
        java.util.List<java.lang.String> strList60 = okHttpClient55.transports;
        com.squareup.okhttp.ConnectionPool connectionPool61 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient55.connectionPool = connectionPool61;
        com.squareup.okhttp.OkHttpClient okHttpClient63 = okHttpClient52.setConnectionPool(connectionPool61);
        com.squareup.okhttp.ConnectionPool connectionPool64 = okHttpClient63.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator65 = okHttpClient63.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool68 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient63.connectionPool = connectionPool68;
        java.net.ResponseCache responseCache70 = okHttpClient63.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory71 = okHttpClient63.sslSocketFactory;
        java.net.Proxy proxy72 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress73 = proxy72.address();
        com.squareup.okhttp.OkHttpClient okHttpClient74 = okHttpClient63.setProxy(proxy72);
        com.squareup.okhttp.OkHttpClient okHttpClient75 = new com.squareup.okhttp.OkHttpClient(okHttpClient74);
        com.squareup.okhttp.OkHttpClient okHttpClient76 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier77 = null;
        okHttpClient76.hostnameVerifier = hostnameVerifier77;
        java.net.ResponseCache responseCache79 = null;
        okHttpClient76.responseCache = responseCache79;
        java.util.List<java.lang.String> strList81 = okHttpClient76.transports;
        com.squareup.okhttp.ConnectionPool connectionPool82 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient76.connectionPool = connectionPool82;
        com.squareup.okhttp.OkHttpClient okHttpClient84 = okHttpClient76.copyWithDefaults();
        java.net.ProxySelector proxySelector85 = okHttpClient84.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory86 = okHttpClient84.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient87 = okHttpClient74.setSSLSocketFactory(sSLSocketFactory86);
        java.lang.String[] strArray88 = sSLSocketFactory86.getSupportedCipherSuites();
        java.lang.String[] strArray89 = sSLSocketFactory86.getSupportedCipherSuites();
        java.lang.String[] strArray90 = sSLSocketFactory86.getSupportedCipherSuites();
        okHttpClient28.sslSocketFactory = sSLSocketFactory86;
        okHttpClient12.sslSocketFactory = sSLSocketFactory86;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory93 = okHttpClient12.sslSocketFactory;
        okHttpClient11.sslSocketFactory = sSLSocketFactory93;
        javax.net.ssl.HostnameVerifier hostnameVerifier95 = okHttpClient11.hostnameVerifier;
        java.net.ResponseCache responseCache96 = okHttpClient11.getResponseCache();
        java.net.ProxySelector proxySelector97 = null;
        okHttpClient11.proxySelector = proxySelector97;
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNotNull(connectionPool18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(proxy24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNull(hostnameVerifier33);
        org.junit.Assert.assertNull(proxy34);
        org.junit.Assert.assertNull(okResponseCache36);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(sSLSocketFactory48);
        org.junit.Assert.assertNull(cookieHandler49);
        org.junit.Assert.assertNotNull(connectionPool53);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNotNull(connectionPool61);
        org.junit.Assert.assertNotNull(okHttpClient63);
        org.junit.Assert.assertNotNull(connectionPool64);
        org.junit.Assert.assertNull(okAuthenticator65);
        org.junit.Assert.assertNull(responseCache70);
        org.junit.Assert.assertNull(sSLSocketFactory71);
        org.junit.Assert.assertNotNull(proxy72);
        org.junit.Assert.assertNull(socketAddress73);
        org.junit.Assert.assertNotNull(okHttpClient74);
        org.junit.Assert.assertNull(strList81);
        org.junit.Assert.assertNotNull(connectionPool82);
        org.junit.Assert.assertNotNull(okHttpClient84);
// flaky:         org.junit.Assert.assertNull(proxySelector85);
        org.junit.Assert.assertNotNull(sSLSocketFactory86);
        org.junit.Assert.assertNotNull(okHttpClient87);
        org.junit.Assert.assertNotNull(strArray88);
        org.junit.Assert.assertNotNull(strArray89);
        org.junit.Assert.assertNotNull(strArray90);
        org.junit.Assert.assertNotNull(sSLSocketFactory93);
        org.junit.Assert.assertNotNull(hostnameVerifier95);
        org.junit.Assert.assertNull(responseCache96);
    }

    @Test
    public void test07060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07060");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.OkAuthenticator okAuthenticator12 = okHttpClient11.getAuthenticator();
        java.net.ProxySelector proxySelector13 = okHttpClient11.getProxySelector();
        java.net.ResponseCache responseCache14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient11.setResponseCache(responseCache14);
        java.net.CookieHandler cookieHandler16 = null;
        okHttpClient15.cookieHandler = cookieHandler16;
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = okHttpClient15.getHostnameVerifier();
        java.net.ResponseCache responseCache19 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient15.setResponseCache(responseCache19);
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache21 = okHttpClient20.okResponseCache();
        com.squareup.okhttp.ConnectionPool connectionPool22 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient20.setConnectionPool(connectionPool22);
        com.squareup.okhttp.ConnectionPool connectionPool26 = new com.squareup.okhttp.ConnectionPool((int) (byte) 100, (long) 0);
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient20.setConnectionPool(connectionPool26);
        int int28 = connectionPool26.getConnectionCount();
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(okAuthenticator12);
        org.junit.Assert.assertNull(proxySelector13);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNull(hostnameVerifier18);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNull(okResponseCache21);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
    }

    @Test
    public void test07061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07061");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient0.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.copyWithDefaults();
        java.net.ProxySelector proxySelector12 = okHttpClient0.getProxySelector();
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient14 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool15 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient14.connectionPool = connectionPool15;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = null;
        okHttpClient17.hostnameVerifier = hostnameVerifier18;
        java.net.ResponseCache responseCache20 = null;
        okHttpClient17.responseCache = responseCache20;
        java.util.List<java.lang.String> strList22 = okHttpClient17.transports;
        com.squareup.okhttp.ConnectionPool connectionPool23 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient17.connectionPool = connectionPool23;
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient14.setConnectionPool(connectionPool23);
        java.net.Proxy proxy26 = okHttpClient25.proxy;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory27 = null;
        okHttpClient25.sslSocketFactory = sSLSocketFactory27;
        com.squareup.okhttp.OkHttpClient okHttpClient29 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = null;
        okHttpClient29.hostnameVerifier = hostnameVerifier30;
        java.net.ResponseCache responseCache32 = null;
        okHttpClient29.responseCache = responseCache32;
        java.util.List<java.lang.String> strList34 = okHttpClient29.transports;
        com.squareup.okhttp.ConnectionPool connectionPool35 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient29.connectionPool = connectionPool35;
        com.squareup.okhttp.ConnectionPool connectionPool37 = okHttpClient29.connectionPool;
        int int38 = connectionPool37.getHttpConnectionCount();
        com.squareup.okhttp.Address address39 = null;
        com.squareup.okhttp.Connection connection40 = connectionPool37.get(address39);
        okHttpClient25.connectionPool = connectionPool37;
        java.net.ProxySelector proxySelector42 = okHttpClient25.proxySelector;
        java.net.Proxy proxy43 = java.net.Proxy.NO_PROXY;
        boolean boolean45 = proxy43.equals((java.lang.Object) 1L);
        com.squareup.okhttp.OkHttpClient okHttpClient46 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache47 = okHttpClient46.okResponseCache();
        java.net.ResponseCache responseCache48 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient49 = okHttpClient46.setResponseCache(responseCache48);
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList52 = new java.util.ArrayList<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        okHttpClient46.transports = strList52;
        boolean boolean55 = proxy43.equals((java.lang.Object) strList52);
        okHttpClient25.proxy = proxy43;
        java.lang.String str57 = proxy43.toString();
        com.squareup.okhttp.OkHttpClient okHttpClient58 = okHttpClient0.setProxy(proxy43);
        com.squareup.okhttp.OkHttpClient okHttpClient59 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        java.net.CookieHandler cookieHandler60 = okHttpClient59.getCookieHandler();
        java.net.ProxySelector proxySelector61 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient62 = okHttpClient59.setProxySelector(proxySelector61);
        com.squareup.okhttp.OkHttpClient okHttpClient63 = new com.squareup.okhttp.OkHttpClient(okHttpClient59);
        java.util.List<java.lang.String> strList64 = okHttpClient63.transports;
        com.squareup.okhttp.ConnectionPool connectionPool65 = okHttpClient63.getConnectionPool();
        java.net.Proxy proxy66 = okHttpClient63.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier67 = okHttpClient63.getHostnameVerifier();
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(proxySelector12);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNotNull(connectionPool15);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNotNull(connectionPool23);
        org.junit.Assert.assertNotNull(okHttpClient25);
        org.junit.Assert.assertNull(proxy26);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(connectionPool35);
        org.junit.Assert.assertNotNull(connectionPool37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNull(connection40);
        org.junit.Assert.assertNull(proxySelector42);
        org.junit.Assert.assertNotNull(proxy43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(okResponseCache47);
        org.junit.Assert.assertNotNull(okHttpClient49);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "DIRECT" + "'", str57, "DIRECT");
        org.junit.Assert.assertNotNull(okHttpClient58);
        org.junit.Assert.assertNull(cookieHandler60);
        org.junit.Assert.assertNotNull(okHttpClient62);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNull(connectionPool65);
        org.junit.Assert.assertNull(proxy66);
        org.junit.Assert.assertNull(hostnameVerifier67);
    }

    @Test
    public void test07062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07062");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache1 = okHttpClient0.okResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient2 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache3 = okHttpClient2.okResponseCache();
        java.net.ResponseCache responseCache4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setResponseCache(responseCache4);
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList8 = new java.util.ArrayList<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList8, strArray7);
        okHttpClient2.transports = strList8;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient2.setSSLSocketFactory(sSLSocketFactory11);
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = null;
        okHttpClient13.hostnameVerifier = hostnameVerifier14;
        java.net.ResponseCache responseCache16 = null;
        okHttpClient13.responseCache = responseCache16;
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = okHttpClient13.hostnameVerifier;
        java.net.Proxy proxy19 = okHttpClient13.getProxy();
        java.net.CookieHandler cookieHandler20 = null;
        okHttpClient13.cookieHandler = cookieHandler20;
        okHttpClient13.followProtocolRedirects = true;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier25 = null;
        okHttpClient24.hostnameVerifier = hostnameVerifier25;
        java.net.ResponseCache responseCache27 = null;
        okHttpClient24.responseCache = responseCache27;
        javax.net.ssl.HostnameVerifier hostnameVerifier29 = okHttpClient24.hostnameVerifier;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory30 = okHttpClient24.sslSocketFactory;
        java.net.CookieHandler cookieHandler31 = okHttpClient24.cookieHandler;
        javax.net.ssl.HostnameVerifier hostnameVerifier32 = okHttpClient24.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient33 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool34 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient33.connectionPool = connectionPool34;
        com.squareup.okhttp.OkAuthenticator okAuthenticator36 = null;
        okHttpClient33.authenticator = okAuthenticator36;
        java.util.List<java.lang.String> strList38 = okHttpClient33.transports;
        java.net.ResponseCache responseCache39 = null;
        okHttpClient33.responseCache = responseCache39;
        com.squareup.okhttp.OkHttpClient okHttpClient41 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier42 = null;
        okHttpClient41.hostnameVerifier = hostnameVerifier42;
        java.net.ResponseCache responseCache44 = null;
        okHttpClient41.responseCache = responseCache44;
        javax.net.ssl.HostnameVerifier hostnameVerifier46 = okHttpClient41.hostnameVerifier;
        java.net.Proxy proxy47 = okHttpClient41.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool50 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient41.connectionPool = connectionPool50;
        com.squareup.okhttp.OkHttpClient okHttpClient52 = okHttpClient41.copyWithDefaults();
        java.net.Proxy proxy53 = okHttpClient52.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier54 = okHttpClient52.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient55 = okHttpClient33.setHostnameVerifier(hostnameVerifier54);
        com.squareup.okhttp.OkHttpClient okHttpClient56 = okHttpClient24.setHostnameVerifier(hostnameVerifier54);
        okHttpClient13.hostnameVerifier = hostnameVerifier54;
        com.squareup.okhttp.OkHttpClient okHttpClient58 = okHttpClient2.setHostnameVerifier(hostnameVerifier54);
        com.squareup.okhttp.OkHttpClient okHttpClient59 = okHttpClient0.setHostnameVerifier(hostnameVerifier54);
        com.squareup.okhttp.OkAuthenticator okAuthenticator60 = okHttpClient59.authenticator;
        java.net.CookieHandler cookieHandler61 = okHttpClient59.cookieHandler;
        org.junit.Assert.assertNull(okResponseCache1);
        org.junit.Assert.assertNull(okResponseCache3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertNull(hostnameVerifier18);
        org.junit.Assert.assertNull(proxy19);
        org.junit.Assert.assertNull(hostnameVerifier29);
        org.junit.Assert.assertNull(sSLSocketFactory30);
        org.junit.Assert.assertNull(cookieHandler31);
        org.junit.Assert.assertNull(hostnameVerifier32);
        org.junit.Assert.assertNotNull(connectionPool34);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNull(hostnameVerifier46);
        org.junit.Assert.assertNull(proxy47);
        org.junit.Assert.assertNotNull(okHttpClient52);
        org.junit.Assert.assertNull(proxy53);
        org.junit.Assert.assertNotNull(hostnameVerifier54);
        org.junit.Assert.assertNotNull(okHttpClient55);
        org.junit.Assert.assertNotNull(okHttpClient56);
        org.junit.Assert.assertNotNull(okHttpClient58);
        org.junit.Assert.assertNotNull(okHttpClient59);
        org.junit.Assert.assertNull(okAuthenticator60);
        org.junit.Assert.assertNull(cookieHandler61);
    }

    @Test
    public void test07063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07063");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory8 = okHttpClient0.getSslSocketFactory();
        java.net.CookieHandler cookieHandler9 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.ConnectionPool connectionPool10 = com.squareup.okhttp.ConnectionPool.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool10);
        int int12 = connectionPool10.getConnectionCount();
        int int13 = connectionPool10.getSpdyConnectionCount();
        int int14 = connectionPool10.getHttpConnectionCount();
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNull(sSLSocketFactory8);
        org.junit.Assert.assertNull(cookieHandler9);
        org.junit.Assert.assertNotNull(connectionPool10);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
    }

    @Test
    public void test07064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07064");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.CookieHandler cookieHandler5 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = null;
        okHttpClient6.hostnameVerifier = hostnameVerifier7;
        java.net.ResponseCache responseCache9 = null;
        okHttpClient6.responseCache = responseCache9;
        java.util.List<java.lang.String> strList11 = okHttpClient6.transports;
        com.squareup.okhttp.ConnectionPool connectionPool12 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient6.connectionPool = connectionPool12;
        java.net.Proxy proxy14 = null;
        okHttpClient6.proxy = proxy14;
        java.util.Set<com.squareup.okhttp.Route> routeSet16 = okHttpClient6.failedRoutes;
        okHttpClient0.failedRoutes = routeSet16;
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient0.setHostnameVerifier(hostnameVerifier18);
        java.net.ProxySelector proxySelector20 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient19.setProxySelector(proxySelector20);
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache23 = okHttpClient22.okResponseCache();
        java.net.ResponseCache responseCache24 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient22.setResponseCache(responseCache24);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory26 = okHttpClient22.sslSocketFactory;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory27 = okHttpClient22.sslSocketFactory;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier29 = null;
        okHttpClient28.hostnameVerifier = hostnameVerifier29;
        boolean boolean31 = okHttpClient28.getFollowProtocolRedirects();
        java.net.CookieHandler cookieHandler32 = okHttpClient28.cookieHandler;
        com.squareup.okhttp.OkHttpClient okHttpClient33 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier34 = null;
        okHttpClient33.hostnameVerifier = hostnameVerifier34;
        java.net.ResponseCache responseCache36 = null;
        okHttpClient33.responseCache = responseCache36;
        javax.net.ssl.HostnameVerifier hostnameVerifier38 = okHttpClient33.hostnameVerifier;
        java.net.Proxy proxy39 = okHttpClient33.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool42 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient33.connectionPool = connectionPool42;
        com.squareup.okhttp.OkHttpClient okHttpClient44 = okHttpClient33.copyWithDefaults();
        java.net.ResponseCache responseCache45 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient46 = okHttpClient44.setResponseCache(responseCache45);
        com.squareup.okhttp.OkAuthenticator okAuthenticator47 = okHttpClient44.authenticator;
        okHttpClient28.authenticator = okAuthenticator47;
        com.squareup.okhttp.OkHttpClient okHttpClient49 = okHttpClient22.setAuthenticator(okAuthenticator47);
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient21.setAuthenticator(okAuthenticator47);
        java.net.CookieHandler cookieHandler51 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient52 = okHttpClient50.setCookieHandler(cookieHandler51);
        java.net.ResponseCache responseCache53 = null;
        okHttpClient52.responseCache = responseCache53;
        com.squareup.okhttp.ConnectionPool connectionPool55 = null;
        okHttpClient52.connectionPool = connectionPool55;
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNotNull(routeSet16);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNull(okResponseCache23);
        org.junit.Assert.assertNotNull(okHttpClient25);
        org.junit.Assert.assertNull(sSLSocketFactory26);
        org.junit.Assert.assertNull(sSLSocketFactory27);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(cookieHandler32);
        org.junit.Assert.assertNull(hostnameVerifier38);
        org.junit.Assert.assertNull(proxy39);
        org.junit.Assert.assertNotNull(okHttpClient44);
        org.junit.Assert.assertNotNull(okHttpClient46);
        org.junit.Assert.assertNotNull(okAuthenticator47);
        org.junit.Assert.assertNotNull(okHttpClient49);
        org.junit.Assert.assertNotNull(okHttpClient50);
        org.junit.Assert.assertNotNull(okHttpClient52);
    }

    @Test
    public void test07065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07065");
        com.squareup.okhttp.ConnectionPool connectionPool2 = new com.squareup.okhttp.ConnectionPool((-1), (long) '#');
        com.squareup.okhttp.Address address3 = null;
        com.squareup.okhttp.Connection connection4 = connectionPool2.get(address3);
        int int5 = connectionPool2.getConnectionCount();
        com.squareup.okhttp.Address address6 = null;
        com.squareup.okhttp.Connection connection7 = connectionPool2.get(address6);
        int int8 = connectionPool2.getConnectionCount();
        connectionPool2.evictAll();
        com.squareup.okhttp.Address address10 = null;
        com.squareup.okhttp.Connection connection11 = connectionPool2.get(address10);
        org.junit.Assert.assertNull(connection4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(connection7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(connection11);
    }

    @Test
    public void test07066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07066");
        com.squareup.okhttp.ConnectionPool connectionPool2 = new com.squareup.okhttp.ConnectionPool((int) (byte) 0, (long) (-1));
        connectionPool2.evictAll();
        int int4 = connectionPool2.getSpdyConnectionCount();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    }

    @Test
    public void test07067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07067");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.Proxy proxy8 = null;
        okHttpClient0.proxy = proxy8;
        boolean boolean10 = okHttpClient0.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        java.net.ProxySelector proxySelector12 = okHttpClient11.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier13 = okHttpClient11.hostnameVerifier;
        java.net.Proxy proxy14 = java.net.Proxy.NO_PROXY;
        boolean boolean16 = proxy14.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type17 = proxy14.type();
        java.net.Proxy.Type type18 = proxy14.type();
        okHttpClient11.proxy = proxy14;
        java.net.Proxy.Type type20 = proxy14.type();
        java.lang.String str21 = proxy14.toString();
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(proxySelector12);
        org.junit.Assert.assertNull(hostnameVerifier13);
        org.junit.Assert.assertNotNull(proxy14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + type17 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type17.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertTrue("'" + type18 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type18.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertTrue("'" + type20 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type20.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "DIRECT" + "'", str21, "DIRECT");
    }

    @Test
    public void test07068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07068");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        java.net.ResponseCache responseCache12 = okHttpClient0.responseCache;
        java.net.ResponseCache responseCache13 = okHttpClient0.getResponseCache();
        java.net.ResponseCache responseCache14 = okHttpClient0.responseCache;
        java.net.ProxySelector proxySelector15 = okHttpClient0.proxySelector;
        java.util.List<java.lang.String> strList16 = okHttpClient0.transports;
        java.net.ProxySelector proxySelector17 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient0.setProxySelector(proxySelector17);
        okHttpClient18.followProtocolRedirects = false;
        okHttpClient18.followProtocolRedirects = true;
        java.net.ResponseCache responseCache23 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient18.setResponseCache(responseCache23);
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(responseCache12);
        org.junit.Assert.assertNull(responseCache13);
        org.junit.Assert.assertNull(responseCache14);
        org.junit.Assert.assertNull(proxySelector15);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNotNull(okHttpClient24);
    }

    @Test
    public void test07069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07069");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.ConnectionPool connectionPool12 = okHttpClient11.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator13 = okHttpClient11.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool16 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient11.connectionPool = connectionPool16;
        java.net.ResponseCache responseCache18 = okHttpClient11.responseCache;
        java.util.List<java.lang.String> strList19 = okHttpClient11.getTransports();
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient11.copyWithDefaults();
        java.net.ResponseCache responseCache21 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient20.setResponseCache(responseCache21);
        java.net.CookieHandler cookieHandler23 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient22.setCookieHandler(cookieHandler23);
        boolean boolean25 = okHttpClient22.getFollowProtocolRedirects();
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNull(okAuthenticator13);
        org.junit.Assert.assertNull(responseCache18);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test07070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07070");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        okHttpClient0.authenticator = okAuthenticator3;
        java.net.CookieHandler cookieHandler5 = null;
        okHttpClient0.cookieHandler = cookieHandler5;
        java.net.Proxy proxy7 = java.net.Proxy.NO_PROXY;
        boolean boolean9 = proxy7.equals((java.lang.Object) 1L);
        com.squareup.okhttp.OkHttpClient okHttpClient10 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache11 = okHttpClient10.okResponseCache();
        java.net.ResponseCache responseCache12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient10.setResponseCache(responseCache12);
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        okHttpClient10.transports = strList16;
        boolean boolean19 = proxy7.equals((java.lang.Object) strList16);
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient0.setProxy(proxy7);
        java.lang.Class<?> wildcardClass21 = proxy7.getClass();
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNotNull(proxy7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(okResponseCache11);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test07071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07071");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.CookieHandler cookieHandler5 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = null;
        okHttpClient6.hostnameVerifier = hostnameVerifier7;
        java.net.ResponseCache responseCache9 = null;
        okHttpClient6.responseCache = responseCache9;
        java.util.List<java.lang.String> strList11 = okHttpClient6.transports;
        com.squareup.okhttp.ConnectionPool connectionPool12 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient6.connectionPool = connectionPool12;
        java.net.Proxy proxy14 = null;
        okHttpClient6.proxy = proxy14;
        java.util.Set<com.squareup.okhttp.Route> routeSet16 = okHttpClient6.failedRoutes;
        okHttpClient0.failedRoutes = routeSet16;
        java.net.ProxySelector proxySelector18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient0.setProxySelector(proxySelector18);
        com.squareup.okhttp.OkHttpClient okHttpClient20 = new com.squareup.okhttp.OkHttpClient(okHttpClient19);
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient20.setFollowProtocolRedirects(false);
        java.net.ProxySelector proxySelector23 = null;
        okHttpClient20.proxySelector = proxySelector23;
        java.net.CookieHandler cookieHandler25 = null;
        okHttpClient20.cookieHandler = cookieHandler25;
        java.net.ResponseCache responseCache27 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient20.setResponseCache(responseCache27);
        java.net.ProxySelector proxySelector29 = okHttpClient20.proxySelector;
        boolean boolean30 = okHttpClient20.getFollowProtocolRedirects();
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNotNull(routeSet16);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNull(proxySelector29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test07072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07072");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        okHttpClient0.authenticator = okAuthenticator3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient0.responseCache = responseCache6;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier9 = null;
        okHttpClient8.hostnameVerifier = hostnameVerifier9;
        java.net.ResponseCache responseCache11 = null;
        okHttpClient8.responseCache = responseCache11;
        javax.net.ssl.HostnameVerifier hostnameVerifier13 = okHttpClient8.hostnameVerifier;
        java.net.Proxy proxy14 = okHttpClient8.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool17 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient8.connectionPool = connectionPool17;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient8.copyWithDefaults();
        java.net.Proxy proxy20 = okHttpClient19.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier21 = okHttpClient19.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient0.setHostnameVerifier(hostnameVerifier21);
        java.net.ProxySelector proxySelector23 = okHttpClient0.proxySelector;
        com.squareup.okhttp.ConnectionPool connectionPool24 = okHttpClient0.connectionPool;
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNull(hostnameVerifier13);
        org.junit.Assert.assertNull(proxy14);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNull(proxy20);
        org.junit.Assert.assertNotNull(hostnameVerifier21);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNull(proxySelector23);
        org.junit.Assert.assertNotNull(connectionPool24);
    }

    @Test
    public void test07073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07073");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.ConnectionPool connectionPool12 = okHttpClient11.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator13 = okHttpClient11.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool16 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient11.connectionPool = connectionPool16;
        java.net.ResponseCache responseCache18 = okHttpClient11.responseCache;
        com.squareup.okhttp.ConnectionPool connectionPool21 = new com.squareup.okhttp.ConnectionPool((int) (byte) 0, 10L);
        okHttpClient11.connectionPool = connectionPool21;
        com.squareup.okhttp.ConnectionPool connectionPool25 = new com.squareup.okhttp.ConnectionPool((int) (byte) 10, 0L);
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient11.setConnectionPool(connectionPool25);
        java.net.ResponseCache responseCache27 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient26.setResponseCache(responseCache27);
        com.squareup.okhttp.ConnectionPool connectionPool31 = new com.squareup.okhttp.ConnectionPool((int) '#', 10L);
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient28.setConnectionPool(connectionPool31);
        int int33 = connectionPool31.getHttpConnectionCount();
        int int34 = connectionPool31.getHttpConnectionCount();
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNull(okAuthenticator13);
        org.junit.Assert.assertNull(responseCache18);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
    }

    @Test
    public void test07074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07074");
        java.net.Proxy proxy0 = java.net.Proxy.NO_PROXY;
        boolean boolean2 = proxy0.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type3 = proxy0.type();
        java.net.SocketAddress socketAddress4 = proxy0.address();
        com.squareup.okhttp.OkHttpClient okHttpClient5 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier6 = null;
        okHttpClient5.hostnameVerifier = hostnameVerifier6;
        java.net.ResponseCache responseCache8 = null;
        okHttpClient5.responseCache = responseCache8;
        javax.net.ssl.HostnameVerifier hostnameVerifier10 = okHttpClient5.hostnameVerifier;
        java.net.Proxy proxy11 = okHttpClient5.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient12 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache13 = okHttpClient12.okResponseCache();
        java.net.ResponseCache responseCache14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient12.setResponseCache(responseCache14);
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        okHttpClient12.transports = strList18;
        okHttpClient5.transports = strList18;
        java.net.Proxy proxy22 = okHttpClient5.getProxy();
        java.util.Set<com.squareup.okhttp.Route> routeSet23 = okHttpClient5.failedRoutes;
        boolean boolean24 = proxy0.equals((java.lang.Object) okHttpClient5);
        com.squareup.okhttp.OkHttpClient okHttpClient25 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier26 = null;
        okHttpClient25.hostnameVerifier = hostnameVerifier26;
        java.net.ResponseCache responseCache28 = null;
        okHttpClient25.responseCache = responseCache28;
        java.util.List<java.lang.String> strList30 = okHttpClient25.transports;
        com.squareup.okhttp.ConnectionPool connectionPool31 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient25.connectionPool = connectionPool31;
        java.net.Proxy proxy33 = null;
        okHttpClient25.proxy = proxy33;
        boolean boolean35 = okHttpClient25.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient36 = new com.squareup.okhttp.OkHttpClient(okHttpClient25);
        java.net.ProxySelector proxySelector37 = okHttpClient36.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier38 = okHttpClient36.hostnameVerifier;
        javax.net.ssl.HostnameVerifier hostnameVerifier39 = okHttpClient36.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient40 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool41 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient40.connectionPool = connectionPool41;
        com.squareup.okhttp.OkAuthenticator okAuthenticator43 = null;
        okHttpClient40.authenticator = okAuthenticator43;
        java.net.CookieHandler cookieHandler45 = null;
        okHttpClient40.cookieHandler = cookieHandler45;
        java.net.Proxy proxy47 = java.net.Proxy.NO_PROXY;
        boolean boolean49 = proxy47.equals((java.lang.Object) 1L);
        com.squareup.okhttp.OkHttpClient okHttpClient50 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache51 = okHttpClient50.okResponseCache();
        java.net.ResponseCache responseCache52 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient53 = okHttpClient50.setResponseCache(responseCache52);
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList56 = new java.util.ArrayList<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        okHttpClient50.transports = strList56;
        boolean boolean59 = proxy47.equals((java.lang.Object) strList56);
        com.squareup.okhttp.OkHttpClient okHttpClient60 = okHttpClient40.setProxy(proxy47);
        com.squareup.okhttp.OkHttpClient okHttpClient61 = okHttpClient36.setProxy(proxy47);
        com.squareup.okhttp.OkHttpClient okHttpClient62 = new com.squareup.okhttp.OkHttpClient(okHttpClient61);
        com.squareup.okhttp.OkHttpClient okHttpClient63 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier64 = null;
        okHttpClient63.hostnameVerifier = hostnameVerifier64;
        java.net.ResponseCache responseCache66 = null;
        okHttpClient63.responseCache = responseCache66;
        javax.net.ssl.HostnameVerifier hostnameVerifier68 = okHttpClient63.hostnameVerifier;
        java.net.Proxy proxy69 = okHttpClient63.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool72 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient63.connectionPool = connectionPool72;
        com.squareup.okhttp.OkHttpClient okHttpClient74 = okHttpClient63.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier75 = okHttpClient74.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient76 = okHttpClient61.setHostnameVerifier(hostnameVerifier75);
        com.squareup.okhttp.OkHttpClient okHttpClient77 = okHttpClient5.setHostnameVerifier(hostnameVerifier75);
        java.util.List<java.lang.String> strList78 = okHttpClient77.transports;
        java.net.ProxySelector proxySelector79 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient80 = okHttpClient77.setProxySelector(proxySelector79);
        java.util.List<java.lang.String> strList81 = okHttpClient80.transports;
        org.junit.Assert.assertNotNull(proxy0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + type3 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type3.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress4);
        org.junit.Assert.assertNull(hostnameVerifier10);
        org.junit.Assert.assertNull(proxy11);
        org.junit.Assert.assertNull(okResponseCache13);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(proxy22);
        org.junit.Assert.assertNotNull(routeSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNotNull(connectionPool31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(proxySelector37);
        org.junit.Assert.assertNull(hostnameVerifier38);
        org.junit.Assert.assertNull(hostnameVerifier39);
        org.junit.Assert.assertNotNull(connectionPool41);
        org.junit.Assert.assertNotNull(proxy47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(okResponseCache51);
        org.junit.Assert.assertNotNull(okHttpClient53);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(okHttpClient60);
        org.junit.Assert.assertNotNull(okHttpClient61);
        org.junit.Assert.assertNull(hostnameVerifier68);
        org.junit.Assert.assertNull(proxy69);
        org.junit.Assert.assertNotNull(okHttpClient74);
        org.junit.Assert.assertNotNull(hostnameVerifier75);
        org.junit.Assert.assertNotNull(okHttpClient76);
        org.junit.Assert.assertNotNull(okHttpClient77);
        org.junit.Assert.assertNotNull(strList78);
        org.junit.Assert.assertNotNull(okHttpClient80);
        org.junit.Assert.assertNotNull(strList81);
    }

    @Test
    public void test07075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07075");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.Proxy proxy8 = null;
        okHttpClient0.proxy = proxy8;
        boolean boolean10 = okHttpClient0.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.copyWithDefaults();
        java.net.CookieHandler cookieHandler12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setCookieHandler(cookieHandler12);
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient11.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient14.copyWithDefaults();
        java.net.ResponseCache responseCache16 = okHttpClient15.responseCache;
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNotNull(okHttpClient14);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNull(responseCache16);
    }

    @Test
    public void test07076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07076");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        okHttpClient0.authenticator = okAuthenticator3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        java.util.List<java.lang.String> strList6 = okHttpClient0.getTransports();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient0.setFollowProtocolRedirects(true);
        java.net.ProxySelector proxySelector9 = okHttpClient8.getProxySelector();
        java.net.ProxySelector proxySelector10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient8.setProxySelector(proxySelector10);
        java.net.Proxy proxy12 = okHttpClient8.getProxy();
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertNull(proxySelector9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(proxy12);
    }

    @Test
    public void test07077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07077");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        javax.net.ssl.HostnameVerifier hostnameVerifier6 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier6;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache8 = okHttpClient0.okResponseCache();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory9 = okHttpClient0.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient10 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier11 = null;
        okHttpClient10.hostnameVerifier = hostnameVerifier11;
        java.net.ResponseCache responseCache13 = null;
        okHttpClient10.responseCache = responseCache13;
        javax.net.ssl.HostnameVerifier hostnameVerifier15 = okHttpClient10.hostnameVerifier;
        java.net.Proxy proxy16 = okHttpClient10.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool19 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient10.connectionPool = connectionPool19;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient10.copyWithDefaults();
        java.net.Proxy proxy22 = okHttpClient21.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier23 = okHttpClient21.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient0.setHostnameVerifier(hostnameVerifier23);
        java.util.Set<com.squareup.okhttp.Route> routeSet25 = okHttpClient24.failedRoutes;
        java.lang.Class<?> wildcardClass26 = okHttpClient24.getClass();
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNull(okResponseCache8);
        org.junit.Assert.assertNull(sSLSocketFactory9);
        org.junit.Assert.assertNull(hostnameVerifier15);
        org.junit.Assert.assertNull(proxy16);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNull(proxy22);
        org.junit.Assert.assertNotNull(hostnameVerifier23);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNotNull(routeSet25);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test07078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07078");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient0.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.copyWithDefaults();
        java.util.List<java.lang.String> strList12 = okHttpClient0.getTransports();
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient0.copyWithDefaults();
        java.util.List<java.lang.String> strList14 = okHttpClient13.getTransports();
        java.net.CookieHandler cookieHandler15 = okHttpClient13.getCookieHandler();
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNotNull(strList14);
        org.junit.Assert.assertNull(cookieHandler15);
    }

    @Test
    public void test07079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07079");
        com.squareup.okhttp.ConnectionPool connectionPool2 = new com.squareup.okhttp.ConnectionPool(100, 100L);
        connectionPool2.evictAll();
        int int4 = connectionPool2.getSpdyConnectionCount();
        com.squareup.okhttp.Address address5 = null;
        com.squareup.okhttp.Connection connection6 = connectionPool2.get(address5);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(connection6);
    }

    @Test
    public void test07080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07080");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        java.net.CookieHandler cookieHandler7 = null;
        okHttpClient0.cookieHandler = cookieHandler7;
        okHttpClient0.followProtocolRedirects = true;
        java.net.CookieHandler cookieHandler11 = okHttpClient0.getCookieHandler();
        java.net.CookieHandler cookieHandler12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient0.setCookieHandler(cookieHandler12);
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient13.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier16 = null;
        okHttpClient15.hostnameVerifier = hostnameVerifier16;
        java.net.ResponseCache responseCache18 = null;
        okHttpClient15.responseCache = responseCache18;
        java.util.List<java.lang.String> strList20 = okHttpClient15.transports;
        com.squareup.okhttp.ConnectionPool connectionPool21 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient15.connectionPool = connectionPool21;
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient15.copyWithDefaults();
        boolean boolean24 = okHttpClient23.getFollowProtocolRedirects();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory25 = okHttpClient23.sslSocketFactory;
        java.lang.String[] strArray26 = sSLSocketFactory25.getSupportedCipherSuites();
        java.lang.String[] strArray27 = sSLSocketFactory25.getSupportedCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient14.setSSLSocketFactory(sSLSocketFactory25);
        com.squareup.okhttp.OkHttpClient okHttpClient29 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = null;
        okHttpClient29.hostnameVerifier = hostnameVerifier30;
        java.net.ResponseCache responseCache32 = null;
        okHttpClient29.responseCache = responseCache32;
        java.util.List<java.lang.String> strList34 = okHttpClient29.transports;
        com.squareup.okhttp.ConnectionPool connectionPool35 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient29.connectionPool = connectionPool35;
        java.net.CookieHandler cookieHandler37 = okHttpClient29.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache38 = okHttpClient29.okResponseCache();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory39 = null;
        okHttpClient29.sslSocketFactory = sSLSocketFactory39;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory41 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient29.setSSLSocketFactory(sSLSocketFactory41);
        java.net.ProxySelector proxySelector43 = null;
        okHttpClient29.proxySelector = proxySelector43;
        com.squareup.okhttp.OkHttpClient okHttpClient45 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool46 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient45.connectionPool = connectionPool46;
        java.net.ResponseCache responseCache48 = null;
        okHttpClient45.responseCache = responseCache48;
        java.net.Proxy proxy50 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress51 = proxy50.address();
        java.net.SocketAddress socketAddress52 = proxy50.address();
        okHttpClient45.proxy = proxy50;
        com.squareup.okhttp.ConnectionPool connectionPool56 = new com.squareup.okhttp.ConnectionPool((-1), (long) '#');
        com.squareup.okhttp.Address address57 = null;
        com.squareup.okhttp.Connection connection58 = connectionPool56.get(address57);
        int int59 = connectionPool56.getSpdyConnectionCount();
        connectionPool56.evictAll();
        com.squareup.okhttp.OkHttpClient okHttpClient61 = okHttpClient45.setConnectionPool(connectionPool56);
        com.squareup.okhttp.OkHttpClient okHttpClient62 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier63 = null;
        okHttpClient62.hostnameVerifier = hostnameVerifier63;
        java.net.ProxySelector proxySelector65 = okHttpClient62.proxySelector;
        java.net.ProxySelector proxySelector66 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient67 = okHttpClient62.setProxySelector(proxySelector66);
        com.squareup.okhttp.OkHttpClient okHttpClient68 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier69 = null;
        okHttpClient68.hostnameVerifier = hostnameVerifier69;
        java.net.ResponseCache responseCache71 = null;
        okHttpClient68.responseCache = responseCache71;
        java.util.List<java.lang.String> strList73 = okHttpClient68.transports;
        com.squareup.okhttp.ConnectionPool connectionPool74 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient68.connectionPool = connectionPool74;
        com.squareup.okhttp.OkHttpClient okHttpClient76 = okHttpClient68.copyWithDefaults();
        java.net.ProxySelector proxySelector77 = okHttpClient76.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory78 = okHttpClient76.getSslSocketFactory();
        okHttpClient62.sslSocketFactory = sSLSocketFactory78;
        okHttpClient45.sslSocketFactory = sSLSocketFactory78;
        com.squareup.okhttp.OkHttpClient okHttpClient81 = okHttpClient29.setSSLSocketFactory(sSLSocketFactory78);
        java.net.Socket socket82 = sSLSocketFactory78.createSocket();
        java.io.InputStream inputStream83 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket85 = sSLSocketFactory25.createSocket(socket82, inputStream83, false);
            org.junit.Assert.fail("Expected exception of type java.net.SocketException; message: Underlying socket is not connected");
        } catch (java.net.SocketException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNull(cookieHandler11);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNotNull(okHttpClient14);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(connectionPool21);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(sSLSocketFactory25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(connectionPool35);
        org.junit.Assert.assertNull(cookieHandler37);
        org.junit.Assert.assertNull(okResponseCache38);
        org.junit.Assert.assertNotNull(okHttpClient42);
        org.junit.Assert.assertNotNull(connectionPool46);
        org.junit.Assert.assertNotNull(proxy50);
        org.junit.Assert.assertNull(socketAddress51);
        org.junit.Assert.assertNull(socketAddress52);
        org.junit.Assert.assertNull(connection58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(okHttpClient61);
        org.junit.Assert.assertNull(proxySelector65);
        org.junit.Assert.assertNotNull(okHttpClient67);
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertNotNull(connectionPool74);
        org.junit.Assert.assertNotNull(okHttpClient76);
// flaky:         org.junit.Assert.assertNull(proxySelector77);
        org.junit.Assert.assertNotNull(sSLSocketFactory78);
        org.junit.Assert.assertNotNull(okHttpClient81);
        org.junit.Assert.assertNotNull(socket82);
        org.junit.Assert.assertEquals(socket82.toString(), "Socket[unconnected]");
    }

    @Test
    public void test07081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07081");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache8 = okHttpClient7.okResponseCache();
        java.net.ResponseCache responseCache9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient7.setResponseCache(responseCache9);
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        okHttpClient7.transports = strList13;
        okHttpClient0.transports = strList13;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient0.setFollowProtocolRedirects(true);
        com.squareup.okhttp.OkHttpClient okHttpClient19 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool20 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient19.connectionPool = connectionPool20;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier23 = null;
        okHttpClient22.hostnameVerifier = hostnameVerifier23;
        java.net.ResponseCache responseCache25 = null;
        okHttpClient22.responseCache = responseCache25;
        java.util.List<java.lang.String> strList27 = okHttpClient22.transports;
        com.squareup.okhttp.ConnectionPool connectionPool28 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient22.connectionPool = connectionPool28;
        com.squareup.okhttp.OkHttpClient okHttpClient30 = okHttpClient19.setConnectionPool(connectionPool28);
        java.net.Proxy proxy31 = okHttpClient30.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool33 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient32.connectionPool = connectionPool33;
        com.squareup.okhttp.OkHttpClient okHttpClient35 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier36 = null;
        okHttpClient35.hostnameVerifier = hostnameVerifier36;
        java.net.ResponseCache responseCache38 = null;
        okHttpClient35.responseCache = responseCache38;
        java.util.List<java.lang.String> strList40 = okHttpClient35.transports;
        com.squareup.okhttp.ConnectionPool connectionPool41 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient35.connectionPool = connectionPool41;
        com.squareup.okhttp.OkHttpClient okHttpClient43 = okHttpClient32.setConnectionPool(connectionPool41);
        com.squareup.okhttp.ConnectionPool connectionPool44 = okHttpClient32.connectionPool;
        com.squareup.okhttp.OkHttpClient okHttpClient45 = okHttpClient30.setConnectionPool(connectionPool44);
        okHttpClient30.followProtocolRedirects = false;
        com.squareup.okhttp.OkHttpClient okHttpClient48 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool49 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient48.connectionPool = connectionPool49;
        com.squareup.okhttp.OkHttpClient okHttpClient51 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier52 = null;
        okHttpClient51.hostnameVerifier = hostnameVerifier52;
        java.net.ResponseCache responseCache54 = null;
        okHttpClient51.responseCache = responseCache54;
        java.util.List<java.lang.String> strList56 = okHttpClient51.transports;
        com.squareup.okhttp.ConnectionPool connectionPool57 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient51.connectionPool = connectionPool57;
        com.squareup.okhttp.OkHttpClient okHttpClient59 = okHttpClient48.setConnectionPool(connectionPool57);
        java.net.ResponseCache responseCache60 = okHttpClient48.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory61 = okHttpClient48.sslSocketFactory;
        java.net.CookieHandler cookieHandler62 = okHttpClient48.getCookieHandler();
        com.squareup.okhttp.OkAuthenticator okAuthenticator63 = okHttpClient48.authenticator;
        java.util.Set<com.squareup.okhttp.Route> routeSet64 = okHttpClient48.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient65 = new com.squareup.okhttp.OkHttpClient(okHttpClient48);
        com.squareup.okhttp.OkHttpClient okHttpClient66 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier67 = null;
        okHttpClient66.hostnameVerifier = hostnameVerifier67;
        java.net.ResponseCache responseCache69 = null;
        okHttpClient66.responseCache = responseCache69;
        javax.net.ssl.HostnameVerifier hostnameVerifier71 = okHttpClient66.hostnameVerifier;
        java.net.Proxy proxy72 = okHttpClient66.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool75 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient66.connectionPool = connectionPool75;
        com.squareup.okhttp.OkHttpClient okHttpClient77 = okHttpClient66.copyWithDefaults();
        java.net.ResponseCache responseCache78 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient79 = okHttpClient77.setResponseCache(responseCache78);
        javax.net.ssl.HostnameVerifier hostnameVerifier80 = okHttpClient79.hostnameVerifier;
        okHttpClient65.hostnameVerifier = hostnameVerifier80;
        com.squareup.okhttp.OkHttpClient okHttpClient82 = okHttpClient30.setHostnameVerifier(hostnameVerifier80);
        com.squareup.okhttp.OkHttpClient okHttpClient83 = okHttpClient18.setHostnameVerifier(hostnameVerifier80);
        java.net.ProxySelector proxySelector84 = okHttpClient18.getProxySelector();
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNull(okResponseCache8);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNotNull(connectionPool20);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNotNull(connectionPool28);
        org.junit.Assert.assertNotNull(okHttpClient30);
        org.junit.Assert.assertNull(proxy31);
        org.junit.Assert.assertNotNull(connectionPool33);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNotNull(connectionPool41);
        org.junit.Assert.assertNotNull(okHttpClient43);
        org.junit.Assert.assertNotNull(connectionPool44);
        org.junit.Assert.assertNotNull(okHttpClient45);
        org.junit.Assert.assertNotNull(connectionPool49);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNotNull(connectionPool57);
        org.junit.Assert.assertNotNull(okHttpClient59);
        org.junit.Assert.assertNull(responseCache60);
        org.junit.Assert.assertNull(sSLSocketFactory61);
        org.junit.Assert.assertNull(cookieHandler62);
        org.junit.Assert.assertNull(okAuthenticator63);
        org.junit.Assert.assertNotNull(routeSet64);
        org.junit.Assert.assertNull(hostnameVerifier71);
        org.junit.Assert.assertNull(proxy72);
        org.junit.Assert.assertNotNull(okHttpClient77);
        org.junit.Assert.assertNotNull(okHttpClient79);
        org.junit.Assert.assertNotNull(hostnameVerifier80);
        org.junit.Assert.assertNotNull(okHttpClient82);
        org.junit.Assert.assertNotNull(okHttpClient83);
        org.junit.Assert.assertNull(proxySelector84);
    }

    @Test
    public void test07082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07082");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.ResponseCache responseCache5 = null;
        okHttpClient4.responseCache = responseCache5;
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = okHttpClient4.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient4.setFollowProtocolRedirects(false);
        java.net.ProxySelector proxySelector10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient9.setProxySelector(proxySelector10);
        okHttpClient11.followProtocolRedirects = true;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient11.copyWithDefaults();
        java.util.List<java.lang.String> strList15 = okHttpClient14.getTransports();
        java.net.ResponseCache responseCache16 = null;
        okHttpClient14.responseCache = responseCache16;
        okHttpClient14.followProtocolRedirects = true;
        java.net.ProxySelector proxySelector20 = okHttpClient14.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory21 = okHttpClient14.getSslSocketFactory();
        java.net.Socket socket22 = sSLSocketFactory21.createSocket();
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(hostnameVerifier7);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(okHttpClient14);
        org.junit.Assert.assertNotNull(strList15);
// flaky:         org.junit.Assert.assertNull(proxySelector20);
        org.junit.Assert.assertNotNull(sSLSocketFactory21);
        org.junit.Assert.assertNotNull(socket22);
        org.junit.Assert.assertEquals(socket22.toString(), "Socket[unconnected]");
    }

    @Test
    public void test07083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07083");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        okHttpClient0.authenticator = okAuthenticator3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient0.responseCache = responseCache6;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier9 = null;
        okHttpClient8.hostnameVerifier = hostnameVerifier9;
        java.net.ResponseCache responseCache11 = null;
        okHttpClient8.responseCache = responseCache11;
        javax.net.ssl.HostnameVerifier hostnameVerifier13 = okHttpClient8.hostnameVerifier;
        java.net.Proxy proxy14 = okHttpClient8.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool17 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient8.connectionPool = connectionPool17;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient8.copyWithDefaults();
        java.net.Proxy proxy20 = okHttpClient19.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier21 = okHttpClient19.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient0.setHostnameVerifier(hostnameVerifier21);
        java.net.CookieHandler cookieHandler23 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient22.setCookieHandler(cookieHandler23);
        java.net.ResponseCache responseCache25 = okHttpClient24.responseCache;
        com.squareup.okhttp.ConnectionPool connectionPool26 = okHttpClient24.getConnectionPool();
        connectionPool26.evictAll();
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNull(hostnameVerifier13);
        org.junit.Assert.assertNull(proxy14);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNull(proxy20);
        org.junit.Assert.assertNotNull(hostnameVerifier21);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNull(responseCache25);
        org.junit.Assert.assertNotNull(connectionPool26);
    }

    @Test
    public void test07084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07084");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        javax.net.ssl.HostnameVerifier hostnameVerifier6 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier6;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache8 = okHttpClient0.okResponseCache();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory9 = okHttpClient0.getSslSocketFactory();
        java.net.ResponseCache responseCache10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setResponseCache(responseCache10);
        boolean boolean12 = okHttpClient0.followProtocolRedirects;
        java.util.List<java.lang.String> strList13 = okHttpClient0.getTransports();
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNull(okResponseCache8);
        org.junit.Assert.assertNull(sSLSocketFactory9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(strList13);
    }

    @Test
    public void test07085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07085");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        okHttpClient0.authenticator = okAuthenticator3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        java.net.ResponseCache responseCache6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient0.setResponseCache(responseCache6);
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient7.setFollowProtocolRedirects(true);
        com.squareup.okhttp.OkHttpClient okHttpClient10 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier11 = null;
        okHttpClient10.hostnameVerifier = hostnameVerifier11;
        java.net.ResponseCache responseCache13 = null;
        okHttpClient10.responseCache = responseCache13;
        java.util.List<java.lang.String> strList15 = okHttpClient10.transports;
        com.squareup.okhttp.ConnectionPool connectionPool16 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient10.connectionPool = connectionPool16;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient10.copyWithDefaults();
        java.net.ProxySelector proxySelector19 = okHttpClient18.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory20 = okHttpClient18.getSslSocketFactory();
        java.lang.String[] strArray21 = sSLSocketFactory20.getSupportedCipherSuites();
        java.lang.String[] strArray22 = sSLSocketFactory20.getSupportedCipherSuites();
        java.lang.String[] strArray23 = sSLSocketFactory20.getDefaultCipherSuites();
        java.net.Socket socket24 = sSLSocketFactory20.createSocket();
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient7.setSSLSocketFactory(sSLSocketFactory20);
        com.squareup.okhttp.OkAuthenticator okAuthenticator26 = okHttpClient25.getAuthenticator();
        com.squareup.okhttp.OkHttpClient okHttpClient27 = new com.squareup.okhttp.OkHttpClient(okHttpClient25);
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(okHttpClient7);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(connectionPool16);
        org.junit.Assert.assertNotNull(okHttpClient18);
// flaky:         org.junit.Assert.assertNull(proxySelector19);
        org.junit.Assert.assertNotNull(sSLSocketFactory20);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(socket24);
        org.junit.Assert.assertEquals(socket24.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(okHttpClient25);
        org.junit.Assert.assertNull(okAuthenticator26);
    }

    @Test
    public void test07086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07086");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        java.net.CookieHandler cookieHandler7 = null;
        okHttpClient0.cookieHandler = cookieHandler7;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier10 = null;
        okHttpClient9.hostnameVerifier = hostnameVerifier10;
        java.net.ResponseCache responseCache12 = null;
        okHttpClient9.responseCache = responseCache12;
        java.util.List<java.lang.String> strList14 = okHttpClient9.transports;
        com.squareup.okhttp.ConnectionPool connectionPool15 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient9.connectionPool = connectionPool15;
        java.net.CookieHandler cookieHandler17 = okHttpClient9.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache18 = okHttpClient9.okResponseCache();
        java.net.CookieHandler cookieHandler19 = okHttpClient9.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient20 = new com.squareup.okhttp.OkHttpClient(okHttpClient9);
        com.squareup.okhttp.OkHttpClient okHttpClient21 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier22 = null;
        okHttpClient21.hostnameVerifier = hostnameVerifier22;
        java.net.ProxySelector proxySelector24 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient21.setProxySelector(proxySelector24);
        java.net.CookieHandler cookieHandler26 = okHttpClient21.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient27 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier28 = null;
        okHttpClient27.hostnameVerifier = hostnameVerifier28;
        java.net.ResponseCache responseCache30 = null;
        okHttpClient27.responseCache = responseCache30;
        java.util.List<java.lang.String> strList32 = okHttpClient27.transports;
        com.squareup.okhttp.ConnectionPool connectionPool33 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient27.connectionPool = connectionPool33;
        java.net.Proxy proxy35 = null;
        okHttpClient27.proxy = proxy35;
        java.util.Set<com.squareup.okhttp.Route> routeSet37 = okHttpClient27.failedRoutes;
        okHttpClient21.failedRoutes = routeSet37;
        okHttpClient20.failedRoutes = routeSet37;
        okHttpClient0.failedRoutes = routeSet37;
        com.squareup.okhttp.OkHttpClient okHttpClient41 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier42 = null;
        okHttpClient41.hostnameVerifier = hostnameVerifier42;
        java.net.ProxySelector proxySelector44 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient45 = okHttpClient41.setProxySelector(proxySelector44);
        java.net.CookieHandler cookieHandler46 = okHttpClient41.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient47 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier48 = null;
        okHttpClient47.hostnameVerifier = hostnameVerifier48;
        java.net.ResponseCache responseCache50 = null;
        okHttpClient47.responseCache = responseCache50;
        java.util.List<java.lang.String> strList52 = okHttpClient47.transports;
        com.squareup.okhttp.ConnectionPool connectionPool53 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient47.connectionPool = connectionPool53;
        java.net.Proxy proxy55 = null;
        okHttpClient47.proxy = proxy55;
        java.util.Set<com.squareup.okhttp.Route> routeSet57 = okHttpClient47.failedRoutes;
        okHttpClient41.failedRoutes = routeSet57;
        java.net.ProxySelector proxySelector59 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient60 = okHttpClient41.setProxySelector(proxySelector59);
        com.squareup.okhttp.ConnectionPool connectionPool63 = new com.squareup.okhttp.ConnectionPool((int) (short) 10, (long) '4');
        okHttpClient41.connectionPool = connectionPool63;
        connectionPool63.evictAll();
        okHttpClient0.connectionPool = connectionPool63;
        java.net.ResponseCache responseCache67 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient68 = okHttpClient0.setResponseCache(responseCache67);
        com.squareup.okhttp.OkHttpClient okHttpClient69 = okHttpClient0.copyWithDefaults();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory70 = okHttpClient69.getSslSocketFactory();
        com.squareup.okhttp.OkAuthenticator okAuthenticator71 = okHttpClient69.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool72 = okHttpClient69.connectionPool;
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNotNull(connectionPool15);
        org.junit.Assert.assertNull(cookieHandler17);
        org.junit.Assert.assertNull(okResponseCache18);
        org.junit.Assert.assertNull(cookieHandler19);
        org.junit.Assert.assertNotNull(okHttpClient25);
        org.junit.Assert.assertNull(cookieHandler26);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNotNull(connectionPool33);
        org.junit.Assert.assertNotNull(routeSet37);
        org.junit.Assert.assertNotNull(okHttpClient45);
        org.junit.Assert.assertNull(cookieHandler46);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNotNull(connectionPool53);
        org.junit.Assert.assertNotNull(routeSet57);
        org.junit.Assert.assertNotNull(okHttpClient60);
        org.junit.Assert.assertNotNull(okHttpClient68);
        org.junit.Assert.assertNotNull(okHttpClient69);
        org.junit.Assert.assertNotNull(sSLSocketFactory70);
        org.junit.Assert.assertNotNull(okAuthenticator71);
        org.junit.Assert.assertNotNull(connectionPool72);
    }

    @Test
    public void test07087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07087");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient0.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.copyWithDefaults();
        java.net.ResponseCache responseCache12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setResponseCache(responseCache12);
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient13.setFollowProtocolRedirects(false);
        java.util.List<java.lang.String> strList16 = okHttpClient13.transports;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient13.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool18 = okHttpClient13.connectionPool;
        java.lang.Class<?> wildcardClass19 = connectionPool18.getClass();
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNotNull(connectionPool18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test07088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07088");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient0.copyWithDefaults();
        boolean boolean9 = okHttpClient0.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier11 = null;
        okHttpClient10.hostnameVerifier = hostnameVerifier11;
        java.net.ProxySelector proxySelector13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient10.setProxySelector(proxySelector13);
        java.net.ResponseCache responseCache15 = null;
        okHttpClient14.responseCache = responseCache15;
        javax.net.ssl.HostnameVerifier hostnameVerifier17 = okHttpClient14.hostnameVerifier;
        java.util.Set<com.squareup.okhttp.Route> routeSet18 = okHttpClient14.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier20 = null;
        okHttpClient19.hostnameVerifier = hostnameVerifier20;
        java.net.ProxySelector proxySelector22 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient19.setProxySelector(proxySelector22);
        java.net.ResponseCache responseCache24 = null;
        okHttpClient23.responseCache = responseCache24;
        javax.net.ssl.HostnameVerifier hostnameVerifier26 = okHttpClient23.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient23.setFollowProtocolRedirects(false);
        java.net.ProxySelector proxySelector29 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient30 = okHttpClient28.setProxySelector(proxySelector29);
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache31 = okHttpClient28.okResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient32 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool33 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient32.connectionPool = connectionPool33;
        com.squareup.okhttp.OkHttpClient okHttpClient35 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier36 = null;
        okHttpClient35.hostnameVerifier = hostnameVerifier36;
        java.net.ResponseCache responseCache38 = null;
        okHttpClient35.responseCache = responseCache38;
        java.util.List<java.lang.String> strList40 = okHttpClient35.transports;
        com.squareup.okhttp.ConnectionPool connectionPool41 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient35.connectionPool = connectionPool41;
        com.squareup.okhttp.OkHttpClient okHttpClient43 = okHttpClient32.setConnectionPool(connectionPool41);
        com.squareup.okhttp.ConnectionPool connectionPool44 = okHttpClient43.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator45 = okHttpClient43.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool48 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient43.connectionPool = connectionPool48;
        java.net.ResponseCache responseCache50 = okHttpClient43.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory51 = okHttpClient43.sslSocketFactory;
        java.net.Proxy proxy52 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress53 = proxy52.address();
        com.squareup.okhttp.OkHttpClient okHttpClient54 = okHttpClient43.setProxy(proxy52);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory55 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient56 = okHttpClient43.setSSLSocketFactory(sSLSocketFactory55);
        com.squareup.okhttp.OkHttpClient okHttpClient57 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier58 = null;
        okHttpClient57.hostnameVerifier = hostnameVerifier58;
        java.net.ResponseCache responseCache60 = null;
        okHttpClient57.responseCache = responseCache60;
        javax.net.ssl.HostnameVerifier hostnameVerifier62 = okHttpClient57.hostnameVerifier;
        java.net.Proxy proxy63 = okHttpClient57.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool66 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient57.connectionPool = connectionPool66;
        com.squareup.okhttp.OkHttpClient okHttpClient68 = okHttpClient57.copyWithDefaults();
        java.net.ResponseCache responseCache69 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient70 = okHttpClient68.setResponseCache(responseCache69);
        com.squareup.okhttp.OkAuthenticator okAuthenticator71 = okHttpClient68.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient72 = okHttpClient43.setAuthenticator(okAuthenticator71);
        com.squareup.okhttp.OkHttpClient okHttpClient73 = okHttpClient28.setAuthenticator(okAuthenticator71);
        okHttpClient14.authenticator = okAuthenticator71;
        okHttpClient0.authenticator = okAuthenticator71;
        java.net.ProxySelector proxySelector76 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient77 = okHttpClient0.setProxySelector(proxySelector76);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(okHttpClient14);
        org.junit.Assert.assertNull(hostnameVerifier17);
        org.junit.Assert.assertNotNull(routeSet18);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertNull(hostnameVerifier26);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNotNull(okHttpClient30);
        org.junit.Assert.assertNull(okResponseCache31);
        org.junit.Assert.assertNotNull(connectionPool33);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNotNull(connectionPool41);
        org.junit.Assert.assertNotNull(okHttpClient43);
        org.junit.Assert.assertNotNull(connectionPool44);
        org.junit.Assert.assertNull(okAuthenticator45);
        org.junit.Assert.assertNull(responseCache50);
        org.junit.Assert.assertNull(sSLSocketFactory51);
        org.junit.Assert.assertNotNull(proxy52);
        org.junit.Assert.assertNull(socketAddress53);
        org.junit.Assert.assertNotNull(okHttpClient54);
        org.junit.Assert.assertNotNull(okHttpClient56);
        org.junit.Assert.assertNull(hostnameVerifier62);
        org.junit.Assert.assertNull(proxy63);
        org.junit.Assert.assertNotNull(okHttpClient68);
        org.junit.Assert.assertNotNull(okHttpClient70);
        org.junit.Assert.assertNotNull(okAuthenticator71);
        org.junit.Assert.assertNotNull(okHttpClient72);
        org.junit.Assert.assertNotNull(okHttpClient73);
        org.junit.Assert.assertNotNull(okHttpClient77);
    }

    @Test
    public void test07089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07089");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        com.squareup.okhttp.ConnectionPool connectionPool8 = okHttpClient0.connectionPool;
        boolean boolean9 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient10 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier11 = null;
        okHttpClient10.hostnameVerifier = hostnameVerifier11;
        java.net.ResponseCache responseCache13 = null;
        okHttpClient10.responseCache = responseCache13;
        javax.net.ssl.HostnameVerifier hostnameVerifier15 = okHttpClient10.hostnameVerifier;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory16 = okHttpClient10.sslSocketFactory;
        java.net.CookieHandler cookieHandler17 = okHttpClient10.cookieHandler;
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = okHttpClient10.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool20 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient19.connectionPool = connectionPool20;
        com.squareup.okhttp.OkAuthenticator okAuthenticator22 = null;
        okHttpClient19.authenticator = okAuthenticator22;
        java.util.List<java.lang.String> strList24 = okHttpClient19.transports;
        java.net.ResponseCache responseCache25 = null;
        okHttpClient19.responseCache = responseCache25;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier28 = null;
        okHttpClient27.hostnameVerifier = hostnameVerifier28;
        java.net.ResponseCache responseCache30 = null;
        okHttpClient27.responseCache = responseCache30;
        javax.net.ssl.HostnameVerifier hostnameVerifier32 = okHttpClient27.hostnameVerifier;
        java.net.Proxy proxy33 = okHttpClient27.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool36 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient27.connectionPool = connectionPool36;
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient27.copyWithDefaults();
        java.net.Proxy proxy39 = okHttpClient38.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier40 = okHttpClient38.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient41 = okHttpClient19.setHostnameVerifier(hostnameVerifier40);
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient10.setHostnameVerifier(hostnameVerifier40);
        com.squareup.okhttp.OkHttpClient okHttpClient43 = okHttpClient0.setHostnameVerifier(hostnameVerifier40);
        com.squareup.okhttp.OkHttpClient okHttpClient44 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier45 = null;
        okHttpClient44.hostnameVerifier = hostnameVerifier45;
        java.net.ProxySelector proxySelector47 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient48 = okHttpClient44.setProxySelector(proxySelector47);
        com.squareup.okhttp.OkHttpClient okHttpClient49 = okHttpClient48.copyWithDefaults();
        com.squareup.okhttp.Route[] routeArray50 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet51 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet51, routeArray50);
        okHttpClient49.failedRoutes = routeSet51;
        okHttpClient0.failedRoutes = routeSet51;
        java.util.List<java.lang.String> strList55 = okHttpClient0.transports;
        javax.net.ssl.HostnameVerifier hostnameVerifier56 = okHttpClient0.getHostnameVerifier();
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNotNull(connectionPool8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(hostnameVerifier15);
        org.junit.Assert.assertNull(sSLSocketFactory16);
        org.junit.Assert.assertNull(cookieHandler17);
        org.junit.Assert.assertNull(hostnameVerifier18);
        org.junit.Assert.assertNotNull(connectionPool20);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNull(hostnameVerifier32);
        org.junit.Assert.assertNull(proxy33);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNull(proxy39);
        org.junit.Assert.assertNotNull(hostnameVerifier40);
        org.junit.Assert.assertNotNull(okHttpClient41);
        org.junit.Assert.assertNotNull(okHttpClient42);
        org.junit.Assert.assertNotNull(okHttpClient43);
        org.junit.Assert.assertNotNull(okHttpClient48);
        org.junit.Assert.assertNotNull(okHttpClient49);
        org.junit.Assert.assertNotNull(routeArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertNotNull(hostnameVerifier56);
    }

    @Test
    public void test07090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07090");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.net.Proxy proxy5 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress6 = proxy5.address();
        java.net.SocketAddress socketAddress7 = proxy5.address();
        okHttpClient0.proxy = proxy5;
        com.squareup.okhttp.ConnectionPool connectionPool11 = new com.squareup.okhttp.ConnectionPool((-1), (long) '#');
        com.squareup.okhttp.Address address12 = null;
        com.squareup.okhttp.Connection connection13 = connectionPool11.get(address12);
        int int14 = connectionPool11.getSpdyConnectionCount();
        connectionPool11.evictAll();
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient0.setConnectionPool(connectionPool11);
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = null;
        okHttpClient17.hostnameVerifier = hostnameVerifier18;
        java.net.ProxySelector proxySelector20 = okHttpClient17.proxySelector;
        java.net.ProxySelector proxySelector21 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient17.setProxySelector(proxySelector21);
        com.squareup.okhttp.OkHttpClient okHttpClient23 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier24 = null;
        okHttpClient23.hostnameVerifier = hostnameVerifier24;
        java.net.ResponseCache responseCache26 = null;
        okHttpClient23.responseCache = responseCache26;
        java.util.List<java.lang.String> strList28 = okHttpClient23.transports;
        com.squareup.okhttp.ConnectionPool connectionPool29 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient23.connectionPool = connectionPool29;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient23.copyWithDefaults();
        java.net.ProxySelector proxySelector32 = okHttpClient31.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory33 = okHttpClient31.getSslSocketFactory();
        okHttpClient17.sslSocketFactory = sSLSocketFactory33;
        okHttpClient0.sslSocketFactory = sSLSocketFactory33;
        com.squareup.okhttp.OkAuthenticator okAuthenticator36 = okHttpClient0.getAuthenticator();
        com.squareup.okhttp.OkHttpClient okHttpClient37 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier38 = null;
        okHttpClient37.hostnameVerifier = hostnameVerifier38;
        java.net.ResponseCache responseCache40 = null;
        okHttpClient37.responseCache = responseCache40;
        javax.net.ssl.HostnameVerifier hostnameVerifier42 = okHttpClient37.hostnameVerifier;
        java.net.Proxy proxy43 = okHttpClient37.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool46 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient37.connectionPool = connectionPool46;
        com.squareup.okhttp.OkHttpClient okHttpClient48 = okHttpClient37.copyWithDefaults();
        java.net.ResponseCache responseCache49 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient48.setResponseCache(responseCache49);
        com.squareup.okhttp.OkHttpClient okHttpClient52 = okHttpClient50.setFollowProtocolRedirects(false);
        java.net.ResponseCache responseCache53 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient54 = okHttpClient50.setResponseCache(responseCache53);
        com.squareup.okhttp.OkHttpClient okHttpClient55 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool56 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient55.connectionPool = connectionPool56;
        com.squareup.okhttp.OkHttpClient okHttpClient58 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier59 = null;
        okHttpClient58.hostnameVerifier = hostnameVerifier59;
        java.net.ResponseCache responseCache61 = null;
        okHttpClient58.responseCache = responseCache61;
        java.util.List<java.lang.String> strList63 = okHttpClient58.transports;
        com.squareup.okhttp.ConnectionPool connectionPool64 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient58.connectionPool = connectionPool64;
        com.squareup.okhttp.OkHttpClient okHttpClient66 = okHttpClient55.setConnectionPool(connectionPool64);
        java.net.ResponseCache responseCache67 = okHttpClient55.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory68 = okHttpClient55.sslSocketFactory;
        java.net.CookieHandler cookieHandler69 = okHttpClient55.getCookieHandler();
        com.squareup.okhttp.OkAuthenticator okAuthenticator70 = okHttpClient55.authenticator;
        java.util.Set<com.squareup.okhttp.Route> routeSet71 = okHttpClient55.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient72 = new com.squareup.okhttp.OkHttpClient(okHttpClient55);
        com.squareup.okhttp.OkHttpClient okHttpClient73 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier74 = null;
        okHttpClient73.hostnameVerifier = hostnameVerifier74;
        java.net.ResponseCache responseCache76 = null;
        okHttpClient73.responseCache = responseCache76;
        javax.net.ssl.HostnameVerifier hostnameVerifier78 = okHttpClient73.hostnameVerifier;
        java.net.Proxy proxy79 = okHttpClient73.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool82 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient73.connectionPool = connectionPool82;
        com.squareup.okhttp.OkHttpClient okHttpClient84 = okHttpClient73.copyWithDefaults();
        java.net.ResponseCache responseCache85 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient86 = okHttpClient84.setResponseCache(responseCache85);
        javax.net.ssl.HostnameVerifier hostnameVerifier87 = okHttpClient86.hostnameVerifier;
        okHttpClient72.hostnameVerifier = hostnameVerifier87;
        com.squareup.okhttp.OkHttpClient okHttpClient89 = okHttpClient50.setHostnameVerifier(hostnameVerifier87);
        com.squareup.okhttp.OkHttpClient okHttpClient90 = okHttpClient0.setHostnameVerifier(hostnameVerifier87);
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNotNull(proxy5);
        org.junit.Assert.assertNull(socketAddress6);
        org.junit.Assert.assertNull(socketAddress7);
        org.junit.Assert.assertNull(connection13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNull(proxySelector20);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNotNull(connectionPool29);
        org.junit.Assert.assertNotNull(okHttpClient31);
// flaky:         org.junit.Assert.assertNull(proxySelector32);
        org.junit.Assert.assertNotNull(sSLSocketFactory33);
        org.junit.Assert.assertNull(okAuthenticator36);
        org.junit.Assert.assertNull(hostnameVerifier42);
        org.junit.Assert.assertNull(proxy43);
        org.junit.Assert.assertNotNull(okHttpClient48);
        org.junit.Assert.assertNotNull(okHttpClient50);
        org.junit.Assert.assertNotNull(okHttpClient52);
        org.junit.Assert.assertNotNull(okHttpClient54);
        org.junit.Assert.assertNotNull(connectionPool56);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNotNull(connectionPool64);
        org.junit.Assert.assertNotNull(okHttpClient66);
        org.junit.Assert.assertNull(responseCache67);
        org.junit.Assert.assertNull(sSLSocketFactory68);
        org.junit.Assert.assertNull(cookieHandler69);
        org.junit.Assert.assertNull(okAuthenticator70);
        org.junit.Assert.assertNotNull(routeSet71);
        org.junit.Assert.assertNull(hostnameVerifier78);
        org.junit.Assert.assertNull(proxy79);
        org.junit.Assert.assertNotNull(okHttpClient84);
        org.junit.Assert.assertNotNull(okHttpClient86);
        org.junit.Assert.assertNotNull(hostnameVerifier87);
        org.junit.Assert.assertNotNull(okHttpClient89);
        org.junit.Assert.assertNotNull(okHttpClient90);
    }

    @Test
    public void test07091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07091");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.ConnectionPool connectionPool12 = okHttpClient11.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator13 = okHttpClient11.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool16 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient11.connectionPool = connectionPool16;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient11.setSSLSocketFactory(sSLSocketFactory18);
        javax.net.ssl.HostnameVerifier hostnameVerifier20 = okHttpClient11.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool22 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient21.connectionPool = connectionPool22;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier25 = null;
        okHttpClient24.hostnameVerifier = hostnameVerifier25;
        java.net.ResponseCache responseCache27 = null;
        okHttpClient24.responseCache = responseCache27;
        java.util.List<java.lang.String> strList29 = okHttpClient24.transports;
        com.squareup.okhttp.ConnectionPool connectionPool30 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient24.connectionPool = connectionPool30;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient21.setConnectionPool(connectionPool30);
        com.squareup.okhttp.ConnectionPool connectionPool33 = okHttpClient32.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator34 = okHttpClient32.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool37 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient32.connectionPool = connectionPool37;
        java.net.ResponseCache responseCache39 = okHttpClient32.responseCache;
        com.squareup.okhttp.ConnectionPool connectionPool42 = new com.squareup.okhttp.ConnectionPool((int) (byte) 0, 10L);
        okHttpClient32.connectionPool = connectionPool42;
        com.squareup.okhttp.ConnectionPool connectionPool46 = new com.squareup.okhttp.ConnectionPool((int) (byte) 10, 0L);
        com.squareup.okhttp.OkHttpClient okHttpClient47 = okHttpClient32.setConnectionPool(connectionPool46);
        com.squareup.okhttp.OkHttpClient okHttpClient48 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier49 = null;
        okHttpClient48.hostnameVerifier = hostnameVerifier49;
        java.net.ProxySelector proxySelector51 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient52 = okHttpClient48.setProxySelector(proxySelector51);
        java.net.ResponseCache responseCache53 = null;
        okHttpClient52.responseCache = responseCache53;
        com.squareup.okhttp.OkHttpClient okHttpClient55 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier56 = null;
        okHttpClient55.hostnameVerifier = hostnameVerifier56;
        java.net.ResponseCache responseCache58 = null;
        okHttpClient55.responseCache = responseCache58;
        java.util.List<java.lang.String> strList60 = okHttpClient55.transports;
        com.squareup.okhttp.ConnectionPool connectionPool61 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient55.connectionPool = connectionPool61;
        java.net.CookieHandler cookieHandler63 = okHttpClient55.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache64 = okHttpClient55.okResponseCache();
        java.net.CookieHandler cookieHandler65 = okHttpClient55.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient66 = new com.squareup.okhttp.OkHttpClient(okHttpClient55);
        java.net.Proxy proxy67 = java.net.Proxy.NO_PROXY;
        boolean boolean69 = proxy67.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type70 = proxy67.type();
        java.net.SocketAddress socketAddress71 = proxy67.address();
        com.squareup.okhttp.OkHttpClient okHttpClient72 = okHttpClient55.setProxy(proxy67);
        com.squareup.okhttp.OkHttpClient okHttpClient73 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier74 = null;
        okHttpClient73.hostnameVerifier = hostnameVerifier74;
        java.net.ResponseCache responseCache76 = null;
        okHttpClient73.responseCache = responseCache76;
        java.util.List<java.lang.String> strList78 = okHttpClient73.transports;
        com.squareup.okhttp.ConnectionPool connectionPool79 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient73.connectionPool = connectionPool79;
        com.squareup.okhttp.OkHttpClient okHttpClient81 = okHttpClient73.copyWithDefaults();
        java.net.ProxySelector proxySelector82 = okHttpClient81.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory83 = okHttpClient81.getSslSocketFactory();
        okHttpClient72.sslSocketFactory = sSLSocketFactory83;
        java.lang.String[] strArray85 = sSLSocketFactory83.getDefaultCipherSuites();
        java.lang.String[] strArray86 = sSLSocketFactory83.getSupportedCipherSuites();
        java.net.Socket socket87 = sSLSocketFactory83.createSocket();
        okHttpClient52.sslSocketFactory = sSLSocketFactory83;
        okHttpClient32.sslSocketFactory = sSLSocketFactory83;
        okHttpClient11.sslSocketFactory = sSLSocketFactory83;
        java.lang.String[] strArray91 = sSLSocketFactory83.getSupportedCipherSuites();
        java.lang.String[] strArray92 = sSLSocketFactory83.getDefaultCipherSuites();
        java.net.InetAddress inetAddress95 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket97 = sSLSocketFactory83.createSocket("hi!", 10, inetAddress95, 1);
            org.junit.Assert.fail("Expected exception of type java.net.BindException; message: Permission denied (Bind failed)");
        } catch (java.net.BindException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNull(okAuthenticator13);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNull(hostnameVerifier20);
        org.junit.Assert.assertNotNull(connectionPool22);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(connectionPool30);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertNotNull(connectionPool33);
        org.junit.Assert.assertNull(okAuthenticator34);
        org.junit.Assert.assertNull(responseCache39);
        org.junit.Assert.assertNotNull(okHttpClient47);
        org.junit.Assert.assertNotNull(okHttpClient52);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNotNull(connectionPool61);
        org.junit.Assert.assertNull(cookieHandler63);
        org.junit.Assert.assertNull(okResponseCache64);
        org.junit.Assert.assertNull(cookieHandler65);
        org.junit.Assert.assertNotNull(proxy67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + type70 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type70.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress71);
        org.junit.Assert.assertNotNull(okHttpClient72);
        org.junit.Assert.assertNull(strList78);
        org.junit.Assert.assertNotNull(connectionPool79);
        org.junit.Assert.assertNotNull(okHttpClient81);
// flaky:         org.junit.Assert.assertNull(proxySelector82);
        org.junit.Assert.assertNotNull(sSLSocketFactory83);
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertNotNull(socket87);
        org.junit.Assert.assertEquals(socket87.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(strArray91);
        org.junit.Assert.assertNotNull(strArray92);
    }

    @Test
    public void test07092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07092");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        java.net.CookieHandler cookieHandler6 = okHttpClient0.getCookieHandler();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory7 = okHttpClient0.getSslSocketFactory();
        com.squareup.okhttp.OkAuthenticator okAuthenticator8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient0.setAuthenticator(okAuthenticator8);
        com.squareup.okhttp.OkHttpClient okHttpClient10 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier11 = null;
        okHttpClient10.hostnameVerifier = hostnameVerifier11;
        java.net.ProxySelector proxySelector13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient10.setProxySelector(proxySelector13);
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient14.copyWithDefaults();
        com.squareup.okhttp.Route[] routeArray16 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet17 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet17, routeArray16);
        okHttpClient15.failedRoutes = routeSet17;
        java.net.CookieHandler cookieHandler20 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient15.setCookieHandler(cookieHandler20);
        java.util.List<java.lang.String> strList22 = okHttpClient15.getTransports();
        com.squareup.okhttp.OkHttpClient.DEFAULT_TRANSPORTS = strList22;
        okHttpClient9.transports = strList22;
        com.squareup.okhttp.OkHttpClient.DEFAULT_TRANSPORTS = strList22;
        com.squareup.okhttp.OkHttpClient.DEFAULT_TRANSPORTS = strList22;
        com.squareup.okhttp.OkHttpClient.DEFAULT_TRANSPORTS = strList22;
        com.squareup.okhttp.OkHttpClient.DEFAULT_TRANSPORTS = strList22;
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNull(cookieHandler6);
        org.junit.Assert.assertNull(sSLSocketFactory7);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNotNull(okHttpClient14);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNotNull(routeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNotNull(strList22);
    }

    @Test
    public void test07093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07093");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.Proxy proxy8 = null;
        okHttpClient0.proxy = proxy8;
        boolean boolean10 = okHttpClient0.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.copyWithDefaults();
        java.net.Proxy proxy12 = java.net.Proxy.NO_PROXY;
        boolean boolean14 = proxy12.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type15 = proxy12.type();
        java.lang.String str16 = proxy12.toString();
        java.net.Proxy.Type type17 = proxy12.type();
        okHttpClient0.proxy = proxy12;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache20 = okHttpClient19.okResponseCache();
        java.net.ResponseCache responseCache21 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient19.setResponseCache(responseCache21);
        java.net.ProxySelector proxySelector23 = okHttpClient19.getProxySelector();
        com.squareup.okhttp.OkAuthenticator okAuthenticator24 = okHttpClient19.getAuthenticator();
        boolean boolean25 = proxy12.equals((java.lang.Object) okHttpClient19);
        com.squareup.okhttp.OkHttpClient okHttpClient26 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool27 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient26.connectionPool = connectionPool27;
        java.net.ResponseCache responseCache29 = null;
        okHttpClient26.responseCache = responseCache29;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = new com.squareup.okhttp.OkHttpClient(okHttpClient26);
        boolean boolean32 = okHttpClient26.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient33 = new com.squareup.okhttp.OkHttpClient(okHttpClient26);
        com.squareup.okhttp.OkHttpClient okHttpClient34 = new com.squareup.okhttp.OkHttpClient(okHttpClient26);
        com.squareup.okhttp.OkHttpClient okHttpClient35 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier36 = null;
        okHttpClient35.hostnameVerifier = hostnameVerifier36;
        java.net.ResponseCache responseCache38 = null;
        okHttpClient35.responseCache = responseCache38;
        javax.net.ssl.HostnameVerifier hostnameVerifier40 = okHttpClient35.hostnameVerifier;
        java.net.Proxy proxy41 = okHttpClient35.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool44 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient35.connectionPool = connectionPool44;
        java.util.List<java.lang.String> strList46 = okHttpClient35.getTransports();
        javax.net.ssl.HostnameVerifier hostnameVerifier47 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient48 = okHttpClient35.setHostnameVerifier(hostnameVerifier47);
        com.squareup.okhttp.OkHttpClient okHttpClient49 = okHttpClient48.copyWithDefaults();
        okHttpClient49.followProtocolRedirects = false;
        com.squareup.okhttp.OkHttpClient okHttpClient52 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier53 = null;
        okHttpClient52.hostnameVerifier = hostnameVerifier53;
        java.net.ResponseCache responseCache55 = null;
        okHttpClient52.responseCache = responseCache55;
        java.util.List<java.lang.String> strList57 = okHttpClient52.transports;
        com.squareup.okhttp.ConnectionPool connectionPool58 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient52.connectionPool = connectionPool58;
        java.net.Proxy proxy60 = null;
        okHttpClient52.proxy = proxy60;
        boolean boolean62 = okHttpClient52.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient64 = okHttpClient52.setFollowProtocolRedirects(true);
        com.squareup.okhttp.OkHttpClient okHttpClient65 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier66 = null;
        okHttpClient65.hostnameVerifier = hostnameVerifier66;
        java.net.ResponseCache responseCache68 = null;
        okHttpClient65.responseCache = responseCache68;
        java.util.List<java.lang.String> strList70 = okHttpClient65.transports;
        javax.net.ssl.HostnameVerifier hostnameVerifier71 = null;
        okHttpClient65.hostnameVerifier = hostnameVerifier71;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache73 = okHttpClient65.okResponseCache();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory74 = okHttpClient65.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient75 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier76 = null;
        okHttpClient75.hostnameVerifier = hostnameVerifier76;
        java.net.ResponseCache responseCache78 = null;
        okHttpClient75.responseCache = responseCache78;
        javax.net.ssl.HostnameVerifier hostnameVerifier80 = okHttpClient75.hostnameVerifier;
        java.net.Proxy proxy81 = okHttpClient75.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool84 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient75.connectionPool = connectionPool84;
        com.squareup.okhttp.OkHttpClient okHttpClient86 = okHttpClient75.copyWithDefaults();
        java.net.Proxy proxy87 = okHttpClient86.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier88 = okHttpClient86.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient89 = okHttpClient65.setHostnameVerifier(hostnameVerifier88);
        com.squareup.okhttp.OkHttpClient okHttpClient90 = okHttpClient64.setHostnameVerifier(hostnameVerifier88);
        com.squareup.okhttp.OkHttpClient okHttpClient91 = okHttpClient49.setHostnameVerifier(hostnameVerifier88);
        com.squareup.okhttp.OkHttpClient okHttpClient92 = okHttpClient34.setHostnameVerifier(hostnameVerifier88);
        com.squareup.okhttp.OkHttpClient okHttpClient93 = okHttpClient19.setHostnameVerifier(hostnameVerifier88);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(proxy12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + type15 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type15.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "DIRECT" + "'", str16, "DIRECT");
        org.junit.Assert.assertTrue("'" + type17 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type17.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(okResponseCache20);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNull(proxySelector23);
        org.junit.Assert.assertNull(okAuthenticator24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(connectionPool27);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(hostnameVerifier40);
        org.junit.Assert.assertNull(proxy41);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNotNull(okHttpClient48);
        org.junit.Assert.assertNotNull(okHttpClient49);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNotNull(connectionPool58);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(okHttpClient64);
        org.junit.Assert.assertNull(strList70);
        org.junit.Assert.assertNull(okResponseCache73);
        org.junit.Assert.assertNull(sSLSocketFactory74);
        org.junit.Assert.assertNull(hostnameVerifier80);
        org.junit.Assert.assertNull(proxy81);
        org.junit.Assert.assertNotNull(okHttpClient86);
        org.junit.Assert.assertNull(proxy87);
        org.junit.Assert.assertNotNull(hostnameVerifier88);
        org.junit.Assert.assertNotNull(okHttpClient89);
        org.junit.Assert.assertNotNull(okHttpClient90);
        org.junit.Assert.assertNotNull(okHttpClient91);
        org.junit.Assert.assertNotNull(okHttpClient92);
        org.junit.Assert.assertNotNull(okHttpClient93);
    }

    @Test
    public void test07094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07094");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.CookieHandler cookieHandler8 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache9 = okHttpClient0.okResponseCache();
        java.net.CookieHandler cookieHandler10 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        java.net.Proxy proxy12 = java.net.Proxy.NO_PROXY;
        boolean boolean14 = proxy12.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type15 = proxy12.type();
        java.net.SocketAddress socketAddress16 = proxy12.address();
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient0.setProxy(proxy12);
        java.lang.String[] strArray19 = new java.lang.String[] { "DIRECT" };
        java.util.ArrayList<java.lang.String> strList20 = new java.util.ArrayList<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList20, strArray19);
        okHttpClient0.transports = strList20;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient0.setFollowProtocolRedirects(false);
        com.squareup.okhttp.ConnectionPool connectionPool27 = new com.squareup.okhttp.ConnectionPool((int) '#', (long) (short) 100);
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient24.setConnectionPool(connectionPool27);
        java.net.ProxySelector proxySelector29 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient30 = okHttpClient24.setProxySelector(proxySelector29);
        javax.net.ssl.HostnameVerifier hostnameVerifier31 = okHttpClient30.getHostnameVerifier();
        java.net.ResponseCache responseCache32 = null;
        okHttpClient30.responseCache = responseCache32;
        java.net.CookieHandler cookieHandler34 = null;
        okHttpClient30.cookieHandler = cookieHandler34;
        com.squareup.okhttp.OkHttpClient okHttpClient36 = new com.squareup.okhttp.OkHttpClient(okHttpClient30);
        com.squareup.okhttp.ConnectionPool connectionPool37 = okHttpClient36.connectionPool;
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNull(cookieHandler8);
        org.junit.Assert.assertNull(okResponseCache9);
        org.junit.Assert.assertNull(cookieHandler10);
        org.junit.Assert.assertNotNull(proxy12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + type15 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type15.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress16);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNotNull(okHttpClient30);
        org.junit.Assert.assertNull(hostnameVerifier31);
        org.junit.Assert.assertNull(connectionPool37);
    }

    @Test
    public void test07095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07095");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.OkAuthenticator okAuthenticator12 = okHttpClient11.getAuthenticator();
        java.net.ProxySelector proxySelector13 = okHttpClient11.getProxySelector();
        java.net.ResponseCache responseCache14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient11.setResponseCache(responseCache14);
        com.squareup.okhttp.ConnectionPool connectionPool18 = new com.squareup.okhttp.ConnectionPool((int) 'a', (long) (byte) -1);
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient15.setConnectionPool(connectionPool18);
        com.squareup.okhttp.OkHttpClient okHttpClient20 = new com.squareup.okhttp.OkHttpClient(okHttpClient15);
        com.squareup.okhttp.OkHttpClient okHttpClient21 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool22 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient21.connectionPool = connectionPool22;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier25 = null;
        okHttpClient24.hostnameVerifier = hostnameVerifier25;
        java.net.ResponseCache responseCache27 = null;
        okHttpClient24.responseCache = responseCache27;
        java.util.List<java.lang.String> strList29 = okHttpClient24.transports;
        com.squareup.okhttp.ConnectionPool connectionPool30 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient24.connectionPool = connectionPool30;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient21.setConnectionPool(connectionPool30);
        com.squareup.okhttp.ConnectionPool connectionPool33 = okHttpClient32.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator34 = okHttpClient32.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool37 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient32.connectionPool = connectionPool37;
        java.net.ResponseCache responseCache39 = okHttpClient32.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory40 = okHttpClient32.sslSocketFactory;
        java.net.Proxy proxy41 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress42 = proxy41.address();
        com.squareup.okhttp.OkHttpClient okHttpClient43 = okHttpClient32.setProxy(proxy41);
        com.squareup.okhttp.OkHttpClient okHttpClient44 = new com.squareup.okhttp.OkHttpClient(okHttpClient43);
        com.squareup.okhttp.OkHttpClient okHttpClient45 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier46 = null;
        okHttpClient45.hostnameVerifier = hostnameVerifier46;
        java.net.ResponseCache responseCache48 = null;
        okHttpClient45.responseCache = responseCache48;
        java.util.List<java.lang.String> strList50 = okHttpClient45.transports;
        com.squareup.okhttp.ConnectionPool connectionPool51 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient45.connectionPool = connectionPool51;
        com.squareup.okhttp.OkHttpClient okHttpClient53 = okHttpClient45.copyWithDefaults();
        java.net.ProxySelector proxySelector54 = okHttpClient53.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory55 = okHttpClient53.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient56 = okHttpClient43.setSSLSocketFactory(sSLSocketFactory55);
        java.lang.String[] strArray57 = sSLSocketFactory55.getSupportedCipherSuites();
        java.lang.String[] strArray58 = sSLSocketFactory55.getSupportedCipherSuites();
        java.lang.String[] strArray59 = sSLSocketFactory55.getSupportedCipherSuites();
        okHttpClient15.sslSocketFactory = sSLSocketFactory55;
        java.net.Socket socket61 = sSLSocketFactory55.createSocket();
        java.net.InetAddress inetAddress62 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket64 = sSLSocketFactory55.createSocket(inetAddress62, 0);
            org.junit.Assert.fail("Expected exception of type java.net.ConnectException; message: Connection refused (Connection refused)");
        } catch (java.net.ConnectException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(okAuthenticator12);
        org.junit.Assert.assertNull(proxySelector13);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNotNull(connectionPool22);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(connectionPool30);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertNotNull(connectionPool33);
        org.junit.Assert.assertNull(okAuthenticator34);
        org.junit.Assert.assertNull(responseCache39);
        org.junit.Assert.assertNull(sSLSocketFactory40);
        org.junit.Assert.assertNotNull(proxy41);
        org.junit.Assert.assertNull(socketAddress42);
        org.junit.Assert.assertNotNull(okHttpClient43);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNotNull(connectionPool51);
        org.junit.Assert.assertNotNull(okHttpClient53);
// flaky:         org.junit.Assert.assertNull(proxySelector54);
        org.junit.Assert.assertNotNull(sSLSocketFactory55);
        org.junit.Assert.assertNotNull(okHttpClient56);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(socket61);
        org.junit.Assert.assertEquals(socket61.toString(), "Socket[unconnected]");
    }

    @Test
    public void test07096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07096");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        java.net.Proxy proxy12 = okHttpClient11.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool14 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient13.connectionPool = connectionPool14;
        int int16 = connectionPool14.getSpdyConnectionCount();
        okHttpClient11.connectionPool = connectionPool14;
        int int18 = connectionPool14.getSpdyConnectionCount();
        int int19 = connectionPool14.getSpdyConnectionCount();
        int int20 = connectionPool14.getSpdyConnectionCount();
        int int21 = connectionPool14.getHttpConnectionCount();
        int int22 = connectionPool14.getConnectionCount();
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(proxy12);
        org.junit.Assert.assertNotNull(connectionPool14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
    }

    @Test
    public void test07097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07097");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        java.net.Proxy proxy6 = java.net.Proxy.NO_PROXY;
        boolean boolean8 = proxy6.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type9 = proxy6.type();
        java.net.SocketAddress socketAddress10 = proxy6.address();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setProxy(proxy6);
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = okHttpClient11.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient(okHttpClient11);
        com.squareup.okhttp.OkHttpClient okHttpClient14 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier15 = null;
        okHttpClient14.hostnameVerifier = hostnameVerifier15;
        java.net.ResponseCache responseCache17 = null;
        okHttpClient14.responseCache = responseCache17;
        javax.net.ssl.HostnameVerifier hostnameVerifier19 = okHttpClient14.hostnameVerifier;
        java.net.Proxy proxy20 = okHttpClient14.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool23 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient14.connectionPool = connectionPool23;
        java.util.List<java.lang.String> strList25 = okHttpClient14.getTransports();
        javax.net.ssl.HostnameVerifier hostnameVerifier26 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient14.setHostnameVerifier(hostnameVerifier26);
        com.squareup.okhttp.OkHttpClient okHttpClient28 = new com.squareup.okhttp.OkHttpClient(okHttpClient14);
        com.squareup.okhttp.OkHttpClient okHttpClient29 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = null;
        okHttpClient29.hostnameVerifier = hostnameVerifier30;
        java.net.ProxySelector proxySelector32 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient29.setProxySelector(proxySelector32);
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient33.copyWithDefaults();
        java.net.ProxySelector proxySelector35 = null;
        okHttpClient34.proxySelector = proxySelector35;
        com.squareup.okhttp.OkAuthenticator okAuthenticator37 = okHttpClient34.authenticator;
        okHttpClient28.authenticator = okAuthenticator37;
        okHttpClient13.authenticator = okAuthenticator37;
        java.net.ResponseCache responseCache40 = null;
        okHttpClient13.responseCache = responseCache40;
        com.squareup.okhttp.OkHttpClient okHttpClient42 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier43 = null;
        okHttpClient42.hostnameVerifier = hostnameVerifier43;
        java.net.ResponseCache responseCache45 = null;
        okHttpClient42.responseCache = responseCache45;
        java.util.List<java.lang.String> strList47 = okHttpClient42.transports;
        com.squareup.okhttp.ConnectionPool connectionPool48 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient42.connectionPool = connectionPool48;
        java.net.Proxy proxy50 = null;
        okHttpClient42.proxy = proxy50;
        boolean boolean52 = okHttpClient42.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient53 = okHttpClient42.copyWithDefaults();
        java.net.CookieHandler cookieHandler54 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient55 = okHttpClient53.setCookieHandler(cookieHandler54);
        com.squareup.okhttp.OkHttpClient okHttpClient56 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier57 = null;
        okHttpClient56.hostnameVerifier = hostnameVerifier57;
        java.net.ResponseCache responseCache59 = null;
        okHttpClient56.responseCache = responseCache59;
        javax.net.ssl.HostnameVerifier hostnameVerifier61 = okHttpClient56.hostnameVerifier;
        java.net.Proxy proxy62 = okHttpClient56.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool65 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient56.connectionPool = connectionPool65;
        boolean boolean67 = okHttpClient56.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient68 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier69 = null;
        okHttpClient68.hostnameVerifier = hostnameVerifier69;
        java.net.ResponseCache responseCache71 = null;
        okHttpClient68.responseCache = responseCache71;
        javax.net.ssl.HostnameVerifier hostnameVerifier73 = okHttpClient68.hostnameVerifier;
        java.net.Proxy proxy74 = okHttpClient68.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool77 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient68.connectionPool = connectionPool77;
        com.squareup.okhttp.OkHttpClient okHttpClient79 = okHttpClient68.copyWithDefaults();
        java.net.Proxy proxy80 = okHttpClient79.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier81 = okHttpClient79.getHostnameVerifier();
        okHttpClient56.hostnameVerifier = hostnameVerifier81;
        okHttpClient53.hostnameVerifier = hostnameVerifier81;
        java.util.List<java.lang.String> strList84 = okHttpClient53.getTransports();
        com.squareup.okhttp.OkHttpClient.DEFAULT_TRANSPORTS = strList84;
        okHttpClient13.transports = strList84;
        java.net.ProxySelector proxySelector87 = okHttpClient13.proxySelector;
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(proxy6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + type9 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type9.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress10);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(hostnameVerifier12);
        org.junit.Assert.assertNull(hostnameVerifier19);
        org.junit.Assert.assertNull(proxy20);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNotNull(okHttpClient33);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertNotNull(okAuthenticator37);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNotNull(connectionPool48);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(okHttpClient53);
        org.junit.Assert.assertNotNull(okHttpClient55);
        org.junit.Assert.assertNull(hostnameVerifier61);
        org.junit.Assert.assertNull(proxy62);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNull(hostnameVerifier73);
        org.junit.Assert.assertNull(proxy74);
        org.junit.Assert.assertNotNull(okHttpClient79);
        org.junit.Assert.assertNull(proxy80);
        org.junit.Assert.assertNotNull(hostnameVerifier81);
        org.junit.Assert.assertNotNull(strList84);
        org.junit.Assert.assertNull(proxySelector87);
    }

    @Test
    public void test07098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07098");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.ConnectionPool connectionPool12 = okHttpClient11.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator13 = okHttpClient11.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool16 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient11.connectionPool = connectionPool16;
        java.net.ResponseCache responseCache18 = okHttpClient11.responseCache;
        java.util.List<java.lang.String> strList19 = okHttpClient11.getTransports();
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient11.copyWithDefaults();
        java.net.ResponseCache responseCache21 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient20.setResponseCache(responseCache21);
        com.squareup.okhttp.OkAuthenticator okAuthenticator23 = okHttpClient20.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool26 = new com.squareup.okhttp.ConnectionPool((int) (short) -1, (long) 'a');
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient20.setConnectionPool(connectionPool26);
        java.net.Proxy proxy28 = okHttpClient20.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient29 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = null;
        okHttpClient29.hostnameVerifier = hostnameVerifier30;
        java.net.ResponseCache responseCache32 = null;
        okHttpClient29.responseCache = responseCache32;
        java.util.List<java.lang.String> strList34 = okHttpClient29.transports;
        com.squareup.okhttp.ConnectionPool connectionPool35 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient29.connectionPool = connectionPool35;
        java.net.CookieHandler cookieHandler37 = okHttpClient29.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache38 = okHttpClient29.okResponseCache();
        java.net.CookieHandler cookieHandler39 = okHttpClient29.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient40 = new com.squareup.okhttp.OkHttpClient(okHttpClient29);
        java.net.Proxy proxy41 = java.net.Proxy.NO_PROXY;
        boolean boolean43 = proxy41.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type44 = proxy41.type();
        java.net.SocketAddress socketAddress45 = proxy41.address();
        com.squareup.okhttp.OkHttpClient okHttpClient46 = okHttpClient29.setProxy(proxy41);
        com.squareup.okhttp.OkHttpClient okHttpClient47 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier48 = null;
        okHttpClient47.hostnameVerifier = hostnameVerifier48;
        java.net.ResponseCache responseCache50 = null;
        okHttpClient47.responseCache = responseCache50;
        java.util.List<java.lang.String> strList52 = okHttpClient47.transports;
        com.squareup.okhttp.ConnectionPool connectionPool53 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient47.connectionPool = connectionPool53;
        com.squareup.okhttp.OkHttpClient okHttpClient55 = okHttpClient47.copyWithDefaults();
        java.net.ProxySelector proxySelector56 = okHttpClient55.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory57 = okHttpClient55.getSslSocketFactory();
        okHttpClient46.sslSocketFactory = sSLSocketFactory57;
        java.lang.String[] strArray59 = sSLSocketFactory57.getDefaultCipherSuites();
        java.lang.String[] strArray60 = sSLSocketFactory57.getSupportedCipherSuites();
        java.lang.String[] strArray61 = sSLSocketFactory57.getDefaultCipherSuites();
        java.net.Socket socket62 = sSLSocketFactory57.createSocket();
        java.lang.String[] strArray63 = sSLSocketFactory57.getDefaultCipherSuites();
        okHttpClient20.sslSocketFactory = sSLSocketFactory57;
        java.net.InetAddress inetAddress65 = null;
        java.net.InetAddress inetAddress67 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket69 = sSLSocketFactory57.createSocket(inetAddress65, (int) (short) 100, inetAddress67, 10);
            org.junit.Assert.fail("Expected exception of type java.net.BindException; message: Permission denied (Bind failed)");
        } catch (java.net.BindException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNull(okAuthenticator13);
        org.junit.Assert.assertNull(responseCache18);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNotNull(okAuthenticator23);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNull(proxy28);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(connectionPool35);
        org.junit.Assert.assertNull(cookieHandler37);
        org.junit.Assert.assertNull(okResponseCache38);
        org.junit.Assert.assertNull(cookieHandler39);
        org.junit.Assert.assertNotNull(proxy41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + type44 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type44.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress45);
        org.junit.Assert.assertNotNull(okHttpClient46);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNotNull(connectionPool53);
        org.junit.Assert.assertNotNull(okHttpClient55);
// flaky:         org.junit.Assert.assertNull(proxySelector56);
        org.junit.Assert.assertNotNull(sSLSocketFactory57);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(socket62);
        org.junit.Assert.assertEquals(socket62.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(strArray63);
    }

    @Test
    public void test07099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07099");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.CookieHandler cookieHandler6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient0.setCookieHandler(cookieHandler6);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory8 = null;
        okHttpClient7.sslSocketFactory = sSLSocketFactory8;
        com.squareup.okhttp.OkAuthenticator okAuthenticator10 = okHttpClient7.authenticator;
        java.net.ResponseCache responseCache11 = okHttpClient7.responseCache;
        java.net.ResponseCache responseCache12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient7.setResponseCache(responseCache12);
        java.net.ProxySelector proxySelector14 = okHttpClient7.proxySelector;
        java.net.ProxySelector proxySelector15 = okHttpClient7.proxySelector;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient7.setFollowProtocolRedirects(false);
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool19 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient18.connectionPool = connectionPool19;
        java.net.ResponseCache responseCache21 = null;
        okHttpClient18.responseCache = responseCache21;
        com.squareup.okhttp.OkHttpClient okHttpClient23 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier24 = null;
        okHttpClient23.hostnameVerifier = hostnameVerifier24;
        java.net.ResponseCache responseCache26 = null;
        okHttpClient23.responseCache = responseCache26;
        javax.net.ssl.HostnameVerifier hostnameVerifier28 = okHttpClient23.hostnameVerifier;
        java.net.Proxy proxy29 = okHttpClient23.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool32 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient23.connectionPool = connectionPool32;
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient23.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier35 = okHttpClient34.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient18.setHostnameVerifier(hostnameVerifier35);
        com.squareup.okhttp.OkHttpClient okHttpClient37 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier38 = null;
        okHttpClient37.hostnameVerifier = hostnameVerifier38;
        java.net.ResponseCache responseCache40 = null;
        okHttpClient37.responseCache = responseCache40;
        java.util.List<java.lang.String> strList42 = okHttpClient37.transports;
        com.squareup.okhttp.ConnectionPool connectionPool43 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient37.connectionPool = connectionPool43;
        com.squareup.okhttp.OkHttpClient okHttpClient45 = okHttpClient37.copyWithDefaults();
        java.net.ProxySelector proxySelector46 = okHttpClient45.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory47 = okHttpClient45.getSslSocketFactory();
        java.lang.String[] strArray48 = sSLSocketFactory47.getSupportedCipherSuites();
        okHttpClient18.sslSocketFactory = sSLSocketFactory47;
        java.net.Socket socket50 = sSLSocketFactory47.createSocket();
        com.squareup.okhttp.OkHttpClient okHttpClient51 = okHttpClient7.setSSLSocketFactory(sSLSocketFactory47);
        java.net.InetAddress inetAddress52 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket54 = sSLSocketFactory47.createSocket(inetAddress52, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: port out of range:-1");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNotNull(okHttpClient7);
        org.junit.Assert.assertNull(okAuthenticator10);
        org.junit.Assert.assertNull(responseCache11);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNull(proxySelector14);
        org.junit.Assert.assertNull(proxySelector15);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNotNull(connectionPool19);
        org.junit.Assert.assertNull(hostnameVerifier28);
        org.junit.Assert.assertNull(proxy29);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertNotNull(hostnameVerifier35);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNotNull(connectionPool43);
        org.junit.Assert.assertNotNull(okHttpClient45);
// flaky:         org.junit.Assert.assertNull(proxySelector46);
        org.junit.Assert.assertNotNull(sSLSocketFactory47);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(socket50);
        org.junit.Assert.assertEquals(socket50.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(okHttpClient51);
    }

    @Test
    public void test07100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07100");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.CookieHandler cookieHandler6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient0.setCookieHandler(cookieHandler6);
        java.net.ResponseCache responseCache8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient7.setResponseCache(responseCache8);
        com.squareup.okhttp.OkHttpClient okHttpClient10 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier11 = null;
        okHttpClient10.hostnameVerifier = hostnameVerifier11;
        java.net.ResponseCache responseCache13 = null;
        okHttpClient10.responseCache = responseCache13;
        java.util.List<java.lang.String> strList15 = okHttpClient10.transports;
        com.squareup.okhttp.ConnectionPool connectionPool16 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient10.connectionPool = connectionPool16;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient10.copyWithDefaults();
        java.net.ProxySelector proxySelector19 = okHttpClient18.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory20 = okHttpClient18.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient7.setSSLSocketFactory(sSLSocketFactory20);
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier23 = null;
        okHttpClient22.hostnameVerifier = hostnameVerifier23;
        java.net.ResponseCache responseCache25 = null;
        okHttpClient22.responseCache = responseCache25;
        javax.net.ssl.HostnameVerifier hostnameVerifier27 = okHttpClient22.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient22.setFollowProtocolRedirects(false);
        java.net.Proxy proxy30 = okHttpClient22.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier31 = okHttpClient22.getHostnameVerifier();
        java.util.Set<com.squareup.okhttp.Route> routeSet32 = okHttpClient22.failedRoutes;
        okHttpClient22.followProtocolRedirects = true;
        com.squareup.okhttp.OkHttpClient okHttpClient35 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier36 = null;
        okHttpClient35.hostnameVerifier = hostnameVerifier36;
        java.net.ResponseCache responseCache38 = null;
        okHttpClient35.responseCache = responseCache38;
        java.util.List<java.lang.String> strList40 = okHttpClient35.transports;
        java.net.Proxy proxy41 = java.net.Proxy.NO_PROXY;
        boolean boolean43 = proxy41.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type44 = proxy41.type();
        java.net.SocketAddress socketAddress45 = proxy41.address();
        com.squareup.okhttp.OkHttpClient okHttpClient46 = okHttpClient35.setProxy(proxy41);
        javax.net.ssl.HostnameVerifier hostnameVerifier47 = okHttpClient46.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient48 = new com.squareup.okhttp.OkHttpClient(okHttpClient46);
        com.squareup.okhttp.OkHttpClient okHttpClient49 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier50 = null;
        okHttpClient49.hostnameVerifier = hostnameVerifier50;
        java.net.ResponseCache responseCache52 = null;
        okHttpClient49.responseCache = responseCache52;
        javax.net.ssl.HostnameVerifier hostnameVerifier54 = okHttpClient49.hostnameVerifier;
        java.net.Proxy proxy55 = okHttpClient49.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool58 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient49.connectionPool = connectionPool58;
        java.util.List<java.lang.String> strList60 = okHttpClient49.getTransports();
        javax.net.ssl.HostnameVerifier hostnameVerifier61 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient62 = okHttpClient49.setHostnameVerifier(hostnameVerifier61);
        com.squareup.okhttp.OkHttpClient okHttpClient63 = new com.squareup.okhttp.OkHttpClient(okHttpClient49);
        com.squareup.okhttp.OkHttpClient okHttpClient64 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier65 = null;
        okHttpClient64.hostnameVerifier = hostnameVerifier65;
        java.net.ProxySelector proxySelector67 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient68 = okHttpClient64.setProxySelector(proxySelector67);
        com.squareup.okhttp.OkHttpClient okHttpClient69 = okHttpClient68.copyWithDefaults();
        java.net.ProxySelector proxySelector70 = null;
        okHttpClient69.proxySelector = proxySelector70;
        com.squareup.okhttp.OkAuthenticator okAuthenticator72 = okHttpClient69.authenticator;
        okHttpClient63.authenticator = okAuthenticator72;
        okHttpClient48.authenticator = okAuthenticator72;
        okHttpClient22.authenticator = okAuthenticator72;
        com.squareup.okhttp.OkHttpClient okHttpClient76 = okHttpClient21.setAuthenticator(okAuthenticator72);
        com.squareup.okhttp.OkHttpClient okHttpClient78 = okHttpClient21.setFollowProtocolRedirects(false);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNotNull(okHttpClient7);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(connectionPool16);
        org.junit.Assert.assertNotNull(okHttpClient18);
// flaky:         org.junit.Assert.assertNull(proxySelector19);
        org.junit.Assert.assertNotNull(sSLSocketFactory20);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNull(hostnameVerifier27);
        org.junit.Assert.assertNotNull(okHttpClient29);
        org.junit.Assert.assertNull(proxy30);
        org.junit.Assert.assertNull(hostnameVerifier31);
        org.junit.Assert.assertNotNull(routeSet32);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNotNull(proxy41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + type44 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type44.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress45);
        org.junit.Assert.assertNotNull(okHttpClient46);
        org.junit.Assert.assertNull(hostnameVerifier47);
        org.junit.Assert.assertNull(hostnameVerifier54);
        org.junit.Assert.assertNull(proxy55);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNotNull(okHttpClient62);
        org.junit.Assert.assertNotNull(okHttpClient68);
        org.junit.Assert.assertNotNull(okHttpClient69);
        org.junit.Assert.assertNotNull(okAuthenticator72);
        org.junit.Assert.assertNotNull(okHttpClient76);
        org.junit.Assert.assertNotNull(okHttpClient78);
    }

    @Test
    public void test07101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07101");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.CookieHandler cookieHandler5 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = null;
        okHttpClient6.hostnameVerifier = hostnameVerifier7;
        java.net.ResponseCache responseCache9 = null;
        okHttpClient6.responseCache = responseCache9;
        java.util.List<java.lang.String> strList11 = okHttpClient6.transports;
        com.squareup.okhttp.ConnectionPool connectionPool12 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient6.connectionPool = connectionPool12;
        java.net.Proxy proxy14 = null;
        okHttpClient6.proxy = proxy14;
        java.util.Set<com.squareup.okhttp.Route> routeSet16 = okHttpClient6.failedRoutes;
        okHttpClient0.failedRoutes = routeSet16;
        java.net.ProxySelector proxySelector18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient0.setProxySelector(proxySelector18);
        com.squareup.okhttp.OkHttpClient okHttpClient20 = new com.squareup.okhttp.OkHttpClient(okHttpClient19);
        com.squareup.okhttp.OkAuthenticator okAuthenticator21 = okHttpClient20.authenticator;
        java.net.ProxySelector proxySelector22 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient20.setProxySelector(proxySelector22);
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient23.copyWithDefaults();
        java.net.Proxy proxy25 = okHttpClient23.getProxy();
        java.net.ProxySelector proxySelector26 = null;
        okHttpClient23.proxySelector = proxySelector26;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = new com.squareup.okhttp.OkHttpClient(okHttpClient23);
        java.net.ResponseCache responseCache29 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient30 = okHttpClient23.setResponseCache(responseCache29);
        java.net.ResponseCache responseCache31 = okHttpClient23.getResponseCache();
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNotNull(routeSet16);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNull(okAuthenticator21);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNull(proxy25);
        org.junit.Assert.assertNotNull(okHttpClient30);
        org.junit.Assert.assertNull(responseCache31);
    }

    @Test
    public void test07102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07102");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.Proxy proxy8 = null;
        okHttpClient0.proxy = proxy8;
        boolean boolean10 = okHttpClient0.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        java.net.ProxySelector proxySelector12 = okHttpClient11.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier13 = okHttpClient11.hostnameVerifier;
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = okHttpClient11.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool16 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient15.connectionPool = connectionPool16;
        com.squareup.okhttp.OkAuthenticator okAuthenticator18 = null;
        okHttpClient15.authenticator = okAuthenticator18;
        java.net.CookieHandler cookieHandler20 = null;
        okHttpClient15.cookieHandler = cookieHandler20;
        java.net.Proxy proxy22 = java.net.Proxy.NO_PROXY;
        boolean boolean24 = proxy22.equals((java.lang.Object) 1L);
        com.squareup.okhttp.OkHttpClient okHttpClient25 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache26 = okHttpClient25.okResponseCache();
        java.net.ResponseCache responseCache27 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient25.setResponseCache(responseCache27);
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        okHttpClient25.transports = strList31;
        boolean boolean34 = proxy22.equals((java.lang.Object) strList31);
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient15.setProxy(proxy22);
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient11.setProxy(proxy22);
        com.squareup.okhttp.OkHttpClient okHttpClient37 = new com.squareup.okhttp.OkHttpClient(okHttpClient36);
        javax.net.ssl.HostnameVerifier hostnameVerifier38 = okHttpClient36.getHostnameVerifier();
        javax.net.ssl.HostnameVerifier hostnameVerifier39 = okHttpClient36.getHostnameVerifier();
        java.net.ProxySelector proxySelector40 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient41 = okHttpClient36.setProxySelector(proxySelector40);
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient41.copyWithDefaults();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory43 = okHttpClient41.sslSocketFactory;
        com.squareup.okhttp.OkHttpClient okHttpClient44 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier45 = null;
        okHttpClient44.hostnameVerifier = hostnameVerifier45;
        java.net.ProxySelector proxySelector47 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient48 = okHttpClient44.setProxySelector(proxySelector47);
        java.net.CookieHandler cookieHandler49 = okHttpClient44.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient50 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier51 = null;
        okHttpClient50.hostnameVerifier = hostnameVerifier51;
        java.net.ResponseCache responseCache53 = null;
        okHttpClient50.responseCache = responseCache53;
        java.util.List<java.lang.String> strList55 = okHttpClient50.transports;
        com.squareup.okhttp.ConnectionPool connectionPool56 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient50.connectionPool = connectionPool56;
        java.net.Proxy proxy58 = null;
        okHttpClient50.proxy = proxy58;
        java.util.Set<com.squareup.okhttp.Route> routeSet60 = okHttpClient50.failedRoutes;
        okHttpClient44.failedRoutes = routeSet60;
        java.net.ProxySelector proxySelector62 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient63 = okHttpClient44.setProxySelector(proxySelector62);
        com.squareup.okhttp.OkHttpClient okHttpClient64 = new com.squareup.okhttp.OkHttpClient(okHttpClient63);
        com.squareup.okhttp.OkHttpClient okHttpClient65 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier66 = null;
        okHttpClient65.hostnameVerifier = hostnameVerifier66;
        java.net.ResponseCache responseCache68 = null;
        okHttpClient65.responseCache = responseCache68;
        javax.net.ssl.HostnameVerifier hostnameVerifier70 = okHttpClient65.hostnameVerifier;
        java.net.Proxy proxy71 = okHttpClient65.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool74 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient65.connectionPool = connectionPool74;
        com.squareup.okhttp.OkHttpClient okHttpClient76 = okHttpClient65.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier77 = okHttpClient76.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient78 = okHttpClient63.setHostnameVerifier(hostnameVerifier77);
        okHttpClient41.hostnameVerifier = hostnameVerifier77;
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(proxySelector12);
        org.junit.Assert.assertNull(hostnameVerifier13);
        org.junit.Assert.assertNull(hostnameVerifier14);
        org.junit.Assert.assertNotNull(connectionPool16);
        org.junit.Assert.assertNotNull(proxy22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(okResponseCache26);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNull(hostnameVerifier38);
        org.junit.Assert.assertNull(hostnameVerifier39);
        org.junit.Assert.assertNotNull(okHttpClient41);
        org.junit.Assert.assertNotNull(okHttpClient42);
        org.junit.Assert.assertNull(sSLSocketFactory43);
        org.junit.Assert.assertNotNull(okHttpClient48);
        org.junit.Assert.assertNull(cookieHandler49);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertNotNull(connectionPool56);
        org.junit.Assert.assertNotNull(routeSet60);
        org.junit.Assert.assertNotNull(okHttpClient63);
        org.junit.Assert.assertNull(hostnameVerifier70);
        org.junit.Assert.assertNull(proxy71);
        org.junit.Assert.assertNotNull(okHttpClient76);
        org.junit.Assert.assertNotNull(hostnameVerifier77);
        org.junit.Assert.assertNotNull(okHttpClient78);
    }

    @Test
    public void test07103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07103");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        java.net.ResponseCache responseCache12 = okHttpClient0.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory13 = okHttpClient0.sslSocketFactory;
        java.net.CookieHandler cookieHandler14 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkAuthenticator okAuthenticator15 = okHttpClient0.authenticator;
        java.util.Set<com.squareup.okhttp.Route> routeSet16 = okHttpClient0.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        java.net.ResponseCache responseCache18 = okHttpClient0.responseCache;
        javax.net.ssl.HostnameVerifier hostnameVerifier19 = okHttpClient0.getHostnameVerifier();
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(responseCache12);
        org.junit.Assert.assertNull(sSLSocketFactory13);
        org.junit.Assert.assertNull(cookieHandler14);
        org.junit.Assert.assertNull(okAuthenticator15);
        org.junit.Assert.assertNotNull(routeSet16);
        org.junit.Assert.assertNull(responseCache18);
        org.junit.Assert.assertNull(hostnameVerifier19);
    }

    @Test
    public void test07104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07104");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        com.squareup.okhttp.ConnectionPool connectionPool8 = okHttpClient0.connectionPool;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.OkAuthenticator okAuthenticator10 = okHttpClient0.authenticator;
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNotNull(connectionPool8);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNull(okAuthenticator10);
    }

    @Test
    public void test07105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07105");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        java.net.Proxy proxy12 = okHttpClient11.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool14 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient13.connectionPool = connectionPool14;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier17 = null;
        okHttpClient16.hostnameVerifier = hostnameVerifier17;
        java.net.ResponseCache responseCache19 = null;
        okHttpClient16.responseCache = responseCache19;
        java.util.List<java.lang.String> strList21 = okHttpClient16.transports;
        com.squareup.okhttp.ConnectionPool connectionPool22 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient16.connectionPool = connectionPool22;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient13.setConnectionPool(connectionPool22);
        com.squareup.okhttp.ConnectionPool connectionPool25 = okHttpClient13.connectionPool;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient11.setConnectionPool(connectionPool25);
        com.squareup.okhttp.OkHttpClient okHttpClient27 = new com.squareup.okhttp.OkHttpClient(okHttpClient26);
        com.squareup.okhttp.ConnectionPool connectionPool28 = okHttpClient26.connectionPool;
        java.net.ProxySelector proxySelector29 = okHttpClient26.proxySelector;
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(proxy12);
        org.junit.Assert.assertNotNull(connectionPool14);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(connectionPool22);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNotNull(connectionPool25);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNotNull(connectionPool28);
        org.junit.Assert.assertNull(proxySelector29);
    }

    @Test
    public void test07106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07106");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        java.net.ProxySelector proxySelector12 = null;
        okHttpClient0.proxySelector = proxySelector12;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool15 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient14.connectionPool = connectionPool15;
        com.squareup.okhttp.OkAuthenticator okAuthenticator17 = null;
        okHttpClient14.authenticator = okAuthenticator17;
        java.net.CookieHandler cookieHandler19 = null;
        okHttpClient14.cookieHandler = cookieHandler19;
        java.net.Proxy proxy21 = java.net.Proxy.NO_PROXY;
        boolean boolean23 = proxy21.equals((java.lang.Object) 1L);
        com.squareup.okhttp.OkHttpClient okHttpClient24 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache25 = okHttpClient24.okResponseCache();
        java.net.ResponseCache responseCache26 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient24.setResponseCache(responseCache26);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        okHttpClient24.transports = strList30;
        boolean boolean33 = proxy21.equals((java.lang.Object) strList30);
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient14.setProxy(proxy21);
        com.squareup.okhttp.OkHttpClient okHttpClient35 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier36 = null;
        okHttpClient35.hostnameVerifier = hostnameVerifier36;
        java.net.ProxySelector proxySelector38 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient35.setProxySelector(proxySelector38);
        java.net.CookieHandler cookieHandler40 = okHttpClient35.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient41 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier42 = null;
        okHttpClient41.hostnameVerifier = hostnameVerifier42;
        java.net.ResponseCache responseCache44 = null;
        okHttpClient41.responseCache = responseCache44;
        java.util.List<java.lang.String> strList46 = okHttpClient41.transports;
        com.squareup.okhttp.ConnectionPool connectionPool47 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient41.connectionPool = connectionPool47;
        java.net.Proxy proxy49 = null;
        okHttpClient41.proxy = proxy49;
        java.util.Set<com.squareup.okhttp.Route> routeSet51 = okHttpClient41.failedRoutes;
        okHttpClient35.failedRoutes = routeSet51;
        javax.net.ssl.HostnameVerifier hostnameVerifier53 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient54 = okHttpClient35.setHostnameVerifier(hostnameVerifier53);
        boolean boolean55 = proxy21.equals((java.lang.Object) okHttpClient54);
        okHttpClient0.proxy = proxy21;
        java.net.Proxy proxy57 = java.net.Proxy.NO_PROXY;
        boolean boolean59 = proxy57.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type60 = proxy57.type();
        java.lang.String str61 = proxy57.toString();
        com.squareup.okhttp.OkHttpClient okHttpClient62 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier63 = null;
        okHttpClient62.hostnameVerifier = hostnameVerifier63;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory65 = okHttpClient62.getSslSocketFactory();
        boolean boolean66 = proxy57.equals((java.lang.Object) okHttpClient62);
        java.lang.String str67 = proxy57.toString();
        java.net.Proxy.Type type68 = proxy57.type();
        okHttpClient0.proxy = proxy57;
        java.net.CookieHandler cookieHandler70 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient71 = okHttpClient0.setCookieHandler(cookieHandler70);
        java.net.ResponseCache responseCache72 = okHttpClient71.getResponseCache();
        boolean boolean73 = okHttpClient71.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient74 = okHttpClient71.copyWithDefaults();
        boolean boolean75 = okHttpClient71.followProtocolRedirects;
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(connectionPool15);
        org.junit.Assert.assertNotNull(proxy21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(okResponseCache25);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertNotNull(okHttpClient39);
        org.junit.Assert.assertNull(cookieHandler40);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNotNull(connectionPool47);
        org.junit.Assert.assertNotNull(routeSet51);
        org.junit.Assert.assertNotNull(okHttpClient54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(proxy57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + type60 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type60.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "DIRECT" + "'", str61, "DIRECT");
        org.junit.Assert.assertNull(sSLSocketFactory65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "DIRECT" + "'", str67, "DIRECT");
        org.junit.Assert.assertTrue("'" + type68 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type68.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNotNull(okHttpClient71);
        org.junit.Assert.assertNull(responseCache72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(okHttpClient74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
    }

    @Test
    public void test07107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07107");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.net.Proxy proxy5 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress6 = proxy5.address();
        java.net.SocketAddress socketAddress7 = proxy5.address();
        okHttpClient0.proxy = proxy5;
        java.net.SocketAddress socketAddress9 = proxy5.address();
        com.squareup.okhttp.OkHttpClient okHttpClient10 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier11 = null;
        okHttpClient10.hostnameVerifier = hostnameVerifier11;
        java.net.ResponseCache responseCache13 = null;
        okHttpClient10.responseCache = responseCache13;
        java.util.List<java.lang.String> strList15 = okHttpClient10.transports;
        com.squareup.okhttp.ConnectionPool connectionPool16 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient10.connectionPool = connectionPool16;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory18 = okHttpClient10.getSslSocketFactory();
        java.net.CookieHandler cookieHandler19 = okHttpClient10.cookieHandler;
        com.squareup.okhttp.ConnectionPool connectionPool22 = new com.squareup.okhttp.ConnectionPool(10, 1L);
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient10.setConnectionPool(connectionPool22);
        com.squareup.okhttp.OkHttpClient okHttpClient24 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier25 = null;
        okHttpClient24.hostnameVerifier = hostnameVerifier25;
        java.net.ResponseCache responseCache27 = null;
        okHttpClient24.responseCache = responseCache27;
        java.util.List<java.lang.String> strList29 = okHttpClient24.transports;
        com.squareup.okhttp.ConnectionPool connectionPool30 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient24.connectionPool = connectionPool30;
        com.squareup.okhttp.ConnectionPool connectionPool32 = okHttpClient24.connectionPool;
        int int33 = connectionPool32.getHttpConnectionCount();
        com.squareup.okhttp.Address address34 = null;
        com.squareup.okhttp.Connection connection35 = connectionPool32.get(address34);
        okHttpClient23.connectionPool = connectionPool32;
        boolean boolean37 = proxy5.equals((java.lang.Object) connectionPool32);
        connectionPool32.evictAll();
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNotNull(proxy5);
        org.junit.Assert.assertNull(socketAddress6);
        org.junit.Assert.assertNull(socketAddress7);
        org.junit.Assert.assertNull(socketAddress9);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(connectionPool16);
        org.junit.Assert.assertNull(sSLSocketFactory18);
        org.junit.Assert.assertNull(cookieHandler19);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(connectionPool30);
        org.junit.Assert.assertNotNull(connectionPool32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNull(connection35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test07108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07108");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient0.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.copyWithDefaults();
        java.net.ResponseCache responseCache12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setResponseCache(responseCache12);
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient13.setFollowProtocolRedirects(false);
        java.net.CookieHandler cookieHandler16 = okHttpClient15.cookieHandler;
        boolean boolean17 = okHttpClient15.getFollowProtocolRedirects();
        java.util.List<java.lang.String> strList18 = okHttpClient15.getTransports();
        java.util.List<java.lang.String> strList19 = okHttpClient15.getTransports();
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNull(cookieHandler16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strList19);
    }

    @Test
    public void test07109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07109");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.ResponseCache responseCache5 = null;
        okHttpClient4.responseCache = responseCache5;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = null;
        okHttpClient7.hostnameVerifier = hostnameVerifier8;
        java.net.ResponseCache responseCache10 = null;
        okHttpClient7.responseCache = responseCache10;
        java.util.List<java.lang.String> strList12 = okHttpClient7.transports;
        com.squareup.okhttp.ConnectionPool connectionPool13 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient7.connectionPool = connectionPool13;
        java.net.CookieHandler cookieHandler15 = okHttpClient7.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache16 = okHttpClient7.okResponseCache();
        java.net.CookieHandler cookieHandler17 = okHttpClient7.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient(okHttpClient7);
        java.net.Proxy proxy19 = java.net.Proxy.NO_PROXY;
        boolean boolean21 = proxy19.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type22 = proxy19.type();
        java.net.SocketAddress socketAddress23 = proxy19.address();
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient7.setProxy(proxy19);
        com.squareup.okhttp.OkHttpClient okHttpClient25 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier26 = null;
        okHttpClient25.hostnameVerifier = hostnameVerifier26;
        java.net.ResponseCache responseCache28 = null;
        okHttpClient25.responseCache = responseCache28;
        java.util.List<java.lang.String> strList30 = okHttpClient25.transports;
        com.squareup.okhttp.ConnectionPool connectionPool31 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient25.connectionPool = connectionPool31;
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient25.copyWithDefaults();
        java.net.ProxySelector proxySelector34 = okHttpClient33.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory35 = okHttpClient33.getSslSocketFactory();
        okHttpClient24.sslSocketFactory = sSLSocketFactory35;
        java.lang.String[] strArray37 = sSLSocketFactory35.getDefaultCipherSuites();
        java.lang.String[] strArray38 = sSLSocketFactory35.getSupportedCipherSuites();
        java.net.Socket socket39 = sSLSocketFactory35.createSocket();
        okHttpClient4.sslSocketFactory = sSLSocketFactory35;
        java.lang.String[] strArray41 = sSLSocketFactory35.getSupportedCipherSuites();
        java.net.Socket socket42 = sSLSocketFactory35.createSocket();
        java.net.Socket socket43 = sSLSocketFactory35.createSocket();
        java.net.InetAddress inetAddress44 = null;
        java.net.InetAddress inetAddress46 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket48 = sSLSocketFactory35.createSocket(inetAddress44, (int) (short) -1, inetAddress46, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.net.BindException; message: Permission denied (Bind failed)");
        } catch (java.net.BindException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(connectionPool13);
        org.junit.Assert.assertNull(cookieHandler15);
        org.junit.Assert.assertNull(okResponseCache16);
        org.junit.Assert.assertNull(cookieHandler17);
        org.junit.Assert.assertNotNull(proxy19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + type22 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type22.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress23);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNotNull(connectionPool31);
        org.junit.Assert.assertNotNull(okHttpClient33);
// flaky:         org.junit.Assert.assertNull(proxySelector34);
        org.junit.Assert.assertNotNull(sSLSocketFactory35);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(socket39);
        org.junit.Assert.assertEquals(socket39.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(socket42);
        org.junit.Assert.assertEquals(socket42.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(socket43);
        org.junit.Assert.assertEquals(socket43.toString(), "Socket[unconnected]");
    }

    @Test
    public void test07110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07110");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.OkAuthenticator okAuthenticator12 = okHttpClient11.getAuthenticator();
        java.net.ProxySelector proxySelector13 = okHttpClient11.getProxySelector();
        java.net.ProxySelector proxySelector14 = null;
        okHttpClient11.proxySelector = proxySelector14;
        java.net.ProxySelector proxySelector16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient11.setProxySelector(proxySelector16);
        java.net.CookieHandler cookieHandler18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient17.setCookieHandler(cookieHandler18);
        java.net.CookieHandler cookieHandler20 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient17.setCookieHandler(cookieHandler20);
        com.squareup.okhttp.ConnectionPool connectionPool22 = okHttpClient17.connectionPool;
        java.net.ProxySelector proxySelector23 = okHttpClient17.getProxySelector();
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(okAuthenticator12);
        org.junit.Assert.assertNull(proxySelector13);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNotNull(connectionPool22);
        org.junit.Assert.assertNull(proxySelector23);
    }

    @Test
    public void test07111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07111");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier7;
        java.net.CookieHandler cookieHandler9 = null;
        okHttpClient0.cookieHandler = cookieHandler9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = null;
        okHttpClient11.hostnameVerifier = hostnameVerifier12;
        java.net.ProxySelector proxySelector14 = okHttpClient11.proxySelector;
        java.net.ProxySelector proxySelector15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient11.setProxySelector(proxySelector15);
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = null;
        okHttpClient17.hostnameVerifier = hostnameVerifier18;
        java.net.ResponseCache responseCache20 = null;
        okHttpClient17.responseCache = responseCache20;
        java.util.List<java.lang.String> strList22 = okHttpClient17.transports;
        com.squareup.okhttp.ConnectionPool connectionPool23 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient17.connectionPool = connectionPool23;
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient17.copyWithDefaults();
        java.net.ProxySelector proxySelector26 = okHttpClient25.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory27 = okHttpClient25.getSslSocketFactory();
        okHttpClient11.sslSocketFactory = sSLSocketFactory27;
        java.lang.String[] strArray29 = sSLSocketFactory27.getSupportedCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient30 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory27);
        java.lang.String[] strArray31 = sSLSocketFactory27.getDefaultCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient32 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier33 = null;
        okHttpClient32.hostnameVerifier = hostnameVerifier33;
        java.net.ProxySelector proxySelector35 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient32.setProxySelector(proxySelector35);
        java.net.ResponseCache responseCache37 = null;
        okHttpClient36.responseCache = responseCache37;
        com.squareup.okhttp.OkHttpClient okHttpClient39 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier40 = null;
        okHttpClient39.hostnameVerifier = hostnameVerifier40;
        java.net.ResponseCache responseCache42 = null;
        okHttpClient39.responseCache = responseCache42;
        java.util.List<java.lang.String> strList44 = okHttpClient39.transports;
        com.squareup.okhttp.ConnectionPool connectionPool45 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient39.connectionPool = connectionPool45;
        java.net.CookieHandler cookieHandler47 = okHttpClient39.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache48 = okHttpClient39.okResponseCache();
        java.net.CookieHandler cookieHandler49 = okHttpClient39.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient50 = new com.squareup.okhttp.OkHttpClient(okHttpClient39);
        java.net.Proxy proxy51 = java.net.Proxy.NO_PROXY;
        boolean boolean53 = proxy51.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type54 = proxy51.type();
        java.net.SocketAddress socketAddress55 = proxy51.address();
        com.squareup.okhttp.OkHttpClient okHttpClient56 = okHttpClient39.setProxy(proxy51);
        com.squareup.okhttp.OkHttpClient okHttpClient57 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier58 = null;
        okHttpClient57.hostnameVerifier = hostnameVerifier58;
        java.net.ResponseCache responseCache60 = null;
        okHttpClient57.responseCache = responseCache60;
        java.util.List<java.lang.String> strList62 = okHttpClient57.transports;
        com.squareup.okhttp.ConnectionPool connectionPool63 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient57.connectionPool = connectionPool63;
        com.squareup.okhttp.OkHttpClient okHttpClient65 = okHttpClient57.copyWithDefaults();
        java.net.ProxySelector proxySelector66 = okHttpClient65.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory67 = okHttpClient65.getSslSocketFactory();
        okHttpClient56.sslSocketFactory = sSLSocketFactory67;
        java.lang.String[] strArray69 = sSLSocketFactory67.getDefaultCipherSuites();
        java.lang.String[] strArray70 = sSLSocketFactory67.getSupportedCipherSuites();
        java.net.Socket socket71 = sSLSocketFactory67.createSocket();
        okHttpClient36.sslSocketFactory = sSLSocketFactory67;
        java.lang.String[] strArray73 = sSLSocketFactory67.getSupportedCipherSuites();
        java.net.Socket socket74 = sSLSocketFactory67.createSocket();
        java.lang.String[] strArray75 = sSLSocketFactory67.getSupportedCipherSuites();
        java.net.Socket socket76 = sSLSocketFactory67.createSocket();
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket80 = sSLSocketFactory27.createSocket(socket76, "DIRECT", (int) (short) 100, false);
            org.junit.Assert.fail("Expected exception of type java.net.SocketException; message: Underlying socket is not connected");
        } catch (java.net.SocketException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNull(proxySelector14);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNotNull(connectionPool23);
        org.junit.Assert.assertNotNull(okHttpClient25);
// flaky:         org.junit.Assert.assertNull(proxySelector26);
        org.junit.Assert.assertNotNull(sSLSocketFactory27);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(okHttpClient30);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNotNull(connectionPool45);
        org.junit.Assert.assertNull(cookieHandler47);
        org.junit.Assert.assertNull(okResponseCache48);
        org.junit.Assert.assertNull(cookieHandler49);
        org.junit.Assert.assertNotNull(proxy51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + type54 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type54.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress55);
        org.junit.Assert.assertNotNull(okHttpClient56);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertNotNull(connectionPool63);
        org.junit.Assert.assertNotNull(okHttpClient65);
// flaky:         org.junit.Assert.assertNull(proxySelector66);
        org.junit.Assert.assertNotNull(sSLSocketFactory67);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertNotNull(socket71);
        org.junit.Assert.assertEquals(socket71.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertNotNull(socket74);
        org.junit.Assert.assertEquals(socket74.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(socket76);
        org.junit.Assert.assertEquals(socket76.toString(), "Socket[unconnected]");
    }

    @Test
    public void test07112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07112");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient4.copyWithDefaults();
        java.net.CookieHandler cookieHandler6 = null;
        okHttpClient4.cookieHandler = cookieHandler6;
        com.squareup.okhttp.OkAuthenticator okAuthenticator8 = okHttpClient4.authenticator;
        java.net.ProxySelector proxySelector9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient4.setProxySelector(proxySelector9);
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient(okHttpClient4);
        java.net.CookieHandler cookieHandler12 = okHttpClient4.cookieHandler;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient4.copyWithDefaults();
        okHttpClient13.followProtocolRedirects = true;
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(okAuthenticator8);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertNull(cookieHandler12);
        org.junit.Assert.assertNotNull(okHttpClient13);
    }

    @Test
    public void test07113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07113");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setProxySelector(proxySelector4);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory6 = okHttpClient5.sslSocketFactory;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = null;
        okHttpClient7.hostnameVerifier = hostnameVerifier8;
        java.net.ProxySelector proxySelector10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient7.setProxySelector(proxySelector10);
        java.net.CookieHandler cookieHandler12 = okHttpClient7.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = null;
        okHttpClient13.hostnameVerifier = hostnameVerifier14;
        java.net.ResponseCache responseCache16 = null;
        okHttpClient13.responseCache = responseCache16;
        java.util.List<java.lang.String> strList18 = okHttpClient13.transports;
        com.squareup.okhttp.ConnectionPool connectionPool19 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient13.connectionPool = connectionPool19;
        java.net.Proxy proxy21 = null;
        okHttpClient13.proxy = proxy21;
        java.util.Set<com.squareup.okhttp.Route> routeSet23 = okHttpClient13.failedRoutes;
        okHttpClient7.failedRoutes = routeSet23;
        javax.net.ssl.HostnameVerifier hostnameVerifier25 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient7.setHostnameVerifier(hostnameVerifier25);
        java.net.ProxySelector proxySelector27 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient26.setProxySelector(proxySelector27);
        java.net.ResponseCache responseCache29 = null;
        okHttpClient28.responseCache = responseCache29;
        java.util.List<java.lang.String> strList31 = okHttpClient28.transports;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool33 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient32.connectionPool = connectionPool33;
        com.squareup.okhttp.OkHttpClient okHttpClient35 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier36 = null;
        okHttpClient35.hostnameVerifier = hostnameVerifier36;
        java.net.ResponseCache responseCache38 = null;
        okHttpClient35.responseCache = responseCache38;
        java.util.List<java.lang.String> strList40 = okHttpClient35.transports;
        com.squareup.okhttp.ConnectionPool connectionPool41 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient35.connectionPool = connectionPool41;
        com.squareup.okhttp.OkHttpClient okHttpClient43 = okHttpClient32.setConnectionPool(connectionPool41);
        java.net.Proxy proxy44 = okHttpClient43.proxy;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory45 = null;
        okHttpClient43.sslSocketFactory = sSLSocketFactory45;
        com.squareup.okhttp.OkHttpClient okHttpClient47 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier48 = null;
        okHttpClient47.hostnameVerifier = hostnameVerifier48;
        java.net.ResponseCache responseCache50 = null;
        okHttpClient47.responseCache = responseCache50;
        java.util.List<java.lang.String> strList52 = okHttpClient47.transports;
        com.squareup.okhttp.ConnectionPool connectionPool53 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient47.connectionPool = connectionPool53;
        com.squareup.okhttp.ConnectionPool connectionPool55 = okHttpClient47.connectionPool;
        int int56 = connectionPool55.getHttpConnectionCount();
        com.squareup.okhttp.Address address57 = null;
        com.squareup.okhttp.Connection connection58 = connectionPool55.get(address57);
        okHttpClient43.connectionPool = connectionPool55;
        java.net.ProxySelector proxySelector60 = okHttpClient43.proxySelector;
        java.net.Proxy proxy61 = java.net.Proxy.NO_PROXY;
        boolean boolean63 = proxy61.equals((java.lang.Object) 1L);
        com.squareup.okhttp.OkHttpClient okHttpClient64 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache65 = okHttpClient64.okResponseCache();
        java.net.ResponseCache responseCache66 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient67 = okHttpClient64.setResponseCache(responseCache66);
        java.lang.String[] strArray69 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList70 = new java.util.ArrayList<java.lang.String>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList70, strArray69);
        okHttpClient64.transports = strList70;
        boolean boolean73 = proxy61.equals((java.lang.Object) strList70);
        okHttpClient43.proxy = proxy61;
        java.lang.String str75 = proxy61.toString();
        java.net.SocketAddress socketAddress76 = proxy61.address();
        okHttpClient28.proxy = proxy61;
        com.squareup.okhttp.OkHttpClient okHttpClient78 = okHttpClient5.setProxy(proxy61);
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(sSLSocketFactory6);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(cookieHandler12);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(connectionPool19);
        org.junit.Assert.assertNotNull(routeSet23);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNotNull(connectionPool33);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNotNull(connectionPool41);
        org.junit.Assert.assertNotNull(okHttpClient43);
        org.junit.Assert.assertNull(proxy44);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNotNull(connectionPool53);
        org.junit.Assert.assertNotNull(connectionPool55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNull(connection58);
        org.junit.Assert.assertNull(proxySelector60);
        org.junit.Assert.assertNotNull(proxy61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(okResponseCache65);
        org.junit.Assert.assertNotNull(okHttpClient67);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "DIRECT" + "'", str75, "DIRECT");
        org.junit.Assert.assertNull(socketAddress76);
        org.junit.Assert.assertNotNull(okHttpClient78);
    }

    @Test
    public void test07114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07114");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient0.copyWithDefaults();
        java.net.ProxySelector proxySelector9 = okHttpClient8.proxySelector;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier11 = null;
        okHttpClient10.hostnameVerifier = hostnameVerifier11;
        java.net.ResponseCache responseCache13 = null;
        okHttpClient10.responseCache = responseCache13;
        java.util.List<java.lang.String> strList15 = okHttpClient10.transports;
        com.squareup.okhttp.ConnectionPool connectionPool16 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient10.connectionPool = connectionPool16;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient10.copyWithDefaults();
        boolean boolean19 = okHttpClient18.getFollowProtocolRedirects();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory20 = okHttpClient18.sslSocketFactory;
        java.lang.String[] strArray21 = sSLSocketFactory20.getSupportedCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient8.setSSLSocketFactory(sSLSocketFactory20);
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket25 = sSLSocketFactory20.createSocket("DIRECT", (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.net.UnknownHostException; message: DIRECT");
        } catch (java.net.UnknownHostException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNotNull(okHttpClient8);
// flaky:         org.junit.Assert.assertNull(proxySelector9);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(connectionPool16);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(sSLSocketFactory20);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(okHttpClient22);
    }

    @Test
    public void test07115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07115");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient0.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.copyWithDefaults();
        java.net.Proxy proxy12 = okHttpClient11.getProxy();
        java.net.CookieHandler cookieHandler13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient11.setCookieHandler(cookieHandler13);
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient(okHttpClient11);
        com.squareup.okhttp.OkHttpClient okHttpClient16 = new com.squareup.okhttp.OkHttpClient(okHttpClient15);
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient16.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier19 = null;
        okHttpClient18.hostnameVerifier = hostnameVerifier19;
        java.net.ResponseCache responseCache21 = null;
        okHttpClient18.responseCache = responseCache21;
        java.util.List<java.lang.String> strList23 = okHttpClient18.transports;
        com.squareup.okhttp.ConnectionPool connectionPool24 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient18.connectionPool = connectionPool24;
        java.net.CookieHandler cookieHandler26 = okHttpClient18.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache27 = okHttpClient18.okResponseCache();
        java.net.CookieHandler cookieHandler28 = okHttpClient18.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient29 = new com.squareup.okhttp.OkHttpClient(okHttpClient18);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory30 = okHttpClient29.sslSocketFactory;
        java.net.Proxy proxy31 = okHttpClient29.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient29.setFollowProtocolRedirects(true);
        com.squareup.okhttp.OkHttpClient okHttpClient34 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool35 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient34.connectionPool = connectionPool35;
        com.squareup.okhttp.OkHttpClient okHttpClient37 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier38 = null;
        okHttpClient37.hostnameVerifier = hostnameVerifier38;
        java.net.ResponseCache responseCache40 = null;
        okHttpClient37.responseCache = responseCache40;
        java.util.List<java.lang.String> strList42 = okHttpClient37.transports;
        com.squareup.okhttp.ConnectionPool connectionPool43 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient37.connectionPool = connectionPool43;
        com.squareup.okhttp.OkHttpClient okHttpClient45 = okHttpClient34.setConnectionPool(connectionPool43);
        int int46 = connectionPool43.getConnectionCount();
        int int47 = connectionPool43.getSpdyConnectionCount();
        int int48 = connectionPool43.getSpdyConnectionCount();
        com.squareup.okhttp.Address address49 = null;
        com.squareup.okhttp.Connection connection50 = connectionPool43.get(address49);
        int int51 = connectionPool43.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient52 = okHttpClient33.setConnectionPool(connectionPool43);
        com.squareup.okhttp.OkHttpClient okHttpClient53 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier54 = null;
        okHttpClient53.hostnameVerifier = hostnameVerifier54;
        java.net.ResponseCache responseCache56 = null;
        okHttpClient53.responseCache = responseCache56;
        javax.net.ssl.HostnameVerifier hostnameVerifier58 = okHttpClient53.hostnameVerifier;
        java.net.Proxy proxy59 = okHttpClient53.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool62 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient53.connectionPool = connectionPool62;
        com.squareup.okhttp.OkHttpClient okHttpClient64 = okHttpClient53.copyWithDefaults();
        java.net.ResponseCache responseCache65 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient66 = okHttpClient64.setResponseCache(responseCache65);
        java.net.ProxySelector proxySelector67 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient68 = okHttpClient64.setProxySelector(proxySelector67);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory69 = okHttpClient68.getSslSocketFactory();
        com.squareup.okhttp.OkAuthenticator okAuthenticator70 = okHttpClient68.getAuthenticator();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory71 = okHttpClient68.sslSocketFactory;
        okHttpClient52.sslSocketFactory = sSLSocketFactory71;
        okHttpClient16.sslSocketFactory = sSLSocketFactory71;
        java.net.Socket socket74 = sSLSocketFactory71.createSocket();
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(proxy12);
        org.junit.Assert.assertNotNull(okHttpClient14);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNotNull(connectionPool24);
        org.junit.Assert.assertNull(cookieHandler26);
        org.junit.Assert.assertNull(okResponseCache27);
        org.junit.Assert.assertNull(cookieHandler28);
        org.junit.Assert.assertNull(sSLSocketFactory30);
        org.junit.Assert.assertNull(proxy31);
        org.junit.Assert.assertNotNull(okHttpClient33);
        org.junit.Assert.assertNotNull(connectionPool35);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNotNull(connectionPool43);
        org.junit.Assert.assertNotNull(okHttpClient45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNull(connection50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(okHttpClient52);
        org.junit.Assert.assertNull(hostnameVerifier58);
        org.junit.Assert.assertNull(proxy59);
        org.junit.Assert.assertNotNull(okHttpClient64);
        org.junit.Assert.assertNotNull(okHttpClient66);
        org.junit.Assert.assertNotNull(okHttpClient68);
        org.junit.Assert.assertNotNull(sSLSocketFactory69);
        org.junit.Assert.assertNotNull(okAuthenticator70);
        org.junit.Assert.assertNotNull(sSLSocketFactory71);
        org.junit.Assert.assertNotNull(socket74);
        org.junit.Assert.assertEquals(socket74.toString(), "Socket[unconnected]");
    }

    @Test
    public void test07116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07116");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient4.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient(okHttpClient5);
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = null;
        okHttpClient7.hostnameVerifier = hostnameVerifier8;
        java.net.ResponseCache responseCache10 = null;
        okHttpClient7.responseCache = responseCache10;
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = okHttpClient7.hostnameVerifier;
        java.net.Proxy proxy13 = okHttpClient7.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool16 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient7.connectionPool = connectionPool16;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient7.copyWithDefaults();
        java.util.List<java.lang.String> strList19 = okHttpClient7.getTransports();
        com.squareup.okhttp.OkHttpClient okHttpClient20 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier21 = null;
        okHttpClient20.hostnameVerifier = hostnameVerifier21;
        java.net.ResponseCache responseCache23 = null;
        okHttpClient20.responseCache = responseCache23;
        javax.net.ssl.HostnameVerifier hostnameVerifier25 = okHttpClient20.hostnameVerifier;
        java.net.Proxy proxy26 = okHttpClient20.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool29 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient20.connectionPool = connectionPool29;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient20.copyWithDefaults();
        java.net.ResponseCache responseCache32 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient31.setResponseCache(responseCache32);
        java.net.ProxySelector proxySelector34 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient31.setProxySelector(proxySelector34);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory36 = okHttpClient35.getSslSocketFactory();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory37 = okHttpClient35.getSslSocketFactory();
        java.lang.String[] strArray38 = sSLSocketFactory37.getSupportedCipherSuites();
        okHttpClient7.sslSocketFactory = sSLSocketFactory37;
        okHttpClient6.sslSocketFactory = sSLSocketFactory37;
        java.lang.Class<?> wildcardClass41 = sSLSocketFactory37.getClass();
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(hostnameVerifier12);
        org.junit.Assert.assertNull(proxy13);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(hostnameVerifier25);
        org.junit.Assert.assertNull(proxy26);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNotNull(okHttpClient33);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNotNull(sSLSocketFactory36);
        org.junit.Assert.assertNotNull(sSLSocketFactory37);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test07117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07117");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        java.net.Proxy proxy6 = java.net.Proxy.NO_PROXY;
        boolean boolean8 = proxy6.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type9 = proxy6.type();
        java.net.SocketAddress socketAddress10 = proxy6.address();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setProxy(proxy6);
        java.net.SocketAddress socketAddress12 = proxy6.address();
        java.net.Proxy.Type type13 = proxy6.type();
        java.net.SocketAddress socketAddress14 = proxy6.address();
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier16 = null;
        okHttpClient15.hostnameVerifier = hostnameVerifier16;
        java.net.ResponseCache responseCache18 = null;
        okHttpClient15.responseCache = responseCache18;
        javax.net.ssl.HostnameVerifier hostnameVerifier20 = okHttpClient15.hostnameVerifier;
        java.net.Proxy proxy21 = okHttpClient15.getProxy();
        java.net.CookieHandler cookieHandler22 = null;
        okHttpClient15.cookieHandler = cookieHandler22;
        okHttpClient15.followProtocolRedirects = true;
        java.net.CookieHandler cookieHandler26 = okHttpClient15.getCookieHandler();
        boolean boolean27 = proxy6.equals((java.lang.Object) okHttpClient15);
        com.squareup.okhttp.OkHttpClient okHttpClient28 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier29 = null;
        okHttpClient28.hostnameVerifier = hostnameVerifier29;
        java.net.ResponseCache responseCache31 = null;
        okHttpClient28.responseCache = responseCache31;
        javax.net.ssl.HostnameVerifier hostnameVerifier33 = okHttpClient28.hostnameVerifier;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory34 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient28.setSSLSocketFactory(sSLSocketFactory34);
        com.squareup.okhttp.ConnectionPool connectionPool36 = okHttpClient35.getConnectionPool();
        java.net.ResponseCache responseCache37 = null;
        okHttpClient35.responseCache = responseCache37;
        com.squareup.okhttp.OkHttpClient okHttpClient39 = new com.squareup.okhttp.OkHttpClient(okHttpClient35);
        boolean boolean40 = proxy6.equals((java.lang.Object) okHttpClient35);
        com.squareup.okhttp.OkHttpClient okHttpClient41 = new com.squareup.okhttp.OkHttpClient(okHttpClient35);
        com.squareup.okhttp.ConnectionPool connectionPool42 = okHttpClient35.connectionPool;
        javax.net.ssl.HostnameVerifier hostnameVerifier43 = okHttpClient35.hostnameVerifier;
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(proxy6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + type9 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type9.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress10);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(socketAddress12);
        org.junit.Assert.assertTrue("'" + type13 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type13.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress14);
        org.junit.Assert.assertNull(hostnameVerifier20);
        org.junit.Assert.assertNull(proxy21);
        org.junit.Assert.assertNull(cookieHandler26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(hostnameVerifier33);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNull(connectionPool36);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(connectionPool42);
        org.junit.Assert.assertNull(hostnameVerifier43);
    }

    @Test
    public void test07118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07118");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.ConnectionPool connectionPool12 = okHttpClient11.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator13 = okHttpClient11.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool16 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient11.connectionPool = connectionPool16;
        java.net.ResponseCache responseCache18 = okHttpClient11.responseCache;
        com.squareup.okhttp.ConnectionPool connectionPool21 = new com.squareup.okhttp.ConnectionPool((int) (byte) 0, 10L);
        okHttpClient11.connectionPool = connectionPool21;
        com.squareup.okhttp.ConnectionPool connectionPool25 = new com.squareup.okhttp.ConnectionPool((int) (byte) 10, 0L);
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient11.setConnectionPool(connectionPool25);
        java.net.ResponseCache responseCache27 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient26.setResponseCache(responseCache27);
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient28.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient30 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier31 = null;
        okHttpClient30.hostnameVerifier = hostnameVerifier31;
        java.net.ProxySelector proxySelector33 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient30.setProxySelector(proxySelector33);
        java.net.CookieHandler cookieHandler35 = okHttpClient30.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient36 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier37 = null;
        okHttpClient36.hostnameVerifier = hostnameVerifier37;
        java.net.ResponseCache responseCache39 = null;
        okHttpClient36.responseCache = responseCache39;
        java.util.List<java.lang.String> strList41 = okHttpClient36.transports;
        com.squareup.okhttp.ConnectionPool connectionPool42 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient36.connectionPool = connectionPool42;
        java.net.Proxy proxy44 = null;
        okHttpClient36.proxy = proxy44;
        java.util.Set<com.squareup.okhttp.Route> routeSet46 = okHttpClient36.failedRoutes;
        okHttpClient30.failedRoutes = routeSet46;
        javax.net.ssl.HostnameVerifier hostnameVerifier48 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient49 = okHttpClient30.setHostnameVerifier(hostnameVerifier48);
        java.net.ProxySelector proxySelector50 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient51 = okHttpClient49.setProxySelector(proxySelector50);
        com.squareup.okhttp.OkHttpClient okHttpClient52 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache53 = okHttpClient52.okResponseCache();
        java.net.ResponseCache responseCache54 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient55 = okHttpClient52.setResponseCache(responseCache54);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory56 = okHttpClient52.sslSocketFactory;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory57 = okHttpClient52.sslSocketFactory;
        com.squareup.okhttp.OkHttpClient okHttpClient58 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier59 = null;
        okHttpClient58.hostnameVerifier = hostnameVerifier59;
        boolean boolean61 = okHttpClient58.getFollowProtocolRedirects();
        java.net.CookieHandler cookieHandler62 = okHttpClient58.cookieHandler;
        com.squareup.okhttp.OkHttpClient okHttpClient63 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier64 = null;
        okHttpClient63.hostnameVerifier = hostnameVerifier64;
        java.net.ResponseCache responseCache66 = null;
        okHttpClient63.responseCache = responseCache66;
        javax.net.ssl.HostnameVerifier hostnameVerifier68 = okHttpClient63.hostnameVerifier;
        java.net.Proxy proxy69 = okHttpClient63.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool72 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient63.connectionPool = connectionPool72;
        com.squareup.okhttp.OkHttpClient okHttpClient74 = okHttpClient63.copyWithDefaults();
        java.net.ResponseCache responseCache75 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient76 = okHttpClient74.setResponseCache(responseCache75);
        com.squareup.okhttp.OkAuthenticator okAuthenticator77 = okHttpClient74.authenticator;
        okHttpClient58.authenticator = okAuthenticator77;
        com.squareup.okhttp.OkHttpClient okHttpClient79 = okHttpClient52.setAuthenticator(okAuthenticator77);
        com.squareup.okhttp.OkHttpClient okHttpClient80 = okHttpClient51.setAuthenticator(okAuthenticator77);
        com.squareup.okhttp.OkHttpClient okHttpClient81 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool82 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient81.connectionPool = connectionPool82;
        java.net.ResponseCache responseCache84 = null;
        okHttpClient81.responseCache = responseCache84;
        java.net.Proxy proxy86 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress87 = proxy86.address();
        java.net.SocketAddress socketAddress88 = proxy86.address();
        okHttpClient81.proxy = proxy86;
        java.util.Set<com.squareup.okhttp.Route> routeSet90 = okHttpClient81.failedRoutes;
        okHttpClient80.failedRoutes = routeSet90;
        okHttpClient28.failedRoutes = routeSet90;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache93 = okHttpClient28.okResponseCache();
        java.net.CookieHandler cookieHandler94 = null;
        okHttpClient28.cookieHandler = cookieHandler94;
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNull(okAuthenticator13);
        org.junit.Assert.assertNull(responseCache18);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNotNull(okHttpClient29);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertNull(cookieHandler35);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(connectionPool42);
        org.junit.Assert.assertNotNull(routeSet46);
        org.junit.Assert.assertNotNull(okHttpClient49);
        org.junit.Assert.assertNotNull(okHttpClient51);
        org.junit.Assert.assertNull(okResponseCache53);
        org.junit.Assert.assertNotNull(okHttpClient55);
        org.junit.Assert.assertNull(sSLSocketFactory56);
        org.junit.Assert.assertNull(sSLSocketFactory57);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(cookieHandler62);
        org.junit.Assert.assertNull(hostnameVerifier68);
        org.junit.Assert.assertNull(proxy69);
        org.junit.Assert.assertNotNull(okHttpClient74);
        org.junit.Assert.assertNotNull(okHttpClient76);
        org.junit.Assert.assertNotNull(okAuthenticator77);
        org.junit.Assert.assertNotNull(okHttpClient79);
        org.junit.Assert.assertNotNull(okHttpClient80);
        org.junit.Assert.assertNotNull(connectionPool82);
        org.junit.Assert.assertNotNull(proxy86);
        org.junit.Assert.assertNull(socketAddress87);
        org.junit.Assert.assertNull(socketAddress88);
        org.junit.Assert.assertNotNull(routeSet90);
        org.junit.Assert.assertNull(okResponseCache93);
    }

    @Test
    public void test07119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07119");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.CookieHandler cookieHandler5 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = null;
        okHttpClient6.hostnameVerifier = hostnameVerifier7;
        java.net.ResponseCache responseCache9 = null;
        okHttpClient6.responseCache = responseCache9;
        java.util.List<java.lang.String> strList11 = okHttpClient6.transports;
        com.squareup.okhttp.ConnectionPool connectionPool12 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient6.connectionPool = connectionPool12;
        java.net.Proxy proxy14 = null;
        okHttpClient6.proxy = proxy14;
        java.util.Set<com.squareup.okhttp.Route> routeSet16 = okHttpClient6.failedRoutes;
        okHttpClient0.failedRoutes = routeSet16;
        java.net.ProxySelector proxySelector18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient0.setProxySelector(proxySelector18);
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient0.copyWithDefaults();
        java.net.CookieHandler cookieHandler21 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient0.setCookieHandler(cookieHandler21);
        java.net.ProxySelector proxySelector23 = okHttpClient22.proxySelector;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier25 = null;
        okHttpClient24.hostnameVerifier = hostnameVerifier25;
        java.net.ResponseCache responseCache27 = null;
        okHttpClient24.responseCache = responseCache27;
        javax.net.ssl.HostnameVerifier hostnameVerifier29 = okHttpClient24.hostnameVerifier;
        java.net.Proxy proxy30 = okHttpClient24.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient31 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache32 = okHttpClient31.okResponseCache();
        java.net.ResponseCache responseCache33 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient31.setResponseCache(responseCache33);
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList37 = new java.util.ArrayList<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        okHttpClient31.transports = strList37;
        okHttpClient24.transports = strList37;
        java.util.Set<com.squareup.okhttp.Route> routeSet41 = okHttpClient24.failedRoutes;
        java.net.CookieHandler cookieHandler42 = null;
        okHttpClient24.cookieHandler = cookieHandler42;
        com.squareup.okhttp.OkHttpClient okHttpClient44 = new com.squareup.okhttp.OkHttpClient(okHttpClient24);
        com.squareup.okhttp.OkHttpClient okHttpClient45 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool46 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient45.connectionPool = connectionPool46;
        com.squareup.okhttp.OkHttpClient okHttpClient48 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier49 = null;
        okHttpClient48.hostnameVerifier = hostnameVerifier49;
        java.net.ResponseCache responseCache51 = null;
        okHttpClient48.responseCache = responseCache51;
        java.util.List<java.lang.String> strList53 = okHttpClient48.transports;
        com.squareup.okhttp.ConnectionPool connectionPool54 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient48.connectionPool = connectionPool54;
        com.squareup.okhttp.OkHttpClient okHttpClient56 = okHttpClient45.setConnectionPool(connectionPool54);
        com.squareup.okhttp.ConnectionPool connectionPool57 = okHttpClient56.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator58 = okHttpClient56.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool61 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient56.connectionPool = connectionPool61;
        java.net.ResponseCache responseCache63 = okHttpClient56.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory64 = okHttpClient56.sslSocketFactory;
        java.net.Proxy proxy65 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress66 = proxy65.address();
        com.squareup.okhttp.OkHttpClient okHttpClient67 = okHttpClient56.setProxy(proxy65);
        com.squareup.okhttp.OkHttpClient okHttpClient68 = new com.squareup.okhttp.OkHttpClient(okHttpClient67);
        com.squareup.okhttp.OkHttpClient okHttpClient69 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier70 = null;
        okHttpClient69.hostnameVerifier = hostnameVerifier70;
        java.net.ResponseCache responseCache72 = null;
        okHttpClient69.responseCache = responseCache72;
        java.util.List<java.lang.String> strList74 = okHttpClient69.transports;
        com.squareup.okhttp.ConnectionPool connectionPool75 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient69.connectionPool = connectionPool75;
        com.squareup.okhttp.OkHttpClient okHttpClient77 = okHttpClient69.copyWithDefaults();
        java.net.ProxySelector proxySelector78 = okHttpClient77.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory79 = okHttpClient77.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient80 = okHttpClient67.setSSLSocketFactory(sSLSocketFactory79);
        java.lang.String[] strArray81 = sSLSocketFactory79.getSupportedCipherSuites();
        java.lang.String[] strArray82 = sSLSocketFactory79.getSupportedCipherSuites();
        java.lang.String[] strArray83 = sSLSocketFactory79.getSupportedCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient84 = okHttpClient24.setSSLSocketFactory(sSLSocketFactory79);
        java.lang.String[] strArray85 = sSLSocketFactory79.getSupportedCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient86 = okHttpClient22.setSSLSocketFactory(sSLSocketFactory79);
        java.net.InetAddress inetAddress89 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket91 = sSLSocketFactory79.createSocket("DIRECT", (int) '#', inetAddress89, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.net.BindException; message: Permission denied (Bind failed)");
        } catch (java.net.BindException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNotNull(routeSet16);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNull(proxySelector23);
        org.junit.Assert.assertNull(hostnameVerifier29);
        org.junit.Assert.assertNull(proxy30);
        org.junit.Assert.assertNull(okResponseCache32);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(routeSet41);
        org.junit.Assert.assertNotNull(connectionPool46);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNotNull(connectionPool54);
        org.junit.Assert.assertNotNull(okHttpClient56);
        org.junit.Assert.assertNotNull(connectionPool57);
        org.junit.Assert.assertNull(okAuthenticator58);
        org.junit.Assert.assertNull(responseCache63);
        org.junit.Assert.assertNull(sSLSocketFactory64);
        org.junit.Assert.assertNotNull(proxy65);
        org.junit.Assert.assertNull(socketAddress66);
        org.junit.Assert.assertNotNull(okHttpClient67);
        org.junit.Assert.assertNull(strList74);
        org.junit.Assert.assertNotNull(connectionPool75);
        org.junit.Assert.assertNotNull(okHttpClient77);
// flaky:         org.junit.Assert.assertNull(proxySelector78);
        org.junit.Assert.assertNotNull(sSLSocketFactory79);
        org.junit.Assert.assertNotNull(okHttpClient80);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertNotNull(okHttpClient84);
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertNotNull(okHttpClient86);
    }

    @Test
    public void test07120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07120");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory6);
        com.squareup.okhttp.ConnectionPool connectionPool8 = okHttpClient7.getConnectionPool();
        boolean boolean9 = okHttpClient7.getFollowProtocolRedirects();
        boolean boolean10 = okHttpClient7.getFollowProtocolRedirects();
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNotNull(okHttpClient7);
        org.junit.Assert.assertNull(connectionPool8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test07121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07121");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.OkAuthenticator okAuthenticator12 = okHttpClient11.getAuthenticator();
        java.net.ProxySelector proxySelector13 = okHttpClient11.getProxySelector();
        java.net.ProxySelector proxySelector14 = null;
        okHttpClient11.proxySelector = proxySelector14;
        java.net.ResponseCache responseCache16 = null;
        okHttpClient11.responseCache = responseCache16;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier19 = null;
        okHttpClient18.hostnameVerifier = hostnameVerifier19;
        java.net.ResponseCache responseCache21 = null;
        okHttpClient18.responseCache = responseCache21;
        javax.net.ssl.HostnameVerifier hostnameVerifier23 = okHttpClient18.hostnameVerifier;
        java.net.Proxy proxy24 = okHttpClient18.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool27 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient18.connectionPool = connectionPool27;
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient18.copyWithDefaults();
        java.net.ResponseCache responseCache30 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient29.setResponseCache(responseCache30);
        com.squareup.okhttp.OkHttpClient okHttpClient32 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool33 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient32.connectionPool = connectionPool33;
        java.net.ResponseCache responseCache35 = null;
        okHttpClient32.responseCache = responseCache35;
        java.net.Proxy proxy37 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress38 = proxy37.address();
        java.net.SocketAddress socketAddress39 = proxy37.address();
        okHttpClient32.proxy = proxy37;
        com.squareup.okhttp.ConnectionPool connectionPool43 = new com.squareup.okhttp.ConnectionPool((-1), (long) '#');
        com.squareup.okhttp.Address address44 = null;
        com.squareup.okhttp.Connection connection45 = connectionPool43.get(address44);
        int int46 = connectionPool43.getSpdyConnectionCount();
        connectionPool43.evictAll();
        com.squareup.okhttp.OkHttpClient okHttpClient48 = okHttpClient32.setConnectionPool(connectionPool43);
        com.squareup.okhttp.OkHttpClient okHttpClient49 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier50 = null;
        okHttpClient49.hostnameVerifier = hostnameVerifier50;
        java.net.ProxySelector proxySelector52 = okHttpClient49.proxySelector;
        java.net.ProxySelector proxySelector53 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient54 = okHttpClient49.setProxySelector(proxySelector53);
        com.squareup.okhttp.OkHttpClient okHttpClient55 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier56 = null;
        okHttpClient55.hostnameVerifier = hostnameVerifier56;
        java.net.ResponseCache responseCache58 = null;
        okHttpClient55.responseCache = responseCache58;
        java.util.List<java.lang.String> strList60 = okHttpClient55.transports;
        com.squareup.okhttp.ConnectionPool connectionPool61 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient55.connectionPool = connectionPool61;
        com.squareup.okhttp.OkHttpClient okHttpClient63 = okHttpClient55.copyWithDefaults();
        java.net.ProxySelector proxySelector64 = okHttpClient63.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory65 = okHttpClient63.getSslSocketFactory();
        okHttpClient49.sslSocketFactory = sSLSocketFactory65;
        okHttpClient32.sslSocketFactory = sSLSocketFactory65;
        com.squareup.okhttp.OkHttpClient okHttpClient68 = okHttpClient31.setSSLSocketFactory(sSLSocketFactory65);
        okHttpClient11.sslSocketFactory = sSLSocketFactory65;
        java.lang.String[] strArray70 = sSLSocketFactory65.getSupportedCipherSuites();
        java.net.Socket socket71 = sSLSocketFactory65.createSocket();
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(okAuthenticator12);
        org.junit.Assert.assertNull(proxySelector13);
        org.junit.Assert.assertNull(hostnameVerifier23);
        org.junit.Assert.assertNull(proxy24);
        org.junit.Assert.assertNotNull(okHttpClient29);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNotNull(connectionPool33);
        org.junit.Assert.assertNotNull(proxy37);
        org.junit.Assert.assertNull(socketAddress38);
        org.junit.Assert.assertNull(socketAddress39);
        org.junit.Assert.assertNull(connection45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(okHttpClient48);
        org.junit.Assert.assertNull(proxySelector52);
        org.junit.Assert.assertNotNull(okHttpClient54);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNotNull(connectionPool61);
        org.junit.Assert.assertNotNull(okHttpClient63);
// flaky:         org.junit.Assert.assertNull(proxySelector64);
        org.junit.Assert.assertNotNull(sSLSocketFactory65);
        org.junit.Assert.assertNotNull(okHttpClient68);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertNotNull(socket71);
        org.junit.Assert.assertEquals(socket71.toString(), "Socket[unconnected]");
    }

    @Test
    public void test07122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07122");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache8 = okHttpClient7.okResponseCache();
        java.net.ResponseCache responseCache9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient7.setResponseCache(responseCache9);
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        okHttpClient7.transports = strList13;
        okHttpClient0.transports = strList13;
        javax.net.ssl.HostnameVerifier hostnameVerifier17 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier17;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory20 = okHttpClient0.sslSocketFactory;
        java.net.CookieHandler cookieHandler21 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier23 = null;
        okHttpClient22.hostnameVerifier = hostnameVerifier23;
        java.net.ResponseCache responseCache25 = null;
        okHttpClient22.responseCache = responseCache25;
        javax.net.ssl.HostnameVerifier hostnameVerifier27 = okHttpClient22.hostnameVerifier;
        java.net.Proxy proxy28 = okHttpClient22.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool31 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient22.connectionPool = connectionPool31;
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient22.copyWithDefaults();
        java.util.List<java.lang.String> strList34 = okHttpClient22.getTransports();
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient22.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient36 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool37 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient36.connectionPool = connectionPool37;
        com.squareup.okhttp.OkHttpClient okHttpClient39 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier40 = null;
        okHttpClient39.hostnameVerifier = hostnameVerifier40;
        java.net.ResponseCache responseCache42 = null;
        okHttpClient39.responseCache = responseCache42;
        java.util.List<java.lang.String> strList44 = okHttpClient39.transports;
        com.squareup.okhttp.ConnectionPool connectionPool45 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient39.connectionPool = connectionPool45;
        com.squareup.okhttp.OkHttpClient okHttpClient47 = okHttpClient36.setConnectionPool(connectionPool45);
        com.squareup.okhttp.ConnectionPool connectionPool48 = okHttpClient47.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator49 = okHttpClient47.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool52 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient47.connectionPool = connectionPool52;
        com.squareup.okhttp.OkHttpClient okHttpClient54 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier55 = null;
        okHttpClient54.hostnameVerifier = hostnameVerifier55;
        java.net.ResponseCache responseCache57 = null;
        okHttpClient54.responseCache = responseCache57;
        java.util.List<java.lang.String> strList59 = okHttpClient54.transports;
        com.squareup.okhttp.ConnectionPool connectionPool60 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient54.connectionPool = connectionPool60;
        java.net.CookieHandler cookieHandler62 = okHttpClient54.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache63 = okHttpClient54.okResponseCache();
        java.net.CookieHandler cookieHandler64 = okHttpClient54.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient65 = new com.squareup.okhttp.OkHttpClient(okHttpClient54);
        java.net.Proxy proxy66 = java.net.Proxy.NO_PROXY;
        boolean boolean68 = proxy66.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type69 = proxy66.type();
        java.net.SocketAddress socketAddress70 = proxy66.address();
        com.squareup.okhttp.OkHttpClient okHttpClient71 = okHttpClient54.setProxy(proxy66);
        com.squareup.okhttp.OkHttpClient okHttpClient72 = okHttpClient47.setProxy(proxy66);
        com.squareup.okhttp.OkHttpClient okHttpClient73 = okHttpClient22.setProxy(proxy66);
        com.squareup.okhttp.ConnectionPool connectionPool74 = okHttpClient22.connectionPool;
        okHttpClient0.connectionPool = connectionPool74;
        com.squareup.okhttp.OkHttpClient okHttpClient76 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier77 = null;
        okHttpClient76.hostnameVerifier = hostnameVerifier77;
        java.net.ResponseCache responseCache79 = null;
        okHttpClient76.responseCache = responseCache79;
        javax.net.ssl.HostnameVerifier hostnameVerifier81 = okHttpClient76.hostnameVerifier;
        java.net.Proxy proxy82 = okHttpClient76.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool85 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient76.connectionPool = connectionPool85;
        com.squareup.okhttp.OkHttpClient okHttpClient87 = okHttpClient76.copyWithDefaults();
        java.net.ResponseCache responseCache88 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient89 = okHttpClient87.setResponseCache(responseCache88);
        java.net.ProxySelector proxySelector90 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient91 = okHttpClient87.setProxySelector(proxySelector90);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory92 = okHttpClient91.getSslSocketFactory();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory93 = okHttpClient91.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient94 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory93);
        java.net.ProxySelector proxySelector95 = okHttpClient0.getProxySelector();
        java.lang.Class<?> wildcardClass96 = okHttpClient0.getClass();
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNull(okResponseCache8);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(sSLSocketFactory20);
        org.junit.Assert.assertNull(cookieHandler21);
        org.junit.Assert.assertNull(hostnameVerifier27);
        org.junit.Assert.assertNull(proxy28);
        org.junit.Assert.assertNotNull(okHttpClient33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNotNull(connectionPool37);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNotNull(connectionPool45);
        org.junit.Assert.assertNotNull(okHttpClient47);
        org.junit.Assert.assertNotNull(connectionPool48);
        org.junit.Assert.assertNull(okAuthenticator49);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNotNull(connectionPool60);
        org.junit.Assert.assertNull(cookieHandler62);
        org.junit.Assert.assertNull(okResponseCache63);
        org.junit.Assert.assertNull(cookieHandler64);
        org.junit.Assert.assertNotNull(proxy66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + type69 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type69.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress70);
        org.junit.Assert.assertNotNull(okHttpClient71);
        org.junit.Assert.assertNotNull(okHttpClient72);
        org.junit.Assert.assertNotNull(okHttpClient73);
        org.junit.Assert.assertNotNull(connectionPool74);
        org.junit.Assert.assertNull(hostnameVerifier81);
        org.junit.Assert.assertNull(proxy82);
        org.junit.Assert.assertNotNull(okHttpClient87);
        org.junit.Assert.assertNotNull(okHttpClient89);
        org.junit.Assert.assertNotNull(okHttpClient91);
        org.junit.Assert.assertNotNull(sSLSocketFactory92);
        org.junit.Assert.assertNotNull(sSLSocketFactory93);
        org.junit.Assert.assertNotNull(okHttpClient94);
        org.junit.Assert.assertNull(proxySelector95);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test07123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07123");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.ResponseCache responseCache5 = null;
        okHttpClient4.responseCache = responseCache5;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient4.setSSLSocketFactory(sSLSocketFactory7);
        com.squareup.okhttp.OkAuthenticator okAuthenticator9 = null;
        okHttpClient4.authenticator = okAuthenticator9;
        okHttpClient4.followProtocolRedirects = false;
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient8);
    }

    @Test
    public void test07124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07124");
        java.net.Proxy proxy0 = java.net.Proxy.NO_PROXY;
        boolean boolean2 = proxy0.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type3 = proxy0.type();
        java.lang.String str4 = proxy0.toString();
        com.squareup.okhttp.OkHttpClient okHttpClient5 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier6 = null;
        okHttpClient5.hostnameVerifier = hostnameVerifier6;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory8 = okHttpClient5.getSslSocketFactory();
        boolean boolean9 = proxy0.equals((java.lang.Object) okHttpClient5);
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient5.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = null;
        okHttpClient11.hostnameVerifier = hostnameVerifier12;
        java.net.ProxySelector proxySelector14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient11.setProxySelector(proxySelector14);
        java.net.ResponseCache responseCache16 = null;
        okHttpClient15.responseCache = responseCache16;
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = okHttpClient15.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient15.setFollowProtocolRedirects(false);
        java.net.ProxySelector proxySelector21 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient20.setProxySelector(proxySelector21);
        okHttpClient22.followProtocolRedirects = true;
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient22.copyWithDefaults();
        java.util.List<java.lang.String> strList26 = okHttpClient25.getTransports();
        com.squareup.okhttp.OkHttpClient.DEFAULT_TRANSPORTS = strList26;
        okHttpClient10.transports = strList26;
        com.squareup.okhttp.OkHttpClient okHttpClient30 = okHttpClient10.setFollowProtocolRedirects(false);
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache31 = okHttpClient10.okResponseCache();
        org.junit.Assert.assertNotNull(proxy0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + type3 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type3.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "DIRECT" + "'", str4, "DIRECT");
        org.junit.Assert.assertNull(sSLSocketFactory8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNull(hostnameVerifier18);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNotNull(okHttpClient25);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(okHttpClient30);
        org.junit.Assert.assertNull(okResponseCache31);
    }

    @Test
    public void test07125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07125");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.OkAuthenticator okAuthenticator12 = okHttpClient11.getAuthenticator();
        java.net.ProxySelector proxySelector13 = okHttpClient11.getProxySelector();
        java.net.ResponseCache responseCache14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient11.setResponseCache(responseCache14);
        java.net.CookieHandler cookieHandler16 = null;
        okHttpClient15.cookieHandler = cookieHandler16;
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = okHttpClient15.getHostnameVerifier();
        java.net.ResponseCache responseCache19 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient15.setResponseCache(responseCache19);
        javax.net.ssl.HostnameVerifier hostnameVerifier21 = okHttpClient20.hostnameVerifier;
        java.util.List<java.lang.String> strList22 = okHttpClient20.getTransports();
        java.util.Set<com.squareup.okhttp.Route> routeSet23 = okHttpClient20.failedRoutes;
        java.util.List<java.lang.String> strList24 = okHttpClient20.transports;
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(okAuthenticator12);
        org.junit.Assert.assertNull(proxySelector13);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNull(hostnameVerifier18);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNull(hostnameVerifier21);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNotNull(routeSet23);
        org.junit.Assert.assertNull(strList24);
    }

    @Test
    public void test07126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07126");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        java.net.Proxy proxy12 = okHttpClient11.proxy;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory13 = null;
        okHttpClient11.sslSocketFactory = sSLSocketFactory13;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier16 = null;
        okHttpClient15.hostnameVerifier = hostnameVerifier16;
        java.net.ResponseCache responseCache18 = null;
        okHttpClient15.responseCache = responseCache18;
        java.util.List<java.lang.String> strList20 = okHttpClient15.transports;
        com.squareup.okhttp.ConnectionPool connectionPool21 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient15.connectionPool = connectionPool21;
        com.squareup.okhttp.ConnectionPool connectionPool23 = okHttpClient15.connectionPool;
        int int24 = connectionPool23.getHttpConnectionCount();
        com.squareup.okhttp.Address address25 = null;
        com.squareup.okhttp.Connection connection26 = connectionPool23.get(address25);
        okHttpClient11.connectionPool = connectionPool23;
        java.net.ProxySelector proxySelector28 = okHttpClient11.proxySelector;
        java.net.Proxy proxy29 = java.net.Proxy.NO_PROXY;
        boolean boolean31 = proxy29.equals((java.lang.Object) 1L);
        com.squareup.okhttp.OkHttpClient okHttpClient32 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache33 = okHttpClient32.okResponseCache();
        java.net.ResponseCache responseCache34 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient32.setResponseCache(responseCache34);
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList38 = new java.util.ArrayList<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        okHttpClient32.transports = strList38;
        boolean boolean41 = proxy29.equals((java.lang.Object) strList38);
        okHttpClient11.proxy = proxy29;
        java.lang.String str43 = proxy29.toString();
        java.lang.String str44 = proxy29.toString();
        com.squareup.okhttp.OkHttpClient okHttpClient45 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool46 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient45.connectionPool = connectionPool46;
        com.squareup.okhttp.OkHttpClient okHttpClient48 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier49 = null;
        okHttpClient48.hostnameVerifier = hostnameVerifier49;
        java.net.ResponseCache responseCache51 = null;
        okHttpClient48.responseCache = responseCache51;
        java.util.List<java.lang.String> strList53 = okHttpClient48.transports;
        com.squareup.okhttp.ConnectionPool connectionPool54 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient48.connectionPool = connectionPool54;
        com.squareup.okhttp.OkHttpClient okHttpClient56 = okHttpClient45.setConnectionPool(connectionPool54);
        java.net.Proxy proxy57 = okHttpClient56.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient58 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool59 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient58.connectionPool = connectionPool59;
        int int61 = connectionPool59.getSpdyConnectionCount();
        okHttpClient56.connectionPool = connectionPool59;
        com.squareup.okhttp.OkHttpClient okHttpClient63 = okHttpClient56.copyWithDefaults();
        java.net.ResponseCache responseCache64 = null;
        okHttpClient56.responseCache = responseCache64;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache66 = okHttpClient56.okResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient68 = okHttpClient56.setFollowProtocolRedirects(false);
        com.squareup.okhttp.OkAuthenticator okAuthenticator69 = okHttpClient68.getAuthenticator();
        boolean boolean70 = proxy29.equals((java.lang.Object) okHttpClient68);
        com.squareup.okhttp.OkAuthenticator okAuthenticator71 = okHttpClient68.authenticator;
        java.net.ProxySelector proxySelector72 = okHttpClient68.getProxySelector();
        java.util.Set<com.squareup.okhttp.Route> routeSet73 = okHttpClient68.failedRoutes;
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(proxy12);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(connectionPool21);
        org.junit.Assert.assertNotNull(connectionPool23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNull(connection26);
        org.junit.Assert.assertNull(proxySelector28);
        org.junit.Assert.assertNotNull(proxy29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(okResponseCache33);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "DIRECT" + "'", str43, "DIRECT");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "DIRECT" + "'", str44, "DIRECT");
        org.junit.Assert.assertNotNull(connectionPool46);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNotNull(connectionPool54);
        org.junit.Assert.assertNotNull(okHttpClient56);
        org.junit.Assert.assertNull(proxy57);
        org.junit.Assert.assertNotNull(connectionPool59);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(okHttpClient63);
        org.junit.Assert.assertNull(okResponseCache66);
        org.junit.Assert.assertNotNull(okHttpClient68);
        org.junit.Assert.assertNull(okAuthenticator69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNull(okAuthenticator71);
        org.junit.Assert.assertNull(proxySelector72);
        org.junit.Assert.assertNotNull(routeSet73);
    }

    @Test
    public void test07127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07127");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.ConnectionPool connectionPool12 = okHttpClient11.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator13 = okHttpClient11.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool16 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient11.connectionPool = connectionPool16;
        java.net.ResponseCache responseCache18 = okHttpClient11.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory19 = okHttpClient11.sslSocketFactory;
        java.net.Proxy proxy20 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress21 = proxy20.address();
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient11.setProxy(proxy20);
        com.squareup.okhttp.OkHttpClient okHttpClient23 = new com.squareup.okhttp.OkHttpClient(okHttpClient22);
        com.squareup.okhttp.OkHttpClient okHttpClient24 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier25 = null;
        okHttpClient24.hostnameVerifier = hostnameVerifier25;
        java.net.ResponseCache responseCache27 = null;
        okHttpClient24.responseCache = responseCache27;
        java.util.List<java.lang.String> strList29 = okHttpClient24.transports;
        com.squareup.okhttp.ConnectionPool connectionPool30 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient24.connectionPool = connectionPool30;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient24.copyWithDefaults();
        java.net.ProxySelector proxySelector33 = okHttpClient32.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory34 = okHttpClient32.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient22.setSSLSocketFactory(sSLSocketFactory34);
        java.lang.String[] strArray36 = sSLSocketFactory34.getSupportedCipherSuites();
        java.lang.String[] strArray37 = sSLSocketFactory34.getSupportedCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient38 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier39 = null;
        okHttpClient38.hostnameVerifier = hostnameVerifier39;
        java.net.ResponseCache responseCache41 = null;
        okHttpClient38.responseCache = responseCache41;
        java.util.List<java.lang.String> strList43 = okHttpClient38.transports;
        com.squareup.okhttp.ConnectionPool connectionPool44 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient38.connectionPool = connectionPool44;
        com.squareup.okhttp.OkHttpClient okHttpClient46 = okHttpClient38.copyWithDefaults();
        java.net.ProxySelector proxySelector47 = okHttpClient46.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory48 = okHttpClient46.getSslSocketFactory();
        java.lang.String[] strArray49 = sSLSocketFactory48.getSupportedCipherSuites();
        java.net.Socket socket50 = sSLSocketFactory48.createSocket();
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket54 = sSLSocketFactory34.createSocket(socket50, "hi!", (int) (byte) 10, false);
            org.junit.Assert.fail("Expected exception of type java.net.SocketException; message: Underlying socket is not connected");
        } catch (java.net.SocketException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNull(okAuthenticator13);
        org.junit.Assert.assertNull(responseCache18);
        org.junit.Assert.assertNull(sSLSocketFactory19);
        org.junit.Assert.assertNotNull(proxy20);
        org.junit.Assert.assertNull(socketAddress21);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(connectionPool30);
        org.junit.Assert.assertNotNull(okHttpClient32);
// flaky:         org.junit.Assert.assertNull(proxySelector33);
        org.junit.Assert.assertNotNull(sSLSocketFactory34);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNotNull(connectionPool44);
        org.junit.Assert.assertNotNull(okHttpClient46);
// flaky:         org.junit.Assert.assertNull(proxySelector47);
        org.junit.Assert.assertNotNull(sSLSocketFactory48);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(socket50);
        org.junit.Assert.assertEquals(socket50.toString(), "Socket[unconnected]");
    }

    @Test
    public void test07128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07128");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.CookieHandler cookieHandler5 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = null;
        okHttpClient6.hostnameVerifier = hostnameVerifier7;
        java.net.ResponseCache responseCache9 = null;
        okHttpClient6.responseCache = responseCache9;
        java.util.List<java.lang.String> strList11 = okHttpClient6.transports;
        com.squareup.okhttp.ConnectionPool connectionPool12 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient6.connectionPool = connectionPool12;
        java.net.Proxy proxy14 = null;
        okHttpClient6.proxy = proxy14;
        java.util.Set<com.squareup.okhttp.Route> routeSet16 = okHttpClient6.failedRoutes;
        okHttpClient0.failedRoutes = routeSet16;
        java.net.ProxySelector proxySelector18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient0.setProxySelector(proxySelector18);
        com.squareup.okhttp.ConnectionPool connectionPool22 = new com.squareup.okhttp.ConnectionPool((int) (short) 10, (long) '4');
        okHttpClient0.connectionPool = connectionPool22;
        boolean boolean24 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient25 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        boolean boolean26 = okHttpClient25.getFollowProtocolRedirects();
        java.net.ResponseCache responseCache27 = okHttpClient25.responseCache;
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNotNull(routeSet16);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(responseCache27);
    }

    @Test
    public void test07129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07129");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        java.net.Proxy proxy6 = java.net.Proxy.NO_PROXY;
        boolean boolean8 = proxy6.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type9 = proxy6.type();
        java.net.SocketAddress socketAddress10 = proxy6.address();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setProxy(proxy6);
        java.net.SocketAddress socketAddress12 = proxy6.address();
        java.net.Proxy.Type type13 = proxy6.type();
        java.net.Proxy.Type type14 = proxy6.type();
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool16 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient15.connectionPool = connectionPool16;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier19 = null;
        okHttpClient18.hostnameVerifier = hostnameVerifier19;
        java.net.ResponseCache responseCache21 = null;
        okHttpClient18.responseCache = responseCache21;
        java.util.List<java.lang.String> strList23 = okHttpClient18.transports;
        com.squareup.okhttp.ConnectionPool connectionPool24 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient18.connectionPool = connectionPool24;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient15.setConnectionPool(connectionPool24);
        com.squareup.okhttp.ConnectionPool connectionPool27 = okHttpClient26.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator28 = okHttpClient26.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool31 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient26.connectionPool = connectionPool31;
        java.net.ResponseCache responseCache33 = okHttpClient26.responseCache;
        java.util.List<java.lang.String> strList34 = okHttpClient26.getTransports();
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient26.copyWithDefaults();
        java.net.ResponseCache responseCache36 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient35.setResponseCache(responseCache36);
        com.squareup.okhttp.OkAuthenticator okAuthenticator38 = okHttpClient35.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool41 = new com.squareup.okhttp.ConnectionPool((int) (short) -1, (long) 'a');
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient35.setConnectionPool(connectionPool41);
        java.net.Proxy proxy43 = okHttpClient35.getProxy();
        boolean boolean44 = proxy6.equals((java.lang.Object) okHttpClient35);
        com.squareup.okhttp.ConnectionPool connectionPool45 = okHttpClient35.getConnectionPool();
        java.net.Proxy proxy46 = okHttpClient35.proxy;
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(proxy6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + type9 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type9.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress10);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(socketAddress12);
        org.junit.Assert.assertTrue("'" + type13 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type13.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertTrue("'" + type14 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type14.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNotNull(connectionPool16);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNotNull(connectionPool24);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNotNull(connectionPool27);
        org.junit.Assert.assertNull(okAuthenticator28);
        org.junit.Assert.assertNull(responseCache33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNotNull(okHttpClient37);
        org.junit.Assert.assertNotNull(okAuthenticator38);
        org.junit.Assert.assertNotNull(okHttpClient42);
        org.junit.Assert.assertNull(proxy43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(connectionPool45);
        org.junit.Assert.assertNull(proxy46);
    }

    @Test
    public void test07130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07130");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache1 = okHttpClient0.okResponseCache();
        java.net.ResponseCache responseCache2 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.setResponseCache(responseCache2);
        com.squareup.okhttp.OkHttpClient okHttpClient4 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        boolean boolean5 = okHttpClient0.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool7 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient6.connectionPool = connectionPool7;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier10 = null;
        okHttpClient9.hostnameVerifier = hostnameVerifier10;
        java.net.ResponseCache responseCache12 = null;
        okHttpClient9.responseCache = responseCache12;
        java.util.List<java.lang.String> strList14 = okHttpClient9.transports;
        com.squareup.okhttp.ConnectionPool connectionPool15 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient9.connectionPool = connectionPool15;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient6.setConnectionPool(connectionPool15);
        java.net.Proxy proxy18 = okHttpClient17.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool20 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient19.connectionPool = connectionPool20;
        int int22 = connectionPool20.getSpdyConnectionCount();
        okHttpClient17.connectionPool = connectionPool20;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier25 = null;
        okHttpClient24.hostnameVerifier = hostnameVerifier25;
        java.net.ResponseCache responseCache27 = null;
        okHttpClient24.responseCache = responseCache27;
        javax.net.ssl.HostnameVerifier hostnameVerifier29 = okHttpClient24.hostnameVerifier;
        java.net.Proxy proxy30 = okHttpClient24.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool33 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient24.connectionPool = connectionPool33;
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient24.copyWithDefaults();
        java.net.ResponseCache responseCache36 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient35.setResponseCache(responseCache36);
        com.squareup.okhttp.OkAuthenticator okAuthenticator38 = okHttpClient35.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient17.setAuthenticator(okAuthenticator38);
        com.squareup.okhttp.OkHttpClient okHttpClient40 = okHttpClient0.setAuthenticator(okAuthenticator38);
        com.squareup.okhttp.OkHttpClient okHttpClient41 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        java.util.List<java.lang.String> strList42 = okHttpClient0.transports;
        java.net.CookieHandler cookieHandler43 = okHttpClient0.cookieHandler;
        java.net.CookieHandler cookieHandler44 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient45 = okHttpClient0.setCookieHandler(cookieHandler44);
        org.junit.Assert.assertNull(okResponseCache1);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(connectionPool7);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNotNull(connectionPool15);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNull(proxy18);
        org.junit.Assert.assertNotNull(connectionPool20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNull(hostnameVerifier29);
        org.junit.Assert.assertNull(proxy30);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNotNull(okHttpClient37);
        org.junit.Assert.assertNotNull(okAuthenticator38);
        org.junit.Assert.assertNotNull(okHttpClient39);
        org.junit.Assert.assertNotNull(okHttpClient40);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNull(cookieHandler43);
        org.junit.Assert.assertNotNull(okHttpClient45);
    }

    @Test
    public void test07131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07131");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient4.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient5.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = null;
        okHttpClient7.hostnameVerifier = hostnameVerifier8;
        java.net.ProxySelector proxySelector10 = okHttpClient7.proxySelector;
        java.net.Proxy proxy11 = okHttpClient7.proxy;
        java.util.List<java.lang.String> strList12 = okHttpClient7.transports;
        boolean boolean13 = okHttpClient7.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool15 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient14.connectionPool = connectionPool15;
        java.net.ResponseCache responseCache17 = null;
        okHttpClient14.responseCache = responseCache17;
        java.net.Proxy proxy19 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress20 = proxy19.address();
        java.net.SocketAddress socketAddress21 = proxy19.address();
        okHttpClient14.proxy = proxy19;
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient7.setProxy(proxy19);
        okHttpClient5.proxy = proxy19;
        com.squareup.okhttp.OkHttpClient okHttpClient25 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool26 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient25.connectionPool = connectionPool26;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier29 = null;
        okHttpClient28.hostnameVerifier = hostnameVerifier29;
        java.net.ResponseCache responseCache31 = null;
        okHttpClient28.responseCache = responseCache31;
        java.util.List<java.lang.String> strList33 = okHttpClient28.transports;
        com.squareup.okhttp.ConnectionPool connectionPool34 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient28.connectionPool = connectionPool34;
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient25.setConnectionPool(connectionPool34);
        java.net.Proxy proxy37 = okHttpClient36.proxy;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory38 = null;
        okHttpClient36.sslSocketFactory = sSLSocketFactory38;
        com.squareup.okhttp.OkHttpClient okHttpClient40 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier41 = null;
        okHttpClient40.hostnameVerifier = hostnameVerifier41;
        java.net.ResponseCache responseCache43 = null;
        okHttpClient40.responseCache = responseCache43;
        java.util.List<java.lang.String> strList45 = okHttpClient40.transports;
        com.squareup.okhttp.ConnectionPool connectionPool46 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient40.connectionPool = connectionPool46;
        com.squareup.okhttp.ConnectionPool connectionPool48 = okHttpClient40.connectionPool;
        int int49 = connectionPool48.getHttpConnectionCount();
        com.squareup.okhttp.Address address50 = null;
        com.squareup.okhttp.Connection connection51 = connectionPool48.get(address50);
        okHttpClient36.connectionPool = connectionPool48;
        java.net.ProxySelector proxySelector53 = okHttpClient36.proxySelector;
        java.net.Proxy proxy54 = java.net.Proxy.NO_PROXY;
        boolean boolean56 = proxy54.equals((java.lang.Object) 1L);
        com.squareup.okhttp.OkHttpClient okHttpClient57 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache58 = okHttpClient57.okResponseCache();
        java.net.ResponseCache responseCache59 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient60 = okHttpClient57.setResponseCache(responseCache59);
        java.lang.String[] strArray62 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList63 = new java.util.ArrayList<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList63, strArray62);
        okHttpClient57.transports = strList63;
        boolean boolean66 = proxy54.equals((java.lang.Object) strList63);
        okHttpClient36.proxy = proxy54;
        java.lang.String str68 = proxy54.toString();
        java.net.SocketAddress socketAddress69 = proxy54.address();
        com.squareup.okhttp.OkHttpClient okHttpClient70 = okHttpClient5.setProxy(proxy54);
        java.net.Proxy.Type type71 = proxy54.type();
        java.lang.String str72 = proxy54.toString();
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNotNull(okHttpClient6);
        org.junit.Assert.assertNull(proxySelector10);
        org.junit.Assert.assertNull(proxy11);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(connectionPool15);
        org.junit.Assert.assertNotNull(proxy19);
        org.junit.Assert.assertNull(socketAddress20);
        org.junit.Assert.assertNull(socketAddress21);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertNotNull(connectionPool26);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNotNull(connectionPool34);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNull(proxy37);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNotNull(connectionPool46);
        org.junit.Assert.assertNotNull(connectionPool48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNull(connection51);
        org.junit.Assert.assertNull(proxySelector53);
        org.junit.Assert.assertNotNull(proxy54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(okResponseCache58);
        org.junit.Assert.assertNotNull(okHttpClient60);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "DIRECT" + "'", str68, "DIRECT");
        org.junit.Assert.assertNull(socketAddress69);
        org.junit.Assert.assertNotNull(okHttpClient70);
        org.junit.Assert.assertTrue("'" + type71 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type71.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "DIRECT" + "'", str72, "DIRECT");
    }

    @Test
    public void test07132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07132");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.CookieHandler cookieHandler5 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = null;
        okHttpClient6.hostnameVerifier = hostnameVerifier7;
        java.net.ResponseCache responseCache9 = null;
        okHttpClient6.responseCache = responseCache9;
        java.util.List<java.lang.String> strList11 = okHttpClient6.transports;
        com.squareup.okhttp.ConnectionPool connectionPool12 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient6.connectionPool = connectionPool12;
        java.net.Proxy proxy14 = null;
        okHttpClient6.proxy = proxy14;
        java.util.Set<com.squareup.okhttp.Route> routeSet16 = okHttpClient6.failedRoutes;
        okHttpClient0.failedRoutes = routeSet16;
        java.net.ProxySelector proxySelector18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient0.setProxySelector(proxySelector18);
        com.squareup.okhttp.ConnectionPool connectionPool22 = new com.squareup.okhttp.ConnectionPool((int) (short) 10, (long) '4');
        okHttpClient0.connectionPool = connectionPool22;
        java.net.ResponseCache responseCache24 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient0.setResponseCache(responseCache24);
        com.squareup.okhttp.OkHttpClient okHttpClient26 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool27 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient26.connectionPool = connectionPool27;
        com.squareup.okhttp.OkHttpClient okHttpClient29 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = null;
        okHttpClient29.hostnameVerifier = hostnameVerifier30;
        java.net.ResponseCache responseCache32 = null;
        okHttpClient29.responseCache = responseCache32;
        java.util.List<java.lang.String> strList34 = okHttpClient29.transports;
        com.squareup.okhttp.ConnectionPool connectionPool35 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient29.connectionPool = connectionPool35;
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient26.setConnectionPool(connectionPool35);
        com.squareup.okhttp.ConnectionPool connectionPool38 = okHttpClient37.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator39 = okHttpClient37.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool42 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient37.connectionPool = connectionPool42;
        java.net.ResponseCache responseCache44 = okHttpClient37.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory45 = okHttpClient37.sslSocketFactory;
        java.net.Proxy proxy46 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress47 = proxy46.address();
        com.squareup.okhttp.OkHttpClient okHttpClient48 = okHttpClient37.setProxy(proxy46);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory49 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient37.setSSLSocketFactory(sSLSocketFactory49);
        com.squareup.okhttp.OkHttpClient okHttpClient51 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier52 = null;
        okHttpClient51.hostnameVerifier = hostnameVerifier52;
        java.net.ResponseCache responseCache54 = null;
        okHttpClient51.responseCache = responseCache54;
        javax.net.ssl.HostnameVerifier hostnameVerifier56 = okHttpClient51.hostnameVerifier;
        java.net.Proxy proxy57 = okHttpClient51.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool60 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient51.connectionPool = connectionPool60;
        com.squareup.okhttp.OkHttpClient okHttpClient62 = okHttpClient51.copyWithDefaults();
        java.net.ResponseCache responseCache63 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient64 = okHttpClient62.setResponseCache(responseCache63);
        com.squareup.okhttp.OkAuthenticator okAuthenticator65 = okHttpClient62.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient66 = okHttpClient37.setAuthenticator(okAuthenticator65);
        java.net.Proxy proxy67 = okHttpClient66.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient68 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier69 = null;
        okHttpClient68.hostnameVerifier = hostnameVerifier69;
        java.net.ResponseCache responseCache71 = null;
        okHttpClient68.responseCache = responseCache71;
        java.util.List<java.lang.String> strList73 = okHttpClient68.transports;
        com.squareup.okhttp.ConnectionPool connectionPool74 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient68.connectionPool = connectionPool74;
        java.net.CookieHandler cookieHandler76 = okHttpClient68.cookieHandler;
        java.net.ProxySelector proxySelector77 = null;
        okHttpClient68.proxySelector = proxySelector77;
        java.net.CookieHandler cookieHandler79 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient80 = okHttpClient68.setCookieHandler(cookieHandler79);
        boolean boolean81 = proxy67.equals((java.lang.Object) cookieHandler79);
        com.squareup.okhttp.OkHttpClient okHttpClient82 = okHttpClient0.setProxy(proxy67);
        java.util.Set<com.squareup.okhttp.Route> routeSet83 = okHttpClient82.failedRoutes;
        java.util.List<java.lang.String> strList84 = okHttpClient82.transports;
        com.squareup.okhttp.ConnectionPool connectionPool87 = new com.squareup.okhttp.ConnectionPool(100, (long) '4');
        int int88 = connectionPool87.getConnectionCount();
        int int89 = connectionPool87.getSpdyConnectionCount();
        connectionPool87.evictAll();
        com.squareup.okhttp.OkHttpClient okHttpClient91 = okHttpClient82.setConnectionPool(connectionPool87);
        connectionPool87.evictAll();
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNotNull(routeSet16);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNotNull(okHttpClient25);
        org.junit.Assert.assertNotNull(connectionPool27);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(connectionPool35);
        org.junit.Assert.assertNotNull(okHttpClient37);
        org.junit.Assert.assertNotNull(connectionPool38);
        org.junit.Assert.assertNull(okAuthenticator39);
        org.junit.Assert.assertNull(responseCache44);
        org.junit.Assert.assertNull(sSLSocketFactory45);
        org.junit.Assert.assertNotNull(proxy46);
        org.junit.Assert.assertNull(socketAddress47);
        org.junit.Assert.assertNotNull(okHttpClient48);
        org.junit.Assert.assertNotNull(okHttpClient50);
        org.junit.Assert.assertNull(hostnameVerifier56);
        org.junit.Assert.assertNull(proxy57);
        org.junit.Assert.assertNotNull(okHttpClient62);
        org.junit.Assert.assertNotNull(okHttpClient64);
        org.junit.Assert.assertNotNull(okAuthenticator65);
        org.junit.Assert.assertNotNull(okHttpClient66);
        org.junit.Assert.assertNotNull(proxy67);
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertNotNull(connectionPool74);
        org.junit.Assert.assertNull(cookieHandler76);
        org.junit.Assert.assertNotNull(okHttpClient80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(okHttpClient82);
        org.junit.Assert.assertNotNull(routeSet83);
        org.junit.Assert.assertNull(strList84);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 0 + "'", int89 == 0);
        org.junit.Assert.assertNotNull(okHttpClient91);
    }

    @Test
    public void test07133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07133");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        java.net.CookieHandler cookieHandler7 = null;
        okHttpClient0.cookieHandler = cookieHandler7;
        okHttpClient0.followProtocolRedirects = true;
        java.net.CookieHandler cookieHandler11 = okHttpClient0.getCookieHandler();
        java.net.CookieHandler cookieHandler12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient0.setCookieHandler(cookieHandler12);
        java.net.ProxySelector proxySelector14 = okHttpClient13.getProxySelector();
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient(okHttpClient13);
        com.squareup.okhttp.OkHttpClient okHttpClient16 = new com.squareup.okhttp.OkHttpClient(okHttpClient13);
        java.net.CookieHandler cookieHandler17 = null;
        okHttpClient13.cookieHandler = cookieHandler17;
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNull(cookieHandler11);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNull(proxySelector14);
    }

    @Test
    public void test07134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07134");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        java.net.Proxy proxy12 = okHttpClient11.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool14 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient13.connectionPool = connectionPool14;
        int int16 = connectionPool14.getSpdyConnectionCount();
        okHttpClient11.connectionPool = connectionPool14;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient11.copyWithDefaults();
        java.net.ResponseCache responseCache19 = null;
        okHttpClient11.responseCache = responseCache19;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache21 = okHttpClient11.okResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient(okHttpClient11);
        com.squareup.okhttp.OkHttpClient okHttpClient23 = new com.squareup.okhttp.OkHttpClient(okHttpClient22);
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(proxy12);
        org.junit.Assert.assertNotNull(connectionPool14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNull(okResponseCache21);
    }

    @Test
    public void test07135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07135");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        boolean boolean6 = okHttpClient0.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = null;
        okHttpClient7.hostnameVerifier = hostnameVerifier8;
        java.net.ProxySelector proxySelector10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient7.setProxySelector(proxySelector10);
        java.net.CookieHandler cookieHandler12 = okHttpClient7.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = null;
        okHttpClient13.hostnameVerifier = hostnameVerifier14;
        java.net.ResponseCache responseCache16 = null;
        okHttpClient13.responseCache = responseCache16;
        java.util.List<java.lang.String> strList18 = okHttpClient13.transports;
        com.squareup.okhttp.ConnectionPool connectionPool19 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient13.connectionPool = connectionPool19;
        java.net.Proxy proxy21 = null;
        okHttpClient13.proxy = proxy21;
        java.util.Set<com.squareup.okhttp.Route> routeSet23 = okHttpClient13.failedRoutes;
        okHttpClient7.failedRoutes = routeSet23;
        java.net.ProxySelector proxySelector25 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient7.setProxySelector(proxySelector25);
        com.squareup.okhttp.ConnectionPool connectionPool29 = new com.squareup.okhttp.ConnectionPool((int) (short) 10, (long) '4');
        okHttpClient7.connectionPool = connectionPool29;
        java.net.ResponseCache responseCache31 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient7.setResponseCache(responseCache31);
        com.squareup.okhttp.OkHttpClient okHttpClient33 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool34 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient33.connectionPool = connectionPool34;
        com.squareup.okhttp.OkHttpClient okHttpClient36 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier37 = null;
        okHttpClient36.hostnameVerifier = hostnameVerifier37;
        java.net.ResponseCache responseCache39 = null;
        okHttpClient36.responseCache = responseCache39;
        java.util.List<java.lang.String> strList41 = okHttpClient36.transports;
        com.squareup.okhttp.ConnectionPool connectionPool42 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient36.connectionPool = connectionPool42;
        com.squareup.okhttp.OkHttpClient okHttpClient44 = okHttpClient33.setConnectionPool(connectionPool42);
        com.squareup.okhttp.ConnectionPool connectionPool45 = okHttpClient44.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator46 = okHttpClient44.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool49 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient44.connectionPool = connectionPool49;
        java.net.ResponseCache responseCache51 = okHttpClient44.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory52 = okHttpClient44.sslSocketFactory;
        java.net.Proxy proxy53 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress54 = proxy53.address();
        com.squareup.okhttp.OkHttpClient okHttpClient55 = okHttpClient44.setProxy(proxy53);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory56 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient57 = okHttpClient44.setSSLSocketFactory(sSLSocketFactory56);
        com.squareup.okhttp.OkHttpClient okHttpClient58 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier59 = null;
        okHttpClient58.hostnameVerifier = hostnameVerifier59;
        java.net.ResponseCache responseCache61 = null;
        okHttpClient58.responseCache = responseCache61;
        javax.net.ssl.HostnameVerifier hostnameVerifier63 = okHttpClient58.hostnameVerifier;
        java.net.Proxy proxy64 = okHttpClient58.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool67 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient58.connectionPool = connectionPool67;
        com.squareup.okhttp.OkHttpClient okHttpClient69 = okHttpClient58.copyWithDefaults();
        java.net.ResponseCache responseCache70 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient71 = okHttpClient69.setResponseCache(responseCache70);
        com.squareup.okhttp.OkAuthenticator okAuthenticator72 = okHttpClient69.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient73 = okHttpClient44.setAuthenticator(okAuthenticator72);
        java.net.Proxy proxy74 = okHttpClient73.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient75 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier76 = null;
        okHttpClient75.hostnameVerifier = hostnameVerifier76;
        java.net.ResponseCache responseCache78 = null;
        okHttpClient75.responseCache = responseCache78;
        java.util.List<java.lang.String> strList80 = okHttpClient75.transports;
        com.squareup.okhttp.ConnectionPool connectionPool81 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient75.connectionPool = connectionPool81;
        java.net.CookieHandler cookieHandler83 = okHttpClient75.cookieHandler;
        java.net.ProxySelector proxySelector84 = null;
        okHttpClient75.proxySelector = proxySelector84;
        java.net.CookieHandler cookieHandler86 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient87 = okHttpClient75.setCookieHandler(cookieHandler86);
        boolean boolean88 = proxy74.equals((java.lang.Object) cookieHandler86);
        com.squareup.okhttp.OkHttpClient okHttpClient89 = okHttpClient7.setProxy(proxy74);
        java.net.Proxy proxy90 = okHttpClient89.proxy;
        okHttpClient0.proxy = proxy90;
        java.net.Proxy.Type type92 = proxy90.type();
        java.net.SocketAddress socketAddress93 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Proxy proxy94 = new java.net.Proxy(type92, socketAddress93);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: type DIRECT is not compatible with address null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(cookieHandler12);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(connectionPool19);
        org.junit.Assert.assertNotNull(routeSet23);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertNotNull(connectionPool34);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(connectionPool42);
        org.junit.Assert.assertNotNull(okHttpClient44);
        org.junit.Assert.assertNotNull(connectionPool45);
        org.junit.Assert.assertNull(okAuthenticator46);
        org.junit.Assert.assertNull(responseCache51);
        org.junit.Assert.assertNull(sSLSocketFactory52);
        org.junit.Assert.assertNotNull(proxy53);
        org.junit.Assert.assertNull(socketAddress54);
        org.junit.Assert.assertNotNull(okHttpClient55);
        org.junit.Assert.assertNotNull(okHttpClient57);
        org.junit.Assert.assertNull(hostnameVerifier63);
        org.junit.Assert.assertNull(proxy64);
        org.junit.Assert.assertNotNull(okHttpClient69);
        org.junit.Assert.assertNotNull(okHttpClient71);
        org.junit.Assert.assertNotNull(okAuthenticator72);
        org.junit.Assert.assertNotNull(okHttpClient73);
        org.junit.Assert.assertNotNull(proxy74);
        org.junit.Assert.assertNull(strList80);
        org.junit.Assert.assertNotNull(connectionPool81);
        org.junit.Assert.assertNull(cookieHandler83);
        org.junit.Assert.assertNotNull(okHttpClient87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(okHttpClient89);
        org.junit.Assert.assertNotNull(proxy90);
        org.junit.Assert.assertTrue("'" + type92 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type92.equals(java.net.Proxy.Type.DIRECT));
    }

    @Test
    public void test07136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07136");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        com.squareup.okhttp.ConnectionPool connectionPool8 = okHttpClient0.connectionPool;
        boolean boolean9 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient10 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier11 = null;
        okHttpClient10.hostnameVerifier = hostnameVerifier11;
        java.net.ResponseCache responseCache13 = null;
        okHttpClient10.responseCache = responseCache13;
        javax.net.ssl.HostnameVerifier hostnameVerifier15 = okHttpClient10.hostnameVerifier;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory16 = okHttpClient10.sslSocketFactory;
        java.net.CookieHandler cookieHandler17 = okHttpClient10.cookieHandler;
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = okHttpClient10.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool20 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient19.connectionPool = connectionPool20;
        com.squareup.okhttp.OkAuthenticator okAuthenticator22 = null;
        okHttpClient19.authenticator = okAuthenticator22;
        java.util.List<java.lang.String> strList24 = okHttpClient19.transports;
        java.net.ResponseCache responseCache25 = null;
        okHttpClient19.responseCache = responseCache25;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier28 = null;
        okHttpClient27.hostnameVerifier = hostnameVerifier28;
        java.net.ResponseCache responseCache30 = null;
        okHttpClient27.responseCache = responseCache30;
        javax.net.ssl.HostnameVerifier hostnameVerifier32 = okHttpClient27.hostnameVerifier;
        java.net.Proxy proxy33 = okHttpClient27.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool36 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient27.connectionPool = connectionPool36;
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient27.copyWithDefaults();
        java.net.Proxy proxy39 = okHttpClient38.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier40 = okHttpClient38.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient41 = okHttpClient19.setHostnameVerifier(hostnameVerifier40);
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient10.setHostnameVerifier(hostnameVerifier40);
        com.squareup.okhttp.OkHttpClient okHttpClient43 = okHttpClient0.setHostnameVerifier(hostnameVerifier40);
        com.squareup.okhttp.OkHttpClient okHttpClient44 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier45 = null;
        okHttpClient44.hostnameVerifier = hostnameVerifier45;
        java.net.ProxySelector proxySelector47 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient48 = okHttpClient44.setProxySelector(proxySelector47);
        com.squareup.okhttp.OkHttpClient okHttpClient49 = okHttpClient48.copyWithDefaults();
        com.squareup.okhttp.Route[] routeArray50 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet51 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet51, routeArray50);
        okHttpClient49.failedRoutes = routeSet51;
        okHttpClient0.failedRoutes = routeSet51;
        boolean boolean55 = okHttpClient0.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient57 = okHttpClient0.setFollowProtocolRedirects(true);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNotNull(connectionPool8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(hostnameVerifier15);
        org.junit.Assert.assertNull(sSLSocketFactory16);
        org.junit.Assert.assertNull(cookieHandler17);
        org.junit.Assert.assertNull(hostnameVerifier18);
        org.junit.Assert.assertNotNull(connectionPool20);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNull(hostnameVerifier32);
        org.junit.Assert.assertNull(proxy33);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNull(proxy39);
        org.junit.Assert.assertNotNull(hostnameVerifier40);
        org.junit.Assert.assertNotNull(okHttpClient41);
        org.junit.Assert.assertNotNull(okHttpClient42);
        org.junit.Assert.assertNotNull(okHttpClient43);
        org.junit.Assert.assertNotNull(okHttpClient48);
        org.junit.Assert.assertNotNull(okHttpClient49);
        org.junit.Assert.assertNotNull(routeArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(okHttpClient57);
    }

    @Test
    public void test07137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07137");
        com.squareup.okhttp.ConnectionPool connectionPool2 = new com.squareup.okhttp.ConnectionPool((int) ' ', (long) (byte) 10);
        int int3 = connectionPool2.getHttpConnectionCount();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test07138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07138");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient0.setFollowProtocolRedirects(false);
        java.net.Proxy proxy8 = okHttpClient0.getProxy();
        boolean boolean9 = okHttpClient0.followProtocolRedirects;
        java.net.Proxy proxy10 = okHttpClient0.proxy;
        java.net.Proxy proxy11 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress12 = proxy11.address();
        java.net.SocketAddress socketAddress13 = proxy11.address();
        com.squareup.okhttp.OkHttpClient okHttpClient14 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool15 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient14.connectionPool = connectionPool15;
        java.net.ResponseCache responseCache17 = null;
        okHttpClient14.responseCache = responseCache17;
        com.squareup.okhttp.OkAuthenticator okAuthenticator19 = null;
        okHttpClient14.authenticator = okAuthenticator19;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory21 = okHttpClient14.getSslSocketFactory();
        boolean boolean22 = proxy11.equals((java.lang.Object) okHttpClient14);
        com.squareup.okhttp.OkHttpClient okHttpClient23 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier24 = null;
        okHttpClient23.hostnameVerifier = hostnameVerifier24;
        java.net.ResponseCache responseCache26 = null;
        okHttpClient23.responseCache = responseCache26;
        javax.net.ssl.HostnameVerifier hostnameVerifier28 = okHttpClient23.hostnameVerifier;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory29 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient30 = okHttpClient23.setSSLSocketFactory(sSLSocketFactory29);
        java.util.List<java.lang.String> strList31 = okHttpClient23.getTransports();
        boolean boolean32 = proxy11.equals((java.lang.Object) strList31);
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient0.setProxy(proxy11);
        okHttpClient0.followProtocolRedirects = true;
        com.squareup.okhttp.OkHttpClient okHttpClient36 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier37 = null;
        okHttpClient36.hostnameVerifier = hostnameVerifier37;
        java.net.ResponseCache responseCache39 = null;
        okHttpClient36.responseCache = responseCache39;
        javax.net.ssl.HostnameVerifier hostnameVerifier41 = okHttpClient36.hostnameVerifier;
        java.net.Proxy proxy42 = okHttpClient36.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient43 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache44 = okHttpClient43.okResponseCache();
        java.net.ResponseCache responseCache45 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient46 = okHttpClient43.setResponseCache(responseCache45);
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList49 = new java.util.ArrayList<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        okHttpClient43.transports = strList49;
        okHttpClient36.transports = strList49;
        javax.net.ssl.HostnameVerifier hostnameVerifier53 = null;
        okHttpClient36.hostnameVerifier = hostnameVerifier53;
        com.squareup.okhttp.OkHttpClient okHttpClient55 = new com.squareup.okhttp.OkHttpClient(okHttpClient36);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory56 = okHttpClient36.sslSocketFactory;
        java.net.CookieHandler cookieHandler57 = okHttpClient36.cookieHandler;
        java.net.CookieHandler cookieHandler58 = null;
        okHttpClient36.cookieHandler = cookieHandler58;
        java.util.List<java.lang.String> strList60 = okHttpClient36.getTransports();
        // The following exception was thrown during execution in test generation
        try {
            com.squareup.okhttp.OkHttpClient okHttpClient61 = okHttpClient0.setTransports(strList60);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: transports doesn't contain http/1.1: [hi!]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNotNull(okHttpClient7);
        org.junit.Assert.assertNull(proxy8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(proxy10);
        org.junit.Assert.assertNotNull(proxy11);
        org.junit.Assert.assertNull(socketAddress12);
        org.junit.Assert.assertNull(socketAddress13);
        org.junit.Assert.assertNotNull(connectionPool15);
        org.junit.Assert.assertNull(sSLSocketFactory21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(hostnameVerifier28);
        org.junit.Assert.assertNotNull(okHttpClient30);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(okHttpClient33);
        org.junit.Assert.assertNull(hostnameVerifier41);
        org.junit.Assert.assertNull(proxy42);
        org.junit.Assert.assertNull(okResponseCache44);
        org.junit.Assert.assertNotNull(okHttpClient46);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(sSLSocketFactory56);
        org.junit.Assert.assertNull(cookieHandler57);
        org.junit.Assert.assertNotNull(strList60);
    }

    @Test
    public void test07139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07139");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.OkAuthenticator okAuthenticator12 = okHttpClient11.getAuthenticator();
        java.net.ProxySelector proxySelector13 = okHttpClient11.getProxySelector();
        java.net.ResponseCache responseCache14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient11.setResponseCache(responseCache14);
        java.net.CookieHandler cookieHandler16 = null;
        okHttpClient15.cookieHandler = cookieHandler16;
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = okHttpClient15.getHostnameVerifier();
        java.net.ResponseCache responseCache19 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient15.setResponseCache(responseCache19);
        com.squareup.okhttp.OkHttpClient okHttpClient21 = new com.squareup.okhttp.OkHttpClient(okHttpClient20);
        java.net.ResponseCache responseCache22 = okHttpClient20.getResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient23 = new com.squareup.okhttp.OkHttpClient(okHttpClient20);
        javax.net.ssl.HostnameVerifier hostnameVerifier24 = okHttpClient23.hostnameVerifier;
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(okAuthenticator12);
        org.junit.Assert.assertNull(proxySelector13);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNull(hostnameVerifier18);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNull(responseCache22);
        org.junit.Assert.assertNull(hostnameVerifier24);
    }

    @Test
    public void test07140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07140");
        com.squareup.okhttp.ConnectionPool connectionPool2 = new com.squareup.okhttp.ConnectionPool((-1), (long) (byte) 10);
        int int3 = connectionPool2.getConnectionCount();
        com.squareup.okhttp.Address address4 = null;
        com.squareup.okhttp.Connection connection5 = connectionPool2.get(address4);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(connection5);
    }

    @Test
    public void test07141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07141");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        java.net.ResponseCache responseCache12 = okHttpClient0.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory13 = okHttpClient0.sslSocketFactory;
        java.net.ResponseCache responseCache14 = okHttpClient0.getResponseCache();
        java.net.ProxySelector proxySelector15 = okHttpClient0.getProxySelector();
        com.squareup.okhttp.OkHttpClient okHttpClient16 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool17 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient16.connectionPool = connectionPool17;
        com.squareup.okhttp.OkAuthenticator okAuthenticator19 = null;
        okHttpClient16.authenticator = okAuthenticator19;
        java.util.List<java.lang.String> strList21 = okHttpClient16.transports;
        java.net.ResponseCache responseCache22 = null;
        okHttpClient16.responseCache = responseCache22;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier25 = null;
        okHttpClient24.hostnameVerifier = hostnameVerifier25;
        java.net.ResponseCache responseCache27 = null;
        okHttpClient24.responseCache = responseCache27;
        javax.net.ssl.HostnameVerifier hostnameVerifier29 = okHttpClient24.hostnameVerifier;
        java.net.Proxy proxy30 = okHttpClient24.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool33 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient24.connectionPool = connectionPool33;
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient24.copyWithDefaults();
        java.net.Proxy proxy36 = okHttpClient35.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier37 = okHttpClient35.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient16.setHostnameVerifier(hostnameVerifier37);
        java.net.CookieHandler cookieHandler39 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient40 = okHttpClient38.setCookieHandler(cookieHandler39);
        com.squareup.okhttp.OkHttpClient okHttpClient41 = okHttpClient38.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool42 = okHttpClient38.connectionPool;
        javax.net.ssl.HostnameVerifier hostnameVerifier43 = okHttpClient38.hostnameVerifier;
        okHttpClient0.hostnameVerifier = hostnameVerifier43;
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(responseCache12);
        org.junit.Assert.assertNull(sSLSocketFactory13);
        org.junit.Assert.assertNull(responseCache14);
        org.junit.Assert.assertNull(proxySelector15);
        org.junit.Assert.assertNotNull(connectionPool17);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNull(hostnameVerifier29);
        org.junit.Assert.assertNull(proxy30);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNull(proxy36);
        org.junit.Assert.assertNotNull(hostnameVerifier37);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNotNull(okHttpClient40);
        org.junit.Assert.assertNotNull(okHttpClient41);
        org.junit.Assert.assertNotNull(connectionPool42);
        org.junit.Assert.assertNotNull(hostnameVerifier43);
    }

    @Test
    public void test07142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07142");
        com.squareup.okhttp.ConnectionPool connectionPool2 = new com.squareup.okhttp.ConnectionPool(100, 100L);
        connectionPool2.evictAll();
        com.squareup.okhttp.Connection connection4 = null;
        // The following exception was thrown during execution in test generation
        try {
            connectionPool2.maybeShare(connection4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test07143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07143");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.OkAuthenticator okAuthenticator12 = okHttpClient11.getAuthenticator();
        java.net.ProxySelector proxySelector13 = okHttpClient11.getProxySelector();
        java.net.ProxySelector proxySelector14 = null;
        okHttpClient11.proxySelector = proxySelector14;
        java.net.ProxySelector proxySelector16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient11.setProxySelector(proxySelector16);
        java.net.CookieHandler cookieHandler18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient17.setCookieHandler(cookieHandler18);
        java.net.CookieHandler cookieHandler20 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient17.setCookieHandler(cookieHandler20);
        java.util.List<java.lang.String> strList22 = okHttpClient21.getTransports();
        java.util.List<java.lang.String> strList23 = okHttpClient21.transports;
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(okAuthenticator12);
        org.junit.Assert.assertNull(proxySelector13);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNull(strList23);
    }

    @Test
    public void test07144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07144");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.CookieHandler cookieHandler5 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = null;
        okHttpClient6.hostnameVerifier = hostnameVerifier7;
        java.net.ResponseCache responseCache9 = null;
        okHttpClient6.responseCache = responseCache9;
        java.util.List<java.lang.String> strList11 = okHttpClient6.transports;
        com.squareup.okhttp.ConnectionPool connectionPool12 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient6.connectionPool = connectionPool12;
        java.net.Proxy proxy14 = null;
        okHttpClient6.proxy = proxy14;
        java.util.Set<com.squareup.okhttp.Route> routeSet16 = okHttpClient6.failedRoutes;
        okHttpClient0.failedRoutes = routeSet16;
        java.net.ProxySelector proxySelector18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient0.setProxySelector(proxySelector18);
        com.squareup.okhttp.OkHttpClient okHttpClient20 = new com.squareup.okhttp.OkHttpClient(okHttpClient19);
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient20.setFollowProtocolRedirects(false);
        java.net.ProxySelector proxySelector23 = null;
        okHttpClient20.proxySelector = proxySelector23;
        java.net.CookieHandler cookieHandler25 = null;
        okHttpClient20.cookieHandler = cookieHandler25;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = new com.squareup.okhttp.OkHttpClient(okHttpClient20);
        java.util.List<java.lang.String> strList28 = okHttpClient27.transports;
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNotNull(routeSet16);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNull(strList28);
    }

    @Test
    public void test07145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07145");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory6 = okHttpClient0.sslSocketFactory;
        java.net.CookieHandler cookieHandler7 = okHttpClient0.cookieHandler;
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = okHttpClient0.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool10 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient9.connectionPool = connectionPool10;
        com.squareup.okhttp.OkAuthenticator okAuthenticator12 = null;
        okHttpClient9.authenticator = okAuthenticator12;
        java.util.List<java.lang.String> strList14 = okHttpClient9.transports;
        java.net.ResponseCache responseCache15 = null;
        okHttpClient9.responseCache = responseCache15;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = null;
        okHttpClient17.hostnameVerifier = hostnameVerifier18;
        java.net.ResponseCache responseCache20 = null;
        okHttpClient17.responseCache = responseCache20;
        javax.net.ssl.HostnameVerifier hostnameVerifier22 = okHttpClient17.hostnameVerifier;
        java.net.Proxy proxy23 = okHttpClient17.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool26 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient17.connectionPool = connectionPool26;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient17.copyWithDefaults();
        java.net.Proxy proxy29 = okHttpClient28.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = okHttpClient28.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient9.setHostnameVerifier(hostnameVerifier30);
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient0.setHostnameVerifier(hostnameVerifier30);
        java.net.Proxy proxy33 = okHttpClient32.proxy;
        java.util.Set<com.squareup.okhttp.Route> routeSet34 = okHttpClient32.failedRoutes;
        com.squareup.okhttp.ConnectionPool connectionPool35 = okHttpClient32.getConnectionPool();
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(sSLSocketFactory6);
        org.junit.Assert.assertNull(cookieHandler7);
        org.junit.Assert.assertNull(hostnameVerifier8);
        org.junit.Assert.assertNotNull(connectionPool10);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(hostnameVerifier22);
        org.junit.Assert.assertNull(proxy23);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNull(proxy29);
        org.junit.Assert.assertNotNull(hostnameVerifier30);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertNull(proxy33);
        org.junit.Assert.assertNotNull(routeSet34);
        org.junit.Assert.assertNull(connectionPool35);
    }

    @Test
    public void test07146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07146");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache1 = okHttpClient0.okResponseCache();
        java.net.ResponseCache responseCache2 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.setResponseCache(responseCache2);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        okHttpClient0.transports = strList6;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory9);
        java.net.CookieHandler cookieHandler11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient0.setCookieHandler(cookieHandler11);
        java.net.Proxy proxy13 = okHttpClient12.getProxy();
        com.squareup.okhttp.OkAuthenticator okAuthenticator14 = null;
        okHttpClient12.authenticator = okAuthenticator14;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = new com.squareup.okhttp.OkHttpClient(okHttpClient12);
        com.squareup.okhttp.OkAuthenticator okAuthenticator17 = okHttpClient16.getAuthenticator();
        org.junit.Assert.assertNull(okResponseCache1);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertNull(proxy13);
        org.junit.Assert.assertNull(okAuthenticator17);
    }

    @Test
    public void test07147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07147");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.CookieHandler cookieHandler8 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache9 = okHttpClient0.okResponseCache();
        java.net.CookieHandler cookieHandler10 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory12 = okHttpClient11.sslSocketFactory;
        com.squareup.okhttp.OkAuthenticator okAuthenticator13 = okHttpClient11.authenticator;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache14 = okHttpClient11.okResponseCache();
        java.net.Proxy proxy15 = okHttpClient11.getProxy();
        java.net.ResponseCache responseCache16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient11.setResponseCache(responseCache16);
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier19 = null;
        okHttpClient18.hostnameVerifier = hostnameVerifier19;
        java.net.ResponseCache responseCache21 = null;
        okHttpClient18.responseCache = responseCache21;
        java.util.List<java.lang.String> strList23 = okHttpClient18.transports;
        javax.net.ssl.HostnameVerifier hostnameVerifier24 = null;
        okHttpClient18.hostnameVerifier = hostnameVerifier24;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache26 = okHttpClient18.okResponseCache();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory27 = okHttpClient18.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient28 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier29 = null;
        okHttpClient28.hostnameVerifier = hostnameVerifier29;
        java.net.ResponseCache responseCache31 = null;
        okHttpClient28.responseCache = responseCache31;
        javax.net.ssl.HostnameVerifier hostnameVerifier33 = okHttpClient28.hostnameVerifier;
        java.net.Proxy proxy34 = okHttpClient28.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool37 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient28.connectionPool = connectionPool37;
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient28.copyWithDefaults();
        java.net.Proxy proxy40 = okHttpClient39.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier41 = okHttpClient39.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient18.setHostnameVerifier(hostnameVerifier41);
        okHttpClient17.hostnameVerifier = hostnameVerifier41;
        com.squareup.okhttp.OkHttpClient okHttpClient44 = new com.squareup.okhttp.OkHttpClient(okHttpClient17);
        java.net.ProxySelector proxySelector45 = null;
        okHttpClient17.proxySelector = proxySelector45;
        java.net.URL uRL47 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.HttpURLConnection httpURLConnection48 = okHttpClient17.open(uRL47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNull(cookieHandler8);
        org.junit.Assert.assertNull(okResponseCache9);
        org.junit.Assert.assertNull(cookieHandler10);
        org.junit.Assert.assertNull(sSLSocketFactory12);
        org.junit.Assert.assertNull(okAuthenticator13);
        org.junit.Assert.assertNull(okResponseCache14);
        org.junit.Assert.assertNull(proxy15);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNull(okResponseCache26);
        org.junit.Assert.assertNull(sSLSocketFactory27);
        org.junit.Assert.assertNull(hostnameVerifier33);
        org.junit.Assert.assertNull(proxy34);
        org.junit.Assert.assertNotNull(okHttpClient39);
        org.junit.Assert.assertNull(proxy40);
        org.junit.Assert.assertNotNull(hostnameVerifier41);
        org.junit.Assert.assertNotNull(okHttpClient42);
    }

    @Test
    public void test07148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07148");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.ResponseCache responseCache5 = null;
        okHttpClient4.responseCache = responseCache5;
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = okHttpClient4.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient4.setFollowProtocolRedirects(false);
        java.net.ResponseCache responseCache10 = okHttpClient9.responseCache;
        com.squareup.okhttp.ConnectionPool connectionPool13 = new com.squareup.okhttp.ConnectionPool(0, (long) (short) 10);
        connectionPool13.evictAll();
        com.squareup.okhttp.Address address15 = null;
        com.squareup.okhttp.Connection connection16 = connectionPool13.get(address15);
        okHttpClient9.connectionPool = connectionPool13;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient9.setFollowProtocolRedirects(false);
        java.net.ResponseCache responseCache20 = okHttpClient9.responseCache;
        java.net.ProxySelector proxySelector21 = okHttpClient9.proxySelector;
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(hostnameVerifier7);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNull(responseCache10);
        org.junit.Assert.assertNull(connection16);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNull(responseCache20);
        org.junit.Assert.assertNull(proxySelector21);
    }

    @Test
    public void test07149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07149");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient0.connectionPool = connectionPool9;
        java.util.List<java.lang.String> strList11 = okHttpClient0.getTransports();
        com.squareup.okhttp.OkHttpClient okHttpClient12 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        java.net.ResponseCache responseCache13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient12.setResponseCache(responseCache13);
        com.squareup.okhttp.ConnectionPool connectionPool15 = okHttpClient14.getConnectionPool();
        com.squareup.okhttp.OkHttpClient okHttpClient16 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier17 = null;
        okHttpClient16.hostnameVerifier = hostnameVerifier17;
        java.net.ProxySelector proxySelector19 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient16.setProxySelector(proxySelector19);
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient20.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient21.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet23 = okHttpClient22.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier25 = null;
        okHttpClient24.hostnameVerifier = hostnameVerifier25;
        java.net.ResponseCache responseCache27 = null;
        okHttpClient24.responseCache = responseCache27;
        javax.net.ssl.HostnameVerifier hostnameVerifier29 = okHttpClient24.hostnameVerifier;
        java.net.Proxy proxy30 = okHttpClient24.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool33 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient24.connectionPool = connectionPool33;
        java.util.List<java.lang.String> strList35 = okHttpClient24.getTransports();
        javax.net.ssl.HostnameVerifier hostnameVerifier36 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient24.setHostnameVerifier(hostnameVerifier36);
        com.squareup.okhttp.OkHttpClient okHttpClient38 = new com.squareup.okhttp.OkHttpClient(okHttpClient24);
        java.util.List<java.lang.String> strList39 = okHttpClient24.getTransports();
        com.squareup.okhttp.OkHttpClient okHttpClient40 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool41 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient40.connectionPool = connectionPool41;
        com.squareup.okhttp.OkHttpClient okHttpClient43 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier44 = null;
        okHttpClient43.hostnameVerifier = hostnameVerifier44;
        java.net.ResponseCache responseCache46 = null;
        okHttpClient43.responseCache = responseCache46;
        java.util.List<java.lang.String> strList48 = okHttpClient43.transports;
        com.squareup.okhttp.ConnectionPool connectionPool49 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient43.connectionPool = connectionPool49;
        com.squareup.okhttp.OkHttpClient okHttpClient51 = okHttpClient40.setConnectionPool(connectionPool49);
        com.squareup.okhttp.ConnectionPool connectionPool52 = okHttpClient51.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator53 = okHttpClient51.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool56 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient51.connectionPool = connectionPool56;
        java.net.ResponseCache responseCache58 = okHttpClient51.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory59 = okHttpClient51.sslSocketFactory;
        java.net.Proxy proxy60 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress61 = proxy60.address();
        com.squareup.okhttp.OkHttpClient okHttpClient62 = okHttpClient51.setProxy(proxy60);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory63 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient64 = okHttpClient51.setSSLSocketFactory(sSLSocketFactory63);
        com.squareup.okhttp.OkHttpClient okHttpClient65 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier66 = null;
        okHttpClient65.hostnameVerifier = hostnameVerifier66;
        java.net.ResponseCache responseCache68 = null;
        okHttpClient65.responseCache = responseCache68;
        javax.net.ssl.HostnameVerifier hostnameVerifier70 = okHttpClient65.hostnameVerifier;
        java.net.Proxy proxy71 = okHttpClient65.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool74 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient65.connectionPool = connectionPool74;
        com.squareup.okhttp.OkHttpClient okHttpClient76 = okHttpClient65.copyWithDefaults();
        java.net.ResponseCache responseCache77 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient78 = okHttpClient76.setResponseCache(responseCache77);
        com.squareup.okhttp.OkAuthenticator okAuthenticator79 = okHttpClient76.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient80 = okHttpClient51.setAuthenticator(okAuthenticator79);
        java.net.Proxy proxy81 = okHttpClient80.getProxy();
        java.net.ResponseCache responseCache82 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient83 = okHttpClient80.setResponseCache(responseCache82);
        com.squareup.okhttp.OkAuthenticator okAuthenticator84 = okHttpClient80.getAuthenticator();
        okHttpClient24.authenticator = okAuthenticator84;
        okHttpClient22.authenticator = okAuthenticator84;
        com.squareup.okhttp.OkHttpClient okHttpClient87 = okHttpClient14.setAuthenticator(okAuthenticator84);
        com.squareup.okhttp.OkHttpClient okHttpClient89 = okHttpClient14.setFollowProtocolRedirects(false);
        com.squareup.okhttp.OkHttpClient okHttpClient91 = okHttpClient89.setFollowProtocolRedirects(true);
        com.squareup.okhttp.OkHttpClient okHttpClient92 = new com.squareup.okhttp.OkHttpClient(okHttpClient89);
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(okHttpClient14);
        org.junit.Assert.assertNull(connectionPool15);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNotNull(routeSet23);
        org.junit.Assert.assertNull(hostnameVerifier29);
        org.junit.Assert.assertNull(proxy30);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNotNull(okHttpClient37);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNotNull(connectionPool41);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNotNull(connectionPool49);
        org.junit.Assert.assertNotNull(okHttpClient51);
        org.junit.Assert.assertNotNull(connectionPool52);
        org.junit.Assert.assertNull(okAuthenticator53);
        org.junit.Assert.assertNull(responseCache58);
        org.junit.Assert.assertNull(sSLSocketFactory59);
        org.junit.Assert.assertNotNull(proxy60);
        org.junit.Assert.assertNull(socketAddress61);
        org.junit.Assert.assertNotNull(okHttpClient62);
        org.junit.Assert.assertNotNull(okHttpClient64);
        org.junit.Assert.assertNull(hostnameVerifier70);
        org.junit.Assert.assertNull(proxy71);
        org.junit.Assert.assertNotNull(okHttpClient76);
        org.junit.Assert.assertNotNull(okHttpClient78);
        org.junit.Assert.assertNotNull(okAuthenticator79);
        org.junit.Assert.assertNotNull(okHttpClient80);
        org.junit.Assert.assertNotNull(proxy81);
        org.junit.Assert.assertNotNull(okHttpClient83);
        org.junit.Assert.assertNotNull(okAuthenticator84);
        org.junit.Assert.assertNotNull(okHttpClient87);
        org.junit.Assert.assertNotNull(okHttpClient89);
        org.junit.Assert.assertNotNull(okHttpClient91);
    }

    @Test
    public void test07150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07150");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.CookieHandler cookieHandler8 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache9 = okHttpClient0.okResponseCache();
        java.net.CookieHandler cookieHandler10 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        java.net.Proxy proxy12 = java.net.Proxy.NO_PROXY;
        boolean boolean14 = proxy12.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type15 = proxy12.type();
        java.net.SocketAddress socketAddress16 = proxy12.address();
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = null;
        okHttpClient17.hostnameVerifier = hostnameVerifier18;
        java.net.ResponseCache responseCache20 = null;
        okHttpClient17.responseCache = responseCache20;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache22 = okHttpClient17.okResponseCache();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory23 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient17.setSSLSocketFactory(sSLSocketFactory23);
        boolean boolean25 = proxy12.equals((java.lang.Object) okHttpClient17);
        java.net.SocketAddress socketAddress26 = proxy12.address();
        okHttpClient11.proxy = proxy12;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = new com.squareup.okhttp.OkHttpClient(okHttpClient11);
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient11.copyWithDefaults();
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNull(cookieHandler8);
        org.junit.Assert.assertNull(okResponseCache9);
        org.junit.Assert.assertNull(cookieHandler10);
        org.junit.Assert.assertNotNull(proxy12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + type15 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type15.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress16);
        org.junit.Assert.assertNull(okResponseCache22);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(socketAddress26);
        org.junit.Assert.assertNotNull(okHttpClient29);
    }

    @Test
    public void test07151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07151");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient0.connectionPool = connectionPool9;
        java.util.List<java.lang.String> strList11 = okHttpClient0.getTransports();
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient0.setHostnameVerifier(hostnameVerifier12);
        com.squareup.okhttp.ConnectionPool connectionPool14 = okHttpClient13.connectionPool;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier16 = null;
        okHttpClient15.hostnameVerifier = hostnameVerifier16;
        java.net.ResponseCache responseCache18 = null;
        okHttpClient15.responseCache = responseCache18;
        java.util.List<java.lang.String> strList20 = okHttpClient15.transports;
        javax.net.ssl.HostnameVerifier hostnameVerifier21 = null;
        okHttpClient15.hostnameVerifier = hostnameVerifier21;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache23 = okHttpClient15.okResponseCache();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory24 = okHttpClient15.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient25 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier26 = null;
        okHttpClient25.hostnameVerifier = hostnameVerifier26;
        java.net.ResponseCache responseCache28 = null;
        okHttpClient25.responseCache = responseCache28;
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = okHttpClient25.hostnameVerifier;
        java.net.Proxy proxy31 = okHttpClient25.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool34 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient25.connectionPool = connectionPool34;
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient25.copyWithDefaults();
        java.net.Proxy proxy37 = okHttpClient36.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier38 = okHttpClient36.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient15.setHostnameVerifier(hostnameVerifier38);
        javax.net.ssl.HostnameVerifier hostnameVerifier40 = okHttpClient15.hostnameVerifier;
        okHttpClient13.hostnameVerifier = hostnameVerifier40;
        java.net.ResponseCache responseCache42 = okHttpClient13.responseCache;
        com.squareup.okhttp.OkHttpClient okHttpClient43 = new com.squareup.okhttp.OkHttpClient(okHttpClient13);
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNotNull(connectionPool14);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(okResponseCache23);
        org.junit.Assert.assertNull(sSLSocketFactory24);
        org.junit.Assert.assertNull(hostnameVerifier30);
        org.junit.Assert.assertNull(proxy31);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNull(proxy37);
        org.junit.Assert.assertNotNull(hostnameVerifier38);
        org.junit.Assert.assertNotNull(okHttpClient39);
        org.junit.Assert.assertNotNull(hostnameVerifier40);
        org.junit.Assert.assertNull(responseCache42);
    }

    @Test
    public void test07152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07152");
        com.squareup.okhttp.ConnectionPool connectionPool2 = new com.squareup.okhttp.ConnectionPool((int) (byte) 100, 1L);
        int int3 = connectionPool2.getSpdyConnectionCount();
        com.squareup.okhttp.Connection connection4 = null;
        // The following exception was thrown during execution in test generation
        try {
            connectionPool2.recycle(connection4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test07153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07153");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        com.squareup.okhttp.ConnectionPool connectionPool8 = okHttpClient0.connectionPool;
        int int9 = connectionPool8.getHttpConnectionCount();
        int int10 = connectionPool8.getSpdyConnectionCount();
        int int11 = connectionPool8.getHttpConnectionCount();
        int int12 = connectionPool8.getConnectionCount();
        com.squareup.okhttp.Address address13 = null;
        com.squareup.okhttp.Connection connection14 = connectionPool8.get(address13);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNotNull(connectionPool8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(connection14);
    }

    @Test
    public void test07154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07154");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache1 = okHttpClient0.okResponseCache();
        java.net.ResponseCache responseCache2 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.setResponseCache(responseCache2);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        okHttpClient0.transports = strList6;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory9);
        java.net.CookieHandler cookieHandler11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient0.setCookieHandler(cookieHandler11);
        com.squareup.okhttp.OkAuthenticator okAuthenticator13 = okHttpClient0.getAuthenticator();
        java.net.ResponseCache responseCache14 = okHttpClient0.responseCache;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        java.net.ProxySelector proxySelector16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient15.setProxySelector(proxySelector16);
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient(okHttpClient15);
        java.net.ResponseCache responseCache19 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient18.setResponseCache(responseCache19);
        com.squareup.okhttp.OkHttpClient okHttpClient21 = new com.squareup.okhttp.OkHttpClient(okHttpClient18);
        java.util.List<java.lang.String> strList22 = okHttpClient21.transports;
        org.junit.Assert.assertNull(okResponseCache1);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertNull(okAuthenticator13);
        org.junit.Assert.assertNull(responseCache14);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNull(strList22);
    }

    @Test
    public void test07155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07155");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.CookieHandler cookieHandler5 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = null;
        okHttpClient6.hostnameVerifier = hostnameVerifier7;
        java.net.ResponseCache responseCache9 = null;
        okHttpClient6.responseCache = responseCache9;
        java.util.List<java.lang.String> strList11 = okHttpClient6.transports;
        com.squareup.okhttp.ConnectionPool connectionPool12 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient6.connectionPool = connectionPool12;
        java.net.Proxy proxy14 = null;
        okHttpClient6.proxy = proxy14;
        java.util.Set<com.squareup.okhttp.Route> routeSet16 = okHttpClient6.failedRoutes;
        okHttpClient0.failedRoutes = routeSet16;
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient0.setHostnameVerifier(hostnameVerifier18);
        java.net.CookieHandler cookieHandler20 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier22 = null;
        okHttpClient21.hostnameVerifier = hostnameVerifier22;
        java.net.ResponseCache responseCache24 = null;
        okHttpClient21.responseCache = responseCache24;
        javax.net.ssl.HostnameVerifier hostnameVerifier26 = okHttpClient21.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient21.setFollowProtocolRedirects(false);
        java.net.Proxy proxy29 = okHttpClient21.getProxy();
        boolean boolean30 = okHttpClient21.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient21.copyWithDefaults();
        com.squareup.okhttp.OkAuthenticator okAuthenticator32 = okHttpClient21.getAuthenticator();
        java.util.Set<com.squareup.okhttp.Route> routeSet33 = okHttpClient21.failedRoutes;
        okHttpClient0.failedRoutes = routeSet33;
        java.net.CookieHandler cookieHandler35 = null;
        okHttpClient0.cookieHandler = cookieHandler35;
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNotNull(routeSet16);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNull(cookieHandler20);
        org.junit.Assert.assertNull(hostnameVerifier26);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNull(proxy29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNull(okAuthenticator32);
        org.junit.Assert.assertNotNull(routeSet33);
    }

    @Test
    public void test07156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07156");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        java.net.CookieHandler cookieHandler7 = null;
        okHttpClient0.cookieHandler = cookieHandler7;
        okHttpClient0.followProtocolRedirects = true;
        java.net.CookieHandler cookieHandler11 = okHttpClient0.getCookieHandler();
        java.net.CookieHandler cookieHandler12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient0.setCookieHandler(cookieHandler12);
        com.squareup.okhttp.OkHttpClient okHttpClient14 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool15 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient14.connectionPool = connectionPool15;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = null;
        okHttpClient17.hostnameVerifier = hostnameVerifier18;
        java.net.ResponseCache responseCache20 = null;
        okHttpClient17.responseCache = responseCache20;
        java.util.List<java.lang.String> strList22 = okHttpClient17.transports;
        com.squareup.okhttp.ConnectionPool connectionPool23 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient17.connectionPool = connectionPool23;
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient14.setConnectionPool(connectionPool23);
        com.squareup.okhttp.ConnectionPool connectionPool26 = okHttpClient25.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator27 = okHttpClient25.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool30 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient25.connectionPool = connectionPool30;
        java.net.ResponseCache responseCache32 = okHttpClient25.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory33 = okHttpClient25.sslSocketFactory;
        java.net.Proxy proxy34 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress35 = proxy34.address();
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient25.setProxy(proxy34);
        com.squareup.okhttp.OkHttpClient okHttpClient37 = new com.squareup.okhttp.OkHttpClient(okHttpClient36);
        java.net.Proxy proxy38 = okHttpClient37.proxy;
        java.net.Proxy proxy39 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress40 = proxy39.address();
        java.net.Proxy.Type type41 = proxy39.type();
        okHttpClient37.proxy = proxy39;
        com.squareup.okhttp.OkHttpClient okHttpClient43 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool44 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient43.connectionPool = connectionPool44;
        com.squareup.okhttp.OkHttpClient okHttpClient46 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier47 = null;
        okHttpClient46.hostnameVerifier = hostnameVerifier47;
        java.net.ResponseCache responseCache49 = null;
        okHttpClient46.responseCache = responseCache49;
        java.util.List<java.lang.String> strList51 = okHttpClient46.transports;
        com.squareup.okhttp.ConnectionPool connectionPool52 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient46.connectionPool = connectionPool52;
        com.squareup.okhttp.OkHttpClient okHttpClient54 = okHttpClient43.setConnectionPool(connectionPool52);
        com.squareup.okhttp.ConnectionPool connectionPool55 = okHttpClient54.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator56 = okHttpClient54.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool59 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient54.connectionPool = connectionPool59;
        java.net.ResponseCache responseCache61 = okHttpClient54.responseCache;
        java.util.List<java.lang.String> strList62 = okHttpClient54.getTransports();
        com.squareup.okhttp.OkHttpClient okHttpClient63 = okHttpClient54.copyWithDefaults();
        java.net.ProxySelector proxySelector64 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient65 = okHttpClient54.setProxySelector(proxySelector64);
        javax.net.ssl.HostnameVerifier hostnameVerifier66 = okHttpClient65.getHostnameVerifier();
        boolean boolean67 = proxy39.equals((java.lang.Object) hostnameVerifier66);
        okHttpClient13.proxy = proxy39;
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNull(cookieHandler11);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNotNull(connectionPool15);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNotNull(connectionPool23);
        org.junit.Assert.assertNotNull(okHttpClient25);
        org.junit.Assert.assertNotNull(connectionPool26);
        org.junit.Assert.assertNull(okAuthenticator27);
        org.junit.Assert.assertNull(responseCache32);
        org.junit.Assert.assertNull(sSLSocketFactory33);
        org.junit.Assert.assertNotNull(proxy34);
        org.junit.Assert.assertNull(socketAddress35);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNull(proxy38);
        org.junit.Assert.assertNotNull(proxy39);
        org.junit.Assert.assertNull(socketAddress40);
        org.junit.Assert.assertTrue("'" + type41 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type41.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNotNull(connectionPool44);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNotNull(connectionPool52);
        org.junit.Assert.assertNotNull(okHttpClient54);
        org.junit.Assert.assertNotNull(connectionPool55);
        org.junit.Assert.assertNull(okAuthenticator56);
        org.junit.Assert.assertNull(responseCache61);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertNotNull(okHttpClient63);
        org.junit.Assert.assertNotNull(okHttpClient65);
        org.junit.Assert.assertNull(hostnameVerifier66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test07157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07157");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory8 = okHttpClient0.getSslSocketFactory();
        java.net.ProxySelector proxySelector9 = null;
        okHttpClient0.proxySelector = proxySelector9;
        com.squareup.okhttp.ConnectionPool connectionPool11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient0.setConnectionPool(connectionPool11);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory13 = okHttpClient12.getSslSocketFactory();
        java.net.ProxySelector proxySelector14 = okHttpClient12.proxySelector;
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNull(sSLSocketFactory8);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertNull(sSLSocketFactory13);
        org.junit.Assert.assertNull(proxySelector14);
    }

    @Test
    public void test07158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07158");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        javax.net.ssl.HostnameVerifier hostnameVerifier6 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier6;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache8 = okHttpClient0.okResponseCache();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory9 = okHttpClient0.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient10 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier11 = null;
        okHttpClient10.hostnameVerifier = hostnameVerifier11;
        java.net.ResponseCache responseCache13 = null;
        okHttpClient10.responseCache = responseCache13;
        javax.net.ssl.HostnameVerifier hostnameVerifier15 = okHttpClient10.hostnameVerifier;
        java.net.Proxy proxy16 = okHttpClient10.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool19 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient10.connectionPool = connectionPool19;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient10.copyWithDefaults();
        java.net.Proxy proxy22 = okHttpClient21.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier23 = okHttpClient21.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient0.setHostnameVerifier(hostnameVerifier23);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory25 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory25);
        boolean boolean27 = okHttpClient26.followProtocolRedirects;
        javax.net.ssl.HostnameVerifier hostnameVerifier28 = okHttpClient26.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient29 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = null;
        okHttpClient29.hostnameVerifier = hostnameVerifier30;
        java.net.ProxySelector proxySelector32 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient29.setProxySelector(proxySelector32);
        java.net.ResponseCache responseCache34 = null;
        okHttpClient33.responseCache = responseCache34;
        com.squareup.okhttp.OkHttpClient okHttpClient36 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier37 = null;
        okHttpClient36.hostnameVerifier = hostnameVerifier37;
        java.net.ResponseCache responseCache39 = null;
        okHttpClient36.responseCache = responseCache39;
        java.util.List<java.lang.String> strList41 = okHttpClient36.transports;
        com.squareup.okhttp.ConnectionPool connectionPool42 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient36.connectionPool = connectionPool42;
        java.net.CookieHandler cookieHandler44 = okHttpClient36.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache45 = okHttpClient36.okResponseCache();
        java.net.CookieHandler cookieHandler46 = okHttpClient36.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient47 = new com.squareup.okhttp.OkHttpClient(okHttpClient36);
        java.net.Proxy proxy48 = java.net.Proxy.NO_PROXY;
        boolean boolean50 = proxy48.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type51 = proxy48.type();
        java.net.SocketAddress socketAddress52 = proxy48.address();
        com.squareup.okhttp.OkHttpClient okHttpClient53 = okHttpClient36.setProxy(proxy48);
        com.squareup.okhttp.OkHttpClient okHttpClient54 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier55 = null;
        okHttpClient54.hostnameVerifier = hostnameVerifier55;
        java.net.ResponseCache responseCache57 = null;
        okHttpClient54.responseCache = responseCache57;
        java.util.List<java.lang.String> strList59 = okHttpClient54.transports;
        com.squareup.okhttp.ConnectionPool connectionPool60 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient54.connectionPool = connectionPool60;
        com.squareup.okhttp.OkHttpClient okHttpClient62 = okHttpClient54.copyWithDefaults();
        java.net.ProxySelector proxySelector63 = okHttpClient62.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory64 = okHttpClient62.getSslSocketFactory();
        okHttpClient53.sslSocketFactory = sSLSocketFactory64;
        java.lang.String[] strArray66 = sSLSocketFactory64.getDefaultCipherSuites();
        java.lang.String[] strArray67 = sSLSocketFactory64.getSupportedCipherSuites();
        java.net.Socket socket68 = sSLSocketFactory64.createSocket();
        okHttpClient33.sslSocketFactory = sSLSocketFactory64;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory70 = okHttpClient33.sslSocketFactory;
        java.lang.String[] strArray71 = sSLSocketFactory70.getSupportedCipherSuites();
        java.lang.String[] strArray72 = sSLSocketFactory70.getSupportedCipherSuites();
        okHttpClient26.sslSocketFactory = sSLSocketFactory70;
        javax.net.ssl.HostnameVerifier hostnameVerifier74 = okHttpClient26.getHostnameVerifier();
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNull(okResponseCache8);
        org.junit.Assert.assertNull(sSLSocketFactory9);
        org.junit.Assert.assertNull(hostnameVerifier15);
        org.junit.Assert.assertNull(proxy16);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNull(proxy22);
        org.junit.Assert.assertNotNull(hostnameVerifier23);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(hostnameVerifier28);
        org.junit.Assert.assertNotNull(okHttpClient33);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(connectionPool42);
        org.junit.Assert.assertNull(cookieHandler44);
        org.junit.Assert.assertNull(okResponseCache45);
        org.junit.Assert.assertNull(cookieHandler46);
        org.junit.Assert.assertNotNull(proxy48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + type51 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type51.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress52);
        org.junit.Assert.assertNotNull(okHttpClient53);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNotNull(connectionPool60);
        org.junit.Assert.assertNotNull(okHttpClient62);
// flaky:         org.junit.Assert.assertNull(proxySelector63);
        org.junit.Assert.assertNotNull(sSLSocketFactory64);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(socket68);
        org.junit.Assert.assertEquals(socket68.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(sSLSocketFactory70);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNotNull(hostnameVerifier74);
    }

    @Test
    public void test07159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07159");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory6 = okHttpClient0.sslSocketFactory;
        java.net.CookieHandler cookieHandler7 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache8 = okHttpClient0.okResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet9 = okHttpClient0.failedRoutes;
        com.squareup.okhttp.OkAuthenticator okAuthenticator10 = okHttpClient0.getAuthenticator();
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(sSLSocketFactory6);
        org.junit.Assert.assertNull(cookieHandler7);
        org.junit.Assert.assertNull(okResponseCache8);
        org.junit.Assert.assertNotNull(routeSet9);
        org.junit.Assert.assertNull(okAuthenticator10);
    }

    @Test
    public void test07160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07160");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache8 = okHttpClient7.okResponseCache();
        java.net.ResponseCache responseCache9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient7.setResponseCache(responseCache9);
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        okHttpClient7.transports = strList13;
        okHttpClient0.transports = strList13;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient0.setFollowProtocolRedirects(true);
        com.squareup.okhttp.OkHttpClient okHttpClient19 = new com.squareup.okhttp.OkHttpClient(okHttpClient18);
        java.net.CookieHandler cookieHandler20 = null;
        okHttpClient19.cookieHandler = cookieHandler20;
        java.net.ProxySelector proxySelector22 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient19.setProxySelector(proxySelector22);
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient19.copyWithDefaults();
        java.net.CookieHandler cookieHandler25 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient24.setCookieHandler(cookieHandler25);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory27 = okHttpClient24.sslSocketFactory;
        java.net.ResponseCache responseCache28 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient24.setResponseCache(responseCache28);
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNull(okResponseCache8);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNotNull(sSLSocketFactory27);
        org.junit.Assert.assertNotNull(okHttpClient29);
    }

    @Test
    public void test07161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07161");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        boolean boolean5 = okHttpClient0.getFollowProtocolRedirects();
        java.util.Set<com.squareup.okhttp.Route> routeSet6 = okHttpClient0.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient0.setFollowProtocolRedirects(false);
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient8.setFollowProtocolRedirects(true);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(routeSet6);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertNotNull(okHttpClient10);
    }

    @Test
    public void test07162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07162");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory8 = okHttpClient0.getSslSocketFactory();
        java.net.CookieHandler cookieHandler9 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.ConnectionPool connectionPool12 = new com.squareup.okhttp.ConnectionPool(10, 1L);
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient0.setConnectionPool(connectionPool12);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory14 = okHttpClient0.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient0.copyWithDefaults();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory16 = okHttpClient15.getSslSocketFactory();
        java.net.CookieHandler cookieHandler17 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient15.setCookieHandler(cookieHandler17);
        com.squareup.okhttp.OkAuthenticator okAuthenticator19 = okHttpClient18.authenticator;
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNull(sSLSocketFactory8);
        org.junit.Assert.assertNull(cookieHandler9);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNull(sSLSocketFactory14);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNotNull(sSLSocketFactory16);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNotNull(okAuthenticator19);
    }

    @Test
    public void test07163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07163");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache1 = okHttpClient0.okResponseCache();
        java.net.ResponseCache responseCache2 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.setResponseCache(responseCache2);
        java.net.ProxySelector proxySelector4 = okHttpClient0.getProxySelector();
        com.squareup.okhttp.OkAuthenticator okAuthenticator5 = okHttpClient0.getAuthenticator();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory6 = okHttpClient0.getSslSocketFactory();
        com.squareup.okhttp.ConnectionPool connectionPool7 = okHttpClient0.getConnectionPool();
        java.net.ResponseCache responseCache8 = null;
        okHttpClient0.responseCache = responseCache8;
        com.squareup.okhttp.OkAuthenticator okAuthenticator10 = okHttpClient0.getAuthenticator();
        javax.net.ssl.HostnameVerifier hostnameVerifier11 = okHttpClient0.hostnameVerifier;
        org.junit.Assert.assertNull(okResponseCache1);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertNull(proxySelector4);
        org.junit.Assert.assertNull(okAuthenticator5);
        org.junit.Assert.assertNull(sSLSocketFactory6);
        org.junit.Assert.assertNull(connectionPool7);
        org.junit.Assert.assertNull(okAuthenticator10);
        org.junit.Assert.assertNull(hostnameVerifier11);
    }

    @Test
    public void test07164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07164");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient0.setFollowProtocolRedirects(false);
        java.util.List<java.lang.String> strList8 = okHttpClient7.transports;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = new com.squareup.okhttp.OkHttpClient(okHttpClient7);
        com.squareup.okhttp.OkHttpClient okHttpClient10 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier11 = null;
        okHttpClient10.hostnameVerifier = hostnameVerifier11;
        java.net.ProxySelector proxySelector13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient10.setProxySelector(proxySelector13);
        javax.net.ssl.HostnameVerifier hostnameVerifier15 = okHttpClient10.hostnameVerifier;
        java.net.CookieHandler cookieHandler16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient10.setCookieHandler(cookieHandler16);
        com.squareup.okhttp.OkAuthenticator okAuthenticator18 = okHttpClient17.authenticator;
        java.net.ProxySelector proxySelector19 = okHttpClient17.getProxySelector();
        com.squareup.okhttp.OkHttpClient okHttpClient20 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier21 = null;
        okHttpClient20.hostnameVerifier = hostnameVerifier21;
        java.net.ResponseCache responseCache23 = null;
        okHttpClient20.responseCache = responseCache23;
        java.util.List<java.lang.String> strList25 = okHttpClient20.transports;
        com.squareup.okhttp.ConnectionPool connectionPool26 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient20.connectionPool = connectionPool26;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient20.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient29 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = null;
        okHttpClient29.hostnameVerifier = hostnameVerifier30;
        java.net.ResponseCache responseCache32 = null;
        okHttpClient29.responseCache = responseCache32;
        java.util.List<java.lang.String> strList34 = okHttpClient29.transports;
        com.squareup.okhttp.ConnectionPool connectionPool35 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient29.connectionPool = connectionPool35;
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient29.copyWithDefaults();
        java.net.ProxySelector proxySelector38 = okHttpClient37.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory39 = okHttpClient37.getSslSocketFactory();
        okHttpClient20.sslSocketFactory = sSLSocketFactory39;
        java.net.Socket socket41 = sSLSocketFactory39.createSocket();
        java.net.Socket socket42 = sSLSocketFactory39.createSocket();
        okHttpClient17.sslSocketFactory = sSLSocketFactory39;
        com.squareup.okhttp.OkHttpClient okHttpClient44 = okHttpClient9.setSSLSocketFactory(sSLSocketFactory39);
        java.util.List<java.lang.String> strList45 = okHttpClient44.transports;
        java.net.ProxySelector proxySelector46 = okHttpClient44.proxySelector;
        java.net.CookieHandler cookieHandler47 = okHttpClient44.getCookieHandler();
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNotNull(okHttpClient7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(okHttpClient14);
        org.junit.Assert.assertNull(hostnameVerifier15);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNull(okAuthenticator18);
        org.junit.Assert.assertNull(proxySelector19);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNotNull(connectionPool26);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(connectionPool35);
        org.junit.Assert.assertNotNull(okHttpClient37);
// flaky:         org.junit.Assert.assertNull(proxySelector38);
        org.junit.Assert.assertNotNull(sSLSocketFactory39);
        org.junit.Assert.assertNotNull(socket41);
        org.junit.Assert.assertEquals(socket41.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(socket42);
        org.junit.Assert.assertEquals(socket42.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(okHttpClient44);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNull(proxySelector46);
        org.junit.Assert.assertNull(cookieHandler47);
    }

    @Test
    public void test07165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07165");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.Proxy proxy8 = null;
        okHttpClient0.proxy = proxy8;
        boolean boolean10 = okHttpClient0.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache12 = okHttpClient11.okResponseCache();
        java.net.ResponseCache responseCache13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient11.setResponseCache(responseCache13);
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        okHttpClient11.transports = strList17;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory20 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient11.setSSLSocketFactory(sSLSocketFactory20);
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier23 = null;
        okHttpClient22.hostnameVerifier = hostnameVerifier23;
        java.net.ResponseCache responseCache25 = null;
        okHttpClient22.responseCache = responseCache25;
        javax.net.ssl.HostnameVerifier hostnameVerifier27 = okHttpClient22.hostnameVerifier;
        java.net.Proxy proxy28 = okHttpClient22.getProxy();
        java.net.CookieHandler cookieHandler29 = null;
        okHttpClient22.cookieHandler = cookieHandler29;
        okHttpClient22.followProtocolRedirects = true;
        com.squareup.okhttp.OkHttpClient okHttpClient33 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier34 = null;
        okHttpClient33.hostnameVerifier = hostnameVerifier34;
        java.net.ResponseCache responseCache36 = null;
        okHttpClient33.responseCache = responseCache36;
        javax.net.ssl.HostnameVerifier hostnameVerifier38 = okHttpClient33.hostnameVerifier;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory39 = okHttpClient33.sslSocketFactory;
        java.net.CookieHandler cookieHandler40 = okHttpClient33.cookieHandler;
        javax.net.ssl.HostnameVerifier hostnameVerifier41 = okHttpClient33.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient42 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool43 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient42.connectionPool = connectionPool43;
        com.squareup.okhttp.OkAuthenticator okAuthenticator45 = null;
        okHttpClient42.authenticator = okAuthenticator45;
        java.util.List<java.lang.String> strList47 = okHttpClient42.transports;
        java.net.ResponseCache responseCache48 = null;
        okHttpClient42.responseCache = responseCache48;
        com.squareup.okhttp.OkHttpClient okHttpClient50 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier51 = null;
        okHttpClient50.hostnameVerifier = hostnameVerifier51;
        java.net.ResponseCache responseCache53 = null;
        okHttpClient50.responseCache = responseCache53;
        javax.net.ssl.HostnameVerifier hostnameVerifier55 = okHttpClient50.hostnameVerifier;
        java.net.Proxy proxy56 = okHttpClient50.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool59 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient50.connectionPool = connectionPool59;
        com.squareup.okhttp.OkHttpClient okHttpClient61 = okHttpClient50.copyWithDefaults();
        java.net.Proxy proxy62 = okHttpClient61.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier63 = okHttpClient61.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient64 = okHttpClient42.setHostnameVerifier(hostnameVerifier63);
        com.squareup.okhttp.OkHttpClient okHttpClient65 = okHttpClient33.setHostnameVerifier(hostnameVerifier63);
        okHttpClient22.hostnameVerifier = hostnameVerifier63;
        com.squareup.okhttp.OkHttpClient okHttpClient67 = okHttpClient11.setHostnameVerifier(hostnameVerifier63);
        com.squareup.okhttp.OkHttpClient okHttpClient68 = okHttpClient0.setHostnameVerifier(hostnameVerifier63);
        javax.net.ssl.HostnameVerifier hostnameVerifier69 = okHttpClient0.getHostnameVerifier();
        java.net.ResponseCache responseCache70 = okHttpClient0.responseCache;
        com.squareup.okhttp.ConnectionPool connectionPool71 = com.squareup.okhttp.ConnectionPool.getDefault();
        com.squareup.okhttp.Address address72 = null;
        com.squareup.okhttp.Connection connection73 = connectionPool71.get(address72);
        int int74 = connectionPool71.getHttpConnectionCount();
        okHttpClient0.connectionPool = connectionPool71;
        java.util.Set<com.squareup.okhttp.Route> routeSet76 = okHttpClient0.failedRoutes;
        java.net.CookieHandler cookieHandler77 = okHttpClient0.getCookieHandler();
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(okResponseCache12);
        org.junit.Assert.assertNotNull(okHttpClient14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNull(hostnameVerifier27);
        org.junit.Assert.assertNull(proxy28);
        org.junit.Assert.assertNull(hostnameVerifier38);
        org.junit.Assert.assertNull(sSLSocketFactory39);
        org.junit.Assert.assertNull(cookieHandler40);
        org.junit.Assert.assertNull(hostnameVerifier41);
        org.junit.Assert.assertNotNull(connectionPool43);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNull(hostnameVerifier55);
        org.junit.Assert.assertNull(proxy56);
        org.junit.Assert.assertNotNull(okHttpClient61);
        org.junit.Assert.assertNull(proxy62);
        org.junit.Assert.assertNotNull(hostnameVerifier63);
        org.junit.Assert.assertNotNull(okHttpClient64);
        org.junit.Assert.assertNotNull(okHttpClient65);
        org.junit.Assert.assertNotNull(okHttpClient67);
        org.junit.Assert.assertNotNull(okHttpClient68);
        org.junit.Assert.assertNotNull(hostnameVerifier69);
        org.junit.Assert.assertNull(responseCache70);
        org.junit.Assert.assertNotNull(connectionPool71);
        org.junit.Assert.assertNull(connection73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNotNull(routeSet76);
        org.junit.Assert.assertNull(cookieHandler77);
    }

    @Test
    public void test07166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07166");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient9 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier10 = null;
        okHttpClient9.hostnameVerifier = hostnameVerifier10;
        java.net.ResponseCache responseCache12 = null;
        okHttpClient9.responseCache = responseCache12;
        java.util.List<java.lang.String> strList14 = okHttpClient9.transports;
        com.squareup.okhttp.ConnectionPool connectionPool15 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient9.connectionPool = connectionPool15;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient9.copyWithDefaults();
        java.net.ProxySelector proxySelector18 = okHttpClient17.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory19 = okHttpClient17.getSslSocketFactory();
        okHttpClient0.sslSocketFactory = sSLSocketFactory19;
        java.lang.String[] strArray21 = sSLSocketFactory19.getDefaultCipherSuites();
        java.lang.String[] strArray22 = sSLSocketFactory19.getSupportedCipherSuites();
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNotNull(connectionPool15);
        org.junit.Assert.assertNotNull(okHttpClient17);
// flaky:         org.junit.Assert.assertNull(proxySelector18);
        org.junit.Assert.assertNotNull(sSLSocketFactory19);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(strArray22);
    }

    @Test
    public void test07167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07167");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.ResponseCache responseCache5 = null;
        okHttpClient4.responseCache = responseCache5;
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = okHttpClient4.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient4.setFollowProtocolRedirects(false);
        java.net.ProxySelector proxySelector10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient9.setProxySelector(proxySelector10);
        java.net.ProxySelector proxySelector12 = okHttpClient11.proxySelector;
        java.net.ProxySelector proxySelector13 = okHttpClient11.getProxySelector();
        com.squareup.okhttp.OkHttpClient okHttpClient14 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier15 = null;
        okHttpClient14.hostnameVerifier = hostnameVerifier15;
        java.net.ResponseCache responseCache17 = null;
        okHttpClient14.responseCache = responseCache17;
        java.util.List<java.lang.String> strList19 = okHttpClient14.transports;
        com.squareup.okhttp.ConnectionPool connectionPool20 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient14.connectionPool = connectionPool20;
        java.net.Proxy proxy22 = null;
        okHttpClient14.proxy = proxy22;
        boolean boolean24 = okHttpClient14.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient14.setFollowProtocolRedirects(true);
        com.squareup.okhttp.OkHttpClient okHttpClient27 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier28 = null;
        okHttpClient27.hostnameVerifier = hostnameVerifier28;
        java.net.ResponseCache responseCache30 = null;
        okHttpClient27.responseCache = responseCache30;
        java.util.List<java.lang.String> strList32 = okHttpClient27.transports;
        com.squareup.okhttp.ConnectionPool connectionPool33 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient27.connectionPool = connectionPool33;
        com.squareup.okhttp.ConnectionPool connectionPool35 = okHttpClient27.connectionPool;
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient14.setConnectionPool(connectionPool35);
        com.squareup.okhttp.OkHttpClient okHttpClient37 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier38 = null;
        okHttpClient37.hostnameVerifier = hostnameVerifier38;
        java.net.ResponseCache responseCache40 = null;
        okHttpClient37.responseCache = responseCache40;
        java.util.List<java.lang.String> strList42 = okHttpClient37.transports;
        com.squareup.okhttp.ConnectionPool connectionPool43 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient37.connectionPool = connectionPool43;
        com.squareup.okhttp.OkHttpClient okHttpClient45 = okHttpClient37.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient46 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier47 = null;
        okHttpClient46.hostnameVerifier = hostnameVerifier47;
        java.net.ResponseCache responseCache49 = null;
        okHttpClient46.responseCache = responseCache49;
        java.util.List<java.lang.String> strList51 = okHttpClient46.transports;
        com.squareup.okhttp.ConnectionPool connectionPool52 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient46.connectionPool = connectionPool52;
        com.squareup.okhttp.OkHttpClient okHttpClient54 = okHttpClient46.copyWithDefaults();
        java.net.ProxySelector proxySelector55 = okHttpClient54.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory56 = okHttpClient54.getSslSocketFactory();
        okHttpClient37.sslSocketFactory = sSLSocketFactory56;
        com.squareup.okhttp.OkHttpClient okHttpClient58 = okHttpClient36.setSSLSocketFactory(sSLSocketFactory56);
        java.util.List<java.lang.String> strList59 = okHttpClient36.getTransports();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory60 = okHttpClient36.sslSocketFactory;
        com.squareup.okhttp.OkHttpClient okHttpClient61 = okHttpClient11.setSSLSocketFactory(sSLSocketFactory60);
        java.net.InetAddress inetAddress64 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket66 = sSLSocketFactory60.createSocket("hi!", (int) '#', inetAddress64, 0);
            org.junit.Assert.fail("Expected exception of type java.net.UnknownHostException; message: hi!");
        } catch (java.net.UnknownHostException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(hostnameVerifier7);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(proxySelector12);
        org.junit.Assert.assertNull(proxySelector13);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNotNull(connectionPool20);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNotNull(connectionPool33);
        org.junit.Assert.assertNotNull(connectionPool35);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNotNull(connectionPool43);
        org.junit.Assert.assertNotNull(okHttpClient45);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNotNull(connectionPool52);
        org.junit.Assert.assertNotNull(okHttpClient54);
// flaky:         org.junit.Assert.assertNull(proxySelector55);
        org.junit.Assert.assertNotNull(sSLSocketFactory56);
        org.junit.Assert.assertNotNull(okHttpClient58);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNotNull(sSLSocketFactory60);
        org.junit.Assert.assertNotNull(okHttpClient61);
    }

    @Test
    public void test07168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07168");
        com.squareup.okhttp.ConnectionPool connectionPool2 = new com.squareup.okhttp.ConnectionPool((int) ' ', (long) (short) 1);
        com.squareup.okhttp.Connection connection3 = null;
        // The following exception was thrown during execution in test generation
        try {
            connectionPool2.recycle(connection3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test07169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07169");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory6);
        java.net.ResponseCache responseCache8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient0.setResponseCache(responseCache8);
        java.net.CookieHandler cookieHandler10 = null;
        okHttpClient0.cookieHandler = cookieHandler10;
        java.net.ProxySelector proxySelector12 = okHttpClient0.getProxySelector();
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNotNull(okHttpClient7);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNull(proxySelector12);
    }

    @Test
    public void test07170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07170");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.CookieHandler cookieHandler8 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache9 = okHttpClient0.okResponseCache();
        java.net.CookieHandler cookieHandler10 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        java.net.Proxy proxy12 = java.net.Proxy.NO_PROXY;
        boolean boolean14 = proxy12.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type15 = proxy12.type();
        java.net.SocketAddress socketAddress16 = proxy12.address();
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient0.setProxy(proxy12);
        java.lang.String[] strArray19 = new java.lang.String[] { "DIRECT" };
        java.util.ArrayList<java.lang.String> strList20 = new java.util.ArrayList<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList20, strArray19);
        okHttpClient0.transports = strList20;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient0.setFollowProtocolRedirects(false);
        com.squareup.okhttp.ConnectionPool connectionPool27 = new com.squareup.okhttp.ConnectionPool((int) '#', (long) (short) 100);
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient24.setConnectionPool(connectionPool27);
        java.net.ProxySelector proxySelector29 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient30 = okHttpClient24.setProxySelector(proxySelector29);
        com.squareup.okhttp.ConnectionPool connectionPool31 = okHttpClient24.connectionPool;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool33 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient32.connectionPool = connectionPool33;
        com.squareup.okhttp.OkHttpClient okHttpClient35 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier36 = null;
        okHttpClient35.hostnameVerifier = hostnameVerifier36;
        java.net.ResponseCache responseCache38 = null;
        okHttpClient35.responseCache = responseCache38;
        java.util.List<java.lang.String> strList40 = okHttpClient35.transports;
        com.squareup.okhttp.ConnectionPool connectionPool41 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient35.connectionPool = connectionPool41;
        com.squareup.okhttp.OkHttpClient okHttpClient43 = okHttpClient32.setConnectionPool(connectionPool41);
        java.net.Proxy proxy44 = okHttpClient43.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient45 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool46 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient45.connectionPool = connectionPool46;
        int int48 = connectionPool46.getSpdyConnectionCount();
        okHttpClient43.connectionPool = connectionPool46;
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient43.copyWithDefaults();
        java.net.CookieHandler cookieHandler51 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient52 = okHttpClient43.setCookieHandler(cookieHandler51);
        java.util.Set<com.squareup.okhttp.Route> routeSet53 = okHttpClient52.failedRoutes;
        okHttpClient24.failedRoutes = routeSet53;
        java.net.URL uRL55 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.HttpURLConnection httpURLConnection56 = okHttpClient24.open(uRL55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNull(cookieHandler8);
        org.junit.Assert.assertNull(okResponseCache9);
        org.junit.Assert.assertNull(cookieHandler10);
        org.junit.Assert.assertNotNull(proxy12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + type15 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type15.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress16);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNotNull(okHttpClient30);
        org.junit.Assert.assertNotNull(connectionPool31);
        org.junit.Assert.assertNotNull(connectionPool33);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNotNull(connectionPool41);
        org.junit.Assert.assertNotNull(okHttpClient43);
        org.junit.Assert.assertNull(proxy44);
        org.junit.Assert.assertNotNull(connectionPool46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(okHttpClient50);
        org.junit.Assert.assertNotNull(okHttpClient52);
        org.junit.Assert.assertNotNull(routeSet53);
    }

    @Test
    public void test07171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07171");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.ResponseCache responseCache5 = null;
        okHttpClient4.responseCache = responseCache5;
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = okHttpClient4.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient4.copyWithDefaults();
        java.net.ResponseCache responseCache9 = okHttpClient8.responseCache;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = new com.squareup.okhttp.OkHttpClient(okHttpClient8);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory11 = okHttpClient8.getSslSocketFactory();
        java.net.Socket socket12 = sSLSocketFactory11.createSocket();
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket15 = sSLSocketFactory11.createSocket("", (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.net.ConnectException; message: Connection refused (Connection refused)");
        } catch (java.net.ConnectException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(hostnameVerifier7);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertNull(responseCache9);
        org.junit.Assert.assertNotNull(sSLSocketFactory11);
        org.junit.Assert.assertNotNull(socket12);
        org.junit.Assert.assertEquals(socket12.toString(), "Socket[unconnected]");
    }

    @Test
    public void test07172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07172");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.Proxy proxy8 = null;
        okHttpClient0.proxy = proxy8;
        boolean boolean10 = okHttpClient0.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.copyWithDefaults();
        java.net.CookieHandler cookieHandler12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setCookieHandler(cookieHandler12);
        java.net.Proxy proxy14 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient11.setProxy(proxy14);
        java.net.Proxy.Type type16 = proxy14.type();
        java.net.SocketAddress socketAddress17 = proxy14.address();
        java.net.SocketAddress socketAddress18 = proxy14.address();
        java.net.Proxy.Type type19 = proxy14.type();
        java.net.SocketAddress socketAddress20 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Proxy proxy21 = new java.net.Proxy(type19, socketAddress20);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: type DIRECT is not compatible with address null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNotNull(proxy14);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertTrue("'" + type16 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type16.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress17);
        org.junit.Assert.assertNull(socketAddress18);
        org.junit.Assert.assertTrue("'" + type19 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type19.equals(java.net.Proxy.Type.DIRECT));
    }

    @Test
    public void test07173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07173");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.CookieHandler cookieHandler8 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache9 = okHttpClient0.okResponseCache();
        java.net.CookieHandler cookieHandler10 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = okHttpClient11.hostnameVerifier;
        java.util.List<java.lang.String> strList13 = okHttpClient11.transports;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient11.setSSLSocketFactory(sSLSocketFactory14);
        com.squareup.okhttp.ConnectionPool connectionPool16 = okHttpClient15.connectionPool;
        java.net.ProxySelector proxySelector17 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient15.setProxySelector(proxySelector17);
        java.net.ProxySelector proxySelector19 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient18.setProxySelector(proxySelector19);
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient18.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient(okHttpClient18);
        com.squareup.okhttp.OkHttpClient okHttpClient23 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier24 = null;
        okHttpClient23.hostnameVerifier = hostnameVerifier24;
        java.net.ResponseCache responseCache26 = null;
        okHttpClient23.responseCache = responseCache26;
        javax.net.ssl.HostnameVerifier hostnameVerifier28 = okHttpClient23.hostnameVerifier;
        java.net.Proxy proxy29 = okHttpClient23.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool32 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient23.connectionPool = connectionPool32;
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient23.copyWithDefaults();
        java.util.List<java.lang.String> strList35 = okHttpClient23.getTransports();
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient23.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient36.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient37.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient39 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier40 = null;
        okHttpClient39.hostnameVerifier = hostnameVerifier40;
        java.net.ResponseCache responseCache42 = null;
        okHttpClient39.responseCache = responseCache42;
        javax.net.ssl.HostnameVerifier hostnameVerifier44 = okHttpClient39.hostnameVerifier;
        java.net.Proxy proxy45 = okHttpClient39.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool48 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient39.connectionPool = connectionPool48;
        java.util.List<java.lang.String> strList50 = okHttpClient39.getTransports();
        javax.net.ssl.HostnameVerifier hostnameVerifier51 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient52 = okHttpClient39.setHostnameVerifier(hostnameVerifier51);
        com.squareup.okhttp.OkHttpClient okHttpClient53 = okHttpClient52.copyWithDefaults();
        okHttpClient53.followProtocolRedirects = false;
        com.squareup.okhttp.OkHttpClient okHttpClient56 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier57 = null;
        okHttpClient56.hostnameVerifier = hostnameVerifier57;
        java.net.ResponseCache responseCache59 = null;
        okHttpClient56.responseCache = responseCache59;
        java.util.List<java.lang.String> strList61 = okHttpClient56.transports;
        com.squareup.okhttp.ConnectionPool connectionPool62 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient56.connectionPool = connectionPool62;
        java.net.Proxy proxy64 = null;
        okHttpClient56.proxy = proxy64;
        boolean boolean66 = okHttpClient56.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient68 = okHttpClient56.setFollowProtocolRedirects(true);
        com.squareup.okhttp.OkHttpClient okHttpClient69 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier70 = null;
        okHttpClient69.hostnameVerifier = hostnameVerifier70;
        java.net.ResponseCache responseCache72 = null;
        okHttpClient69.responseCache = responseCache72;
        java.util.List<java.lang.String> strList74 = okHttpClient69.transports;
        javax.net.ssl.HostnameVerifier hostnameVerifier75 = null;
        okHttpClient69.hostnameVerifier = hostnameVerifier75;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache77 = okHttpClient69.okResponseCache();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory78 = okHttpClient69.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient79 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier80 = null;
        okHttpClient79.hostnameVerifier = hostnameVerifier80;
        java.net.ResponseCache responseCache82 = null;
        okHttpClient79.responseCache = responseCache82;
        javax.net.ssl.HostnameVerifier hostnameVerifier84 = okHttpClient79.hostnameVerifier;
        java.net.Proxy proxy85 = okHttpClient79.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool88 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient79.connectionPool = connectionPool88;
        com.squareup.okhttp.OkHttpClient okHttpClient90 = okHttpClient79.copyWithDefaults();
        java.net.Proxy proxy91 = okHttpClient90.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier92 = okHttpClient90.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient93 = okHttpClient69.setHostnameVerifier(hostnameVerifier92);
        com.squareup.okhttp.OkHttpClient okHttpClient94 = okHttpClient68.setHostnameVerifier(hostnameVerifier92);
        com.squareup.okhttp.OkHttpClient okHttpClient95 = okHttpClient53.setHostnameVerifier(hostnameVerifier92);
        okHttpClient38.hostnameVerifier = hostnameVerifier92;
        com.squareup.okhttp.OkHttpClient okHttpClient97 = okHttpClient18.setHostnameVerifier(hostnameVerifier92);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNull(cookieHandler8);
        org.junit.Assert.assertNull(okResponseCache9);
        org.junit.Assert.assertNull(cookieHandler10);
        org.junit.Assert.assertNull(hostnameVerifier12);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNull(connectionPool16);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNull(hostnameVerifier28);
        org.junit.Assert.assertNull(proxy29);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNotNull(okHttpClient37);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNull(hostnameVerifier44);
        org.junit.Assert.assertNull(proxy45);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNotNull(okHttpClient52);
        org.junit.Assert.assertNotNull(okHttpClient53);
        org.junit.Assert.assertNull(strList61);
        org.junit.Assert.assertNotNull(connectionPool62);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(okHttpClient68);
        org.junit.Assert.assertNull(strList74);
        org.junit.Assert.assertNull(okResponseCache77);
        org.junit.Assert.assertNull(sSLSocketFactory78);
        org.junit.Assert.assertNull(hostnameVerifier84);
        org.junit.Assert.assertNull(proxy85);
        org.junit.Assert.assertNotNull(okHttpClient90);
        org.junit.Assert.assertNull(proxy91);
        org.junit.Assert.assertNotNull(hostnameVerifier92);
        org.junit.Assert.assertNotNull(okHttpClient93);
        org.junit.Assert.assertNotNull(okHttpClient94);
        org.junit.Assert.assertNotNull(okHttpClient95);
        org.junit.Assert.assertNotNull(okHttpClient97);
    }

    @Test
    public void test07174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07174");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache8 = okHttpClient7.okResponseCache();
        java.net.ResponseCache responseCache9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient7.setResponseCache(responseCache9);
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        okHttpClient7.transports = strList13;
        okHttpClient0.transports = strList13;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient0.setFollowProtocolRedirects(true);
        com.squareup.okhttp.OkHttpClient okHttpClient19 = new com.squareup.okhttp.OkHttpClient(okHttpClient18);
        java.net.CookieHandler cookieHandler20 = null;
        okHttpClient19.cookieHandler = cookieHandler20;
        java.net.ProxySelector proxySelector22 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient19.setProxySelector(proxySelector22);
        java.net.ProxySelector proxySelector24 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient23.setProxySelector(proxySelector24);
        com.squareup.okhttp.OkHttpClient okHttpClient26 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier27 = null;
        okHttpClient26.hostnameVerifier = hostnameVerifier27;
        java.net.ResponseCache responseCache29 = null;
        okHttpClient26.responseCache = responseCache29;
        java.util.List<java.lang.String> strList31 = okHttpClient26.transports;
        com.squareup.okhttp.ConnectionPool connectionPool32 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient26.connectionPool = connectionPool32;
        java.net.CookieHandler cookieHandler34 = okHttpClient26.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache35 = okHttpClient26.okResponseCache();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory36 = null;
        okHttpClient26.sslSocketFactory = sSLSocketFactory36;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory38 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient26.setSSLSocketFactory(sSLSocketFactory38);
        java.net.ProxySelector proxySelector40 = null;
        okHttpClient26.proxySelector = proxySelector40;
        com.squareup.okhttp.OkHttpClient okHttpClient42 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool43 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient42.connectionPool = connectionPool43;
        java.net.ResponseCache responseCache45 = null;
        okHttpClient42.responseCache = responseCache45;
        java.net.Proxy proxy47 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress48 = proxy47.address();
        java.net.SocketAddress socketAddress49 = proxy47.address();
        okHttpClient42.proxy = proxy47;
        com.squareup.okhttp.ConnectionPool connectionPool53 = new com.squareup.okhttp.ConnectionPool((-1), (long) '#');
        com.squareup.okhttp.Address address54 = null;
        com.squareup.okhttp.Connection connection55 = connectionPool53.get(address54);
        int int56 = connectionPool53.getSpdyConnectionCount();
        connectionPool53.evictAll();
        com.squareup.okhttp.OkHttpClient okHttpClient58 = okHttpClient42.setConnectionPool(connectionPool53);
        com.squareup.okhttp.OkHttpClient okHttpClient59 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier60 = null;
        okHttpClient59.hostnameVerifier = hostnameVerifier60;
        java.net.ProxySelector proxySelector62 = okHttpClient59.proxySelector;
        java.net.ProxySelector proxySelector63 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient64 = okHttpClient59.setProxySelector(proxySelector63);
        com.squareup.okhttp.OkHttpClient okHttpClient65 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier66 = null;
        okHttpClient65.hostnameVerifier = hostnameVerifier66;
        java.net.ResponseCache responseCache68 = null;
        okHttpClient65.responseCache = responseCache68;
        java.util.List<java.lang.String> strList70 = okHttpClient65.transports;
        com.squareup.okhttp.ConnectionPool connectionPool71 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient65.connectionPool = connectionPool71;
        com.squareup.okhttp.OkHttpClient okHttpClient73 = okHttpClient65.copyWithDefaults();
        java.net.ProxySelector proxySelector74 = okHttpClient73.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory75 = okHttpClient73.getSslSocketFactory();
        okHttpClient59.sslSocketFactory = sSLSocketFactory75;
        okHttpClient42.sslSocketFactory = sSLSocketFactory75;
        com.squareup.okhttp.OkHttpClient okHttpClient78 = okHttpClient26.setSSLSocketFactory(sSLSocketFactory75);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory79 = okHttpClient78.getSslSocketFactory();
        okHttpClient25.sslSocketFactory = sSLSocketFactory79;
        java.util.List<java.lang.String> strList81 = okHttpClient25.transports;
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNull(okResponseCache8);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertNotNull(okHttpClient25);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNotNull(connectionPool32);
        org.junit.Assert.assertNull(cookieHandler34);
        org.junit.Assert.assertNull(okResponseCache35);
        org.junit.Assert.assertNotNull(okHttpClient39);
        org.junit.Assert.assertNotNull(connectionPool43);
        org.junit.Assert.assertNotNull(proxy47);
        org.junit.Assert.assertNull(socketAddress48);
        org.junit.Assert.assertNull(socketAddress49);
        org.junit.Assert.assertNull(connection55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(okHttpClient58);
        org.junit.Assert.assertNull(proxySelector62);
        org.junit.Assert.assertNotNull(okHttpClient64);
        org.junit.Assert.assertNull(strList70);
        org.junit.Assert.assertNotNull(connectionPool71);
        org.junit.Assert.assertNotNull(okHttpClient73);
// flaky:         org.junit.Assert.assertNull(proxySelector74);
        org.junit.Assert.assertNotNull(sSLSocketFactory75);
        org.junit.Assert.assertNotNull(okHttpClient78);
        org.junit.Assert.assertNotNull(sSLSocketFactory79);
        org.junit.Assert.assertNull(strList81);
    }

    @Test
    public void test07175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07175");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient0.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.copyWithDefaults();
        java.net.CookieHandler cookieHandler12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setCookieHandler(cookieHandler12);
        java.util.List<java.lang.String> strList14 = okHttpClient11.getTransports();
        java.net.ResponseCache responseCache15 = okHttpClient11.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory16 = okHttpClient11.sslSocketFactory;
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNotNull(strList14);
        org.junit.Assert.assertNull(responseCache15);
        org.junit.Assert.assertNotNull(sSLSocketFactory16);
    }

    @Test
    public void test07176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07176");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.Proxy proxy8 = null;
        okHttpClient0.proxy = proxy8;
        boolean boolean10 = okHttpClient0.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient0.setFollowProtocolRedirects(true);
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = null;
        okHttpClient13.hostnameVerifier = hostnameVerifier14;
        java.net.ResponseCache responseCache16 = null;
        okHttpClient13.responseCache = responseCache16;
        java.util.List<java.lang.String> strList18 = okHttpClient13.transports;
        com.squareup.okhttp.ConnectionPool connectionPool19 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient13.connectionPool = connectionPool19;
        com.squareup.okhttp.ConnectionPool connectionPool21 = okHttpClient13.connectionPool;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient0.setConnectionPool(connectionPool21);
        com.squareup.okhttp.ConnectionPool connectionPool23 = okHttpClient22.connectionPool;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient22.copyWithDefaults();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory25 = okHttpClient24.sslSocketFactory;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier27 = null;
        okHttpClient26.hostnameVerifier = hostnameVerifier27;
        java.net.ProxySelector proxySelector29 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient30 = okHttpClient26.setProxySelector(proxySelector29);
        java.net.ResponseCache responseCache31 = null;
        okHttpClient30.responseCache = responseCache31;
        javax.net.ssl.HostnameVerifier hostnameVerifier33 = okHttpClient30.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient30.setFollowProtocolRedirects(false);
        java.net.ProxySelector proxySelector36 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient35.setProxySelector(proxySelector36);
        okHttpClient37.followProtocolRedirects = true;
        com.squareup.okhttp.OkHttpClient okHttpClient40 = okHttpClient37.copyWithDefaults();
        java.util.List<java.lang.String> strList41 = okHttpClient40.getTransports();
        java.net.ResponseCache responseCache42 = null;
        okHttpClient40.responseCache = responseCache42;
        okHttpClient40.followProtocolRedirects = true;
        com.squareup.okhttp.OkHttpClient okHttpClient46 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier47 = null;
        okHttpClient46.hostnameVerifier = hostnameVerifier47;
        java.net.ResponseCache responseCache49 = null;
        okHttpClient46.responseCache = responseCache49;
        javax.net.ssl.HostnameVerifier hostnameVerifier51 = okHttpClient46.hostnameVerifier;
        java.net.Proxy proxy52 = okHttpClient46.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient53 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache54 = okHttpClient53.okResponseCache();
        java.net.ResponseCache responseCache55 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient56 = okHttpClient53.setResponseCache(responseCache55);
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList59 = new java.util.ArrayList<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        okHttpClient53.transports = strList59;
        okHttpClient46.transports = strList59;
        com.squareup.okhttp.OkHttpClient okHttpClient64 = okHttpClient46.setFollowProtocolRedirects(true);
        com.squareup.okhttp.OkHttpClient okHttpClient65 = new com.squareup.okhttp.OkHttpClient(okHttpClient64);
        java.net.CookieHandler cookieHandler66 = null;
        okHttpClient65.cookieHandler = cookieHandler66;
        java.net.ProxySelector proxySelector68 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient69 = okHttpClient65.setProxySelector(proxySelector68);
        com.squareup.okhttp.OkHttpClient okHttpClient70 = okHttpClient65.copyWithDefaults();
        java.net.CookieHandler cookieHandler71 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient72 = okHttpClient70.setCookieHandler(cookieHandler71);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory73 = okHttpClient70.sslSocketFactory;
        okHttpClient40.sslSocketFactory = sSLSocketFactory73;
        java.net.Socket socket75 = sSLSocketFactory73.createSocket();
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket79 = sSLSocketFactory25.createSocket(socket75, "DIRECT", 1, true);
            org.junit.Assert.fail("Expected exception of type java.net.SocketException; message: Underlying socket is not connected");
        } catch (java.net.SocketException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(connectionPool19);
        org.junit.Assert.assertNotNull(connectionPool21);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNotNull(connectionPool23);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNotNull(sSLSocketFactory25);
        org.junit.Assert.assertNotNull(okHttpClient30);
        org.junit.Assert.assertNull(hostnameVerifier33);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNotNull(okHttpClient37);
        org.junit.Assert.assertNotNull(okHttpClient40);
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertNull(hostnameVerifier51);
        org.junit.Assert.assertNull(proxy52);
        org.junit.Assert.assertNull(okResponseCache54);
        org.junit.Assert.assertNotNull(okHttpClient56);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(okHttpClient64);
        org.junit.Assert.assertNotNull(okHttpClient69);
        org.junit.Assert.assertNotNull(okHttpClient70);
        org.junit.Assert.assertNotNull(okHttpClient72);
        org.junit.Assert.assertNotNull(sSLSocketFactory73);
        org.junit.Assert.assertNotNull(socket75);
        org.junit.Assert.assertEquals(socket75.toString(), "Socket[unconnected]");
    }

    @Test
    public void test07177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07177");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient0.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.copyWithDefaults();
        java.net.Proxy proxy12 = okHttpClient11.getProxy();
        java.net.CookieHandler cookieHandler13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient11.setCookieHandler(cookieHandler13);
        com.squareup.okhttp.ConnectionPool connectionPool17 = new com.squareup.okhttp.ConnectionPool((int) (short) 0, (long) (byte) 1);
        okHttpClient14.connectionPool = connectionPool17;
        int int19 = connectionPool17.getConnectionCount();
        int int20 = connectionPool17.getConnectionCount();
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(proxy12);
        org.junit.Assert.assertNotNull(okHttpClient14);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
    }

    @Test
    public void test07178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07178");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache8 = okHttpClient7.okResponseCache();
        java.net.ResponseCache responseCache9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient7.setResponseCache(responseCache9);
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        okHttpClient7.transports = strList13;
        okHttpClient0.transports = strList13;
        java.util.Set<com.squareup.okhttp.Route> routeSet17 = okHttpClient0.failedRoutes;
        java.net.CookieHandler cookieHandler18 = null;
        okHttpClient0.cookieHandler = cookieHandler18;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        com.squareup.okhttp.OkHttpClient okHttpClient21 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool22 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient21.connectionPool = connectionPool22;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier25 = null;
        okHttpClient24.hostnameVerifier = hostnameVerifier25;
        java.net.ResponseCache responseCache27 = null;
        okHttpClient24.responseCache = responseCache27;
        java.util.List<java.lang.String> strList29 = okHttpClient24.transports;
        com.squareup.okhttp.ConnectionPool connectionPool30 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient24.connectionPool = connectionPool30;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient21.setConnectionPool(connectionPool30);
        com.squareup.okhttp.ConnectionPool connectionPool33 = okHttpClient32.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator34 = okHttpClient32.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool37 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient32.connectionPool = connectionPool37;
        java.net.ResponseCache responseCache39 = okHttpClient32.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory40 = okHttpClient32.sslSocketFactory;
        java.net.Proxy proxy41 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress42 = proxy41.address();
        com.squareup.okhttp.OkHttpClient okHttpClient43 = okHttpClient32.setProxy(proxy41);
        com.squareup.okhttp.OkHttpClient okHttpClient44 = new com.squareup.okhttp.OkHttpClient(okHttpClient43);
        com.squareup.okhttp.OkHttpClient okHttpClient45 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier46 = null;
        okHttpClient45.hostnameVerifier = hostnameVerifier46;
        java.net.ResponseCache responseCache48 = null;
        okHttpClient45.responseCache = responseCache48;
        java.util.List<java.lang.String> strList50 = okHttpClient45.transports;
        com.squareup.okhttp.ConnectionPool connectionPool51 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient45.connectionPool = connectionPool51;
        com.squareup.okhttp.OkHttpClient okHttpClient53 = okHttpClient45.copyWithDefaults();
        java.net.ProxySelector proxySelector54 = okHttpClient53.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory55 = okHttpClient53.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient56 = okHttpClient43.setSSLSocketFactory(sSLSocketFactory55);
        java.lang.String[] strArray57 = sSLSocketFactory55.getSupportedCipherSuites();
        java.lang.String[] strArray58 = sSLSocketFactory55.getSupportedCipherSuites();
        java.lang.String[] strArray59 = sSLSocketFactory55.getSupportedCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient60 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory55);
        com.squareup.okhttp.OkHttpClient okHttpClient61 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier62 = null;
        okHttpClient61.hostnameVerifier = hostnameVerifier62;
        java.net.ResponseCache responseCache64 = null;
        okHttpClient61.responseCache = responseCache64;
        java.util.List<java.lang.String> strList66 = okHttpClient61.transports;
        com.squareup.okhttp.ConnectionPool connectionPool67 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient61.connectionPool = connectionPool67;
        com.squareup.okhttp.OkHttpClient okHttpClient69 = okHttpClient61.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient70 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier71 = null;
        okHttpClient70.hostnameVerifier = hostnameVerifier71;
        java.net.ResponseCache responseCache73 = null;
        okHttpClient70.responseCache = responseCache73;
        java.util.List<java.lang.String> strList75 = okHttpClient70.transports;
        com.squareup.okhttp.ConnectionPool connectionPool76 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient70.connectionPool = connectionPool76;
        com.squareup.okhttp.OkHttpClient okHttpClient78 = okHttpClient70.copyWithDefaults();
        java.net.ProxySelector proxySelector79 = okHttpClient78.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory80 = okHttpClient78.getSslSocketFactory();
        okHttpClient61.sslSocketFactory = sSLSocketFactory80;
        java.lang.String[] strArray82 = sSLSocketFactory80.getDefaultCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient83 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory80);
        java.lang.String[] strArray84 = sSLSocketFactory80.getSupportedCipherSuites();
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNull(okResponseCache8);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(routeSet17);
        org.junit.Assert.assertNotNull(connectionPool22);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(connectionPool30);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertNotNull(connectionPool33);
        org.junit.Assert.assertNull(okAuthenticator34);
        org.junit.Assert.assertNull(responseCache39);
        org.junit.Assert.assertNull(sSLSocketFactory40);
        org.junit.Assert.assertNotNull(proxy41);
        org.junit.Assert.assertNull(socketAddress42);
        org.junit.Assert.assertNotNull(okHttpClient43);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNotNull(connectionPool51);
        org.junit.Assert.assertNotNull(okHttpClient53);
// flaky:         org.junit.Assert.assertNull(proxySelector54);
        org.junit.Assert.assertNotNull(sSLSocketFactory55);
        org.junit.Assert.assertNotNull(okHttpClient56);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(okHttpClient60);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNotNull(connectionPool67);
        org.junit.Assert.assertNotNull(okHttpClient69);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNotNull(connectionPool76);
        org.junit.Assert.assertNotNull(okHttpClient78);
// flaky:         org.junit.Assert.assertNull(proxySelector79);
        org.junit.Assert.assertNotNull(sSLSocketFactory80);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertNotNull(okHttpClient83);
        org.junit.Assert.assertNotNull(strArray84);
    }

    @Test
    public void test07179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07179");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient0.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.copyWithDefaults();
        java.net.Proxy proxy12 = okHttpClient11.getProxy();
        java.net.CookieHandler cookieHandler13 = null;
        okHttpClient11.cookieHandler = cookieHandler13;
        com.squareup.okhttp.OkAuthenticator okAuthenticator15 = okHttpClient11.getAuthenticator();
        com.squareup.okhttp.OkHttpClient okHttpClient16 = new com.squareup.okhttp.OkHttpClient(okHttpClient11);
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient(okHttpClient11);
        okHttpClient17.followProtocolRedirects = true;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier21 = null;
        okHttpClient20.hostnameVerifier = hostnameVerifier21;
        java.net.ResponseCache responseCache23 = null;
        okHttpClient20.responseCache = responseCache23;
        javax.net.ssl.HostnameVerifier hostnameVerifier25 = okHttpClient20.hostnameVerifier;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory26 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient20.setSSLSocketFactory(sSLSocketFactory26);
        com.squareup.okhttp.ConnectionPool connectionPool28 = okHttpClient27.getConnectionPool();
        java.net.ResponseCache responseCache29 = null;
        okHttpClient27.responseCache = responseCache29;
        java.net.CookieHandler cookieHandler31 = null;
        okHttpClient27.cookieHandler = cookieHandler31;
        com.squareup.okhttp.OkHttpClient okHttpClient33 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier34 = null;
        okHttpClient33.hostnameVerifier = hostnameVerifier34;
        java.net.ResponseCache responseCache36 = null;
        okHttpClient33.responseCache = responseCache36;
        java.util.List<java.lang.String> strList38 = okHttpClient33.transports;
        com.squareup.okhttp.ConnectionPool connectionPool39 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient33.connectionPool = connectionPool39;
        com.squareup.okhttp.OkHttpClient okHttpClient41 = okHttpClient33.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient42 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier43 = null;
        okHttpClient42.hostnameVerifier = hostnameVerifier43;
        java.net.ResponseCache responseCache45 = null;
        okHttpClient42.responseCache = responseCache45;
        java.util.List<java.lang.String> strList47 = okHttpClient42.transports;
        com.squareup.okhttp.ConnectionPool connectionPool48 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient42.connectionPool = connectionPool48;
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient42.copyWithDefaults();
        java.net.ProxySelector proxySelector51 = okHttpClient50.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory52 = okHttpClient50.getSslSocketFactory();
        okHttpClient33.sslSocketFactory = sSLSocketFactory52;
        okHttpClient27.sslSocketFactory = sSLSocketFactory52;
        com.squareup.okhttp.OkHttpClient okHttpClient55 = okHttpClient17.setSSLSocketFactory(sSLSocketFactory52);
        java.net.Socket socket56 = sSLSocketFactory52.createSocket();
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(proxy12);
        org.junit.Assert.assertNotNull(okAuthenticator15);
        org.junit.Assert.assertNull(hostnameVerifier25);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNull(connectionPool28);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNotNull(connectionPool39);
        org.junit.Assert.assertNotNull(okHttpClient41);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNotNull(connectionPool48);
        org.junit.Assert.assertNotNull(okHttpClient50);
// flaky:         org.junit.Assert.assertNull(proxySelector51);
        org.junit.Assert.assertNotNull(sSLSocketFactory52);
        org.junit.Assert.assertNotNull(okHttpClient55);
        org.junit.Assert.assertNotNull(socket56);
        org.junit.Assert.assertEquals(socket56.toString(), "Socket[unconnected]");
    }

    @Test
    public void test07180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07180");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        java.net.CookieHandler cookieHandler7 = null;
        okHttpClient0.cookieHandler = cookieHandler7;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier10 = null;
        okHttpClient9.hostnameVerifier = hostnameVerifier10;
        java.net.ResponseCache responseCache12 = null;
        okHttpClient9.responseCache = responseCache12;
        java.util.List<java.lang.String> strList14 = okHttpClient9.transports;
        com.squareup.okhttp.ConnectionPool connectionPool15 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient9.connectionPool = connectionPool15;
        java.net.CookieHandler cookieHandler17 = okHttpClient9.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache18 = okHttpClient9.okResponseCache();
        java.net.CookieHandler cookieHandler19 = okHttpClient9.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient20 = new com.squareup.okhttp.OkHttpClient(okHttpClient9);
        com.squareup.okhttp.OkHttpClient okHttpClient21 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier22 = null;
        okHttpClient21.hostnameVerifier = hostnameVerifier22;
        java.net.ProxySelector proxySelector24 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient21.setProxySelector(proxySelector24);
        java.net.CookieHandler cookieHandler26 = okHttpClient21.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient27 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier28 = null;
        okHttpClient27.hostnameVerifier = hostnameVerifier28;
        java.net.ResponseCache responseCache30 = null;
        okHttpClient27.responseCache = responseCache30;
        java.util.List<java.lang.String> strList32 = okHttpClient27.transports;
        com.squareup.okhttp.ConnectionPool connectionPool33 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient27.connectionPool = connectionPool33;
        java.net.Proxy proxy35 = null;
        okHttpClient27.proxy = proxy35;
        java.util.Set<com.squareup.okhttp.Route> routeSet37 = okHttpClient27.failedRoutes;
        okHttpClient21.failedRoutes = routeSet37;
        okHttpClient20.failedRoutes = routeSet37;
        okHttpClient0.failedRoutes = routeSet37;
        com.squareup.okhttp.OkHttpClient okHttpClient41 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier42 = null;
        okHttpClient41.hostnameVerifier = hostnameVerifier42;
        java.net.ProxySelector proxySelector44 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient45 = okHttpClient41.setProxySelector(proxySelector44);
        java.net.CookieHandler cookieHandler46 = okHttpClient41.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient47 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier48 = null;
        okHttpClient47.hostnameVerifier = hostnameVerifier48;
        java.net.ResponseCache responseCache50 = null;
        okHttpClient47.responseCache = responseCache50;
        java.util.List<java.lang.String> strList52 = okHttpClient47.transports;
        com.squareup.okhttp.ConnectionPool connectionPool53 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient47.connectionPool = connectionPool53;
        java.net.Proxy proxy55 = null;
        okHttpClient47.proxy = proxy55;
        java.util.Set<com.squareup.okhttp.Route> routeSet57 = okHttpClient47.failedRoutes;
        okHttpClient41.failedRoutes = routeSet57;
        java.net.ProxySelector proxySelector59 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient60 = okHttpClient41.setProxySelector(proxySelector59);
        com.squareup.okhttp.ConnectionPool connectionPool63 = new com.squareup.okhttp.ConnectionPool((int) (short) 10, (long) '4');
        okHttpClient41.connectionPool = connectionPool63;
        connectionPool63.evictAll();
        okHttpClient0.connectionPool = connectionPool63;
        java.net.ResponseCache responseCache67 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient68 = okHttpClient0.setResponseCache(responseCache67);
        com.squareup.okhttp.OkHttpClient okHttpClient69 = okHttpClient0.copyWithDefaults();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory70 = okHttpClient69.getSslSocketFactory();
        java.net.InetAddress inetAddress73 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket75 = sSLSocketFactory70.createSocket("hi!", (int) (short) 10, inetAddress73, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.net.BindException; message: Permission denied (Bind failed)");
        } catch (java.net.BindException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNotNull(connectionPool15);
        org.junit.Assert.assertNull(cookieHandler17);
        org.junit.Assert.assertNull(okResponseCache18);
        org.junit.Assert.assertNull(cookieHandler19);
        org.junit.Assert.assertNotNull(okHttpClient25);
        org.junit.Assert.assertNull(cookieHandler26);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNotNull(connectionPool33);
        org.junit.Assert.assertNotNull(routeSet37);
        org.junit.Assert.assertNotNull(okHttpClient45);
        org.junit.Assert.assertNull(cookieHandler46);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNotNull(connectionPool53);
        org.junit.Assert.assertNotNull(routeSet57);
        org.junit.Assert.assertNotNull(okHttpClient60);
        org.junit.Assert.assertNotNull(okHttpClient68);
        org.junit.Assert.assertNotNull(okHttpClient69);
        org.junit.Assert.assertNotNull(sSLSocketFactory70);
    }

    @Test
    public void test07181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07181");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache1 = okHttpClient0.okResponseCache();
        java.net.ResponseCache responseCache2 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.setResponseCache(responseCache2);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory4 = okHttpClient0.sslSocketFactory;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory5 = okHttpClient0.sslSocketFactory;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory6);
        com.squareup.okhttp.OkHttpClient okHttpClient8 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier9 = null;
        okHttpClient8.hostnameVerifier = hostnameVerifier9;
        java.net.ResponseCache responseCache11 = null;
        okHttpClient8.responseCache = responseCache11;
        java.util.List<java.lang.String> strList13 = okHttpClient8.transports;
        com.squareup.okhttp.ConnectionPool connectionPool14 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient8.connectionPool = connectionPool14;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient0.setConnectionPool(connectionPool14);
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient(okHttpClient17);
        java.net.ProxySelector proxySelector19 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient17.setProxySelector(proxySelector19);
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient17.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool22 = okHttpClient21.connectionPool;
        connectionPool22.evictAll();
        org.junit.Assert.assertNull(okResponseCache1);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertNull(sSLSocketFactory4);
        org.junit.Assert.assertNull(sSLSocketFactory5);
        org.junit.Assert.assertNotNull(okHttpClient7);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNotNull(connectionPool14);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNotNull(connectionPool22);
    }

    @Test
    public void test07182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07182");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.CookieHandler cookieHandler5 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = null;
        okHttpClient6.hostnameVerifier = hostnameVerifier7;
        java.net.ResponseCache responseCache9 = null;
        okHttpClient6.responseCache = responseCache9;
        java.util.List<java.lang.String> strList11 = okHttpClient6.transports;
        com.squareup.okhttp.ConnectionPool connectionPool12 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient6.connectionPool = connectionPool12;
        java.net.Proxy proxy14 = null;
        okHttpClient6.proxy = proxy14;
        java.util.Set<com.squareup.okhttp.Route> routeSet16 = okHttpClient6.failedRoutes;
        okHttpClient0.failedRoutes = routeSet16;
        java.net.ProxySelector proxySelector18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient0.setProxySelector(proxySelector18);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory20 = null;
        okHttpClient19.sslSocketFactory = sSLSocketFactory20;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient19.copyWithDefaults();
        java.net.CookieHandler cookieHandler23 = okHttpClient22.getCookieHandler();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache24 = okHttpClient22.okResponseCache();
        boolean boolean25 = okHttpClient22.getFollowProtocolRedirects();
        java.util.Set<com.squareup.okhttp.Route> routeSet26 = okHttpClient22.failedRoutes;
        java.net.Proxy proxy27 = okHttpClient22.proxy;
        java.net.CookieHandler cookieHandler28 = okHttpClient22.cookieHandler;
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNotNull(routeSet16);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNull(cookieHandler23);
        org.junit.Assert.assertNull(okResponseCache24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(routeSet26);
        org.junit.Assert.assertNull(proxy27);
        org.junit.Assert.assertNull(cookieHandler28);
    }

    @Test
    public void test07183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07183");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient0.connectionPool = connectionPool9;
        java.util.List<java.lang.String> strList11 = okHttpClient0.getTransports();
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient0.setHostnameVerifier(hostnameVerifier12);
        com.squareup.okhttp.ConnectionPool connectionPool14 = okHttpClient13.connectionPool;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier16 = null;
        okHttpClient15.hostnameVerifier = hostnameVerifier16;
        java.net.ResponseCache responseCache18 = null;
        okHttpClient15.responseCache = responseCache18;
        java.util.List<java.lang.String> strList20 = okHttpClient15.transports;
        javax.net.ssl.HostnameVerifier hostnameVerifier21 = null;
        okHttpClient15.hostnameVerifier = hostnameVerifier21;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache23 = okHttpClient15.okResponseCache();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory24 = okHttpClient15.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient25 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier26 = null;
        okHttpClient25.hostnameVerifier = hostnameVerifier26;
        java.net.ResponseCache responseCache28 = null;
        okHttpClient25.responseCache = responseCache28;
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = okHttpClient25.hostnameVerifier;
        java.net.Proxy proxy31 = okHttpClient25.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool34 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient25.connectionPool = connectionPool34;
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient25.copyWithDefaults();
        java.net.Proxy proxy37 = okHttpClient36.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier38 = okHttpClient36.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient15.setHostnameVerifier(hostnameVerifier38);
        javax.net.ssl.HostnameVerifier hostnameVerifier40 = okHttpClient15.hostnameVerifier;
        okHttpClient13.hostnameVerifier = hostnameVerifier40;
        com.squareup.okhttp.OkHttpClient okHttpClient42 = new com.squareup.okhttp.OkHttpClient(okHttpClient13);
        com.squareup.okhttp.OkHttpClient okHttpClient43 = okHttpClient42.copyWithDefaults();
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNotNull(connectionPool14);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(okResponseCache23);
        org.junit.Assert.assertNull(sSLSocketFactory24);
        org.junit.Assert.assertNull(hostnameVerifier30);
        org.junit.Assert.assertNull(proxy31);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNull(proxy37);
        org.junit.Assert.assertNotNull(hostnameVerifier38);
        org.junit.Assert.assertNotNull(okHttpClient39);
        org.junit.Assert.assertNotNull(hostnameVerifier40);
        org.junit.Assert.assertNotNull(okHttpClient43);
    }

    @Test
    public void test07184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07184");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache5 = okHttpClient0.okResponseCache();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory6);
        java.net.CookieHandler cookieHandler8 = null;
        okHttpClient0.cookieHandler = cookieHandler8;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier11 = null;
        okHttpClient10.hostnameVerifier = hostnameVerifier11;
        java.net.ResponseCache responseCache13 = null;
        okHttpClient10.responseCache = responseCache13;
        java.util.List<java.lang.String> strList15 = okHttpClient10.transports;
        com.squareup.okhttp.ConnectionPool connectionPool16 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient10.connectionPool = connectionPool16;
        java.net.CookieHandler cookieHandler18 = okHttpClient10.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache19 = okHttpClient10.okResponseCache();
        java.net.CookieHandler cookieHandler20 = okHttpClient10.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient21 = new com.squareup.okhttp.OkHttpClient(okHttpClient10);
        java.net.Proxy proxy22 = java.net.Proxy.NO_PROXY;
        boolean boolean24 = proxy22.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type25 = proxy22.type();
        java.net.SocketAddress socketAddress26 = proxy22.address();
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient10.setProxy(proxy22);
        com.squareup.okhttp.OkHttpClient okHttpClient28 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier29 = null;
        okHttpClient28.hostnameVerifier = hostnameVerifier29;
        java.net.ResponseCache responseCache31 = null;
        okHttpClient28.responseCache = responseCache31;
        java.util.List<java.lang.String> strList33 = okHttpClient28.transports;
        com.squareup.okhttp.ConnectionPool connectionPool34 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient28.connectionPool = connectionPool34;
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient28.copyWithDefaults();
        java.net.ProxySelector proxySelector37 = okHttpClient36.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory38 = okHttpClient36.getSslSocketFactory();
        okHttpClient27.sslSocketFactory = sSLSocketFactory38;
        okHttpClient0.sslSocketFactory = sSLSocketFactory38;
        com.squareup.okhttp.ConnectionPool connectionPool43 = new com.squareup.okhttp.ConnectionPool(100, (long) (short) 0);
        com.squareup.okhttp.Address address44 = null;
        com.squareup.okhttp.Connection connection45 = connectionPool43.get(address44);
        com.squareup.okhttp.Address address46 = null;
        com.squareup.okhttp.Connection connection47 = connectionPool43.get(address46);
        okHttpClient0.connectionPool = connectionPool43;
        int int49 = connectionPool43.getConnectionCount();
        connectionPool43.evictAll();
        org.junit.Assert.assertNull(okResponseCache5);
        org.junit.Assert.assertNotNull(okHttpClient7);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(connectionPool16);
        org.junit.Assert.assertNull(cookieHandler18);
        org.junit.Assert.assertNull(okResponseCache19);
        org.junit.Assert.assertNull(cookieHandler20);
        org.junit.Assert.assertNotNull(proxy22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + type25 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type25.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress26);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNotNull(connectionPool34);
        org.junit.Assert.assertNotNull(okHttpClient36);
// flaky:         org.junit.Assert.assertNull(proxySelector37);
        org.junit.Assert.assertNotNull(sSLSocketFactory38);
        org.junit.Assert.assertNull(connection45);
        org.junit.Assert.assertNull(connection47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
    }

    @Test
    public void test07185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07185");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        java.net.CookieHandler cookieHandler7 = null;
        okHttpClient0.cookieHandler = cookieHandler7;
        okHttpClient0.followProtocolRedirects = true;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = null;
        okHttpClient11.hostnameVerifier = hostnameVerifier12;
        java.net.ResponseCache responseCache14 = null;
        okHttpClient11.responseCache = responseCache14;
        javax.net.ssl.HostnameVerifier hostnameVerifier16 = okHttpClient11.hostnameVerifier;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory17 = okHttpClient11.sslSocketFactory;
        java.net.CookieHandler cookieHandler18 = okHttpClient11.cookieHandler;
        javax.net.ssl.HostnameVerifier hostnameVerifier19 = okHttpClient11.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool21 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient20.connectionPool = connectionPool21;
        com.squareup.okhttp.OkAuthenticator okAuthenticator23 = null;
        okHttpClient20.authenticator = okAuthenticator23;
        java.util.List<java.lang.String> strList25 = okHttpClient20.transports;
        java.net.ResponseCache responseCache26 = null;
        okHttpClient20.responseCache = responseCache26;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier29 = null;
        okHttpClient28.hostnameVerifier = hostnameVerifier29;
        java.net.ResponseCache responseCache31 = null;
        okHttpClient28.responseCache = responseCache31;
        javax.net.ssl.HostnameVerifier hostnameVerifier33 = okHttpClient28.hostnameVerifier;
        java.net.Proxy proxy34 = okHttpClient28.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool37 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient28.connectionPool = connectionPool37;
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient28.copyWithDefaults();
        java.net.Proxy proxy40 = okHttpClient39.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier41 = okHttpClient39.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient20.setHostnameVerifier(hostnameVerifier41);
        com.squareup.okhttp.OkHttpClient okHttpClient43 = okHttpClient11.setHostnameVerifier(hostnameVerifier41);
        okHttpClient0.hostnameVerifier = hostnameVerifier41;
        com.squareup.okhttp.OkAuthenticator okAuthenticator45 = okHttpClient0.getAuthenticator();
        java.net.CookieHandler cookieHandler46 = null;
        okHttpClient0.cookieHandler = cookieHandler46;
        com.squareup.okhttp.OkHttpClient okHttpClient48 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier49 = null;
        okHttpClient48.hostnameVerifier = hostnameVerifier49;
        java.net.ResponseCache responseCache51 = null;
        okHttpClient48.responseCache = responseCache51;
        java.util.List<java.lang.String> strList53 = okHttpClient48.transports;
        com.squareup.okhttp.ConnectionPool connectionPool54 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient48.connectionPool = connectionPool54;
        java.net.CookieHandler cookieHandler56 = okHttpClient48.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache57 = okHttpClient48.okResponseCache();
        java.net.CookieHandler cookieHandler58 = okHttpClient48.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient59 = new com.squareup.okhttp.OkHttpClient(okHttpClient48);
        java.net.Proxy proxy60 = java.net.Proxy.NO_PROXY;
        boolean boolean62 = proxy60.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type63 = proxy60.type();
        java.net.SocketAddress socketAddress64 = proxy60.address();
        com.squareup.okhttp.OkHttpClient okHttpClient65 = okHttpClient48.setProxy(proxy60);
        java.net.CookieHandler cookieHandler66 = null;
        okHttpClient65.cookieHandler = cookieHandler66;
        java.net.CookieHandler cookieHandler68 = okHttpClient65.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient69 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier70 = null;
        okHttpClient69.hostnameVerifier = hostnameVerifier70;
        java.net.ResponseCache responseCache72 = null;
        okHttpClient69.responseCache = responseCache72;
        java.util.List<java.lang.String> strList74 = okHttpClient69.transports;
        java.net.Proxy proxy75 = java.net.Proxy.NO_PROXY;
        boolean boolean77 = proxy75.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type78 = proxy75.type();
        java.net.SocketAddress socketAddress79 = proxy75.address();
        com.squareup.okhttp.OkHttpClient okHttpClient80 = okHttpClient69.setProxy(proxy75);
        java.net.SocketAddress socketAddress81 = proxy75.address();
        com.squareup.okhttp.OkHttpClient okHttpClient82 = okHttpClient65.setProxy(proxy75);
        java.net.Proxy.Type type83 = proxy75.type();
        java.net.SocketAddress socketAddress84 = proxy75.address();
        com.squareup.okhttp.OkHttpClient okHttpClient85 = okHttpClient0.setProxy(proxy75);
        java.net.CookieHandler cookieHandler86 = okHttpClient0.getCookieHandler();
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNull(hostnameVerifier16);
        org.junit.Assert.assertNull(sSLSocketFactory17);
        org.junit.Assert.assertNull(cookieHandler18);
        org.junit.Assert.assertNull(hostnameVerifier19);
        org.junit.Assert.assertNotNull(connectionPool21);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNull(hostnameVerifier33);
        org.junit.Assert.assertNull(proxy34);
        org.junit.Assert.assertNotNull(okHttpClient39);
        org.junit.Assert.assertNull(proxy40);
        org.junit.Assert.assertNotNull(hostnameVerifier41);
        org.junit.Assert.assertNotNull(okHttpClient42);
        org.junit.Assert.assertNotNull(okHttpClient43);
        org.junit.Assert.assertNull(okAuthenticator45);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNotNull(connectionPool54);
        org.junit.Assert.assertNull(cookieHandler56);
        org.junit.Assert.assertNull(okResponseCache57);
        org.junit.Assert.assertNull(cookieHandler58);
        org.junit.Assert.assertNotNull(proxy60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + type63 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type63.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress64);
        org.junit.Assert.assertNotNull(okHttpClient65);
        org.junit.Assert.assertNull(cookieHandler68);
        org.junit.Assert.assertNull(strList74);
        org.junit.Assert.assertNotNull(proxy75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + type78 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type78.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress79);
        org.junit.Assert.assertNotNull(okHttpClient80);
        org.junit.Assert.assertNull(socketAddress81);
        org.junit.Assert.assertNotNull(okHttpClient82);
        org.junit.Assert.assertTrue("'" + type83 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type83.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress84);
        org.junit.Assert.assertNotNull(okHttpClient85);
        org.junit.Assert.assertNull(cookieHandler86);
    }

    @Test
    public void test07186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07186");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.ConnectionPool connectionPool14 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        okHttpClient0.connectionPool = connectionPool14;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory16 = okHttpClient0.sslSocketFactory;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory17 = okHttpClient0.sslSocketFactory;
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = okHttpClient0.getHostnameVerifier();
        java.util.List<java.lang.String> strList19 = okHttpClient0.getTransports();
        com.squareup.okhttp.OkHttpClient okHttpClient20 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        java.net.ResponseCache responseCache21 = null;
        okHttpClient0.responseCache = responseCache21;
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(sSLSocketFactory16);
        org.junit.Assert.assertNull(sSLSocketFactory17);
        org.junit.Assert.assertNull(hostnameVerifier18);
        org.junit.Assert.assertNull(strList19);
    }

    @Test
    public void test07187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07187");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        java.net.CookieHandler cookieHandler7 = null;
        okHttpClient0.cookieHandler = cookieHandler7;
        okHttpClient0.followProtocolRedirects = true;
        java.net.CookieHandler cookieHandler11 = okHttpClient0.getCookieHandler();
        java.net.Proxy proxy12 = okHttpClient0.proxy;
        java.net.ProxySelector proxySelector13 = okHttpClient0.getProxySelector();
        java.net.Proxy proxy14 = okHttpClient0.getProxy();
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNull(cookieHandler11);
        org.junit.Assert.assertNull(proxy12);
        org.junit.Assert.assertNull(proxySelector13);
        org.junit.Assert.assertNull(proxy14);
    }

    @Test
    public void test07188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07188");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache8 = okHttpClient7.okResponseCache();
        java.net.ResponseCache responseCache9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient7.setResponseCache(responseCache9);
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        okHttpClient7.transports = strList13;
        okHttpClient0.transports = strList13;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient0.setFollowProtocolRedirects(true);
        com.squareup.okhttp.OkHttpClient okHttpClient19 = new com.squareup.okhttp.OkHttpClient(okHttpClient18);
        com.squareup.okhttp.OkHttpClient okHttpClient20 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool21 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient20.connectionPool = connectionPool21;
        com.squareup.okhttp.OkHttpClient okHttpClient23 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier24 = null;
        okHttpClient23.hostnameVerifier = hostnameVerifier24;
        java.net.ResponseCache responseCache26 = null;
        okHttpClient23.responseCache = responseCache26;
        java.util.List<java.lang.String> strList28 = okHttpClient23.transports;
        com.squareup.okhttp.ConnectionPool connectionPool29 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient23.connectionPool = connectionPool29;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient20.setConnectionPool(connectionPool29);
        com.squareup.okhttp.OkAuthenticator okAuthenticator32 = okHttpClient31.getAuthenticator();
        java.net.ProxySelector proxySelector33 = okHttpClient31.getProxySelector();
        java.net.ProxySelector proxySelector34 = null;
        okHttpClient31.proxySelector = proxySelector34;
        java.net.ProxySelector proxySelector36 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient31.setProxySelector(proxySelector36);
        com.squareup.okhttp.ConnectionPool connectionPool40 = new com.squareup.okhttp.ConnectionPool(10, 1L);
        com.squareup.okhttp.OkHttpClient okHttpClient41 = okHttpClient37.setConnectionPool(connectionPool40);
        int int42 = connectionPool40.getConnectionCount();
        okHttpClient18.connectionPool = connectionPool40;
        com.squareup.okhttp.OkHttpClient okHttpClient44 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier45 = null;
        okHttpClient44.hostnameVerifier = hostnameVerifier45;
        java.net.ProxySelector proxySelector47 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient48 = okHttpClient44.setProxySelector(proxySelector47);
        java.net.CookieHandler cookieHandler49 = okHttpClient44.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient50 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier51 = null;
        okHttpClient50.hostnameVerifier = hostnameVerifier51;
        java.net.ResponseCache responseCache53 = null;
        okHttpClient50.responseCache = responseCache53;
        java.util.List<java.lang.String> strList55 = okHttpClient50.transports;
        com.squareup.okhttp.ConnectionPool connectionPool56 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient50.connectionPool = connectionPool56;
        java.net.Proxy proxy58 = null;
        okHttpClient50.proxy = proxy58;
        java.util.Set<com.squareup.okhttp.Route> routeSet60 = okHttpClient50.failedRoutes;
        okHttpClient44.failedRoutes = routeSet60;
        java.net.ProxySelector proxySelector62 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient63 = okHttpClient44.setProxySelector(proxySelector62);
        com.squareup.okhttp.OkHttpClient okHttpClient64 = new com.squareup.okhttp.OkHttpClient(okHttpClient63);
        com.squareup.okhttp.OkHttpClient okHttpClient66 = okHttpClient64.setFollowProtocolRedirects(false);
        java.net.ProxySelector proxySelector67 = null;
        okHttpClient64.proxySelector = proxySelector67;
        java.net.CookieHandler cookieHandler69 = null;
        okHttpClient64.cookieHandler = cookieHandler69;
        com.squareup.okhttp.ConnectionPool connectionPool73 = new com.squareup.okhttp.ConnectionPool((int) 'a', (long) (byte) -1);
        connectionPool73.evictAll();
        com.squareup.okhttp.OkHttpClient okHttpClient75 = okHttpClient64.setConnectionPool(connectionPool73);
        com.squareup.okhttp.OkHttpClient okHttpClient76 = okHttpClient18.setConnectionPool(connectionPool73);
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNull(okResponseCache8);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNotNull(connectionPool21);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNotNull(connectionPool29);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNull(okAuthenticator32);
        org.junit.Assert.assertNull(proxySelector33);
        org.junit.Assert.assertNotNull(okHttpClient37);
        org.junit.Assert.assertNotNull(okHttpClient41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(okHttpClient48);
        org.junit.Assert.assertNull(cookieHandler49);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertNotNull(connectionPool56);
        org.junit.Assert.assertNotNull(routeSet60);
        org.junit.Assert.assertNotNull(okHttpClient63);
        org.junit.Assert.assertNotNull(okHttpClient66);
        org.junit.Assert.assertNotNull(okHttpClient75);
        org.junit.Assert.assertNotNull(okHttpClient76);
    }

    @Test
    public void test07189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07189");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory6 = okHttpClient0.sslSocketFactory;
        java.net.CookieHandler cookieHandler7 = okHttpClient0.cookieHandler;
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = okHttpClient0.hostnameVerifier;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache9 = okHttpClient0.okResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient10 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool11 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient10.connectionPool = connectionPool11;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = null;
        okHttpClient13.hostnameVerifier = hostnameVerifier14;
        java.net.ResponseCache responseCache16 = null;
        okHttpClient13.responseCache = responseCache16;
        java.util.List<java.lang.String> strList18 = okHttpClient13.transports;
        com.squareup.okhttp.ConnectionPool connectionPool19 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient13.connectionPool = connectionPool19;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient10.setConnectionPool(connectionPool19);
        com.squareup.okhttp.ConnectionPool connectionPool22 = okHttpClient21.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator23 = okHttpClient21.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool26 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient21.connectionPool = connectionPool26;
        java.net.ResponseCache responseCache28 = okHttpClient21.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory29 = okHttpClient21.sslSocketFactory;
        java.net.Proxy proxy30 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress31 = proxy30.address();
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient21.setProxy(proxy30);
        com.squareup.okhttp.OkHttpClient okHttpClient33 = new com.squareup.okhttp.OkHttpClient(okHttpClient32);
        com.squareup.okhttp.OkHttpClient okHttpClient34 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier35 = null;
        okHttpClient34.hostnameVerifier = hostnameVerifier35;
        boolean boolean37 = okHttpClient34.getFollowProtocolRedirects();
        java.net.CookieHandler cookieHandler38 = okHttpClient34.cookieHandler;
        com.squareup.okhttp.OkHttpClient okHttpClient39 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier40 = null;
        okHttpClient39.hostnameVerifier = hostnameVerifier40;
        java.net.ResponseCache responseCache42 = null;
        okHttpClient39.responseCache = responseCache42;
        javax.net.ssl.HostnameVerifier hostnameVerifier44 = okHttpClient39.hostnameVerifier;
        java.net.Proxy proxy45 = okHttpClient39.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool48 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient39.connectionPool = connectionPool48;
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient39.copyWithDefaults();
        java.net.ResponseCache responseCache51 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient52 = okHttpClient50.setResponseCache(responseCache51);
        com.squareup.okhttp.OkAuthenticator okAuthenticator53 = okHttpClient50.authenticator;
        okHttpClient34.authenticator = okAuthenticator53;
        okHttpClient33.authenticator = okAuthenticator53;
        com.squareup.okhttp.OkHttpClient okHttpClient56 = okHttpClient0.setAuthenticator(okAuthenticator53);
        com.squareup.okhttp.ConnectionPool connectionPool57 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient58 = okHttpClient0.setConnectionPool(connectionPool57);
        java.util.List<java.lang.String> strList59 = okHttpClient0.getTransports();
        java.net.ResponseCache responseCache60 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient61 = okHttpClient0.setResponseCache(responseCache60);
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache62 = okHttpClient0.okResponseCache();
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(sSLSocketFactory6);
        org.junit.Assert.assertNull(cookieHandler7);
        org.junit.Assert.assertNull(hostnameVerifier8);
        org.junit.Assert.assertNull(okResponseCache9);
        org.junit.Assert.assertNotNull(connectionPool11);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(connectionPool19);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNotNull(connectionPool22);
        org.junit.Assert.assertNull(okAuthenticator23);
        org.junit.Assert.assertNull(responseCache28);
        org.junit.Assert.assertNull(sSLSocketFactory29);
        org.junit.Assert.assertNotNull(proxy30);
        org.junit.Assert.assertNull(socketAddress31);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(cookieHandler38);
        org.junit.Assert.assertNull(hostnameVerifier44);
        org.junit.Assert.assertNull(proxy45);
        org.junit.Assert.assertNotNull(okHttpClient50);
        org.junit.Assert.assertNotNull(okHttpClient52);
        org.junit.Assert.assertNotNull(okAuthenticator53);
        org.junit.Assert.assertNotNull(okHttpClient56);
        org.junit.Assert.assertNotNull(okHttpClient58);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNotNull(okHttpClient61);
        org.junit.Assert.assertNull(okResponseCache62);
    }

    @Test
    public void test07190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07190");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory6);
        com.squareup.okhttp.ConnectionPool connectionPool8 = okHttpClient7.getConnectionPool();
        java.net.ResponseCache responseCache9 = null;
        okHttpClient7.responseCache = responseCache9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient(okHttpClient7);
        java.net.ProxySelector proxySelector12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient7.setProxySelector(proxySelector12);
        java.net.ResponseCache responseCache14 = null;
        okHttpClient13.responseCache = responseCache14;
        java.net.ProxySelector proxySelector16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient13.setProxySelector(proxySelector16);
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient17.setFollowProtocolRedirects(true);
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNotNull(okHttpClient7);
        org.junit.Assert.assertNull(connectionPool8);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNotNull(okHttpClient19);
    }

    @Test
    public void test07191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07191");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        java.net.Proxy proxy12 = okHttpClient11.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool14 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient13.connectionPool = connectionPool14;
        int int16 = connectionPool14.getSpdyConnectionCount();
        okHttpClient11.connectionPool = connectionPool14;
        java.net.Proxy proxy18 = okHttpClient11.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier20 = null;
        okHttpClient19.hostnameVerifier = hostnameVerifier20;
        java.net.ProxySelector proxySelector22 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient19.setProxySelector(proxySelector22);
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient23.copyWithDefaults();
        java.net.ProxySelector proxySelector25 = null;
        okHttpClient24.proxySelector = proxySelector25;
        com.squareup.okhttp.OkAuthenticator okAuthenticator27 = okHttpClient24.authenticator;
        okHttpClient11.authenticator = okAuthenticator27;
        java.net.CookieHandler cookieHandler29 = null;
        okHttpClient11.cookieHandler = cookieHandler29;
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(proxy12);
        org.junit.Assert.assertNotNull(connectionPool14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNull(proxy18);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNotNull(okAuthenticator27);
    }

    @Test
    public void test07192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07192");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        java.net.Proxy proxy12 = okHttpClient11.proxy;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory13 = null;
        okHttpClient11.sslSocketFactory = sSLSocketFactory13;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier16 = null;
        okHttpClient15.hostnameVerifier = hostnameVerifier16;
        java.net.ResponseCache responseCache18 = null;
        okHttpClient15.responseCache = responseCache18;
        java.util.List<java.lang.String> strList20 = okHttpClient15.transports;
        com.squareup.okhttp.ConnectionPool connectionPool21 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient15.connectionPool = connectionPool21;
        com.squareup.okhttp.ConnectionPool connectionPool23 = okHttpClient15.connectionPool;
        int int24 = connectionPool23.getHttpConnectionCount();
        com.squareup.okhttp.Address address25 = null;
        com.squareup.okhttp.Connection connection26 = connectionPool23.get(address25);
        okHttpClient11.connectionPool = connectionPool23;
        java.net.ProxySelector proxySelector28 = okHttpClient11.proxySelector;
        java.net.Proxy proxy29 = java.net.Proxy.NO_PROXY;
        boolean boolean31 = proxy29.equals((java.lang.Object) 1L);
        com.squareup.okhttp.OkHttpClient okHttpClient32 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache33 = okHttpClient32.okResponseCache();
        java.net.ResponseCache responseCache34 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient32.setResponseCache(responseCache34);
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList38 = new java.util.ArrayList<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        okHttpClient32.transports = strList38;
        boolean boolean41 = proxy29.equals((java.lang.Object) strList38);
        okHttpClient11.proxy = proxy29;
        com.squareup.okhttp.OkHttpClient okHttpClient43 = new com.squareup.okhttp.OkHttpClient(okHttpClient11);
        java.net.ResponseCache responseCache44 = okHttpClient11.getResponseCache();
        java.net.Proxy proxy45 = okHttpClient11.getProxy();
        java.net.ProxySelector proxySelector46 = null;
        okHttpClient11.proxySelector = proxySelector46;
        java.net.URL uRL48 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.HttpURLConnection httpURLConnection49 = okHttpClient11.open(uRL48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(proxy12);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(connectionPool21);
        org.junit.Assert.assertNotNull(connectionPool23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNull(connection26);
        org.junit.Assert.assertNull(proxySelector28);
        org.junit.Assert.assertNotNull(proxy29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(okResponseCache33);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(responseCache44);
        org.junit.Assert.assertNotNull(proxy45);
    }

    @Test
    public void test07193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07193");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        java.net.Proxy proxy6 = java.net.Proxy.NO_PROXY;
        boolean boolean8 = proxy6.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type9 = proxy6.type();
        java.net.SocketAddress socketAddress10 = proxy6.address();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setProxy(proxy6);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setSSLSocketFactory(sSLSocketFactory12);
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = okHttpClient11.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient(okHttpClient11);
        java.util.List<java.lang.String> strList16 = okHttpClient15.transports;
        java.net.ResponseCache responseCache17 = null;
        okHttpClient15.responseCache = responseCache17;
        java.net.ProxySelector proxySelector19 = okHttpClient15.proxySelector;
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(proxy6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + type9 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type9.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress10);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNull(hostnameVerifier14);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNull(proxySelector19);
    }

    @Test
    public void test07194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07194");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.Proxy proxy8 = null;
        okHttpClient0.proxy = proxy8;
        boolean boolean10 = okHttpClient0.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient0.setFollowProtocolRedirects(true);
        javax.net.ssl.HostnameVerifier hostnameVerifier13 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier13;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient0.copyWithDefaults();
        java.net.CookieHandler cookieHandler17 = okHttpClient16.cookieHandler;
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNull(cookieHandler17);
    }

    @Test
    public void test07195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07195");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.CookieHandler cookieHandler5 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = null;
        okHttpClient6.hostnameVerifier = hostnameVerifier7;
        java.net.ResponseCache responseCache9 = null;
        okHttpClient6.responseCache = responseCache9;
        java.util.List<java.lang.String> strList11 = okHttpClient6.transports;
        com.squareup.okhttp.ConnectionPool connectionPool12 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient6.connectionPool = connectionPool12;
        java.net.Proxy proxy14 = null;
        okHttpClient6.proxy = proxy14;
        java.util.Set<com.squareup.okhttp.Route> routeSet16 = okHttpClient6.failedRoutes;
        okHttpClient0.failedRoutes = routeSet16;
        java.net.ProxySelector proxySelector18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient0.setProxySelector(proxySelector18);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory20 = null;
        okHttpClient19.sslSocketFactory = sSLSocketFactory20;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient(okHttpClient19);
        java.net.ProxySelector proxySelector23 = null;
        okHttpClient22.proxySelector = proxySelector23;
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNotNull(routeSet16);
        org.junit.Assert.assertNotNull(okHttpClient19);
    }

    @Test
    public void test07196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07196");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.ResponseCache responseCache5 = null;
        okHttpClient4.responseCache = responseCache5;
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = okHttpClient4.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient4.setFollowProtocolRedirects(false);
        java.net.ProxySelector proxySelector10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient9.setProxySelector(proxySelector10);
        okHttpClient11.followProtocolRedirects = true;
        java.util.List<java.lang.String> strList14 = okHttpClient11.transports;
        okHttpClient11.followProtocolRedirects = false;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = null;
        okHttpClient17.hostnameVerifier = hostnameVerifier18;
        java.net.ProxySelector proxySelector20 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient17.setProxySelector(proxySelector20);
        java.net.CookieHandler cookieHandler22 = okHttpClient17.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient23 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier24 = null;
        okHttpClient23.hostnameVerifier = hostnameVerifier24;
        java.net.ResponseCache responseCache26 = null;
        okHttpClient23.responseCache = responseCache26;
        java.util.List<java.lang.String> strList28 = okHttpClient23.transports;
        com.squareup.okhttp.ConnectionPool connectionPool29 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient23.connectionPool = connectionPool29;
        java.net.Proxy proxy31 = null;
        okHttpClient23.proxy = proxy31;
        java.util.Set<com.squareup.okhttp.Route> routeSet33 = okHttpClient23.failedRoutes;
        okHttpClient17.failedRoutes = routeSet33;
        javax.net.ssl.HostnameVerifier hostnameVerifier35 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient17.setHostnameVerifier(hostnameVerifier35);
        java.net.ProxySelector proxySelector37 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient36.setProxySelector(proxySelector37);
        com.squareup.okhttp.OkHttpClient okHttpClient39 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache40 = okHttpClient39.okResponseCache();
        java.net.ResponseCache responseCache41 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient39.setResponseCache(responseCache41);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory43 = okHttpClient39.sslSocketFactory;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory44 = okHttpClient39.sslSocketFactory;
        com.squareup.okhttp.OkHttpClient okHttpClient45 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier46 = null;
        okHttpClient45.hostnameVerifier = hostnameVerifier46;
        boolean boolean48 = okHttpClient45.getFollowProtocolRedirects();
        java.net.CookieHandler cookieHandler49 = okHttpClient45.cookieHandler;
        com.squareup.okhttp.OkHttpClient okHttpClient50 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier51 = null;
        okHttpClient50.hostnameVerifier = hostnameVerifier51;
        java.net.ResponseCache responseCache53 = null;
        okHttpClient50.responseCache = responseCache53;
        javax.net.ssl.HostnameVerifier hostnameVerifier55 = okHttpClient50.hostnameVerifier;
        java.net.Proxy proxy56 = okHttpClient50.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool59 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient50.connectionPool = connectionPool59;
        com.squareup.okhttp.OkHttpClient okHttpClient61 = okHttpClient50.copyWithDefaults();
        java.net.ResponseCache responseCache62 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient63 = okHttpClient61.setResponseCache(responseCache62);
        com.squareup.okhttp.OkAuthenticator okAuthenticator64 = okHttpClient61.authenticator;
        okHttpClient45.authenticator = okAuthenticator64;
        com.squareup.okhttp.OkHttpClient okHttpClient66 = okHttpClient39.setAuthenticator(okAuthenticator64);
        com.squareup.okhttp.OkHttpClient okHttpClient67 = okHttpClient38.setAuthenticator(okAuthenticator64);
        com.squareup.okhttp.OkHttpClient okHttpClient68 = okHttpClient11.setAuthenticator(okAuthenticator64);
        javax.net.ssl.HostnameVerifier hostnameVerifier69 = okHttpClient11.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient71 = okHttpClient11.setFollowProtocolRedirects(false);
        com.squareup.okhttp.OkHttpClient okHttpClient72 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier73 = null;
        okHttpClient72.hostnameVerifier = hostnameVerifier73;
        java.net.ResponseCache responseCache75 = null;
        okHttpClient72.responseCache = responseCache75;
        javax.net.ssl.HostnameVerifier hostnameVerifier77 = okHttpClient72.hostnameVerifier;
        java.net.Proxy proxy78 = okHttpClient72.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool81 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient72.connectionPool = connectionPool81;
        com.squareup.okhttp.OkHttpClient okHttpClient83 = okHttpClient72.copyWithDefaults();
        java.net.ResponseCache responseCache84 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient85 = okHttpClient83.setResponseCache(responseCache84);
        java.net.ProxySelector proxySelector86 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient87 = okHttpClient83.setProxySelector(proxySelector86);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory88 = okHttpClient87.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient89 = new com.squareup.okhttp.OkHttpClient(okHttpClient87);
        com.squareup.okhttp.ConnectionPool connectionPool90 = okHttpClient87.getConnectionPool();
        com.squareup.okhttp.OkHttpClient okHttpClient91 = okHttpClient71.setConnectionPool(connectionPool90);
        java.net.CookieHandler cookieHandler92 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient93 = okHttpClient91.setCookieHandler(cookieHandler92);
        com.squareup.okhttp.OkAuthenticator okAuthenticator94 = okHttpClient93.authenticator;
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(hostnameVerifier7);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNull(cookieHandler22);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNotNull(connectionPool29);
        org.junit.Assert.assertNotNull(routeSet33);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNull(okResponseCache40);
        org.junit.Assert.assertNotNull(okHttpClient42);
        org.junit.Assert.assertNull(sSLSocketFactory43);
        org.junit.Assert.assertNull(sSLSocketFactory44);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(cookieHandler49);
        org.junit.Assert.assertNull(hostnameVerifier55);
        org.junit.Assert.assertNull(proxy56);
        org.junit.Assert.assertNotNull(okHttpClient61);
        org.junit.Assert.assertNotNull(okHttpClient63);
        org.junit.Assert.assertNotNull(okAuthenticator64);
        org.junit.Assert.assertNotNull(okHttpClient66);
        org.junit.Assert.assertNotNull(okHttpClient67);
        org.junit.Assert.assertNotNull(okHttpClient68);
        org.junit.Assert.assertNull(hostnameVerifier69);
        org.junit.Assert.assertNotNull(okHttpClient71);
        org.junit.Assert.assertNull(hostnameVerifier77);
        org.junit.Assert.assertNull(proxy78);
        org.junit.Assert.assertNotNull(okHttpClient83);
        org.junit.Assert.assertNotNull(okHttpClient85);
        org.junit.Assert.assertNotNull(okHttpClient87);
        org.junit.Assert.assertNotNull(sSLSocketFactory88);
        org.junit.Assert.assertNotNull(connectionPool90);
        org.junit.Assert.assertNotNull(okHttpClient91);
        org.junit.Assert.assertNotNull(okHttpClient93);
        org.junit.Assert.assertNotNull(okAuthenticator94);
    }

    @Test
    public void test07197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07197");
        com.squareup.okhttp.ConnectionPool connectionPool2 = new com.squareup.okhttp.ConnectionPool(1, (long) (-1));
    }

    @Test
    public void test07198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07198");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory6 = okHttpClient0.sslSocketFactory;
        java.net.CookieHandler cookieHandler7 = okHttpClient0.cookieHandler;
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = okHttpClient0.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool10 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient9.connectionPool = connectionPool10;
        com.squareup.okhttp.OkAuthenticator okAuthenticator12 = null;
        okHttpClient9.authenticator = okAuthenticator12;
        java.util.List<java.lang.String> strList14 = okHttpClient9.transports;
        java.net.ResponseCache responseCache15 = null;
        okHttpClient9.responseCache = responseCache15;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = null;
        okHttpClient17.hostnameVerifier = hostnameVerifier18;
        java.net.ResponseCache responseCache20 = null;
        okHttpClient17.responseCache = responseCache20;
        javax.net.ssl.HostnameVerifier hostnameVerifier22 = okHttpClient17.hostnameVerifier;
        java.net.Proxy proxy23 = okHttpClient17.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool26 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient17.connectionPool = connectionPool26;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient17.copyWithDefaults();
        java.net.Proxy proxy29 = okHttpClient28.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = okHttpClient28.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient9.setHostnameVerifier(hostnameVerifier30);
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient0.setHostnameVerifier(hostnameVerifier30);
        java.net.ProxySelector proxySelector33 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient32.setProxySelector(proxySelector33);
        javax.net.ssl.HostnameVerifier hostnameVerifier35 = okHttpClient32.getHostnameVerifier();
        java.net.ResponseCache responseCache36 = okHttpClient32.getResponseCache();
        okHttpClient32.followProtocolRedirects = false;
        com.squareup.okhttp.OkAuthenticator okAuthenticator39 = okHttpClient32.getAuthenticator();
        java.util.List<java.lang.String> strList40 = okHttpClient32.transports;
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(sSLSocketFactory6);
        org.junit.Assert.assertNull(cookieHandler7);
        org.junit.Assert.assertNull(hostnameVerifier8);
        org.junit.Assert.assertNotNull(connectionPool10);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(hostnameVerifier22);
        org.junit.Assert.assertNull(proxy23);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNull(proxy29);
        org.junit.Assert.assertNotNull(hostnameVerifier30);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertNotNull(hostnameVerifier35);
        org.junit.Assert.assertNull(responseCache36);
        org.junit.Assert.assertNull(okAuthenticator39);
        org.junit.Assert.assertNull(strList40);
    }

    @Test
    public void test07199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07199");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.CookieHandler cookieHandler8 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache9 = okHttpClient0.okResponseCache();
        java.net.CookieHandler cookieHandler10 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = okHttpClient11.hostnameVerifier;
        java.util.List<java.lang.String> strList13 = okHttpClient11.transports;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient11.setSSLSocketFactory(sSLSocketFactory14);
        com.squareup.okhttp.ConnectionPool connectionPool16 = okHttpClient15.connectionPool;
        java.net.ProxySelector proxySelector17 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient15.setProxySelector(proxySelector17);
        java.net.ProxySelector proxySelector19 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient18.setProxySelector(proxySelector19);
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient18.setFollowProtocolRedirects(true);
        java.util.List<java.lang.String> strList23 = okHttpClient22.transports;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier25 = null;
        okHttpClient24.hostnameVerifier = hostnameVerifier25;
        java.net.ResponseCache responseCache27 = null;
        okHttpClient24.responseCache = responseCache27;
        java.util.List<java.lang.String> strList29 = okHttpClient24.transports;
        com.squareup.okhttp.ConnectionPool connectionPool30 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient24.connectionPool = connectionPool30;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient24.copyWithDefaults();
        java.net.ProxySelector proxySelector33 = okHttpClient32.proxySelector;
        com.squareup.okhttp.ConnectionPool connectionPool34 = okHttpClient32.connectionPool;
        java.util.Set<com.squareup.okhttp.Route> routeSet35 = okHttpClient32.failedRoutes;
        java.net.ResponseCache responseCache36 = null;
        okHttpClient32.responseCache = responseCache36;
        java.util.List<java.lang.String> strList38 = okHttpClient32.transports;
        com.squareup.okhttp.OkHttpClient.DEFAULT_TRANSPORTS = strList38;
        com.squareup.okhttp.OkHttpClient.DEFAULT_TRANSPORTS = strList38;
        com.squareup.okhttp.OkHttpClient.DEFAULT_TRANSPORTS = strList38;
        // The following exception was thrown during execution in test generation
        try {
            com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient22.setTransports(strList38);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: transports doesn't contain http/1.1: [hi!]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNull(cookieHandler8);
        org.junit.Assert.assertNull(okResponseCache9);
        org.junit.Assert.assertNull(cookieHandler10);
        org.junit.Assert.assertNull(hostnameVerifier12);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNull(connectionPool16);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(connectionPool30);
        org.junit.Assert.assertNotNull(okHttpClient32);
// flaky:         org.junit.Assert.assertNull(proxySelector33);
        org.junit.Assert.assertNotNull(connectionPool34);
        org.junit.Assert.assertNotNull(routeSet35);
        org.junit.Assert.assertNotNull(strList38);
    }

    @Test
    public void test07200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07200");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.CookieHandler cookieHandler5 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = null;
        okHttpClient6.hostnameVerifier = hostnameVerifier7;
        java.net.ResponseCache responseCache9 = null;
        okHttpClient6.responseCache = responseCache9;
        java.util.List<java.lang.String> strList11 = okHttpClient6.transports;
        com.squareup.okhttp.ConnectionPool connectionPool12 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient6.connectionPool = connectionPool12;
        java.net.Proxy proxy14 = null;
        okHttpClient6.proxy = proxy14;
        java.util.Set<com.squareup.okhttp.Route> routeSet16 = okHttpClient6.failedRoutes;
        okHttpClient0.failedRoutes = routeSet16;
        java.net.ProxySelector proxySelector18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient0.setProxySelector(proxySelector18);
        com.squareup.okhttp.OkHttpClient okHttpClient20 = new com.squareup.okhttp.OkHttpClient(okHttpClient19);
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient20.setFollowProtocolRedirects(false);
        java.net.ResponseCache responseCache23 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient22.setResponseCache(responseCache23);
        com.squareup.okhttp.OkHttpClient okHttpClient25 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier26 = null;
        okHttpClient25.hostnameVerifier = hostnameVerifier26;
        java.net.ResponseCache responseCache28 = null;
        okHttpClient25.responseCache = responseCache28;
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = okHttpClient25.hostnameVerifier;
        java.net.Proxy proxy31 = okHttpClient25.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool34 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient25.connectionPool = connectionPool34;
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient25.copyWithDefaults();
        java.net.ResponseCache responseCache37 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient36.setResponseCache(responseCache37);
        java.net.CookieHandler cookieHandler39 = null;
        okHttpClient38.cookieHandler = cookieHandler39;
        com.squareup.okhttp.OkHttpClient okHttpClient41 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier42 = null;
        okHttpClient41.hostnameVerifier = hostnameVerifier42;
        java.net.ResponseCache responseCache44 = null;
        okHttpClient41.responseCache = responseCache44;
        java.util.List<java.lang.String> strList46 = okHttpClient41.transports;
        com.squareup.okhttp.ConnectionPool connectionPool47 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient41.connectionPool = connectionPool47;
        com.squareup.okhttp.OkHttpClient okHttpClient49 = okHttpClient41.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient50 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier51 = null;
        okHttpClient50.hostnameVerifier = hostnameVerifier51;
        java.net.ResponseCache responseCache53 = null;
        okHttpClient50.responseCache = responseCache53;
        java.util.List<java.lang.String> strList55 = okHttpClient50.transports;
        com.squareup.okhttp.ConnectionPool connectionPool56 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient50.connectionPool = connectionPool56;
        com.squareup.okhttp.OkHttpClient okHttpClient58 = okHttpClient50.copyWithDefaults();
        java.net.ProxySelector proxySelector59 = okHttpClient58.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory60 = okHttpClient58.getSslSocketFactory();
        okHttpClient41.sslSocketFactory = sSLSocketFactory60;
        java.net.Socket socket62 = sSLSocketFactory60.createSocket();
        java.net.Socket socket63 = sSLSocketFactory60.createSocket();
        okHttpClient38.sslSocketFactory = sSLSocketFactory60;
        java.lang.String[] strArray65 = sSLSocketFactory60.getDefaultCipherSuites();
        okHttpClient24.sslSocketFactory = sSLSocketFactory60;
        java.net.CookieHandler cookieHandler67 = okHttpClient24.cookieHandler;
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNotNull(routeSet16);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNull(hostnameVerifier30);
        org.junit.Assert.assertNull(proxy31);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNotNull(connectionPool47);
        org.junit.Assert.assertNotNull(okHttpClient49);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertNotNull(connectionPool56);
        org.junit.Assert.assertNotNull(okHttpClient58);
// flaky:         org.junit.Assert.assertNull(proxySelector59);
        org.junit.Assert.assertNotNull(sSLSocketFactory60);
        org.junit.Assert.assertNotNull(socket62);
        org.junit.Assert.assertEquals(socket62.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(socket63);
        org.junit.Assert.assertEquals(socket63.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNull(cookieHandler67);
    }

    @Test
    public void test07201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07201");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.CookieHandler cookieHandler5 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = null;
        okHttpClient6.hostnameVerifier = hostnameVerifier7;
        java.net.ResponseCache responseCache9 = null;
        okHttpClient6.responseCache = responseCache9;
        java.util.List<java.lang.String> strList11 = okHttpClient6.transports;
        com.squareup.okhttp.ConnectionPool connectionPool12 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient6.connectionPool = connectionPool12;
        java.net.Proxy proxy14 = null;
        okHttpClient6.proxy = proxy14;
        java.util.Set<com.squareup.okhttp.Route> routeSet16 = okHttpClient6.failedRoutes;
        okHttpClient0.failedRoutes = routeSet16;
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient0.setHostnameVerifier(hostnameVerifier18);
        java.net.ResponseCache responseCache20 = okHttpClient0.responseCache;
        com.squareup.okhttp.OkAuthenticator okAuthenticator21 = okHttpClient0.authenticator;
        java.net.ProxySelector proxySelector22 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient0.setProxySelector(proxySelector22);
        okHttpClient0.followProtocolRedirects = true;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory26 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory26);
        com.squareup.okhttp.ConnectionPool connectionPool28 = okHttpClient0.getConnectionPool();
        boolean boolean29 = okHttpClient0.getFollowProtocolRedirects();
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNotNull(routeSet16);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNull(responseCache20);
        org.junit.Assert.assertNull(okAuthenticator21);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNull(connectionPool28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    }

    @Test
    public void test07202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07202");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.Proxy proxy8 = null;
        okHttpClient0.proxy = proxy8;
        boolean boolean10 = okHttpClient0.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache12 = okHttpClient11.okResponseCache();
        java.net.ResponseCache responseCache13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient11.setResponseCache(responseCache13);
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        okHttpClient11.transports = strList17;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory20 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient11.setSSLSocketFactory(sSLSocketFactory20);
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier23 = null;
        okHttpClient22.hostnameVerifier = hostnameVerifier23;
        java.net.ResponseCache responseCache25 = null;
        okHttpClient22.responseCache = responseCache25;
        javax.net.ssl.HostnameVerifier hostnameVerifier27 = okHttpClient22.hostnameVerifier;
        java.net.Proxy proxy28 = okHttpClient22.getProxy();
        java.net.CookieHandler cookieHandler29 = null;
        okHttpClient22.cookieHandler = cookieHandler29;
        okHttpClient22.followProtocolRedirects = true;
        com.squareup.okhttp.OkHttpClient okHttpClient33 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier34 = null;
        okHttpClient33.hostnameVerifier = hostnameVerifier34;
        java.net.ResponseCache responseCache36 = null;
        okHttpClient33.responseCache = responseCache36;
        javax.net.ssl.HostnameVerifier hostnameVerifier38 = okHttpClient33.hostnameVerifier;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory39 = okHttpClient33.sslSocketFactory;
        java.net.CookieHandler cookieHandler40 = okHttpClient33.cookieHandler;
        javax.net.ssl.HostnameVerifier hostnameVerifier41 = okHttpClient33.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient42 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool43 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient42.connectionPool = connectionPool43;
        com.squareup.okhttp.OkAuthenticator okAuthenticator45 = null;
        okHttpClient42.authenticator = okAuthenticator45;
        java.util.List<java.lang.String> strList47 = okHttpClient42.transports;
        java.net.ResponseCache responseCache48 = null;
        okHttpClient42.responseCache = responseCache48;
        com.squareup.okhttp.OkHttpClient okHttpClient50 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier51 = null;
        okHttpClient50.hostnameVerifier = hostnameVerifier51;
        java.net.ResponseCache responseCache53 = null;
        okHttpClient50.responseCache = responseCache53;
        javax.net.ssl.HostnameVerifier hostnameVerifier55 = okHttpClient50.hostnameVerifier;
        java.net.Proxy proxy56 = okHttpClient50.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool59 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient50.connectionPool = connectionPool59;
        com.squareup.okhttp.OkHttpClient okHttpClient61 = okHttpClient50.copyWithDefaults();
        java.net.Proxy proxy62 = okHttpClient61.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier63 = okHttpClient61.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient64 = okHttpClient42.setHostnameVerifier(hostnameVerifier63);
        com.squareup.okhttp.OkHttpClient okHttpClient65 = okHttpClient33.setHostnameVerifier(hostnameVerifier63);
        okHttpClient22.hostnameVerifier = hostnameVerifier63;
        com.squareup.okhttp.OkHttpClient okHttpClient67 = okHttpClient11.setHostnameVerifier(hostnameVerifier63);
        com.squareup.okhttp.OkHttpClient okHttpClient68 = okHttpClient0.setHostnameVerifier(hostnameVerifier63);
        javax.net.ssl.HostnameVerifier hostnameVerifier69 = okHttpClient0.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient70 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool71 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient70.connectionPool = connectionPool71;
        com.squareup.okhttp.OkHttpClient okHttpClient73 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier74 = null;
        okHttpClient73.hostnameVerifier = hostnameVerifier74;
        java.net.ResponseCache responseCache76 = null;
        okHttpClient73.responseCache = responseCache76;
        java.util.List<java.lang.String> strList78 = okHttpClient73.transports;
        com.squareup.okhttp.ConnectionPool connectionPool79 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient73.connectionPool = connectionPool79;
        com.squareup.okhttp.OkHttpClient okHttpClient81 = okHttpClient70.setConnectionPool(connectionPool79);
        com.squareup.okhttp.ConnectionPool connectionPool82 = okHttpClient81.getConnectionPool();
        okHttpClient0.connectionPool = connectionPool82;
        int int84 = connectionPool82.getConnectionCount();
        com.squareup.okhttp.Connection connection85 = null;
        // The following exception was thrown during execution in test generation
        try {
            connectionPool82.maybeShare(connection85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(okResponseCache12);
        org.junit.Assert.assertNotNull(okHttpClient14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNull(hostnameVerifier27);
        org.junit.Assert.assertNull(proxy28);
        org.junit.Assert.assertNull(hostnameVerifier38);
        org.junit.Assert.assertNull(sSLSocketFactory39);
        org.junit.Assert.assertNull(cookieHandler40);
        org.junit.Assert.assertNull(hostnameVerifier41);
        org.junit.Assert.assertNotNull(connectionPool43);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNull(hostnameVerifier55);
        org.junit.Assert.assertNull(proxy56);
        org.junit.Assert.assertNotNull(okHttpClient61);
        org.junit.Assert.assertNull(proxy62);
        org.junit.Assert.assertNotNull(hostnameVerifier63);
        org.junit.Assert.assertNotNull(okHttpClient64);
        org.junit.Assert.assertNotNull(okHttpClient65);
        org.junit.Assert.assertNotNull(okHttpClient67);
        org.junit.Assert.assertNotNull(okHttpClient68);
        org.junit.Assert.assertNotNull(hostnameVerifier69);
        org.junit.Assert.assertNotNull(connectionPool71);
        org.junit.Assert.assertNull(strList78);
        org.junit.Assert.assertNotNull(connectionPool79);
        org.junit.Assert.assertNotNull(okHttpClient81);
        org.junit.Assert.assertNotNull(connectionPool82);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
    }

    @Test
    public void test07203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07203");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.CookieHandler cookieHandler8 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache9 = okHttpClient0.okResponseCache();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory10 = null;
        okHttpClient0.sslSocketFactory = sSLSocketFactory10;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory12);
        java.net.CookieHandler cookieHandler14 = okHttpClient0.cookieHandler;
        java.util.List<java.lang.String> strList15 = okHttpClient0.getTransports();
        java.net.ResponseCache responseCache16 = null;
        okHttpClient0.responseCache = responseCache16;
        java.net.ProxySelector proxySelector18 = okHttpClient0.proxySelector;
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNull(cookieHandler8);
        org.junit.Assert.assertNull(okResponseCache9);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNull(cookieHandler14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNull(proxySelector18);
    }

    @Test
    public void test07204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07204");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.CookieHandler cookieHandler5 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = null;
        okHttpClient6.hostnameVerifier = hostnameVerifier7;
        java.net.ResponseCache responseCache9 = null;
        okHttpClient6.responseCache = responseCache9;
        java.util.List<java.lang.String> strList11 = okHttpClient6.transports;
        com.squareup.okhttp.ConnectionPool connectionPool12 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient6.connectionPool = connectionPool12;
        java.net.Proxy proxy14 = null;
        okHttpClient6.proxy = proxy14;
        java.util.Set<com.squareup.okhttp.Route> routeSet16 = okHttpClient6.failedRoutes;
        okHttpClient0.failedRoutes = routeSet16;
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient0.setHostnameVerifier(hostnameVerifier18);
        java.net.ProxySelector proxySelector20 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient19.setProxySelector(proxySelector20);
        com.squareup.okhttp.ConnectionPool connectionPool24 = new com.squareup.okhttp.ConnectionPool((int) (byte) 10, (long) (byte) 0);
        okHttpClient19.connectionPool = connectionPool24;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient19.copyWithDefaults();
        java.net.ProxySelector proxySelector27 = okHttpClient26.proxySelector;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier29 = null;
        okHttpClient28.hostnameVerifier = hostnameVerifier29;
        java.net.ResponseCache responseCache31 = null;
        okHttpClient28.responseCache = responseCache31;
        javax.net.ssl.HostnameVerifier hostnameVerifier33 = okHttpClient28.hostnameVerifier;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory34 = okHttpClient28.sslSocketFactory;
        java.net.CookieHandler cookieHandler35 = okHttpClient28.cookieHandler;
        javax.net.ssl.HostnameVerifier hostnameVerifier36 = okHttpClient28.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient37 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool38 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient37.connectionPool = connectionPool38;
        com.squareup.okhttp.OkAuthenticator okAuthenticator40 = null;
        okHttpClient37.authenticator = okAuthenticator40;
        java.util.List<java.lang.String> strList42 = okHttpClient37.transports;
        java.net.ResponseCache responseCache43 = null;
        okHttpClient37.responseCache = responseCache43;
        com.squareup.okhttp.OkHttpClient okHttpClient45 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier46 = null;
        okHttpClient45.hostnameVerifier = hostnameVerifier46;
        java.net.ResponseCache responseCache48 = null;
        okHttpClient45.responseCache = responseCache48;
        javax.net.ssl.HostnameVerifier hostnameVerifier50 = okHttpClient45.hostnameVerifier;
        java.net.Proxy proxy51 = okHttpClient45.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool54 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient45.connectionPool = connectionPool54;
        com.squareup.okhttp.OkHttpClient okHttpClient56 = okHttpClient45.copyWithDefaults();
        java.net.Proxy proxy57 = okHttpClient56.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier58 = okHttpClient56.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient59 = okHttpClient37.setHostnameVerifier(hostnameVerifier58);
        com.squareup.okhttp.OkHttpClient okHttpClient60 = okHttpClient28.setHostnameVerifier(hostnameVerifier58);
        java.net.Proxy proxy61 = okHttpClient60.proxy;
        java.util.Set<com.squareup.okhttp.Route> routeSet62 = okHttpClient60.failedRoutes;
        com.squareup.okhttp.ConnectionPool connectionPool65 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) '#');
        com.squareup.okhttp.Address address66 = null;
        com.squareup.okhttp.Connection connection67 = connectionPool65.get(address66);
        com.squareup.okhttp.OkHttpClient okHttpClient68 = okHttpClient60.setConnectionPool(connectionPool65);
        com.squareup.okhttp.OkHttpClient okHttpClient69 = okHttpClient26.setConnectionPool(connectionPool65);
        int int70 = connectionPool65.getHttpConnectionCount();
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNotNull(routeSet16);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNotNull(okHttpClient26);
// flaky:         org.junit.Assert.assertNull(proxySelector27);
        org.junit.Assert.assertNull(hostnameVerifier33);
        org.junit.Assert.assertNull(sSLSocketFactory34);
        org.junit.Assert.assertNull(cookieHandler35);
        org.junit.Assert.assertNull(hostnameVerifier36);
        org.junit.Assert.assertNotNull(connectionPool38);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNull(hostnameVerifier50);
        org.junit.Assert.assertNull(proxy51);
        org.junit.Assert.assertNotNull(okHttpClient56);
        org.junit.Assert.assertNull(proxy57);
        org.junit.Assert.assertNotNull(hostnameVerifier58);
        org.junit.Assert.assertNotNull(okHttpClient59);
        org.junit.Assert.assertNotNull(okHttpClient60);
        org.junit.Assert.assertNull(proxy61);
        org.junit.Assert.assertNotNull(routeSet62);
        org.junit.Assert.assertNull(connection67);
        org.junit.Assert.assertNotNull(okHttpClient68);
        org.junit.Assert.assertNotNull(okHttpClient69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
    }

    @Test
    public void test07205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07205");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.ResponseCache responseCache5 = null;
        okHttpClient4.responseCache = responseCache5;
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = okHttpClient4.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient4.setFollowProtocolRedirects(false);
        java.net.ProxySelector proxySelector10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient9.setProxySelector(proxySelector10);
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache12 = okHttpClient9.okResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool14 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient13.connectionPool = connectionPool14;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier17 = null;
        okHttpClient16.hostnameVerifier = hostnameVerifier17;
        java.net.ResponseCache responseCache19 = null;
        okHttpClient16.responseCache = responseCache19;
        java.util.List<java.lang.String> strList21 = okHttpClient16.transports;
        com.squareup.okhttp.ConnectionPool connectionPool22 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient16.connectionPool = connectionPool22;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient13.setConnectionPool(connectionPool22);
        com.squareup.okhttp.ConnectionPool connectionPool25 = okHttpClient24.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator26 = okHttpClient24.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool29 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient24.connectionPool = connectionPool29;
        java.net.ResponseCache responseCache31 = okHttpClient24.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory32 = okHttpClient24.sslSocketFactory;
        java.net.Proxy proxy33 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress34 = proxy33.address();
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient24.setProxy(proxy33);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory36 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient24.setSSLSocketFactory(sSLSocketFactory36);
        com.squareup.okhttp.OkHttpClient okHttpClient38 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier39 = null;
        okHttpClient38.hostnameVerifier = hostnameVerifier39;
        java.net.ResponseCache responseCache41 = null;
        okHttpClient38.responseCache = responseCache41;
        javax.net.ssl.HostnameVerifier hostnameVerifier43 = okHttpClient38.hostnameVerifier;
        java.net.Proxy proxy44 = okHttpClient38.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool47 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient38.connectionPool = connectionPool47;
        com.squareup.okhttp.OkHttpClient okHttpClient49 = okHttpClient38.copyWithDefaults();
        java.net.ResponseCache responseCache50 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient51 = okHttpClient49.setResponseCache(responseCache50);
        com.squareup.okhttp.OkAuthenticator okAuthenticator52 = okHttpClient49.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient53 = okHttpClient24.setAuthenticator(okAuthenticator52);
        com.squareup.okhttp.OkHttpClient okHttpClient54 = okHttpClient9.setAuthenticator(okAuthenticator52);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory55 = okHttpClient9.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient56 = new com.squareup.okhttp.OkHttpClient(okHttpClient9);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory57 = okHttpClient9.sslSocketFactory;
        okHttpClient9.followProtocolRedirects = false;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory60 = okHttpClient9.sslSocketFactory;
        javax.net.ssl.HostnameVerifier hostnameVerifier61 = okHttpClient9.hostnameVerifier;
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(hostnameVerifier7);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(okResponseCache12);
        org.junit.Assert.assertNotNull(connectionPool14);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(connectionPool22);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNotNull(connectionPool25);
        org.junit.Assert.assertNull(okAuthenticator26);
        org.junit.Assert.assertNull(responseCache31);
        org.junit.Assert.assertNull(sSLSocketFactory32);
        org.junit.Assert.assertNotNull(proxy33);
        org.junit.Assert.assertNull(socketAddress34);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNotNull(okHttpClient37);
        org.junit.Assert.assertNull(hostnameVerifier43);
        org.junit.Assert.assertNull(proxy44);
        org.junit.Assert.assertNotNull(okHttpClient49);
        org.junit.Assert.assertNotNull(okHttpClient51);
        org.junit.Assert.assertNotNull(okAuthenticator52);
        org.junit.Assert.assertNotNull(okHttpClient53);
        org.junit.Assert.assertNotNull(okHttpClient54);
        org.junit.Assert.assertNull(sSLSocketFactory55);
        org.junit.Assert.assertNull(sSLSocketFactory57);
        org.junit.Assert.assertNull(sSLSocketFactory60);
        org.junit.Assert.assertNull(hostnameVerifier61);
    }

    @Test
    public void test07206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07206");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient0.setFollowProtocolRedirects(false);
        java.net.Proxy proxy8 = okHttpClient0.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier9 = okHttpClient0.getHostnameVerifier();
        java.util.Set<com.squareup.okhttp.Route> routeSet10 = okHttpClient0.failedRoutes;
        okHttpClient0.followProtocolRedirects = true;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = null;
        okHttpClient13.hostnameVerifier = hostnameVerifier14;
        java.net.ResponseCache responseCache16 = null;
        okHttpClient13.responseCache = responseCache16;
        java.util.List<java.lang.String> strList18 = okHttpClient13.transports;
        com.squareup.okhttp.ConnectionPool connectionPool19 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient13.connectionPool = connectionPool19;
        java.net.Proxy proxy21 = null;
        okHttpClient13.proxy = proxy21;
        boolean boolean23 = okHttpClient13.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient13.copyWithDefaults();
        java.net.Proxy proxy25 = java.net.Proxy.NO_PROXY;
        boolean boolean27 = proxy25.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type28 = proxy25.type();
        java.lang.String str29 = proxy25.toString();
        java.net.Proxy.Type type30 = proxy25.type();
        okHttpClient13.proxy = proxy25;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache33 = okHttpClient32.okResponseCache();
        java.net.ResponseCache responseCache34 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient32.setResponseCache(responseCache34);
        java.net.ProxySelector proxySelector36 = okHttpClient32.getProxySelector();
        com.squareup.okhttp.OkAuthenticator okAuthenticator37 = okHttpClient32.getAuthenticator();
        boolean boolean38 = proxy25.equals((java.lang.Object) okHttpClient32);
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient0.setProxy(proxy25);
        java.net.Proxy proxy40 = okHttpClient39.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool41 = okHttpClient39.connectionPool;
        java.net.ResponseCache responseCache42 = null;
        okHttpClient39.responseCache = responseCache42;
        java.util.List<java.lang.String> strList44 = okHttpClient39.getTransports();
        com.squareup.okhttp.OkHttpClient okHttpClient45 = okHttpClient39.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient46 = okHttpClient39.copyWithDefaults();
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNotNull(okHttpClient7);
        org.junit.Assert.assertNull(proxy8);
        org.junit.Assert.assertNull(hostnameVerifier9);
        org.junit.Assert.assertNotNull(routeSet10);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(connectionPool19);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNotNull(proxy25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + type28 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type28.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "DIRECT" + "'", str29, "DIRECT");
        org.junit.Assert.assertTrue("'" + type30 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type30.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(okResponseCache33);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNull(proxySelector36);
        org.junit.Assert.assertNull(okAuthenticator37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(okHttpClient39);
        org.junit.Assert.assertNotNull(proxy40);
        org.junit.Assert.assertNull(connectionPool41);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNotNull(okHttpClient45);
        org.junit.Assert.assertNotNull(okHttpClient46);
    }

    @Test
    public void test07207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07207");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier6 = null;
        okHttpClient5.hostnameVerifier = hostnameVerifier6;
        java.net.ResponseCache responseCache8 = null;
        okHttpClient5.responseCache = responseCache8;
        javax.net.ssl.HostnameVerifier hostnameVerifier10 = okHttpClient5.hostnameVerifier;
        java.net.Proxy proxy11 = okHttpClient5.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool14 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient5.connectionPool = connectionPool14;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient5.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier17 = okHttpClient16.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient0.setHostnameVerifier(hostnameVerifier17);
        com.squareup.okhttp.OkHttpClient okHttpClient19 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier20 = null;
        okHttpClient19.hostnameVerifier = hostnameVerifier20;
        java.net.ResponseCache responseCache22 = null;
        okHttpClient19.responseCache = responseCache22;
        java.util.List<java.lang.String> strList24 = okHttpClient19.transports;
        com.squareup.okhttp.ConnectionPool connectionPool25 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient19.connectionPool = connectionPool25;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient19.copyWithDefaults();
        java.net.ProxySelector proxySelector28 = okHttpClient27.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory29 = okHttpClient27.getSslSocketFactory();
        java.lang.String[] strArray30 = sSLSocketFactory29.getSupportedCipherSuites();
        okHttpClient0.sslSocketFactory = sSLSocketFactory29;
        java.net.InetAddress inetAddress32 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket34 = sSLSocketFactory29.createSocket(inetAddress32, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.net.ConnectException; message: Connection refused (Connection refused)");
        } catch (java.net.ConnectException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(hostnameVerifier10);
        org.junit.Assert.assertNull(proxy11);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNotNull(hostnameVerifier17);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNotNull(connectionPool25);
        org.junit.Assert.assertNotNull(okHttpClient27);
// flaky:         org.junit.Assert.assertNull(proxySelector28);
        org.junit.Assert.assertNotNull(sSLSocketFactory29);
        org.junit.Assert.assertNotNull(strArray30);
    }

    @Test
    public void test07208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07208");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.Proxy proxy8 = null;
        okHttpClient0.proxy = proxy8;
        boolean boolean10 = okHttpClient0.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient0.setFollowProtocolRedirects(true);
        javax.net.ssl.HostnameVerifier hostnameVerifier13 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier13;
        java.util.List<java.lang.String> strList15 = okHttpClient0.transports;
        java.net.ProxySelector proxySelector16 = okHttpClient0.getProxySelector();
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNull(proxySelector16);
    }

    @Test
    public void test07209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07209");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient4.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool7 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient6.connectionPool = connectionPool7;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier10 = null;
        okHttpClient9.hostnameVerifier = hostnameVerifier10;
        java.net.ResponseCache responseCache12 = null;
        okHttpClient9.responseCache = responseCache12;
        java.util.List<java.lang.String> strList14 = okHttpClient9.transports;
        com.squareup.okhttp.ConnectionPool connectionPool15 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient9.connectionPool = connectionPool15;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient6.setConnectionPool(connectionPool15);
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier19 = null;
        okHttpClient18.hostnameVerifier = hostnameVerifier19;
        java.net.ProxySelector proxySelector21 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient18.setProxySelector(proxySelector21);
        java.net.CookieHandler cookieHandler23 = okHttpClient18.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient24 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier25 = null;
        okHttpClient24.hostnameVerifier = hostnameVerifier25;
        java.net.ResponseCache responseCache27 = null;
        okHttpClient24.responseCache = responseCache27;
        java.util.List<java.lang.String> strList29 = okHttpClient24.transports;
        com.squareup.okhttp.ConnectionPool connectionPool30 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient24.connectionPool = connectionPool30;
        java.net.Proxy proxy32 = null;
        okHttpClient24.proxy = proxy32;
        java.util.Set<com.squareup.okhttp.Route> routeSet34 = okHttpClient24.failedRoutes;
        okHttpClient18.failedRoutes = routeSet34;
        java.net.ProxySelector proxySelector36 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient18.setProxySelector(proxySelector36);
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient18.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient39 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier40 = null;
        okHttpClient39.hostnameVerifier = hostnameVerifier40;
        java.net.ResponseCache responseCache42 = null;
        okHttpClient39.responseCache = responseCache42;
        javax.net.ssl.HostnameVerifier hostnameVerifier44 = okHttpClient39.hostnameVerifier;
        java.net.Proxy proxy45 = okHttpClient39.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool48 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient39.connectionPool = connectionPool48;
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient39.copyWithDefaults();
        java.net.Proxy proxy51 = okHttpClient50.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier52 = okHttpClient50.getHostnameVerifier();
        okHttpClient18.hostnameVerifier = hostnameVerifier52;
        okHttpClient17.hostnameVerifier = hostnameVerifier52;
        okHttpClient5.hostnameVerifier = hostnameVerifier52;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache56 = okHttpClient5.okResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient57 = okHttpClient5.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient58 = new com.squareup.okhttp.OkHttpClient(okHttpClient57);
        com.squareup.okhttp.ConnectionPool connectionPool59 = okHttpClient58.connectionPool;
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNotNull(connectionPool7);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNotNull(connectionPool15);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNull(cookieHandler23);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(connectionPool30);
        org.junit.Assert.assertNotNull(routeSet34);
        org.junit.Assert.assertNotNull(okHttpClient37);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNull(hostnameVerifier44);
        org.junit.Assert.assertNull(proxy45);
        org.junit.Assert.assertNotNull(okHttpClient50);
        org.junit.Assert.assertNull(proxy51);
        org.junit.Assert.assertNotNull(hostnameVerifier52);
        org.junit.Assert.assertNull(okResponseCache56);
        org.junit.Assert.assertNotNull(okHttpClient57);
        org.junit.Assert.assertNull(connectionPool59);
    }

    @Test
    public void test07210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07210");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        java.net.Proxy proxy12 = okHttpClient11.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool14 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient13.connectionPool = connectionPool14;
        int int16 = connectionPool14.getSpdyConnectionCount();
        okHttpClient11.connectionPool = connectionPool14;
        com.squareup.okhttp.ConnectionPool connectionPool18 = okHttpClient11.getConnectionPool();
        com.squareup.okhttp.Address address19 = null;
        com.squareup.okhttp.Connection connection20 = connectionPool18.get(address19);
        int int21 = connectionPool18.getHttpConnectionCount();
        int int22 = connectionPool18.getHttpConnectionCount();
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(proxy12);
        org.junit.Assert.assertNotNull(connectionPool14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(connectionPool18);
        org.junit.Assert.assertNull(connection20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
    }

    @Test
    public void test07211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07211");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.Proxy proxy8 = null;
        okHttpClient0.proxy = proxy8;
        boolean boolean10 = okHttpClient0.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.copyWithDefaults();
        java.net.CookieHandler cookieHandler12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setCookieHandler(cookieHandler12);
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = okHttpClient13.hostnameVerifier;
        com.squareup.okhttp.OkAuthenticator okAuthenticator15 = okHttpClient13.getAuthenticator();
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNotNull(hostnameVerifier14);
        org.junit.Assert.assertNotNull(okAuthenticator15);
    }

    @Test
    public void test07212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07212");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.CookieHandler cookieHandler5 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = null;
        okHttpClient6.hostnameVerifier = hostnameVerifier7;
        java.net.ResponseCache responseCache9 = null;
        okHttpClient6.responseCache = responseCache9;
        java.util.List<java.lang.String> strList11 = okHttpClient6.transports;
        com.squareup.okhttp.ConnectionPool connectionPool12 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient6.connectionPool = connectionPool12;
        java.net.Proxy proxy14 = null;
        okHttpClient6.proxy = proxy14;
        java.util.Set<com.squareup.okhttp.Route> routeSet16 = okHttpClient6.failedRoutes;
        okHttpClient0.failedRoutes = routeSet16;
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient0.setHostnameVerifier(hostnameVerifier18);
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache20 = okHttpClient0.okResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator21 = okHttpClient0.getAuthenticator();
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient0.setFollowProtocolRedirects(true);
        java.net.CookieHandler cookieHandler24 = okHttpClient23.cookieHandler;
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNotNull(routeSet16);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNull(okResponseCache20);
        org.junit.Assert.assertNull(okAuthenticator21);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertNull(cookieHandler24);
    }

    @Test
    public void test07213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07213");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.CookieHandler cookieHandler8 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache9 = okHttpClient0.okResponseCache();
        java.net.CookieHandler cookieHandler10 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        java.net.Proxy proxy12 = java.net.Proxy.NO_PROXY;
        boolean boolean14 = proxy12.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type15 = proxy12.type();
        java.net.SocketAddress socketAddress16 = proxy12.address();
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient0.setProxy(proxy12);
        java.net.ProxySelector proxySelector18 = null;
        okHttpClient17.proxySelector = proxySelector18;
        com.squareup.okhttp.OkAuthenticator okAuthenticator20 = okHttpClient17.getAuthenticator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass21 = okAuthenticator20.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNull(cookieHandler8);
        org.junit.Assert.assertNull(okResponseCache9);
        org.junit.Assert.assertNull(cookieHandler10);
        org.junit.Assert.assertNotNull(proxy12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + type15 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type15.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress16);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNull(okAuthenticator20);
    }

    @Test
    public void test07214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07214");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.ConnectionPool connectionPool12 = okHttpClient11.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator13 = okHttpClient11.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool16 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient11.connectionPool = connectionPool16;
        java.net.ResponseCache responseCache18 = okHttpClient11.responseCache;
        com.squareup.okhttp.ConnectionPool connectionPool21 = new com.squareup.okhttp.ConnectionPool((int) (byte) 0, 10L);
        okHttpClient11.connectionPool = connectionPool21;
        com.squareup.okhttp.ConnectionPool connectionPool25 = new com.squareup.okhttp.ConnectionPool((int) (byte) 10, 0L);
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient11.setConnectionPool(connectionPool25);
        com.squareup.okhttp.OkHttpClient okHttpClient27 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier28 = null;
        okHttpClient27.hostnameVerifier = hostnameVerifier28;
        java.net.ProxySelector proxySelector30 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient27.setProxySelector(proxySelector30);
        java.net.ResponseCache responseCache32 = null;
        okHttpClient31.responseCache = responseCache32;
        com.squareup.okhttp.OkHttpClient okHttpClient34 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier35 = null;
        okHttpClient34.hostnameVerifier = hostnameVerifier35;
        java.net.ResponseCache responseCache37 = null;
        okHttpClient34.responseCache = responseCache37;
        java.util.List<java.lang.String> strList39 = okHttpClient34.transports;
        com.squareup.okhttp.ConnectionPool connectionPool40 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient34.connectionPool = connectionPool40;
        java.net.CookieHandler cookieHandler42 = okHttpClient34.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache43 = okHttpClient34.okResponseCache();
        java.net.CookieHandler cookieHandler44 = okHttpClient34.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient45 = new com.squareup.okhttp.OkHttpClient(okHttpClient34);
        java.net.Proxy proxy46 = java.net.Proxy.NO_PROXY;
        boolean boolean48 = proxy46.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type49 = proxy46.type();
        java.net.SocketAddress socketAddress50 = proxy46.address();
        com.squareup.okhttp.OkHttpClient okHttpClient51 = okHttpClient34.setProxy(proxy46);
        com.squareup.okhttp.OkHttpClient okHttpClient52 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier53 = null;
        okHttpClient52.hostnameVerifier = hostnameVerifier53;
        java.net.ResponseCache responseCache55 = null;
        okHttpClient52.responseCache = responseCache55;
        java.util.List<java.lang.String> strList57 = okHttpClient52.transports;
        com.squareup.okhttp.ConnectionPool connectionPool58 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient52.connectionPool = connectionPool58;
        com.squareup.okhttp.OkHttpClient okHttpClient60 = okHttpClient52.copyWithDefaults();
        java.net.ProxySelector proxySelector61 = okHttpClient60.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory62 = okHttpClient60.getSslSocketFactory();
        okHttpClient51.sslSocketFactory = sSLSocketFactory62;
        java.lang.String[] strArray64 = sSLSocketFactory62.getDefaultCipherSuites();
        java.lang.String[] strArray65 = sSLSocketFactory62.getSupportedCipherSuites();
        java.net.Socket socket66 = sSLSocketFactory62.createSocket();
        okHttpClient31.sslSocketFactory = sSLSocketFactory62;
        okHttpClient11.sslSocketFactory = sSLSocketFactory62;
        java.net.ProxySelector proxySelector69 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient70 = okHttpClient11.setProxySelector(proxySelector69);
        com.squareup.okhttp.OkHttpClient okHttpClient72 = okHttpClient70.setFollowProtocolRedirects(true);
        okHttpClient72.followProtocolRedirects = false;
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNull(okAuthenticator13);
        org.junit.Assert.assertNull(responseCache18);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNotNull(connectionPool40);
        org.junit.Assert.assertNull(cookieHandler42);
        org.junit.Assert.assertNull(okResponseCache43);
        org.junit.Assert.assertNull(cookieHandler44);
        org.junit.Assert.assertNotNull(proxy46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + type49 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type49.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress50);
        org.junit.Assert.assertNotNull(okHttpClient51);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNotNull(connectionPool58);
        org.junit.Assert.assertNotNull(okHttpClient60);
// flaky:         org.junit.Assert.assertNull(proxySelector61);
        org.junit.Assert.assertNotNull(sSLSocketFactory62);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(socket66);
        org.junit.Assert.assertEquals(socket66.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(okHttpClient70);
        org.junit.Assert.assertNotNull(okHttpClient72);
    }

    @Test
    public void test07215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07215");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.ResponseCache responseCache5 = null;
        okHttpClient4.responseCache = responseCache5;
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = okHttpClient4.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient4.setFollowProtocolRedirects(false);
        java.net.ResponseCache responseCache10 = okHttpClient9.responseCache;
        com.squareup.okhttp.ConnectionPool connectionPool13 = new com.squareup.okhttp.ConnectionPool(0, (long) (short) 10);
        connectionPool13.evictAll();
        com.squareup.okhttp.Address address15 = null;
        com.squareup.okhttp.Connection connection16 = connectionPool13.get(address15);
        okHttpClient9.connectionPool = connectionPool13;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache18 = okHttpClient9.okResponseCache();
        javax.net.ssl.HostnameVerifier hostnameVerifier19 = okHttpClient9.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier21 = null;
        okHttpClient20.hostnameVerifier = hostnameVerifier21;
        java.net.ResponseCache responseCache23 = null;
        okHttpClient20.responseCache = responseCache23;
        java.util.List<java.lang.String> strList25 = okHttpClient20.transports;
        com.squareup.okhttp.ConnectionPool connectionPool26 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient20.connectionPool = connectionPool26;
        java.net.Proxy proxy28 = null;
        okHttpClient20.proxy = proxy28;
        boolean boolean30 = okHttpClient20.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient20.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient32 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool33 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient32.connectionPool = connectionPool33;
        com.squareup.okhttp.OkHttpClient okHttpClient35 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier36 = null;
        okHttpClient35.hostnameVerifier = hostnameVerifier36;
        java.net.ResponseCache responseCache38 = null;
        okHttpClient35.responseCache = responseCache38;
        java.util.List<java.lang.String> strList40 = okHttpClient35.transports;
        com.squareup.okhttp.ConnectionPool connectionPool41 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient35.connectionPool = connectionPool41;
        com.squareup.okhttp.OkHttpClient okHttpClient43 = okHttpClient32.setConnectionPool(connectionPool41);
        java.net.ResponseCache responseCache44 = okHttpClient32.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory45 = okHttpClient32.sslSocketFactory;
        java.net.CookieHandler cookieHandler46 = okHttpClient32.getCookieHandler();
        com.squareup.okhttp.OkAuthenticator okAuthenticator47 = okHttpClient32.authenticator;
        java.util.Set<com.squareup.okhttp.Route> routeSet48 = okHttpClient32.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient49 = new com.squareup.okhttp.OkHttpClient(okHttpClient32);
        com.squareup.okhttp.OkHttpClient okHttpClient50 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier51 = null;
        okHttpClient50.hostnameVerifier = hostnameVerifier51;
        java.net.ResponseCache responseCache53 = null;
        okHttpClient50.responseCache = responseCache53;
        javax.net.ssl.HostnameVerifier hostnameVerifier55 = okHttpClient50.hostnameVerifier;
        java.net.Proxy proxy56 = okHttpClient50.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool59 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient50.connectionPool = connectionPool59;
        com.squareup.okhttp.OkHttpClient okHttpClient61 = okHttpClient50.copyWithDefaults();
        java.net.ResponseCache responseCache62 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient63 = okHttpClient61.setResponseCache(responseCache62);
        javax.net.ssl.HostnameVerifier hostnameVerifier64 = okHttpClient63.hostnameVerifier;
        okHttpClient49.hostnameVerifier = hostnameVerifier64;
        okHttpClient20.hostnameVerifier = hostnameVerifier64;
        okHttpClient9.hostnameVerifier = hostnameVerifier64;
        java.util.List<java.lang.String> strList68 = okHttpClient9.transports;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory69 = okHttpClient9.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient70 = okHttpClient9.copyWithDefaults();
        okHttpClient70.followProtocolRedirects = false;
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(hostnameVerifier7);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNull(responseCache10);
        org.junit.Assert.assertNull(connection16);
        org.junit.Assert.assertNull(okResponseCache18);
        org.junit.Assert.assertNull(hostnameVerifier19);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNotNull(connectionPool26);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNotNull(connectionPool33);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNotNull(connectionPool41);
        org.junit.Assert.assertNotNull(okHttpClient43);
        org.junit.Assert.assertNull(responseCache44);
        org.junit.Assert.assertNull(sSLSocketFactory45);
        org.junit.Assert.assertNull(cookieHandler46);
        org.junit.Assert.assertNull(okAuthenticator47);
        org.junit.Assert.assertNotNull(routeSet48);
        org.junit.Assert.assertNull(hostnameVerifier55);
        org.junit.Assert.assertNull(proxy56);
        org.junit.Assert.assertNotNull(okHttpClient61);
        org.junit.Assert.assertNotNull(okHttpClient63);
        org.junit.Assert.assertNotNull(hostnameVerifier64);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNull(sSLSocketFactory69);
        org.junit.Assert.assertNotNull(okHttpClient70);
    }

    @Test
    public void test07216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07216");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient4.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient5.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = null;
        okHttpClient7.hostnameVerifier = hostnameVerifier8;
        java.net.ResponseCache responseCache10 = null;
        okHttpClient7.responseCache = responseCache10;
        java.util.List<java.lang.String> strList12 = okHttpClient7.transports;
        com.squareup.okhttp.ConnectionPool connectionPool13 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient7.connectionPool = connectionPool13;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient7.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient16 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier17 = null;
        okHttpClient16.hostnameVerifier = hostnameVerifier17;
        java.net.ResponseCache responseCache19 = null;
        okHttpClient16.responseCache = responseCache19;
        java.util.List<java.lang.String> strList21 = okHttpClient16.transports;
        com.squareup.okhttp.ConnectionPool connectionPool22 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient16.connectionPool = connectionPool22;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient16.copyWithDefaults();
        java.net.ProxySelector proxySelector25 = okHttpClient24.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory26 = okHttpClient24.getSslSocketFactory();
        okHttpClient7.sslSocketFactory = sSLSocketFactory26;
        java.net.Socket socket28 = sSLSocketFactory26.createSocket();
        java.lang.String[] strArray29 = sSLSocketFactory26.getDefaultCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient30 = okHttpClient5.setSSLSocketFactory(sSLSocketFactory26);
        java.net.InetAddress inetAddress31 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket33 = sSLSocketFactory26.createSocket(inetAddress31, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.net.ConnectException; message: Connection refused (Connection refused)");
        } catch (java.net.ConnectException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNotNull(okHttpClient6);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(connectionPool13);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(connectionPool22);
        org.junit.Assert.assertNotNull(okHttpClient24);
// flaky:         org.junit.Assert.assertNull(proxySelector25);
        org.junit.Assert.assertNotNull(sSLSocketFactory26);
        org.junit.Assert.assertNotNull(socket28);
        org.junit.Assert.assertEquals(socket28.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(okHttpClient30);
    }

    @Test
    public void test07217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07217");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory8 = okHttpClient0.getSslSocketFactory();
        java.net.CookieHandler cookieHandler9 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.ConnectionPool connectionPool10 = com.squareup.okhttp.ConnectionPool.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool10);
        java.net.CookieHandler cookieHandler12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient0.setCookieHandler(cookieHandler12);
        java.net.Proxy proxy14 = okHttpClient13.proxy;
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNull(sSLSocketFactory8);
        org.junit.Assert.assertNull(cookieHandler9);
        org.junit.Assert.assertNotNull(connectionPool10);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNull(proxy14);
    }

    @Test
    public void test07218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07218");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient0.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.copyWithDefaults();
        java.net.ResponseCache responseCache12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setResponseCache(responseCache12);
        com.squareup.okhttp.OkAuthenticator okAuthenticator14 = okHttpClient11.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier16 = null;
        okHttpClient15.hostnameVerifier = hostnameVerifier16;
        java.net.ProxySelector proxySelector18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient15.setProxySelector(proxySelector18);
        java.net.CookieHandler cookieHandler20 = okHttpClient15.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient21 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier22 = null;
        okHttpClient21.hostnameVerifier = hostnameVerifier22;
        java.net.ResponseCache responseCache24 = null;
        okHttpClient21.responseCache = responseCache24;
        java.util.List<java.lang.String> strList26 = okHttpClient21.transports;
        com.squareup.okhttp.ConnectionPool connectionPool27 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient21.connectionPool = connectionPool27;
        java.net.Proxy proxy29 = null;
        okHttpClient21.proxy = proxy29;
        java.util.Set<com.squareup.okhttp.Route> routeSet31 = okHttpClient21.failedRoutes;
        okHttpClient15.failedRoutes = routeSet31;
        javax.net.ssl.HostnameVerifier hostnameVerifier33 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient15.setHostnameVerifier(hostnameVerifier33);
        java.net.ProxySelector proxySelector35 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient34.setProxySelector(proxySelector35);
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient34.setFollowProtocolRedirects(true);
        com.squareup.okhttp.OkHttpClient okHttpClient39 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool40 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient39.connectionPool = connectionPool40;
        com.squareup.okhttp.OkHttpClient okHttpClient42 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier43 = null;
        okHttpClient42.hostnameVerifier = hostnameVerifier43;
        java.net.ResponseCache responseCache45 = null;
        okHttpClient42.responseCache = responseCache45;
        java.util.List<java.lang.String> strList47 = okHttpClient42.transports;
        com.squareup.okhttp.ConnectionPool connectionPool48 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient42.connectionPool = connectionPool48;
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient39.setConnectionPool(connectionPool48);
        java.net.Proxy proxy51 = okHttpClient50.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient52 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool53 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient52.connectionPool = connectionPool53;
        int int55 = connectionPool53.getSpdyConnectionCount();
        okHttpClient50.connectionPool = connectionPool53;
        com.squareup.okhttp.OkHttpClient okHttpClient57 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier58 = null;
        okHttpClient57.hostnameVerifier = hostnameVerifier58;
        java.net.ResponseCache responseCache60 = null;
        okHttpClient57.responseCache = responseCache60;
        javax.net.ssl.HostnameVerifier hostnameVerifier62 = okHttpClient57.hostnameVerifier;
        java.net.Proxy proxy63 = okHttpClient57.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool66 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient57.connectionPool = connectionPool66;
        com.squareup.okhttp.OkHttpClient okHttpClient68 = okHttpClient57.copyWithDefaults();
        java.net.ResponseCache responseCache69 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient70 = okHttpClient68.setResponseCache(responseCache69);
        com.squareup.okhttp.OkAuthenticator okAuthenticator71 = okHttpClient68.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient72 = okHttpClient50.setAuthenticator(okAuthenticator71);
        com.squareup.okhttp.OkHttpClient okHttpClient73 = okHttpClient34.setAuthenticator(okAuthenticator71);
        com.squareup.okhttp.OkHttpClient okHttpClient74 = okHttpClient11.setAuthenticator(okAuthenticator71);
        boolean boolean75 = okHttpClient74.getFollowProtocolRedirects();
        java.util.List<java.lang.String> strList76 = okHttpClient74.getTransports();
        java.net.Proxy proxy77 = java.net.Proxy.NO_PROXY;
        boolean boolean79 = proxy77.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type80 = proxy77.type();
        java.lang.String str81 = proxy77.toString();
        java.lang.String str82 = proxy77.toString();
        java.lang.String str83 = proxy77.toString();
        okHttpClient74.proxy = proxy77;
        java.lang.String str85 = proxy77.toString();
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNotNull(okAuthenticator14);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNull(cookieHandler20);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNotNull(connectionPool27);
        org.junit.Assert.assertNotNull(routeSet31);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNotNull(connectionPool40);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNotNull(connectionPool48);
        org.junit.Assert.assertNotNull(okHttpClient50);
        org.junit.Assert.assertNull(proxy51);
        org.junit.Assert.assertNotNull(connectionPool53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNull(hostnameVerifier62);
        org.junit.Assert.assertNull(proxy63);
        org.junit.Assert.assertNotNull(okHttpClient68);
        org.junit.Assert.assertNotNull(okHttpClient70);
        org.junit.Assert.assertNotNull(okAuthenticator71);
        org.junit.Assert.assertNotNull(okHttpClient72);
        org.junit.Assert.assertNotNull(okHttpClient73);
        org.junit.Assert.assertNotNull(okHttpClient74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNotNull(proxy77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + type80 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type80.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "DIRECT" + "'", str81, "DIRECT");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "DIRECT" + "'", str82, "DIRECT");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "DIRECT" + "'", str83, "DIRECT");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "DIRECT" + "'", str85, "DIRECT");
    }

    @Test
    public void test07219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07219");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.CookieHandler cookieHandler5 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = null;
        okHttpClient6.hostnameVerifier = hostnameVerifier7;
        java.net.ResponseCache responseCache9 = null;
        okHttpClient6.responseCache = responseCache9;
        java.util.List<java.lang.String> strList11 = okHttpClient6.transports;
        com.squareup.okhttp.ConnectionPool connectionPool12 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient6.connectionPool = connectionPool12;
        java.net.Proxy proxy14 = null;
        okHttpClient6.proxy = proxy14;
        java.util.Set<com.squareup.okhttp.Route> routeSet16 = okHttpClient6.failedRoutes;
        okHttpClient0.failedRoutes = routeSet16;
        java.net.ProxySelector proxySelector18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient0.setProxySelector(proxySelector18);
        com.squareup.okhttp.OkHttpClient okHttpClient20 = new com.squareup.okhttp.OkHttpClient(okHttpClient19);
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient20.setFollowProtocolRedirects(false);
        java.net.ResponseCache responseCache23 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient22.setResponseCache(responseCache23);
        boolean boolean25 = okHttpClient22.getFollowProtocolRedirects();
        com.squareup.okhttp.ConnectionPool connectionPool26 = okHttpClient22.getConnectionPool();
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNotNull(routeSet16);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(connectionPool26);
    }

    @Test
    public void test07220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07220");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient4.copyWithDefaults();
        com.squareup.okhttp.Route[] routeArray6 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet7 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet7, routeArray6);
        okHttpClient5.failedRoutes = routeSet7;
        java.net.CookieHandler cookieHandler10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient5.setCookieHandler(cookieHandler10);
        java.net.CookieHandler cookieHandler12 = null;
        okHttpClient11.cookieHandler = cookieHandler12;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory14 = okHttpClient11.getSslSocketFactory();
        java.net.ResponseCache responseCache15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient11.setResponseCache(responseCache15);
        java.net.ResponseCache responseCache17 = okHttpClient16.responseCache;
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNotNull(routeArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(sSLSocketFactory14);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNull(responseCache17);
    }

    @Test
    public void test07221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07221");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.CookieHandler cookieHandler8 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache9 = okHttpClient0.okResponseCache();
        java.net.CookieHandler cookieHandler10 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        java.net.Proxy proxy12 = java.net.Proxy.NO_PROXY;
        boolean boolean14 = proxy12.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type15 = proxy12.type();
        java.net.SocketAddress socketAddress16 = proxy12.address();
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient0.setProxy(proxy12);
        java.net.ProxySelector proxySelector18 = null;
        okHttpClient17.proxySelector = proxySelector18;
        java.net.Proxy proxy20 = okHttpClient17.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient21 = new com.squareup.okhttp.OkHttpClient(okHttpClient17);
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool23 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient22.connectionPool = connectionPool23;
        com.squareup.okhttp.OkHttpClient okHttpClient25 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier26 = null;
        okHttpClient25.hostnameVerifier = hostnameVerifier26;
        java.net.ResponseCache responseCache28 = null;
        okHttpClient25.responseCache = responseCache28;
        java.util.List<java.lang.String> strList30 = okHttpClient25.transports;
        com.squareup.okhttp.ConnectionPool connectionPool31 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient25.connectionPool = connectionPool31;
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient22.setConnectionPool(connectionPool31);
        com.squareup.okhttp.OkAuthenticator okAuthenticator34 = okHttpClient33.getAuthenticator();
        java.net.ProxySelector proxySelector35 = okHttpClient33.getProxySelector();
        java.net.ProxySelector proxySelector36 = null;
        okHttpClient33.proxySelector = proxySelector36;
        java.net.ProxySelector proxySelector38 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient33.setProxySelector(proxySelector38);
        com.squareup.okhttp.ConnectionPool connectionPool42 = new com.squareup.okhttp.ConnectionPool(10, 1L);
        com.squareup.okhttp.OkHttpClient okHttpClient43 = okHttpClient39.setConnectionPool(connectionPool42);
        java.net.Proxy proxy44 = java.net.Proxy.NO_PROXY;
        boolean boolean46 = proxy44.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type47 = proxy44.type();
        java.net.SocketAddress socketAddress48 = proxy44.address();
        java.net.Proxy.Type type49 = proxy44.type();
        okHttpClient39.proxy = proxy44;
        com.squareup.okhttp.OkHttpClient okHttpClient51 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool52 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient51.connectionPool = connectionPool52;
        java.net.ResponseCache responseCache54 = null;
        okHttpClient51.responseCache = responseCache54;
        java.net.Proxy proxy56 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress57 = proxy56.address();
        java.net.SocketAddress socketAddress58 = proxy56.address();
        okHttpClient51.proxy = proxy56;
        com.squareup.okhttp.OkHttpClient okHttpClient60 = new com.squareup.okhttp.OkHttpClient(okHttpClient51);
        java.lang.String[] strArray62 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList63 = new java.util.ArrayList<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList63, strArray62);
        okHttpClient51.transports = strList63;
        okHttpClient39.transports = strList63;
        com.squareup.okhttp.OkHttpClient.DEFAULT_TRANSPORTS = strList63;
        okHttpClient17.transports = strList63;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory69 = okHttpClient17.sslSocketFactory;
        com.squareup.okhttp.OkHttpClient okHttpClient70 = new com.squareup.okhttp.OkHttpClient(okHttpClient17);
        java.net.ProxySelector proxySelector71 = null;
        okHttpClient17.proxySelector = proxySelector71;
        boolean boolean73 = okHttpClient17.getFollowProtocolRedirects();
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNull(cookieHandler8);
        org.junit.Assert.assertNull(okResponseCache9);
        org.junit.Assert.assertNull(cookieHandler10);
        org.junit.Assert.assertNotNull(proxy12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + type15 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type15.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress16);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNotNull(proxy20);
        org.junit.Assert.assertNotNull(connectionPool23);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNotNull(connectionPool31);
        org.junit.Assert.assertNotNull(okHttpClient33);
        org.junit.Assert.assertNull(okAuthenticator34);
        org.junit.Assert.assertNull(proxySelector35);
        org.junit.Assert.assertNotNull(okHttpClient39);
        org.junit.Assert.assertNotNull(okHttpClient43);
        org.junit.Assert.assertNotNull(proxy44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + type47 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type47.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress48);
        org.junit.Assert.assertTrue("'" + type49 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type49.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNotNull(connectionPool52);
        org.junit.Assert.assertNotNull(proxy56);
        org.junit.Assert.assertNull(socketAddress57);
        org.junit.Assert.assertNull(socketAddress58);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNull(sSLSocketFactory69);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
    }

    @Test
    public void test07222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07222");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.Proxy proxy8 = null;
        okHttpClient0.proxy = proxy8;
        boolean boolean10 = okHttpClient0.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient0.setFollowProtocolRedirects(true);
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = null;
        okHttpClient13.hostnameVerifier = hostnameVerifier14;
        java.net.ResponseCache responseCache16 = null;
        okHttpClient13.responseCache = responseCache16;
        java.util.List<java.lang.String> strList18 = okHttpClient13.transports;
        javax.net.ssl.HostnameVerifier hostnameVerifier19 = null;
        okHttpClient13.hostnameVerifier = hostnameVerifier19;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache21 = okHttpClient13.okResponseCache();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory22 = okHttpClient13.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient23 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier24 = null;
        okHttpClient23.hostnameVerifier = hostnameVerifier24;
        java.net.ResponseCache responseCache26 = null;
        okHttpClient23.responseCache = responseCache26;
        javax.net.ssl.HostnameVerifier hostnameVerifier28 = okHttpClient23.hostnameVerifier;
        java.net.Proxy proxy29 = okHttpClient23.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool32 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient23.connectionPool = connectionPool32;
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient23.copyWithDefaults();
        java.net.Proxy proxy35 = okHttpClient34.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier36 = okHttpClient34.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient13.setHostnameVerifier(hostnameVerifier36);
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient12.setHostnameVerifier(hostnameVerifier36);
        boolean boolean39 = okHttpClient38.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient40 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool41 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient40.connectionPool = connectionPool41;
        com.squareup.okhttp.OkHttpClient okHttpClient43 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier44 = null;
        okHttpClient43.hostnameVerifier = hostnameVerifier44;
        java.net.ResponseCache responseCache46 = null;
        okHttpClient43.responseCache = responseCache46;
        java.util.List<java.lang.String> strList48 = okHttpClient43.transports;
        com.squareup.okhttp.ConnectionPool connectionPool49 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient43.connectionPool = connectionPool49;
        com.squareup.okhttp.OkHttpClient okHttpClient51 = okHttpClient40.setConnectionPool(connectionPool49);
        com.squareup.okhttp.ConnectionPool connectionPool52 = okHttpClient51.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator53 = okHttpClient51.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool56 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient51.connectionPool = connectionPool56;
        java.net.ResponseCache responseCache58 = okHttpClient51.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory59 = okHttpClient51.sslSocketFactory;
        java.net.Proxy proxy60 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress61 = proxy60.address();
        com.squareup.okhttp.OkHttpClient okHttpClient62 = okHttpClient51.setProxy(proxy60);
        com.squareup.okhttp.OkHttpClient okHttpClient63 = okHttpClient38.setProxy(proxy60);
        boolean boolean64 = okHttpClient38.followProtocolRedirects;
        com.squareup.okhttp.ConnectionPool connectionPool65 = okHttpClient38.getConnectionPool();
        connectionPool65.evictAll();
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(okResponseCache21);
        org.junit.Assert.assertNull(sSLSocketFactory22);
        org.junit.Assert.assertNull(hostnameVerifier28);
        org.junit.Assert.assertNull(proxy29);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertNull(proxy35);
        org.junit.Assert.assertNotNull(hostnameVerifier36);
        org.junit.Assert.assertNotNull(okHttpClient37);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(connectionPool41);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNotNull(connectionPool49);
        org.junit.Assert.assertNotNull(okHttpClient51);
        org.junit.Assert.assertNotNull(connectionPool52);
        org.junit.Assert.assertNull(okAuthenticator53);
        org.junit.Assert.assertNull(responseCache58);
        org.junit.Assert.assertNull(sSLSocketFactory59);
        org.junit.Assert.assertNotNull(proxy60);
        org.junit.Assert.assertNull(socketAddress61);
        org.junit.Assert.assertNotNull(okHttpClient62);
        org.junit.Assert.assertNotNull(okHttpClient63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(connectionPool65);
    }

    @Test
    public void test07223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07223");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        java.net.Proxy proxy4 = okHttpClient0.proxy;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        boolean boolean6 = okHttpClient0.followProtocolRedirects;
        boolean boolean7 = okHttpClient0.followProtocolRedirects;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache8 = okHttpClient0.okResponseCache();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory9 = okHttpClient0.getSslSocketFactory();
        java.lang.Class<?> wildcardClass10 = okHttpClient0.getClass();
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNull(proxy4);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(okResponseCache8);
        org.junit.Assert.assertNull(sSLSocketFactory9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test07224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07224");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        com.squareup.okhttp.ConnectionPool connectionPool8 = okHttpClient0.connectionPool;
        boolean boolean9 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient10 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier11 = null;
        okHttpClient10.hostnameVerifier = hostnameVerifier11;
        java.net.ResponseCache responseCache13 = null;
        okHttpClient10.responseCache = responseCache13;
        javax.net.ssl.HostnameVerifier hostnameVerifier15 = okHttpClient10.hostnameVerifier;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory16 = okHttpClient10.sslSocketFactory;
        java.net.CookieHandler cookieHandler17 = okHttpClient10.cookieHandler;
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = okHttpClient10.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool20 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient19.connectionPool = connectionPool20;
        com.squareup.okhttp.OkAuthenticator okAuthenticator22 = null;
        okHttpClient19.authenticator = okAuthenticator22;
        java.util.List<java.lang.String> strList24 = okHttpClient19.transports;
        java.net.ResponseCache responseCache25 = null;
        okHttpClient19.responseCache = responseCache25;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier28 = null;
        okHttpClient27.hostnameVerifier = hostnameVerifier28;
        java.net.ResponseCache responseCache30 = null;
        okHttpClient27.responseCache = responseCache30;
        javax.net.ssl.HostnameVerifier hostnameVerifier32 = okHttpClient27.hostnameVerifier;
        java.net.Proxy proxy33 = okHttpClient27.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool36 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient27.connectionPool = connectionPool36;
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient27.copyWithDefaults();
        java.net.Proxy proxy39 = okHttpClient38.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier40 = okHttpClient38.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient41 = okHttpClient19.setHostnameVerifier(hostnameVerifier40);
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient10.setHostnameVerifier(hostnameVerifier40);
        com.squareup.okhttp.OkHttpClient okHttpClient43 = okHttpClient0.setHostnameVerifier(hostnameVerifier40);
        com.squareup.okhttp.OkHttpClient okHttpClient44 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier45 = null;
        okHttpClient44.hostnameVerifier = hostnameVerifier45;
        java.net.ProxySelector proxySelector47 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient48 = okHttpClient44.setProxySelector(proxySelector47);
        com.squareup.okhttp.OkHttpClient okHttpClient49 = okHttpClient48.copyWithDefaults();
        com.squareup.okhttp.Route[] routeArray50 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet51 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet51, routeArray50);
        okHttpClient49.failedRoutes = routeSet51;
        okHttpClient0.failedRoutes = routeSet51;
        java.util.List<java.lang.String> strList55 = okHttpClient0.transports;
        com.squareup.okhttp.OkHttpClient okHttpClient56 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        com.squareup.okhttp.OkHttpClient okHttpClient57 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.OkAuthenticator okAuthenticator58 = okHttpClient57.getAuthenticator();
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNotNull(connectionPool8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(hostnameVerifier15);
        org.junit.Assert.assertNull(sSLSocketFactory16);
        org.junit.Assert.assertNull(cookieHandler17);
        org.junit.Assert.assertNull(hostnameVerifier18);
        org.junit.Assert.assertNotNull(connectionPool20);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNull(hostnameVerifier32);
        org.junit.Assert.assertNull(proxy33);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNull(proxy39);
        org.junit.Assert.assertNotNull(hostnameVerifier40);
        org.junit.Assert.assertNotNull(okHttpClient41);
        org.junit.Assert.assertNotNull(okHttpClient42);
        org.junit.Assert.assertNotNull(okHttpClient43);
        org.junit.Assert.assertNotNull(okHttpClient48);
        org.junit.Assert.assertNotNull(okHttpClient49);
        org.junit.Assert.assertNotNull(routeArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertNotNull(okHttpClient57);
        org.junit.Assert.assertNotNull(okAuthenticator58);
    }

    @Test
    public void test07225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07225");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.CookieHandler cookieHandler6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient0.setCookieHandler(cookieHandler6);
        com.squareup.okhttp.OkAuthenticator okAuthenticator8 = okHttpClient0.getAuthenticator();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory9 = okHttpClient0.getSslSocketFactory();
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNotNull(okHttpClient7);
        org.junit.Assert.assertNull(okAuthenticator8);
        org.junit.Assert.assertNull(sSLSocketFactory9);
    }

    @Test
    public void test07226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07226");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache1 = okHttpClient0.okResponseCache();
        java.net.ResponseCache responseCache2 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.setResponseCache(responseCache2);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        okHttpClient0.transports = strList6;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory9);
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache12 = okHttpClient11.okResponseCache();
        java.net.ResponseCache responseCache13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient11.setResponseCache(responseCache13);
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        okHttpClient11.transports = strList17;
        okHttpClient0.transports = strList17;
        java.net.URL uRL21 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.HttpURLConnection httpURLConnection22 = okHttpClient0.open(uRL21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(okResponseCache1);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertNull(okResponseCache12);
        org.junit.Assert.assertNotNull(okHttpClient14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test07227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07227");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.CookieHandler cookieHandler8 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache9 = okHttpClient0.okResponseCache();
        java.net.CookieHandler cookieHandler10 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        java.net.Proxy proxy12 = java.net.Proxy.NO_PROXY;
        boolean boolean14 = proxy12.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type15 = proxy12.type();
        java.net.SocketAddress socketAddress16 = proxy12.address();
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient0.setProxy(proxy12);
        boolean boolean18 = okHttpClient17.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient17.setFollowProtocolRedirects(false);
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient20.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet22 = okHttpClient21.failedRoutes;
        javax.net.ssl.HostnameVerifier hostnameVerifier23 = okHttpClient21.hostnameVerifier;
        java.net.ResponseCache responseCache24 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient21.setResponseCache(responseCache24);
        com.squareup.okhttp.OkHttpClient okHttpClient26 = new com.squareup.okhttp.OkHttpClient(okHttpClient21);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNull(cookieHandler8);
        org.junit.Assert.assertNull(okResponseCache9);
        org.junit.Assert.assertNull(cookieHandler10);
        org.junit.Assert.assertNotNull(proxy12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + type15 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type15.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress16);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNotNull(routeSet22);
        org.junit.Assert.assertNotNull(hostnameVerifier23);
        org.junit.Assert.assertNotNull(okHttpClient25);
    }

    @Test
    public void test07228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07228");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.Proxy proxy8 = null;
        okHttpClient0.proxy = proxy8;
        boolean boolean10 = okHttpClient0.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient0.setFollowProtocolRedirects(true);
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = null;
        okHttpClient13.hostnameVerifier = hostnameVerifier14;
        java.net.ResponseCache responseCache16 = null;
        okHttpClient13.responseCache = responseCache16;
        java.util.List<java.lang.String> strList18 = okHttpClient13.transports;
        com.squareup.okhttp.ConnectionPool connectionPool19 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient13.connectionPool = connectionPool19;
        com.squareup.okhttp.ConnectionPool connectionPool21 = okHttpClient13.connectionPool;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient0.setConnectionPool(connectionPool21);
        com.squareup.okhttp.OkHttpClient okHttpClient23 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier24 = null;
        okHttpClient23.hostnameVerifier = hostnameVerifier24;
        java.net.ResponseCache responseCache26 = null;
        okHttpClient23.responseCache = responseCache26;
        java.util.List<java.lang.String> strList28 = okHttpClient23.transports;
        com.squareup.okhttp.ConnectionPool connectionPool29 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient23.connectionPool = connectionPool29;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient23.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient32 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier33 = null;
        okHttpClient32.hostnameVerifier = hostnameVerifier33;
        java.net.ResponseCache responseCache35 = null;
        okHttpClient32.responseCache = responseCache35;
        java.util.List<java.lang.String> strList37 = okHttpClient32.transports;
        com.squareup.okhttp.ConnectionPool connectionPool38 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient32.connectionPool = connectionPool38;
        com.squareup.okhttp.OkHttpClient okHttpClient40 = okHttpClient32.copyWithDefaults();
        java.net.ProxySelector proxySelector41 = okHttpClient40.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory42 = okHttpClient40.getSslSocketFactory();
        okHttpClient23.sslSocketFactory = sSLSocketFactory42;
        com.squareup.okhttp.OkHttpClient okHttpClient44 = okHttpClient22.setSSLSocketFactory(sSLSocketFactory42);
        java.net.CookieHandler cookieHandler45 = okHttpClient44.cookieHandler;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory46 = okHttpClient44.sslSocketFactory;
        java.net.InetAddress inetAddress47 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket49 = sSLSocketFactory46.createSocket(inetAddress47, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: port out of range:-1");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(connectionPool19);
        org.junit.Assert.assertNotNull(connectionPool21);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNotNull(connectionPool29);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(connectionPool38);
        org.junit.Assert.assertNotNull(okHttpClient40);
// flaky:         org.junit.Assert.assertNull(proxySelector41);
        org.junit.Assert.assertNotNull(sSLSocketFactory42);
        org.junit.Assert.assertNotNull(okHttpClient44);
        org.junit.Assert.assertNull(cookieHandler45);
        org.junit.Assert.assertNotNull(sSLSocketFactory46);
    }

    @Test
    public void test07229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07229");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.net.Proxy proxy5 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress6 = proxy5.address();
        java.net.SocketAddress socketAddress7 = proxy5.address();
        okHttpClient0.proxy = proxy5;
        com.squareup.okhttp.ConnectionPool connectionPool11 = new com.squareup.okhttp.ConnectionPool((-1), (long) '#');
        com.squareup.okhttp.Address address12 = null;
        com.squareup.okhttp.Connection connection13 = connectionPool11.get(address12);
        int int14 = connectionPool11.getSpdyConnectionCount();
        connectionPool11.evictAll();
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient0.setConnectionPool(connectionPool11);
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = null;
        okHttpClient17.hostnameVerifier = hostnameVerifier18;
        java.net.ProxySelector proxySelector20 = okHttpClient17.proxySelector;
        java.net.ProxySelector proxySelector21 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient17.setProxySelector(proxySelector21);
        com.squareup.okhttp.OkHttpClient okHttpClient23 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier24 = null;
        okHttpClient23.hostnameVerifier = hostnameVerifier24;
        java.net.ResponseCache responseCache26 = null;
        okHttpClient23.responseCache = responseCache26;
        java.util.List<java.lang.String> strList28 = okHttpClient23.transports;
        com.squareup.okhttp.ConnectionPool connectionPool29 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient23.connectionPool = connectionPool29;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient23.copyWithDefaults();
        java.net.ProxySelector proxySelector32 = okHttpClient31.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory33 = okHttpClient31.getSslSocketFactory();
        okHttpClient17.sslSocketFactory = sSLSocketFactory33;
        okHttpClient0.sslSocketFactory = sSLSocketFactory33;
        java.lang.String[] strArray36 = sSLSocketFactory33.getSupportedCipherSuites();
        java.lang.String[] strArray37 = sSLSocketFactory33.getSupportedCipherSuites();
        java.net.Socket socket38 = sSLSocketFactory33.createSocket();
        java.net.Socket socket39 = sSLSocketFactory33.createSocket();
        java.lang.String[] strArray40 = sSLSocketFactory33.getSupportedCipherSuites();
        java.lang.String[] strArray41 = sSLSocketFactory33.getDefaultCipherSuites();
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNotNull(proxy5);
        org.junit.Assert.assertNull(socketAddress6);
        org.junit.Assert.assertNull(socketAddress7);
        org.junit.Assert.assertNull(connection13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNull(proxySelector20);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNotNull(connectionPool29);
        org.junit.Assert.assertNotNull(okHttpClient31);
// flaky:         org.junit.Assert.assertNull(proxySelector32);
        org.junit.Assert.assertNotNull(sSLSocketFactory33);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(socket38);
        org.junit.Assert.assertEquals(socket38.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(socket39);
        org.junit.Assert.assertEquals(socket39.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(strArray41);
    }

    @Test
    public void test07230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07230");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        java.net.ResponseCache responseCache12 = okHttpClient0.responseCache;
        java.net.ResponseCache responseCache13 = okHttpClient0.getResponseCache();
        java.net.ResponseCache responseCache14 = okHttpClient0.responseCache;
        java.net.ResponseCache responseCache15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient0.setResponseCache(responseCache15);
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = null;
        okHttpClient17.hostnameVerifier = hostnameVerifier18;
        boolean boolean20 = okHttpClient17.getFollowProtocolRedirects();
        java.net.CookieHandler cookieHandler21 = okHttpClient17.cookieHandler;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier23 = null;
        okHttpClient22.hostnameVerifier = hostnameVerifier23;
        java.net.ResponseCache responseCache25 = null;
        okHttpClient22.responseCache = responseCache25;
        javax.net.ssl.HostnameVerifier hostnameVerifier27 = okHttpClient22.hostnameVerifier;
        java.net.Proxy proxy28 = okHttpClient22.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool31 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient22.connectionPool = connectionPool31;
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient22.copyWithDefaults();
        java.net.ResponseCache responseCache34 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient33.setResponseCache(responseCache34);
        com.squareup.okhttp.OkAuthenticator okAuthenticator36 = okHttpClient33.authenticator;
        okHttpClient17.authenticator = okAuthenticator36;
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient0.setAuthenticator(okAuthenticator36);
        java.util.List<java.lang.String> strList39 = okHttpClient38.getTransports();
        java.net.ResponseCache responseCache40 = null;
        okHttpClient38.responseCache = responseCache40;
        com.squareup.okhttp.OkHttpClient okHttpClient42 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier43 = null;
        okHttpClient42.hostnameVerifier = hostnameVerifier43;
        java.net.ResponseCache responseCache45 = null;
        okHttpClient42.responseCache = responseCache45;
        java.util.List<java.lang.String> strList47 = okHttpClient42.transports;
        com.squareup.okhttp.ConnectionPool connectionPool48 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient42.connectionPool = connectionPool48;
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient42.copyWithDefaults();
        boolean boolean51 = okHttpClient50.getFollowProtocolRedirects();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory52 = okHttpClient50.sslSocketFactory;
        java.net.Socket socket53 = sSLSocketFactory52.createSocket();
        com.squareup.okhttp.OkHttpClient okHttpClient54 = okHttpClient38.setSSLSocketFactory(sSLSocketFactory52);
        com.squareup.okhttp.OkHttpClient okHttpClient55 = new com.squareup.okhttp.OkHttpClient(okHttpClient38);
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(responseCache12);
        org.junit.Assert.assertNull(responseCache13);
        org.junit.Assert.assertNull(responseCache14);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(cookieHandler21);
        org.junit.Assert.assertNull(hostnameVerifier27);
        org.junit.Assert.assertNull(proxy28);
        org.junit.Assert.assertNotNull(okHttpClient33);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNotNull(okAuthenticator36);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNotNull(connectionPool48);
        org.junit.Assert.assertNotNull(okHttpClient50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(sSLSocketFactory52);
        org.junit.Assert.assertNotNull(socket53);
        org.junit.Assert.assertEquals(socket53.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(okHttpClient54);
    }

    @Test
    public void test07231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07231");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        boolean boolean3 = okHttpClient0.getFollowProtocolRedirects();
        java.net.Proxy proxy4 = okHttpClient0.proxy;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = null;
        okHttpClient6.hostnameVerifier = hostnameVerifier7;
        java.net.ResponseCache responseCache9 = null;
        okHttpClient6.responseCache = responseCache9;
        java.util.List<java.lang.String> strList11 = okHttpClient6.transports;
        java.net.Proxy proxy12 = java.net.Proxy.NO_PROXY;
        boolean boolean14 = proxy12.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type15 = proxy12.type();
        java.net.SocketAddress socketAddress16 = proxy12.address();
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient6.setProxy(proxy12);
        java.net.SocketAddress socketAddress18 = proxy12.address();
        java.net.Proxy.Type type19 = proxy12.type();
        java.net.SocketAddress socketAddress20 = proxy12.address();
        com.squareup.okhttp.OkHttpClient okHttpClient21 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier22 = null;
        okHttpClient21.hostnameVerifier = hostnameVerifier22;
        java.net.ResponseCache responseCache24 = null;
        okHttpClient21.responseCache = responseCache24;
        javax.net.ssl.HostnameVerifier hostnameVerifier26 = okHttpClient21.hostnameVerifier;
        java.net.Proxy proxy27 = okHttpClient21.getProxy();
        java.net.CookieHandler cookieHandler28 = null;
        okHttpClient21.cookieHandler = cookieHandler28;
        okHttpClient21.followProtocolRedirects = true;
        java.net.CookieHandler cookieHandler32 = okHttpClient21.getCookieHandler();
        boolean boolean33 = proxy12.equals((java.lang.Object) okHttpClient21);
        java.lang.String str34 = proxy12.toString();
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient0.setProxy(proxy12);
        com.squareup.okhttp.ConnectionPool connectionPool38 = new com.squareup.okhttp.ConnectionPool((-1), (long) '#');
        com.squareup.okhttp.Address address39 = null;
        com.squareup.okhttp.Connection connection40 = connectionPool38.get(address39);
        int int41 = connectionPool38.getSpdyConnectionCount();
        int int42 = connectionPool38.getHttpConnectionCount();
        okHttpClient35.connectionPool = connectionPool38;
        com.squareup.okhttp.Connection connection44 = null;
        // The following exception was thrown during execution in test generation
        try {
            connectionPool38.maybeShare(connection44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(proxy4);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(proxy12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + type15 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type15.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress16);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNull(socketAddress18);
        org.junit.Assert.assertTrue("'" + type19 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type19.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress20);
        org.junit.Assert.assertNull(hostnameVerifier26);
        org.junit.Assert.assertNull(proxy27);
        org.junit.Assert.assertNull(cookieHandler32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "DIRECT" + "'", str34, "DIRECT");
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNull(connection40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
    }

    @Test
    public void test07232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07232");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.CookieHandler cookieHandler6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient0.setCookieHandler(cookieHandler6);
        com.squareup.okhttp.OkAuthenticator okAuthenticator8 = okHttpClient0.getAuthenticator();
        com.squareup.okhttp.OkHttpClient okHttpClient9 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier10 = null;
        okHttpClient9.hostnameVerifier = hostnameVerifier10;
        java.net.ResponseCache responseCache12 = null;
        okHttpClient9.responseCache = responseCache12;
        java.util.List<java.lang.String> strList14 = okHttpClient9.transports;
        java.net.Proxy proxy15 = java.net.Proxy.NO_PROXY;
        boolean boolean17 = proxy15.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type18 = proxy15.type();
        java.net.SocketAddress socketAddress19 = proxy15.address();
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient9.setProxy(proxy15);
        com.squareup.okhttp.OkHttpClient okHttpClient21 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier22 = null;
        okHttpClient21.hostnameVerifier = hostnameVerifier22;
        java.net.ProxySelector proxySelector24 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient21.setProxySelector(proxySelector24);
        javax.net.ssl.HostnameVerifier hostnameVerifier26 = okHttpClient21.hostnameVerifier;
        java.net.CookieHandler cookieHandler27 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient21.setCookieHandler(cookieHandler27);
        java.net.ResponseCache responseCache29 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient30 = okHttpClient28.setResponseCache(responseCache29);
        com.squareup.okhttp.OkHttpClient okHttpClient31 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier32 = null;
        okHttpClient31.hostnameVerifier = hostnameVerifier32;
        java.net.ResponseCache responseCache34 = null;
        okHttpClient31.responseCache = responseCache34;
        java.util.List<java.lang.String> strList36 = okHttpClient31.transports;
        com.squareup.okhttp.ConnectionPool connectionPool37 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient31.connectionPool = connectionPool37;
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient31.copyWithDefaults();
        java.net.ProxySelector proxySelector40 = okHttpClient39.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory41 = okHttpClient39.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient28.setSSLSocketFactory(sSLSocketFactory41);
        boolean boolean43 = proxy15.equals((java.lang.Object) sSLSocketFactory41);
        java.lang.String[] strArray44 = sSLSocketFactory41.getSupportedCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient45 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory41);
        java.net.ResponseCache responseCache46 = null;
        okHttpClient45.responseCache = responseCache46;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory48 = okHttpClient45.sslSocketFactory;
        java.net.Socket socket49 = sSLSocketFactory48.createSocket();
        java.lang.String[] strArray50 = sSLSocketFactory48.getDefaultCipherSuites();
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNotNull(okHttpClient7);
        org.junit.Assert.assertNull(okAuthenticator8);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNotNull(proxy15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + type18 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type18.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress19);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNotNull(okHttpClient25);
        org.junit.Assert.assertNull(hostnameVerifier26);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNotNull(okHttpClient30);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNotNull(connectionPool37);
        org.junit.Assert.assertNotNull(okHttpClient39);
// flaky:         org.junit.Assert.assertNull(proxySelector40);
        org.junit.Assert.assertNotNull(sSLSocketFactory41);
        org.junit.Assert.assertNotNull(okHttpClient42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(okHttpClient45);
        org.junit.Assert.assertNotNull(sSLSocketFactory48);
        org.junit.Assert.assertNotNull(socket49);
        org.junit.Assert.assertEquals(socket49.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(strArray50);
    }

    @Test
    public void test07233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07233");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.Proxy proxy8 = null;
        okHttpClient0.proxy = proxy8;
        boolean boolean10 = okHttpClient0.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        java.net.Proxy proxy12 = okHttpClient0.proxy;
        boolean boolean13 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient0.setFollowProtocolRedirects(true);
        com.squareup.okhttp.OkHttpClient okHttpClient16 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier17 = null;
        okHttpClient16.hostnameVerifier = hostnameVerifier17;
        java.net.ResponseCache responseCache19 = null;
        okHttpClient16.responseCache = responseCache19;
        javax.net.ssl.HostnameVerifier hostnameVerifier21 = okHttpClient16.hostnameVerifier;
        java.net.Proxy proxy22 = okHttpClient16.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient23 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache24 = okHttpClient23.okResponseCache();
        java.net.ResponseCache responseCache25 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient23.setResponseCache(responseCache25);
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList29 = new java.util.ArrayList<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        okHttpClient23.transports = strList29;
        okHttpClient16.transports = strList29;
        javax.net.ssl.HostnameVerifier hostnameVerifier33 = null;
        okHttpClient16.hostnameVerifier = hostnameVerifier33;
        com.squareup.okhttp.OkHttpClient okHttpClient35 = new com.squareup.okhttp.OkHttpClient(okHttpClient16);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory36 = okHttpClient16.sslSocketFactory;
        java.net.CookieHandler cookieHandler37 = okHttpClient16.cookieHandler;
        java.net.CookieHandler cookieHandler38 = null;
        okHttpClient16.cookieHandler = cookieHandler38;
        com.squareup.okhttp.OkHttpClient okHttpClient40 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool41 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient40.connectionPool = connectionPool41;
        com.squareup.okhttp.OkHttpClient okHttpClient43 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier44 = null;
        okHttpClient43.hostnameVerifier = hostnameVerifier44;
        java.net.ResponseCache responseCache46 = null;
        okHttpClient43.responseCache = responseCache46;
        java.util.List<java.lang.String> strList48 = okHttpClient43.transports;
        com.squareup.okhttp.ConnectionPool connectionPool49 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient43.connectionPool = connectionPool49;
        com.squareup.okhttp.OkHttpClient okHttpClient51 = okHttpClient40.setConnectionPool(connectionPool49);
        com.squareup.okhttp.ConnectionPool connectionPool52 = okHttpClient51.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator53 = okHttpClient51.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool56 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient51.connectionPool = connectionPool56;
        java.net.ResponseCache responseCache58 = okHttpClient51.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory59 = okHttpClient51.sslSocketFactory;
        java.net.Proxy proxy60 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress61 = proxy60.address();
        com.squareup.okhttp.OkHttpClient okHttpClient62 = okHttpClient51.setProxy(proxy60);
        com.squareup.okhttp.OkHttpClient okHttpClient63 = new com.squareup.okhttp.OkHttpClient(okHttpClient62);
        com.squareup.okhttp.OkHttpClient okHttpClient64 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier65 = null;
        okHttpClient64.hostnameVerifier = hostnameVerifier65;
        java.net.ResponseCache responseCache67 = null;
        okHttpClient64.responseCache = responseCache67;
        java.util.List<java.lang.String> strList69 = okHttpClient64.transports;
        com.squareup.okhttp.ConnectionPool connectionPool70 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient64.connectionPool = connectionPool70;
        com.squareup.okhttp.OkHttpClient okHttpClient72 = okHttpClient64.copyWithDefaults();
        java.net.ProxySelector proxySelector73 = okHttpClient72.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory74 = okHttpClient72.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient75 = okHttpClient62.setSSLSocketFactory(sSLSocketFactory74);
        java.lang.String[] strArray76 = sSLSocketFactory74.getSupportedCipherSuites();
        java.lang.String[] strArray77 = sSLSocketFactory74.getSupportedCipherSuites();
        java.lang.String[] strArray78 = sSLSocketFactory74.getSupportedCipherSuites();
        okHttpClient16.sslSocketFactory = sSLSocketFactory74;
        okHttpClient0.sslSocketFactory = sSLSocketFactory74;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory81 = okHttpClient0.sslSocketFactory;
        java.lang.String[] strArray82 = sSLSocketFactory81.getDefaultCipherSuites();
        java.net.InetAddress inetAddress83 = null;
        java.net.InetAddress inetAddress85 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket87 = sSLSocketFactory81.createSocket(inetAddress83, (-1), inetAddress85, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: port out of range:-1");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(proxy12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNull(hostnameVerifier21);
        org.junit.Assert.assertNull(proxy22);
        org.junit.Assert.assertNull(okResponseCache24);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(sSLSocketFactory36);
        org.junit.Assert.assertNull(cookieHandler37);
        org.junit.Assert.assertNotNull(connectionPool41);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNotNull(connectionPool49);
        org.junit.Assert.assertNotNull(okHttpClient51);
        org.junit.Assert.assertNotNull(connectionPool52);
        org.junit.Assert.assertNull(okAuthenticator53);
        org.junit.Assert.assertNull(responseCache58);
        org.junit.Assert.assertNull(sSLSocketFactory59);
        org.junit.Assert.assertNotNull(proxy60);
        org.junit.Assert.assertNull(socketAddress61);
        org.junit.Assert.assertNotNull(okHttpClient62);
        org.junit.Assert.assertNull(strList69);
        org.junit.Assert.assertNotNull(connectionPool70);
        org.junit.Assert.assertNotNull(okHttpClient72);
// flaky:         org.junit.Assert.assertNull(proxySelector73);
        org.junit.Assert.assertNotNull(sSLSocketFactory74);
        org.junit.Assert.assertNotNull(okHttpClient75);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertNotNull(sSLSocketFactory81);
        org.junit.Assert.assertNotNull(strArray82);
    }

    @Test
    public void test07234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07234");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.CookieHandler cookieHandler8 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache9 = okHttpClient0.okResponseCache();
        java.net.CookieHandler cookieHandler10 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        java.net.Proxy proxy12 = java.net.Proxy.NO_PROXY;
        boolean boolean14 = proxy12.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type15 = proxy12.type();
        java.net.SocketAddress socketAddress16 = proxy12.address();
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient0.setProxy(proxy12);
        java.lang.String[] strArray19 = new java.lang.String[] { "DIRECT" };
        java.util.ArrayList<java.lang.String> strList20 = new java.util.ArrayList<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList20, strArray19);
        okHttpClient0.transports = strList20;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient0.setFollowProtocolRedirects(false);
        com.squareup.okhttp.ConnectionPool connectionPool25 = okHttpClient24.getConnectionPool();
        com.squareup.okhttp.Address address26 = null;
        com.squareup.okhttp.Connection connection27 = connectionPool25.get(address26);
        int int28 = connectionPool25.getHttpConnectionCount();
        com.squareup.okhttp.Connection connection29 = null;
        // The following exception was thrown during execution in test generation
        try {
            connectionPool25.maybeShare(connection29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNull(cookieHandler8);
        org.junit.Assert.assertNull(okResponseCache9);
        org.junit.Assert.assertNull(cookieHandler10);
        org.junit.Assert.assertNotNull(proxy12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + type15 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type15.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress16);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNotNull(connectionPool25);
        org.junit.Assert.assertNull(connection27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
    }

    @Test
    public void test07235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07235");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.ResponseCache responseCache5 = null;
        okHttpClient4.responseCache = responseCache5;
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = okHttpClient4.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient4.setFollowProtocolRedirects(false);
        java.net.ProxySelector proxySelector10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient9.setProxySelector(proxySelector10);
        java.net.ProxySelector proxySelector12 = okHttpClient11.proxySelector;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = null;
        okHttpClient13.hostnameVerifier = hostnameVerifier14;
        java.net.ProxySelector proxySelector16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient13.setProxySelector(proxySelector16);
        java.net.CookieHandler cookieHandler18 = okHttpClient13.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient19 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier20 = null;
        okHttpClient19.hostnameVerifier = hostnameVerifier20;
        java.net.ResponseCache responseCache22 = null;
        okHttpClient19.responseCache = responseCache22;
        java.util.List<java.lang.String> strList24 = okHttpClient19.transports;
        com.squareup.okhttp.ConnectionPool connectionPool25 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient19.connectionPool = connectionPool25;
        java.net.Proxy proxy27 = null;
        okHttpClient19.proxy = proxy27;
        java.util.Set<com.squareup.okhttp.Route> routeSet29 = okHttpClient19.failedRoutes;
        okHttpClient13.failedRoutes = routeSet29;
        javax.net.ssl.HostnameVerifier hostnameVerifier31 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient13.setHostnameVerifier(hostnameVerifier31);
        java.net.Proxy proxy33 = okHttpClient32.proxy;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory34 = okHttpClient32.sslSocketFactory;
        javax.net.ssl.HostnameVerifier hostnameVerifier35 = okHttpClient32.hostnameVerifier;
        java.net.Proxy proxy36 = java.net.Proxy.NO_PROXY;
        boolean boolean38 = proxy36.equals((java.lang.Object) 1L);
        com.squareup.okhttp.OkHttpClient okHttpClient39 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache40 = okHttpClient39.okResponseCache();
        java.net.ResponseCache responseCache41 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient39.setResponseCache(responseCache41);
        java.lang.String[] strArray44 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        okHttpClient39.transports = strList45;
        boolean boolean48 = proxy36.equals((java.lang.Object) strList45);
        com.squareup.okhttp.OkHttpClient.DEFAULT_TRANSPORTS = strList45;
        okHttpClient32.transports = strList45;
        okHttpClient11.transports = strList45;
        com.squareup.okhttp.OkHttpClient okHttpClient52 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier53 = null;
        okHttpClient52.hostnameVerifier = hostnameVerifier53;
        java.net.ProxySelector proxySelector55 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient56 = okHttpClient52.setProxySelector(proxySelector55);
        com.squareup.okhttp.OkHttpClient okHttpClient57 = okHttpClient56.copyWithDefaults();
        com.squareup.okhttp.Route[] routeArray58 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet59 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet59, routeArray58);
        okHttpClient57.failedRoutes = routeSet59;
        java.net.CookieHandler cookieHandler62 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient63 = okHttpClient57.setCookieHandler(cookieHandler62);
        java.util.List<java.lang.String> strList64 = okHttpClient57.getTransports();
        // The following exception was thrown during execution in test generation
        try {
            com.squareup.okhttp.OkHttpClient okHttpClient65 = okHttpClient11.setTransports(strList64);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: transports doesn't contain http/1.1: [hi!]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(hostnameVerifier7);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(proxySelector12);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNull(cookieHandler18);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNotNull(connectionPool25);
        org.junit.Assert.assertNotNull(routeSet29);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertNull(proxy33);
        org.junit.Assert.assertNull(sSLSocketFactory34);
        org.junit.Assert.assertNull(hostnameVerifier35);
        org.junit.Assert.assertNotNull(proxy36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(okResponseCache40);
        org.junit.Assert.assertNotNull(okHttpClient42);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(okHttpClient56);
        org.junit.Assert.assertNotNull(okHttpClient57);
        org.junit.Assert.assertNotNull(routeArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(okHttpClient63);
        org.junit.Assert.assertNotNull(strList64);
    }

    @Test
    public void test07236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07236");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        java.net.ResponseCache responseCache12 = okHttpClient0.responseCache;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient14 = new com.squareup.okhttp.OkHttpClient(okHttpClient13);
        com.squareup.okhttp.ConnectionPool connectionPool15 = okHttpClient14.getConnectionPool();
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient14.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = null;
        okHttpClient17.hostnameVerifier = hostnameVerifier18;
        java.net.ResponseCache responseCache20 = null;
        okHttpClient17.responseCache = responseCache20;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache22 = okHttpClient17.okResponseCache();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory23 = okHttpClient17.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient24 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier25 = null;
        okHttpClient24.hostnameVerifier = hostnameVerifier25;
        java.net.ProxySelector proxySelector27 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient24.setProxySelector(proxySelector27);
        java.net.ResponseCache responseCache29 = null;
        okHttpClient28.responseCache = responseCache29;
        javax.net.ssl.HostnameVerifier hostnameVerifier31 = okHttpClient28.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient28.setFollowProtocolRedirects(false);
        java.net.ProxySelector proxySelector34 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient33.setProxySelector(proxySelector34);
        java.net.ProxySelector proxySelector36 = okHttpClient35.proxySelector;
        com.squareup.okhttp.OkAuthenticator okAuthenticator37 = okHttpClient35.authenticator;
        java.net.ProxySelector proxySelector38 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient35.setProxySelector(proxySelector38);
        com.squareup.okhttp.OkHttpClient okHttpClient40 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier41 = null;
        okHttpClient40.hostnameVerifier = hostnameVerifier41;
        boolean boolean43 = okHttpClient40.getFollowProtocolRedirects();
        java.net.Proxy proxy44 = okHttpClient40.proxy;
        java.util.Set<com.squareup.okhttp.Route> routeSet45 = okHttpClient40.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient46 = new com.squareup.okhttp.OkHttpClient(okHttpClient40);
        com.squareup.okhttp.OkHttpClient okHttpClient47 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool48 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient47.connectionPool = connectionPool48;
        com.squareup.okhttp.OkHttpClient okHttpClient50 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier51 = null;
        okHttpClient50.hostnameVerifier = hostnameVerifier51;
        java.net.ResponseCache responseCache53 = null;
        okHttpClient50.responseCache = responseCache53;
        java.util.List<java.lang.String> strList55 = okHttpClient50.transports;
        com.squareup.okhttp.ConnectionPool connectionPool56 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient50.connectionPool = connectionPool56;
        com.squareup.okhttp.OkHttpClient okHttpClient58 = okHttpClient47.setConnectionPool(connectionPool56);
        java.net.ResponseCache responseCache59 = okHttpClient47.responseCache;
        java.net.ResponseCache responseCache60 = okHttpClient47.getResponseCache();
        java.net.ResponseCache responseCache61 = okHttpClient47.responseCache;
        com.squareup.okhttp.OkHttpClient okHttpClient62 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache63 = okHttpClient62.okResponseCache();
        java.net.ResponseCache responseCache64 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient65 = okHttpClient62.setResponseCache(responseCache64);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory66 = okHttpClient62.sslSocketFactory;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory67 = okHttpClient62.sslSocketFactory;
        com.squareup.okhttp.OkHttpClient okHttpClient68 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier69 = null;
        okHttpClient68.hostnameVerifier = hostnameVerifier69;
        boolean boolean71 = okHttpClient68.getFollowProtocolRedirects();
        java.net.CookieHandler cookieHandler72 = okHttpClient68.cookieHandler;
        com.squareup.okhttp.OkHttpClient okHttpClient73 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier74 = null;
        okHttpClient73.hostnameVerifier = hostnameVerifier74;
        java.net.ResponseCache responseCache76 = null;
        okHttpClient73.responseCache = responseCache76;
        javax.net.ssl.HostnameVerifier hostnameVerifier78 = okHttpClient73.hostnameVerifier;
        java.net.Proxy proxy79 = okHttpClient73.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool82 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient73.connectionPool = connectionPool82;
        com.squareup.okhttp.OkHttpClient okHttpClient84 = okHttpClient73.copyWithDefaults();
        java.net.ResponseCache responseCache85 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient86 = okHttpClient84.setResponseCache(responseCache85);
        com.squareup.okhttp.OkAuthenticator okAuthenticator87 = okHttpClient84.authenticator;
        okHttpClient68.authenticator = okAuthenticator87;
        com.squareup.okhttp.OkHttpClient okHttpClient89 = okHttpClient62.setAuthenticator(okAuthenticator87);
        com.squareup.okhttp.OkHttpClient okHttpClient90 = okHttpClient47.setAuthenticator(okAuthenticator87);
        com.squareup.okhttp.OkHttpClient okHttpClient91 = okHttpClient46.setAuthenticator(okAuthenticator87);
        okHttpClient35.authenticator = okAuthenticator87;
        com.squareup.okhttp.OkHttpClient okHttpClient93 = okHttpClient17.setAuthenticator(okAuthenticator87);
        com.squareup.okhttp.OkHttpClient okHttpClient94 = okHttpClient16.setAuthenticator(okAuthenticator87);
        com.squareup.okhttp.OkAuthenticator okAuthenticator95 = okHttpClient16.authenticator;
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(responseCache12);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNull(connectionPool15);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNull(okResponseCache22);
        org.junit.Assert.assertNull(sSLSocketFactory23);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNull(hostnameVerifier31);
        org.junit.Assert.assertNotNull(okHttpClient33);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNull(proxySelector36);
        org.junit.Assert.assertNull(okAuthenticator37);
        org.junit.Assert.assertNotNull(okHttpClient39);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(proxy44);
        org.junit.Assert.assertNotNull(routeSet45);
        org.junit.Assert.assertNotNull(connectionPool48);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertNotNull(connectionPool56);
        org.junit.Assert.assertNotNull(okHttpClient58);
        org.junit.Assert.assertNull(responseCache59);
        org.junit.Assert.assertNull(responseCache60);
        org.junit.Assert.assertNull(responseCache61);
        org.junit.Assert.assertNull(okResponseCache63);
        org.junit.Assert.assertNotNull(okHttpClient65);
        org.junit.Assert.assertNull(sSLSocketFactory66);
        org.junit.Assert.assertNull(sSLSocketFactory67);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNull(cookieHandler72);
        org.junit.Assert.assertNull(hostnameVerifier78);
        org.junit.Assert.assertNull(proxy79);
        org.junit.Assert.assertNotNull(okHttpClient84);
        org.junit.Assert.assertNotNull(okHttpClient86);
        org.junit.Assert.assertNotNull(okAuthenticator87);
        org.junit.Assert.assertNotNull(okHttpClient89);
        org.junit.Assert.assertNotNull(okHttpClient90);
        org.junit.Assert.assertNotNull(okHttpClient91);
        org.junit.Assert.assertNotNull(okHttpClient93);
        org.junit.Assert.assertNotNull(okHttpClient94);
        org.junit.Assert.assertNotNull(okAuthenticator95);
    }

    @Test
    public void test07237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07237");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.ConnectionPool connectionPool12 = okHttpClient11.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator13 = okHttpClient11.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool16 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient11.connectionPool = connectionPool16;
        java.net.ResponseCache responseCache18 = okHttpClient11.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory19 = okHttpClient11.sslSocketFactory;
        java.net.Proxy proxy20 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress21 = proxy20.address();
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient11.setProxy(proxy20);
        com.squareup.okhttp.OkHttpClient okHttpClient23 = new com.squareup.okhttp.OkHttpClient(okHttpClient22);
        com.squareup.okhttp.OkHttpClient okHttpClient24 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier25 = null;
        okHttpClient24.hostnameVerifier = hostnameVerifier25;
        java.net.ResponseCache responseCache27 = null;
        okHttpClient24.responseCache = responseCache27;
        java.util.List<java.lang.String> strList29 = okHttpClient24.transports;
        com.squareup.okhttp.ConnectionPool connectionPool30 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient24.connectionPool = connectionPool30;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient24.copyWithDefaults();
        java.net.ProxySelector proxySelector33 = okHttpClient32.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory34 = okHttpClient32.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient22.setSSLSocketFactory(sSLSocketFactory34);
        java.lang.String[] strArray36 = sSLSocketFactory34.getSupportedCipherSuites();
        java.lang.String[] strArray37 = sSLSocketFactory34.getSupportedCipherSuites();
        java.net.Socket socket38 = sSLSocketFactory34.createSocket();
        java.net.Socket socket39 = sSLSocketFactory34.createSocket();
        java.net.InetAddress inetAddress42 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket44 = sSLSocketFactory34.createSocket("", (int) (short) 100, inetAddress42, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.net.BindException; message: Permission denied (Bind failed)");
        } catch (java.net.BindException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNull(okAuthenticator13);
        org.junit.Assert.assertNull(responseCache18);
        org.junit.Assert.assertNull(sSLSocketFactory19);
        org.junit.Assert.assertNotNull(proxy20);
        org.junit.Assert.assertNull(socketAddress21);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(connectionPool30);
        org.junit.Assert.assertNotNull(okHttpClient32);
// flaky:         org.junit.Assert.assertNull(proxySelector33);
        org.junit.Assert.assertNotNull(sSLSocketFactory34);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(socket38);
        org.junit.Assert.assertEquals(socket38.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(socket39);
        org.junit.Assert.assertEquals(socket39.toString(), "Socket[unconnected]");
    }

    @Test
    public void test07238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07238");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache1 = okHttpClient0.okResponseCache();
        java.net.ResponseCache responseCache2 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.setResponseCache(responseCache2);
        java.net.ProxySelector proxySelector4 = okHttpClient0.getProxySelector();
        boolean boolean5 = okHttpClient0.getFollowProtocolRedirects();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory6 = okHttpClient0.getSslSocketFactory();
        java.net.ResponseCache responseCache7 = okHttpClient0.getResponseCache();
        java.lang.Class<?> wildcardClass8 = okHttpClient0.getClass();
        org.junit.Assert.assertNull(okResponseCache1);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertNull(proxySelector4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(sSLSocketFactory6);
        org.junit.Assert.assertNull(responseCache7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test07239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07239");
        java.net.Proxy proxy0 = java.net.Proxy.NO_PROXY;
        boolean boolean2 = proxy0.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type3 = proxy0.type();
        java.net.SocketAddress socketAddress4 = proxy0.address();
        com.squareup.okhttp.OkHttpClient okHttpClient5 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier6 = null;
        okHttpClient5.hostnameVerifier = hostnameVerifier6;
        java.net.ResponseCache responseCache8 = null;
        okHttpClient5.responseCache = responseCache8;
        javax.net.ssl.HostnameVerifier hostnameVerifier10 = okHttpClient5.hostnameVerifier;
        java.net.Proxy proxy11 = okHttpClient5.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient12 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache13 = okHttpClient12.okResponseCache();
        java.net.ResponseCache responseCache14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient12.setResponseCache(responseCache14);
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        okHttpClient12.transports = strList18;
        okHttpClient5.transports = strList18;
        java.net.Proxy proxy22 = okHttpClient5.getProxy();
        java.util.Set<com.squareup.okhttp.Route> routeSet23 = okHttpClient5.failedRoutes;
        boolean boolean24 = proxy0.equals((java.lang.Object) okHttpClient5);
        com.squareup.okhttp.OkHttpClient okHttpClient25 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier26 = null;
        okHttpClient25.hostnameVerifier = hostnameVerifier26;
        java.net.ResponseCache responseCache28 = null;
        okHttpClient25.responseCache = responseCache28;
        java.util.List<java.lang.String> strList30 = okHttpClient25.transports;
        com.squareup.okhttp.ConnectionPool connectionPool31 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient25.connectionPool = connectionPool31;
        java.net.Proxy proxy33 = null;
        okHttpClient25.proxy = proxy33;
        boolean boolean35 = okHttpClient25.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient36 = new com.squareup.okhttp.OkHttpClient(okHttpClient25);
        java.net.ProxySelector proxySelector37 = okHttpClient36.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier38 = okHttpClient36.hostnameVerifier;
        javax.net.ssl.HostnameVerifier hostnameVerifier39 = okHttpClient36.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient40 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool41 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient40.connectionPool = connectionPool41;
        com.squareup.okhttp.OkAuthenticator okAuthenticator43 = null;
        okHttpClient40.authenticator = okAuthenticator43;
        java.net.CookieHandler cookieHandler45 = null;
        okHttpClient40.cookieHandler = cookieHandler45;
        java.net.Proxy proxy47 = java.net.Proxy.NO_PROXY;
        boolean boolean49 = proxy47.equals((java.lang.Object) 1L);
        com.squareup.okhttp.OkHttpClient okHttpClient50 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache51 = okHttpClient50.okResponseCache();
        java.net.ResponseCache responseCache52 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient53 = okHttpClient50.setResponseCache(responseCache52);
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList56 = new java.util.ArrayList<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        okHttpClient50.transports = strList56;
        boolean boolean59 = proxy47.equals((java.lang.Object) strList56);
        com.squareup.okhttp.OkHttpClient okHttpClient60 = okHttpClient40.setProxy(proxy47);
        com.squareup.okhttp.OkHttpClient okHttpClient61 = okHttpClient36.setProxy(proxy47);
        com.squareup.okhttp.OkHttpClient okHttpClient62 = new com.squareup.okhttp.OkHttpClient(okHttpClient61);
        com.squareup.okhttp.OkHttpClient okHttpClient63 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier64 = null;
        okHttpClient63.hostnameVerifier = hostnameVerifier64;
        java.net.ResponseCache responseCache66 = null;
        okHttpClient63.responseCache = responseCache66;
        javax.net.ssl.HostnameVerifier hostnameVerifier68 = okHttpClient63.hostnameVerifier;
        java.net.Proxy proxy69 = okHttpClient63.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool72 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient63.connectionPool = connectionPool72;
        com.squareup.okhttp.OkHttpClient okHttpClient74 = okHttpClient63.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier75 = okHttpClient74.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient76 = okHttpClient61.setHostnameVerifier(hostnameVerifier75);
        com.squareup.okhttp.OkHttpClient okHttpClient77 = okHttpClient5.setHostnameVerifier(hostnameVerifier75);
        java.net.CookieHandler cookieHandler78 = null;
        okHttpClient5.cookieHandler = cookieHandler78;
        org.junit.Assert.assertNotNull(proxy0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + type3 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type3.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress4);
        org.junit.Assert.assertNull(hostnameVerifier10);
        org.junit.Assert.assertNull(proxy11);
        org.junit.Assert.assertNull(okResponseCache13);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(proxy22);
        org.junit.Assert.assertNotNull(routeSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNotNull(connectionPool31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(proxySelector37);
        org.junit.Assert.assertNull(hostnameVerifier38);
        org.junit.Assert.assertNull(hostnameVerifier39);
        org.junit.Assert.assertNotNull(connectionPool41);
        org.junit.Assert.assertNotNull(proxy47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(okResponseCache51);
        org.junit.Assert.assertNotNull(okHttpClient53);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(okHttpClient60);
        org.junit.Assert.assertNotNull(okHttpClient61);
        org.junit.Assert.assertNull(hostnameVerifier68);
        org.junit.Assert.assertNull(proxy69);
        org.junit.Assert.assertNotNull(okHttpClient74);
        org.junit.Assert.assertNotNull(hostnameVerifier75);
        org.junit.Assert.assertNotNull(okHttpClient76);
        org.junit.Assert.assertNotNull(okHttpClient77);
    }

    @Test
    public void test07240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07240");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        java.net.Proxy proxy4 = okHttpClient0.proxy;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        boolean boolean6 = okHttpClient0.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool8 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient7.connectionPool = connectionPool8;
        java.net.ResponseCache responseCache10 = null;
        okHttpClient7.responseCache = responseCache10;
        java.net.Proxy proxy12 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress13 = proxy12.address();
        java.net.SocketAddress socketAddress14 = proxy12.address();
        okHttpClient7.proxy = proxy12;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient0.setProxy(proxy12);
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient0.setFollowProtocolRedirects(false);
        java.net.ResponseCache responseCache19 = okHttpClient18.responseCache;
        com.squareup.okhttp.OkAuthenticator okAuthenticator20 = okHttpClient18.getAuthenticator();
        java.net.ProxySelector proxySelector21 = okHttpClient18.proxySelector;
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNull(proxy4);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(connectionPool8);
        org.junit.Assert.assertNotNull(proxy12);
        org.junit.Assert.assertNull(socketAddress13);
        org.junit.Assert.assertNull(socketAddress14);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNull(responseCache19);
        org.junit.Assert.assertNull(okAuthenticator20);
        org.junit.Assert.assertNull(proxySelector21);
    }

    @Test
    public void test07241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07241");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.CookieHandler cookieHandler8 = okHttpClient0.cookieHandler;
        java.net.ProxySelector proxySelector9 = null;
        okHttpClient0.proxySelector = proxySelector9;
        java.net.CookieHandler cookieHandler11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient0.setCookieHandler(cookieHandler11);
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient(okHttpClient12);
        java.util.Set<com.squareup.okhttp.Route> routeSet14 = okHttpClient12.failedRoutes;
        com.squareup.okhttp.ConnectionPool connectionPool15 = okHttpClient12.connectionPool;
        boolean boolean16 = okHttpClient12.followProtocolRedirects;
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNull(cookieHandler8);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertNotNull(routeSet14);
        org.junit.Assert.assertNotNull(connectionPool15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test07242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07242");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache1 = okHttpClient0.okResponseCache();
        java.net.ResponseCache responseCache2 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.setResponseCache(responseCache2);
        java.util.List<java.lang.String> strList4 = okHttpClient0.getTransports();
        java.net.ProxySelector proxySelector5 = null;
        okHttpClient0.proxySelector = proxySelector5;
        java.net.CookieHandler cookieHandler7 = null;
        okHttpClient0.cookieHandler = cookieHandler7;
        java.net.CookieHandler cookieHandler9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient0.setCookieHandler(cookieHandler9);
        com.squareup.okhttp.OkAuthenticator okAuthenticator11 = okHttpClient0.authenticator;
        java.util.List<java.lang.String> strList12 = okHttpClient0.getTransports();
        org.junit.Assert.assertNull(okResponseCache1);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertNull(okAuthenticator11);
        org.junit.Assert.assertNull(strList12);
    }

    @Test
    public void test07243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07243");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.ConnectionPool connectionPool12 = okHttpClient11.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator13 = okHttpClient11.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool16 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient11.connectionPool = connectionPool16;
        java.net.ResponseCache responseCache18 = okHttpClient11.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory19 = okHttpClient11.sslSocketFactory;
        java.net.Proxy proxy20 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress21 = proxy20.address();
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient11.setProxy(proxy20);
        com.squareup.okhttp.OkHttpClient okHttpClient23 = new com.squareup.okhttp.OkHttpClient(okHttpClient22);
        com.squareup.okhttp.OkHttpClient okHttpClient24 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier25 = null;
        okHttpClient24.hostnameVerifier = hostnameVerifier25;
        java.net.ResponseCache responseCache27 = null;
        okHttpClient24.responseCache = responseCache27;
        java.util.List<java.lang.String> strList29 = okHttpClient24.transports;
        com.squareup.okhttp.ConnectionPool connectionPool30 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient24.connectionPool = connectionPool30;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient24.copyWithDefaults();
        java.net.ProxySelector proxySelector33 = okHttpClient32.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory34 = okHttpClient32.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient22.setSSLSocketFactory(sSLSocketFactory34);
        java.lang.String[] strArray36 = sSLSocketFactory34.getSupportedCipherSuites();
        java.lang.String[] strArray37 = sSLSocketFactory34.getSupportedCipherSuites();
        java.lang.String[] strArray38 = sSLSocketFactory34.getSupportedCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient39 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier40 = null;
        okHttpClient39.hostnameVerifier = hostnameVerifier40;
        java.net.ProxySelector proxySelector42 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient43 = okHttpClient39.setProxySelector(proxySelector42);
        com.squareup.okhttp.OkHttpClient okHttpClient44 = okHttpClient43.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient45 = new com.squareup.okhttp.OkHttpClient(okHttpClient44);
        com.squareup.okhttp.OkHttpClient okHttpClient46 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier47 = null;
        okHttpClient46.hostnameVerifier = hostnameVerifier47;
        java.net.ResponseCache responseCache49 = null;
        okHttpClient46.responseCache = responseCache49;
        javax.net.ssl.HostnameVerifier hostnameVerifier51 = okHttpClient46.hostnameVerifier;
        java.net.Proxy proxy52 = okHttpClient46.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool55 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient46.connectionPool = connectionPool55;
        com.squareup.okhttp.OkHttpClient okHttpClient57 = okHttpClient46.copyWithDefaults();
        java.util.List<java.lang.String> strList58 = okHttpClient46.getTransports();
        com.squareup.okhttp.OkHttpClient okHttpClient59 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier60 = null;
        okHttpClient59.hostnameVerifier = hostnameVerifier60;
        java.net.ResponseCache responseCache62 = null;
        okHttpClient59.responseCache = responseCache62;
        javax.net.ssl.HostnameVerifier hostnameVerifier64 = okHttpClient59.hostnameVerifier;
        java.net.Proxy proxy65 = okHttpClient59.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool68 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient59.connectionPool = connectionPool68;
        com.squareup.okhttp.OkHttpClient okHttpClient70 = okHttpClient59.copyWithDefaults();
        java.net.ResponseCache responseCache71 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient72 = okHttpClient70.setResponseCache(responseCache71);
        java.net.ProxySelector proxySelector73 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient74 = okHttpClient70.setProxySelector(proxySelector73);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory75 = okHttpClient74.getSslSocketFactory();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory76 = okHttpClient74.getSslSocketFactory();
        java.lang.String[] strArray77 = sSLSocketFactory76.getSupportedCipherSuites();
        okHttpClient46.sslSocketFactory = sSLSocketFactory76;
        okHttpClient45.sslSocketFactory = sSLSocketFactory76;
        java.net.Socket socket80 = sSLSocketFactory76.createSocket();
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket84 = sSLSocketFactory34.createSocket(socket80, "DIRECT", (int) '4', true);
            org.junit.Assert.fail("Expected exception of type java.net.SocketException; message: Underlying socket is not connected");
        } catch (java.net.SocketException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNull(okAuthenticator13);
        org.junit.Assert.assertNull(responseCache18);
        org.junit.Assert.assertNull(sSLSocketFactory19);
        org.junit.Assert.assertNotNull(proxy20);
        org.junit.Assert.assertNull(socketAddress21);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(connectionPool30);
        org.junit.Assert.assertNotNull(okHttpClient32);
// flaky:         org.junit.Assert.assertNull(proxySelector33);
        org.junit.Assert.assertNotNull(sSLSocketFactory34);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(okHttpClient43);
        org.junit.Assert.assertNotNull(okHttpClient44);
        org.junit.Assert.assertNull(hostnameVerifier51);
        org.junit.Assert.assertNull(proxy52);
        org.junit.Assert.assertNotNull(okHttpClient57);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNull(hostnameVerifier64);
        org.junit.Assert.assertNull(proxy65);
        org.junit.Assert.assertNotNull(okHttpClient70);
        org.junit.Assert.assertNotNull(okHttpClient72);
        org.junit.Assert.assertNotNull(okHttpClient74);
        org.junit.Assert.assertNotNull(sSLSocketFactory75);
        org.junit.Assert.assertNotNull(sSLSocketFactory76);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(socket80);
        org.junit.Assert.assertEquals(socket80.toString(), "Socket[unconnected]");
    }

    @Test
    public void test07244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07244");
        com.squareup.okhttp.ConnectionPool connectionPool2 = new com.squareup.okhttp.ConnectionPool((int) (short) 0, (long) 'a');
        com.squareup.okhttp.Address address3 = null;
        com.squareup.okhttp.Connection connection4 = connectionPool2.get(address3);
        org.junit.Assert.assertNull(connection4);
    }

    @Test
    public void test07245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07245");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient0.setFollowProtocolRedirects(false);
        java.util.List<java.lang.String> strList8 = okHttpClient7.transports;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = new com.squareup.okhttp.OkHttpClient(okHttpClient7);
        com.squareup.okhttp.OkHttpClient okHttpClient10 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier11 = null;
        okHttpClient10.hostnameVerifier = hostnameVerifier11;
        java.net.ProxySelector proxySelector13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient10.setProxySelector(proxySelector13);
        javax.net.ssl.HostnameVerifier hostnameVerifier15 = okHttpClient10.hostnameVerifier;
        java.net.CookieHandler cookieHandler16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient10.setCookieHandler(cookieHandler16);
        com.squareup.okhttp.OkAuthenticator okAuthenticator18 = okHttpClient17.authenticator;
        java.net.ProxySelector proxySelector19 = okHttpClient17.getProxySelector();
        com.squareup.okhttp.OkHttpClient okHttpClient20 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier21 = null;
        okHttpClient20.hostnameVerifier = hostnameVerifier21;
        java.net.ResponseCache responseCache23 = null;
        okHttpClient20.responseCache = responseCache23;
        java.util.List<java.lang.String> strList25 = okHttpClient20.transports;
        com.squareup.okhttp.ConnectionPool connectionPool26 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient20.connectionPool = connectionPool26;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient20.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient29 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = null;
        okHttpClient29.hostnameVerifier = hostnameVerifier30;
        java.net.ResponseCache responseCache32 = null;
        okHttpClient29.responseCache = responseCache32;
        java.util.List<java.lang.String> strList34 = okHttpClient29.transports;
        com.squareup.okhttp.ConnectionPool connectionPool35 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient29.connectionPool = connectionPool35;
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient29.copyWithDefaults();
        java.net.ProxySelector proxySelector38 = okHttpClient37.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory39 = okHttpClient37.getSslSocketFactory();
        okHttpClient20.sslSocketFactory = sSLSocketFactory39;
        java.net.Socket socket41 = sSLSocketFactory39.createSocket();
        java.net.Socket socket42 = sSLSocketFactory39.createSocket();
        okHttpClient17.sslSocketFactory = sSLSocketFactory39;
        com.squareup.okhttp.OkHttpClient okHttpClient44 = okHttpClient9.setSSLSocketFactory(sSLSocketFactory39);
        java.net.ProxySelector proxySelector45 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient46 = okHttpClient44.setProxySelector(proxySelector45);
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNotNull(okHttpClient7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(okHttpClient14);
        org.junit.Assert.assertNull(hostnameVerifier15);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNull(okAuthenticator18);
        org.junit.Assert.assertNull(proxySelector19);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNotNull(connectionPool26);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(connectionPool35);
        org.junit.Assert.assertNotNull(okHttpClient37);
// flaky:         org.junit.Assert.assertNull(proxySelector38);
        org.junit.Assert.assertNotNull(sSLSocketFactory39);
        org.junit.Assert.assertNotNull(socket41);
        org.junit.Assert.assertEquals(socket41.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(socket42);
        org.junit.Assert.assertEquals(socket42.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(okHttpClient44);
        org.junit.Assert.assertNotNull(okHttpClient46);
    }

    @Test
    public void test07246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07246");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache8 = okHttpClient7.okResponseCache();
        java.net.ResponseCache responseCache9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient7.setResponseCache(responseCache9);
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        okHttpClient7.transports = strList13;
        okHttpClient0.transports = strList13;
        javax.net.ssl.HostnameVerifier hostnameVerifier17 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier17;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory20 = null;
        okHttpClient0.sslSocketFactory = sSLSocketFactory20;
        java.net.CookieHandler cookieHandler22 = okHttpClient0.getCookieHandler();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory23 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory23);
        com.squareup.okhttp.OkHttpClient okHttpClient25 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        java.net.ResponseCache responseCache26 = okHttpClient25.responseCache;
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNull(okResponseCache8);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(cookieHandler22);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNull(responseCache26);
    }

    @Test
    public void test07247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07247");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.ConnectionPool connectionPool12 = okHttpClient11.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator13 = okHttpClient11.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool16 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient11.connectionPool = connectionPool16;
        java.net.ResponseCache responseCache18 = okHttpClient11.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory19 = okHttpClient11.sslSocketFactory;
        java.net.Proxy proxy20 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress21 = proxy20.address();
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient11.setProxy(proxy20);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory23 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient11.setSSLSocketFactory(sSLSocketFactory23);
        com.squareup.okhttp.OkHttpClient okHttpClient25 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier26 = null;
        okHttpClient25.hostnameVerifier = hostnameVerifier26;
        java.net.ResponseCache responseCache28 = null;
        okHttpClient25.responseCache = responseCache28;
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = okHttpClient25.hostnameVerifier;
        java.net.Proxy proxy31 = okHttpClient25.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool34 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient25.connectionPool = connectionPool34;
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient25.copyWithDefaults();
        java.net.ResponseCache responseCache37 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient36.setResponseCache(responseCache37);
        com.squareup.okhttp.OkAuthenticator okAuthenticator39 = okHttpClient36.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient40 = okHttpClient11.setAuthenticator(okAuthenticator39);
        java.net.Proxy proxy41 = okHttpClient40.getProxy();
        com.squareup.okhttp.OkAuthenticator okAuthenticator42 = okHttpClient40.getAuthenticator();
        com.squareup.okhttp.OkHttpClient okHttpClient43 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool44 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient43.connectionPool = connectionPool44;
        com.squareup.okhttp.OkHttpClient okHttpClient46 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier47 = null;
        okHttpClient46.hostnameVerifier = hostnameVerifier47;
        java.net.ResponseCache responseCache49 = null;
        okHttpClient46.responseCache = responseCache49;
        java.util.List<java.lang.String> strList51 = okHttpClient46.transports;
        com.squareup.okhttp.ConnectionPool connectionPool52 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient46.connectionPool = connectionPool52;
        com.squareup.okhttp.OkHttpClient okHttpClient54 = okHttpClient43.setConnectionPool(connectionPool52);
        java.net.Proxy proxy55 = okHttpClient54.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient56 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool57 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient56.connectionPool = connectionPool57;
        int int59 = connectionPool57.getSpdyConnectionCount();
        okHttpClient54.connectionPool = connectionPool57;
        com.squareup.okhttp.OkHttpClient okHttpClient61 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier62 = null;
        okHttpClient61.hostnameVerifier = hostnameVerifier62;
        java.net.ResponseCache responseCache64 = null;
        okHttpClient61.responseCache = responseCache64;
        javax.net.ssl.HostnameVerifier hostnameVerifier66 = okHttpClient61.hostnameVerifier;
        java.net.Proxy proxy67 = okHttpClient61.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool70 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient61.connectionPool = connectionPool70;
        com.squareup.okhttp.OkHttpClient okHttpClient72 = okHttpClient61.copyWithDefaults();
        java.net.ResponseCache responseCache73 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient74 = okHttpClient72.setResponseCache(responseCache73);
        com.squareup.okhttp.OkAuthenticator okAuthenticator75 = okHttpClient72.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient76 = okHttpClient54.setAuthenticator(okAuthenticator75);
        okHttpClient40.authenticator = okAuthenticator75;
        java.net.ResponseCache responseCache78 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient79 = okHttpClient40.setResponseCache(responseCache78);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory80 = okHttpClient40.getSslSocketFactory();
        com.squareup.okhttp.ConnectionPool connectionPool81 = okHttpClient40.getConnectionPool();
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNull(okAuthenticator13);
        org.junit.Assert.assertNull(responseCache18);
        org.junit.Assert.assertNull(sSLSocketFactory19);
        org.junit.Assert.assertNotNull(proxy20);
        org.junit.Assert.assertNull(socketAddress21);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNull(hostnameVerifier30);
        org.junit.Assert.assertNull(proxy31);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNotNull(okAuthenticator39);
        org.junit.Assert.assertNotNull(okHttpClient40);
        org.junit.Assert.assertNotNull(proxy41);
        org.junit.Assert.assertNotNull(okAuthenticator42);
        org.junit.Assert.assertNotNull(connectionPool44);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNotNull(connectionPool52);
        org.junit.Assert.assertNotNull(okHttpClient54);
        org.junit.Assert.assertNull(proxy55);
        org.junit.Assert.assertNotNull(connectionPool57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNull(hostnameVerifier66);
        org.junit.Assert.assertNull(proxy67);
        org.junit.Assert.assertNotNull(okHttpClient72);
        org.junit.Assert.assertNotNull(okHttpClient74);
        org.junit.Assert.assertNotNull(okAuthenticator75);
        org.junit.Assert.assertNotNull(okHttpClient76);
        org.junit.Assert.assertNotNull(okHttpClient79);
        org.junit.Assert.assertNull(sSLSocketFactory80);
        org.junit.Assert.assertNotNull(connectionPool81);
    }

    @Test
    public void test07248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07248");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient0.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.copyWithDefaults();
        java.net.Proxy proxy12 = okHttpClient11.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier13 = okHttpClient11.getHostnameVerifier();
        com.squareup.okhttp.ConnectionPool connectionPool14 = null;
        okHttpClient11.connectionPool = connectionPool14;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier17 = null;
        okHttpClient16.hostnameVerifier = hostnameVerifier17;
        java.net.ResponseCache responseCache19 = null;
        okHttpClient16.responseCache = responseCache19;
        java.util.List<java.lang.String> strList21 = okHttpClient16.transports;
        com.squareup.okhttp.ConnectionPool connectionPool22 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient16.connectionPool = connectionPool22;
        java.net.CookieHandler cookieHandler24 = okHttpClient16.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache25 = okHttpClient16.okResponseCache();
        java.net.CookieHandler cookieHandler26 = okHttpClient16.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient27 = new com.squareup.okhttp.OkHttpClient(okHttpClient16);
        com.squareup.okhttp.OkHttpClient okHttpClient28 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier29 = null;
        okHttpClient28.hostnameVerifier = hostnameVerifier29;
        java.net.ProxySelector proxySelector31 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient28.setProxySelector(proxySelector31);
        java.net.CookieHandler cookieHandler33 = okHttpClient28.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient34 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier35 = null;
        okHttpClient34.hostnameVerifier = hostnameVerifier35;
        java.net.ResponseCache responseCache37 = null;
        okHttpClient34.responseCache = responseCache37;
        java.util.List<java.lang.String> strList39 = okHttpClient34.transports;
        com.squareup.okhttp.ConnectionPool connectionPool40 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient34.connectionPool = connectionPool40;
        java.net.Proxy proxy42 = null;
        okHttpClient34.proxy = proxy42;
        java.util.Set<com.squareup.okhttp.Route> routeSet44 = okHttpClient34.failedRoutes;
        okHttpClient28.failedRoutes = routeSet44;
        okHttpClient27.failedRoutes = routeSet44;
        java.util.List<java.lang.String> strList47 = okHttpClient27.getTransports();
        java.net.ResponseCache responseCache48 = null;
        okHttpClient27.responseCache = responseCache48;
        java.net.Proxy proxy50 = java.net.Proxy.NO_PROXY;
        boolean boolean52 = proxy50.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type53 = proxy50.type();
        java.net.Proxy.Type type54 = proxy50.type();
        okHttpClient27.proxy = proxy50;
        okHttpClient11.proxy = proxy50;
        java.net.CookieHandler cookieHandler57 = null;
        okHttpClient11.cookieHandler = cookieHandler57;
        com.squareup.okhttp.OkHttpClient okHttpClient59 = new com.squareup.okhttp.OkHttpClient(okHttpClient11);
        java.util.List<java.lang.String> strList60 = okHttpClient59.transports;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory61 = okHttpClient59.getSslSocketFactory();
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(proxy12);
        org.junit.Assert.assertNotNull(hostnameVerifier13);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(connectionPool22);
        org.junit.Assert.assertNull(cookieHandler24);
        org.junit.Assert.assertNull(okResponseCache25);
        org.junit.Assert.assertNull(cookieHandler26);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertNull(cookieHandler33);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNotNull(connectionPool40);
        org.junit.Assert.assertNotNull(routeSet44);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNotNull(proxy50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + type53 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type53.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertTrue("'" + type54 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type54.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNull(sSLSocketFactory61);
    }

    @Test
    public void test07249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07249");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.Proxy proxy8 = null;
        okHttpClient0.proxy = proxy8;
        boolean boolean10 = okHttpClient0.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        java.util.Set<com.squareup.okhttp.Route> routeSet12 = okHttpClient0.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        java.net.ProxySelector proxySelector14 = okHttpClient13.proxySelector;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient(okHttpClient13);
        boolean boolean16 = okHttpClient15.getFollowProtocolRedirects();
        boolean boolean17 = okHttpClient15.getFollowProtocolRedirects();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory18 = okHttpClient15.sslSocketFactory;
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(routeSet12);
        org.junit.Assert.assertNull(proxySelector14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(sSLSocketFactory18);
    }

    @Test
    public void test07250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07250");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.ConnectionPool connectionPool12 = okHttpClient11.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator13 = okHttpClient11.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool16 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient11.connectionPool = connectionPool16;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier19 = null;
        okHttpClient18.hostnameVerifier = hostnameVerifier19;
        java.net.ResponseCache responseCache21 = null;
        okHttpClient18.responseCache = responseCache21;
        java.util.List<java.lang.String> strList23 = okHttpClient18.transports;
        com.squareup.okhttp.ConnectionPool connectionPool24 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient18.connectionPool = connectionPool24;
        java.net.CookieHandler cookieHandler26 = okHttpClient18.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache27 = okHttpClient18.okResponseCache();
        java.net.CookieHandler cookieHandler28 = okHttpClient18.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient29 = new com.squareup.okhttp.OkHttpClient(okHttpClient18);
        java.net.Proxy proxy30 = java.net.Proxy.NO_PROXY;
        boolean boolean32 = proxy30.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type33 = proxy30.type();
        java.net.SocketAddress socketAddress34 = proxy30.address();
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient18.setProxy(proxy30);
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient11.setProxy(proxy30);
        java.net.ResponseCache responseCache37 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient36.setResponseCache(responseCache37);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory39 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient40 = okHttpClient36.setSSLSocketFactory(sSLSocketFactory39);
        com.squareup.okhttp.OkHttpClient okHttpClient41 = okHttpClient36.copyWithDefaults();
        boolean boolean42 = okHttpClient36.getFollowProtocolRedirects();
        boolean boolean43 = okHttpClient36.getFollowProtocolRedirects();
        com.squareup.okhttp.ConnectionPool connectionPool44 = okHttpClient36.getConnectionPool();
        com.squareup.okhttp.Connection connection45 = null;
        // The following exception was thrown during execution in test generation
        try {
            connectionPool44.maybeShare(connection45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNull(okAuthenticator13);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNotNull(connectionPool24);
        org.junit.Assert.assertNull(cookieHandler26);
        org.junit.Assert.assertNull(okResponseCache27);
        org.junit.Assert.assertNull(cookieHandler28);
        org.junit.Assert.assertNotNull(proxy30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + type33 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type33.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress34);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNotNull(okHttpClient40);
        org.junit.Assert.assertNotNull(okHttpClient41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(connectionPool44);
    }

    @Test
    public void test07251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07251");
        com.squareup.okhttp.ConnectionPool connectionPool2 = new com.squareup.okhttp.ConnectionPool((int) (short) 10, 0L);
        com.squareup.okhttp.Address address3 = null;
        com.squareup.okhttp.Connection connection4 = connectionPool2.get(address3);
        int int5 = connectionPool2.getSpdyConnectionCount();
        org.junit.Assert.assertNull(connection4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test07252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07252");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        java.util.List<java.lang.String> strList6 = okHttpClient0.getTransports();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache7 = okHttpClient0.okResponseCache();
        java.net.ResponseCache responseCache8 = okHttpClient0.responseCache;
        java.net.ProxySelector proxySelector9 = null;
        okHttpClient0.proxySelector = proxySelector9;
        java.net.ResponseCache responseCache11 = okHttpClient0.responseCache;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool13 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient12.connectionPool = connectionPool13;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier16 = null;
        okHttpClient15.hostnameVerifier = hostnameVerifier16;
        java.net.ResponseCache responseCache18 = null;
        okHttpClient15.responseCache = responseCache18;
        java.util.List<java.lang.String> strList20 = okHttpClient15.transports;
        com.squareup.okhttp.ConnectionPool connectionPool21 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient15.connectionPool = connectionPool21;
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient12.setConnectionPool(connectionPool21);
        java.net.Proxy proxy24 = okHttpClient23.proxy;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory25 = null;
        okHttpClient23.sslSocketFactory = sSLSocketFactory25;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier28 = null;
        okHttpClient27.hostnameVerifier = hostnameVerifier28;
        java.net.ResponseCache responseCache30 = null;
        okHttpClient27.responseCache = responseCache30;
        java.util.List<java.lang.String> strList32 = okHttpClient27.transports;
        com.squareup.okhttp.ConnectionPool connectionPool33 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient27.connectionPool = connectionPool33;
        com.squareup.okhttp.ConnectionPool connectionPool35 = okHttpClient27.connectionPool;
        int int36 = connectionPool35.getHttpConnectionCount();
        com.squareup.okhttp.Address address37 = null;
        com.squareup.okhttp.Connection connection38 = connectionPool35.get(address37);
        okHttpClient23.connectionPool = connectionPool35;
        java.net.ProxySelector proxySelector40 = okHttpClient23.proxySelector;
        java.net.Proxy proxy41 = java.net.Proxy.NO_PROXY;
        boolean boolean43 = proxy41.equals((java.lang.Object) 1L);
        com.squareup.okhttp.OkHttpClient okHttpClient44 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache45 = okHttpClient44.okResponseCache();
        java.net.ResponseCache responseCache46 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient47 = okHttpClient44.setResponseCache(responseCache46);
        java.lang.String[] strArray49 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList50 = new java.util.ArrayList<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        okHttpClient44.transports = strList50;
        boolean boolean53 = proxy41.equals((java.lang.Object) strList50);
        okHttpClient23.proxy = proxy41;
        java.lang.String str55 = proxy41.toString();
        java.lang.String str56 = proxy41.toString();
        com.squareup.okhttp.OkHttpClient okHttpClient57 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier58 = null;
        okHttpClient57.hostnameVerifier = hostnameVerifier58;
        java.net.ResponseCache responseCache60 = null;
        okHttpClient57.responseCache = responseCache60;
        javax.net.ssl.HostnameVerifier hostnameVerifier62 = okHttpClient57.hostnameVerifier;
        java.net.Proxy proxy63 = okHttpClient57.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool66 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient57.connectionPool = connectionPool66;
        com.squareup.okhttp.OkHttpClient okHttpClient68 = okHttpClient57.copyWithDefaults();
        java.net.ResponseCache responseCache69 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient70 = okHttpClient68.setResponseCache(responseCache69);
        java.net.ProxySelector proxySelector71 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient72 = okHttpClient68.setProxySelector(proxySelector71);
        com.squareup.okhttp.OkAuthenticator okAuthenticator73 = okHttpClient72.getAuthenticator();
        com.squareup.okhttp.OkAuthenticator okAuthenticator74 = okHttpClient72.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient75 = okHttpClient72.copyWithDefaults();
        boolean boolean76 = proxy41.equals((java.lang.Object) okHttpClient75);
        com.squareup.okhttp.OkHttpClient okHttpClient77 = okHttpClient0.setProxy(proxy41);
        javax.net.ssl.HostnameVerifier hostnameVerifier78 = okHttpClient77.getHostnameVerifier();
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(okResponseCache7);
        org.junit.Assert.assertNull(responseCache8);
        org.junit.Assert.assertNull(responseCache11);
        org.junit.Assert.assertNotNull(connectionPool13);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(connectionPool21);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertNull(proxy24);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNotNull(connectionPool33);
        org.junit.Assert.assertNotNull(connectionPool35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNull(connection38);
        org.junit.Assert.assertNull(proxySelector40);
        org.junit.Assert.assertNotNull(proxy41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(okResponseCache45);
        org.junit.Assert.assertNotNull(okHttpClient47);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "DIRECT" + "'", str55, "DIRECT");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "DIRECT" + "'", str56, "DIRECT");
        org.junit.Assert.assertNull(hostnameVerifier62);
        org.junit.Assert.assertNull(proxy63);
        org.junit.Assert.assertNotNull(okHttpClient68);
        org.junit.Assert.assertNotNull(okHttpClient70);
        org.junit.Assert.assertNotNull(okHttpClient72);
        org.junit.Assert.assertNotNull(okAuthenticator73);
        org.junit.Assert.assertNotNull(okAuthenticator74);
        org.junit.Assert.assertNotNull(okHttpClient75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(okHttpClient77);
        org.junit.Assert.assertNull(hostnameVerifier78);
    }

    @Test
    public void test07253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07253");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        com.squareup.okhttp.ConnectionPool connectionPool8 = okHttpClient0.connectionPool;
        boolean boolean9 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient10 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier11 = null;
        okHttpClient10.hostnameVerifier = hostnameVerifier11;
        java.net.ResponseCache responseCache13 = null;
        okHttpClient10.responseCache = responseCache13;
        javax.net.ssl.HostnameVerifier hostnameVerifier15 = okHttpClient10.hostnameVerifier;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory16 = okHttpClient10.sslSocketFactory;
        java.net.CookieHandler cookieHandler17 = okHttpClient10.cookieHandler;
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = okHttpClient10.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool20 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient19.connectionPool = connectionPool20;
        com.squareup.okhttp.OkAuthenticator okAuthenticator22 = null;
        okHttpClient19.authenticator = okAuthenticator22;
        java.util.List<java.lang.String> strList24 = okHttpClient19.transports;
        java.net.ResponseCache responseCache25 = null;
        okHttpClient19.responseCache = responseCache25;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier28 = null;
        okHttpClient27.hostnameVerifier = hostnameVerifier28;
        java.net.ResponseCache responseCache30 = null;
        okHttpClient27.responseCache = responseCache30;
        javax.net.ssl.HostnameVerifier hostnameVerifier32 = okHttpClient27.hostnameVerifier;
        java.net.Proxy proxy33 = okHttpClient27.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool36 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient27.connectionPool = connectionPool36;
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient27.copyWithDefaults();
        java.net.Proxy proxy39 = okHttpClient38.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier40 = okHttpClient38.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient41 = okHttpClient19.setHostnameVerifier(hostnameVerifier40);
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient10.setHostnameVerifier(hostnameVerifier40);
        com.squareup.okhttp.OkHttpClient okHttpClient43 = okHttpClient0.setHostnameVerifier(hostnameVerifier40);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory44 = okHttpClient43.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient46 = okHttpClient43.setFollowProtocolRedirects(true);
        java.net.ProxySelector proxySelector47 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient48 = okHttpClient43.setProxySelector(proxySelector47);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNotNull(connectionPool8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(hostnameVerifier15);
        org.junit.Assert.assertNull(sSLSocketFactory16);
        org.junit.Assert.assertNull(cookieHandler17);
        org.junit.Assert.assertNull(hostnameVerifier18);
        org.junit.Assert.assertNotNull(connectionPool20);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNull(hostnameVerifier32);
        org.junit.Assert.assertNull(proxy33);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNull(proxy39);
        org.junit.Assert.assertNotNull(hostnameVerifier40);
        org.junit.Assert.assertNotNull(okHttpClient41);
        org.junit.Assert.assertNotNull(okHttpClient42);
        org.junit.Assert.assertNotNull(okHttpClient43);
        org.junit.Assert.assertNull(sSLSocketFactory44);
        org.junit.Assert.assertNotNull(okHttpClient46);
        org.junit.Assert.assertNotNull(okHttpClient48);
    }

    @Test
    public void test07254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07254");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        java.net.Proxy proxy12 = okHttpClient11.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool14 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient13.connectionPool = connectionPool14;
        int int16 = connectionPool14.getSpdyConnectionCount();
        okHttpClient11.connectionPool = connectionPool14;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient11.copyWithDefaults();
        java.net.CookieHandler cookieHandler19 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient11.setCookieHandler(cookieHandler19);
        java.util.Set<com.squareup.okhttp.Route> routeSet21 = okHttpClient20.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier23 = null;
        okHttpClient22.hostnameVerifier = hostnameVerifier23;
        java.net.ResponseCache responseCache25 = null;
        okHttpClient22.responseCache = responseCache25;
        javax.net.ssl.HostnameVerifier hostnameVerifier27 = okHttpClient22.hostnameVerifier;
        java.net.Proxy proxy28 = okHttpClient22.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool31 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient22.connectionPool = connectionPool31;
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient22.copyWithDefaults();
        java.net.ResponseCache responseCache34 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient33.setResponseCache(responseCache34);
        java.net.ProxySelector proxySelector36 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient33.setProxySelector(proxySelector36);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory38 = okHttpClient37.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient20.setSSLSocketFactory(sSLSocketFactory38);
        com.squareup.okhttp.OkHttpClient okHttpClient40 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier41 = null;
        okHttpClient40.hostnameVerifier = hostnameVerifier41;
        java.net.ResponseCache responseCache43 = null;
        okHttpClient40.responseCache = responseCache43;
        java.util.List<java.lang.String> strList45 = okHttpClient40.transports;
        com.squareup.okhttp.ConnectionPool connectionPool46 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient40.connectionPool = connectionPool46;
        java.net.CookieHandler cookieHandler48 = okHttpClient40.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache49 = okHttpClient40.okResponseCache();
        java.net.CookieHandler cookieHandler50 = okHttpClient40.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient51 = new com.squareup.okhttp.OkHttpClient(okHttpClient40);
        java.net.Proxy proxy52 = java.net.Proxy.NO_PROXY;
        boolean boolean54 = proxy52.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type55 = proxy52.type();
        java.net.SocketAddress socketAddress56 = proxy52.address();
        com.squareup.okhttp.OkHttpClient okHttpClient57 = okHttpClient40.setProxy(proxy52);
        boolean boolean58 = okHttpClient57.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient60 = okHttpClient57.setFollowProtocolRedirects(false);
        com.squareup.okhttp.OkHttpClient okHttpClient61 = okHttpClient60.copyWithDefaults();
        com.squareup.okhttp.OkAuthenticator okAuthenticator62 = okHttpClient61.getAuthenticator();
        com.squareup.okhttp.OkHttpClient okHttpClient63 = okHttpClient39.setAuthenticator(okAuthenticator62);
        java.net.URL uRL64 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.HttpURLConnection httpURLConnection65 = okHttpClient39.open(uRL64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(proxy12);
        org.junit.Assert.assertNotNull(connectionPool14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNotNull(routeSet21);
        org.junit.Assert.assertNull(hostnameVerifier27);
        org.junit.Assert.assertNull(proxy28);
        org.junit.Assert.assertNotNull(okHttpClient33);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNotNull(okHttpClient37);
        org.junit.Assert.assertNotNull(sSLSocketFactory38);
        org.junit.Assert.assertNotNull(okHttpClient39);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNotNull(connectionPool46);
        org.junit.Assert.assertNull(cookieHandler48);
        org.junit.Assert.assertNull(okResponseCache49);
        org.junit.Assert.assertNull(cookieHandler50);
        org.junit.Assert.assertNotNull(proxy52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + type55 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type55.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress56);
        org.junit.Assert.assertNotNull(okHttpClient57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(okHttpClient60);
        org.junit.Assert.assertNotNull(okHttpClient61);
        org.junit.Assert.assertNotNull(okAuthenticator62);
        org.junit.Assert.assertNotNull(okHttpClient63);
    }

    @Test
    public void test07255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07255");
        com.squareup.okhttp.ConnectionPool connectionPool2 = new com.squareup.okhttp.ConnectionPool((int) (byte) 10, (long) ' ');
        int int3 = connectionPool2.getConnectionCount();
        int int4 = connectionPool2.getHttpConnectionCount();
        connectionPool2.evictAll();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    }

    @Test
    public void test07256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07256");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient0.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.copyWithDefaults();
        java.net.ResponseCache responseCache12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setResponseCache(responseCache12);
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient13.setFollowProtocolRedirects(false);
        java.util.List<java.lang.String> strList16 = okHttpClient13.transports;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient13.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier19 = null;
        okHttpClient18.hostnameVerifier = hostnameVerifier19;
        java.net.ResponseCache responseCache21 = null;
        okHttpClient18.responseCache = responseCache21;
        javax.net.ssl.HostnameVerifier hostnameVerifier23 = okHttpClient18.hostnameVerifier;
        java.net.Proxy proxy24 = okHttpClient18.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool27 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient18.connectionPool = connectionPool27;
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient18.copyWithDefaults();
        java.net.ResponseCache responseCache30 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient29.setResponseCache(responseCache30);
        com.squareup.okhttp.OkHttpClient okHttpClient32 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool33 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient32.connectionPool = connectionPool33;
        java.net.ResponseCache responseCache35 = null;
        okHttpClient32.responseCache = responseCache35;
        java.net.Proxy proxy37 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress38 = proxy37.address();
        java.net.SocketAddress socketAddress39 = proxy37.address();
        okHttpClient32.proxy = proxy37;
        com.squareup.okhttp.ConnectionPool connectionPool43 = new com.squareup.okhttp.ConnectionPool((-1), (long) '#');
        com.squareup.okhttp.Address address44 = null;
        com.squareup.okhttp.Connection connection45 = connectionPool43.get(address44);
        int int46 = connectionPool43.getSpdyConnectionCount();
        connectionPool43.evictAll();
        com.squareup.okhttp.OkHttpClient okHttpClient48 = okHttpClient32.setConnectionPool(connectionPool43);
        com.squareup.okhttp.OkHttpClient okHttpClient49 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier50 = null;
        okHttpClient49.hostnameVerifier = hostnameVerifier50;
        java.net.ProxySelector proxySelector52 = okHttpClient49.proxySelector;
        java.net.ProxySelector proxySelector53 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient54 = okHttpClient49.setProxySelector(proxySelector53);
        com.squareup.okhttp.OkHttpClient okHttpClient55 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier56 = null;
        okHttpClient55.hostnameVerifier = hostnameVerifier56;
        java.net.ResponseCache responseCache58 = null;
        okHttpClient55.responseCache = responseCache58;
        java.util.List<java.lang.String> strList60 = okHttpClient55.transports;
        com.squareup.okhttp.ConnectionPool connectionPool61 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient55.connectionPool = connectionPool61;
        com.squareup.okhttp.OkHttpClient okHttpClient63 = okHttpClient55.copyWithDefaults();
        java.net.ProxySelector proxySelector64 = okHttpClient63.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory65 = okHttpClient63.getSslSocketFactory();
        okHttpClient49.sslSocketFactory = sSLSocketFactory65;
        okHttpClient32.sslSocketFactory = sSLSocketFactory65;
        com.squareup.okhttp.OkHttpClient okHttpClient68 = okHttpClient31.setSSLSocketFactory(sSLSocketFactory65);
        java.net.Socket socket69 = sSLSocketFactory65.createSocket();
        com.squareup.okhttp.OkHttpClient okHttpClient70 = okHttpClient13.setSSLSocketFactory(sSLSocketFactory65);
        com.squareup.okhttp.OkHttpClient okHttpClient71 = okHttpClient70.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool74 = new com.squareup.okhttp.ConnectionPool((int) (byte) 10, (long) (byte) 0);
        int int75 = connectionPool74.getConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient76 = okHttpClient70.setConnectionPool(connectionPool74);
        java.net.ResponseCache responseCache77 = okHttpClient76.getResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient78 = okHttpClient76.copyWithDefaults();
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNull(hostnameVerifier23);
        org.junit.Assert.assertNull(proxy24);
        org.junit.Assert.assertNotNull(okHttpClient29);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNotNull(connectionPool33);
        org.junit.Assert.assertNotNull(proxy37);
        org.junit.Assert.assertNull(socketAddress38);
        org.junit.Assert.assertNull(socketAddress39);
        org.junit.Assert.assertNull(connection45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(okHttpClient48);
        org.junit.Assert.assertNull(proxySelector52);
        org.junit.Assert.assertNotNull(okHttpClient54);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNotNull(connectionPool61);
        org.junit.Assert.assertNotNull(okHttpClient63);
// flaky:         org.junit.Assert.assertNull(proxySelector64);
        org.junit.Assert.assertNotNull(sSLSocketFactory65);
        org.junit.Assert.assertNotNull(okHttpClient68);
        org.junit.Assert.assertNotNull(socket69);
        org.junit.Assert.assertEquals(socket69.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(okHttpClient70);
        org.junit.Assert.assertNotNull(okHttpClient71);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertNotNull(okHttpClient76);
        org.junit.Assert.assertNull(responseCache77);
        org.junit.Assert.assertNotNull(okHttpClient78);
    }

    @Test
    public void test07257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07257");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.Proxy proxy8 = null;
        okHttpClient0.proxy = proxy8;
        boolean boolean10 = okHttpClient0.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = null;
        okHttpClient11.hostnameVerifier = hostnameVerifier12;
        java.net.ResponseCache responseCache14 = null;
        okHttpClient11.responseCache = responseCache14;
        java.util.List<java.lang.String> strList16 = okHttpClient11.transports;
        com.squareup.okhttp.ConnectionPool connectionPool17 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient11.connectionPool = connectionPool17;
        java.net.Proxy proxy19 = null;
        okHttpClient11.proxy = proxy19;
        boolean boolean21 = okHttpClient11.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient(okHttpClient11);
        java.net.ProxySelector proxySelector23 = okHttpClient22.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier24 = okHttpClient22.hostnameVerifier;
        javax.net.ssl.HostnameVerifier hostnameVerifier25 = okHttpClient22.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient26 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool27 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient26.connectionPool = connectionPool27;
        com.squareup.okhttp.OkAuthenticator okAuthenticator29 = null;
        okHttpClient26.authenticator = okAuthenticator29;
        java.net.CookieHandler cookieHandler31 = null;
        okHttpClient26.cookieHandler = cookieHandler31;
        java.net.Proxy proxy33 = java.net.Proxy.NO_PROXY;
        boolean boolean35 = proxy33.equals((java.lang.Object) 1L);
        com.squareup.okhttp.OkHttpClient okHttpClient36 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache37 = okHttpClient36.okResponseCache();
        java.net.ResponseCache responseCache38 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient36.setResponseCache(responseCache38);
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList42 = new java.util.ArrayList<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        okHttpClient36.transports = strList42;
        boolean boolean45 = proxy33.equals((java.lang.Object) strList42);
        com.squareup.okhttp.OkHttpClient okHttpClient46 = okHttpClient26.setProxy(proxy33);
        com.squareup.okhttp.OkHttpClient okHttpClient47 = okHttpClient22.setProxy(proxy33);
        java.lang.String str48 = proxy33.toString();
        java.net.Proxy.Type type49 = proxy33.type();
        java.net.SocketAddress socketAddress50 = proxy33.address();
        com.squareup.okhttp.OkHttpClient okHttpClient51 = okHttpClient0.setProxy(proxy33);
        java.net.ProxySelector proxySelector52 = null;
        okHttpClient0.proxySelector = proxySelector52;
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNotNull(connectionPool17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(proxySelector23);
        org.junit.Assert.assertNull(hostnameVerifier24);
        org.junit.Assert.assertNull(hostnameVerifier25);
        org.junit.Assert.assertNotNull(connectionPool27);
        org.junit.Assert.assertNotNull(proxy33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(okResponseCache37);
        org.junit.Assert.assertNotNull(okHttpClient39);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(okHttpClient46);
        org.junit.Assert.assertNotNull(okHttpClient47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "DIRECT" + "'", str48, "DIRECT");
        org.junit.Assert.assertTrue("'" + type49 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type49.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress50);
        org.junit.Assert.assertNotNull(okHttpClient51);
    }

    @Test
    public void test07258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07258");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory6 = okHttpClient0.sslSocketFactory;
        java.net.CookieHandler cookieHandler7 = okHttpClient0.cookieHandler;
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = okHttpClient0.getHostnameVerifier();
        javax.net.ssl.HostnameVerifier hostnameVerifier9 = okHttpClient0.hostnameVerifier;
        java.util.List<java.lang.String> strList10 = okHttpClient0.getTransports();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        com.squareup.okhttp.OkHttpClient okHttpClient12 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier13 = null;
        okHttpClient12.hostnameVerifier = hostnameVerifier13;
        java.net.ResponseCache responseCache15 = null;
        okHttpClient12.responseCache = responseCache15;
        java.util.List<java.lang.String> strList17 = okHttpClient12.transports;
        com.squareup.okhttp.ConnectionPool connectionPool18 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient12.connectionPool = connectionPool18;
        java.net.CookieHandler cookieHandler20 = okHttpClient12.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache21 = okHttpClient12.okResponseCache();
        java.net.CookieHandler cookieHandler22 = okHttpClient12.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient23 = new com.squareup.okhttp.OkHttpClient(okHttpClient12);
        java.net.Proxy proxy24 = java.net.Proxy.NO_PROXY;
        boolean boolean26 = proxy24.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type27 = proxy24.type();
        java.net.SocketAddress socketAddress28 = proxy24.address();
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient12.setProxy(proxy24);
        java.lang.String[] strArray31 = new java.lang.String[] { "DIRECT" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        okHttpClient12.transports = strList32;
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient12.setFollowProtocolRedirects(false);
        com.squareup.okhttp.ConnectionPool connectionPool39 = new com.squareup.okhttp.ConnectionPool((int) '#', (long) (short) 100);
        com.squareup.okhttp.OkHttpClient okHttpClient40 = okHttpClient36.setConnectionPool(connectionPool39);
        java.net.CookieHandler cookieHandler41 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient40.setCookieHandler(cookieHandler41);
        java.net.ResponseCache responseCache43 = okHttpClient42.responseCache;
        java.net.Proxy proxy44 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress45 = proxy44.address();
        com.squareup.okhttp.OkHttpClient okHttpClient46 = okHttpClient42.setProxy(proxy44);
        java.util.List<java.lang.String> strList47 = okHttpClient46.transports;
        // The following exception was thrown during execution in test generation
        try {
            com.squareup.okhttp.OkHttpClient okHttpClient48 = okHttpClient0.setTransports(strList47);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: transports doesn't contain http/1.1: [DIRECT]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(sSLSocketFactory6);
        org.junit.Assert.assertNull(cookieHandler7);
        org.junit.Assert.assertNull(hostnameVerifier8);
        org.junit.Assert.assertNull(hostnameVerifier9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNotNull(connectionPool18);
        org.junit.Assert.assertNull(cookieHandler20);
        org.junit.Assert.assertNull(okResponseCache21);
        org.junit.Assert.assertNull(cookieHandler22);
        org.junit.Assert.assertNotNull(proxy24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + type27 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type27.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress28);
        org.junit.Assert.assertNotNull(okHttpClient29);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNotNull(okHttpClient40);
        org.junit.Assert.assertNotNull(okHttpClient42);
        org.junit.Assert.assertNull(responseCache43);
        org.junit.Assert.assertNotNull(proxy44);
        org.junit.Assert.assertNull(socketAddress45);
        org.junit.Assert.assertNotNull(okHttpClient46);
        org.junit.Assert.assertNotNull(strList47);
    }

    @Test
    public void test07259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07259");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory6 = okHttpClient0.sslSocketFactory;
        java.net.CookieHandler cookieHandler7 = okHttpClient0.cookieHandler;
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = okHttpClient0.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool10 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient9.connectionPool = connectionPool10;
        com.squareup.okhttp.OkAuthenticator okAuthenticator12 = null;
        okHttpClient9.authenticator = okAuthenticator12;
        java.util.List<java.lang.String> strList14 = okHttpClient9.transports;
        java.net.ResponseCache responseCache15 = null;
        okHttpClient9.responseCache = responseCache15;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = null;
        okHttpClient17.hostnameVerifier = hostnameVerifier18;
        java.net.ResponseCache responseCache20 = null;
        okHttpClient17.responseCache = responseCache20;
        javax.net.ssl.HostnameVerifier hostnameVerifier22 = okHttpClient17.hostnameVerifier;
        java.net.Proxy proxy23 = okHttpClient17.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool26 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient17.connectionPool = connectionPool26;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient17.copyWithDefaults();
        java.net.Proxy proxy29 = okHttpClient28.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = okHttpClient28.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient9.setHostnameVerifier(hostnameVerifier30);
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient0.setHostnameVerifier(hostnameVerifier30);
        java.net.ProxySelector proxySelector33 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient32.setProxySelector(proxySelector33);
        javax.net.ssl.HostnameVerifier hostnameVerifier35 = okHttpClient32.getHostnameVerifier();
        java.net.ResponseCache responseCache36 = okHttpClient32.getResponseCache();
        okHttpClient32.followProtocolRedirects = false;
        com.squareup.okhttp.OkAuthenticator okAuthenticator39 = okHttpClient32.getAuthenticator();
        com.squareup.okhttp.OkHttpClient okHttpClient41 = okHttpClient32.setFollowProtocolRedirects(false);
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(sSLSocketFactory6);
        org.junit.Assert.assertNull(cookieHandler7);
        org.junit.Assert.assertNull(hostnameVerifier8);
        org.junit.Assert.assertNotNull(connectionPool10);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(hostnameVerifier22);
        org.junit.Assert.assertNull(proxy23);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNull(proxy29);
        org.junit.Assert.assertNotNull(hostnameVerifier30);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertNotNull(hostnameVerifier35);
        org.junit.Assert.assertNull(responseCache36);
        org.junit.Assert.assertNull(okAuthenticator39);
        org.junit.Assert.assertNotNull(okHttpClient41);
    }

    @Test
    public void test07260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07260");
        com.squareup.okhttp.ConnectionPool connectionPool2 = new com.squareup.okhttp.ConnectionPool(10, (long) (byte) -1);
        int int3 = connectionPool2.getSpdyConnectionCount();
        com.squareup.okhttp.Connection connection4 = null;
        // The following exception was thrown during execution in test generation
        try {
            connectionPool2.recycle(connection4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test07261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07261");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient0.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient11.copyWithDefaults();
        java.net.CookieHandler cookieHandler13 = okHttpClient11.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient14 = new com.squareup.okhttp.OkHttpClient(okHttpClient11);
        java.net.Proxy proxy15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient11.setProxy(proxy15);
        java.net.CookieHandler cookieHandler17 = null;
        okHttpClient16.cookieHandler = cookieHandler17;
        java.net.ResponseCache responseCache19 = okHttpClient16.getResponseCache();
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertNull(cookieHandler13);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNull(responseCache19);
    }

    @Test
    public void test07262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07262");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient0.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.copyWithDefaults();
        java.net.ResponseCache responseCache12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setResponseCache(responseCache12);
        okHttpClient13.followProtocolRedirects = true;
        java.net.CookieHandler cookieHandler16 = okHttpClient13.cookieHandler;
        java.net.CookieHandler cookieHandler17 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient13.setCookieHandler(cookieHandler17);
        com.squareup.okhttp.OkHttpClient okHttpClient19 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool20 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient19.connectionPool = connectionPool20;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier23 = null;
        okHttpClient22.hostnameVerifier = hostnameVerifier23;
        java.net.ResponseCache responseCache25 = null;
        okHttpClient22.responseCache = responseCache25;
        java.util.List<java.lang.String> strList27 = okHttpClient22.transports;
        com.squareup.okhttp.ConnectionPool connectionPool28 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient22.connectionPool = connectionPool28;
        com.squareup.okhttp.OkHttpClient okHttpClient30 = okHttpClient19.setConnectionPool(connectionPool28);
        com.squareup.okhttp.ConnectionPool connectionPool31 = okHttpClient30.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator32 = okHttpClient30.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool35 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient30.connectionPool = connectionPool35;
        java.net.ResponseCache responseCache37 = okHttpClient30.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory38 = okHttpClient30.sslSocketFactory;
        java.net.Proxy proxy39 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress40 = proxy39.address();
        com.squareup.okhttp.OkHttpClient okHttpClient41 = okHttpClient30.setProxy(proxy39);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory42 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient43 = okHttpClient30.setSSLSocketFactory(sSLSocketFactory42);
        com.squareup.okhttp.OkHttpClient okHttpClient44 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier45 = null;
        okHttpClient44.hostnameVerifier = hostnameVerifier45;
        java.net.ResponseCache responseCache47 = null;
        okHttpClient44.responseCache = responseCache47;
        javax.net.ssl.HostnameVerifier hostnameVerifier49 = okHttpClient44.hostnameVerifier;
        java.net.Proxy proxy50 = okHttpClient44.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool53 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient44.connectionPool = connectionPool53;
        com.squareup.okhttp.OkHttpClient okHttpClient55 = okHttpClient44.copyWithDefaults();
        java.net.ResponseCache responseCache56 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient57 = okHttpClient55.setResponseCache(responseCache56);
        com.squareup.okhttp.OkAuthenticator okAuthenticator58 = okHttpClient55.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient59 = okHttpClient30.setAuthenticator(okAuthenticator58);
        java.net.ProxySelector proxySelector60 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient61 = okHttpClient59.setProxySelector(proxySelector60);
        com.squareup.okhttp.OkHttpClient okHttpClient62 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier63 = null;
        okHttpClient62.hostnameVerifier = hostnameVerifier63;
        java.net.ProxySelector proxySelector65 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient66 = okHttpClient62.setProxySelector(proxySelector65);
        java.net.ResponseCache responseCache67 = null;
        okHttpClient66.responseCache = responseCache67;
        javax.net.ssl.HostnameVerifier hostnameVerifier69 = okHttpClient66.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient71 = okHttpClient66.setFollowProtocolRedirects(false);
        java.net.ProxySelector proxySelector72 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient73 = okHttpClient71.setProxySelector(proxySelector72);
        java.net.ProxySelector proxySelector74 = okHttpClient73.proxySelector;
        com.squareup.okhttp.OkHttpClient okHttpClient75 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier76 = null;
        okHttpClient75.hostnameVerifier = hostnameVerifier76;
        java.net.ResponseCache responseCache78 = null;
        okHttpClient75.responseCache = responseCache78;
        javax.net.ssl.HostnameVerifier hostnameVerifier80 = okHttpClient75.hostnameVerifier;
        java.net.Proxy proxy81 = okHttpClient75.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool84 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient75.connectionPool = connectionPool84;
        com.squareup.okhttp.OkHttpClient okHttpClient86 = okHttpClient75.copyWithDefaults();
        java.net.ResponseCache responseCache87 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient88 = okHttpClient86.setResponseCache(responseCache87);
        java.net.ProxySelector proxySelector89 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient90 = okHttpClient86.setProxySelector(proxySelector89);
        com.squareup.okhttp.OkAuthenticator okAuthenticator91 = okHttpClient90.getAuthenticator();
        okHttpClient73.authenticator = okAuthenticator91;
        okHttpClient61.authenticator = okAuthenticator91;
        okHttpClient18.authenticator = okAuthenticator91;
        javax.net.ssl.HostnameVerifier hostnameVerifier95 = okHttpClient18.getHostnameVerifier();
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNull(cookieHandler16);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNotNull(connectionPool20);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNotNull(connectionPool28);
        org.junit.Assert.assertNotNull(okHttpClient30);
        org.junit.Assert.assertNotNull(connectionPool31);
        org.junit.Assert.assertNull(okAuthenticator32);
        org.junit.Assert.assertNull(responseCache37);
        org.junit.Assert.assertNull(sSLSocketFactory38);
        org.junit.Assert.assertNotNull(proxy39);
        org.junit.Assert.assertNull(socketAddress40);
        org.junit.Assert.assertNotNull(okHttpClient41);
        org.junit.Assert.assertNotNull(okHttpClient43);
        org.junit.Assert.assertNull(hostnameVerifier49);
        org.junit.Assert.assertNull(proxy50);
        org.junit.Assert.assertNotNull(okHttpClient55);
        org.junit.Assert.assertNotNull(okHttpClient57);
        org.junit.Assert.assertNotNull(okAuthenticator58);
        org.junit.Assert.assertNotNull(okHttpClient59);
        org.junit.Assert.assertNotNull(okHttpClient61);
        org.junit.Assert.assertNotNull(okHttpClient66);
        org.junit.Assert.assertNull(hostnameVerifier69);
        org.junit.Assert.assertNotNull(okHttpClient71);
        org.junit.Assert.assertNotNull(okHttpClient73);
        org.junit.Assert.assertNull(proxySelector74);
        org.junit.Assert.assertNull(hostnameVerifier80);
        org.junit.Assert.assertNull(proxy81);
        org.junit.Assert.assertNotNull(okHttpClient86);
        org.junit.Assert.assertNotNull(okHttpClient88);
        org.junit.Assert.assertNotNull(okHttpClient90);
        org.junit.Assert.assertNotNull(okAuthenticator91);
        org.junit.Assert.assertNotNull(hostnameVerifier95);
    }

    @Test
    public void test07263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07263");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache1 = okHttpClient0.okResponseCache();
        java.net.ResponseCache responseCache2 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.setResponseCache(responseCache2);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        okHttpClient0.transports = strList6;
        java.net.CookieHandler cookieHandler9 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient10.setFollowProtocolRedirects(false);
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = null;
        okHttpClient13.hostnameVerifier = hostnameVerifier14;
        java.net.ResponseCache responseCache16 = null;
        okHttpClient13.responseCache = responseCache16;
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = okHttpClient13.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient13.setFollowProtocolRedirects(false);
        java.util.List<java.lang.String> strList21 = okHttpClient20.transports;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient(okHttpClient20);
        com.squareup.okhttp.OkHttpClient okHttpClient23 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier24 = null;
        okHttpClient23.hostnameVerifier = hostnameVerifier24;
        java.net.ProxySelector proxySelector26 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient23.setProxySelector(proxySelector26);
        javax.net.ssl.HostnameVerifier hostnameVerifier28 = okHttpClient23.hostnameVerifier;
        java.net.CookieHandler cookieHandler29 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient30 = okHttpClient23.setCookieHandler(cookieHandler29);
        com.squareup.okhttp.OkAuthenticator okAuthenticator31 = okHttpClient30.authenticator;
        java.net.ProxySelector proxySelector32 = okHttpClient30.getProxySelector();
        com.squareup.okhttp.OkHttpClient okHttpClient33 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier34 = null;
        okHttpClient33.hostnameVerifier = hostnameVerifier34;
        java.net.ResponseCache responseCache36 = null;
        okHttpClient33.responseCache = responseCache36;
        java.util.List<java.lang.String> strList38 = okHttpClient33.transports;
        com.squareup.okhttp.ConnectionPool connectionPool39 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient33.connectionPool = connectionPool39;
        com.squareup.okhttp.OkHttpClient okHttpClient41 = okHttpClient33.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient42 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier43 = null;
        okHttpClient42.hostnameVerifier = hostnameVerifier43;
        java.net.ResponseCache responseCache45 = null;
        okHttpClient42.responseCache = responseCache45;
        java.util.List<java.lang.String> strList47 = okHttpClient42.transports;
        com.squareup.okhttp.ConnectionPool connectionPool48 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient42.connectionPool = connectionPool48;
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient42.copyWithDefaults();
        java.net.ProxySelector proxySelector51 = okHttpClient50.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory52 = okHttpClient50.getSslSocketFactory();
        okHttpClient33.sslSocketFactory = sSLSocketFactory52;
        java.net.Socket socket54 = sSLSocketFactory52.createSocket();
        java.net.Socket socket55 = sSLSocketFactory52.createSocket();
        okHttpClient30.sslSocketFactory = sSLSocketFactory52;
        com.squareup.okhttp.OkHttpClient okHttpClient57 = okHttpClient22.setSSLSocketFactory(sSLSocketFactory52);
        okHttpClient12.sslSocketFactory = sSLSocketFactory52;
        com.squareup.okhttp.OkHttpClient okHttpClient59 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier60 = null;
        okHttpClient59.hostnameVerifier = hostnameVerifier60;
        java.net.ProxySelector proxySelector62 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient63 = okHttpClient59.setProxySelector(proxySelector62);
        com.squareup.okhttp.OkHttpClient okHttpClient64 = okHttpClient63.copyWithDefaults();
        com.squareup.okhttp.Route[] routeArray65 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet66 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet66, routeArray65);
        okHttpClient64.failedRoutes = routeSet66;
        java.net.CookieHandler cookieHandler69 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient70 = okHttpClient64.setCookieHandler(cookieHandler69);
        java.net.CookieHandler cookieHandler71 = null;
        okHttpClient70.cookieHandler = cookieHandler71;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory73 = okHttpClient70.getSslSocketFactory();
        java.net.Socket socket74 = sSLSocketFactory73.createSocket();
        java.io.InputStream inputStream75 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket77 = sSLSocketFactory52.createSocket(socket74, inputStream75, true);
            org.junit.Assert.fail("Expected exception of type java.net.SocketException; message: Underlying socket is not connected");
        } catch (java.net.SocketException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(okResponseCache1);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(cookieHandler9);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertNull(hostnameVerifier18);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNull(hostnameVerifier28);
        org.junit.Assert.assertNotNull(okHttpClient30);
        org.junit.Assert.assertNull(okAuthenticator31);
        org.junit.Assert.assertNull(proxySelector32);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNotNull(connectionPool39);
        org.junit.Assert.assertNotNull(okHttpClient41);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNotNull(connectionPool48);
        org.junit.Assert.assertNotNull(okHttpClient50);
// flaky:         org.junit.Assert.assertNull(proxySelector51);
        org.junit.Assert.assertNotNull(sSLSocketFactory52);
        org.junit.Assert.assertNotNull(socket54);
        org.junit.Assert.assertEquals(socket54.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(socket55);
        org.junit.Assert.assertEquals(socket55.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(okHttpClient57);
        org.junit.Assert.assertNotNull(okHttpClient63);
        org.junit.Assert.assertNotNull(okHttpClient64);
        org.junit.Assert.assertNotNull(routeArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(okHttpClient70);
        org.junit.Assert.assertNotNull(sSLSocketFactory73);
        org.junit.Assert.assertNotNull(socket74);
        org.junit.Assert.assertEquals(socket74.toString(), "Socket[unconnected]");
    }

    @Test
    public void test07264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07264");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.ConnectionPool connectionPool12 = okHttpClient11.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator13 = okHttpClient11.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool16 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient11.connectionPool = connectionPool16;
        java.net.ResponseCache responseCache18 = okHttpClient11.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory19 = okHttpClient11.sslSocketFactory;
        java.net.Proxy proxy20 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress21 = proxy20.address();
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient11.setProxy(proxy20);
        com.squareup.okhttp.OkHttpClient okHttpClient23 = new com.squareup.okhttp.OkHttpClient(okHttpClient22);
        com.squareup.okhttp.OkHttpClient okHttpClient24 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier25 = null;
        okHttpClient24.hostnameVerifier = hostnameVerifier25;
        java.net.ResponseCache responseCache27 = null;
        okHttpClient24.responseCache = responseCache27;
        java.util.List<java.lang.String> strList29 = okHttpClient24.transports;
        com.squareup.okhttp.ConnectionPool connectionPool30 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient24.connectionPool = connectionPool30;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient24.copyWithDefaults();
        java.net.ProxySelector proxySelector33 = okHttpClient32.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory34 = okHttpClient32.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient22.setSSLSocketFactory(sSLSocketFactory34);
        com.squareup.okhttp.OkHttpClient okHttpClient36 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool37 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient36.connectionPool = connectionPool37;
        com.squareup.okhttp.OkHttpClient okHttpClient39 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier40 = null;
        okHttpClient39.hostnameVerifier = hostnameVerifier40;
        java.net.ResponseCache responseCache42 = null;
        okHttpClient39.responseCache = responseCache42;
        java.util.List<java.lang.String> strList44 = okHttpClient39.transports;
        com.squareup.okhttp.ConnectionPool connectionPool45 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient39.connectionPool = connectionPool45;
        com.squareup.okhttp.OkHttpClient okHttpClient47 = okHttpClient36.setConnectionPool(connectionPool45);
        java.net.Proxy proxy48 = okHttpClient47.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient49 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool50 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient49.connectionPool = connectionPool50;
        int int52 = connectionPool50.getSpdyConnectionCount();
        okHttpClient47.connectionPool = connectionPool50;
        int int54 = connectionPool50.getSpdyConnectionCount();
        int int55 = connectionPool50.getConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient56 = okHttpClient35.setConnectionPool(connectionPool50);
        java.lang.Class<?> wildcardClass57 = okHttpClient35.getClass();
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNull(okAuthenticator13);
        org.junit.Assert.assertNull(responseCache18);
        org.junit.Assert.assertNull(sSLSocketFactory19);
        org.junit.Assert.assertNotNull(proxy20);
        org.junit.Assert.assertNull(socketAddress21);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(connectionPool30);
        org.junit.Assert.assertNotNull(okHttpClient32);
// flaky:         org.junit.Assert.assertNull(proxySelector33);
        org.junit.Assert.assertNotNull(sSLSocketFactory34);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNotNull(connectionPool37);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNotNull(connectionPool45);
        org.junit.Assert.assertNotNull(okHttpClient47);
        org.junit.Assert.assertNull(proxy48);
        org.junit.Assert.assertNotNull(connectionPool50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(okHttpClient56);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test07265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07265");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.ResponseCache responseCache5 = null;
        okHttpClient4.responseCache = responseCache5;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient4.setSSLSocketFactory(sSLSocketFactory7);
        java.net.ProxySelector proxySelector9 = null;
        okHttpClient4.proxySelector = proxySelector9;
        com.squareup.okhttp.ConnectionPool connectionPool13 = new com.squareup.okhttp.ConnectionPool((int) ' ', (long) (short) 100);
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient4.setConnectionPool(connectionPool13);
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient14.setFollowProtocolRedirects(true);
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = null;
        okHttpClient17.hostnameVerifier = hostnameVerifier18;
        java.net.ResponseCache responseCache20 = null;
        okHttpClient17.responseCache = responseCache20;
        javax.net.ssl.HostnameVerifier hostnameVerifier22 = okHttpClient17.hostnameVerifier;
        java.net.Proxy proxy23 = okHttpClient17.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient24 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache25 = okHttpClient24.okResponseCache();
        java.net.ResponseCache responseCache26 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient24.setResponseCache(responseCache26);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        okHttpClient24.transports = strList30;
        okHttpClient17.transports = strList30;
        javax.net.ssl.HostnameVerifier hostnameVerifier34 = null;
        okHttpClient17.hostnameVerifier = hostnameVerifier34;
        com.squareup.okhttp.OkHttpClient okHttpClient36 = new com.squareup.okhttp.OkHttpClient(okHttpClient17);
        com.squareup.okhttp.OkHttpClient okHttpClient37 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier38 = null;
        okHttpClient37.hostnameVerifier = hostnameVerifier38;
        java.net.ResponseCache responseCache40 = null;
        okHttpClient37.responseCache = responseCache40;
        javax.net.ssl.HostnameVerifier hostnameVerifier42 = okHttpClient37.hostnameVerifier;
        java.net.Proxy proxy43 = okHttpClient37.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool46 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient37.connectionPool = connectionPool46;
        com.squareup.okhttp.OkHttpClient okHttpClient48 = okHttpClient37.copyWithDefaults();
        java.net.ResponseCache responseCache49 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient48.setResponseCache(responseCache49);
        java.net.CookieHandler cookieHandler51 = null;
        okHttpClient50.cookieHandler = cookieHandler51;
        com.squareup.okhttp.OkHttpClient okHttpClient53 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier54 = null;
        okHttpClient53.hostnameVerifier = hostnameVerifier54;
        java.net.ResponseCache responseCache56 = null;
        okHttpClient53.responseCache = responseCache56;
        java.util.List<java.lang.String> strList58 = okHttpClient53.transports;
        com.squareup.okhttp.ConnectionPool connectionPool59 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient53.connectionPool = connectionPool59;
        com.squareup.okhttp.OkHttpClient okHttpClient61 = okHttpClient53.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient62 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier63 = null;
        okHttpClient62.hostnameVerifier = hostnameVerifier63;
        java.net.ResponseCache responseCache65 = null;
        okHttpClient62.responseCache = responseCache65;
        java.util.List<java.lang.String> strList67 = okHttpClient62.transports;
        com.squareup.okhttp.ConnectionPool connectionPool68 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient62.connectionPool = connectionPool68;
        com.squareup.okhttp.OkHttpClient okHttpClient70 = okHttpClient62.copyWithDefaults();
        java.net.ProxySelector proxySelector71 = okHttpClient70.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory72 = okHttpClient70.getSslSocketFactory();
        okHttpClient53.sslSocketFactory = sSLSocketFactory72;
        java.net.Socket socket74 = sSLSocketFactory72.createSocket();
        java.net.Socket socket75 = sSLSocketFactory72.createSocket();
        okHttpClient50.sslSocketFactory = sSLSocketFactory72;
        com.squareup.okhttp.OkHttpClient okHttpClient77 = okHttpClient17.setSSLSocketFactory(sSLSocketFactory72);
        com.squareup.okhttp.OkHttpClient okHttpClient78 = okHttpClient14.setSSLSocketFactory(sSLSocketFactory72);
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket81 = sSLSocketFactory72.createSocket("hi!", (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.net.UnknownHostException; message: hi!");
        } catch (java.net.UnknownHostException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertNotNull(okHttpClient14);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNull(hostnameVerifier22);
        org.junit.Assert.assertNull(proxy23);
        org.junit.Assert.assertNull(okResponseCache25);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(hostnameVerifier42);
        org.junit.Assert.assertNull(proxy43);
        org.junit.Assert.assertNotNull(okHttpClient48);
        org.junit.Assert.assertNotNull(okHttpClient50);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNotNull(connectionPool59);
        org.junit.Assert.assertNotNull(okHttpClient61);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNotNull(connectionPool68);
        org.junit.Assert.assertNotNull(okHttpClient70);
// flaky:         org.junit.Assert.assertNull(proxySelector71);
        org.junit.Assert.assertNotNull(sSLSocketFactory72);
        org.junit.Assert.assertNotNull(socket74);
        org.junit.Assert.assertEquals(socket74.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(socket75);
        org.junit.Assert.assertEquals(socket75.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(okHttpClient77);
        org.junit.Assert.assertNotNull(okHttpClient78);
    }

    @Test
    public void test07266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07266");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient9 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier10 = null;
        okHttpClient9.hostnameVerifier = hostnameVerifier10;
        java.net.ResponseCache responseCache12 = null;
        okHttpClient9.responseCache = responseCache12;
        java.util.List<java.lang.String> strList14 = okHttpClient9.transports;
        com.squareup.okhttp.ConnectionPool connectionPool15 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient9.connectionPool = connectionPool15;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient9.copyWithDefaults();
        java.net.ProxySelector proxySelector18 = okHttpClient17.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory19 = okHttpClient17.getSslSocketFactory();
        okHttpClient0.sslSocketFactory = sSLSocketFactory19;
        java.net.Socket socket21 = sSLSocketFactory19.createSocket();
        java.net.Socket socket22 = sSLSocketFactory19.createSocket();
        java.lang.String[] strArray23 = sSLSocketFactory19.getSupportedCipherSuites();
        java.net.Socket socket24 = sSLSocketFactory19.createSocket();
        java.lang.String[] strArray25 = sSLSocketFactory19.getSupportedCipherSuites();
        java.net.Socket socket26 = sSLSocketFactory19.createSocket();
        java.lang.String[] strArray27 = sSLSocketFactory19.getDefaultCipherSuites();
        java.lang.String[] strArray28 = sSLSocketFactory19.getDefaultCipherSuites();
        java.net.Socket socket29 = sSLSocketFactory19.createSocket();
        java.net.Socket socket30 = sSLSocketFactory19.createSocket();
        java.net.InetAddress inetAddress31 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket33 = sSLSocketFactory19.createSocket(inetAddress31, 100);
            org.junit.Assert.fail("Expected exception of type java.net.ConnectException; message: Connection refused (Connection refused)");
        } catch (java.net.ConnectException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNotNull(connectionPool15);
        org.junit.Assert.assertNotNull(okHttpClient17);
// flaky:         org.junit.Assert.assertNull(proxySelector18);
        org.junit.Assert.assertNotNull(sSLSocketFactory19);
        org.junit.Assert.assertNotNull(socket21);
        org.junit.Assert.assertEquals(socket21.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(socket22);
        org.junit.Assert.assertEquals(socket22.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(socket24);
        org.junit.Assert.assertEquals(socket24.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(socket26);
        org.junit.Assert.assertEquals(socket26.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(socket29);
        org.junit.Assert.assertEquals(socket29.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(socket30);
        org.junit.Assert.assertEquals(socket30.toString(), "Socket[unconnected]");
    }

    @Test
    public void test07267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07267");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache8 = okHttpClient7.okResponseCache();
        java.net.ResponseCache responseCache9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient7.setResponseCache(responseCache9);
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        okHttpClient7.transports = strList13;
        okHttpClient0.transports = strList13;
        java.util.Set<com.squareup.okhttp.Route> routeSet17 = okHttpClient0.failedRoutes;
        java.net.CookieHandler cookieHandler18 = null;
        okHttpClient0.cookieHandler = cookieHandler18;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        com.squareup.okhttp.OkHttpClient okHttpClient21 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool22 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient21.connectionPool = connectionPool22;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier25 = null;
        okHttpClient24.hostnameVerifier = hostnameVerifier25;
        java.net.ResponseCache responseCache27 = null;
        okHttpClient24.responseCache = responseCache27;
        java.util.List<java.lang.String> strList29 = okHttpClient24.transports;
        com.squareup.okhttp.ConnectionPool connectionPool30 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient24.connectionPool = connectionPool30;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient21.setConnectionPool(connectionPool30);
        com.squareup.okhttp.ConnectionPool connectionPool33 = okHttpClient32.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator34 = okHttpClient32.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool37 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient32.connectionPool = connectionPool37;
        java.net.ResponseCache responseCache39 = okHttpClient32.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory40 = okHttpClient32.sslSocketFactory;
        java.net.Proxy proxy41 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress42 = proxy41.address();
        com.squareup.okhttp.OkHttpClient okHttpClient43 = okHttpClient32.setProxy(proxy41);
        com.squareup.okhttp.OkHttpClient okHttpClient44 = new com.squareup.okhttp.OkHttpClient(okHttpClient43);
        com.squareup.okhttp.OkHttpClient okHttpClient45 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier46 = null;
        okHttpClient45.hostnameVerifier = hostnameVerifier46;
        java.net.ResponseCache responseCache48 = null;
        okHttpClient45.responseCache = responseCache48;
        java.util.List<java.lang.String> strList50 = okHttpClient45.transports;
        com.squareup.okhttp.ConnectionPool connectionPool51 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient45.connectionPool = connectionPool51;
        com.squareup.okhttp.OkHttpClient okHttpClient53 = okHttpClient45.copyWithDefaults();
        java.net.ProxySelector proxySelector54 = okHttpClient53.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory55 = okHttpClient53.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient56 = okHttpClient43.setSSLSocketFactory(sSLSocketFactory55);
        java.lang.String[] strArray57 = sSLSocketFactory55.getSupportedCipherSuites();
        java.lang.String[] strArray58 = sSLSocketFactory55.getSupportedCipherSuites();
        java.lang.String[] strArray59 = sSLSocketFactory55.getSupportedCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient60 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory55);
        java.net.Socket socket61 = sSLSocketFactory55.createSocket();
        java.net.InetAddress inetAddress64 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket66 = sSLSocketFactory55.createSocket("", (int) (short) -1, inetAddress64, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: port out of range:-1");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNull(okResponseCache8);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(routeSet17);
        org.junit.Assert.assertNotNull(connectionPool22);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(connectionPool30);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertNotNull(connectionPool33);
        org.junit.Assert.assertNull(okAuthenticator34);
        org.junit.Assert.assertNull(responseCache39);
        org.junit.Assert.assertNull(sSLSocketFactory40);
        org.junit.Assert.assertNotNull(proxy41);
        org.junit.Assert.assertNull(socketAddress42);
        org.junit.Assert.assertNotNull(okHttpClient43);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNotNull(connectionPool51);
        org.junit.Assert.assertNotNull(okHttpClient53);
// flaky:         org.junit.Assert.assertNull(proxySelector54);
        org.junit.Assert.assertNotNull(sSLSocketFactory55);
        org.junit.Assert.assertNotNull(okHttpClient56);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(okHttpClient60);
        org.junit.Assert.assertNotNull(socket61);
        org.junit.Assert.assertEquals(socket61.toString(), "Socket[unconnected]");
    }

    @Test
    public void test07268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07268");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        java.net.CookieHandler cookieHandler7 = null;
        okHttpClient0.cookieHandler = cookieHandler7;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier10 = null;
        okHttpClient9.hostnameVerifier = hostnameVerifier10;
        java.net.ResponseCache responseCache12 = null;
        okHttpClient9.responseCache = responseCache12;
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = okHttpClient9.hostnameVerifier;
        java.net.Proxy proxy15 = okHttpClient9.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool18 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient9.connectionPool = connectionPool18;
        connectionPool18.evictAll();
        com.squareup.okhttp.Address address21 = null;
        com.squareup.okhttp.Connection connection22 = connectionPool18.get(address21);
        okHttpClient0.connectionPool = connectionPool18;
        connectionPool18.evictAll();
        int int25 = connectionPool18.getSpdyConnectionCount();
        com.squareup.okhttp.Address address26 = null;
        com.squareup.okhttp.Connection connection27 = connectionPool18.get(address26);
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNull(hostnameVerifier14);
        org.junit.Assert.assertNull(proxy15);
        org.junit.Assert.assertNull(connection22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNull(connection27);
    }

    @Test
    public void test07269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07269");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        java.net.CookieHandler cookieHandler7 = null;
        okHttpClient0.cookieHandler = cookieHandler7;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier10 = null;
        okHttpClient9.hostnameVerifier = hostnameVerifier10;
        java.net.ResponseCache responseCache12 = null;
        okHttpClient9.responseCache = responseCache12;
        java.util.List<java.lang.String> strList14 = okHttpClient9.transports;
        com.squareup.okhttp.ConnectionPool connectionPool15 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient9.connectionPool = connectionPool15;
        java.net.CookieHandler cookieHandler17 = okHttpClient9.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache18 = okHttpClient9.okResponseCache();
        java.net.CookieHandler cookieHandler19 = okHttpClient9.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient20 = new com.squareup.okhttp.OkHttpClient(okHttpClient9);
        com.squareup.okhttp.OkHttpClient okHttpClient21 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier22 = null;
        okHttpClient21.hostnameVerifier = hostnameVerifier22;
        java.net.ProxySelector proxySelector24 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient21.setProxySelector(proxySelector24);
        java.net.CookieHandler cookieHandler26 = okHttpClient21.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient27 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier28 = null;
        okHttpClient27.hostnameVerifier = hostnameVerifier28;
        java.net.ResponseCache responseCache30 = null;
        okHttpClient27.responseCache = responseCache30;
        java.util.List<java.lang.String> strList32 = okHttpClient27.transports;
        com.squareup.okhttp.ConnectionPool connectionPool33 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient27.connectionPool = connectionPool33;
        java.net.Proxy proxy35 = null;
        okHttpClient27.proxy = proxy35;
        java.util.Set<com.squareup.okhttp.Route> routeSet37 = okHttpClient27.failedRoutes;
        okHttpClient21.failedRoutes = routeSet37;
        okHttpClient20.failedRoutes = routeSet37;
        okHttpClient0.failedRoutes = routeSet37;
        com.squareup.okhttp.OkHttpClient okHttpClient41 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier42 = null;
        okHttpClient41.hostnameVerifier = hostnameVerifier42;
        java.net.ProxySelector proxySelector44 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient45 = okHttpClient41.setProxySelector(proxySelector44);
        java.net.CookieHandler cookieHandler46 = okHttpClient41.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient47 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier48 = null;
        okHttpClient47.hostnameVerifier = hostnameVerifier48;
        java.net.ResponseCache responseCache50 = null;
        okHttpClient47.responseCache = responseCache50;
        java.util.List<java.lang.String> strList52 = okHttpClient47.transports;
        com.squareup.okhttp.ConnectionPool connectionPool53 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient47.connectionPool = connectionPool53;
        java.net.Proxy proxy55 = null;
        okHttpClient47.proxy = proxy55;
        java.util.Set<com.squareup.okhttp.Route> routeSet57 = okHttpClient47.failedRoutes;
        okHttpClient41.failedRoutes = routeSet57;
        java.net.ProxySelector proxySelector59 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient60 = okHttpClient41.setProxySelector(proxySelector59);
        com.squareup.okhttp.ConnectionPool connectionPool63 = new com.squareup.okhttp.ConnectionPool((int) (short) 10, (long) '4');
        okHttpClient41.connectionPool = connectionPool63;
        connectionPool63.evictAll();
        okHttpClient0.connectionPool = connectionPool63;
        java.net.CookieHandler cookieHandler67 = null;
        okHttpClient0.cookieHandler = cookieHandler67;
        com.squareup.okhttp.OkHttpClient okHttpClient69 = okHttpClient0.copyWithDefaults();
        boolean boolean70 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient71 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNotNull(connectionPool15);
        org.junit.Assert.assertNull(cookieHandler17);
        org.junit.Assert.assertNull(okResponseCache18);
        org.junit.Assert.assertNull(cookieHandler19);
        org.junit.Assert.assertNotNull(okHttpClient25);
        org.junit.Assert.assertNull(cookieHandler26);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNotNull(connectionPool33);
        org.junit.Assert.assertNotNull(routeSet37);
        org.junit.Assert.assertNotNull(okHttpClient45);
        org.junit.Assert.assertNull(cookieHandler46);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNotNull(connectionPool53);
        org.junit.Assert.assertNotNull(routeSet57);
        org.junit.Assert.assertNotNull(okHttpClient60);
        org.junit.Assert.assertNotNull(okHttpClient69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
    }

    @Test
    public void test07270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07270");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory6 = okHttpClient0.sslSocketFactory;
        java.net.CookieHandler cookieHandler7 = okHttpClient0.cookieHandler;
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = okHttpClient0.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool10 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient9.connectionPool = connectionPool10;
        com.squareup.okhttp.OkAuthenticator okAuthenticator12 = null;
        okHttpClient9.authenticator = okAuthenticator12;
        java.util.List<java.lang.String> strList14 = okHttpClient9.transports;
        java.net.ResponseCache responseCache15 = null;
        okHttpClient9.responseCache = responseCache15;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = null;
        okHttpClient17.hostnameVerifier = hostnameVerifier18;
        java.net.ResponseCache responseCache20 = null;
        okHttpClient17.responseCache = responseCache20;
        javax.net.ssl.HostnameVerifier hostnameVerifier22 = okHttpClient17.hostnameVerifier;
        java.net.Proxy proxy23 = okHttpClient17.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool26 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient17.connectionPool = connectionPool26;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient17.copyWithDefaults();
        java.net.Proxy proxy29 = okHttpClient28.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = okHttpClient28.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient9.setHostnameVerifier(hostnameVerifier30);
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient0.setHostnameVerifier(hostnameVerifier30);
        java.net.Proxy proxy33 = okHttpClient32.proxy;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory34 = okHttpClient32.sslSocketFactory;
        com.squareup.okhttp.OkHttpClient okHttpClient35 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier36 = null;
        okHttpClient35.hostnameVerifier = hostnameVerifier36;
        java.net.ResponseCache responseCache38 = null;
        okHttpClient35.responseCache = responseCache38;
        java.util.List<java.lang.String> strList40 = okHttpClient35.transports;
        com.squareup.okhttp.ConnectionPool connectionPool41 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient35.connectionPool = connectionPool41;
        com.squareup.okhttp.ConnectionPool connectionPool43 = okHttpClient35.connectionPool;
        boolean boolean44 = okHttpClient35.getFollowProtocolRedirects();
        com.squareup.okhttp.ConnectionPool connectionPool45 = okHttpClient35.getConnectionPool();
        com.squareup.okhttp.OkHttpClient okHttpClient46 = okHttpClient32.setConnectionPool(connectionPool45);
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache47 = okHttpClient46.okResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient48 = new com.squareup.okhttp.OkHttpClient(okHttpClient46);
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(sSLSocketFactory6);
        org.junit.Assert.assertNull(cookieHandler7);
        org.junit.Assert.assertNull(hostnameVerifier8);
        org.junit.Assert.assertNotNull(connectionPool10);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(hostnameVerifier22);
        org.junit.Assert.assertNull(proxy23);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNull(proxy29);
        org.junit.Assert.assertNotNull(hostnameVerifier30);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertNull(proxy33);
        org.junit.Assert.assertNull(sSLSocketFactory34);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNotNull(connectionPool41);
        org.junit.Assert.assertNotNull(connectionPool43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(connectionPool45);
        org.junit.Assert.assertNotNull(okHttpClient46);
        org.junit.Assert.assertNull(okResponseCache47);
    }

    @Test
    public void test07271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07271");
        com.squareup.okhttp.ConnectionPool connectionPool2 = new com.squareup.okhttp.ConnectionPool((-1), (long) 1);
        int int3 = connectionPool2.getSpdyConnectionCount();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test07272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07272");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        java.net.CookieHandler cookieHandler7 = null;
        okHttpClient0.cookieHandler = cookieHandler7;
        okHttpClient0.followProtocolRedirects = true;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = null;
        okHttpClient11.hostnameVerifier = hostnameVerifier12;
        java.net.ResponseCache responseCache14 = null;
        okHttpClient11.responseCache = responseCache14;
        javax.net.ssl.HostnameVerifier hostnameVerifier16 = okHttpClient11.hostnameVerifier;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory17 = okHttpClient11.sslSocketFactory;
        java.net.CookieHandler cookieHandler18 = okHttpClient11.cookieHandler;
        javax.net.ssl.HostnameVerifier hostnameVerifier19 = okHttpClient11.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool21 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient20.connectionPool = connectionPool21;
        com.squareup.okhttp.OkAuthenticator okAuthenticator23 = null;
        okHttpClient20.authenticator = okAuthenticator23;
        java.util.List<java.lang.String> strList25 = okHttpClient20.transports;
        java.net.ResponseCache responseCache26 = null;
        okHttpClient20.responseCache = responseCache26;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier29 = null;
        okHttpClient28.hostnameVerifier = hostnameVerifier29;
        java.net.ResponseCache responseCache31 = null;
        okHttpClient28.responseCache = responseCache31;
        javax.net.ssl.HostnameVerifier hostnameVerifier33 = okHttpClient28.hostnameVerifier;
        java.net.Proxy proxy34 = okHttpClient28.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool37 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient28.connectionPool = connectionPool37;
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient28.copyWithDefaults();
        java.net.Proxy proxy40 = okHttpClient39.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier41 = okHttpClient39.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient20.setHostnameVerifier(hostnameVerifier41);
        com.squareup.okhttp.OkHttpClient okHttpClient43 = okHttpClient11.setHostnameVerifier(hostnameVerifier41);
        okHttpClient0.hostnameVerifier = hostnameVerifier41;
        javax.net.ssl.HostnameVerifier hostnameVerifier45 = okHttpClient0.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient46 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        okHttpClient0.followProtocolRedirects = false;
        com.squareup.okhttp.OkHttpClient okHttpClient49 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.OkAuthenticator okAuthenticator50 = okHttpClient49.authenticator;
        java.util.Set<com.squareup.okhttp.Route> routeSet51 = okHttpClient49.failedRoutes;
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNull(hostnameVerifier16);
        org.junit.Assert.assertNull(sSLSocketFactory17);
        org.junit.Assert.assertNull(cookieHandler18);
        org.junit.Assert.assertNull(hostnameVerifier19);
        org.junit.Assert.assertNotNull(connectionPool21);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNull(hostnameVerifier33);
        org.junit.Assert.assertNull(proxy34);
        org.junit.Assert.assertNotNull(okHttpClient39);
        org.junit.Assert.assertNull(proxy40);
        org.junit.Assert.assertNotNull(hostnameVerifier41);
        org.junit.Assert.assertNotNull(okHttpClient42);
        org.junit.Assert.assertNotNull(okHttpClient43);
        org.junit.Assert.assertNotNull(hostnameVerifier45);
        org.junit.Assert.assertNotNull(okHttpClient49);
        org.junit.Assert.assertNotNull(okAuthenticator50);
        org.junit.Assert.assertNotNull(routeSet51);
    }

    @Test
    public void test07273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07273");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient0.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.copyWithDefaults();
        java.net.ResponseCache responseCache12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setResponseCache(responseCache12);
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = okHttpClient13.hostnameVerifier;
        java.net.ResponseCache responseCache15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient13.setResponseCache(responseCache15);
        java.net.ResponseCache responseCache17 = null;
        okHttpClient13.responseCache = responseCache17;
        java.net.CookieHandler cookieHandler19 = okHttpClient13.cookieHandler;
        com.squareup.okhttp.ConnectionPool connectionPool22 = new com.squareup.okhttp.ConnectionPool((int) ' ', (long) 10);
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient13.setConnectionPool(connectionPool22);
        java.net.ProxySelector proxySelector24 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient13.setProxySelector(proxySelector24);
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNotNull(hostnameVerifier14);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNull(cookieHandler19);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertNotNull(okHttpClient25);
    }

    @Test
    public void test07274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07274");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient4.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool7 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient6.connectionPool = connectionPool7;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier10 = null;
        okHttpClient9.hostnameVerifier = hostnameVerifier10;
        java.net.ResponseCache responseCache12 = null;
        okHttpClient9.responseCache = responseCache12;
        java.util.List<java.lang.String> strList14 = okHttpClient9.transports;
        com.squareup.okhttp.ConnectionPool connectionPool15 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient9.connectionPool = connectionPool15;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient6.setConnectionPool(connectionPool15);
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier19 = null;
        okHttpClient18.hostnameVerifier = hostnameVerifier19;
        java.net.ProxySelector proxySelector21 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient18.setProxySelector(proxySelector21);
        java.net.CookieHandler cookieHandler23 = okHttpClient18.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient24 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier25 = null;
        okHttpClient24.hostnameVerifier = hostnameVerifier25;
        java.net.ResponseCache responseCache27 = null;
        okHttpClient24.responseCache = responseCache27;
        java.util.List<java.lang.String> strList29 = okHttpClient24.transports;
        com.squareup.okhttp.ConnectionPool connectionPool30 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient24.connectionPool = connectionPool30;
        java.net.Proxy proxy32 = null;
        okHttpClient24.proxy = proxy32;
        java.util.Set<com.squareup.okhttp.Route> routeSet34 = okHttpClient24.failedRoutes;
        okHttpClient18.failedRoutes = routeSet34;
        java.net.ProxySelector proxySelector36 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient18.setProxySelector(proxySelector36);
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient18.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient39 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier40 = null;
        okHttpClient39.hostnameVerifier = hostnameVerifier40;
        java.net.ResponseCache responseCache42 = null;
        okHttpClient39.responseCache = responseCache42;
        javax.net.ssl.HostnameVerifier hostnameVerifier44 = okHttpClient39.hostnameVerifier;
        java.net.Proxy proxy45 = okHttpClient39.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool48 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient39.connectionPool = connectionPool48;
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient39.copyWithDefaults();
        java.net.Proxy proxy51 = okHttpClient50.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier52 = okHttpClient50.getHostnameVerifier();
        okHttpClient18.hostnameVerifier = hostnameVerifier52;
        okHttpClient17.hostnameVerifier = hostnameVerifier52;
        okHttpClient5.hostnameVerifier = hostnameVerifier52;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache56 = okHttpClient5.okResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient57 = okHttpClient5.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient58 = new com.squareup.okhttp.OkHttpClient(okHttpClient57);
        com.squareup.okhttp.OkHttpClient okHttpClient59 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool60 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient59.connectionPool = connectionPool60;
        com.squareup.okhttp.OkHttpClient okHttpClient62 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier63 = null;
        okHttpClient62.hostnameVerifier = hostnameVerifier63;
        java.net.ResponseCache responseCache65 = null;
        okHttpClient62.responseCache = responseCache65;
        java.util.List<java.lang.String> strList67 = okHttpClient62.transports;
        com.squareup.okhttp.ConnectionPool connectionPool68 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient62.connectionPool = connectionPool68;
        com.squareup.okhttp.OkHttpClient okHttpClient70 = okHttpClient59.setConnectionPool(connectionPool68);
        java.net.ResponseCache responseCache71 = okHttpClient59.responseCache;
        java.net.ResponseCache responseCache72 = okHttpClient59.getResponseCache();
        java.net.ResponseCache responseCache73 = okHttpClient59.responseCache;
        java.net.ProxySelector proxySelector74 = okHttpClient59.proxySelector;
        java.util.List<java.lang.String> strList75 = okHttpClient59.transports;
        java.net.ProxySelector proxySelector76 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient77 = okHttpClient59.setProxySelector(proxySelector76);
        okHttpClient77.followProtocolRedirects = false;
        com.squareup.okhttp.OkHttpClient okHttpClient80 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier81 = null;
        okHttpClient80.hostnameVerifier = hostnameVerifier81;
        java.net.ResponseCache responseCache83 = null;
        okHttpClient80.responseCache = responseCache83;
        javax.net.ssl.HostnameVerifier hostnameVerifier85 = okHttpClient80.hostnameVerifier;
        java.net.Proxy proxy86 = okHttpClient80.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool89 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient80.connectionPool = connectionPool89;
        com.squareup.okhttp.OkHttpClient okHttpClient91 = okHttpClient80.copyWithDefaults();
        java.net.ResponseCache responseCache92 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient93 = okHttpClient91.setResponseCache(responseCache92);
        com.squareup.okhttp.ConnectionPool connectionPool94 = okHttpClient91.connectionPool;
        connectionPool94.evictAll();
        okHttpClient77.connectionPool = connectionPool94;
        okHttpClient57.connectionPool = connectionPool94;
        com.squareup.okhttp.Address address98 = null;
        com.squareup.okhttp.Connection connection99 = connectionPool94.get(address98);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNotNull(connectionPool7);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNotNull(connectionPool15);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNull(cookieHandler23);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(connectionPool30);
        org.junit.Assert.assertNotNull(routeSet34);
        org.junit.Assert.assertNotNull(okHttpClient37);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNull(hostnameVerifier44);
        org.junit.Assert.assertNull(proxy45);
        org.junit.Assert.assertNotNull(okHttpClient50);
        org.junit.Assert.assertNull(proxy51);
        org.junit.Assert.assertNotNull(hostnameVerifier52);
        org.junit.Assert.assertNull(okResponseCache56);
        org.junit.Assert.assertNotNull(okHttpClient57);
        org.junit.Assert.assertNotNull(connectionPool60);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNotNull(connectionPool68);
        org.junit.Assert.assertNotNull(okHttpClient70);
        org.junit.Assert.assertNull(responseCache71);
        org.junit.Assert.assertNull(responseCache72);
        org.junit.Assert.assertNull(responseCache73);
        org.junit.Assert.assertNull(proxySelector74);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNotNull(okHttpClient77);
        org.junit.Assert.assertNull(hostnameVerifier85);
        org.junit.Assert.assertNull(proxy86);
        org.junit.Assert.assertNotNull(okHttpClient91);
        org.junit.Assert.assertNotNull(okHttpClient93);
        org.junit.Assert.assertNotNull(connectionPool94);
        org.junit.Assert.assertNull(connection99);
    }

    @Test
    public void test07275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07275");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory8 = okHttpClient0.getSslSocketFactory();
        java.net.CookieHandler cookieHandler9 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.ConnectionPool connectionPool12 = new com.squareup.okhttp.ConnectionPool(10, 1L);
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient0.setConnectionPool(connectionPool12);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory14 = okHttpClient0.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient0.copyWithDefaults();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory16 = okHttpClient15.getSslSocketFactory();
        java.net.CookieHandler cookieHandler17 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient15.setCookieHandler(cookieHandler17);
        java.net.CookieHandler cookieHandler19 = null;
        okHttpClient18.cookieHandler = cookieHandler19;
        java.net.ProxySelector proxySelector21 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient18.setProxySelector(proxySelector21);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNull(sSLSocketFactory8);
        org.junit.Assert.assertNull(cookieHandler9);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNull(sSLSocketFactory14);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNotNull(sSLSocketFactory16);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNotNull(okHttpClient22);
    }

    @Test
    public void test07276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07276");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient0.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.copyWithDefaults();
        java.net.ResponseCache responseCache12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setResponseCache(responseCache12);
        java.net.ResponseCache responseCache14 = okHttpClient13.getResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient(okHttpClient13);
        com.squareup.okhttp.ConnectionPool connectionPool16 = okHttpClient15.connectionPool;
        java.util.List<java.lang.String> strList17 = okHttpClient15.transports;
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNull(responseCache14);
        org.junit.Assert.assertNull(connectionPool16);
        org.junit.Assert.assertNull(strList17);
    }

    @Test
    public void test07277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07277");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        okHttpClient0.authenticator = okAuthenticator3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient0.responseCache = responseCache6;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier9 = null;
        okHttpClient8.hostnameVerifier = hostnameVerifier9;
        java.net.ResponseCache responseCache11 = null;
        okHttpClient8.responseCache = responseCache11;
        javax.net.ssl.HostnameVerifier hostnameVerifier13 = okHttpClient8.hostnameVerifier;
        java.net.Proxy proxy14 = okHttpClient8.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool17 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient8.connectionPool = connectionPool17;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient8.copyWithDefaults();
        java.net.Proxy proxy20 = okHttpClient19.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier21 = okHttpClient19.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient0.setHostnameVerifier(hostnameVerifier21);
        java.net.CookieHandler cookieHandler23 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient22.setCookieHandler(cookieHandler23);
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient22.copyWithDefaults();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory26 = okHttpClient22.sslSocketFactory;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier28 = null;
        okHttpClient27.hostnameVerifier = hostnameVerifier28;
        java.net.ResponseCache responseCache30 = null;
        okHttpClient27.responseCache = responseCache30;
        java.util.List<java.lang.String> strList32 = okHttpClient27.transports;
        com.squareup.okhttp.ConnectionPool connectionPool33 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient27.connectionPool = connectionPool33;
        java.net.CookieHandler cookieHandler35 = okHttpClient27.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache36 = okHttpClient27.okResponseCache();
        java.net.CookieHandler cookieHandler37 = okHttpClient27.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient38 = new com.squareup.okhttp.OkHttpClient(okHttpClient27);
        com.squareup.okhttp.OkHttpClient okHttpClient39 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier40 = null;
        okHttpClient39.hostnameVerifier = hostnameVerifier40;
        java.net.ProxySelector proxySelector42 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient43 = okHttpClient39.setProxySelector(proxySelector42);
        java.net.CookieHandler cookieHandler44 = okHttpClient39.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient45 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier46 = null;
        okHttpClient45.hostnameVerifier = hostnameVerifier46;
        java.net.ResponseCache responseCache48 = null;
        okHttpClient45.responseCache = responseCache48;
        java.util.List<java.lang.String> strList50 = okHttpClient45.transports;
        com.squareup.okhttp.ConnectionPool connectionPool51 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient45.connectionPool = connectionPool51;
        java.net.Proxy proxy53 = null;
        okHttpClient45.proxy = proxy53;
        java.util.Set<com.squareup.okhttp.Route> routeSet55 = okHttpClient45.failedRoutes;
        okHttpClient39.failedRoutes = routeSet55;
        okHttpClient38.failedRoutes = routeSet55;
        java.util.List<java.lang.String> strList58 = okHttpClient38.getTransports();
        com.squareup.okhttp.OkHttpClient okHttpClient59 = new com.squareup.okhttp.OkHttpClient(okHttpClient38);
        com.squareup.okhttp.OkHttpClient okHttpClient60 = new com.squareup.okhttp.OkHttpClient(okHttpClient38);
        java.util.List<java.lang.String> strList61 = null;
        okHttpClient38.transports = strList61;
        com.squareup.okhttp.OkHttpClient okHttpClient63 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier64 = null;
        okHttpClient63.hostnameVerifier = hostnameVerifier64;
        java.net.ResponseCache responseCache66 = null;
        okHttpClient63.responseCache = responseCache66;
        java.util.List<java.lang.String> strList68 = okHttpClient63.transports;
        java.net.Proxy proxy69 = java.net.Proxy.NO_PROXY;
        boolean boolean71 = proxy69.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type72 = proxy69.type();
        java.net.SocketAddress socketAddress73 = proxy69.address();
        com.squareup.okhttp.OkHttpClient okHttpClient74 = okHttpClient63.setProxy(proxy69);
        javax.net.ssl.HostnameVerifier hostnameVerifier75 = okHttpClient74.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient76 = new com.squareup.okhttp.OkHttpClient(okHttpClient74);
        com.squareup.okhttp.OkHttpClient okHttpClient77 = okHttpClient76.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient78 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier79 = null;
        okHttpClient78.hostnameVerifier = hostnameVerifier79;
        java.net.ResponseCache responseCache81 = null;
        okHttpClient78.responseCache = responseCache81;
        java.util.List<java.lang.String> strList83 = okHttpClient78.transports;
        com.squareup.okhttp.ConnectionPool connectionPool84 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient78.connectionPool = connectionPool84;
        java.net.Proxy proxy86 = null;
        okHttpClient78.proxy = proxy86;
        boolean boolean88 = okHttpClient78.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient89 = okHttpClient78.copyWithDefaults();
        java.net.CookieHandler cookieHandler90 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient91 = okHttpClient89.setCookieHandler(cookieHandler90);
        java.net.Proxy proxy92 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient93 = okHttpClient89.setProxy(proxy92);
        com.squareup.okhttp.OkAuthenticator okAuthenticator94 = okHttpClient89.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier95 = okHttpClient89.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient96 = okHttpClient77.setHostnameVerifier(hostnameVerifier95);
        okHttpClient38.hostnameVerifier = hostnameVerifier95;
        com.squareup.okhttp.OkHttpClient okHttpClient98 = okHttpClient22.setHostnameVerifier(hostnameVerifier95);
        java.net.ProxySelector proxySelector99 = okHttpClient22.proxySelector;
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNull(hostnameVerifier13);
        org.junit.Assert.assertNull(proxy14);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNull(proxy20);
        org.junit.Assert.assertNotNull(hostnameVerifier21);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNotNull(okHttpClient25);
        org.junit.Assert.assertNull(sSLSocketFactory26);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNotNull(connectionPool33);
        org.junit.Assert.assertNull(cookieHandler35);
        org.junit.Assert.assertNull(okResponseCache36);
        org.junit.Assert.assertNull(cookieHandler37);
        org.junit.Assert.assertNotNull(okHttpClient43);
        org.junit.Assert.assertNull(cookieHandler44);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNotNull(connectionPool51);
        org.junit.Assert.assertNotNull(routeSet55);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNotNull(proxy69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + type72 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type72.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress73);
        org.junit.Assert.assertNotNull(okHttpClient74);
        org.junit.Assert.assertNull(hostnameVerifier75);
        org.junit.Assert.assertNotNull(okHttpClient77);
        org.junit.Assert.assertNull(strList83);
        org.junit.Assert.assertNotNull(connectionPool84);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(okHttpClient89);
        org.junit.Assert.assertNotNull(okHttpClient91);
        org.junit.Assert.assertNotNull(proxy92);
        org.junit.Assert.assertNotNull(okHttpClient93);
        org.junit.Assert.assertNotNull(okAuthenticator94);
        org.junit.Assert.assertNotNull(hostnameVerifier95);
        org.junit.Assert.assertNotNull(okHttpClient96);
        org.junit.Assert.assertNotNull(okHttpClient98);
        org.junit.Assert.assertNull(proxySelector99);
    }

    @Test
    public void test07278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07278");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        boolean boolean3 = okHttpClient0.getFollowProtocolRedirects();
        java.net.CookieHandler cookieHandler4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setCookieHandler(cookieHandler4);
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache6 = okHttpClient0.okResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        com.squareup.okhttp.OkAuthenticator okAuthenticator8 = okHttpClient7.getAuthenticator();
        com.squareup.okhttp.OkHttpClient okHttpClient9 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier10 = null;
        okHttpClient9.hostnameVerifier = hostnameVerifier10;
        java.net.ResponseCache responseCache12 = null;
        okHttpClient9.responseCache = responseCache12;
        java.util.List<java.lang.String> strList14 = okHttpClient9.transports;
        com.squareup.okhttp.ConnectionPool connectionPool15 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient9.connectionPool = connectionPool15;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient9.copyWithDefaults();
        java.net.ProxySelector proxySelector18 = okHttpClient17.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory19 = okHttpClient17.getSslSocketFactory();
        okHttpClient7.sslSocketFactory = sSLSocketFactory19;
        java.net.Socket socket21 = sSLSocketFactory19.createSocket();
        java.net.Socket socket22 = sSLSocketFactory19.createSocket();
        com.squareup.okhttp.OkHttpClient okHttpClient23 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier24 = null;
        okHttpClient23.hostnameVerifier = hostnameVerifier24;
        java.net.ProxySelector proxySelector26 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient23.setProxySelector(proxySelector26);
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient27.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient29 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool30 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient29.connectionPool = connectionPool30;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier33 = null;
        okHttpClient32.hostnameVerifier = hostnameVerifier33;
        java.net.ResponseCache responseCache35 = null;
        okHttpClient32.responseCache = responseCache35;
        java.util.List<java.lang.String> strList37 = okHttpClient32.transports;
        com.squareup.okhttp.ConnectionPool connectionPool38 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient32.connectionPool = connectionPool38;
        com.squareup.okhttp.OkHttpClient okHttpClient40 = okHttpClient29.setConnectionPool(connectionPool38);
        com.squareup.okhttp.OkHttpClient okHttpClient41 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier42 = null;
        okHttpClient41.hostnameVerifier = hostnameVerifier42;
        java.net.ProxySelector proxySelector44 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient45 = okHttpClient41.setProxySelector(proxySelector44);
        java.net.CookieHandler cookieHandler46 = okHttpClient41.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient47 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier48 = null;
        okHttpClient47.hostnameVerifier = hostnameVerifier48;
        java.net.ResponseCache responseCache50 = null;
        okHttpClient47.responseCache = responseCache50;
        java.util.List<java.lang.String> strList52 = okHttpClient47.transports;
        com.squareup.okhttp.ConnectionPool connectionPool53 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient47.connectionPool = connectionPool53;
        java.net.Proxy proxy55 = null;
        okHttpClient47.proxy = proxy55;
        java.util.Set<com.squareup.okhttp.Route> routeSet57 = okHttpClient47.failedRoutes;
        okHttpClient41.failedRoutes = routeSet57;
        java.net.ProxySelector proxySelector59 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient60 = okHttpClient41.setProxySelector(proxySelector59);
        com.squareup.okhttp.OkHttpClient okHttpClient61 = okHttpClient41.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient62 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier63 = null;
        okHttpClient62.hostnameVerifier = hostnameVerifier63;
        java.net.ResponseCache responseCache65 = null;
        okHttpClient62.responseCache = responseCache65;
        javax.net.ssl.HostnameVerifier hostnameVerifier67 = okHttpClient62.hostnameVerifier;
        java.net.Proxy proxy68 = okHttpClient62.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool71 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient62.connectionPool = connectionPool71;
        com.squareup.okhttp.OkHttpClient okHttpClient73 = okHttpClient62.copyWithDefaults();
        java.net.Proxy proxy74 = okHttpClient73.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier75 = okHttpClient73.getHostnameVerifier();
        okHttpClient41.hostnameVerifier = hostnameVerifier75;
        okHttpClient40.hostnameVerifier = hostnameVerifier75;
        okHttpClient28.hostnameVerifier = hostnameVerifier75;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache79 = okHttpClient28.okResponseCache();
        java.net.ProxySelector proxySelector80 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient81 = okHttpClient28.setProxySelector(proxySelector80);
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache82 = okHttpClient81.okResponseCache();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory83 = okHttpClient81.sslSocketFactory;
        java.lang.String[] strArray84 = sSLSocketFactory83.getSupportedCipherSuites();
        java.net.Socket socket85 = sSLSocketFactory83.createSocket();
        java.io.InputStream inputStream86 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket88 = sSLSocketFactory19.createSocket(socket85, inputStream86, false);
            org.junit.Assert.fail("Expected exception of type java.net.SocketException; message: Underlying socket is not connected");
        } catch (java.net.SocketException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(okResponseCache6);
        org.junit.Assert.assertNull(okAuthenticator8);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNotNull(connectionPool15);
        org.junit.Assert.assertNotNull(okHttpClient17);
// flaky:         org.junit.Assert.assertNull(proxySelector18);
        org.junit.Assert.assertNotNull(sSLSocketFactory19);
        org.junit.Assert.assertNotNull(socket21);
        org.junit.Assert.assertEquals(socket21.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(socket22);
        org.junit.Assert.assertEquals(socket22.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNotNull(connectionPool30);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(connectionPool38);
        org.junit.Assert.assertNotNull(okHttpClient40);
        org.junit.Assert.assertNotNull(okHttpClient45);
        org.junit.Assert.assertNull(cookieHandler46);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNotNull(connectionPool53);
        org.junit.Assert.assertNotNull(routeSet57);
        org.junit.Assert.assertNotNull(okHttpClient60);
        org.junit.Assert.assertNotNull(okHttpClient61);
        org.junit.Assert.assertNull(hostnameVerifier67);
        org.junit.Assert.assertNull(proxy68);
        org.junit.Assert.assertNotNull(okHttpClient73);
        org.junit.Assert.assertNull(proxy74);
        org.junit.Assert.assertNotNull(hostnameVerifier75);
        org.junit.Assert.assertNull(okResponseCache79);
        org.junit.Assert.assertNotNull(okHttpClient81);
        org.junit.Assert.assertNull(okResponseCache82);
        org.junit.Assert.assertNotNull(sSLSocketFactory83);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertNotNull(socket85);
        org.junit.Assert.assertEquals(socket85.toString(), "Socket[unconnected]");
    }

    @Test
    public void test07279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07279");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.ResponseCache responseCache5 = null;
        okHttpClient4.responseCache = responseCache5;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient4.setSSLSocketFactory(sSLSocketFactory7);
        java.net.ProxySelector proxySelector9 = null;
        okHttpClient4.proxySelector = proxySelector9;
        javax.net.ssl.HostnameVerifier hostnameVerifier11 = okHttpClient4.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient4.copyWithDefaults();
        java.net.ResponseCache responseCache13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient4.setResponseCache(responseCache13);
        com.squareup.okhttp.ConnectionPool connectionPool17 = new com.squareup.okhttp.ConnectionPool((int) (short) 1, (long) (short) 100);
        int int18 = connectionPool17.getHttpConnectionCount();
        okHttpClient14.connectionPool = connectionPool17;
        java.util.List<java.lang.String> strList20 = okHttpClient14.transports;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache21 = okHttpClient14.okResponseCache();
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertNull(hostnameVerifier11);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertNotNull(okHttpClient14);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(okResponseCache21);
    }

    @Test
    public void test07280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07280");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        java.net.Proxy proxy12 = okHttpClient11.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool14 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient13.connectionPool = connectionPool14;
        int int16 = connectionPool14.getSpdyConnectionCount();
        okHttpClient11.connectionPool = connectionPool14;
        int int18 = connectionPool14.getHttpConnectionCount();
        int int19 = connectionPool14.getHttpConnectionCount();
        int int20 = connectionPool14.getSpdyConnectionCount();
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(proxy12);
        org.junit.Assert.assertNotNull(connectionPool14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
    }

    @Test
    public void test07281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07281");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.OkAuthenticator okAuthenticator12 = okHttpClient11.getAuthenticator();
        java.net.ProxySelector proxySelector13 = okHttpClient11.getProxySelector();
        java.net.ResponseCache responseCache14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient11.setResponseCache(responseCache14);
        javax.net.ssl.HostnameVerifier hostnameVerifier16 = okHttpClient15.hostnameVerifier;
        java.net.ProxySelector proxySelector17 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient15.setProxySelector(proxySelector17);
        com.squareup.okhttp.OkHttpClient okHttpClient19 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier20 = null;
        okHttpClient19.hostnameVerifier = hostnameVerifier20;
        java.net.ProxySelector proxySelector22 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient19.setProxySelector(proxySelector22);
        java.net.CookieHandler cookieHandler24 = okHttpClient19.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient25 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier26 = null;
        okHttpClient25.hostnameVerifier = hostnameVerifier26;
        java.net.ResponseCache responseCache28 = null;
        okHttpClient25.responseCache = responseCache28;
        java.util.List<java.lang.String> strList30 = okHttpClient25.transports;
        com.squareup.okhttp.ConnectionPool connectionPool31 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient25.connectionPool = connectionPool31;
        java.net.Proxy proxy33 = null;
        okHttpClient25.proxy = proxy33;
        java.util.Set<com.squareup.okhttp.Route> routeSet35 = okHttpClient25.failedRoutes;
        okHttpClient19.failedRoutes = routeSet35;
        java.net.ProxySelector proxySelector37 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient19.setProxySelector(proxySelector37);
        com.squareup.okhttp.ConnectionPool connectionPool41 = new com.squareup.okhttp.ConnectionPool((int) (short) 10, (long) '4');
        okHttpClient19.connectionPool = connectionPool41;
        boolean boolean43 = okHttpClient19.getFollowProtocolRedirects();
        java.net.ResponseCache responseCache44 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient45 = okHttpClient19.setResponseCache(responseCache44);
        java.net.Proxy proxy46 = java.net.Proxy.NO_PROXY;
        boolean boolean48 = proxy46.equals((java.lang.Object) 1L);
        java.net.SocketAddress socketAddress49 = proxy46.address();
        java.net.SocketAddress socketAddress50 = proxy46.address();
        com.squareup.okhttp.OkHttpClient okHttpClient51 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier52 = null;
        okHttpClient51.hostnameVerifier = hostnameVerifier52;
        java.net.ResponseCache responseCache54 = null;
        okHttpClient51.responseCache = responseCache54;
        javax.net.ssl.HostnameVerifier hostnameVerifier56 = okHttpClient51.hostnameVerifier;
        java.net.Proxy proxy57 = okHttpClient51.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool60 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient51.connectionPool = connectionPool60;
        java.util.List<java.lang.String> strList62 = okHttpClient51.transports;
        boolean boolean63 = proxy46.equals((java.lang.Object) okHttpClient51);
        java.net.Proxy.Type type64 = proxy46.type();
        okHttpClient45.proxy = proxy46;
        com.squareup.okhttp.OkHttpClient okHttpClient66 = okHttpClient15.setProxy(proxy46);
        java.net.CookieHandler cookieHandler67 = null;
        okHttpClient15.cookieHandler = cookieHandler67;
        java.net.ProxySelector proxySelector69 = okHttpClient15.getProxySelector();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory70 = null;
        okHttpClient15.sslSocketFactory = sSLSocketFactory70;
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(okAuthenticator12);
        org.junit.Assert.assertNull(proxySelector13);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNull(hostnameVerifier16);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertNull(cookieHandler24);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNotNull(connectionPool31);
        org.junit.Assert.assertNotNull(routeSet35);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(okHttpClient45);
        org.junit.Assert.assertNotNull(proxy46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(socketAddress49);
        org.junit.Assert.assertNull(socketAddress50);
        org.junit.Assert.assertNull(hostnameVerifier56);
        org.junit.Assert.assertNull(proxy57);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + type64 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type64.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNotNull(okHttpClient66);
        org.junit.Assert.assertNull(proxySelector69);
    }

    @Test
    public void test07282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07282");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache8 = okHttpClient7.okResponseCache();
        java.net.ResponseCache responseCache9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient7.setResponseCache(responseCache9);
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        okHttpClient7.transports = strList13;
        okHttpClient0.transports = strList13;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient0.setFollowProtocolRedirects(true);
        javax.net.ssl.HostnameVerifier hostnameVerifier19 = okHttpClient18.hostnameVerifier;
        javax.net.ssl.HostnameVerifier hostnameVerifier20 = okHttpClient18.hostnameVerifier;
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNull(okResponseCache8);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNull(hostnameVerifier19);
        org.junit.Assert.assertNull(hostnameVerifier20);
    }

    @Test
    public void test07283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07283");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.OkAuthenticator okAuthenticator12 = okHttpClient11.getAuthenticator();
        java.net.ProxySelector proxySelector13 = okHttpClient11.getProxySelector();
        java.net.ResponseCache responseCache14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient11.setResponseCache(responseCache14);
        java.net.CookieHandler cookieHandler16 = null;
        okHttpClient15.cookieHandler = cookieHandler16;
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = okHttpClient15.getHostnameVerifier();
        java.net.ResponseCache responseCache19 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient15.setResponseCache(responseCache19);
        com.squareup.okhttp.OkAuthenticator okAuthenticator21 = okHttpClient20.getAuthenticator();
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient(okHttpClient20);
        com.squareup.okhttp.OkHttpClient okHttpClient23 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool24 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient23.connectionPool = connectionPool24;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier27 = null;
        okHttpClient26.hostnameVerifier = hostnameVerifier27;
        java.net.ResponseCache responseCache29 = null;
        okHttpClient26.responseCache = responseCache29;
        java.util.List<java.lang.String> strList31 = okHttpClient26.transports;
        com.squareup.okhttp.ConnectionPool connectionPool32 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient26.connectionPool = connectionPool32;
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient23.setConnectionPool(connectionPool32);
        java.net.Proxy proxy35 = okHttpClient34.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient36 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool37 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient36.connectionPool = connectionPool37;
        com.squareup.okhttp.OkHttpClient okHttpClient39 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier40 = null;
        okHttpClient39.hostnameVerifier = hostnameVerifier40;
        java.net.ResponseCache responseCache42 = null;
        okHttpClient39.responseCache = responseCache42;
        java.util.List<java.lang.String> strList44 = okHttpClient39.transports;
        com.squareup.okhttp.ConnectionPool connectionPool45 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient39.connectionPool = connectionPool45;
        com.squareup.okhttp.OkHttpClient okHttpClient47 = okHttpClient36.setConnectionPool(connectionPool45);
        com.squareup.okhttp.ConnectionPool connectionPool48 = okHttpClient36.connectionPool;
        com.squareup.okhttp.OkHttpClient okHttpClient49 = okHttpClient34.setConnectionPool(connectionPool48);
        com.squareup.okhttp.OkHttpClient okHttpClient50 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier51 = null;
        okHttpClient50.hostnameVerifier = hostnameVerifier51;
        java.net.ProxySelector proxySelector53 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient54 = okHttpClient50.setProxySelector(proxySelector53);
        java.net.CookieHandler cookieHandler55 = okHttpClient50.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient56 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier57 = null;
        okHttpClient56.hostnameVerifier = hostnameVerifier57;
        java.net.ResponseCache responseCache59 = null;
        okHttpClient56.responseCache = responseCache59;
        java.util.List<java.lang.String> strList61 = okHttpClient56.transports;
        com.squareup.okhttp.ConnectionPool connectionPool62 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient56.connectionPool = connectionPool62;
        java.net.Proxy proxy64 = null;
        okHttpClient56.proxy = proxy64;
        java.util.Set<com.squareup.okhttp.Route> routeSet66 = okHttpClient56.failedRoutes;
        okHttpClient50.failedRoutes = routeSet66;
        java.net.ProxySelector proxySelector68 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient69 = okHttpClient50.setProxySelector(proxySelector68);
        com.squareup.okhttp.OkHttpClient okHttpClient70 = new com.squareup.okhttp.OkHttpClient(okHttpClient69);
        com.squareup.okhttp.OkHttpClient okHttpClient71 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier72 = null;
        okHttpClient71.hostnameVerifier = hostnameVerifier72;
        java.net.ResponseCache responseCache74 = null;
        okHttpClient71.responseCache = responseCache74;
        javax.net.ssl.HostnameVerifier hostnameVerifier76 = okHttpClient71.hostnameVerifier;
        java.net.Proxy proxy77 = okHttpClient71.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool80 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient71.connectionPool = connectionPool80;
        com.squareup.okhttp.OkHttpClient okHttpClient82 = okHttpClient71.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier83 = okHttpClient82.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient84 = okHttpClient69.setHostnameVerifier(hostnameVerifier83);
        okHttpClient49.hostnameVerifier = hostnameVerifier83;
        com.squareup.okhttp.OkHttpClient okHttpClient86 = okHttpClient22.setHostnameVerifier(hostnameVerifier83);
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(okAuthenticator12);
        org.junit.Assert.assertNull(proxySelector13);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNull(hostnameVerifier18);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNull(okAuthenticator21);
        org.junit.Assert.assertNotNull(connectionPool24);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNotNull(connectionPool32);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertNull(proxy35);
        org.junit.Assert.assertNotNull(connectionPool37);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNotNull(connectionPool45);
        org.junit.Assert.assertNotNull(okHttpClient47);
        org.junit.Assert.assertNotNull(connectionPool48);
        org.junit.Assert.assertNotNull(okHttpClient49);
        org.junit.Assert.assertNotNull(okHttpClient54);
        org.junit.Assert.assertNull(cookieHandler55);
        org.junit.Assert.assertNull(strList61);
        org.junit.Assert.assertNotNull(connectionPool62);
        org.junit.Assert.assertNotNull(routeSet66);
        org.junit.Assert.assertNotNull(okHttpClient69);
        org.junit.Assert.assertNull(hostnameVerifier76);
        org.junit.Assert.assertNull(proxy77);
        org.junit.Assert.assertNotNull(okHttpClient82);
        org.junit.Assert.assertNotNull(hostnameVerifier83);
        org.junit.Assert.assertNotNull(okHttpClient84);
        org.junit.Assert.assertNotNull(okHttpClient86);
    }

    @Test
    public void test07284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07284");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient0.setFollowProtocolRedirects(false);
        java.net.Proxy proxy8 = okHttpClient0.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier9 = okHttpClient0.getHostnameVerifier();
        java.util.Set<com.squareup.okhttp.Route> routeSet10 = okHttpClient0.failedRoutes;
        okHttpClient0.followProtocolRedirects = true;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = null;
        okHttpClient13.hostnameVerifier = hostnameVerifier14;
        java.net.ResponseCache responseCache16 = null;
        okHttpClient13.responseCache = responseCache16;
        java.util.List<java.lang.String> strList18 = okHttpClient13.transports;
        com.squareup.okhttp.ConnectionPool connectionPool19 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient13.connectionPool = connectionPool19;
        java.net.Proxy proxy21 = null;
        okHttpClient13.proxy = proxy21;
        boolean boolean23 = okHttpClient13.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient13.copyWithDefaults();
        java.net.Proxy proxy25 = java.net.Proxy.NO_PROXY;
        boolean boolean27 = proxy25.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type28 = proxy25.type();
        java.lang.String str29 = proxy25.toString();
        java.net.Proxy.Type type30 = proxy25.type();
        okHttpClient13.proxy = proxy25;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache33 = okHttpClient32.okResponseCache();
        java.net.ResponseCache responseCache34 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient32.setResponseCache(responseCache34);
        java.net.ProxySelector proxySelector36 = okHttpClient32.getProxySelector();
        com.squareup.okhttp.OkAuthenticator okAuthenticator37 = okHttpClient32.getAuthenticator();
        boolean boolean38 = proxy25.equals((java.lang.Object) okHttpClient32);
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient0.setProxy(proxy25);
        java.net.Proxy proxy40 = okHttpClient39.getProxy();
        java.net.ProxySelector proxySelector41 = okHttpClient39.getProxySelector();
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNotNull(okHttpClient7);
        org.junit.Assert.assertNull(proxy8);
        org.junit.Assert.assertNull(hostnameVerifier9);
        org.junit.Assert.assertNotNull(routeSet10);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(connectionPool19);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNotNull(proxy25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + type28 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type28.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "DIRECT" + "'", str29, "DIRECT");
        org.junit.Assert.assertTrue("'" + type30 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type30.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(okResponseCache33);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNull(proxySelector36);
        org.junit.Assert.assertNull(okAuthenticator37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(okHttpClient39);
        org.junit.Assert.assertNotNull(proxy40);
        org.junit.Assert.assertNull(proxySelector41);
    }

    @Test
    public void test07285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07285");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = null;
        okHttpClient0.proxy = proxy6;
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = okHttpClient0.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient9 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier10 = null;
        okHttpClient9.hostnameVerifier = hostnameVerifier10;
        java.net.ResponseCache responseCache12 = null;
        okHttpClient9.responseCache = responseCache12;
        java.util.List<java.lang.String> strList14 = okHttpClient9.transports;
        com.squareup.okhttp.ConnectionPool connectionPool15 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient9.connectionPool = connectionPool15;
        java.net.Proxy proxy17 = null;
        okHttpClient9.proxy = proxy17;
        boolean boolean19 = okHttpClient9.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient9.copyWithDefaults();
        java.net.Proxy proxy21 = java.net.Proxy.NO_PROXY;
        boolean boolean23 = proxy21.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type24 = proxy21.type();
        java.lang.String str25 = proxy21.toString();
        java.net.Proxy.Type type26 = proxy21.type();
        okHttpClient9.proxy = proxy21;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache29 = okHttpClient28.okResponseCache();
        java.net.ResponseCache responseCache30 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient28.setResponseCache(responseCache30);
        java.net.ProxySelector proxySelector32 = okHttpClient28.getProxySelector();
        com.squareup.okhttp.OkAuthenticator okAuthenticator33 = okHttpClient28.getAuthenticator();
        boolean boolean34 = proxy21.equals((java.lang.Object) okHttpClient28);
        okHttpClient0.proxy = proxy21;
        java.net.ResponseCache responseCache36 = null;
        okHttpClient0.responseCache = responseCache36;
        com.squareup.okhttp.OkHttpClient okHttpClient38 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        boolean boolean39 = okHttpClient38.getFollowProtocolRedirects();
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(hostnameVerifier8);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNotNull(connectionPool15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNotNull(proxy21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + type24 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type24.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "DIRECT" + "'", str25, "DIRECT");
        org.junit.Assert.assertTrue("'" + type26 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type26.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(okResponseCache29);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNull(proxySelector32);
        org.junit.Assert.assertNull(okAuthenticator33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
    }

    @Test
    public void test07286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07286");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.ResponseCache responseCache5 = null;
        okHttpClient4.responseCache = responseCache5;
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = okHttpClient4.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient4.setFollowProtocolRedirects(false);
        java.net.ProxySelector proxySelector10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient9.setProxySelector(proxySelector10);
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache12 = okHttpClient9.okResponseCache();
        com.squareup.okhttp.ConnectionPool connectionPool13 = okHttpClient9.connectionPool;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache15 = okHttpClient14.okResponseCache();
        java.net.ResponseCache responseCache16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient14.setResponseCache(responseCache16);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory18 = okHttpClient14.sslSocketFactory;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory19 = okHttpClient14.sslSocketFactory;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier21 = null;
        okHttpClient20.hostnameVerifier = hostnameVerifier21;
        boolean boolean23 = okHttpClient20.getFollowProtocolRedirects();
        java.net.CookieHandler cookieHandler24 = okHttpClient20.cookieHandler;
        com.squareup.okhttp.OkHttpClient okHttpClient25 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier26 = null;
        okHttpClient25.hostnameVerifier = hostnameVerifier26;
        java.net.ResponseCache responseCache28 = null;
        okHttpClient25.responseCache = responseCache28;
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = okHttpClient25.hostnameVerifier;
        java.net.Proxy proxy31 = okHttpClient25.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool34 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient25.connectionPool = connectionPool34;
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient25.copyWithDefaults();
        java.net.ResponseCache responseCache37 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient36.setResponseCache(responseCache37);
        com.squareup.okhttp.OkAuthenticator okAuthenticator39 = okHttpClient36.authenticator;
        okHttpClient20.authenticator = okAuthenticator39;
        com.squareup.okhttp.OkHttpClient okHttpClient41 = okHttpClient14.setAuthenticator(okAuthenticator39);
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient9.setAuthenticator(okAuthenticator39);
        com.squareup.okhttp.ConnectionPool connectionPool43 = okHttpClient42.connectionPool;
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(hostnameVerifier7);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(okResponseCache12);
        org.junit.Assert.assertNull(connectionPool13);
        org.junit.Assert.assertNull(okResponseCache15);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNull(sSLSocketFactory18);
        org.junit.Assert.assertNull(sSLSocketFactory19);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(cookieHandler24);
        org.junit.Assert.assertNull(hostnameVerifier30);
        org.junit.Assert.assertNull(proxy31);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNotNull(okAuthenticator39);
        org.junit.Assert.assertNotNull(okHttpClient41);
        org.junit.Assert.assertNotNull(okHttpClient42);
        org.junit.Assert.assertNull(connectionPool43);
    }

    @Test
    public void test07287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07287");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.Proxy proxy8 = null;
        okHttpClient0.proxy = proxy8;
        java.util.Set<com.squareup.okhttp.Route> routeSet10 = okHttpClient0.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = null;
        okHttpClient11.hostnameVerifier = hostnameVerifier12;
        java.net.ResponseCache responseCache14 = null;
        okHttpClient11.responseCache = responseCache14;
        javax.net.ssl.HostnameVerifier hostnameVerifier16 = okHttpClient11.hostnameVerifier;
        java.net.Proxy proxy17 = okHttpClient11.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool20 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient11.connectionPool = connectionPool20;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient11.copyWithDefaults();
        java.net.ResponseCache responseCache23 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient22.setResponseCache(responseCache23);
        com.squareup.okhttp.OkAuthenticator okAuthenticator25 = okHttpClient22.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier27 = null;
        okHttpClient26.hostnameVerifier = hostnameVerifier27;
        java.net.ProxySelector proxySelector29 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient30 = okHttpClient26.setProxySelector(proxySelector29);
        java.net.CookieHandler cookieHandler31 = okHttpClient26.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient32 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier33 = null;
        okHttpClient32.hostnameVerifier = hostnameVerifier33;
        java.net.ResponseCache responseCache35 = null;
        okHttpClient32.responseCache = responseCache35;
        java.util.List<java.lang.String> strList37 = okHttpClient32.transports;
        com.squareup.okhttp.ConnectionPool connectionPool38 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient32.connectionPool = connectionPool38;
        java.net.Proxy proxy40 = null;
        okHttpClient32.proxy = proxy40;
        java.util.Set<com.squareup.okhttp.Route> routeSet42 = okHttpClient32.failedRoutes;
        okHttpClient26.failedRoutes = routeSet42;
        javax.net.ssl.HostnameVerifier hostnameVerifier44 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient45 = okHttpClient26.setHostnameVerifier(hostnameVerifier44);
        java.net.ProxySelector proxySelector46 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient47 = okHttpClient45.setProxySelector(proxySelector46);
        com.squareup.okhttp.OkHttpClient okHttpClient49 = okHttpClient45.setFollowProtocolRedirects(true);
        com.squareup.okhttp.OkHttpClient okHttpClient50 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool51 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient50.connectionPool = connectionPool51;
        com.squareup.okhttp.OkHttpClient okHttpClient53 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier54 = null;
        okHttpClient53.hostnameVerifier = hostnameVerifier54;
        java.net.ResponseCache responseCache56 = null;
        okHttpClient53.responseCache = responseCache56;
        java.util.List<java.lang.String> strList58 = okHttpClient53.transports;
        com.squareup.okhttp.ConnectionPool connectionPool59 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient53.connectionPool = connectionPool59;
        com.squareup.okhttp.OkHttpClient okHttpClient61 = okHttpClient50.setConnectionPool(connectionPool59);
        java.net.Proxy proxy62 = okHttpClient61.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient63 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool64 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient63.connectionPool = connectionPool64;
        int int66 = connectionPool64.getSpdyConnectionCount();
        okHttpClient61.connectionPool = connectionPool64;
        com.squareup.okhttp.OkHttpClient okHttpClient68 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier69 = null;
        okHttpClient68.hostnameVerifier = hostnameVerifier69;
        java.net.ResponseCache responseCache71 = null;
        okHttpClient68.responseCache = responseCache71;
        javax.net.ssl.HostnameVerifier hostnameVerifier73 = okHttpClient68.hostnameVerifier;
        java.net.Proxy proxy74 = okHttpClient68.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool77 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient68.connectionPool = connectionPool77;
        com.squareup.okhttp.OkHttpClient okHttpClient79 = okHttpClient68.copyWithDefaults();
        java.net.ResponseCache responseCache80 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient81 = okHttpClient79.setResponseCache(responseCache80);
        com.squareup.okhttp.OkAuthenticator okAuthenticator82 = okHttpClient79.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient83 = okHttpClient61.setAuthenticator(okAuthenticator82);
        com.squareup.okhttp.OkHttpClient okHttpClient84 = okHttpClient45.setAuthenticator(okAuthenticator82);
        com.squareup.okhttp.OkHttpClient okHttpClient85 = okHttpClient22.setAuthenticator(okAuthenticator82);
        com.squareup.okhttp.OkHttpClient okHttpClient86 = okHttpClient0.setAuthenticator(okAuthenticator82);
        com.squareup.okhttp.OkAuthenticator okAuthenticator87 = okHttpClient0.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient88 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        boolean boolean89 = okHttpClient0.followProtocolRedirects;
        java.net.Proxy proxy90 = okHttpClient0.getProxy();
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNotNull(routeSet10);
        org.junit.Assert.assertNull(hostnameVerifier16);
        org.junit.Assert.assertNull(proxy17);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNotNull(okAuthenticator25);
        org.junit.Assert.assertNotNull(okHttpClient30);
        org.junit.Assert.assertNull(cookieHandler31);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(connectionPool38);
        org.junit.Assert.assertNotNull(routeSet42);
        org.junit.Assert.assertNotNull(okHttpClient45);
        org.junit.Assert.assertNotNull(okHttpClient47);
        org.junit.Assert.assertNotNull(okHttpClient49);
        org.junit.Assert.assertNotNull(connectionPool51);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNotNull(connectionPool59);
        org.junit.Assert.assertNotNull(okHttpClient61);
        org.junit.Assert.assertNull(proxy62);
        org.junit.Assert.assertNotNull(connectionPool64);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNull(hostnameVerifier73);
        org.junit.Assert.assertNull(proxy74);
        org.junit.Assert.assertNotNull(okHttpClient79);
        org.junit.Assert.assertNotNull(okHttpClient81);
        org.junit.Assert.assertNotNull(okAuthenticator82);
        org.junit.Assert.assertNotNull(okHttpClient83);
        org.junit.Assert.assertNotNull(okHttpClient84);
        org.junit.Assert.assertNotNull(okHttpClient85);
        org.junit.Assert.assertNotNull(okHttpClient86);
        org.junit.Assert.assertNotNull(okAuthenticator87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNull(proxy90);
    }

    @Test
    public void test07288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07288");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.CookieHandler cookieHandler5 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = null;
        okHttpClient6.hostnameVerifier = hostnameVerifier7;
        java.net.ResponseCache responseCache9 = null;
        okHttpClient6.responseCache = responseCache9;
        java.util.List<java.lang.String> strList11 = okHttpClient6.transports;
        com.squareup.okhttp.ConnectionPool connectionPool12 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient6.connectionPool = connectionPool12;
        java.net.Proxy proxy14 = null;
        okHttpClient6.proxy = proxy14;
        java.util.Set<com.squareup.okhttp.Route> routeSet16 = okHttpClient6.failedRoutes;
        okHttpClient0.failedRoutes = routeSet16;
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient0.setHostnameVerifier(hostnameVerifier18);
        java.net.ProxySelector proxySelector20 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient19.setProxySelector(proxySelector20);
        java.net.ResponseCache responseCache22 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient19.setResponseCache(responseCache22);
        com.squareup.okhttp.Route[] routeArray24 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet25 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet25, routeArray24);
        okHttpClient23.failedRoutes = routeSet25;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory28 = okHttpClient23.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient23.copyWithDefaults();
        boolean boolean30 = okHttpClient23.followProtocolRedirects;
        java.net.ResponseCache responseCache31 = okHttpClient23.responseCache;
        com.squareup.okhttp.ConnectionPool connectionPool32 = okHttpClient23.connectionPool;
        com.squareup.okhttp.OkHttpClient okHttpClient33 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier34 = null;
        okHttpClient33.hostnameVerifier = hostnameVerifier34;
        java.net.ResponseCache responseCache36 = null;
        okHttpClient33.responseCache = responseCache36;
        java.util.List<java.lang.String> strList38 = okHttpClient33.transports;
        com.squareup.okhttp.ConnectionPool connectionPool39 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient33.connectionPool = connectionPool39;
        java.net.Proxy proxy41 = null;
        okHttpClient33.proxy = proxy41;
        java.util.Set<com.squareup.okhttp.Route> routeSet43 = okHttpClient33.failedRoutes;
        java.util.Set<com.squareup.okhttp.Route> routeSet44 = okHttpClient33.failedRoutes;
        okHttpClient23.failedRoutes = routeSet44;
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNotNull(routeSet16);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertNotNull(routeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(sSLSocketFactory28);
        org.junit.Assert.assertNotNull(okHttpClient29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(responseCache31);
        org.junit.Assert.assertNull(connectionPool32);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNotNull(connectionPool39);
        org.junit.Assert.assertNotNull(routeSet43);
        org.junit.Assert.assertNotNull(routeSet44);
    }

    @Test
    public void test07289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07289");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache8 = okHttpClient7.okResponseCache();
        java.net.ResponseCache responseCache9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient7.setResponseCache(responseCache9);
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        okHttpClient7.transports = strList13;
        okHttpClient0.transports = strList13;
        java.util.Set<com.squareup.okhttp.Route> routeSet17 = okHttpClient0.failedRoutes;
        java.net.CookieHandler cookieHandler18 = null;
        okHttpClient0.cookieHandler = cookieHandler18;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        com.squareup.okhttp.OkHttpClient okHttpClient21 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool22 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient21.connectionPool = connectionPool22;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier25 = null;
        okHttpClient24.hostnameVerifier = hostnameVerifier25;
        java.net.ResponseCache responseCache27 = null;
        okHttpClient24.responseCache = responseCache27;
        java.util.List<java.lang.String> strList29 = okHttpClient24.transports;
        com.squareup.okhttp.ConnectionPool connectionPool30 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient24.connectionPool = connectionPool30;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient21.setConnectionPool(connectionPool30);
        com.squareup.okhttp.ConnectionPool connectionPool33 = okHttpClient32.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator34 = okHttpClient32.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool37 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient32.connectionPool = connectionPool37;
        java.net.ResponseCache responseCache39 = okHttpClient32.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory40 = okHttpClient32.sslSocketFactory;
        java.net.Proxy proxy41 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress42 = proxy41.address();
        com.squareup.okhttp.OkHttpClient okHttpClient43 = okHttpClient32.setProxy(proxy41);
        com.squareup.okhttp.OkHttpClient okHttpClient44 = new com.squareup.okhttp.OkHttpClient(okHttpClient43);
        com.squareup.okhttp.OkHttpClient okHttpClient45 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier46 = null;
        okHttpClient45.hostnameVerifier = hostnameVerifier46;
        java.net.ResponseCache responseCache48 = null;
        okHttpClient45.responseCache = responseCache48;
        java.util.List<java.lang.String> strList50 = okHttpClient45.transports;
        com.squareup.okhttp.ConnectionPool connectionPool51 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient45.connectionPool = connectionPool51;
        com.squareup.okhttp.OkHttpClient okHttpClient53 = okHttpClient45.copyWithDefaults();
        java.net.ProxySelector proxySelector54 = okHttpClient53.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory55 = okHttpClient53.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient56 = okHttpClient43.setSSLSocketFactory(sSLSocketFactory55);
        java.lang.String[] strArray57 = sSLSocketFactory55.getSupportedCipherSuites();
        java.lang.String[] strArray58 = sSLSocketFactory55.getSupportedCipherSuites();
        java.lang.String[] strArray59 = sSLSocketFactory55.getSupportedCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient60 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory55);
        java.lang.String[] strArray61 = sSLSocketFactory55.getSupportedCipherSuites();
        java.net.Socket socket62 = sSLSocketFactory55.createSocket();
        java.lang.String[] strArray63 = sSLSocketFactory55.getSupportedCipherSuites();
        java.net.InetAddress inetAddress64 = null;
        java.net.InetAddress inetAddress66 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket68 = sSLSocketFactory55.createSocket(inetAddress64, (int) (byte) 10, inetAddress66, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.net.BindException; message: Permission denied (Bind failed)");
        } catch (java.net.BindException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNull(okResponseCache8);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(routeSet17);
        org.junit.Assert.assertNotNull(connectionPool22);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(connectionPool30);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertNotNull(connectionPool33);
        org.junit.Assert.assertNull(okAuthenticator34);
        org.junit.Assert.assertNull(responseCache39);
        org.junit.Assert.assertNull(sSLSocketFactory40);
        org.junit.Assert.assertNotNull(proxy41);
        org.junit.Assert.assertNull(socketAddress42);
        org.junit.Assert.assertNotNull(okHttpClient43);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNotNull(connectionPool51);
        org.junit.Assert.assertNotNull(okHttpClient53);
// flaky:         org.junit.Assert.assertNull(proxySelector54);
        org.junit.Assert.assertNotNull(sSLSocketFactory55);
        org.junit.Assert.assertNotNull(okHttpClient56);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(okHttpClient60);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(socket62);
        org.junit.Assert.assertEquals(socket62.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(strArray63);
    }

    @Test
    public void test07290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07290");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.Proxy proxy8 = null;
        okHttpClient0.proxy = proxy8;
        boolean boolean10 = okHttpClient0.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient0.setFollowProtocolRedirects(true);
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = null;
        okHttpClient13.hostnameVerifier = hostnameVerifier14;
        java.net.ResponseCache responseCache16 = null;
        okHttpClient13.responseCache = responseCache16;
        java.util.List<java.lang.String> strList18 = okHttpClient13.transports;
        com.squareup.okhttp.ConnectionPool connectionPool19 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient13.connectionPool = connectionPool19;
        com.squareup.okhttp.ConnectionPool connectionPool21 = okHttpClient13.connectionPool;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient0.setConnectionPool(connectionPool21);
        com.squareup.okhttp.OkHttpClient okHttpClient23 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier24 = null;
        okHttpClient23.hostnameVerifier = hostnameVerifier24;
        java.net.ResponseCache responseCache26 = null;
        okHttpClient23.responseCache = responseCache26;
        java.util.List<java.lang.String> strList28 = okHttpClient23.transports;
        com.squareup.okhttp.ConnectionPool connectionPool29 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient23.connectionPool = connectionPool29;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient23.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient32 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier33 = null;
        okHttpClient32.hostnameVerifier = hostnameVerifier33;
        java.net.ResponseCache responseCache35 = null;
        okHttpClient32.responseCache = responseCache35;
        java.util.List<java.lang.String> strList37 = okHttpClient32.transports;
        com.squareup.okhttp.ConnectionPool connectionPool38 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient32.connectionPool = connectionPool38;
        com.squareup.okhttp.OkHttpClient okHttpClient40 = okHttpClient32.copyWithDefaults();
        java.net.ProxySelector proxySelector41 = okHttpClient40.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory42 = okHttpClient40.getSslSocketFactory();
        okHttpClient23.sslSocketFactory = sSLSocketFactory42;
        com.squareup.okhttp.OkHttpClient okHttpClient44 = okHttpClient22.setSSLSocketFactory(sSLSocketFactory42);
        java.lang.String[] strArray45 = sSLSocketFactory42.getSupportedCipherSuites();
        java.net.Socket socket46 = sSLSocketFactory42.createSocket();
        java.net.InetAddress inetAddress47 = null;
        java.net.InetAddress inetAddress49 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket51 = sSLSocketFactory42.createSocket(inetAddress47, (int) '4', inetAddress49, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: port out of range:-1");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(connectionPool19);
        org.junit.Assert.assertNotNull(connectionPool21);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNotNull(connectionPool29);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(connectionPool38);
        org.junit.Assert.assertNotNull(okHttpClient40);
// flaky:         org.junit.Assert.assertNull(proxySelector41);
        org.junit.Assert.assertNotNull(sSLSocketFactory42);
        org.junit.Assert.assertNotNull(okHttpClient44);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(socket46);
        org.junit.Assert.assertEquals(socket46.toString(), "Socket[unconnected]");
    }

    @Test
    public void test07291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07291");
        java.net.Proxy proxy0 = java.net.Proxy.NO_PROXY;
        boolean boolean2 = proxy0.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type3 = proxy0.type();
        java.net.SocketAddress socketAddress4 = proxy0.address();
        com.squareup.okhttp.OkHttpClient okHttpClient5 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier6 = null;
        okHttpClient5.hostnameVerifier = hostnameVerifier6;
        java.net.ResponseCache responseCache8 = null;
        okHttpClient5.responseCache = responseCache8;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache10 = okHttpClient5.okResponseCache();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient5.setSSLSocketFactory(sSLSocketFactory11);
        boolean boolean13 = proxy0.equals((java.lang.Object) okHttpClient5);
        com.squareup.okhttp.OkHttpClient okHttpClient14 = new com.squareup.okhttp.OkHttpClient(okHttpClient5);
        javax.net.ssl.HostnameVerifier hostnameVerifier15 = okHttpClient5.hostnameVerifier;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory16 = okHttpClient5.sslSocketFactory;
        com.squareup.okhttp.OkAuthenticator okAuthenticator17 = okHttpClient5.authenticator;
        java.net.CookieHandler cookieHandler18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient5.setCookieHandler(cookieHandler18);
        com.squareup.okhttp.ConnectionPool connectionPool20 = okHttpClient19.connectionPool;
        org.junit.Assert.assertNotNull(proxy0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + type3 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type3.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress4);
        org.junit.Assert.assertNull(okResponseCache10);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(hostnameVerifier15);
        org.junit.Assert.assertNull(sSLSocketFactory16);
        org.junit.Assert.assertNull(okAuthenticator17);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNull(connectionPool20);
    }

    @Test
    public void test07292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07292");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.ResponseCache responseCache5 = null;
        okHttpClient4.responseCache = responseCache5;
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = okHttpClient4.hostnameVerifier;
        java.net.ProxySelector proxySelector8 = okHttpClient4.getProxySelector();
        java.net.ResponseCache responseCache9 = null;
        okHttpClient4.responseCache = responseCache9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.OkHttpClient okHttpClient12 = new com.squareup.okhttp.OkHttpClient(okHttpClient11);
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = null;
        okHttpClient13.hostnameVerifier = hostnameVerifier14;
        java.net.ResponseCache responseCache16 = null;
        okHttpClient13.responseCache = responseCache16;
        java.util.List<java.lang.String> strList18 = okHttpClient13.transports;
        java.net.Proxy proxy19 = java.net.Proxy.NO_PROXY;
        boolean boolean21 = proxy19.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type22 = proxy19.type();
        java.net.SocketAddress socketAddress23 = proxy19.address();
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient13.setProxy(proxy19);
        java.util.Set<com.squareup.okhttp.Route> routeSet25 = okHttpClient13.failedRoutes;
        okHttpClient12.failedRoutes = routeSet25;
        okHttpClient4.failedRoutes = routeSet25;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier29 = null;
        okHttpClient28.hostnameVerifier = hostnameVerifier29;
        java.net.ResponseCache responseCache31 = null;
        okHttpClient28.responseCache = responseCache31;
        java.util.List<java.lang.String> strList33 = okHttpClient28.transports;
        com.squareup.okhttp.ConnectionPool connectionPool34 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient28.connectionPool = connectionPool34;
        java.net.CookieHandler cookieHandler36 = okHttpClient28.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache37 = okHttpClient28.okResponseCache();
        java.net.CookieHandler cookieHandler38 = okHttpClient28.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient39 = new com.squareup.okhttp.OkHttpClient(okHttpClient28);
        java.net.Proxy proxy40 = java.net.Proxy.NO_PROXY;
        boolean boolean42 = proxy40.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type43 = proxy40.type();
        java.net.SocketAddress socketAddress44 = proxy40.address();
        com.squareup.okhttp.OkHttpClient okHttpClient45 = okHttpClient28.setProxy(proxy40);
        boolean boolean46 = okHttpClient45.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient48 = okHttpClient45.setFollowProtocolRedirects(false);
        com.squareup.okhttp.OkHttpClient okHttpClient49 = okHttpClient48.copyWithDefaults();
        java.net.Proxy proxy50 = okHttpClient48.getProxy();
        java.net.Proxy.Type type51 = proxy50.type();
        okHttpClient4.proxy = proxy50;
        com.squareup.okhttp.ConnectionPool connectionPool55 = new com.squareup.okhttp.ConnectionPool((int) (byte) 100, (long) (byte) -1);
        int int56 = connectionPool55.getSpdyConnectionCount();
        connectionPool55.evictAll();
        okHttpClient4.connectionPool = connectionPool55;
        com.squareup.okhttp.Connection connection59 = null;
        // The following exception was thrown during execution in test generation
        try {
            connectionPool55.recycle(connection59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(hostnameVerifier7);
        org.junit.Assert.assertNull(proxySelector8);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(proxy19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + type22 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type22.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress23);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNotNull(routeSet25);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNotNull(connectionPool34);
        org.junit.Assert.assertNull(cookieHandler36);
        org.junit.Assert.assertNull(okResponseCache37);
        org.junit.Assert.assertNull(cookieHandler38);
        org.junit.Assert.assertNotNull(proxy40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + type43 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type43.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress44);
        org.junit.Assert.assertNotNull(okHttpClient45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(okHttpClient48);
        org.junit.Assert.assertNotNull(okHttpClient49);
        org.junit.Assert.assertNotNull(proxy50);
        org.junit.Assert.assertTrue("'" + type51 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type51.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
    }

    @Test
    public void test07293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07293");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory5 = null;
        okHttpClient0.sslSocketFactory = sSLSocketFactory5;
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = okHttpClient0.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient0.copyWithDefaults();
        java.lang.Class<?> wildcardClass9 = okHttpClient0.getClass();
        org.junit.Assert.assertNull(hostnameVerifier7);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test07294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07294");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.CookieHandler cookieHandler8 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache9 = okHttpClient0.okResponseCache();
        java.net.CookieHandler cookieHandler10 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = okHttpClient11.hostnameVerifier;
        java.util.List<java.lang.String> strList13 = okHttpClient11.transports;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient11.setSSLSocketFactory(sSLSocketFactory14);
        com.squareup.okhttp.ConnectionPool connectionPool16 = okHttpClient15.connectionPool;
        java.net.ProxySelector proxySelector17 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient15.setProxySelector(proxySelector17);
        java.net.ProxySelector proxySelector19 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient18.setProxySelector(proxySelector19);
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient18.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient(okHttpClient18);
        com.squareup.okhttp.OkHttpClient okHttpClient23 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool24 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient23.connectionPool = connectionPool24;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier27 = null;
        okHttpClient26.hostnameVerifier = hostnameVerifier27;
        java.net.ResponseCache responseCache29 = null;
        okHttpClient26.responseCache = responseCache29;
        java.util.List<java.lang.String> strList31 = okHttpClient26.transports;
        com.squareup.okhttp.ConnectionPool connectionPool32 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient26.connectionPool = connectionPool32;
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient23.setConnectionPool(connectionPool32);
        java.net.ResponseCache responseCache35 = okHttpClient23.responseCache;
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient23.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient37 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier38 = null;
        okHttpClient37.hostnameVerifier = hostnameVerifier38;
        java.net.ResponseCache responseCache40 = null;
        okHttpClient37.responseCache = responseCache40;
        java.util.List<java.lang.String> strList42 = okHttpClient37.transports;
        com.squareup.okhttp.ConnectionPool connectionPool43 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient37.connectionPool = connectionPool43;
        com.squareup.okhttp.OkHttpClient okHttpClient45 = okHttpClient37.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient46 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier47 = null;
        okHttpClient46.hostnameVerifier = hostnameVerifier47;
        java.net.ResponseCache responseCache49 = null;
        okHttpClient46.responseCache = responseCache49;
        java.util.List<java.lang.String> strList51 = okHttpClient46.transports;
        com.squareup.okhttp.ConnectionPool connectionPool52 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient46.connectionPool = connectionPool52;
        com.squareup.okhttp.OkHttpClient okHttpClient54 = okHttpClient46.copyWithDefaults();
        java.net.ProxySelector proxySelector55 = okHttpClient54.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory56 = okHttpClient54.getSslSocketFactory();
        okHttpClient37.sslSocketFactory = sSLSocketFactory56;
        okHttpClient36.sslSocketFactory = sSLSocketFactory56;
        java.net.ProxySelector proxySelector59 = okHttpClient36.getProxySelector();
        javax.net.ssl.HostnameVerifier hostnameVerifier60 = okHttpClient36.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient61 = okHttpClient22.setHostnameVerifier(hostnameVerifier60);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNull(cookieHandler8);
        org.junit.Assert.assertNull(okResponseCache9);
        org.junit.Assert.assertNull(cookieHandler10);
        org.junit.Assert.assertNull(hostnameVerifier12);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNull(connectionPool16);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNotNull(connectionPool24);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNotNull(connectionPool32);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertNull(responseCache35);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNotNull(connectionPool43);
        org.junit.Assert.assertNotNull(okHttpClient45);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNotNull(connectionPool52);
        org.junit.Assert.assertNotNull(okHttpClient54);
// flaky:         org.junit.Assert.assertNull(proxySelector55);
        org.junit.Assert.assertNotNull(sSLSocketFactory56);
// flaky:         org.junit.Assert.assertNull(proxySelector59);
        org.junit.Assert.assertNotNull(hostnameVerifier60);
        org.junit.Assert.assertNotNull(okHttpClient61);
    }

    @Test
    public void test07295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07295");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        javax.net.ssl.HostnameVerifier hostnameVerifier6 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier6;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache8 = okHttpClient0.okResponseCache();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory9 = okHttpClient0.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient10 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier11 = null;
        okHttpClient10.hostnameVerifier = hostnameVerifier11;
        java.net.ResponseCache responseCache13 = null;
        okHttpClient10.responseCache = responseCache13;
        javax.net.ssl.HostnameVerifier hostnameVerifier15 = okHttpClient10.hostnameVerifier;
        java.net.Proxy proxy16 = okHttpClient10.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool19 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient10.connectionPool = connectionPool19;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient10.copyWithDefaults();
        java.net.Proxy proxy22 = okHttpClient21.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier23 = okHttpClient21.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient0.setHostnameVerifier(hostnameVerifier23);
        java.util.List<java.lang.String> strList25 = okHttpClient0.transports;
        java.net.ResponseCache responseCache26 = okHttpClient0.responseCache;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient0.setFollowProtocolRedirects(true);
        com.squareup.okhttp.OkAuthenticator okAuthenticator29 = okHttpClient0.getAuthenticator();
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNull(okResponseCache8);
        org.junit.Assert.assertNull(sSLSocketFactory9);
        org.junit.Assert.assertNull(hostnameVerifier15);
        org.junit.Assert.assertNull(proxy16);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNull(proxy22);
        org.junit.Assert.assertNotNull(hostnameVerifier23);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNull(responseCache26);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNull(okAuthenticator29);
    }

    @Test
    public void test07296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07296");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.CookieHandler cookieHandler5 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = null;
        okHttpClient6.hostnameVerifier = hostnameVerifier7;
        java.net.ResponseCache responseCache9 = null;
        okHttpClient6.responseCache = responseCache9;
        java.util.List<java.lang.String> strList11 = okHttpClient6.transports;
        com.squareup.okhttp.ConnectionPool connectionPool12 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient6.connectionPool = connectionPool12;
        java.net.Proxy proxy14 = null;
        okHttpClient6.proxy = proxy14;
        java.util.Set<com.squareup.okhttp.Route> routeSet16 = okHttpClient6.failedRoutes;
        okHttpClient0.failedRoutes = routeSet16;
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient0.setHostnameVerifier(hostnameVerifier18);
        java.net.ProxySelector proxySelector20 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient19.setProxySelector(proxySelector20);
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient19.setFollowProtocolRedirects(true);
        com.squareup.okhttp.OkHttpClient okHttpClient24 = new com.squareup.okhttp.OkHttpClient(okHttpClient19);
        com.squareup.okhttp.OkHttpClient okHttpClient25 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier26 = null;
        okHttpClient25.hostnameVerifier = hostnameVerifier26;
        java.net.ResponseCache responseCache28 = null;
        okHttpClient25.responseCache = responseCache28;
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = okHttpClient25.hostnameVerifier;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory31 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient25.setSSLSocketFactory(sSLSocketFactory31);
        java.util.List<java.lang.String> strList33 = okHttpClient25.getTransports();
        com.squareup.okhttp.OkHttpClient okHttpClient34 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier35 = null;
        okHttpClient34.hostnameVerifier = hostnameVerifier35;
        java.net.ResponseCache responseCache37 = null;
        okHttpClient34.responseCache = responseCache37;
        javax.net.ssl.HostnameVerifier hostnameVerifier39 = okHttpClient34.hostnameVerifier;
        java.net.Proxy proxy40 = okHttpClient34.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool43 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient34.connectionPool = connectionPool43;
        boolean boolean45 = okHttpClient34.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient46 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier47 = null;
        okHttpClient46.hostnameVerifier = hostnameVerifier47;
        java.net.ResponseCache responseCache49 = null;
        okHttpClient46.responseCache = responseCache49;
        javax.net.ssl.HostnameVerifier hostnameVerifier51 = okHttpClient46.hostnameVerifier;
        java.net.Proxy proxy52 = okHttpClient46.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool55 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient46.connectionPool = connectionPool55;
        com.squareup.okhttp.OkHttpClient okHttpClient57 = okHttpClient46.copyWithDefaults();
        java.net.Proxy proxy58 = okHttpClient57.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier59 = okHttpClient57.getHostnameVerifier();
        okHttpClient34.hostnameVerifier = hostnameVerifier59;
        com.squareup.okhttp.OkHttpClient okHttpClient61 = okHttpClient25.setHostnameVerifier(hostnameVerifier59);
        okHttpClient24.hostnameVerifier = hostnameVerifier59;
        com.squareup.okhttp.OkHttpClient okHttpClient64 = okHttpClient24.setFollowProtocolRedirects(false);
        com.squareup.okhttp.OkHttpClient okHttpClient65 = okHttpClient64.copyWithDefaults();
        com.squareup.okhttp.OkAuthenticator okAuthenticator66 = okHttpClient64.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier67 = okHttpClient64.hostnameVerifier;
        java.net.CookieHandler cookieHandler68 = okHttpClient64.cookieHandler;
        com.squareup.okhttp.ConnectionPool connectionPool71 = new com.squareup.okhttp.ConnectionPool((int) (short) -1, 10L);
        com.squareup.okhttp.OkHttpClient okHttpClient72 = okHttpClient64.setConnectionPool(connectionPool71);
        com.squareup.okhttp.OkHttpClient okHttpClient73 = new com.squareup.okhttp.OkHttpClient(okHttpClient64);
        java.net.ResponseCache responseCache74 = okHttpClient64.responseCache;
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNotNull(routeSet16);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertNull(hostnameVerifier30);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNull(hostnameVerifier39);
        org.junit.Assert.assertNull(proxy40);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(hostnameVerifier51);
        org.junit.Assert.assertNull(proxy52);
        org.junit.Assert.assertNotNull(okHttpClient57);
        org.junit.Assert.assertNull(proxy58);
        org.junit.Assert.assertNotNull(hostnameVerifier59);
        org.junit.Assert.assertNotNull(okHttpClient61);
        org.junit.Assert.assertNotNull(okHttpClient64);
        org.junit.Assert.assertNotNull(okHttpClient65);
        org.junit.Assert.assertNull(okAuthenticator66);
        org.junit.Assert.assertNotNull(hostnameVerifier67);
        org.junit.Assert.assertNull(cookieHandler68);
        org.junit.Assert.assertNotNull(okHttpClient72);
        org.junit.Assert.assertNull(responseCache74);
    }

    @Test
    public void test07297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07297");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient0.copyWithDefaults();
        boolean boolean9 = okHttpClient8.getFollowProtocolRedirects();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory10 = okHttpClient8.sslSocketFactory;
        java.util.List<java.lang.String> strList11 = okHttpClient8.transports;
        java.net.Proxy proxy12 = okHttpClient8.proxy;
        java.net.ProxySelector proxySelector13 = okHttpClient8.getProxySelector();
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient8.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier16 = null;
        okHttpClient15.hostnameVerifier = hostnameVerifier16;
        java.net.ResponseCache responseCache18 = null;
        okHttpClient15.responseCache = responseCache18;
        java.util.List<java.lang.String> strList20 = okHttpClient15.transports;
        com.squareup.okhttp.ConnectionPool connectionPool21 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient15.connectionPool = connectionPool21;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory23 = okHttpClient15.getSslSocketFactory();
        java.net.CookieHandler cookieHandler24 = okHttpClient15.cookieHandler;
        com.squareup.okhttp.ConnectionPool connectionPool27 = new com.squareup.okhttp.ConnectionPool(10, 1L);
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient15.setConnectionPool(connectionPool27);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory29 = okHttpClient15.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient30 = okHttpClient15.copyWithDefaults();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory31 = okHttpClient30.getSslSocketFactory();
        okHttpClient14.sslSocketFactory = sSLSocketFactory31;
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(sSLSocketFactory10);
        org.junit.Assert.assertNotNull(strList11);
        org.junit.Assert.assertNull(proxy12);
// flaky:         org.junit.Assert.assertNull(proxySelector13);
        org.junit.Assert.assertNotNull(okHttpClient14);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(connectionPool21);
        org.junit.Assert.assertNull(sSLSocketFactory23);
        org.junit.Assert.assertNull(cookieHandler24);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNull(sSLSocketFactory29);
        org.junit.Assert.assertNotNull(okHttpClient30);
        org.junit.Assert.assertNotNull(sSLSocketFactory31);
    }

    @Test
    public void test07298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07298");
        java.net.Proxy proxy0 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress1 = proxy0.address();
        java.net.SocketAddress socketAddress2 = proxy0.address();
        java.lang.Object obj3 = null;
        boolean boolean4 = proxy0.equals(obj3);
        java.net.Proxy.Type type5 = proxy0.type();
        java.net.SocketAddress socketAddress6 = proxy0.address();
        java.lang.String str7 = proxy0.toString();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier9 = null;
        okHttpClient8.hostnameVerifier = hostnameVerifier9;
        java.net.ProxySelector proxySelector11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient8.setProxySelector(proxySelector11);
        java.net.ResponseCache responseCache13 = null;
        okHttpClient12.responseCache = responseCache13;
        javax.net.ssl.HostnameVerifier hostnameVerifier15 = okHttpClient12.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient12.setFollowProtocolRedirects(false);
        java.net.ProxySelector proxySelector18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient17.setProxySelector(proxySelector18);
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient19.copyWithDefaults();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory21 = okHttpClient20.sslSocketFactory;
        java.lang.String[] strArray22 = sSLSocketFactory21.getSupportedCipherSuites();
        java.net.Socket socket23 = sSLSocketFactory21.createSocket();
        java.net.Socket socket24 = sSLSocketFactory21.createSocket();
        boolean boolean25 = proxy0.equals((java.lang.Object) sSLSocketFactory21);
        java.lang.String str26 = proxy0.toString();
        org.junit.Assert.assertNotNull(proxy0);
        org.junit.Assert.assertNull(socketAddress1);
        org.junit.Assert.assertNull(socketAddress2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + type5 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type5.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "DIRECT" + "'", str7, "DIRECT");
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertNull(hostnameVerifier15);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNotNull(sSLSocketFactory21);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(socket23);
        org.junit.Assert.assertEquals(socket23.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(socket24);
        org.junit.Assert.assertEquals(socket24.toString(), "Socket[unconnected]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "DIRECT" + "'", str26, "DIRECT");
    }

    @Test
    public void test07299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07299");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory6 = okHttpClient0.sslSocketFactory;
        java.net.CookieHandler cookieHandler7 = okHttpClient0.cookieHandler;
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = okHttpClient0.hostnameVerifier;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache9 = okHttpClient0.okResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient10 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool11 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient10.connectionPool = connectionPool11;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = null;
        okHttpClient13.hostnameVerifier = hostnameVerifier14;
        java.net.ResponseCache responseCache16 = null;
        okHttpClient13.responseCache = responseCache16;
        java.util.List<java.lang.String> strList18 = okHttpClient13.transports;
        com.squareup.okhttp.ConnectionPool connectionPool19 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient13.connectionPool = connectionPool19;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient10.setConnectionPool(connectionPool19);
        com.squareup.okhttp.ConnectionPool connectionPool22 = okHttpClient21.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator23 = okHttpClient21.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool26 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient21.connectionPool = connectionPool26;
        java.net.ResponseCache responseCache28 = okHttpClient21.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory29 = okHttpClient21.sslSocketFactory;
        java.net.Proxy proxy30 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress31 = proxy30.address();
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient21.setProxy(proxy30);
        com.squareup.okhttp.OkHttpClient okHttpClient33 = new com.squareup.okhttp.OkHttpClient(okHttpClient32);
        com.squareup.okhttp.OkHttpClient okHttpClient34 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier35 = null;
        okHttpClient34.hostnameVerifier = hostnameVerifier35;
        boolean boolean37 = okHttpClient34.getFollowProtocolRedirects();
        java.net.CookieHandler cookieHandler38 = okHttpClient34.cookieHandler;
        com.squareup.okhttp.OkHttpClient okHttpClient39 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier40 = null;
        okHttpClient39.hostnameVerifier = hostnameVerifier40;
        java.net.ResponseCache responseCache42 = null;
        okHttpClient39.responseCache = responseCache42;
        javax.net.ssl.HostnameVerifier hostnameVerifier44 = okHttpClient39.hostnameVerifier;
        java.net.Proxy proxy45 = okHttpClient39.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool48 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient39.connectionPool = connectionPool48;
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient39.copyWithDefaults();
        java.net.ResponseCache responseCache51 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient52 = okHttpClient50.setResponseCache(responseCache51);
        com.squareup.okhttp.OkAuthenticator okAuthenticator53 = okHttpClient50.authenticator;
        okHttpClient34.authenticator = okAuthenticator53;
        okHttpClient33.authenticator = okAuthenticator53;
        com.squareup.okhttp.OkHttpClient okHttpClient56 = okHttpClient0.setAuthenticator(okAuthenticator53);
        com.squareup.okhttp.OkHttpClient okHttpClient57 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier58 = null;
        okHttpClient57.hostnameVerifier = hostnameVerifier58;
        java.net.ResponseCache responseCache60 = null;
        okHttpClient57.responseCache = responseCache60;
        javax.net.ssl.HostnameVerifier hostnameVerifier62 = okHttpClient57.hostnameVerifier;
        java.net.Proxy proxy63 = okHttpClient57.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool66 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient57.connectionPool = connectionPool66;
        com.squareup.okhttp.OkHttpClient okHttpClient68 = okHttpClient57.copyWithDefaults();
        java.net.ResponseCache responseCache69 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient70 = okHttpClient68.setResponseCache(responseCache69);
        com.squareup.okhttp.OkHttpClient okHttpClient72 = okHttpClient70.setFollowProtocolRedirects(false);
        java.util.List<java.lang.String> strList73 = okHttpClient70.transports;
        com.squareup.okhttp.OkHttpClient.DEFAULT_TRANSPORTS = strList73;
        okHttpClient0.transports = strList73;
        com.squareup.okhttp.OkHttpClient.DEFAULT_TRANSPORTS = strList73;
        com.squareup.okhttp.OkHttpClient.DEFAULT_TRANSPORTS = strList73;
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(sSLSocketFactory6);
        org.junit.Assert.assertNull(cookieHandler7);
        org.junit.Assert.assertNull(hostnameVerifier8);
        org.junit.Assert.assertNull(okResponseCache9);
        org.junit.Assert.assertNotNull(connectionPool11);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(connectionPool19);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNotNull(connectionPool22);
        org.junit.Assert.assertNull(okAuthenticator23);
        org.junit.Assert.assertNull(responseCache28);
        org.junit.Assert.assertNull(sSLSocketFactory29);
        org.junit.Assert.assertNotNull(proxy30);
        org.junit.Assert.assertNull(socketAddress31);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(cookieHandler38);
        org.junit.Assert.assertNull(hostnameVerifier44);
        org.junit.Assert.assertNull(proxy45);
        org.junit.Assert.assertNotNull(okHttpClient50);
        org.junit.Assert.assertNotNull(okHttpClient52);
        org.junit.Assert.assertNotNull(okAuthenticator53);
        org.junit.Assert.assertNotNull(okHttpClient56);
        org.junit.Assert.assertNull(hostnameVerifier62);
        org.junit.Assert.assertNull(proxy63);
        org.junit.Assert.assertNotNull(okHttpClient68);
        org.junit.Assert.assertNotNull(okHttpClient70);
        org.junit.Assert.assertNotNull(okHttpClient72);
        org.junit.Assert.assertNotNull(strList73);
    }

    @Test
    public void test07300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07300");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.Proxy proxy8 = null;
        okHttpClient0.proxy = proxy8;
        boolean boolean10 = okHttpClient0.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        java.util.Set<com.squareup.okhttp.Route> routeSet12 = okHttpClient0.failedRoutes;
        java.util.Set<com.squareup.okhttp.Route> routeSet13 = okHttpClient0.failedRoutes;
        com.squareup.okhttp.ConnectionPool connectionPool14 = okHttpClient0.getConnectionPool();
        int int15 = connectionPool14.getConnectionCount();
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(routeSet12);
        org.junit.Assert.assertNotNull(routeSet13);
        org.junit.Assert.assertNotNull(connectionPool14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
    }

    @Test
    public void test07301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07301");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.CookieHandler cookieHandler5 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = null;
        okHttpClient6.hostnameVerifier = hostnameVerifier7;
        java.net.ResponseCache responseCache9 = null;
        okHttpClient6.responseCache = responseCache9;
        java.util.List<java.lang.String> strList11 = okHttpClient6.transports;
        com.squareup.okhttp.ConnectionPool connectionPool12 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient6.connectionPool = connectionPool12;
        java.net.Proxy proxy14 = null;
        okHttpClient6.proxy = proxy14;
        java.util.Set<com.squareup.okhttp.Route> routeSet16 = okHttpClient6.failedRoutes;
        okHttpClient0.failedRoutes = routeSet16;
        java.net.ProxySelector proxySelector18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient0.setProxySelector(proxySelector18);
        com.squareup.okhttp.ConnectionPool connectionPool22 = new com.squareup.okhttp.ConnectionPool((int) (short) 10, (long) '4');
        okHttpClient0.connectionPool = connectionPool22;
        boolean boolean24 = okHttpClient0.getFollowProtocolRedirects();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory25 = okHttpClient0.getSslSocketFactory();
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNotNull(routeSet16);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(sSLSocketFactory25);
    }

    @Test
    public void test07302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07302");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient4.copyWithDefaults();
        java.net.ResponseCache responseCache6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient4.setResponseCache(responseCache6);
        com.squareup.okhttp.ConnectionPool connectionPool8 = okHttpClient7.connectionPool;
        java.net.CookieHandler cookieHandler9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient7.setCookieHandler(cookieHandler9);
        com.squareup.okhttp.ConnectionPool connectionPool11 = okHttpClient10.getConnectionPool();
        com.squareup.okhttp.OkHttpClient okHttpClient12 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache13 = okHttpClient12.okResponseCache();
        java.net.ResponseCache responseCache14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient12.setResponseCache(responseCache14);
        java.net.CookieHandler cookieHandler16 = okHttpClient12.cookieHandler;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = null;
        okHttpClient17.hostnameVerifier = hostnameVerifier18;
        java.net.ResponseCache responseCache20 = null;
        okHttpClient17.responseCache = responseCache20;
        javax.net.ssl.HostnameVerifier hostnameVerifier22 = okHttpClient17.hostnameVerifier;
        java.net.Proxy proxy23 = okHttpClient17.getProxy();
        java.net.CookieHandler cookieHandler24 = null;
        okHttpClient17.cookieHandler = cookieHandler24;
        okHttpClient17.followProtocolRedirects = true;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier29 = null;
        okHttpClient28.hostnameVerifier = hostnameVerifier29;
        java.net.ResponseCache responseCache31 = null;
        okHttpClient28.responseCache = responseCache31;
        javax.net.ssl.HostnameVerifier hostnameVerifier33 = okHttpClient28.hostnameVerifier;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory34 = okHttpClient28.sslSocketFactory;
        java.net.CookieHandler cookieHandler35 = okHttpClient28.cookieHandler;
        javax.net.ssl.HostnameVerifier hostnameVerifier36 = okHttpClient28.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient37 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool38 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient37.connectionPool = connectionPool38;
        com.squareup.okhttp.OkAuthenticator okAuthenticator40 = null;
        okHttpClient37.authenticator = okAuthenticator40;
        java.util.List<java.lang.String> strList42 = okHttpClient37.transports;
        java.net.ResponseCache responseCache43 = null;
        okHttpClient37.responseCache = responseCache43;
        com.squareup.okhttp.OkHttpClient okHttpClient45 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier46 = null;
        okHttpClient45.hostnameVerifier = hostnameVerifier46;
        java.net.ResponseCache responseCache48 = null;
        okHttpClient45.responseCache = responseCache48;
        javax.net.ssl.HostnameVerifier hostnameVerifier50 = okHttpClient45.hostnameVerifier;
        java.net.Proxy proxy51 = okHttpClient45.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool54 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient45.connectionPool = connectionPool54;
        com.squareup.okhttp.OkHttpClient okHttpClient56 = okHttpClient45.copyWithDefaults();
        java.net.Proxy proxy57 = okHttpClient56.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier58 = okHttpClient56.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient59 = okHttpClient37.setHostnameVerifier(hostnameVerifier58);
        com.squareup.okhttp.OkHttpClient okHttpClient60 = okHttpClient28.setHostnameVerifier(hostnameVerifier58);
        okHttpClient17.hostnameVerifier = hostnameVerifier58;
        com.squareup.okhttp.OkHttpClient okHttpClient62 = okHttpClient12.setHostnameVerifier(hostnameVerifier58);
        java.net.Proxy proxy63 = okHttpClient62.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient64 = new com.squareup.okhttp.OkHttpClient(okHttpClient62);
        java.util.Set<com.squareup.okhttp.Route> routeSet65 = okHttpClient64.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient66 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier67 = null;
        okHttpClient66.hostnameVerifier = hostnameVerifier67;
        java.net.ResponseCache responseCache69 = null;
        okHttpClient66.responseCache = responseCache69;
        java.util.List<java.lang.String> strList71 = okHttpClient66.transports;
        com.squareup.okhttp.ConnectionPool connectionPool72 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient66.connectionPool = connectionPool72;
        java.net.Proxy proxy74 = null;
        okHttpClient66.proxy = proxy74;
        boolean boolean76 = okHttpClient66.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient77 = okHttpClient66.copyWithDefaults();
        java.net.CookieHandler cookieHandler78 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient79 = okHttpClient77.setCookieHandler(cookieHandler78);
        java.net.Proxy proxy80 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient81 = okHttpClient77.setProxy(proxy80);
        java.net.Proxy proxy82 = okHttpClient77.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient83 = okHttpClient64.setProxy(proxy82);
        okHttpClient10.proxy = proxy82;
        java.net.Proxy.Type type85 = proxy82.type();
        java.net.SocketAddress socketAddress86 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Proxy proxy87 = new java.net.Proxy(type85, socketAddress86);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: type DIRECT is not compatible with address null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNotNull(okHttpClient7);
        org.junit.Assert.assertNull(connectionPool8);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertNull(connectionPool11);
        org.junit.Assert.assertNull(okResponseCache13);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNull(cookieHandler16);
        org.junit.Assert.assertNull(hostnameVerifier22);
        org.junit.Assert.assertNull(proxy23);
        org.junit.Assert.assertNull(hostnameVerifier33);
        org.junit.Assert.assertNull(sSLSocketFactory34);
        org.junit.Assert.assertNull(cookieHandler35);
        org.junit.Assert.assertNull(hostnameVerifier36);
        org.junit.Assert.assertNotNull(connectionPool38);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNull(hostnameVerifier50);
        org.junit.Assert.assertNull(proxy51);
        org.junit.Assert.assertNotNull(okHttpClient56);
        org.junit.Assert.assertNull(proxy57);
        org.junit.Assert.assertNotNull(hostnameVerifier58);
        org.junit.Assert.assertNotNull(okHttpClient59);
        org.junit.Assert.assertNotNull(okHttpClient60);
        org.junit.Assert.assertNotNull(okHttpClient62);
        org.junit.Assert.assertNull(proxy63);
        org.junit.Assert.assertNotNull(routeSet65);
        org.junit.Assert.assertNull(strList71);
        org.junit.Assert.assertNotNull(connectionPool72);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(okHttpClient77);
        org.junit.Assert.assertNotNull(okHttpClient79);
        org.junit.Assert.assertNotNull(proxy80);
        org.junit.Assert.assertNotNull(okHttpClient81);
        org.junit.Assert.assertNotNull(proxy82);
        org.junit.Assert.assertNotNull(okHttpClient83);
        org.junit.Assert.assertTrue("'" + type85 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type85.equals(java.net.Proxy.Type.DIRECT));
    }

    @Test
    public void test07303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07303");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.ConnectionPool connectionPool12 = okHttpClient11.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator13 = okHttpClient11.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool16 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient11.connectionPool = connectionPool16;
        java.net.ResponseCache responseCache18 = okHttpClient11.responseCache;
        com.squareup.okhttp.ConnectionPool connectionPool21 = new com.squareup.okhttp.ConnectionPool((int) (byte) 0, 10L);
        okHttpClient11.connectionPool = connectionPool21;
        com.squareup.okhttp.ConnectionPool connectionPool25 = new com.squareup.okhttp.ConnectionPool((int) (byte) 10, 0L);
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient11.setConnectionPool(connectionPool25);
        java.net.ResponseCache responseCache27 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient26.setResponseCache(responseCache27);
        com.squareup.okhttp.OkHttpClient okHttpClient30 = okHttpClient28.setFollowProtocolRedirects(true);
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache31 = okHttpClient30.okResponseCache();
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNull(okAuthenticator13);
        org.junit.Assert.assertNull(responseCache18);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNotNull(okHttpClient30);
        org.junit.Assert.assertNull(okResponseCache31);
    }

    @Test
    public void test07304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07304");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.CookieHandler cookieHandler5 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = null;
        okHttpClient6.hostnameVerifier = hostnameVerifier7;
        java.net.ResponseCache responseCache9 = null;
        okHttpClient6.responseCache = responseCache9;
        java.util.List<java.lang.String> strList11 = okHttpClient6.transports;
        com.squareup.okhttp.ConnectionPool connectionPool12 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient6.connectionPool = connectionPool12;
        java.net.Proxy proxy14 = null;
        okHttpClient6.proxy = proxy14;
        java.util.Set<com.squareup.okhttp.Route> routeSet16 = okHttpClient6.failedRoutes;
        okHttpClient0.failedRoutes = routeSet16;
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient0.setHostnameVerifier(hostnameVerifier18);
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache20 = okHttpClient0.okResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator21 = okHttpClient0.getAuthenticator();
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient0.setFollowProtocolRedirects(true);
        java.net.CookieHandler cookieHandler24 = okHttpClient23.cookieHandler;
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient23.copyWithDefaults();
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNotNull(routeSet16);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNull(okResponseCache20);
        org.junit.Assert.assertNull(okAuthenticator21);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertNull(cookieHandler24);
        org.junit.Assert.assertNotNull(okHttpClient25);
    }

    @Test
    public void test07305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07305");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory6 = okHttpClient0.sslSocketFactory;
        java.net.CookieHandler cookieHandler7 = okHttpClient0.cookieHandler;
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = okHttpClient0.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool10 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient9.connectionPool = connectionPool10;
        com.squareup.okhttp.OkAuthenticator okAuthenticator12 = null;
        okHttpClient9.authenticator = okAuthenticator12;
        java.util.List<java.lang.String> strList14 = okHttpClient9.transports;
        java.net.ResponseCache responseCache15 = null;
        okHttpClient9.responseCache = responseCache15;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = null;
        okHttpClient17.hostnameVerifier = hostnameVerifier18;
        java.net.ResponseCache responseCache20 = null;
        okHttpClient17.responseCache = responseCache20;
        javax.net.ssl.HostnameVerifier hostnameVerifier22 = okHttpClient17.hostnameVerifier;
        java.net.Proxy proxy23 = okHttpClient17.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool26 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient17.connectionPool = connectionPool26;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient17.copyWithDefaults();
        java.net.Proxy proxy29 = okHttpClient28.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = okHttpClient28.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient9.setHostnameVerifier(hostnameVerifier30);
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient0.setHostnameVerifier(hostnameVerifier30);
        java.net.Proxy proxy33 = okHttpClient32.proxy;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory34 = okHttpClient32.sslSocketFactory;
        com.squareup.okhttp.OkHttpClient okHttpClient35 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier36 = null;
        okHttpClient35.hostnameVerifier = hostnameVerifier36;
        java.net.ResponseCache responseCache38 = null;
        okHttpClient35.responseCache = responseCache38;
        java.util.List<java.lang.String> strList40 = okHttpClient35.transports;
        com.squareup.okhttp.ConnectionPool connectionPool41 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient35.connectionPool = connectionPool41;
        com.squareup.okhttp.ConnectionPool connectionPool43 = okHttpClient35.connectionPool;
        boolean boolean44 = okHttpClient35.getFollowProtocolRedirects();
        com.squareup.okhttp.ConnectionPool connectionPool45 = okHttpClient35.getConnectionPool();
        com.squareup.okhttp.OkHttpClient okHttpClient46 = okHttpClient32.setConnectionPool(connectionPool45);
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache47 = okHttpClient46.okResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient48 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier49 = null;
        okHttpClient48.hostnameVerifier = hostnameVerifier49;
        java.net.ResponseCache responseCache51 = null;
        okHttpClient48.responseCache = responseCache51;
        javax.net.ssl.HostnameVerifier hostnameVerifier53 = okHttpClient48.hostnameVerifier;
        java.net.Proxy proxy54 = okHttpClient48.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool57 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient48.connectionPool = connectionPool57;
        com.squareup.okhttp.OkHttpClient okHttpClient59 = okHttpClient48.copyWithDefaults();
        java.net.ResponseCache responseCache60 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient61 = okHttpClient59.setResponseCache(responseCache60);
        java.net.ResponseCache responseCache62 = okHttpClient61.getResponseCache();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory63 = okHttpClient61.sslSocketFactory;
        java.lang.String[] strArray64 = sSLSocketFactory63.getSupportedCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient65 = okHttpClient46.setSSLSocketFactory(sSLSocketFactory63);
        com.squareup.okhttp.OkHttpClient okHttpClient66 = new com.squareup.okhttp.OkHttpClient(okHttpClient65);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory67 = okHttpClient65.sslSocketFactory;
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(sSLSocketFactory6);
        org.junit.Assert.assertNull(cookieHandler7);
        org.junit.Assert.assertNull(hostnameVerifier8);
        org.junit.Assert.assertNotNull(connectionPool10);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(hostnameVerifier22);
        org.junit.Assert.assertNull(proxy23);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNull(proxy29);
        org.junit.Assert.assertNotNull(hostnameVerifier30);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertNull(proxy33);
        org.junit.Assert.assertNull(sSLSocketFactory34);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNotNull(connectionPool41);
        org.junit.Assert.assertNotNull(connectionPool43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(connectionPool45);
        org.junit.Assert.assertNotNull(okHttpClient46);
        org.junit.Assert.assertNull(okResponseCache47);
        org.junit.Assert.assertNull(hostnameVerifier53);
        org.junit.Assert.assertNull(proxy54);
        org.junit.Assert.assertNotNull(okHttpClient59);
        org.junit.Assert.assertNotNull(okHttpClient61);
        org.junit.Assert.assertNull(responseCache62);
        org.junit.Assert.assertNotNull(sSLSocketFactory63);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(okHttpClient65);
        org.junit.Assert.assertNotNull(sSLSocketFactory67);
    }

    @Test
    public void test07306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07306");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.OkAuthenticator okAuthenticator12 = okHttpClient11.getAuthenticator();
        java.net.ProxySelector proxySelector13 = okHttpClient11.getProxySelector();
        java.net.ResponseCache responseCache14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient11.setResponseCache(responseCache14);
        javax.net.ssl.HostnameVerifier hostnameVerifier16 = okHttpClient15.hostnameVerifier;
        java.net.ProxySelector proxySelector17 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient15.setProxySelector(proxySelector17);
        com.squareup.okhttp.OkHttpClient okHttpClient19 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier20 = null;
        okHttpClient19.hostnameVerifier = hostnameVerifier20;
        java.net.ProxySelector proxySelector22 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient19.setProxySelector(proxySelector22);
        java.net.CookieHandler cookieHandler24 = okHttpClient19.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient25 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier26 = null;
        okHttpClient25.hostnameVerifier = hostnameVerifier26;
        java.net.ResponseCache responseCache28 = null;
        okHttpClient25.responseCache = responseCache28;
        java.util.List<java.lang.String> strList30 = okHttpClient25.transports;
        com.squareup.okhttp.ConnectionPool connectionPool31 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient25.connectionPool = connectionPool31;
        java.net.Proxy proxy33 = null;
        okHttpClient25.proxy = proxy33;
        java.util.Set<com.squareup.okhttp.Route> routeSet35 = okHttpClient25.failedRoutes;
        okHttpClient19.failedRoutes = routeSet35;
        java.net.ProxySelector proxySelector37 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient19.setProxySelector(proxySelector37);
        com.squareup.okhttp.ConnectionPool connectionPool41 = new com.squareup.okhttp.ConnectionPool((int) (short) 10, (long) '4');
        okHttpClient19.connectionPool = connectionPool41;
        boolean boolean43 = okHttpClient19.getFollowProtocolRedirects();
        java.net.ResponseCache responseCache44 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient45 = okHttpClient19.setResponseCache(responseCache44);
        java.net.Proxy proxy46 = java.net.Proxy.NO_PROXY;
        boolean boolean48 = proxy46.equals((java.lang.Object) 1L);
        java.net.SocketAddress socketAddress49 = proxy46.address();
        java.net.SocketAddress socketAddress50 = proxy46.address();
        com.squareup.okhttp.OkHttpClient okHttpClient51 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier52 = null;
        okHttpClient51.hostnameVerifier = hostnameVerifier52;
        java.net.ResponseCache responseCache54 = null;
        okHttpClient51.responseCache = responseCache54;
        javax.net.ssl.HostnameVerifier hostnameVerifier56 = okHttpClient51.hostnameVerifier;
        java.net.Proxy proxy57 = okHttpClient51.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool60 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient51.connectionPool = connectionPool60;
        java.util.List<java.lang.String> strList62 = okHttpClient51.transports;
        boolean boolean63 = proxy46.equals((java.lang.Object) okHttpClient51);
        java.net.Proxy.Type type64 = proxy46.type();
        okHttpClient45.proxy = proxy46;
        com.squareup.okhttp.OkHttpClient okHttpClient66 = okHttpClient15.setProxy(proxy46);
        java.net.CookieHandler cookieHandler67 = null;
        okHttpClient15.cookieHandler = cookieHandler67;
        java.net.Proxy proxy69 = okHttpClient15.proxy;
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(okAuthenticator12);
        org.junit.Assert.assertNull(proxySelector13);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNull(hostnameVerifier16);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertNull(cookieHandler24);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNotNull(connectionPool31);
        org.junit.Assert.assertNotNull(routeSet35);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(okHttpClient45);
        org.junit.Assert.assertNotNull(proxy46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(socketAddress49);
        org.junit.Assert.assertNull(socketAddress50);
        org.junit.Assert.assertNull(hostnameVerifier56);
        org.junit.Assert.assertNull(proxy57);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + type64 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type64.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNotNull(okHttpClient66);
        org.junit.Assert.assertNotNull(proxy69);
    }

    @Test
    public void test07307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07307");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        okHttpClient0.authenticator = okAuthenticator3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        java.util.List<java.lang.String> strList6 = okHttpClient0.getTransports();
        java.net.CookieHandler cookieHandler7 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient9 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier10 = null;
        okHttpClient9.hostnameVerifier = hostnameVerifier10;
        java.net.ResponseCache responseCache12 = null;
        okHttpClient9.responseCache = responseCache12;
        java.util.List<java.lang.String> strList14 = okHttpClient9.transports;
        com.squareup.okhttp.ConnectionPool connectionPool15 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient9.connectionPool = connectionPool15;
        java.net.Proxy proxy17 = null;
        okHttpClient9.proxy = proxy17;
        boolean boolean19 = okHttpClient9.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient9.setFollowProtocolRedirects(true);
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier23 = null;
        okHttpClient22.hostnameVerifier = hostnameVerifier23;
        java.net.ResponseCache responseCache25 = null;
        okHttpClient22.responseCache = responseCache25;
        java.util.List<java.lang.String> strList27 = okHttpClient22.transports;
        com.squareup.okhttp.ConnectionPool connectionPool28 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient22.connectionPool = connectionPool28;
        com.squareup.okhttp.ConnectionPool connectionPool30 = okHttpClient22.connectionPool;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient9.setConnectionPool(connectionPool30);
        com.squareup.okhttp.ConnectionPool connectionPool32 = okHttpClient31.connectionPool;
        java.net.ResponseCache responseCache33 = okHttpClient31.responseCache;
        com.squareup.okhttp.OkHttpClient okHttpClient34 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool35 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient34.connectionPool = connectionPool35;
        com.squareup.okhttp.OkHttpClient okHttpClient37 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier38 = null;
        okHttpClient37.hostnameVerifier = hostnameVerifier38;
        java.net.ResponseCache responseCache40 = null;
        okHttpClient37.responseCache = responseCache40;
        java.util.List<java.lang.String> strList42 = okHttpClient37.transports;
        com.squareup.okhttp.ConnectionPool connectionPool43 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient37.connectionPool = connectionPool43;
        com.squareup.okhttp.OkHttpClient okHttpClient45 = okHttpClient34.setConnectionPool(connectionPool43);
        com.squareup.okhttp.ConnectionPool connectionPool46 = okHttpClient45.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator47 = okHttpClient45.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool50 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient45.connectionPool = connectionPool50;
        java.net.ResponseCache responseCache52 = okHttpClient45.responseCache;
        com.squareup.okhttp.OkHttpClient okHttpClient53 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool54 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient53.connectionPool = connectionPool54;
        com.squareup.okhttp.OkHttpClient okHttpClient56 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier57 = null;
        okHttpClient56.hostnameVerifier = hostnameVerifier57;
        java.net.ResponseCache responseCache59 = null;
        okHttpClient56.responseCache = responseCache59;
        java.util.List<java.lang.String> strList61 = okHttpClient56.transports;
        com.squareup.okhttp.ConnectionPool connectionPool62 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient56.connectionPool = connectionPool62;
        com.squareup.okhttp.OkHttpClient okHttpClient64 = okHttpClient53.setConnectionPool(connectionPool62);
        com.squareup.okhttp.ConnectionPool connectionPool65 = okHttpClient64.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator66 = okHttpClient64.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool69 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient64.connectionPool = connectionPool69;
        java.net.ResponseCache responseCache71 = okHttpClient64.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory72 = okHttpClient64.sslSocketFactory;
        java.net.Proxy proxy73 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress74 = proxy73.address();
        com.squareup.okhttp.OkHttpClient okHttpClient75 = okHttpClient64.setProxy(proxy73);
        com.squareup.okhttp.OkHttpClient okHttpClient76 = new com.squareup.okhttp.OkHttpClient(okHttpClient75);
        com.squareup.okhttp.OkHttpClient okHttpClient77 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier78 = null;
        okHttpClient77.hostnameVerifier = hostnameVerifier78;
        java.net.ResponseCache responseCache80 = null;
        okHttpClient77.responseCache = responseCache80;
        java.util.List<java.lang.String> strList82 = okHttpClient77.transports;
        com.squareup.okhttp.ConnectionPool connectionPool83 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient77.connectionPool = connectionPool83;
        com.squareup.okhttp.OkHttpClient okHttpClient85 = okHttpClient77.copyWithDefaults();
        java.net.ProxySelector proxySelector86 = okHttpClient85.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory87 = okHttpClient85.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient88 = okHttpClient75.setSSLSocketFactory(sSLSocketFactory87);
        java.lang.String[] strArray89 = sSLSocketFactory87.getSupportedCipherSuites();
        java.lang.String[] strArray90 = sSLSocketFactory87.getSupportedCipherSuites();
        okHttpClient45.sslSocketFactory = sSLSocketFactory87;
        com.squareup.okhttp.OkHttpClient okHttpClient92 = okHttpClient31.setSSLSocketFactory(sSLSocketFactory87);
        com.squareup.okhttp.OkHttpClient okHttpClient93 = okHttpClient8.setSSLSocketFactory(sSLSocketFactory87);
        java.net.InetAddress inetAddress94 = null;
        java.net.InetAddress inetAddress96 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket98 = sSLSocketFactory87.createSocket(inetAddress94, (int) (short) -1, inetAddress96, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: port out of range:-1");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(cookieHandler7);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNotNull(connectionPool15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNotNull(connectionPool28);
        org.junit.Assert.assertNotNull(connectionPool30);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNotNull(connectionPool32);
        org.junit.Assert.assertNull(responseCache33);
        org.junit.Assert.assertNotNull(connectionPool35);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNotNull(connectionPool43);
        org.junit.Assert.assertNotNull(okHttpClient45);
        org.junit.Assert.assertNotNull(connectionPool46);
        org.junit.Assert.assertNull(okAuthenticator47);
        org.junit.Assert.assertNull(responseCache52);
        org.junit.Assert.assertNotNull(connectionPool54);
        org.junit.Assert.assertNull(strList61);
        org.junit.Assert.assertNotNull(connectionPool62);
        org.junit.Assert.assertNotNull(okHttpClient64);
        org.junit.Assert.assertNotNull(connectionPool65);
        org.junit.Assert.assertNull(okAuthenticator66);
        org.junit.Assert.assertNull(responseCache71);
        org.junit.Assert.assertNull(sSLSocketFactory72);
        org.junit.Assert.assertNotNull(proxy73);
        org.junit.Assert.assertNull(socketAddress74);
        org.junit.Assert.assertNotNull(okHttpClient75);
        org.junit.Assert.assertNull(strList82);
        org.junit.Assert.assertNotNull(connectionPool83);
        org.junit.Assert.assertNotNull(okHttpClient85);
// flaky:         org.junit.Assert.assertNull(proxySelector86);
        org.junit.Assert.assertNotNull(sSLSocketFactory87);
        org.junit.Assert.assertNotNull(okHttpClient88);
        org.junit.Assert.assertNotNull(strArray89);
        org.junit.Assert.assertNotNull(strArray90);
        org.junit.Assert.assertNotNull(okHttpClient92);
        org.junit.Assert.assertNotNull(okHttpClient93);
    }

    @Test
    public void test07308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07308");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient0.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.copyWithDefaults();
        java.net.ResponseCache responseCache12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient0.setResponseCache(responseCache12);
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = okHttpClient0.hostnameVerifier;
        java.net.ProxySelector proxySelector15 = okHttpClient0.getProxySelector();
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient0.setFollowProtocolRedirects(true);
        java.net.CookieHandler cookieHandler18 = null;
        okHttpClient17.cookieHandler = cookieHandler18;
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNull(hostnameVerifier14);
        org.junit.Assert.assertNull(proxySelector15);
        org.junit.Assert.assertNotNull(okHttpClient17);
    }

    @Test
    public void test07309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07309");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory6 = okHttpClient0.sslSocketFactory;
        java.net.CookieHandler cookieHandler7 = okHttpClient0.cookieHandler;
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = okHttpClient0.getHostnameVerifier();
        javax.net.ssl.HostnameVerifier hostnameVerifier9 = okHttpClient0.hostnameVerifier;
        java.util.List<java.lang.String> strList10 = okHttpClient0.getTransports();
        javax.net.ssl.HostnameVerifier hostnameVerifier11 = okHttpClient0.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier13 = null;
        okHttpClient12.hostnameVerifier = hostnameVerifier13;
        java.net.ProxySelector proxySelector15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient12.setProxySelector(proxySelector15);
        java.net.CookieHandler cookieHandler17 = okHttpClient12.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier19 = null;
        okHttpClient18.hostnameVerifier = hostnameVerifier19;
        java.net.ResponseCache responseCache21 = null;
        okHttpClient18.responseCache = responseCache21;
        java.util.List<java.lang.String> strList23 = okHttpClient18.transports;
        com.squareup.okhttp.ConnectionPool connectionPool24 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient18.connectionPool = connectionPool24;
        java.net.Proxy proxy26 = null;
        okHttpClient18.proxy = proxy26;
        java.util.Set<com.squareup.okhttp.Route> routeSet28 = okHttpClient18.failedRoutes;
        okHttpClient12.failedRoutes = routeSet28;
        java.net.ProxySelector proxySelector30 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient12.setProxySelector(proxySelector30);
        com.squareup.okhttp.ConnectionPool connectionPool34 = new com.squareup.okhttp.ConnectionPool((int) (short) 10, (long) '4');
        okHttpClient12.connectionPool = connectionPool34;
        boolean boolean36 = okHttpClient12.getFollowProtocolRedirects();
        java.net.ProxySelector proxySelector37 = null;
        okHttpClient12.proxySelector = proxySelector37;
        com.squareup.okhttp.OkHttpClient okHttpClient39 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier40 = null;
        okHttpClient39.hostnameVerifier = hostnameVerifier40;
        java.net.ResponseCache responseCache42 = null;
        okHttpClient39.responseCache = responseCache42;
        javax.net.ssl.HostnameVerifier hostnameVerifier44 = okHttpClient39.hostnameVerifier;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory45 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient46 = okHttpClient39.setSSLSocketFactory(sSLSocketFactory45);
        java.util.List<java.lang.String> strList47 = okHttpClient39.getTransports();
        com.squareup.okhttp.OkHttpClient okHttpClient48 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier49 = null;
        okHttpClient48.hostnameVerifier = hostnameVerifier49;
        java.net.ResponseCache responseCache51 = null;
        okHttpClient48.responseCache = responseCache51;
        javax.net.ssl.HostnameVerifier hostnameVerifier53 = okHttpClient48.hostnameVerifier;
        java.net.Proxy proxy54 = okHttpClient48.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool57 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient48.connectionPool = connectionPool57;
        boolean boolean59 = okHttpClient48.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient60 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier61 = null;
        okHttpClient60.hostnameVerifier = hostnameVerifier61;
        java.net.ResponseCache responseCache63 = null;
        okHttpClient60.responseCache = responseCache63;
        javax.net.ssl.HostnameVerifier hostnameVerifier65 = okHttpClient60.hostnameVerifier;
        java.net.Proxy proxy66 = okHttpClient60.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool69 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient60.connectionPool = connectionPool69;
        com.squareup.okhttp.OkHttpClient okHttpClient71 = okHttpClient60.copyWithDefaults();
        java.net.Proxy proxy72 = okHttpClient71.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier73 = okHttpClient71.getHostnameVerifier();
        okHttpClient48.hostnameVerifier = hostnameVerifier73;
        com.squareup.okhttp.OkHttpClient okHttpClient75 = okHttpClient39.setHostnameVerifier(hostnameVerifier73);
        okHttpClient12.hostnameVerifier = hostnameVerifier73;
        okHttpClient0.hostnameVerifier = hostnameVerifier73;
        java.net.ResponseCache responseCache78 = okHttpClient0.responseCache;
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(sSLSocketFactory6);
        org.junit.Assert.assertNull(cookieHandler7);
        org.junit.Assert.assertNull(hostnameVerifier8);
        org.junit.Assert.assertNull(hostnameVerifier9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(hostnameVerifier11);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNull(cookieHandler17);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNotNull(connectionPool24);
        org.junit.Assert.assertNotNull(routeSet28);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(hostnameVerifier44);
        org.junit.Assert.assertNotNull(okHttpClient46);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNull(hostnameVerifier53);
        org.junit.Assert.assertNull(proxy54);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(hostnameVerifier65);
        org.junit.Assert.assertNull(proxy66);
        org.junit.Assert.assertNotNull(okHttpClient71);
        org.junit.Assert.assertNull(proxy72);
        org.junit.Assert.assertNotNull(hostnameVerifier73);
        org.junit.Assert.assertNotNull(okHttpClient75);
        org.junit.Assert.assertNull(responseCache78);
    }

    @Test
    public void test07310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07310");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache1 = okHttpClient0.okResponseCache();
        java.net.ResponseCache responseCache2 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.setResponseCache(responseCache2);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory4 = okHttpClient0.sslSocketFactory;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory5 = okHttpClient0.sslSocketFactory;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory6);
        com.squareup.okhttp.OkHttpClient okHttpClient8 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier9 = null;
        okHttpClient8.hostnameVerifier = hostnameVerifier9;
        java.net.ResponseCache responseCache11 = null;
        okHttpClient8.responseCache = responseCache11;
        java.util.List<java.lang.String> strList13 = okHttpClient8.transports;
        com.squareup.okhttp.ConnectionPool connectionPool14 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient8.connectionPool = connectionPool14;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient0.setConnectionPool(connectionPool14);
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient(okHttpClient17);
        javax.net.ssl.HostnameVerifier hostnameVerifier19 = okHttpClient18.getHostnameVerifier();
        org.junit.Assert.assertNull(okResponseCache1);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertNull(sSLSocketFactory4);
        org.junit.Assert.assertNull(sSLSocketFactory5);
        org.junit.Assert.assertNotNull(okHttpClient7);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNotNull(connectionPool14);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNull(hostnameVerifier19);
    }

    @Test
    public void test07311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07311");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.CookieHandler cookieHandler5 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = null;
        okHttpClient6.hostnameVerifier = hostnameVerifier7;
        java.net.ResponseCache responseCache9 = null;
        okHttpClient6.responseCache = responseCache9;
        java.util.List<java.lang.String> strList11 = okHttpClient6.transports;
        com.squareup.okhttp.ConnectionPool connectionPool12 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient6.connectionPool = connectionPool12;
        java.net.Proxy proxy14 = null;
        okHttpClient6.proxy = proxy14;
        java.util.Set<com.squareup.okhttp.Route> routeSet16 = okHttpClient6.failedRoutes;
        okHttpClient0.failedRoutes = routeSet16;
        java.net.ProxySelector proxySelector18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient0.setProxySelector(proxySelector18);
        java.net.CookieHandler cookieHandler20 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        java.net.ResponseCache responseCache22 = okHttpClient0.getResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient23 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier24 = null;
        okHttpClient23.hostnameVerifier = hostnameVerifier24;
        java.net.ProxySelector proxySelector26 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient23.setProxySelector(proxySelector26);
        java.net.ResponseCache responseCache28 = null;
        okHttpClient27.responseCache = responseCache28;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory30 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient27.setSSLSocketFactory(sSLSocketFactory30);
        java.net.ProxySelector proxySelector32 = null;
        okHttpClient27.proxySelector = proxySelector32;
        com.squareup.okhttp.ConnectionPool connectionPool36 = new com.squareup.okhttp.ConnectionPool((int) ' ', (long) (short) 100);
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient27.setConnectionPool(connectionPool36);
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient37.setFollowProtocolRedirects(true);
        javax.net.ssl.HostnameVerifier hostnameVerifier40 = okHttpClient37.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient41 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier42 = null;
        okHttpClient41.hostnameVerifier = hostnameVerifier42;
        boolean boolean44 = okHttpClient41.getFollowProtocolRedirects();
        java.net.CookieHandler cookieHandler45 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient46 = okHttpClient41.setCookieHandler(cookieHandler45);
        com.squareup.okhttp.OkHttpClient okHttpClient47 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier48 = null;
        okHttpClient47.hostnameVerifier = hostnameVerifier48;
        java.net.ResponseCache responseCache50 = null;
        okHttpClient47.responseCache = responseCache50;
        java.util.List<java.lang.String> strList52 = okHttpClient47.transports;
        com.squareup.okhttp.ConnectionPool connectionPool53 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient47.connectionPool = connectionPool53;
        com.squareup.okhttp.Address address55 = null;
        com.squareup.okhttp.Connection connection56 = connectionPool53.get(address55);
        com.squareup.okhttp.OkHttpClient okHttpClient57 = okHttpClient46.setConnectionPool(connectionPool53);
        com.squareup.okhttp.OkHttpClient okHttpClient58 = okHttpClient46.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient59 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache60 = okHttpClient59.okResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient61 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier62 = null;
        okHttpClient61.hostnameVerifier = hostnameVerifier62;
        java.net.ResponseCache responseCache64 = null;
        okHttpClient61.responseCache = responseCache64;
        java.util.List<java.lang.String> strList66 = okHttpClient61.transports;
        com.squareup.okhttp.ConnectionPool connectionPool67 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient61.connectionPool = connectionPool67;
        java.net.Proxy proxy69 = null;
        okHttpClient61.proxy = proxy69;
        boolean boolean71 = okHttpClient61.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient72 = okHttpClient61.copyWithDefaults();
        java.net.CookieHandler cookieHandler73 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient74 = okHttpClient72.setCookieHandler(cookieHandler73);
        java.util.List<java.lang.String> strList75 = okHttpClient74.transports;
        javax.net.ssl.HostnameVerifier hostnameVerifier76 = okHttpClient74.hostnameVerifier;
        okHttpClient59.hostnameVerifier = hostnameVerifier76;
        com.squareup.okhttp.OkHttpClient okHttpClient78 = okHttpClient46.setHostnameVerifier(hostnameVerifier76);
        okHttpClient37.hostnameVerifier = hostnameVerifier76;
        com.squareup.okhttp.OkHttpClient okHttpClient80 = okHttpClient0.setHostnameVerifier(hostnameVerifier76);
        com.squareup.okhttp.OkHttpClient okHttpClient81 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier82 = null;
        okHttpClient81.hostnameVerifier = hostnameVerifier82;
        java.net.ResponseCache responseCache84 = null;
        okHttpClient81.responseCache = responseCache84;
        java.util.List<java.lang.String> strList86 = okHttpClient81.transports;
        com.squareup.okhttp.ConnectionPool connectionPool87 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient81.connectionPool = connectionPool87;
        java.net.Proxy proxy89 = null;
        okHttpClient81.proxy = proxy89;
        boolean boolean91 = okHttpClient81.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient92 = okHttpClient81.copyWithDefaults();
        java.net.CookieHandler cookieHandler93 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient94 = okHttpClient92.setCookieHandler(cookieHandler93);
        java.util.List<java.lang.String> strList95 = okHttpClient94.transports;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory96 = okHttpClient94.sslSocketFactory;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory97 = okHttpClient94.getSslSocketFactory();
        okHttpClient0.sslSocketFactory = sSLSocketFactory97;
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNotNull(routeSet16);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNull(cookieHandler20);
        org.junit.Assert.assertNull(responseCache22);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNotNull(okHttpClient37);
        org.junit.Assert.assertNotNull(okHttpClient39);
        org.junit.Assert.assertNull(hostnameVerifier40);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(okHttpClient46);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNotNull(connectionPool53);
        org.junit.Assert.assertNull(connection56);
        org.junit.Assert.assertNotNull(okHttpClient57);
        org.junit.Assert.assertNotNull(okHttpClient58);
        org.junit.Assert.assertNull(okResponseCache60);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNotNull(connectionPool67);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(okHttpClient72);
        org.junit.Assert.assertNotNull(okHttpClient74);
        org.junit.Assert.assertNotNull(strList75);
        org.junit.Assert.assertNotNull(hostnameVerifier76);
        org.junit.Assert.assertNotNull(okHttpClient78);
        org.junit.Assert.assertNotNull(okHttpClient80);
        org.junit.Assert.assertNull(strList86);
        org.junit.Assert.assertNotNull(connectionPool87);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(okHttpClient92);
        org.junit.Assert.assertNotNull(okHttpClient94);
        org.junit.Assert.assertNotNull(strList95);
        org.junit.Assert.assertNotNull(sSLSocketFactory96);
        org.junit.Assert.assertNotNull(sSLSocketFactory97);
    }

    @Test
    public void test07312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07312");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.CookieHandler cookieHandler6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient0.setCookieHandler(cookieHandler6);
        com.squareup.okhttp.OkAuthenticator okAuthenticator8 = okHttpClient0.getAuthenticator();
        com.squareup.okhttp.OkHttpClient okHttpClient9 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier10 = null;
        okHttpClient9.hostnameVerifier = hostnameVerifier10;
        java.net.ResponseCache responseCache12 = null;
        okHttpClient9.responseCache = responseCache12;
        java.util.List<java.lang.String> strList14 = okHttpClient9.transports;
        java.net.Proxy proxy15 = java.net.Proxy.NO_PROXY;
        boolean boolean17 = proxy15.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type18 = proxy15.type();
        java.net.SocketAddress socketAddress19 = proxy15.address();
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient9.setProxy(proxy15);
        com.squareup.okhttp.OkHttpClient okHttpClient21 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier22 = null;
        okHttpClient21.hostnameVerifier = hostnameVerifier22;
        java.net.ProxySelector proxySelector24 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient21.setProxySelector(proxySelector24);
        javax.net.ssl.HostnameVerifier hostnameVerifier26 = okHttpClient21.hostnameVerifier;
        java.net.CookieHandler cookieHandler27 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient21.setCookieHandler(cookieHandler27);
        java.net.ResponseCache responseCache29 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient30 = okHttpClient28.setResponseCache(responseCache29);
        com.squareup.okhttp.OkHttpClient okHttpClient31 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier32 = null;
        okHttpClient31.hostnameVerifier = hostnameVerifier32;
        java.net.ResponseCache responseCache34 = null;
        okHttpClient31.responseCache = responseCache34;
        java.util.List<java.lang.String> strList36 = okHttpClient31.transports;
        com.squareup.okhttp.ConnectionPool connectionPool37 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient31.connectionPool = connectionPool37;
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient31.copyWithDefaults();
        java.net.ProxySelector proxySelector40 = okHttpClient39.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory41 = okHttpClient39.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient28.setSSLSocketFactory(sSLSocketFactory41);
        boolean boolean43 = proxy15.equals((java.lang.Object) sSLSocketFactory41);
        java.lang.String[] strArray44 = sSLSocketFactory41.getSupportedCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient45 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory41);
        java.net.ResponseCache responseCache46 = null;
        okHttpClient45.responseCache = responseCache46;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory48 = okHttpClient45.sslSocketFactory;
        java.net.Socket socket49 = sSLSocketFactory48.createSocket();
        com.squareup.okhttp.OkHttpClient okHttpClient50 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier51 = null;
        okHttpClient50.hostnameVerifier = hostnameVerifier51;
        java.net.ResponseCache responseCache53 = null;
        okHttpClient50.responseCache = responseCache53;
        java.util.List<java.lang.String> strList55 = okHttpClient50.transports;
        com.squareup.okhttp.ConnectionPool connectionPool56 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient50.connectionPool = connectionPool56;
        java.net.Proxy proxy58 = null;
        okHttpClient50.proxy = proxy58;
        java.net.Proxy proxy60 = okHttpClient50.getProxy();
        java.net.ProxySelector proxySelector61 = null;
        okHttpClient50.proxySelector = proxySelector61;
        java.net.Proxy proxy63 = okHttpClient50.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient64 = okHttpClient50.copyWithDefaults();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory65 = okHttpClient64.sslSocketFactory;
        java.util.List<java.lang.String> strList66 = okHttpClient64.transports;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory67 = okHttpClient64.sslSocketFactory;
        java.net.Socket socket68 = sSLSocketFactory67.createSocket();
        java.io.InputStream inputStream69 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket71 = sSLSocketFactory48.createSocket(socket68, inputStream69, false);
            org.junit.Assert.fail("Expected exception of type java.net.SocketException; message: Underlying socket is not connected");
        } catch (java.net.SocketException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNotNull(okHttpClient7);
        org.junit.Assert.assertNull(okAuthenticator8);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNotNull(proxy15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + type18 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type18.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress19);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNotNull(okHttpClient25);
        org.junit.Assert.assertNull(hostnameVerifier26);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNotNull(okHttpClient30);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNotNull(connectionPool37);
        org.junit.Assert.assertNotNull(okHttpClient39);
// flaky:         org.junit.Assert.assertNull(proxySelector40);
        org.junit.Assert.assertNotNull(sSLSocketFactory41);
        org.junit.Assert.assertNotNull(okHttpClient42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(okHttpClient45);
        org.junit.Assert.assertNotNull(sSLSocketFactory48);
        org.junit.Assert.assertNotNull(socket49);
        org.junit.Assert.assertEquals(socket49.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertNotNull(connectionPool56);
        org.junit.Assert.assertNull(proxy60);
        org.junit.Assert.assertNull(proxy63);
        org.junit.Assert.assertNotNull(okHttpClient64);
        org.junit.Assert.assertNotNull(sSLSocketFactory65);
        org.junit.Assert.assertNotNull(strList66);
        org.junit.Assert.assertNotNull(sSLSocketFactory67);
        org.junit.Assert.assertNotNull(socket68);
        org.junit.Assert.assertEquals(socket68.toString(), "Socket[unconnected]");
    }

    @Test
    public void test07313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07313");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory5 = okHttpClient4.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = null;
        okHttpClient6.hostnameVerifier = hostnameVerifier7;
        java.net.ResponseCache responseCache9 = null;
        okHttpClient6.responseCache = responseCache9;
        javax.net.ssl.HostnameVerifier hostnameVerifier11 = okHttpClient6.hostnameVerifier;
        java.net.Proxy proxy12 = okHttpClient6.getProxy();
        java.net.CookieHandler cookieHandler13 = null;
        okHttpClient6.cookieHandler = cookieHandler13;
        okHttpClient6.followProtocolRedirects = true;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = null;
        okHttpClient17.hostnameVerifier = hostnameVerifier18;
        java.net.ResponseCache responseCache20 = null;
        okHttpClient17.responseCache = responseCache20;
        javax.net.ssl.HostnameVerifier hostnameVerifier22 = okHttpClient17.hostnameVerifier;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory23 = okHttpClient17.sslSocketFactory;
        java.net.CookieHandler cookieHandler24 = okHttpClient17.cookieHandler;
        javax.net.ssl.HostnameVerifier hostnameVerifier25 = okHttpClient17.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool27 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient26.connectionPool = connectionPool27;
        com.squareup.okhttp.OkAuthenticator okAuthenticator29 = null;
        okHttpClient26.authenticator = okAuthenticator29;
        java.util.List<java.lang.String> strList31 = okHttpClient26.transports;
        java.net.ResponseCache responseCache32 = null;
        okHttpClient26.responseCache = responseCache32;
        com.squareup.okhttp.OkHttpClient okHttpClient34 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier35 = null;
        okHttpClient34.hostnameVerifier = hostnameVerifier35;
        java.net.ResponseCache responseCache37 = null;
        okHttpClient34.responseCache = responseCache37;
        javax.net.ssl.HostnameVerifier hostnameVerifier39 = okHttpClient34.hostnameVerifier;
        java.net.Proxy proxy40 = okHttpClient34.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool43 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient34.connectionPool = connectionPool43;
        com.squareup.okhttp.OkHttpClient okHttpClient45 = okHttpClient34.copyWithDefaults();
        java.net.Proxy proxy46 = okHttpClient45.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier47 = okHttpClient45.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient48 = okHttpClient26.setHostnameVerifier(hostnameVerifier47);
        com.squareup.okhttp.OkHttpClient okHttpClient49 = okHttpClient17.setHostnameVerifier(hostnameVerifier47);
        okHttpClient6.hostnameVerifier = hostnameVerifier47;
        javax.net.ssl.HostnameVerifier hostnameVerifier51 = okHttpClient6.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient52 = okHttpClient4.setHostnameVerifier(hostnameVerifier51);
        okHttpClient4.followProtocolRedirects = true;
        com.squareup.okhttp.ConnectionPool connectionPool57 = new com.squareup.okhttp.ConnectionPool((int) '#', (long) (byte) 1);
        int int58 = connectionPool57.getSpdyConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient59 = okHttpClient4.setConnectionPool(connectionPool57);
        java.lang.Class<?> wildcardClass60 = okHttpClient4.getClass();
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(sSLSocketFactory5);
        org.junit.Assert.assertNull(hostnameVerifier11);
        org.junit.Assert.assertNull(proxy12);
        org.junit.Assert.assertNull(hostnameVerifier22);
        org.junit.Assert.assertNull(sSLSocketFactory23);
        org.junit.Assert.assertNull(cookieHandler24);
        org.junit.Assert.assertNull(hostnameVerifier25);
        org.junit.Assert.assertNotNull(connectionPool27);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(hostnameVerifier39);
        org.junit.Assert.assertNull(proxy40);
        org.junit.Assert.assertNotNull(okHttpClient45);
        org.junit.Assert.assertNull(proxy46);
        org.junit.Assert.assertNotNull(hostnameVerifier47);
        org.junit.Assert.assertNotNull(okHttpClient48);
        org.junit.Assert.assertNotNull(okHttpClient49);
        org.junit.Assert.assertNotNull(hostnameVerifier51);
        org.junit.Assert.assertNotNull(okHttpClient52);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(okHttpClient59);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test07314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07314");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.Proxy proxy8 = null;
        okHttpClient0.proxy = proxy8;
        boolean boolean10 = okHttpClient0.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        java.net.ProxySelector proxySelector12 = okHttpClient11.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier13 = okHttpClient11.hostnameVerifier;
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = okHttpClient11.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool16 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient15.connectionPool = connectionPool16;
        com.squareup.okhttp.OkAuthenticator okAuthenticator18 = null;
        okHttpClient15.authenticator = okAuthenticator18;
        java.net.CookieHandler cookieHandler20 = null;
        okHttpClient15.cookieHandler = cookieHandler20;
        java.net.Proxy proxy22 = java.net.Proxy.NO_PROXY;
        boolean boolean24 = proxy22.equals((java.lang.Object) 1L);
        com.squareup.okhttp.OkHttpClient okHttpClient25 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache26 = okHttpClient25.okResponseCache();
        java.net.ResponseCache responseCache27 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient25.setResponseCache(responseCache27);
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        okHttpClient25.transports = strList31;
        boolean boolean34 = proxy22.equals((java.lang.Object) strList31);
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient15.setProxy(proxy22);
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient11.setProxy(proxy22);
        com.squareup.okhttp.OkHttpClient okHttpClient37 = new com.squareup.okhttp.OkHttpClient(okHttpClient36);
        java.net.Proxy proxy38 = okHttpClient37.getProxy();
        boolean boolean39 = okHttpClient37.getFollowProtocolRedirects();
        java.net.ResponseCache responseCache40 = okHttpClient37.getResponseCache();
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(proxySelector12);
        org.junit.Assert.assertNull(hostnameVerifier13);
        org.junit.Assert.assertNull(hostnameVerifier14);
        org.junit.Assert.assertNotNull(connectionPool16);
        org.junit.Assert.assertNotNull(proxy22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(okResponseCache26);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNull(proxy38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(responseCache40);
    }

    @Test
    public void test07315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07315");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient0.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.copyWithDefaults();
        java.net.Proxy proxy12 = okHttpClient11.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = null;
        okHttpClient13.hostnameVerifier = hostnameVerifier14;
        java.net.ResponseCache responseCache16 = null;
        okHttpClient13.responseCache = responseCache16;
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = okHttpClient13.hostnameVerifier;
        java.net.Proxy proxy19 = okHttpClient13.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool22 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient13.connectionPool = connectionPool22;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient13.copyWithDefaults();
        java.net.ResponseCache responseCache25 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient24.setResponseCache(responseCache25);
        okHttpClient26.followProtocolRedirects = true;
        java.util.List<java.lang.String> strList29 = okHttpClient26.getTransports();
        okHttpClient11.transports = strList29;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory31 = okHttpClient11.sslSocketFactory;
        java.lang.String[] strArray32 = sSLSocketFactory31.getSupportedCipherSuites();
        java.net.InetAddress inetAddress33 = null;
        java.net.InetAddress inetAddress35 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket37 = sSLSocketFactory31.createSocket(inetAddress33, (int) (short) 1, inetAddress35, 0);
            org.junit.Assert.fail("Expected exception of type java.net.ConnectException; message: Connection refused (Connection refused)");
        } catch (java.net.ConnectException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(proxy12);
        org.junit.Assert.assertNull(hostnameVerifier18);
        org.junit.Assert.assertNull(proxy19);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNotNull(strList29);
        org.junit.Assert.assertNotNull(sSLSocketFactory31);
        org.junit.Assert.assertNotNull(strArray32);
    }

    @Test
    public void test07316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07316");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier7;
        java.net.ProxySelector proxySelector9 = okHttpClient0.proxySelector;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier11 = null;
        okHttpClient10.hostnameVerifier = hostnameVerifier11;
        java.net.ResponseCache responseCache13 = null;
        okHttpClient10.responseCache = responseCache13;
        java.util.List<java.lang.String> strList15 = okHttpClient10.transports;
        com.squareup.okhttp.ConnectionPool connectionPool16 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient10.connectionPool = connectionPool16;
        java.net.CookieHandler cookieHandler18 = okHttpClient10.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache19 = okHttpClient10.okResponseCache();
        java.net.CookieHandler cookieHandler20 = okHttpClient10.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient21 = new com.squareup.okhttp.OkHttpClient(okHttpClient10);
        java.net.Proxy proxy22 = java.net.Proxy.NO_PROXY;
        boolean boolean24 = proxy22.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type25 = proxy22.type();
        java.net.SocketAddress socketAddress26 = proxy22.address();
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient10.setProxy(proxy22);
        com.squareup.okhttp.OkHttpClient okHttpClient28 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier29 = null;
        okHttpClient28.hostnameVerifier = hostnameVerifier29;
        java.net.ResponseCache responseCache31 = null;
        okHttpClient28.responseCache = responseCache31;
        java.util.List<java.lang.String> strList33 = okHttpClient28.transports;
        com.squareup.okhttp.ConnectionPool connectionPool34 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient28.connectionPool = connectionPool34;
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient28.copyWithDefaults();
        java.net.ProxySelector proxySelector37 = okHttpClient36.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory38 = okHttpClient36.getSslSocketFactory();
        okHttpClient27.sslSocketFactory = sSLSocketFactory38;
        java.net.ResponseCache responseCache40 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient41 = okHttpClient27.setResponseCache(responseCache40);
        com.squareup.okhttp.OkHttpClient okHttpClient42 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier43 = null;
        okHttpClient42.hostnameVerifier = hostnameVerifier43;
        java.net.ResponseCache responseCache45 = null;
        okHttpClient42.responseCache = responseCache45;
        java.util.List<java.lang.String> strList47 = okHttpClient42.transports;
        com.squareup.okhttp.ConnectionPool connectionPool48 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient42.connectionPool = connectionPool48;
        java.net.CookieHandler cookieHandler50 = okHttpClient42.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache51 = okHttpClient42.okResponseCache();
        java.net.CookieHandler cookieHandler52 = okHttpClient42.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient53 = new com.squareup.okhttp.OkHttpClient(okHttpClient42);
        java.net.ResponseCache responseCache54 = okHttpClient42.responseCache;
        java.net.CookieHandler cookieHandler55 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient56 = okHttpClient42.setCookieHandler(cookieHandler55);
        java.net.Proxy proxy57 = java.net.Proxy.NO_PROXY;
        boolean boolean59 = proxy57.equals((java.lang.Object) 1L);
        com.squareup.okhttp.OkHttpClient okHttpClient60 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache61 = okHttpClient60.okResponseCache();
        java.net.ResponseCache responseCache62 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient63 = okHttpClient60.setResponseCache(responseCache62);
        java.lang.String[] strArray65 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList66 = new java.util.ArrayList<java.lang.String>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList66, strArray65);
        okHttpClient60.transports = strList66;
        boolean boolean69 = proxy57.equals((java.lang.Object) strList66);
        com.squareup.okhttp.OkHttpClient.DEFAULT_TRANSPORTS = strList66;
        okHttpClient56.transports = strList66;
        com.squareup.okhttp.OkHttpClient.DEFAULT_TRANSPORTS = strList66;
        okHttpClient41.transports = strList66;
        // The following exception was thrown during execution in test generation
        try {
            com.squareup.okhttp.OkHttpClient okHttpClient74 = okHttpClient0.setTransports((java.util.List<java.lang.String>) strList66);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: transports doesn't contain http/1.1: [hi!]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNull(proxySelector9);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(connectionPool16);
        org.junit.Assert.assertNull(cookieHandler18);
        org.junit.Assert.assertNull(okResponseCache19);
        org.junit.Assert.assertNull(cookieHandler20);
        org.junit.Assert.assertNotNull(proxy22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + type25 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type25.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress26);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNotNull(connectionPool34);
        org.junit.Assert.assertNotNull(okHttpClient36);
// flaky:         org.junit.Assert.assertNull(proxySelector37);
        org.junit.Assert.assertNotNull(sSLSocketFactory38);
        org.junit.Assert.assertNotNull(okHttpClient41);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNotNull(connectionPool48);
        org.junit.Assert.assertNull(cookieHandler50);
        org.junit.Assert.assertNull(okResponseCache51);
        org.junit.Assert.assertNull(cookieHandler52);
        org.junit.Assert.assertNull(responseCache54);
        org.junit.Assert.assertNotNull(okHttpClient56);
        org.junit.Assert.assertNotNull(proxy57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(okResponseCache61);
        org.junit.Assert.assertNotNull(okHttpClient63);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
    }

    @Test
    public void test07317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07317");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.Proxy proxy8 = null;
        okHttpClient0.proxy = proxy8;
        boolean boolean10 = okHttpClient0.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        java.net.ProxySelector proxySelector12 = okHttpClient11.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier13 = okHttpClient11.hostnameVerifier;
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = okHttpClient11.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool16 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient15.connectionPool = connectionPool16;
        com.squareup.okhttp.OkAuthenticator okAuthenticator18 = null;
        okHttpClient15.authenticator = okAuthenticator18;
        java.net.CookieHandler cookieHandler20 = null;
        okHttpClient15.cookieHandler = cookieHandler20;
        java.net.Proxy proxy22 = java.net.Proxy.NO_PROXY;
        boolean boolean24 = proxy22.equals((java.lang.Object) 1L);
        com.squareup.okhttp.OkHttpClient okHttpClient25 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache26 = okHttpClient25.okResponseCache();
        java.net.ResponseCache responseCache27 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient25.setResponseCache(responseCache27);
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        okHttpClient25.transports = strList31;
        boolean boolean34 = proxy22.equals((java.lang.Object) strList31);
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient15.setProxy(proxy22);
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient11.setProxy(proxy22);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory37 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient11.setSSLSocketFactory(sSLSocketFactory37);
        java.net.Proxy proxy39 = okHttpClient38.getProxy();
        java.net.SocketAddress socketAddress40 = proxy39.address();
        java.net.SocketAddress socketAddress41 = proxy39.address();
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(proxySelector12);
        org.junit.Assert.assertNull(hostnameVerifier13);
        org.junit.Assert.assertNull(hostnameVerifier14);
        org.junit.Assert.assertNotNull(connectionPool16);
        org.junit.Assert.assertNotNull(proxy22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(okResponseCache26);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNotNull(proxy39);
        org.junit.Assert.assertNull(socketAddress40);
        org.junit.Assert.assertNull(socketAddress41);
    }

    @Test
    public void test07318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07318");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.ConnectionPool connectionPool14 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        okHttpClient0.connectionPool = connectionPool14;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory16 = okHttpClient0.sslSocketFactory;
        java.net.CookieHandler cookieHandler17 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        java.net.Proxy proxy19 = okHttpClient0.proxy;
        java.net.CookieHandler cookieHandler20 = okHttpClient0.getCookieHandler();
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(sSLSocketFactory16);
        org.junit.Assert.assertNull(cookieHandler17);
        org.junit.Assert.assertNull(proxy19);
        org.junit.Assert.assertNull(cookieHandler20);
    }

    @Test
    public void test07319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07319");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.ConnectionPool connectionPool12 = okHttpClient11.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator13 = okHttpClient11.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool16 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient11.connectionPool = connectionPool16;
        java.net.ResponseCache responseCache18 = okHttpClient11.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory19 = okHttpClient11.sslSocketFactory;
        java.net.Proxy proxy20 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress21 = proxy20.address();
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient11.setProxy(proxy20);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory23 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient11.setSSLSocketFactory(sSLSocketFactory23);
        com.squareup.okhttp.OkHttpClient okHttpClient25 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier26 = null;
        okHttpClient25.hostnameVerifier = hostnameVerifier26;
        java.net.ResponseCache responseCache28 = null;
        okHttpClient25.responseCache = responseCache28;
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = okHttpClient25.hostnameVerifier;
        java.net.Proxy proxy31 = okHttpClient25.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool34 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient25.connectionPool = connectionPool34;
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient25.copyWithDefaults();
        java.net.ResponseCache responseCache37 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient36.setResponseCache(responseCache37);
        com.squareup.okhttp.OkAuthenticator okAuthenticator39 = okHttpClient36.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient40 = okHttpClient11.setAuthenticator(okAuthenticator39);
        java.net.ProxySelector proxySelector41 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient40.setProxySelector(proxySelector41);
        com.squareup.okhttp.OkHttpClient okHttpClient43 = new com.squareup.okhttp.OkHttpClient(okHttpClient40);
        boolean boolean44 = okHttpClient43.getFollowProtocolRedirects();
        com.squareup.okhttp.ConnectionPool connectionPool47 = new com.squareup.okhttp.ConnectionPool((int) '4', 10L);
        int int48 = connectionPool47.getHttpConnectionCount();
        okHttpClient43.connectionPool = connectionPool47;
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient43.copyWithDefaults();
        java.net.ResponseCache responseCache51 = okHttpClient43.responseCache;
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNull(okAuthenticator13);
        org.junit.Assert.assertNull(responseCache18);
        org.junit.Assert.assertNull(sSLSocketFactory19);
        org.junit.Assert.assertNotNull(proxy20);
        org.junit.Assert.assertNull(socketAddress21);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNull(hostnameVerifier30);
        org.junit.Assert.assertNull(proxy31);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNotNull(okAuthenticator39);
        org.junit.Assert.assertNotNull(okHttpClient40);
        org.junit.Assert.assertNotNull(okHttpClient42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(okHttpClient50);
        org.junit.Assert.assertNull(responseCache51);
    }

    @Test
    public void test07320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07320");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.CookieHandler cookieHandler5 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = null;
        okHttpClient6.hostnameVerifier = hostnameVerifier7;
        java.net.ResponseCache responseCache9 = null;
        okHttpClient6.responseCache = responseCache9;
        java.util.List<java.lang.String> strList11 = okHttpClient6.transports;
        com.squareup.okhttp.ConnectionPool connectionPool12 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient6.connectionPool = connectionPool12;
        java.net.Proxy proxy14 = null;
        okHttpClient6.proxy = proxy14;
        java.util.Set<com.squareup.okhttp.Route> routeSet16 = okHttpClient6.failedRoutes;
        okHttpClient0.failedRoutes = routeSet16;
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient0.setHostnameVerifier(hostnameVerifier18);
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache20 = okHttpClient0.okResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator21 = okHttpClient0.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool22 = okHttpClient0.connectionPool;
        boolean boolean23 = okHttpClient0.getFollowProtocolRedirects();
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNotNull(routeSet16);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNull(okResponseCache20);
        org.junit.Assert.assertNull(okAuthenticator21);
        org.junit.Assert.assertNull(connectionPool22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    }

    @Test
    public void test07321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07321");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.ConnectionPool connectionPool14 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        okHttpClient0.connectionPool = connectionPool14;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory16 = okHttpClient0.sslSocketFactory;
        java.net.CookieHandler cookieHandler17 = okHttpClient0.getCookieHandler();
        boolean boolean18 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkAuthenticator okAuthenticator19 = okHttpClient0.getAuthenticator();
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(sSLSocketFactory16);
        org.junit.Assert.assertNull(cookieHandler17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(okAuthenticator19);
    }

    @Test
    public void test07322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07322");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.Proxy proxy8 = null;
        okHttpClient0.proxy = proxy8;
        java.util.Set<com.squareup.okhttp.Route> routeSet10 = okHttpClient0.failedRoutes;
        javax.net.ssl.HostnameVerifier hostnameVerifier11 = okHttpClient0.getHostnameVerifier();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory12 = okHttpClient0.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = null;
        okHttpClient13.hostnameVerifier = hostnameVerifier14;
        java.net.ResponseCache responseCache16 = null;
        okHttpClient13.responseCache = responseCache16;
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = okHttpClient13.hostnameVerifier;
        java.net.Proxy proxy19 = okHttpClient13.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient20 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache21 = okHttpClient20.okResponseCache();
        java.net.ResponseCache responseCache22 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient20.setResponseCache(responseCache22);
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList26 = new java.util.ArrayList<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        okHttpClient20.transports = strList26;
        okHttpClient13.transports = strList26;
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = null;
        okHttpClient13.hostnameVerifier = hostnameVerifier30;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = new com.squareup.okhttp.OkHttpClient(okHttpClient13);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory33 = okHttpClient13.sslSocketFactory;
        java.net.ProxySelector proxySelector34 = okHttpClient13.getProxySelector();
        java.util.List<java.lang.String> strList35 = okHttpClient13.transports;
        java.util.List<java.lang.String> strList36 = okHttpClient13.getTransports();
        com.squareup.okhttp.OkHttpClient.DEFAULT_TRANSPORTS = strList36;
        // The following exception was thrown during execution in test generation
        try {
            com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient0.setTransports(strList36);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: transports doesn't contain http/1.1: [hi!]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNotNull(routeSet10);
        org.junit.Assert.assertNull(hostnameVerifier11);
        org.junit.Assert.assertNull(sSLSocketFactory12);
        org.junit.Assert.assertNull(hostnameVerifier18);
        org.junit.Assert.assertNull(proxy19);
        org.junit.Assert.assertNull(okResponseCache21);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(sSLSocketFactory33);
        org.junit.Assert.assertNull(proxySelector34);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNotNull(strList36);
    }

    @Test
    public void test07323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07323");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.ConnectionPool connectionPool12 = okHttpClient11.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator13 = okHttpClient11.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool16 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient11.connectionPool = connectionPool16;
        java.net.ResponseCache responseCache18 = okHttpClient11.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory19 = okHttpClient11.sslSocketFactory;
        java.net.Proxy proxy20 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress21 = proxy20.address();
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient11.setProxy(proxy20);
        com.squareup.okhttp.OkHttpClient okHttpClient23 = new com.squareup.okhttp.OkHttpClient(okHttpClient22);
        java.net.Proxy proxy24 = okHttpClient23.proxy;
        java.net.Proxy proxy25 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress26 = proxy25.address();
        java.net.Proxy.Type type27 = proxy25.type();
        okHttpClient23.proxy = proxy25;
        java.net.SocketAddress socketAddress29 = proxy25.address();
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNull(okAuthenticator13);
        org.junit.Assert.assertNull(responseCache18);
        org.junit.Assert.assertNull(sSLSocketFactory19);
        org.junit.Assert.assertNotNull(proxy20);
        org.junit.Assert.assertNull(socketAddress21);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNull(proxy24);
        org.junit.Assert.assertNotNull(proxy25);
        org.junit.Assert.assertNull(socketAddress26);
        org.junit.Assert.assertTrue("'" + type27 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type27.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress29);
    }

    @Test
    public void test07324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07324");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient0.connectionPool = connectionPool9;
        java.util.List<java.lang.String> strList11 = okHttpClient0.getTransports();
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient0.setHostnameVerifier(hostnameVerifier12);
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        com.squareup.okhttp.OkHttpClient okHttpClient16 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier17 = null;
        okHttpClient16.hostnameVerifier = hostnameVerifier17;
        java.net.ProxySelector proxySelector19 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient16.setProxySelector(proxySelector19);
        java.net.CookieHandler cookieHandler21 = okHttpClient16.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier23 = null;
        okHttpClient22.hostnameVerifier = hostnameVerifier23;
        java.net.ResponseCache responseCache25 = null;
        okHttpClient22.responseCache = responseCache25;
        java.util.List<java.lang.String> strList27 = okHttpClient22.transports;
        com.squareup.okhttp.ConnectionPool connectionPool28 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient22.connectionPool = connectionPool28;
        java.net.Proxy proxy30 = null;
        okHttpClient22.proxy = proxy30;
        java.util.Set<com.squareup.okhttp.Route> routeSet32 = okHttpClient22.failedRoutes;
        okHttpClient16.failedRoutes = routeSet32;
        java.net.ProxySelector proxySelector34 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient16.setProxySelector(proxySelector34);
        java.net.CookieHandler cookieHandler36 = okHttpClient16.cookieHandler;
        com.squareup.okhttp.OkHttpClient okHttpClient37 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool38 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient37.connectionPool = connectionPool38;
        com.squareup.okhttp.OkHttpClient okHttpClient40 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier41 = null;
        okHttpClient40.hostnameVerifier = hostnameVerifier41;
        java.net.ResponseCache responseCache43 = null;
        okHttpClient40.responseCache = responseCache43;
        java.util.List<java.lang.String> strList45 = okHttpClient40.transports;
        com.squareup.okhttp.ConnectionPool connectionPool46 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient40.connectionPool = connectionPool46;
        com.squareup.okhttp.OkHttpClient okHttpClient48 = okHttpClient37.setConnectionPool(connectionPool46);
        java.net.Proxy proxy49 = okHttpClient48.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient50 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool51 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient50.connectionPool = connectionPool51;
        int int53 = connectionPool51.getSpdyConnectionCount();
        okHttpClient48.connectionPool = connectionPool51;
        int int55 = connectionPool51.getSpdyConnectionCount();
        int int56 = connectionPool51.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient57 = okHttpClient16.setConnectionPool(connectionPool51);
        com.squareup.okhttp.OkHttpClient okHttpClient58 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier59 = null;
        okHttpClient58.hostnameVerifier = hostnameVerifier59;
        java.net.ResponseCache responseCache61 = null;
        okHttpClient58.responseCache = responseCache61;
        java.util.List<java.lang.String> strList63 = okHttpClient58.transports;
        com.squareup.okhttp.ConnectionPool connectionPool64 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient58.connectionPool = connectionPool64;
        com.squareup.okhttp.OkHttpClient okHttpClient66 = okHttpClient58.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient67 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier68 = null;
        okHttpClient67.hostnameVerifier = hostnameVerifier68;
        java.net.ResponseCache responseCache70 = null;
        okHttpClient67.responseCache = responseCache70;
        java.util.List<java.lang.String> strList72 = okHttpClient67.transports;
        com.squareup.okhttp.ConnectionPool connectionPool73 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient67.connectionPool = connectionPool73;
        com.squareup.okhttp.OkHttpClient okHttpClient75 = okHttpClient67.copyWithDefaults();
        java.net.ProxySelector proxySelector76 = okHttpClient75.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory77 = okHttpClient75.getSslSocketFactory();
        okHttpClient58.sslSocketFactory = sSLSocketFactory77;
        okHttpClient16.sslSocketFactory = sSLSocketFactory77;
        java.lang.String[] strArray80 = sSLSocketFactory77.getSupportedCipherSuites();
        java.lang.String[] strArray81 = sSLSocketFactory77.getSupportedCipherSuites();
        okHttpClient15.sslSocketFactory = sSLSocketFactory77;
        java.lang.String[] strArray83 = sSLSocketFactory77.getDefaultCipherSuites();
        java.lang.String[] strArray84 = sSLSocketFactory77.getDefaultCipherSuites();
        java.net.InetAddress inetAddress85 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket87 = sSLSocketFactory77.createSocket(inetAddress85, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.net.ConnectException; message: Connection refused (Connection refused)");
        } catch (java.net.ConnectException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNotNull(okHttpClient14);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNull(cookieHandler21);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNotNull(connectionPool28);
        org.junit.Assert.assertNotNull(routeSet32);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNull(cookieHandler36);
        org.junit.Assert.assertNotNull(connectionPool38);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNotNull(connectionPool46);
        org.junit.Assert.assertNotNull(okHttpClient48);
        org.junit.Assert.assertNull(proxy49);
        org.junit.Assert.assertNotNull(connectionPool51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(okHttpClient57);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNotNull(connectionPool64);
        org.junit.Assert.assertNotNull(okHttpClient66);
        org.junit.Assert.assertNull(strList72);
        org.junit.Assert.assertNotNull(connectionPool73);
        org.junit.Assert.assertNotNull(okHttpClient75);
// flaky:         org.junit.Assert.assertNull(proxySelector76);
        org.junit.Assert.assertNotNull(sSLSocketFactory77);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertNotNull(strArray84);
    }

    @Test
    public void test07325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07325");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        okHttpClient0.authenticator = okAuthenticator3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient0.responseCache = responseCache6;
        boolean boolean8 = okHttpClient0.getFollowProtocolRedirects();
        java.net.ResponseCache responseCache9 = okHttpClient0.responseCache;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool11 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient10.connectionPool = connectionPool11;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = null;
        okHttpClient13.hostnameVerifier = hostnameVerifier14;
        java.net.ResponseCache responseCache16 = null;
        okHttpClient13.responseCache = responseCache16;
        java.util.List<java.lang.String> strList18 = okHttpClient13.transports;
        com.squareup.okhttp.ConnectionPool connectionPool19 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient13.connectionPool = connectionPool19;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient10.setConnectionPool(connectionPool19);
        com.squareup.okhttp.ConnectionPool connectionPool22 = okHttpClient21.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator23 = okHttpClient21.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool26 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient21.connectionPool = connectionPool26;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory28 = okHttpClient21.sslSocketFactory;
        com.squareup.okhttp.OkAuthenticator okAuthenticator29 = okHttpClient21.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient30 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache31 = okHttpClient30.okResponseCache();
        java.net.ResponseCache responseCache32 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient30.setResponseCache(responseCache32);
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        okHttpClient30.transports = strList36;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory39 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient40 = okHttpClient30.setSSLSocketFactory(sSLSocketFactory39);
        com.squareup.okhttp.OkHttpClient okHttpClient41 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache42 = okHttpClient41.okResponseCache();
        java.net.ResponseCache responseCache43 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient44 = okHttpClient41.setResponseCache(responseCache43);
        java.lang.String[] strArray46 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList47 = new java.util.ArrayList<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        okHttpClient41.transports = strList47;
        okHttpClient30.transports = strList47;
        com.squareup.okhttp.OkHttpClient.DEFAULT_TRANSPORTS = strList47;
        okHttpClient21.transports = strList47;
        com.squareup.okhttp.OkHttpClient.DEFAULT_TRANSPORTS = strList47;
        // The following exception was thrown during execution in test generation
        try {
            com.squareup.okhttp.OkHttpClient okHttpClient54 = okHttpClient0.setTransports((java.util.List<java.lang.String>) strList47);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: transports doesn't contain http/1.1: [hi!]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(responseCache9);
        org.junit.Assert.assertNotNull(connectionPool11);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(connectionPool19);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNotNull(connectionPool22);
        org.junit.Assert.assertNull(okAuthenticator23);
        org.junit.Assert.assertNull(sSLSocketFactory28);
        org.junit.Assert.assertNull(okAuthenticator29);
        org.junit.Assert.assertNull(okResponseCache31);
        org.junit.Assert.assertNotNull(okHttpClient33);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(okHttpClient40);
        org.junit.Assert.assertNull(okResponseCache42);
        org.junit.Assert.assertNotNull(okHttpClient44);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
    }

    @Test
    public void test07326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07326");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient9 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier10 = null;
        okHttpClient9.hostnameVerifier = hostnameVerifier10;
        java.net.ResponseCache responseCache12 = null;
        okHttpClient9.responseCache = responseCache12;
        java.util.List<java.lang.String> strList14 = okHttpClient9.transports;
        com.squareup.okhttp.ConnectionPool connectionPool15 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient9.connectionPool = connectionPool15;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient9.copyWithDefaults();
        java.net.ProxySelector proxySelector18 = okHttpClient17.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory19 = okHttpClient17.getSslSocketFactory();
        okHttpClient0.sslSocketFactory = sSLSocketFactory19;
        java.net.Socket socket21 = sSLSocketFactory19.createSocket();
        java.lang.String[] strArray22 = sSLSocketFactory19.getDefaultCipherSuites();
        java.lang.String[] strArray23 = sSLSocketFactory19.getDefaultCipherSuites();
        java.lang.String[] strArray24 = sSLSocketFactory19.getDefaultCipherSuites();
        java.net.InetAddress inetAddress25 = null;
        java.net.InetAddress inetAddress27 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket29 = sSLSocketFactory19.createSocket(inetAddress25, 0, inetAddress27, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: port out of range:-1");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNotNull(connectionPool15);
        org.junit.Assert.assertNotNull(okHttpClient17);
// flaky:         org.junit.Assert.assertNull(proxySelector18);
        org.junit.Assert.assertNotNull(sSLSocketFactory19);
        org.junit.Assert.assertNotNull(socket21);
        org.junit.Assert.assertEquals(socket21.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(strArray24);
    }

    @Test
    public void test07327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07327");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient4.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient5.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = null;
        okHttpClient7.hostnameVerifier = hostnameVerifier8;
        java.net.ProxySelector proxySelector10 = okHttpClient7.proxySelector;
        java.net.Proxy proxy11 = okHttpClient7.proxy;
        java.util.List<java.lang.String> strList12 = okHttpClient7.transports;
        boolean boolean13 = okHttpClient7.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool15 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient14.connectionPool = connectionPool15;
        java.net.ResponseCache responseCache17 = null;
        okHttpClient14.responseCache = responseCache17;
        java.net.Proxy proxy19 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress20 = proxy19.address();
        java.net.SocketAddress socketAddress21 = proxy19.address();
        okHttpClient14.proxy = proxy19;
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient7.setProxy(proxy19);
        okHttpClient5.proxy = proxy19;
        java.net.ProxySelector proxySelector25 = okHttpClient5.proxySelector;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier27 = null;
        okHttpClient26.hostnameVerifier = hostnameVerifier27;
        java.net.ResponseCache responseCache29 = null;
        okHttpClient26.responseCache = responseCache29;
        java.util.List<java.lang.String> strList31 = okHttpClient26.transports;
        com.squareup.okhttp.ConnectionPool connectionPool32 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient26.connectionPool = connectionPool32;
        java.net.Proxy proxy34 = null;
        okHttpClient26.proxy = proxy34;
        boolean boolean36 = okHttpClient26.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient37 = new com.squareup.okhttp.OkHttpClient(okHttpClient26);
        java.net.ProxySelector proxySelector38 = okHttpClient37.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier39 = okHttpClient37.hostnameVerifier;
        java.net.Proxy proxy40 = java.net.Proxy.NO_PROXY;
        boolean boolean42 = proxy40.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type43 = proxy40.type();
        java.net.Proxy.Type type44 = proxy40.type();
        okHttpClient37.proxy = proxy40;
        com.squareup.okhttp.OkHttpClient okHttpClient46 = okHttpClient5.setProxy(proxy40);
        java.lang.String str47 = proxy40.toString();
        java.net.SocketAddress socketAddress48 = proxy40.address();
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNotNull(okHttpClient6);
        org.junit.Assert.assertNull(proxySelector10);
        org.junit.Assert.assertNull(proxy11);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(connectionPool15);
        org.junit.Assert.assertNotNull(proxy19);
        org.junit.Assert.assertNull(socketAddress20);
        org.junit.Assert.assertNull(socketAddress21);
        org.junit.Assert.assertNotNull(okHttpClient23);
// flaky:         org.junit.Assert.assertNull(proxySelector25);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNotNull(connectionPool32);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(proxySelector38);
        org.junit.Assert.assertNull(hostnameVerifier39);
        org.junit.Assert.assertNotNull(proxy40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + type43 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type43.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertTrue("'" + type44 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type44.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNotNull(okHttpClient46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "DIRECT" + "'", str47, "DIRECT");
        org.junit.Assert.assertNull(socketAddress48);
    }

    @Test
    public void test07328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07328");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient0.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.copyWithDefaults();
        java.net.Proxy proxy12 = okHttpClient11.getProxy();
        java.net.CookieHandler cookieHandler13 = null;
        okHttpClient11.cookieHandler = cookieHandler13;
        java.util.List<java.lang.String> strList15 = okHttpClient11.transports;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool17 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient16.connectionPool = connectionPool17;
        com.squareup.okhttp.OkAuthenticator okAuthenticator19 = null;
        okHttpClient16.authenticator = okAuthenticator19;
        java.net.CookieHandler cookieHandler21 = null;
        okHttpClient16.cookieHandler = cookieHandler21;
        java.net.Proxy proxy23 = java.net.Proxy.NO_PROXY;
        boolean boolean25 = proxy23.equals((java.lang.Object) 1L);
        com.squareup.okhttp.OkHttpClient okHttpClient26 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache27 = okHttpClient26.okResponseCache();
        java.net.ResponseCache responseCache28 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient26.setResponseCache(responseCache28);
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        okHttpClient26.transports = strList32;
        boolean boolean35 = proxy23.equals((java.lang.Object) strList32);
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient16.setProxy(proxy23);
        com.squareup.okhttp.OkHttpClient okHttpClient37 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier38 = null;
        okHttpClient37.hostnameVerifier = hostnameVerifier38;
        java.net.ProxySelector proxySelector40 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient41 = okHttpClient37.setProxySelector(proxySelector40);
        java.net.CookieHandler cookieHandler42 = okHttpClient37.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient43 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier44 = null;
        okHttpClient43.hostnameVerifier = hostnameVerifier44;
        java.net.ResponseCache responseCache46 = null;
        okHttpClient43.responseCache = responseCache46;
        java.util.List<java.lang.String> strList48 = okHttpClient43.transports;
        com.squareup.okhttp.ConnectionPool connectionPool49 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient43.connectionPool = connectionPool49;
        java.net.Proxy proxy51 = null;
        okHttpClient43.proxy = proxy51;
        java.util.Set<com.squareup.okhttp.Route> routeSet53 = okHttpClient43.failedRoutes;
        okHttpClient37.failedRoutes = routeSet53;
        javax.net.ssl.HostnameVerifier hostnameVerifier55 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient56 = okHttpClient37.setHostnameVerifier(hostnameVerifier55);
        boolean boolean57 = proxy23.equals((java.lang.Object) okHttpClient56);
        java.net.SocketAddress socketAddress58 = proxy23.address();
        com.squareup.okhttp.OkHttpClient okHttpClient59 = okHttpClient11.setProxy(proxy23);
        java.net.CookieHandler cookieHandler60 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient61 = okHttpClient59.setCookieHandler(cookieHandler60);
        java.net.Proxy proxy62 = okHttpClient61.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient63 = new com.squareup.okhttp.OkHttpClient(okHttpClient61);
        java.util.List<java.lang.String> strList64 = okHttpClient63.transports;
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(proxy12);
        org.junit.Assert.assertNotNull(strList15);
        org.junit.Assert.assertNotNull(connectionPool17);
        org.junit.Assert.assertNotNull(proxy23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(okResponseCache27);
        org.junit.Assert.assertNotNull(okHttpClient29);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNotNull(okHttpClient41);
        org.junit.Assert.assertNull(cookieHandler42);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNotNull(connectionPool49);
        org.junit.Assert.assertNotNull(routeSet53);
        org.junit.Assert.assertNotNull(okHttpClient56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(socketAddress58);
        org.junit.Assert.assertNotNull(okHttpClient59);
        org.junit.Assert.assertNotNull(okHttpClient61);
        org.junit.Assert.assertNotNull(proxy62);
        org.junit.Assert.assertNull(strList64);
    }

    @Test
    public void test07329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07329");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.ConnectionPool connectionPool12 = okHttpClient11.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator13 = okHttpClient11.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool14 = okHttpClient11.getConnectionPool();
        com.squareup.okhttp.Connection connection15 = null;
        // The following exception was thrown during execution in test generation
        try {
            connectionPool14.recycle(connection15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNull(okAuthenticator13);
        org.junit.Assert.assertNotNull(connectionPool14);
    }

    @Test
    public void test07330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07330");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient0.copyWithDefaults();
        java.net.ProxySelector proxySelector9 = okHttpClient8.proxySelector;
        com.squareup.okhttp.ConnectionPool connectionPool10 = okHttpClient8.connectionPool;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient(okHttpClient8);
        java.net.CookieHandler cookieHandler12 = okHttpClient8.getCookieHandler();
        java.net.CookieHandler cookieHandler13 = null;
        okHttpClient8.cookieHandler = cookieHandler13;
        java.net.CookieHandler cookieHandler15 = okHttpClient8.getCookieHandler();
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNotNull(okHttpClient8);
// flaky:         org.junit.Assert.assertNull(proxySelector9);
        org.junit.Assert.assertNotNull(connectionPool10);
        org.junit.Assert.assertNull(cookieHandler12);
        org.junit.Assert.assertNull(cookieHandler15);
    }

    @Test
    public void test07331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07331");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.CookieHandler cookieHandler5 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = null;
        okHttpClient6.hostnameVerifier = hostnameVerifier7;
        java.net.ResponseCache responseCache9 = null;
        okHttpClient6.responseCache = responseCache9;
        java.util.List<java.lang.String> strList11 = okHttpClient6.transports;
        com.squareup.okhttp.ConnectionPool connectionPool12 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient6.connectionPool = connectionPool12;
        java.net.Proxy proxy14 = null;
        okHttpClient6.proxy = proxy14;
        java.util.Set<com.squareup.okhttp.Route> routeSet16 = okHttpClient6.failedRoutes;
        okHttpClient0.failedRoutes = routeSet16;
        java.net.ProxySelector proxySelector18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient0.setProxySelector(proxySelector18);
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient21 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        com.squareup.okhttp.OkAuthenticator okAuthenticator22 = okHttpClient0.getAuthenticator();
        java.net.ResponseCache responseCache23 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient0.setResponseCache(responseCache23);
        com.squareup.okhttp.ConnectionPool connectionPool25 = okHttpClient24.getConnectionPool();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory26 = okHttpClient24.sslSocketFactory;
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNotNull(routeSet16);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNull(okAuthenticator22);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNull(connectionPool25);
        org.junit.Assert.assertNull(sSLSocketFactory26);
    }

    @Test
    public void test07332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07332");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.CookieHandler cookieHandler5 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = null;
        okHttpClient6.hostnameVerifier = hostnameVerifier7;
        java.net.ResponseCache responseCache9 = null;
        okHttpClient6.responseCache = responseCache9;
        java.util.List<java.lang.String> strList11 = okHttpClient6.transports;
        com.squareup.okhttp.ConnectionPool connectionPool12 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient6.connectionPool = connectionPool12;
        java.net.Proxy proxy14 = null;
        okHttpClient6.proxy = proxy14;
        java.util.Set<com.squareup.okhttp.Route> routeSet16 = okHttpClient6.failedRoutes;
        okHttpClient0.failedRoutes = routeSet16;
        java.net.ProxySelector proxySelector18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient0.setProxySelector(proxySelector18);
        com.squareup.okhttp.OkHttpClient okHttpClient20 = new com.squareup.okhttp.OkHttpClient(okHttpClient19);
        com.squareup.okhttp.OkAuthenticator okAuthenticator21 = okHttpClient20.authenticator;
        java.net.ProxySelector proxySelector22 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient20.setProxySelector(proxySelector22);
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient23.copyWithDefaults();
        java.net.ResponseCache responseCache25 = null;
        okHttpClient23.responseCache = responseCache25;
        java.net.ProxySelector proxySelector27 = okHttpClient23.proxySelector;
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNotNull(routeSet16);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNull(okAuthenticator21);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNull(proxySelector27);
    }

    @Test
    public void test07333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07333");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.CookieHandler cookieHandler6 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        com.squareup.okhttp.OkAuthenticator okAuthenticator8 = okHttpClient7.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier10 = null;
        okHttpClient9.hostnameVerifier = hostnameVerifier10;
        java.net.ResponseCache responseCache12 = null;
        okHttpClient9.responseCache = responseCache12;
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = okHttpClient9.hostnameVerifier;
        java.net.Proxy proxy15 = okHttpClient9.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool18 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient9.connectionPool = connectionPool18;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient9.copyWithDefaults();
        java.net.ResponseCache responseCache21 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient20.setResponseCache(responseCache21);
        java.net.ProxySelector proxySelector23 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient20.setProxySelector(proxySelector23);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory25 = okHttpClient24.getSslSocketFactory();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory26 = okHttpClient24.getSslSocketFactory();
        javax.net.ssl.HostnameVerifier hostnameVerifier27 = okHttpClient24.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient7.setHostnameVerifier(hostnameVerifier27);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory29 = okHttpClient7.getSslSocketFactory();
        java.net.Proxy proxy30 = okHttpClient7.getProxy();
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(cookieHandler6);
        org.junit.Assert.assertNull(okAuthenticator8);
        org.junit.Assert.assertNull(hostnameVerifier14);
        org.junit.Assert.assertNull(proxy15);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNotNull(sSLSocketFactory25);
        org.junit.Assert.assertNotNull(sSLSocketFactory26);
        org.junit.Assert.assertNotNull(hostnameVerifier27);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNull(sSLSocketFactory29);
        org.junit.Assert.assertNull(proxy30);
    }

    @Test
    public void test07334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07334");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.ConnectionPool connectionPool12 = okHttpClient0.connectionPool;
        connectionPool12.evictAll();
        com.squareup.okhttp.Address address14 = null;
        com.squareup.okhttp.Connection connection15 = connectionPool12.get(address14);
        int int16 = connectionPool12.getSpdyConnectionCount();
        connectionPool12.evictAll();
        connectionPool12.evictAll();
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNull(connection15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
    }

    @Test
    public void test07335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07335");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.CookieHandler cookieHandler8 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache9 = okHttpClient0.okResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient10 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier11 = null;
        okHttpClient10.hostnameVerifier = hostnameVerifier11;
        java.net.ResponseCache responseCache13 = null;
        okHttpClient10.responseCache = responseCache13;
        java.util.List<java.lang.String> strList15 = okHttpClient10.transports;
        com.squareup.okhttp.ConnectionPool connectionPool16 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient10.connectionPool = connectionPool16;
        java.net.Proxy proxy18 = null;
        okHttpClient10.proxy = proxy18;
        boolean boolean20 = okHttpClient10.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient10.setFollowProtocolRedirects(true);
        javax.net.ssl.HostnameVerifier hostnameVerifier23 = null;
        okHttpClient10.hostnameVerifier = hostnameVerifier23;
        com.squareup.okhttp.OkHttpClient okHttpClient25 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier26 = null;
        okHttpClient25.hostnameVerifier = hostnameVerifier26;
        java.net.ResponseCache responseCache28 = null;
        okHttpClient25.responseCache = responseCache28;
        java.util.List<java.lang.String> strList30 = okHttpClient25.transports;
        com.squareup.okhttp.ConnectionPool connectionPool31 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient25.connectionPool = connectionPool31;
        java.net.Proxy proxy33 = null;
        okHttpClient25.proxy = proxy33;
        boolean boolean35 = okHttpClient25.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient25.setFollowProtocolRedirects(true);
        com.squareup.okhttp.OkHttpClient okHttpClient38 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier39 = null;
        okHttpClient38.hostnameVerifier = hostnameVerifier39;
        java.net.ResponseCache responseCache41 = null;
        okHttpClient38.responseCache = responseCache41;
        java.util.List<java.lang.String> strList43 = okHttpClient38.transports;
        com.squareup.okhttp.ConnectionPool connectionPool44 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient38.connectionPool = connectionPool44;
        com.squareup.okhttp.ConnectionPool connectionPool46 = okHttpClient38.connectionPool;
        com.squareup.okhttp.OkHttpClient okHttpClient47 = okHttpClient25.setConnectionPool(connectionPool46);
        com.squareup.okhttp.OkHttpClient okHttpClient48 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier49 = null;
        okHttpClient48.hostnameVerifier = hostnameVerifier49;
        java.net.ResponseCache responseCache51 = null;
        okHttpClient48.responseCache = responseCache51;
        java.util.List<java.lang.String> strList53 = okHttpClient48.transports;
        com.squareup.okhttp.ConnectionPool connectionPool54 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient48.connectionPool = connectionPool54;
        com.squareup.okhttp.OkHttpClient okHttpClient56 = okHttpClient48.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient57 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier58 = null;
        okHttpClient57.hostnameVerifier = hostnameVerifier58;
        java.net.ResponseCache responseCache60 = null;
        okHttpClient57.responseCache = responseCache60;
        java.util.List<java.lang.String> strList62 = okHttpClient57.transports;
        com.squareup.okhttp.ConnectionPool connectionPool63 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient57.connectionPool = connectionPool63;
        com.squareup.okhttp.OkHttpClient okHttpClient65 = okHttpClient57.copyWithDefaults();
        java.net.ProxySelector proxySelector66 = okHttpClient65.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory67 = okHttpClient65.getSslSocketFactory();
        okHttpClient48.sslSocketFactory = sSLSocketFactory67;
        com.squareup.okhttp.OkHttpClient okHttpClient69 = okHttpClient47.setSSLSocketFactory(sSLSocketFactory67);
        okHttpClient10.sslSocketFactory = sSLSocketFactory67;
        java.lang.String[] strArray71 = sSLSocketFactory67.getSupportedCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient72 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory67);
        java.net.InetAddress inetAddress75 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket77 = sSLSocketFactory67.createSocket("", (int) (short) 100, inetAddress75, 0);
            org.junit.Assert.fail("Expected exception of type java.net.ConnectException; message: Connection refused (Connection refused)");
        } catch (java.net.ConnectException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNull(cookieHandler8);
        org.junit.Assert.assertNull(okResponseCache9);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(connectionPool16);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNotNull(connectionPool31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(okHttpClient37);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNotNull(connectionPool44);
        org.junit.Assert.assertNotNull(connectionPool46);
        org.junit.Assert.assertNotNull(okHttpClient47);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNotNull(connectionPool54);
        org.junit.Assert.assertNotNull(okHttpClient56);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertNotNull(connectionPool63);
        org.junit.Assert.assertNotNull(okHttpClient65);
// flaky:         org.junit.Assert.assertNull(proxySelector66);
        org.junit.Assert.assertNotNull(sSLSocketFactory67);
        org.junit.Assert.assertNotNull(okHttpClient69);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertNotNull(okHttpClient72);
    }

    @Test
    public void test07336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07336");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient4.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient5.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet7 = okHttpClient6.failedRoutes;
        java.util.Set<com.squareup.okhttp.Route> routeSet8 = okHttpClient6.failedRoutes;
        java.util.List<java.lang.String> strList9 = okHttpClient6.getTransports();
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNotNull(okHttpClient6);
        org.junit.Assert.assertNotNull(routeSet7);
        org.junit.Assert.assertNotNull(routeSet8);
        org.junit.Assert.assertNotNull(strList9);
    }

    @Test
    public void test07337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07337");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient0.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.copyWithDefaults();
        java.net.ResponseCache responseCache12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setResponseCache(responseCache12);
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient13.setFollowProtocolRedirects(false);
        java.util.List<java.lang.String> strList16 = okHttpClient13.transports;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient13.setFollowProtocolRedirects(false);
        com.squareup.okhttp.OkHttpClient okHttpClient19 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool20 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient19.connectionPool = connectionPool20;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier23 = null;
        okHttpClient22.hostnameVerifier = hostnameVerifier23;
        java.net.ResponseCache responseCache25 = null;
        okHttpClient22.responseCache = responseCache25;
        java.util.List<java.lang.String> strList27 = okHttpClient22.transports;
        com.squareup.okhttp.ConnectionPool connectionPool28 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient22.connectionPool = connectionPool28;
        com.squareup.okhttp.OkHttpClient okHttpClient30 = okHttpClient19.setConnectionPool(connectionPool28);
        java.net.Proxy proxy31 = okHttpClient30.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool33 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient32.connectionPool = connectionPool33;
        int int35 = connectionPool33.getSpdyConnectionCount();
        okHttpClient30.connectionPool = connectionPool33;
        com.squareup.okhttp.OkHttpClient okHttpClient37 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier38 = null;
        okHttpClient37.hostnameVerifier = hostnameVerifier38;
        java.net.ResponseCache responseCache40 = null;
        okHttpClient37.responseCache = responseCache40;
        javax.net.ssl.HostnameVerifier hostnameVerifier42 = okHttpClient37.hostnameVerifier;
        java.net.Proxy proxy43 = okHttpClient37.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool46 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient37.connectionPool = connectionPool46;
        com.squareup.okhttp.OkHttpClient okHttpClient48 = okHttpClient37.copyWithDefaults();
        java.net.ResponseCache responseCache49 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient48.setResponseCache(responseCache49);
        com.squareup.okhttp.OkAuthenticator okAuthenticator51 = okHttpClient48.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient52 = okHttpClient30.setAuthenticator(okAuthenticator51);
        okHttpClient13.authenticator = okAuthenticator51;
        java.net.CookieHandler cookieHandler54 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient55 = okHttpClient13.setCookieHandler(cookieHandler54);
        com.squareup.okhttp.ConnectionPool connectionPool58 = new com.squareup.okhttp.ConnectionPool(0, (long) (byte) 1);
        okHttpClient13.connectionPool = connectionPool58;
        java.net.ProxySelector proxySelector60 = null;
        okHttpClient13.proxySelector = proxySelector60;
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNotNull(connectionPool20);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNotNull(connectionPool28);
        org.junit.Assert.assertNotNull(okHttpClient30);
        org.junit.Assert.assertNull(proxy31);
        org.junit.Assert.assertNotNull(connectionPool33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNull(hostnameVerifier42);
        org.junit.Assert.assertNull(proxy43);
        org.junit.Assert.assertNotNull(okHttpClient48);
        org.junit.Assert.assertNotNull(okHttpClient50);
        org.junit.Assert.assertNotNull(okAuthenticator51);
        org.junit.Assert.assertNotNull(okHttpClient52);
        org.junit.Assert.assertNotNull(okHttpClient55);
    }

    @Test
    public void test07338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07338");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient0.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.copyWithDefaults();
        java.net.ResponseCache responseCache12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setResponseCache(responseCache12);
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient13.setFollowProtocolRedirects(false);
        java.net.ResponseCache responseCache16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient13.setResponseCache(responseCache16);
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool19 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient18.connectionPool = connectionPool19;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier22 = null;
        okHttpClient21.hostnameVerifier = hostnameVerifier22;
        java.net.ResponseCache responseCache24 = null;
        okHttpClient21.responseCache = responseCache24;
        java.util.List<java.lang.String> strList26 = okHttpClient21.transports;
        com.squareup.okhttp.ConnectionPool connectionPool27 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient21.connectionPool = connectionPool27;
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient18.setConnectionPool(connectionPool27);
        java.net.ResponseCache responseCache30 = okHttpClient18.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory31 = okHttpClient18.sslSocketFactory;
        java.net.CookieHandler cookieHandler32 = okHttpClient18.getCookieHandler();
        com.squareup.okhttp.OkAuthenticator okAuthenticator33 = okHttpClient18.authenticator;
        java.util.Set<com.squareup.okhttp.Route> routeSet34 = okHttpClient18.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient35 = new com.squareup.okhttp.OkHttpClient(okHttpClient18);
        com.squareup.okhttp.OkHttpClient okHttpClient36 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier37 = null;
        okHttpClient36.hostnameVerifier = hostnameVerifier37;
        java.net.ResponseCache responseCache39 = null;
        okHttpClient36.responseCache = responseCache39;
        javax.net.ssl.HostnameVerifier hostnameVerifier41 = okHttpClient36.hostnameVerifier;
        java.net.Proxy proxy42 = okHttpClient36.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool45 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient36.connectionPool = connectionPool45;
        com.squareup.okhttp.OkHttpClient okHttpClient47 = okHttpClient36.copyWithDefaults();
        java.net.ResponseCache responseCache48 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient49 = okHttpClient47.setResponseCache(responseCache48);
        javax.net.ssl.HostnameVerifier hostnameVerifier50 = okHttpClient49.hostnameVerifier;
        okHttpClient35.hostnameVerifier = hostnameVerifier50;
        com.squareup.okhttp.OkHttpClient okHttpClient52 = okHttpClient13.setHostnameVerifier(hostnameVerifier50);
        java.net.CookieHandler cookieHandler53 = null;
        okHttpClient13.cookieHandler = cookieHandler53;
        java.net.Proxy proxy55 = okHttpClient13.getProxy();
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNotNull(connectionPool19);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNotNull(connectionPool27);
        org.junit.Assert.assertNotNull(okHttpClient29);
        org.junit.Assert.assertNull(responseCache30);
        org.junit.Assert.assertNull(sSLSocketFactory31);
        org.junit.Assert.assertNull(cookieHandler32);
        org.junit.Assert.assertNull(okAuthenticator33);
        org.junit.Assert.assertNotNull(routeSet34);
        org.junit.Assert.assertNull(hostnameVerifier41);
        org.junit.Assert.assertNull(proxy42);
        org.junit.Assert.assertNotNull(okHttpClient47);
        org.junit.Assert.assertNotNull(okHttpClient49);
        org.junit.Assert.assertNotNull(hostnameVerifier50);
        org.junit.Assert.assertNotNull(okHttpClient52);
        org.junit.Assert.assertNull(proxy55);
    }

    @Test
    public void test07339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07339");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.CookieHandler cookieHandler8 = okHttpClient0.cookieHandler;
        java.net.ProxySelector proxySelector9 = null;
        okHttpClient0.proxySelector = proxySelector9;
        java.net.CookieHandler cookieHandler11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient0.setCookieHandler(cookieHandler11);
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient(okHttpClient12);
        java.net.CookieHandler cookieHandler14 = okHttpClient12.cookieHandler;
        java.net.URL uRL15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.HttpURLConnection httpURLConnection16 = okHttpClient12.open(uRL15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNull(cookieHandler8);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertNull(cookieHandler14);
    }

    @Test
    public void test07340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07340");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.Proxy proxy8 = null;
        okHttpClient0.proxy = proxy8;
        java.util.Set<com.squareup.okhttp.Route> routeSet10 = okHttpClient0.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = null;
        okHttpClient11.hostnameVerifier = hostnameVerifier12;
        java.net.ResponseCache responseCache14 = null;
        okHttpClient11.responseCache = responseCache14;
        javax.net.ssl.HostnameVerifier hostnameVerifier16 = okHttpClient11.hostnameVerifier;
        java.net.Proxy proxy17 = okHttpClient11.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool20 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient11.connectionPool = connectionPool20;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient11.copyWithDefaults();
        java.net.ResponseCache responseCache23 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient22.setResponseCache(responseCache23);
        com.squareup.okhttp.OkAuthenticator okAuthenticator25 = okHttpClient22.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier27 = null;
        okHttpClient26.hostnameVerifier = hostnameVerifier27;
        java.net.ProxySelector proxySelector29 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient30 = okHttpClient26.setProxySelector(proxySelector29);
        java.net.CookieHandler cookieHandler31 = okHttpClient26.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient32 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier33 = null;
        okHttpClient32.hostnameVerifier = hostnameVerifier33;
        java.net.ResponseCache responseCache35 = null;
        okHttpClient32.responseCache = responseCache35;
        java.util.List<java.lang.String> strList37 = okHttpClient32.transports;
        com.squareup.okhttp.ConnectionPool connectionPool38 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient32.connectionPool = connectionPool38;
        java.net.Proxy proxy40 = null;
        okHttpClient32.proxy = proxy40;
        java.util.Set<com.squareup.okhttp.Route> routeSet42 = okHttpClient32.failedRoutes;
        okHttpClient26.failedRoutes = routeSet42;
        javax.net.ssl.HostnameVerifier hostnameVerifier44 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient45 = okHttpClient26.setHostnameVerifier(hostnameVerifier44);
        java.net.ProxySelector proxySelector46 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient47 = okHttpClient45.setProxySelector(proxySelector46);
        com.squareup.okhttp.OkHttpClient okHttpClient49 = okHttpClient45.setFollowProtocolRedirects(true);
        com.squareup.okhttp.OkHttpClient okHttpClient50 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool51 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient50.connectionPool = connectionPool51;
        com.squareup.okhttp.OkHttpClient okHttpClient53 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier54 = null;
        okHttpClient53.hostnameVerifier = hostnameVerifier54;
        java.net.ResponseCache responseCache56 = null;
        okHttpClient53.responseCache = responseCache56;
        java.util.List<java.lang.String> strList58 = okHttpClient53.transports;
        com.squareup.okhttp.ConnectionPool connectionPool59 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient53.connectionPool = connectionPool59;
        com.squareup.okhttp.OkHttpClient okHttpClient61 = okHttpClient50.setConnectionPool(connectionPool59);
        java.net.Proxy proxy62 = okHttpClient61.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient63 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool64 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient63.connectionPool = connectionPool64;
        int int66 = connectionPool64.getSpdyConnectionCount();
        okHttpClient61.connectionPool = connectionPool64;
        com.squareup.okhttp.OkHttpClient okHttpClient68 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier69 = null;
        okHttpClient68.hostnameVerifier = hostnameVerifier69;
        java.net.ResponseCache responseCache71 = null;
        okHttpClient68.responseCache = responseCache71;
        javax.net.ssl.HostnameVerifier hostnameVerifier73 = okHttpClient68.hostnameVerifier;
        java.net.Proxy proxy74 = okHttpClient68.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool77 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient68.connectionPool = connectionPool77;
        com.squareup.okhttp.OkHttpClient okHttpClient79 = okHttpClient68.copyWithDefaults();
        java.net.ResponseCache responseCache80 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient81 = okHttpClient79.setResponseCache(responseCache80);
        com.squareup.okhttp.OkAuthenticator okAuthenticator82 = okHttpClient79.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient83 = okHttpClient61.setAuthenticator(okAuthenticator82);
        com.squareup.okhttp.OkHttpClient okHttpClient84 = okHttpClient45.setAuthenticator(okAuthenticator82);
        com.squareup.okhttp.OkHttpClient okHttpClient85 = okHttpClient22.setAuthenticator(okAuthenticator82);
        com.squareup.okhttp.OkHttpClient okHttpClient86 = okHttpClient0.setAuthenticator(okAuthenticator82);
        com.squareup.okhttp.OkAuthenticator okAuthenticator87 = okHttpClient0.authenticator;
        java.net.ProxySelector proxySelector88 = null;
        okHttpClient0.proxySelector = proxySelector88;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory90 = okHttpClient0.sslSocketFactory;
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNotNull(routeSet10);
        org.junit.Assert.assertNull(hostnameVerifier16);
        org.junit.Assert.assertNull(proxy17);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNotNull(okAuthenticator25);
        org.junit.Assert.assertNotNull(okHttpClient30);
        org.junit.Assert.assertNull(cookieHandler31);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(connectionPool38);
        org.junit.Assert.assertNotNull(routeSet42);
        org.junit.Assert.assertNotNull(okHttpClient45);
        org.junit.Assert.assertNotNull(okHttpClient47);
        org.junit.Assert.assertNotNull(okHttpClient49);
        org.junit.Assert.assertNotNull(connectionPool51);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNotNull(connectionPool59);
        org.junit.Assert.assertNotNull(okHttpClient61);
        org.junit.Assert.assertNull(proxy62);
        org.junit.Assert.assertNotNull(connectionPool64);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNull(hostnameVerifier73);
        org.junit.Assert.assertNull(proxy74);
        org.junit.Assert.assertNotNull(okHttpClient79);
        org.junit.Assert.assertNotNull(okHttpClient81);
        org.junit.Assert.assertNotNull(okAuthenticator82);
        org.junit.Assert.assertNotNull(okHttpClient83);
        org.junit.Assert.assertNotNull(okHttpClient84);
        org.junit.Assert.assertNotNull(okHttpClient85);
        org.junit.Assert.assertNotNull(okHttpClient86);
        org.junit.Assert.assertNotNull(okAuthenticator87);
        org.junit.Assert.assertNull(sSLSocketFactory90);
    }

    @Test
    public void test07341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07341");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        okHttpClient0.authenticator = okAuthenticator3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient0.responseCache = responseCache6;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier9 = null;
        okHttpClient8.hostnameVerifier = hostnameVerifier9;
        java.net.ResponseCache responseCache11 = null;
        okHttpClient8.responseCache = responseCache11;
        javax.net.ssl.HostnameVerifier hostnameVerifier13 = okHttpClient8.hostnameVerifier;
        java.net.Proxy proxy14 = okHttpClient8.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool17 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient8.connectionPool = connectionPool17;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient8.copyWithDefaults();
        java.net.Proxy proxy20 = okHttpClient19.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier21 = okHttpClient19.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient0.setHostnameVerifier(hostnameVerifier21);
        java.net.CookieHandler cookieHandler23 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient22.setCookieHandler(cookieHandler23);
        java.net.ProxySelector proxySelector25 = okHttpClient24.proxySelector;
        java.net.ResponseCache responseCache26 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient24.setResponseCache(responseCache26);
        java.net.CookieHandler cookieHandler28 = null;
        okHttpClient24.cookieHandler = cookieHandler28;
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNull(hostnameVerifier13);
        org.junit.Assert.assertNull(proxy14);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNull(proxy20);
        org.junit.Assert.assertNotNull(hostnameVerifier21);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNull(proxySelector25);
        org.junit.Assert.assertNotNull(okHttpClient27);
    }

    @Test
    public void test07342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07342");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.CookieHandler cookieHandler5 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = null;
        okHttpClient6.hostnameVerifier = hostnameVerifier7;
        java.net.ResponseCache responseCache9 = null;
        okHttpClient6.responseCache = responseCache9;
        java.util.List<java.lang.String> strList11 = okHttpClient6.transports;
        com.squareup.okhttp.ConnectionPool connectionPool12 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient6.connectionPool = connectionPool12;
        java.net.Proxy proxy14 = null;
        okHttpClient6.proxy = proxy14;
        java.util.Set<com.squareup.okhttp.Route> routeSet16 = okHttpClient6.failedRoutes;
        okHttpClient0.failedRoutes = routeSet16;
        java.net.ProxySelector proxySelector18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient0.setProxySelector(proxySelector18);
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient21 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        java.net.CookieHandler cookieHandler22 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient21.setCookieHandler(cookieHandler22);
        com.squareup.okhttp.OkHttpClient okHttpClient24 = new com.squareup.okhttp.OkHttpClient(okHttpClient23);
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient24.setFollowProtocolRedirects(false);
        java.net.ResponseCache responseCache27 = null;
        okHttpClient26.responseCache = responseCache27;
        com.squareup.okhttp.OkHttpClient okHttpClient29 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool30 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient29.connectionPool = connectionPool30;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier33 = null;
        okHttpClient32.hostnameVerifier = hostnameVerifier33;
        java.net.ResponseCache responseCache35 = null;
        okHttpClient32.responseCache = responseCache35;
        java.util.List<java.lang.String> strList37 = okHttpClient32.transports;
        com.squareup.okhttp.ConnectionPool connectionPool38 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient32.connectionPool = connectionPool38;
        com.squareup.okhttp.OkHttpClient okHttpClient40 = okHttpClient29.setConnectionPool(connectionPool38);
        com.squareup.okhttp.OkAuthenticator okAuthenticator41 = okHttpClient40.getAuthenticator();
        java.net.ProxySelector proxySelector42 = okHttpClient40.getProxySelector();
        java.net.ProxySelector proxySelector43 = null;
        okHttpClient40.proxySelector = proxySelector43;
        java.net.ProxySelector proxySelector45 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient46 = okHttpClient40.setProxySelector(proxySelector45);
        com.squareup.okhttp.OkHttpClient okHttpClient47 = okHttpClient46.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient48 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier49 = null;
        okHttpClient48.hostnameVerifier = hostnameVerifier49;
        boolean boolean51 = okHttpClient48.getFollowProtocolRedirects();
        java.net.CookieHandler cookieHandler52 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient53 = okHttpClient48.setCookieHandler(cookieHandler52);
        com.squareup.okhttp.OkHttpClient okHttpClient54 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier55 = null;
        okHttpClient54.hostnameVerifier = hostnameVerifier55;
        java.net.ResponseCache responseCache57 = null;
        okHttpClient54.responseCache = responseCache57;
        java.util.List<java.lang.String> strList59 = okHttpClient54.transports;
        com.squareup.okhttp.ConnectionPool connectionPool60 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient54.connectionPool = connectionPool60;
        com.squareup.okhttp.Address address62 = null;
        com.squareup.okhttp.Connection connection63 = connectionPool60.get(address62);
        com.squareup.okhttp.OkHttpClient okHttpClient64 = okHttpClient53.setConnectionPool(connectionPool60);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory65 = okHttpClient53.sslSocketFactory;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory66 = okHttpClient53.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient67 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier68 = null;
        okHttpClient67.hostnameVerifier = hostnameVerifier68;
        java.net.ResponseCache responseCache70 = null;
        okHttpClient67.responseCache = responseCache70;
        javax.net.ssl.HostnameVerifier hostnameVerifier72 = okHttpClient67.hostnameVerifier;
        java.net.Proxy proxy73 = okHttpClient67.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool76 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient67.connectionPool = connectionPool76;
        com.squareup.okhttp.OkHttpClient okHttpClient78 = okHttpClient67.copyWithDefaults();
        java.net.Proxy proxy79 = okHttpClient78.getProxy();
        java.net.CookieHandler cookieHandler80 = null;
        okHttpClient78.cookieHandler = cookieHandler80;
        com.squareup.okhttp.OkAuthenticator okAuthenticator82 = okHttpClient78.getAuthenticator();
        com.squareup.okhttp.OkHttpClient okHttpClient83 = okHttpClient53.setAuthenticator(okAuthenticator82);
        okHttpClient47.authenticator = okAuthenticator82;
        com.squareup.okhttp.OkHttpClient okHttpClient85 = okHttpClient47.copyWithDefaults();
        java.net.CookieHandler cookieHandler86 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient87 = okHttpClient85.setCookieHandler(cookieHandler86);
        java.util.List<java.lang.String> strList88 = okHttpClient87.transports;
        okHttpClient26.transports = strList88;
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNotNull(routeSet16);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNotNull(connectionPool30);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(connectionPool38);
        org.junit.Assert.assertNotNull(okHttpClient40);
        org.junit.Assert.assertNull(okAuthenticator41);
        org.junit.Assert.assertNull(proxySelector42);
        org.junit.Assert.assertNotNull(okHttpClient46);
        org.junit.Assert.assertNotNull(okHttpClient47);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(okHttpClient53);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNotNull(connectionPool60);
        org.junit.Assert.assertNull(connection63);
        org.junit.Assert.assertNotNull(okHttpClient64);
        org.junit.Assert.assertNull(sSLSocketFactory65);
        org.junit.Assert.assertNull(sSLSocketFactory66);
        org.junit.Assert.assertNull(hostnameVerifier72);
        org.junit.Assert.assertNull(proxy73);
        org.junit.Assert.assertNotNull(okHttpClient78);
        org.junit.Assert.assertNull(proxy79);
        org.junit.Assert.assertNotNull(okAuthenticator82);
        org.junit.Assert.assertNotNull(okHttpClient83);
        org.junit.Assert.assertNotNull(okHttpClient85);
        org.junit.Assert.assertNotNull(okHttpClient87);
        org.junit.Assert.assertNotNull(strList88);
    }

    @Test
    public void test07343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07343");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.CookieHandler cookieHandler5 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = null;
        okHttpClient6.hostnameVerifier = hostnameVerifier7;
        java.net.ResponseCache responseCache9 = null;
        okHttpClient6.responseCache = responseCache9;
        java.util.List<java.lang.String> strList11 = okHttpClient6.transports;
        com.squareup.okhttp.ConnectionPool connectionPool12 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient6.connectionPool = connectionPool12;
        java.net.Proxy proxy14 = null;
        okHttpClient6.proxy = proxy14;
        java.util.Set<com.squareup.okhttp.Route> routeSet16 = okHttpClient6.failedRoutes;
        okHttpClient0.failedRoutes = routeSet16;
        java.net.ProxySelector proxySelector18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient0.setProxySelector(proxySelector18);
        javax.net.ssl.HostnameVerifier hostnameVerifier20 = okHttpClient19.getHostnameVerifier();
        com.squareup.okhttp.ConnectionPool connectionPool21 = com.squareup.okhttp.ConnectionPool.getDefault();
        com.squareup.okhttp.Address address22 = null;
        com.squareup.okhttp.Connection connection23 = connectionPool21.get(address22);
        int int24 = connectionPool21.getSpdyConnectionCount();
        connectionPool21.evictAll();
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient19.setConnectionPool(connectionPool21);
        connectionPool21.evictAll();
        int int28 = connectionPool21.getSpdyConnectionCount();
        com.squareup.okhttp.Connection connection29 = null;
        // The following exception was thrown during execution in test generation
        try {
            connectionPool21.maybeShare(connection29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNotNull(routeSet16);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNull(hostnameVerifier20);
        org.junit.Assert.assertNotNull(connectionPool21);
        org.junit.Assert.assertNull(connection23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
    }

    @Test
    public void test07344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07344");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.OkAuthenticator okAuthenticator12 = okHttpClient11.getAuthenticator();
        java.net.ProxySelector proxySelector13 = okHttpClient11.getProxySelector();
        com.squareup.okhttp.OkHttpClient okHttpClient14 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool15 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient14.connectionPool = connectionPool15;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = null;
        okHttpClient17.hostnameVerifier = hostnameVerifier18;
        java.net.ResponseCache responseCache20 = null;
        okHttpClient17.responseCache = responseCache20;
        java.util.List<java.lang.String> strList22 = okHttpClient17.transports;
        com.squareup.okhttp.ConnectionPool connectionPool23 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient17.connectionPool = connectionPool23;
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient14.setConnectionPool(connectionPool23);
        java.net.ResponseCache responseCache26 = okHttpClient14.responseCache;
        java.net.ResponseCache responseCache27 = okHttpClient14.getResponseCache();
        java.net.ResponseCache responseCache28 = okHttpClient14.responseCache;
        com.squareup.okhttp.OkHttpClient okHttpClient29 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache30 = okHttpClient29.okResponseCache();
        java.net.ResponseCache responseCache31 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient29.setResponseCache(responseCache31);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory33 = okHttpClient29.sslSocketFactory;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory34 = okHttpClient29.sslSocketFactory;
        com.squareup.okhttp.OkHttpClient okHttpClient35 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier36 = null;
        okHttpClient35.hostnameVerifier = hostnameVerifier36;
        boolean boolean38 = okHttpClient35.getFollowProtocolRedirects();
        java.net.CookieHandler cookieHandler39 = okHttpClient35.cookieHandler;
        com.squareup.okhttp.OkHttpClient okHttpClient40 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier41 = null;
        okHttpClient40.hostnameVerifier = hostnameVerifier41;
        java.net.ResponseCache responseCache43 = null;
        okHttpClient40.responseCache = responseCache43;
        javax.net.ssl.HostnameVerifier hostnameVerifier45 = okHttpClient40.hostnameVerifier;
        java.net.Proxy proxy46 = okHttpClient40.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool49 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient40.connectionPool = connectionPool49;
        com.squareup.okhttp.OkHttpClient okHttpClient51 = okHttpClient40.copyWithDefaults();
        java.net.ResponseCache responseCache52 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient53 = okHttpClient51.setResponseCache(responseCache52);
        com.squareup.okhttp.OkAuthenticator okAuthenticator54 = okHttpClient51.authenticator;
        okHttpClient35.authenticator = okAuthenticator54;
        com.squareup.okhttp.OkHttpClient okHttpClient56 = okHttpClient29.setAuthenticator(okAuthenticator54);
        com.squareup.okhttp.OkHttpClient okHttpClient57 = okHttpClient14.setAuthenticator(okAuthenticator54);
        okHttpClient11.authenticator = okAuthenticator54;
        com.squareup.okhttp.ConnectionPool connectionPool59 = okHttpClient11.getConnectionPool();
        java.net.ProxySelector proxySelector60 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient61 = okHttpClient11.setProxySelector(proxySelector60);
        com.squareup.okhttp.OkHttpClient okHttpClient62 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool63 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient62.connectionPool = connectionPool63;
        com.squareup.okhttp.OkHttpClient okHttpClient65 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier66 = null;
        okHttpClient65.hostnameVerifier = hostnameVerifier66;
        java.net.ResponseCache responseCache68 = null;
        okHttpClient65.responseCache = responseCache68;
        java.util.List<java.lang.String> strList70 = okHttpClient65.transports;
        com.squareup.okhttp.ConnectionPool connectionPool71 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient65.connectionPool = connectionPool71;
        com.squareup.okhttp.OkHttpClient okHttpClient73 = okHttpClient62.setConnectionPool(connectionPool71);
        int int74 = connectionPool71.getConnectionCount();
        int int75 = connectionPool71.getSpdyConnectionCount();
        int int76 = connectionPool71.getHttpConnectionCount();
        okHttpClient11.connectionPool = connectionPool71;
        java.util.Set<com.squareup.okhttp.Route> routeSet78 = okHttpClient11.failedRoutes;
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(okAuthenticator12);
        org.junit.Assert.assertNull(proxySelector13);
        org.junit.Assert.assertNotNull(connectionPool15);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNotNull(connectionPool23);
        org.junit.Assert.assertNotNull(okHttpClient25);
        org.junit.Assert.assertNull(responseCache26);
        org.junit.Assert.assertNull(responseCache27);
        org.junit.Assert.assertNull(responseCache28);
        org.junit.Assert.assertNull(okResponseCache30);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertNull(sSLSocketFactory33);
        org.junit.Assert.assertNull(sSLSocketFactory34);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(cookieHandler39);
        org.junit.Assert.assertNull(hostnameVerifier45);
        org.junit.Assert.assertNull(proxy46);
        org.junit.Assert.assertNotNull(okHttpClient51);
        org.junit.Assert.assertNotNull(okHttpClient53);
        org.junit.Assert.assertNotNull(okAuthenticator54);
        org.junit.Assert.assertNotNull(okHttpClient56);
        org.junit.Assert.assertNotNull(okHttpClient57);
        org.junit.Assert.assertNotNull(connectionPool59);
        org.junit.Assert.assertNotNull(okHttpClient61);
        org.junit.Assert.assertNotNull(connectionPool63);
        org.junit.Assert.assertNull(strList70);
        org.junit.Assert.assertNotNull(connectionPool71);
        org.junit.Assert.assertNotNull(okHttpClient73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNotNull(routeSet78);
    }

    @Test
    public void test07345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07345");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.CookieHandler cookieHandler5 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = null;
        okHttpClient6.hostnameVerifier = hostnameVerifier7;
        java.net.ResponseCache responseCache9 = null;
        okHttpClient6.responseCache = responseCache9;
        java.util.List<java.lang.String> strList11 = okHttpClient6.transports;
        com.squareup.okhttp.ConnectionPool connectionPool12 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient6.connectionPool = connectionPool12;
        java.net.Proxy proxy14 = null;
        okHttpClient6.proxy = proxy14;
        java.util.Set<com.squareup.okhttp.Route> routeSet16 = okHttpClient6.failedRoutes;
        okHttpClient0.failedRoutes = routeSet16;
        java.net.ProxySelector proxySelector18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient0.setProxySelector(proxySelector18);
        com.squareup.okhttp.OkHttpClient okHttpClient20 = new com.squareup.okhttp.OkHttpClient(okHttpClient19);
        java.net.ResponseCache responseCache21 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient20.setResponseCache(responseCache21);
        com.squareup.okhttp.OkAuthenticator okAuthenticator23 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient22.setAuthenticator(okAuthenticator23);
        java.net.Proxy proxy25 = okHttpClient22.getProxy();
        com.squareup.okhttp.OkAuthenticator okAuthenticator26 = okHttpClient22.authenticator;
        java.net.ResponseCache responseCache27 = null;
        okHttpClient22.responseCache = responseCache27;
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNotNull(routeSet16);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNull(proxy25);
        org.junit.Assert.assertNull(okAuthenticator26);
    }

    @Test
    public void test07346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07346");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.CookieHandler cookieHandler5 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = null;
        okHttpClient6.hostnameVerifier = hostnameVerifier7;
        java.net.ResponseCache responseCache9 = null;
        okHttpClient6.responseCache = responseCache9;
        java.util.List<java.lang.String> strList11 = okHttpClient6.transports;
        com.squareup.okhttp.ConnectionPool connectionPool12 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient6.connectionPool = connectionPool12;
        java.net.Proxy proxy14 = null;
        okHttpClient6.proxy = proxy14;
        java.util.Set<com.squareup.okhttp.Route> routeSet16 = okHttpClient6.failedRoutes;
        okHttpClient0.failedRoutes = routeSet16;
        java.net.ProxySelector proxySelector18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient0.setProxySelector(proxySelector18);
        com.squareup.okhttp.OkHttpClient okHttpClient20 = new com.squareup.okhttp.OkHttpClient(okHttpClient19);
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient20.setFollowProtocolRedirects(false);
        java.net.ResponseCache responseCache23 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient22.setResponseCache(responseCache23);
        java.net.ProxySelector proxySelector25 = null;
        okHttpClient22.proxySelector = proxySelector25;
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNotNull(routeSet16);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNotNull(okHttpClient24);
    }

    @Test
    public void test07347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07347");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache1 = okHttpClient0.okResponseCache();
        java.net.ResponseCache responseCache2 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.setResponseCache(responseCache2);
        com.squareup.okhttp.OkHttpClient okHttpClient4 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool5 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient4.connectionPool = connectionPool5;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = null;
        okHttpClient7.hostnameVerifier = hostnameVerifier8;
        java.net.ResponseCache responseCache10 = null;
        okHttpClient7.responseCache = responseCache10;
        java.util.List<java.lang.String> strList12 = okHttpClient7.transports;
        com.squareup.okhttp.ConnectionPool connectionPool13 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient7.connectionPool = connectionPool13;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient4.setConnectionPool(connectionPool13);
        com.squareup.okhttp.OkAuthenticator okAuthenticator16 = okHttpClient15.getAuthenticator();
        java.net.ProxySelector proxySelector17 = okHttpClient15.getProxySelector();
        java.net.ResponseCache responseCache18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient15.setResponseCache(responseCache18);
        java.net.Proxy proxy20 = java.net.Proxy.NO_PROXY;
        boolean boolean22 = proxy20.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type23 = proxy20.type();
        java.net.SocketAddress socketAddress24 = proxy20.address();
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient19.setProxy(proxy20);
        java.net.Proxy proxy26 = java.net.Proxy.NO_PROXY;
        boolean boolean28 = proxy26.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type29 = proxy26.type();
        java.net.Proxy.Type type30 = proxy26.type();
        boolean boolean31 = proxy20.equals((java.lang.Object) proxy26);
        okHttpClient0.proxy = proxy20;
        java.net.ProxySelector proxySelector33 = okHttpClient0.proxySelector;
        boolean boolean34 = okHttpClient0.followProtocolRedirects;
        org.junit.Assert.assertNull(okResponseCache1);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertNotNull(connectionPool5);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(connectionPool13);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNull(okAuthenticator16);
        org.junit.Assert.assertNull(proxySelector17);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNotNull(proxy20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + type23 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type23.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress24);
        org.junit.Assert.assertNotNull(okHttpClient25);
        org.junit.Assert.assertNotNull(proxy26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + type29 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type29.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertTrue("'" + type30 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type30.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(proxySelector33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
    }

    @Test
    public void test07348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07348");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        okHttpClient0.authenticator = okAuthenticator3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        java.net.ResponseCache responseCache6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient0.setResponseCache(responseCache6);
        com.squareup.okhttp.OkHttpClient okHttpClient8 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient8.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = null;
        okHttpClient11.hostnameVerifier = hostnameVerifier12;
        java.net.ResponseCache responseCache14 = null;
        okHttpClient11.responseCache = responseCache14;
        java.util.List<java.lang.String> strList16 = okHttpClient11.transports;
        com.squareup.okhttp.ConnectionPool connectionPool17 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient11.connectionPool = connectionPool17;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient8.setConnectionPool(connectionPool17);
        com.squareup.okhttp.OkAuthenticator okAuthenticator20 = okHttpClient19.getAuthenticator();
        java.net.ProxySelector proxySelector21 = okHttpClient19.getProxySelector();
        java.net.ResponseCache responseCache22 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient19.setResponseCache(responseCache22);
        java.net.Proxy proxy24 = java.net.Proxy.NO_PROXY;
        boolean boolean26 = proxy24.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type27 = proxy24.type();
        java.net.SocketAddress socketAddress28 = proxy24.address();
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient23.setProxy(proxy24);
        java.net.SocketAddress socketAddress30 = proxy24.address();
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient0.setProxy(proxy24);
        java.net.ResponseCache responseCache32 = okHttpClient0.getResponseCache();
        javax.net.ssl.HostnameVerifier hostnameVerifier33 = okHttpClient0.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient0.setFollowProtocolRedirects(false);
        com.squareup.okhttp.ConnectionPool connectionPool38 = new com.squareup.okhttp.ConnectionPool((int) (short) 100, (-1L));
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient35.setConnectionPool(connectionPool38);
        connectionPool38.evictAll();
        com.squareup.okhttp.Connection connection41 = null;
        // The following exception was thrown during execution in test generation
        try {
            connectionPool38.recycle(connection41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(okHttpClient7);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNotNull(connectionPool17);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNull(okAuthenticator20);
        org.junit.Assert.assertNull(proxySelector21);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertNotNull(proxy24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + type27 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type27.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress28);
        org.junit.Assert.assertNotNull(okHttpClient29);
        org.junit.Assert.assertNull(socketAddress30);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNull(responseCache32);
        org.junit.Assert.assertNull(hostnameVerifier33);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNotNull(okHttpClient39);
    }

    @Test
    public void test07349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07349");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        java.net.Proxy proxy4 = okHttpClient0.proxy;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        boolean boolean6 = okHttpClient0.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool8 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient7.connectionPool = connectionPool8;
        java.net.ResponseCache responseCache10 = null;
        okHttpClient7.responseCache = responseCache10;
        java.net.Proxy proxy12 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress13 = proxy12.address();
        java.net.SocketAddress socketAddress14 = proxy12.address();
        okHttpClient7.proxy = proxy12;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient0.setProxy(proxy12);
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient0.setFollowProtocolRedirects(false);
        com.squareup.okhttp.OkHttpClient okHttpClient20 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool21 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient20.connectionPool = connectionPool21;
        java.net.ResponseCache responseCache23 = null;
        okHttpClient20.responseCache = responseCache23;
        java.net.Proxy proxy25 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress26 = proxy25.address();
        java.net.SocketAddress socketAddress27 = proxy25.address();
        okHttpClient20.proxy = proxy25;
        java.net.SocketAddress socketAddress29 = proxy25.address();
        com.squareup.okhttp.OkHttpClient okHttpClient30 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier31 = null;
        okHttpClient30.hostnameVerifier = hostnameVerifier31;
        java.net.ResponseCache responseCache33 = null;
        okHttpClient30.responseCache = responseCache33;
        java.util.List<java.lang.String> strList35 = okHttpClient30.transports;
        com.squareup.okhttp.ConnectionPool connectionPool36 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient30.connectionPool = connectionPool36;
        java.net.Proxy proxy38 = null;
        okHttpClient30.proxy = proxy38;
        boolean boolean40 = okHttpClient30.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient41 = okHttpClient30.copyWithDefaults();
        java.net.ProxySelector proxySelector42 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient43 = okHttpClient41.setProxySelector(proxySelector42);
        com.squareup.okhttp.OkHttpClient okHttpClient44 = okHttpClient43.copyWithDefaults();
        boolean boolean45 = proxy25.equals((java.lang.Object) okHttpClient44);
        java.net.Proxy.Type type46 = proxy25.type();
        okHttpClient19.proxy = proxy25;
        com.squareup.okhttp.OkHttpClient okHttpClient48 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier49 = null;
        okHttpClient48.hostnameVerifier = hostnameVerifier49;
        java.net.ResponseCache responseCache51 = null;
        okHttpClient48.responseCache = responseCache51;
        java.util.List<java.lang.String> strList53 = okHttpClient48.transports;
        com.squareup.okhttp.ConnectionPool connectionPool54 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient48.connectionPool = connectionPool54;
        java.net.Proxy proxy56 = null;
        okHttpClient48.proxy = proxy56;
        boolean boolean58 = okHttpClient48.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient60 = okHttpClient48.setFollowProtocolRedirects(true);
        com.squareup.okhttp.OkHttpClient okHttpClient61 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier62 = null;
        okHttpClient61.hostnameVerifier = hostnameVerifier62;
        java.net.ResponseCache responseCache64 = null;
        okHttpClient61.responseCache = responseCache64;
        java.util.List<java.lang.String> strList66 = okHttpClient61.transports;
        com.squareup.okhttp.ConnectionPool connectionPool67 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient61.connectionPool = connectionPool67;
        com.squareup.okhttp.ConnectionPool connectionPool69 = okHttpClient61.connectionPool;
        com.squareup.okhttp.OkHttpClient okHttpClient70 = okHttpClient48.setConnectionPool(connectionPool69);
        int int71 = connectionPool69.getHttpConnectionCount();
        com.squareup.okhttp.Address address72 = null;
        com.squareup.okhttp.Connection connection73 = connectionPool69.get(address72);
        boolean boolean74 = proxy25.equals((java.lang.Object) address72);
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNull(proxy4);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(connectionPool8);
        org.junit.Assert.assertNotNull(proxy12);
        org.junit.Assert.assertNull(socketAddress13);
        org.junit.Assert.assertNull(socketAddress14);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNotNull(connectionPool21);
        org.junit.Assert.assertNotNull(proxy25);
        org.junit.Assert.assertNull(socketAddress26);
        org.junit.Assert.assertNull(socketAddress27);
        org.junit.Assert.assertNull(socketAddress29);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNotNull(connectionPool36);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(okHttpClient41);
        org.junit.Assert.assertNotNull(okHttpClient43);
        org.junit.Assert.assertNotNull(okHttpClient44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + type46 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type46.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNotNull(connectionPool54);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(okHttpClient60);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNotNull(connectionPool67);
        org.junit.Assert.assertNotNull(connectionPool69);
        org.junit.Assert.assertNotNull(okHttpClient70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNull(connection73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test07350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07350");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.Proxy proxy8 = null;
        okHttpClient0.proxy = proxy8;
        boolean boolean10 = okHttpClient0.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient0.setFollowProtocolRedirects(true);
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = null;
        okHttpClient13.hostnameVerifier = hostnameVerifier14;
        java.net.ResponseCache responseCache16 = null;
        okHttpClient13.responseCache = responseCache16;
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = okHttpClient13.hostnameVerifier;
        java.net.Proxy proxy19 = okHttpClient13.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient20 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache21 = okHttpClient20.okResponseCache();
        java.net.ResponseCache responseCache22 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient20.setResponseCache(responseCache22);
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList26 = new java.util.ArrayList<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        okHttpClient20.transports = strList26;
        okHttpClient13.transports = strList26;
        java.net.Proxy proxy30 = okHttpClient13.getProxy();
        boolean boolean31 = okHttpClient13.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool33 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient32.connectionPool = connectionPool33;
        com.squareup.okhttp.OkHttpClient okHttpClient35 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier36 = null;
        okHttpClient35.hostnameVerifier = hostnameVerifier36;
        java.net.ResponseCache responseCache38 = null;
        okHttpClient35.responseCache = responseCache38;
        java.util.List<java.lang.String> strList40 = okHttpClient35.transports;
        com.squareup.okhttp.ConnectionPool connectionPool41 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient35.connectionPool = connectionPool41;
        com.squareup.okhttp.OkHttpClient okHttpClient43 = okHttpClient32.setConnectionPool(connectionPool41);
        java.net.Proxy proxy44 = okHttpClient43.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient45 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool46 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient45.connectionPool = connectionPool46;
        int int48 = connectionPool46.getSpdyConnectionCount();
        okHttpClient43.connectionPool = connectionPool46;
        com.squareup.okhttp.OkHttpClient okHttpClient50 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier51 = null;
        okHttpClient50.hostnameVerifier = hostnameVerifier51;
        java.net.ResponseCache responseCache53 = null;
        okHttpClient50.responseCache = responseCache53;
        javax.net.ssl.HostnameVerifier hostnameVerifier55 = okHttpClient50.hostnameVerifier;
        java.net.Proxy proxy56 = okHttpClient50.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool59 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient50.connectionPool = connectionPool59;
        com.squareup.okhttp.OkHttpClient okHttpClient61 = okHttpClient50.copyWithDefaults();
        java.net.ResponseCache responseCache62 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient63 = okHttpClient61.setResponseCache(responseCache62);
        com.squareup.okhttp.OkAuthenticator okAuthenticator64 = okHttpClient61.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient65 = okHttpClient43.setAuthenticator(okAuthenticator64);
        okHttpClient13.authenticator = okAuthenticator64;
        com.squareup.okhttp.OkHttpClient okHttpClient67 = okHttpClient12.setAuthenticator(okAuthenticator64);
        java.net.CookieHandler cookieHandler68 = okHttpClient67.cookieHandler;
        java.net.ResponseCache responseCache69 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient70 = okHttpClient67.setResponseCache(responseCache69);
        javax.net.ssl.HostnameVerifier hostnameVerifier71 = okHttpClient67.hostnameVerifier;
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertNull(hostnameVerifier18);
        org.junit.Assert.assertNull(proxy19);
        org.junit.Assert.assertNull(okResponseCache21);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(proxy30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(connectionPool33);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNotNull(connectionPool41);
        org.junit.Assert.assertNotNull(okHttpClient43);
        org.junit.Assert.assertNull(proxy44);
        org.junit.Assert.assertNotNull(connectionPool46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNull(hostnameVerifier55);
        org.junit.Assert.assertNull(proxy56);
        org.junit.Assert.assertNotNull(okHttpClient61);
        org.junit.Assert.assertNotNull(okHttpClient63);
        org.junit.Assert.assertNotNull(okAuthenticator64);
        org.junit.Assert.assertNotNull(okHttpClient65);
        org.junit.Assert.assertNotNull(okHttpClient67);
        org.junit.Assert.assertNull(cookieHandler68);
        org.junit.Assert.assertNotNull(okHttpClient70);
        org.junit.Assert.assertNull(hostnameVerifier71);
    }

    @Test
    public void test07351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07351");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache8 = okHttpClient7.okResponseCache();
        java.net.ResponseCache responseCache9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient7.setResponseCache(responseCache9);
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        okHttpClient7.transports = strList13;
        okHttpClient0.transports = strList13;
        java.net.Proxy proxy17 = okHttpClient0.getProxy();
        java.util.Set<com.squareup.okhttp.Route> routeSet18 = okHttpClient0.failedRoutes;
        com.squareup.okhttp.ConnectionPool connectionPool19 = okHttpClient0.connectionPool;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier21 = null;
        okHttpClient20.hostnameVerifier = hostnameVerifier21;
        java.net.ResponseCache responseCache23 = null;
        okHttpClient20.responseCache = responseCache23;
        java.util.List<java.lang.String> strList25 = okHttpClient20.transports;
        com.squareup.okhttp.ConnectionPool connectionPool26 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient20.connectionPool = connectionPool26;
        java.net.Proxy proxy28 = null;
        okHttpClient20.proxy = proxy28;
        java.util.Set<com.squareup.okhttp.Route> routeSet30 = okHttpClient20.failedRoutes;
        java.util.Set<com.squareup.okhttp.Route> routeSet31 = okHttpClient20.failedRoutes;
        okHttpClient0.failedRoutes = routeSet31;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory33 = okHttpClient0.getSslSocketFactory();
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNull(okResponseCache8);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(proxy17);
        org.junit.Assert.assertNotNull(routeSet18);
        org.junit.Assert.assertNull(connectionPool19);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNotNull(connectionPool26);
        org.junit.Assert.assertNotNull(routeSet30);
        org.junit.Assert.assertNotNull(routeSet31);
        org.junit.Assert.assertNull(sSLSocketFactory33);
    }

    @Test
    public void test07352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07352");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        com.squareup.okhttp.OkHttpClient okHttpClient5 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        org.junit.Assert.assertNotNull(okHttpClient4);
    }

    @Test
    public void test07353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07353");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient0.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.copyWithDefaults();
        java.net.ResponseCache responseCache12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setResponseCache(responseCache12);
        java.net.ProxySelector proxySelector14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient11.setProxySelector(proxySelector14);
        com.squareup.okhttp.OkHttpClient okHttpClient16 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier17 = null;
        okHttpClient16.hostnameVerifier = hostnameVerifier17;
        java.net.ResponseCache responseCache19 = null;
        okHttpClient16.responseCache = responseCache19;
        java.util.List<java.lang.String> strList21 = okHttpClient16.transports;
        java.net.CookieHandler cookieHandler22 = okHttpClient16.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient16.copyWithDefaults();
        com.squareup.okhttp.OkAuthenticator okAuthenticator24 = okHttpClient23.authenticator;
        okHttpClient15.authenticator = okAuthenticator24;
        java.net.ResponseCache responseCache26 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient15.setResponseCache(responseCache26);
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNull(cookieHandler22);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertNotNull(okAuthenticator24);
        org.junit.Assert.assertNotNull(okHttpClient27);
    }

    @Test
    public void test07354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07354");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        com.squareup.okhttp.ConnectionPool connectionPool8 = okHttpClient0.connectionPool;
        boolean boolean9 = okHttpClient0.getFollowProtocolRedirects();
        java.net.ResponseCache responseCache10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setResponseCache(responseCache10);
        com.squareup.okhttp.OkAuthenticator okAuthenticator12 = okHttpClient11.getAuthenticator();
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient(okHttpClient11);
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient13.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient(okHttpClient14);
        boolean boolean16 = okHttpClient14.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = null;
        okHttpClient17.hostnameVerifier = hostnameVerifier18;
        java.net.ResponseCache responseCache20 = null;
        okHttpClient17.responseCache = responseCache20;
        javax.net.ssl.HostnameVerifier hostnameVerifier22 = okHttpClient17.hostnameVerifier;
        java.net.Proxy proxy23 = okHttpClient17.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool26 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient17.connectionPool = connectionPool26;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient17.copyWithDefaults();
        java.net.ResponseCache responseCache29 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient30 = okHttpClient28.setResponseCache(responseCache29);
        java.net.ProxySelector proxySelector31 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient28.setProxySelector(proxySelector31);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory33 = okHttpClient32.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient34 = new com.squareup.okhttp.OkHttpClient(okHttpClient32);
        com.squareup.okhttp.ConnectionPool connectionPool35 = okHttpClient32.getConnectionPool();
        connectionPool35.evictAll();
        int int37 = connectionPool35.getConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient14.setConnectionPool(connectionPool35);
        com.squareup.okhttp.Address address39 = null;
        com.squareup.okhttp.Connection connection40 = connectionPool35.get(address39);
        com.squareup.okhttp.Connection connection41 = null;
        // The following exception was thrown during execution in test generation
        try {
            connectionPool35.maybeShare(connection41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNotNull(connectionPool8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(okAuthenticator12);
        org.junit.Assert.assertNotNull(okHttpClient14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(hostnameVerifier22);
        org.junit.Assert.assertNull(proxy23);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNotNull(okHttpClient30);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertNotNull(sSLSocketFactory33);
        org.junit.Assert.assertNotNull(connectionPool35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNull(connection40);
    }

    @Test
    public void test07355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07355");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient4.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient(okHttpClient5);
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = null;
        okHttpClient7.hostnameVerifier = hostnameVerifier8;
        java.net.ResponseCache responseCache10 = null;
        okHttpClient7.responseCache = responseCache10;
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = okHttpClient7.hostnameVerifier;
        java.net.Proxy proxy13 = okHttpClient7.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool16 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient7.connectionPool = connectionPool16;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient7.copyWithDefaults();
        java.util.List<java.lang.String> strList19 = okHttpClient7.getTransports();
        com.squareup.okhttp.OkHttpClient okHttpClient20 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier21 = null;
        okHttpClient20.hostnameVerifier = hostnameVerifier21;
        java.net.ResponseCache responseCache23 = null;
        okHttpClient20.responseCache = responseCache23;
        javax.net.ssl.HostnameVerifier hostnameVerifier25 = okHttpClient20.hostnameVerifier;
        java.net.Proxy proxy26 = okHttpClient20.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool29 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient20.connectionPool = connectionPool29;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient20.copyWithDefaults();
        java.net.ResponseCache responseCache32 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient31.setResponseCache(responseCache32);
        java.net.ProxySelector proxySelector34 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient31.setProxySelector(proxySelector34);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory36 = okHttpClient35.getSslSocketFactory();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory37 = okHttpClient35.getSslSocketFactory();
        java.lang.String[] strArray38 = sSLSocketFactory37.getSupportedCipherSuites();
        okHttpClient7.sslSocketFactory = sSLSocketFactory37;
        okHttpClient6.sslSocketFactory = sSLSocketFactory37;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache41 = okHttpClient6.okResponseCache();
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(hostnameVerifier12);
        org.junit.Assert.assertNull(proxy13);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(hostnameVerifier25);
        org.junit.Assert.assertNull(proxy26);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNotNull(okHttpClient33);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNotNull(sSLSocketFactory36);
        org.junit.Assert.assertNotNull(sSLSocketFactory37);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNull(okResponseCache41);
    }

    @Test
    public void test07356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07356");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache1 = okHttpClient0.okResponseCache();
        java.net.ResponseCache responseCache2 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.setResponseCache(responseCache2);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory4 = okHttpClient0.sslSocketFactory;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory5 = okHttpClient0.sslSocketFactory;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = null;
        okHttpClient6.hostnameVerifier = hostnameVerifier7;
        boolean boolean9 = okHttpClient6.getFollowProtocolRedirects();
        java.net.CookieHandler cookieHandler10 = okHttpClient6.cookieHandler;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = null;
        okHttpClient11.hostnameVerifier = hostnameVerifier12;
        java.net.ResponseCache responseCache14 = null;
        okHttpClient11.responseCache = responseCache14;
        javax.net.ssl.HostnameVerifier hostnameVerifier16 = okHttpClient11.hostnameVerifier;
        java.net.Proxy proxy17 = okHttpClient11.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool20 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient11.connectionPool = connectionPool20;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient11.copyWithDefaults();
        java.net.ResponseCache responseCache23 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient22.setResponseCache(responseCache23);
        com.squareup.okhttp.OkAuthenticator okAuthenticator25 = okHttpClient22.authenticator;
        okHttpClient6.authenticator = okAuthenticator25;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient0.setAuthenticator(okAuthenticator25);
        java.net.ResponseCache responseCache28 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient27.setResponseCache(responseCache28);
        com.squareup.okhttp.ConnectionPool connectionPool30 = okHttpClient27.getConnectionPool();
        com.squareup.okhttp.OkHttpClient okHttpClient31 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool32 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient31.connectionPool = connectionPool32;
        com.squareup.okhttp.OkHttpClient okHttpClient34 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier35 = null;
        okHttpClient34.hostnameVerifier = hostnameVerifier35;
        java.net.ResponseCache responseCache37 = null;
        okHttpClient34.responseCache = responseCache37;
        java.util.List<java.lang.String> strList39 = okHttpClient34.transports;
        com.squareup.okhttp.ConnectionPool connectionPool40 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient34.connectionPool = connectionPool40;
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient31.setConnectionPool(connectionPool40);
        java.net.Proxy proxy43 = okHttpClient42.proxy;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory44 = null;
        okHttpClient42.sslSocketFactory = sSLSocketFactory44;
        com.squareup.okhttp.OkHttpClient okHttpClient46 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier47 = null;
        okHttpClient46.hostnameVerifier = hostnameVerifier47;
        java.net.ResponseCache responseCache49 = null;
        okHttpClient46.responseCache = responseCache49;
        java.util.List<java.lang.String> strList51 = okHttpClient46.transports;
        com.squareup.okhttp.ConnectionPool connectionPool52 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient46.connectionPool = connectionPool52;
        com.squareup.okhttp.ConnectionPool connectionPool54 = okHttpClient46.connectionPool;
        int int55 = connectionPool54.getHttpConnectionCount();
        com.squareup.okhttp.Address address56 = null;
        com.squareup.okhttp.Connection connection57 = connectionPool54.get(address56);
        okHttpClient42.connectionPool = connectionPool54;
        java.net.ProxySelector proxySelector59 = okHttpClient42.proxySelector;
        java.net.Proxy proxy60 = java.net.Proxy.NO_PROXY;
        boolean boolean62 = proxy60.equals((java.lang.Object) 1L);
        com.squareup.okhttp.OkHttpClient okHttpClient63 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache64 = okHttpClient63.okResponseCache();
        java.net.ResponseCache responseCache65 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient66 = okHttpClient63.setResponseCache(responseCache65);
        java.lang.String[] strArray68 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList69 = new java.util.ArrayList<java.lang.String>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList69, strArray68);
        okHttpClient63.transports = strList69;
        boolean boolean72 = proxy60.equals((java.lang.Object) strList69);
        okHttpClient42.proxy = proxy60;
        java.lang.String str74 = proxy60.toString();
        okHttpClient27.proxy = proxy60;
        java.net.Proxy.Type type76 = proxy60.type();
        java.lang.String str77 = proxy60.toString();
        org.junit.Assert.assertNull(okResponseCache1);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertNull(sSLSocketFactory4);
        org.junit.Assert.assertNull(sSLSocketFactory5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(cookieHandler10);
        org.junit.Assert.assertNull(hostnameVerifier16);
        org.junit.Assert.assertNull(proxy17);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNotNull(okAuthenticator25);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNotNull(okHttpClient29);
        org.junit.Assert.assertNull(connectionPool30);
        org.junit.Assert.assertNotNull(connectionPool32);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNotNull(connectionPool40);
        org.junit.Assert.assertNotNull(okHttpClient42);
        org.junit.Assert.assertNull(proxy43);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNotNull(connectionPool52);
        org.junit.Assert.assertNotNull(connectionPool54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNull(connection57);
        org.junit.Assert.assertNull(proxySelector59);
        org.junit.Assert.assertNotNull(proxy60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(okResponseCache64);
        org.junit.Assert.assertNotNull(okHttpClient66);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "DIRECT" + "'", str74, "DIRECT");
        org.junit.Assert.assertTrue("'" + type76 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type76.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "DIRECT" + "'", str77, "DIRECT");
    }

    @Test
    public void test07357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07357");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.CookieHandler cookieHandler5 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = null;
        okHttpClient6.hostnameVerifier = hostnameVerifier7;
        java.net.ResponseCache responseCache9 = null;
        okHttpClient6.responseCache = responseCache9;
        java.util.List<java.lang.String> strList11 = okHttpClient6.transports;
        com.squareup.okhttp.ConnectionPool connectionPool12 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient6.connectionPool = connectionPool12;
        java.net.Proxy proxy14 = null;
        okHttpClient6.proxy = proxy14;
        java.util.Set<com.squareup.okhttp.Route> routeSet16 = okHttpClient6.failedRoutes;
        okHttpClient0.failedRoutes = routeSet16;
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient0.setHostnameVerifier(hostnameVerifier18);
        java.net.ProxySelector proxySelector20 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient19.setProxySelector(proxySelector20);
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient19.setFollowProtocolRedirects(true);
        com.squareup.okhttp.OkHttpClient okHttpClient24 = new com.squareup.okhttp.OkHttpClient(okHttpClient19);
        com.squareup.okhttp.OkHttpClient okHttpClient25 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier26 = null;
        okHttpClient25.hostnameVerifier = hostnameVerifier26;
        java.net.ResponseCache responseCache28 = null;
        okHttpClient25.responseCache = responseCache28;
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = okHttpClient25.hostnameVerifier;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory31 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient25.setSSLSocketFactory(sSLSocketFactory31);
        java.util.List<java.lang.String> strList33 = okHttpClient25.getTransports();
        com.squareup.okhttp.OkHttpClient okHttpClient34 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier35 = null;
        okHttpClient34.hostnameVerifier = hostnameVerifier35;
        java.net.ResponseCache responseCache37 = null;
        okHttpClient34.responseCache = responseCache37;
        javax.net.ssl.HostnameVerifier hostnameVerifier39 = okHttpClient34.hostnameVerifier;
        java.net.Proxy proxy40 = okHttpClient34.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool43 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient34.connectionPool = connectionPool43;
        boolean boolean45 = okHttpClient34.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient46 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier47 = null;
        okHttpClient46.hostnameVerifier = hostnameVerifier47;
        java.net.ResponseCache responseCache49 = null;
        okHttpClient46.responseCache = responseCache49;
        javax.net.ssl.HostnameVerifier hostnameVerifier51 = okHttpClient46.hostnameVerifier;
        java.net.Proxy proxy52 = okHttpClient46.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool55 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient46.connectionPool = connectionPool55;
        com.squareup.okhttp.OkHttpClient okHttpClient57 = okHttpClient46.copyWithDefaults();
        java.net.Proxy proxy58 = okHttpClient57.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier59 = okHttpClient57.getHostnameVerifier();
        okHttpClient34.hostnameVerifier = hostnameVerifier59;
        com.squareup.okhttp.OkHttpClient okHttpClient61 = okHttpClient25.setHostnameVerifier(hostnameVerifier59);
        okHttpClient24.hostnameVerifier = hostnameVerifier59;
        com.squareup.okhttp.OkHttpClient okHttpClient64 = okHttpClient24.setFollowProtocolRedirects(false);
        com.squareup.okhttp.OkHttpClient okHttpClient65 = okHttpClient64.copyWithDefaults();
        com.squareup.okhttp.OkAuthenticator okAuthenticator66 = okHttpClient64.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier67 = okHttpClient64.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient68 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier69 = null;
        okHttpClient68.hostnameVerifier = hostnameVerifier69;
        boolean boolean71 = okHttpClient68.getFollowProtocolRedirects();
        java.net.Proxy proxy72 = okHttpClient68.proxy;
        java.util.Set<com.squareup.okhttp.Route> routeSet73 = okHttpClient68.failedRoutes;
        okHttpClient64.failedRoutes = routeSet73;
        java.net.ResponseCache responseCache75 = okHttpClient64.responseCache;
        java.util.List<java.lang.String> strList76 = okHttpClient64.getTransports();
        com.squareup.okhttp.ConnectionPool connectionPool79 = new com.squareup.okhttp.ConnectionPool(1, 100L);
        com.squareup.okhttp.Address address80 = null;
        com.squareup.okhttp.Connection connection81 = connectionPool79.get(address80);
        com.squareup.okhttp.OkHttpClient okHttpClient82 = okHttpClient64.setConnectionPool(connectionPool79);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNotNull(routeSet16);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertNull(hostnameVerifier30);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNull(hostnameVerifier39);
        org.junit.Assert.assertNull(proxy40);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(hostnameVerifier51);
        org.junit.Assert.assertNull(proxy52);
        org.junit.Assert.assertNotNull(okHttpClient57);
        org.junit.Assert.assertNull(proxy58);
        org.junit.Assert.assertNotNull(hostnameVerifier59);
        org.junit.Assert.assertNotNull(okHttpClient61);
        org.junit.Assert.assertNotNull(okHttpClient64);
        org.junit.Assert.assertNotNull(okHttpClient65);
        org.junit.Assert.assertNull(okAuthenticator66);
        org.junit.Assert.assertNotNull(hostnameVerifier67);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNull(proxy72);
        org.junit.Assert.assertNotNull(routeSet73);
        org.junit.Assert.assertNull(responseCache75);
        org.junit.Assert.assertNull(strList76);
        org.junit.Assert.assertNull(connection81);
        org.junit.Assert.assertNotNull(okHttpClient82);
    }

    @Test
    public void test07358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07358");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache8 = okHttpClient7.okResponseCache();
        java.net.ResponseCache responseCache9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient7.setResponseCache(responseCache9);
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        okHttpClient7.transports = strList13;
        okHttpClient0.transports = strList13;
        javax.net.ssl.HostnameVerifier hostnameVerifier17 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier17;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory20 = okHttpClient0.sslSocketFactory;
        java.net.ProxySelector proxySelector21 = okHttpClient0.getProxySelector();
        java.net.ResponseCache responseCache22 = okHttpClient0.getResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient23 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        javax.net.ssl.HostnameVerifier hostnameVerifier24 = okHttpClient23.hostnameVerifier;
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNull(okResponseCache8);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(sSLSocketFactory20);
        org.junit.Assert.assertNull(proxySelector21);
        org.junit.Assert.assertNull(responseCache22);
        org.junit.Assert.assertNull(hostnameVerifier24);
    }

    @Test
    public void test07359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07359");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.CookieHandler cookieHandler8 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache9 = okHttpClient0.okResponseCache();
        java.net.CookieHandler cookieHandler10 = okHttpClient0.getCookieHandler();
        java.net.Proxy proxy11 = okHttpClient0.proxy;
        java.net.CookieHandler cookieHandler12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient0.setCookieHandler(cookieHandler12);
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.OkAuthenticator okAuthenticator15 = okHttpClient0.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier17 = null;
        okHttpClient16.hostnameVerifier = hostnameVerifier17;
        java.net.ResponseCache responseCache19 = null;
        okHttpClient16.responseCache = responseCache19;
        java.util.List<java.lang.String> strList21 = okHttpClient16.transports;
        com.squareup.okhttp.ConnectionPool connectionPool22 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient16.connectionPool = connectionPool22;
        java.net.Proxy proxy24 = null;
        okHttpClient16.proxy = proxy24;
        boolean boolean26 = okHttpClient16.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = new com.squareup.okhttp.OkHttpClient(okHttpClient16);
        java.net.ProxySelector proxySelector28 = okHttpClient27.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier29 = okHttpClient27.hostnameVerifier;
        java.net.Proxy proxy30 = java.net.Proxy.NO_PROXY;
        boolean boolean32 = proxy30.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type33 = proxy30.type();
        java.net.Proxy.Type type34 = proxy30.type();
        okHttpClient27.proxy = proxy30;
        com.squareup.okhttp.OkHttpClient okHttpClient36 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier37 = null;
        okHttpClient36.hostnameVerifier = hostnameVerifier37;
        java.net.ResponseCache responseCache39 = null;
        okHttpClient36.responseCache = responseCache39;
        java.util.List<java.lang.String> strList41 = okHttpClient36.transports;
        com.squareup.okhttp.ConnectionPool connectionPool42 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient36.connectionPool = connectionPool42;
        com.squareup.okhttp.OkHttpClient okHttpClient44 = okHttpClient36.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient45 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier46 = null;
        okHttpClient45.hostnameVerifier = hostnameVerifier46;
        java.net.ResponseCache responseCache48 = null;
        okHttpClient45.responseCache = responseCache48;
        java.util.List<java.lang.String> strList50 = okHttpClient45.transports;
        com.squareup.okhttp.ConnectionPool connectionPool51 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient45.connectionPool = connectionPool51;
        com.squareup.okhttp.OkHttpClient okHttpClient53 = okHttpClient45.copyWithDefaults();
        java.net.ProxySelector proxySelector54 = okHttpClient53.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory55 = okHttpClient53.getSslSocketFactory();
        okHttpClient36.sslSocketFactory = sSLSocketFactory55;
        okHttpClient27.sslSocketFactory = sSLSocketFactory55;
        java.net.Socket socket58 = sSLSocketFactory55.createSocket();
        java.lang.String[] strArray59 = sSLSocketFactory55.getDefaultCipherSuites();
        java.lang.String[] strArray60 = sSLSocketFactory55.getSupportedCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient61 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory55);
        java.net.Proxy proxy62 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient63 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier64 = null;
        okHttpClient63.hostnameVerifier = hostnameVerifier64;
        java.net.ResponseCache responseCache66 = null;
        okHttpClient63.responseCache = responseCache66;
        javax.net.ssl.HostnameVerifier hostnameVerifier68 = okHttpClient63.hostnameVerifier;
        java.net.Proxy proxy69 = okHttpClient63.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool72 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient63.connectionPool = connectionPool72;
        com.squareup.okhttp.OkHttpClient okHttpClient74 = okHttpClient63.copyWithDefaults();
        java.net.CookieHandler cookieHandler75 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient76 = okHttpClient74.setCookieHandler(cookieHandler75);
        java.net.CookieHandler cookieHandler77 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient78 = okHttpClient76.setCookieHandler(cookieHandler77);
        boolean boolean79 = proxy62.equals((java.lang.Object) okHttpClient76);
        okHttpClient61.proxy = proxy62;
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNull(cookieHandler8);
        org.junit.Assert.assertNull(okResponseCache9);
        org.junit.Assert.assertNull(cookieHandler10);
        org.junit.Assert.assertNull(proxy11);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNotNull(okHttpClient14);
        org.junit.Assert.assertNull(okAuthenticator15);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(connectionPool22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(proxySelector28);
        org.junit.Assert.assertNull(hostnameVerifier29);
        org.junit.Assert.assertNotNull(proxy30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + type33 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type33.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertTrue("'" + type34 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type34.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(connectionPool42);
        org.junit.Assert.assertNotNull(okHttpClient44);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNotNull(connectionPool51);
        org.junit.Assert.assertNotNull(okHttpClient53);
// flaky:         org.junit.Assert.assertNull(proxySelector54);
        org.junit.Assert.assertNotNull(sSLSocketFactory55);
        org.junit.Assert.assertNotNull(socket58);
        org.junit.Assert.assertEquals(socket58.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(okHttpClient61);
        org.junit.Assert.assertNotNull(proxy62);
        org.junit.Assert.assertNull(hostnameVerifier68);
        org.junit.Assert.assertNull(proxy69);
        org.junit.Assert.assertNotNull(okHttpClient74);
        org.junit.Assert.assertNotNull(okHttpClient76);
        org.junit.Assert.assertNotNull(okHttpClient78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test07360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07360");
        com.squareup.okhttp.ConnectionPool connectionPool2 = new com.squareup.okhttp.ConnectionPool((-1), (long) '#');
        com.squareup.okhttp.Address address3 = null;
        com.squareup.okhttp.Connection connection4 = connectionPool2.get(address3);
        int int5 = connectionPool2.getSpdyConnectionCount();
        connectionPool2.evictAll();
        connectionPool2.evictAll();
        org.junit.Assert.assertNull(connection4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test07361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07361");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        java.net.Proxy proxy4 = okHttpClient0.proxy;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        boolean boolean6 = okHttpClient0.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool8 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient7.connectionPool = connectionPool8;
        java.net.ResponseCache responseCache10 = null;
        okHttpClient7.responseCache = responseCache10;
        java.net.Proxy proxy12 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress13 = proxy12.address();
        java.net.SocketAddress socketAddress14 = proxy12.address();
        okHttpClient7.proxy = proxy12;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient0.setProxy(proxy12);
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient0.setFollowProtocolRedirects(false);
        java.util.List<java.lang.String> strList19 = okHttpClient0.getTransports();
        java.net.ResponseCache responseCache20 = null;
        okHttpClient0.responseCache = responseCache20;
        java.net.ResponseCache responseCache22 = okHttpClient0.getResponseCache();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache23 = okHttpClient0.okResponseCache();
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNull(proxy4);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(connectionPool8);
        org.junit.Assert.assertNotNull(proxy12);
        org.junit.Assert.assertNull(socketAddress13);
        org.junit.Assert.assertNull(socketAddress14);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(responseCache22);
        org.junit.Assert.assertNull(okResponseCache23);
    }

    @Test
    public void test07362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07362");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.ConnectionPool connectionPool12 = okHttpClient0.connectionPool;
        java.util.List<java.lang.String> strList13 = okHttpClient0.getTransports();
        java.net.CookieHandler cookieHandler14 = null;
        okHttpClient0.cookieHandler = cookieHandler14;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        java.net.CookieHandler cookieHandler17 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient16.setCookieHandler(cookieHandler17);
        java.net.CookieHandler cookieHandler19 = okHttpClient16.cookieHandler;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient16.copyWithDefaults();
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNull(cookieHandler19);
        org.junit.Assert.assertNotNull(okHttpClient20);
    }

    @Test
    public void test07363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07363");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.OkAuthenticator okAuthenticator12 = okHttpClient11.getAuthenticator();
        java.util.List<java.lang.String> strList13 = okHttpClient11.transports;
        java.net.ProxySelector proxySelector14 = okHttpClient11.getProxySelector();
        java.net.ResponseCache responseCache15 = okHttpClient11.responseCache;
        java.net.Proxy proxy16 = okHttpClient11.proxy;
        com.squareup.okhttp.OkAuthenticator okAuthenticator17 = okHttpClient11.authenticator;
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(okAuthenticator12);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNull(proxySelector14);
        org.junit.Assert.assertNull(responseCache15);
        org.junit.Assert.assertNull(proxy16);
        org.junit.Assert.assertNull(okAuthenticator17);
    }

    @Test
    public void test07364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07364");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.CookieHandler cookieHandler8 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache9 = okHttpClient0.okResponseCache();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory10 = null;
        okHttpClient0.sslSocketFactory = sSLSocketFactory10;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory12);
        java.net.CookieHandler cookieHandler14 = okHttpClient0.cookieHandler;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory15 = okHttpClient0.sslSocketFactory;
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNull(cookieHandler8);
        org.junit.Assert.assertNull(okResponseCache9);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNull(cookieHandler14);
        org.junit.Assert.assertNull(sSLSocketFactory15);
    }

    @Test
    public void test07365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07365");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = null;
        okHttpClient0.proxy = proxy6;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier9 = null;
        okHttpClient8.hostnameVerifier = hostnameVerifier9;
        java.net.ResponseCache responseCache11 = null;
        okHttpClient8.responseCache = responseCache11;
        java.util.List<java.lang.String> strList13 = okHttpClient8.transports;
        com.squareup.okhttp.ConnectionPool connectionPool14 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient8.connectionPool = connectionPool14;
        java.net.CookieHandler cookieHandler16 = okHttpClient8.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache17 = okHttpClient8.okResponseCache();
        java.net.CookieHandler cookieHandler18 = okHttpClient8.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient19 = new com.squareup.okhttp.OkHttpClient(okHttpClient8);
        javax.net.ssl.HostnameVerifier hostnameVerifier20 = okHttpClient19.hostnameVerifier;
        java.util.List<java.lang.String> strList21 = okHttpClient19.transports;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory22 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient19.setSSLSocketFactory(sSLSocketFactory22);
        com.squareup.okhttp.OkHttpClient okHttpClient24 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache25 = okHttpClient24.okResponseCache();
        java.net.ResponseCache responseCache26 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient24.setResponseCache(responseCache26);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        okHttpClient24.transports = strList30;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory33 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient24.setSSLSocketFactory(sSLSocketFactory33);
        com.squareup.okhttp.OkHttpClient okHttpClient35 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache36 = okHttpClient35.okResponseCache();
        java.net.ResponseCache responseCache37 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient35.setResponseCache(responseCache37);
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList41 = new java.util.ArrayList<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        okHttpClient35.transports = strList41;
        okHttpClient24.transports = strList41;
        com.squareup.okhttp.OkHttpClient.DEFAULT_TRANSPORTS = strList41;
        okHttpClient19.transports = strList41;
        java.net.CookieHandler cookieHandler47 = okHttpClient19.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient48 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier49 = null;
        okHttpClient48.hostnameVerifier = hostnameVerifier49;
        java.net.ResponseCache responseCache51 = null;
        okHttpClient48.responseCache = responseCache51;
        java.util.List<java.lang.String> strList53 = okHttpClient48.transports;
        com.squareup.okhttp.ConnectionPool connectionPool54 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient48.connectionPool = connectionPool54;
        java.net.Proxy proxy56 = null;
        okHttpClient48.proxy = proxy56;
        boolean boolean58 = okHttpClient48.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient59 = okHttpClient48.copyWithDefaults();
        java.net.ProxySelector proxySelector60 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient61 = okHttpClient59.setProxySelector(proxySelector60);
        javax.net.ssl.HostnameVerifier hostnameVerifier62 = okHttpClient59.getHostnameVerifier();
        okHttpClient19.hostnameVerifier = hostnameVerifier62;
        com.squareup.okhttp.OkHttpClient okHttpClient64 = okHttpClient0.setHostnameVerifier(hostnameVerifier62);
        com.squareup.okhttp.OkHttpClient okHttpClient65 = new com.squareup.okhttp.OkHttpClient(okHttpClient64);
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNotNull(connectionPool14);
        org.junit.Assert.assertNull(cookieHandler16);
        org.junit.Assert.assertNull(okResponseCache17);
        org.junit.Assert.assertNull(cookieHandler18);
        org.junit.Assert.assertNull(hostnameVerifier20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertNull(okResponseCache25);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertNull(okResponseCache36);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(cookieHandler47);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNotNull(connectionPool54);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(okHttpClient59);
        org.junit.Assert.assertNotNull(okHttpClient61);
        org.junit.Assert.assertNotNull(hostnameVerifier62);
        org.junit.Assert.assertNotNull(okHttpClient64);
    }

    @Test
    public void test07366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07366");
        com.squareup.okhttp.ConnectionPool connectionPool2 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 100);
        com.squareup.okhttp.Connection connection3 = null;
        // The following exception was thrown during execution in test generation
        try {
            connectionPool2.recycle(connection3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test07367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07367");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.CookieHandler cookieHandler8 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache9 = okHttpClient0.okResponseCache();
        java.net.CookieHandler cookieHandler10 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory12 = okHttpClient11.sslSocketFactory;
        com.squareup.okhttp.OkAuthenticator okAuthenticator13 = okHttpClient11.authenticator;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache14 = okHttpClient11.okResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient11.copyWithDefaults();
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNull(cookieHandler8);
        org.junit.Assert.assertNull(okResponseCache9);
        org.junit.Assert.assertNull(cookieHandler10);
        org.junit.Assert.assertNull(sSLSocketFactory12);
        org.junit.Assert.assertNull(okAuthenticator13);
        org.junit.Assert.assertNull(okResponseCache14);
        org.junit.Assert.assertNotNull(okHttpClient15);
    }

    @Test
    public void test07368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07368");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient0.setFollowProtocolRedirects(false);
        java.net.Proxy proxy8 = okHttpClient0.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier9 = okHttpClient0.getHostnameVerifier();
        java.util.Set<com.squareup.okhttp.Route> routeSet10 = okHttpClient0.failedRoutes;
        okHttpClient0.followProtocolRedirects = true;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = null;
        okHttpClient13.hostnameVerifier = hostnameVerifier14;
        java.net.ResponseCache responseCache16 = null;
        okHttpClient13.responseCache = responseCache16;
        java.util.List<java.lang.String> strList18 = okHttpClient13.transports;
        com.squareup.okhttp.ConnectionPool connectionPool19 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient13.connectionPool = connectionPool19;
        java.net.Proxy proxy21 = null;
        okHttpClient13.proxy = proxy21;
        boolean boolean23 = okHttpClient13.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient13.copyWithDefaults();
        java.net.Proxy proxy25 = java.net.Proxy.NO_PROXY;
        boolean boolean27 = proxy25.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type28 = proxy25.type();
        java.lang.String str29 = proxy25.toString();
        java.net.Proxy.Type type30 = proxy25.type();
        okHttpClient13.proxy = proxy25;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache33 = okHttpClient32.okResponseCache();
        java.net.ResponseCache responseCache34 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient32.setResponseCache(responseCache34);
        java.net.ProxySelector proxySelector36 = okHttpClient32.getProxySelector();
        com.squareup.okhttp.OkAuthenticator okAuthenticator37 = okHttpClient32.getAuthenticator();
        boolean boolean38 = proxy25.equals((java.lang.Object) okHttpClient32);
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient0.setProxy(proxy25);
        java.net.Proxy proxy40 = okHttpClient39.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool41 = okHttpClient39.connectionPool;
        java.net.ResponseCache responseCache42 = null;
        okHttpClient39.responseCache = responseCache42;
        com.squareup.okhttp.OkHttpClient okHttpClient45 = okHttpClient39.setFollowProtocolRedirects(true);
        java.net.ResponseCache responseCache46 = okHttpClient39.responseCache;
        okHttpClient39.followProtocolRedirects = false;
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNotNull(okHttpClient7);
        org.junit.Assert.assertNull(proxy8);
        org.junit.Assert.assertNull(hostnameVerifier9);
        org.junit.Assert.assertNotNull(routeSet10);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(connectionPool19);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNotNull(proxy25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + type28 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type28.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "DIRECT" + "'", str29, "DIRECT");
        org.junit.Assert.assertTrue("'" + type30 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type30.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(okResponseCache33);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNull(proxySelector36);
        org.junit.Assert.assertNull(okAuthenticator37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(okHttpClient39);
        org.junit.Assert.assertNotNull(proxy40);
        org.junit.Assert.assertNull(connectionPool41);
        org.junit.Assert.assertNotNull(okHttpClient45);
        org.junit.Assert.assertNull(responseCache46);
    }

    @Test
    public void test07369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07369");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.Proxy proxy8 = null;
        okHttpClient0.proxy = proxy8;
        boolean boolean10 = okHttpClient0.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient0.setFollowProtocolRedirects(true);
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = null;
        okHttpClient13.hostnameVerifier = hostnameVerifier14;
        java.net.ResponseCache responseCache16 = null;
        okHttpClient13.responseCache = responseCache16;
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = okHttpClient13.hostnameVerifier;
        java.net.Proxy proxy19 = okHttpClient13.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient20 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache21 = okHttpClient20.okResponseCache();
        java.net.ResponseCache responseCache22 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient20.setResponseCache(responseCache22);
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList26 = new java.util.ArrayList<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        okHttpClient20.transports = strList26;
        okHttpClient13.transports = strList26;
        java.net.Proxy proxy30 = okHttpClient13.getProxy();
        boolean boolean31 = okHttpClient13.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool33 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient32.connectionPool = connectionPool33;
        com.squareup.okhttp.OkHttpClient okHttpClient35 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier36 = null;
        okHttpClient35.hostnameVerifier = hostnameVerifier36;
        java.net.ResponseCache responseCache38 = null;
        okHttpClient35.responseCache = responseCache38;
        java.util.List<java.lang.String> strList40 = okHttpClient35.transports;
        com.squareup.okhttp.ConnectionPool connectionPool41 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient35.connectionPool = connectionPool41;
        com.squareup.okhttp.OkHttpClient okHttpClient43 = okHttpClient32.setConnectionPool(connectionPool41);
        java.net.Proxy proxy44 = okHttpClient43.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient45 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool46 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient45.connectionPool = connectionPool46;
        int int48 = connectionPool46.getSpdyConnectionCount();
        okHttpClient43.connectionPool = connectionPool46;
        com.squareup.okhttp.OkHttpClient okHttpClient50 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier51 = null;
        okHttpClient50.hostnameVerifier = hostnameVerifier51;
        java.net.ResponseCache responseCache53 = null;
        okHttpClient50.responseCache = responseCache53;
        javax.net.ssl.HostnameVerifier hostnameVerifier55 = okHttpClient50.hostnameVerifier;
        java.net.Proxy proxy56 = okHttpClient50.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool59 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient50.connectionPool = connectionPool59;
        com.squareup.okhttp.OkHttpClient okHttpClient61 = okHttpClient50.copyWithDefaults();
        java.net.ResponseCache responseCache62 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient63 = okHttpClient61.setResponseCache(responseCache62);
        com.squareup.okhttp.OkAuthenticator okAuthenticator64 = okHttpClient61.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient65 = okHttpClient43.setAuthenticator(okAuthenticator64);
        okHttpClient13.authenticator = okAuthenticator64;
        com.squareup.okhttp.OkHttpClient okHttpClient67 = okHttpClient12.setAuthenticator(okAuthenticator64);
        com.squareup.okhttp.OkHttpClient okHttpClient68 = new com.squareup.okhttp.OkHttpClient(okHttpClient12);
        java.net.CookieHandler cookieHandler69 = okHttpClient68.cookieHandler;
        com.squareup.okhttp.OkHttpClient okHttpClient70 = new com.squareup.okhttp.OkHttpClient(okHttpClient68);
        java.net.ProxySelector proxySelector71 = okHttpClient68.getProxySelector();
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertNull(hostnameVerifier18);
        org.junit.Assert.assertNull(proxy19);
        org.junit.Assert.assertNull(okResponseCache21);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(proxy30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(connectionPool33);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNotNull(connectionPool41);
        org.junit.Assert.assertNotNull(okHttpClient43);
        org.junit.Assert.assertNull(proxy44);
        org.junit.Assert.assertNotNull(connectionPool46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNull(hostnameVerifier55);
        org.junit.Assert.assertNull(proxy56);
        org.junit.Assert.assertNotNull(okHttpClient61);
        org.junit.Assert.assertNotNull(okHttpClient63);
        org.junit.Assert.assertNotNull(okAuthenticator64);
        org.junit.Assert.assertNotNull(okHttpClient65);
        org.junit.Assert.assertNotNull(okHttpClient67);
        org.junit.Assert.assertNull(cookieHandler69);
        org.junit.Assert.assertNull(proxySelector71);
    }

    @Test
    public void test07370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07370");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient0.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.copyWithDefaults();
        java.net.ResponseCache responseCache12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setResponseCache(responseCache12);
        java.net.ProxySelector proxySelector14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient11.setProxySelector(proxySelector14);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory16 = okHttpClient15.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient(okHttpClient15);
        com.squareup.okhttp.ConnectionPool connectionPool18 = okHttpClient15.getConnectionPool();
        com.squareup.okhttp.Address address19 = null;
        com.squareup.okhttp.Connection connection20 = connectionPool18.get(address19);
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNotNull(sSLSocketFactory16);
        org.junit.Assert.assertNotNull(connectionPool18);
        org.junit.Assert.assertNull(connection20);
    }

    @Test
    public void test07371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07371");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.ConnectionPool connectionPool12 = okHttpClient11.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator13 = okHttpClient11.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool16 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient11.connectionPool = connectionPool16;
        java.net.ResponseCache responseCache18 = okHttpClient11.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory19 = okHttpClient11.sslSocketFactory;
        java.net.Proxy proxy20 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress21 = proxy20.address();
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient11.setProxy(proxy20);
        com.squareup.okhttp.OkHttpClient okHttpClient23 = new com.squareup.okhttp.OkHttpClient(okHttpClient22);
        com.squareup.okhttp.OkHttpClient okHttpClient24 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier25 = null;
        okHttpClient24.hostnameVerifier = hostnameVerifier25;
        java.net.ResponseCache responseCache27 = null;
        okHttpClient24.responseCache = responseCache27;
        java.util.List<java.lang.String> strList29 = okHttpClient24.transports;
        com.squareup.okhttp.ConnectionPool connectionPool30 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient24.connectionPool = connectionPool30;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient24.copyWithDefaults();
        java.net.ProxySelector proxySelector33 = okHttpClient32.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory34 = okHttpClient32.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient22.setSSLSocketFactory(sSLSocketFactory34);
        com.squareup.okhttp.OkHttpClient okHttpClient36 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool37 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient36.connectionPool = connectionPool37;
        com.squareup.okhttp.OkHttpClient okHttpClient39 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier40 = null;
        okHttpClient39.hostnameVerifier = hostnameVerifier40;
        java.net.ResponseCache responseCache42 = null;
        okHttpClient39.responseCache = responseCache42;
        java.util.List<java.lang.String> strList44 = okHttpClient39.transports;
        com.squareup.okhttp.ConnectionPool connectionPool45 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient39.connectionPool = connectionPool45;
        com.squareup.okhttp.OkHttpClient okHttpClient47 = okHttpClient36.setConnectionPool(connectionPool45);
        java.net.Proxy proxy48 = okHttpClient47.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient49 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool50 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient49.connectionPool = connectionPool50;
        int int52 = connectionPool50.getSpdyConnectionCount();
        okHttpClient47.connectionPool = connectionPool50;
        int int54 = connectionPool50.getSpdyConnectionCount();
        int int55 = connectionPool50.getConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient56 = okHttpClient35.setConnectionPool(connectionPool50);
        com.squareup.okhttp.ConnectionPool connectionPool59 = new com.squareup.okhttp.ConnectionPool((int) (short) 10, 0L);
        okHttpClient35.connectionPool = connectionPool59;
        com.squareup.okhttp.ConnectionPool connectionPool63 = new com.squareup.okhttp.ConnectionPool((int) ' ', (long) 100);
        com.squareup.okhttp.OkHttpClient okHttpClient64 = okHttpClient35.setConnectionPool(connectionPool63);
        java.net.ResponseCache responseCache65 = okHttpClient64.getResponseCache();
        com.squareup.okhttp.ConnectionPool connectionPool68 = new com.squareup.okhttp.ConnectionPool(10, 1L);
        com.squareup.okhttp.OkHttpClient okHttpClient69 = okHttpClient64.setConnectionPool(connectionPool68);
        com.squareup.okhttp.OkHttpClient okHttpClient70 = new com.squareup.okhttp.OkHttpClient(okHttpClient69);
        okHttpClient70.followProtocolRedirects = true;
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNull(okAuthenticator13);
        org.junit.Assert.assertNull(responseCache18);
        org.junit.Assert.assertNull(sSLSocketFactory19);
        org.junit.Assert.assertNotNull(proxy20);
        org.junit.Assert.assertNull(socketAddress21);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(connectionPool30);
        org.junit.Assert.assertNotNull(okHttpClient32);
// flaky:         org.junit.Assert.assertNull(proxySelector33);
        org.junit.Assert.assertNotNull(sSLSocketFactory34);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNotNull(connectionPool37);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNotNull(connectionPool45);
        org.junit.Assert.assertNotNull(okHttpClient47);
        org.junit.Assert.assertNull(proxy48);
        org.junit.Assert.assertNotNull(connectionPool50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(okHttpClient56);
        org.junit.Assert.assertNotNull(okHttpClient64);
        org.junit.Assert.assertNull(responseCache65);
        org.junit.Assert.assertNotNull(okHttpClient69);
    }

    @Test
    public void test07372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07372");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        com.squareup.okhttp.ConnectionPool connectionPool8 = okHttpClient0.connectionPool;
        boolean boolean9 = okHttpClient0.getFollowProtocolRedirects();
        java.net.ResponseCache responseCache10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setResponseCache(responseCache10);
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setFollowProtocolRedirects(false);
        com.squareup.okhttp.OkHttpClient okHttpClient14 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier15 = null;
        okHttpClient14.hostnameVerifier = hostnameVerifier15;
        java.net.ResponseCache responseCache17 = null;
        okHttpClient14.responseCache = responseCache17;
        java.util.List<java.lang.String> strList19 = okHttpClient14.transports;
        com.squareup.okhttp.ConnectionPool connectionPool20 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient14.connectionPool = connectionPool20;
        java.net.Proxy proxy22 = null;
        okHttpClient14.proxy = proxy22;
        boolean boolean24 = okHttpClient14.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient14.setFollowProtocolRedirects(true);
        com.squareup.okhttp.OkHttpClient okHttpClient27 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier28 = null;
        okHttpClient27.hostnameVerifier = hostnameVerifier28;
        java.net.ResponseCache responseCache30 = null;
        okHttpClient27.responseCache = responseCache30;
        java.util.List<java.lang.String> strList32 = okHttpClient27.transports;
        javax.net.ssl.HostnameVerifier hostnameVerifier33 = null;
        okHttpClient27.hostnameVerifier = hostnameVerifier33;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache35 = okHttpClient27.okResponseCache();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory36 = okHttpClient27.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient37 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier38 = null;
        okHttpClient37.hostnameVerifier = hostnameVerifier38;
        java.net.ResponseCache responseCache40 = null;
        okHttpClient37.responseCache = responseCache40;
        javax.net.ssl.HostnameVerifier hostnameVerifier42 = okHttpClient37.hostnameVerifier;
        java.net.Proxy proxy43 = okHttpClient37.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool46 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient37.connectionPool = connectionPool46;
        com.squareup.okhttp.OkHttpClient okHttpClient48 = okHttpClient37.copyWithDefaults();
        java.net.Proxy proxy49 = okHttpClient48.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier50 = okHttpClient48.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient51 = okHttpClient27.setHostnameVerifier(hostnameVerifier50);
        com.squareup.okhttp.OkHttpClient okHttpClient52 = okHttpClient26.setHostnameVerifier(hostnameVerifier50);
        com.squareup.okhttp.ConnectionPool connectionPool53 = okHttpClient26.connectionPool;
        com.squareup.okhttp.OkHttpClient okHttpClient54 = okHttpClient13.setConnectionPool(connectionPool53);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNotNull(connectionPool8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNotNull(connectionPool20);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNull(okResponseCache35);
        org.junit.Assert.assertNull(sSLSocketFactory36);
        org.junit.Assert.assertNull(hostnameVerifier42);
        org.junit.Assert.assertNull(proxy43);
        org.junit.Assert.assertNotNull(okHttpClient48);
        org.junit.Assert.assertNull(proxy49);
        org.junit.Assert.assertNotNull(hostnameVerifier50);
        org.junit.Assert.assertNotNull(okHttpClient51);
        org.junit.Assert.assertNotNull(okHttpClient52);
        org.junit.Assert.assertNotNull(connectionPool53);
        org.junit.Assert.assertNotNull(okHttpClient54);
    }

    @Test
    public void test07373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07373");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        java.net.Proxy proxy12 = okHttpClient11.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool14 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient13.connectionPool = connectionPool14;
        int int16 = connectionPool14.getSpdyConnectionCount();
        okHttpClient11.connectionPool = connectionPool14;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier19 = null;
        okHttpClient18.hostnameVerifier = hostnameVerifier19;
        java.net.ResponseCache responseCache21 = null;
        okHttpClient18.responseCache = responseCache21;
        javax.net.ssl.HostnameVerifier hostnameVerifier23 = okHttpClient18.hostnameVerifier;
        java.net.Proxy proxy24 = okHttpClient18.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool27 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient18.connectionPool = connectionPool27;
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient18.copyWithDefaults();
        java.net.ResponseCache responseCache30 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient29.setResponseCache(responseCache30);
        com.squareup.okhttp.OkAuthenticator okAuthenticator32 = okHttpClient29.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient11.setAuthenticator(okAuthenticator32);
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient11.copyWithDefaults();
        java.net.ProxySelector proxySelector35 = null;
        okHttpClient34.proxySelector = proxySelector35;
        com.squareup.okhttp.OkHttpClient okHttpClient37 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier38 = null;
        okHttpClient37.hostnameVerifier = hostnameVerifier38;
        java.net.ResponseCache responseCache40 = null;
        okHttpClient37.responseCache = responseCache40;
        java.util.List<java.lang.String> strList42 = okHttpClient37.transports;
        com.squareup.okhttp.ConnectionPool connectionPool43 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient37.connectionPool = connectionPool43;
        java.net.Proxy proxy45 = null;
        okHttpClient37.proxy = proxy45;
        boolean boolean47 = okHttpClient37.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient48 = new com.squareup.okhttp.OkHttpClient(okHttpClient37);
        java.net.ProxySelector proxySelector49 = okHttpClient48.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier50 = okHttpClient48.hostnameVerifier;
        javax.net.ssl.HostnameVerifier hostnameVerifier51 = okHttpClient48.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient52 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool53 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient52.connectionPool = connectionPool53;
        com.squareup.okhttp.OkAuthenticator okAuthenticator55 = null;
        okHttpClient52.authenticator = okAuthenticator55;
        java.net.CookieHandler cookieHandler57 = null;
        okHttpClient52.cookieHandler = cookieHandler57;
        java.net.Proxy proxy59 = java.net.Proxy.NO_PROXY;
        boolean boolean61 = proxy59.equals((java.lang.Object) 1L);
        com.squareup.okhttp.OkHttpClient okHttpClient62 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache63 = okHttpClient62.okResponseCache();
        java.net.ResponseCache responseCache64 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient65 = okHttpClient62.setResponseCache(responseCache64);
        java.lang.String[] strArray67 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList68 = new java.util.ArrayList<java.lang.String>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList68, strArray67);
        okHttpClient62.transports = strList68;
        boolean boolean71 = proxy59.equals((java.lang.Object) strList68);
        com.squareup.okhttp.OkHttpClient okHttpClient72 = okHttpClient52.setProxy(proxy59);
        com.squareup.okhttp.OkHttpClient okHttpClient73 = okHttpClient48.setProxy(proxy59);
        java.lang.String str74 = proxy59.toString();
        java.net.Proxy.Type type75 = proxy59.type();
        java.net.SocketAddress socketAddress76 = proxy59.address();
        okHttpClient34.proxy = proxy59;
        com.squareup.okhttp.OkHttpClient okHttpClient78 = new com.squareup.okhttp.OkHttpClient(okHttpClient34);
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(proxy12);
        org.junit.Assert.assertNotNull(connectionPool14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNull(hostnameVerifier23);
        org.junit.Assert.assertNull(proxy24);
        org.junit.Assert.assertNotNull(okHttpClient29);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNotNull(okAuthenticator32);
        org.junit.Assert.assertNotNull(okHttpClient33);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNotNull(connectionPool43);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(proxySelector49);
        org.junit.Assert.assertNull(hostnameVerifier50);
        org.junit.Assert.assertNull(hostnameVerifier51);
        org.junit.Assert.assertNotNull(connectionPool53);
        org.junit.Assert.assertNotNull(proxy59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(okResponseCache63);
        org.junit.Assert.assertNotNull(okHttpClient65);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(okHttpClient72);
        org.junit.Assert.assertNotNull(okHttpClient73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "DIRECT" + "'", str74, "DIRECT");
        org.junit.Assert.assertTrue("'" + type75 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type75.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress76);
    }

    @Test
    public void test07374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07374");
        com.squareup.okhttp.ConnectionPool connectionPool2 = new com.squareup.okhttp.ConnectionPool((int) (short) 10, (long) 'a');
        com.squareup.okhttp.Address address3 = null;
        com.squareup.okhttp.Connection connection4 = connectionPool2.get(address3);
        com.squareup.okhttp.Connection connection5 = null;
        // The following exception was thrown during execution in test generation
        try {
            connectionPool2.maybeShare(connection5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(connection4);
    }

    @Test
    public void test07375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07375");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.getTransports();
        java.util.Set<com.squareup.okhttp.Route> routeSet6 = okHttpClient0.failedRoutes;
        boolean boolean7 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier9 = null;
        okHttpClient8.hostnameVerifier = hostnameVerifier9;
        java.net.ResponseCache responseCache11 = null;
        okHttpClient8.responseCache = responseCache11;
        java.util.List<java.lang.String> strList13 = okHttpClient8.transports;
        com.squareup.okhttp.ConnectionPool connectionPool14 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient8.connectionPool = connectionPool14;
        java.net.Proxy proxy16 = null;
        okHttpClient8.proxy = proxy16;
        java.util.Set<com.squareup.okhttp.Route> routeSet18 = okHttpClient8.failedRoutes;
        javax.net.ssl.HostnameVerifier hostnameVerifier19 = okHttpClient8.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient20 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier21 = null;
        okHttpClient20.hostnameVerifier = hostnameVerifier21;
        java.net.ProxySelector proxySelector23 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient20.setProxySelector(proxySelector23);
        java.net.CookieHandler cookieHandler25 = okHttpClient20.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient26 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier27 = null;
        okHttpClient26.hostnameVerifier = hostnameVerifier27;
        java.net.ResponseCache responseCache29 = null;
        okHttpClient26.responseCache = responseCache29;
        java.util.List<java.lang.String> strList31 = okHttpClient26.transports;
        com.squareup.okhttp.ConnectionPool connectionPool32 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient26.connectionPool = connectionPool32;
        java.net.Proxy proxy34 = null;
        okHttpClient26.proxy = proxy34;
        java.util.Set<com.squareup.okhttp.Route> routeSet36 = okHttpClient26.failedRoutes;
        okHttpClient20.failedRoutes = routeSet36;
        java.net.ProxySelector proxySelector38 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient20.setProxySelector(proxySelector38);
        com.squareup.okhttp.ConnectionPool connectionPool42 = new com.squareup.okhttp.ConnectionPool((int) (short) 10, (long) '4');
        okHttpClient20.connectionPool = connectionPool42;
        connectionPool42.evictAll();
        int int45 = connectionPool42.getConnectionCount();
        okHttpClient8.connectionPool = connectionPool42;
        com.squareup.okhttp.OkHttpClient okHttpClient47 = okHttpClient8.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient48 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier49 = null;
        okHttpClient48.hostnameVerifier = hostnameVerifier49;
        java.net.ResponseCache responseCache51 = null;
        okHttpClient48.responseCache = responseCache51;
        javax.net.ssl.HostnameVerifier hostnameVerifier53 = okHttpClient48.hostnameVerifier;
        java.net.Proxy proxy54 = okHttpClient48.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool57 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient48.connectionPool = connectionPool57;
        java.util.List<java.lang.String> strList59 = okHttpClient48.getTransports();
        javax.net.ssl.HostnameVerifier hostnameVerifier60 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient61 = okHttpClient48.setHostnameVerifier(hostnameVerifier60);
        com.squareup.okhttp.OkHttpClient okHttpClient62 = okHttpClient48.copyWithDefaults();
        java.util.List<java.lang.String> strList63 = okHttpClient62.getTransports();
        com.squareup.okhttp.OkAuthenticator okAuthenticator64 = okHttpClient62.getAuthenticator();
        com.squareup.okhttp.OkHttpClient okHttpClient65 = okHttpClient47.setAuthenticator(okAuthenticator64);
        okHttpClient0.authenticator = okAuthenticator64;
        com.squareup.okhttp.ConnectionPool connectionPool67 = okHttpClient0.getConnectionPool();
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(routeSet6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNotNull(connectionPool14);
        org.junit.Assert.assertNotNull(routeSet18);
        org.junit.Assert.assertNull(hostnameVerifier19);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNull(cookieHandler25);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNotNull(connectionPool32);
        org.junit.Assert.assertNotNull(routeSet36);
        org.junit.Assert.assertNotNull(okHttpClient39);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(okHttpClient47);
        org.junit.Assert.assertNull(hostnameVerifier53);
        org.junit.Assert.assertNull(proxy54);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNotNull(okHttpClient61);
        org.junit.Assert.assertNotNull(okHttpClient62);
        org.junit.Assert.assertNotNull(strList63);
        org.junit.Assert.assertNotNull(okAuthenticator64);
        org.junit.Assert.assertNotNull(okHttpClient65);
        org.junit.Assert.assertNotNull(connectionPool67);
    }

    @Test
    public void test07376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07376");
        com.squareup.okhttp.ConnectionPool connectionPool2 = new com.squareup.okhttp.ConnectionPool((-1), (long) '#');
        int int3 = connectionPool2.getHttpConnectionCount();
        com.squareup.okhttp.Address address4 = null;
        com.squareup.okhttp.Connection connection5 = connectionPool2.get(address4);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(connection5);
    }

    @Test
    public void test07377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07377");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.ResponseCache responseCache5 = null;
        okHttpClient4.responseCache = responseCache5;
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = okHttpClient4.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient4.setFollowProtocolRedirects(false);
        java.net.ProxySelector proxySelector10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient9.setProxySelector(proxySelector10);
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient11.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool15 = new com.squareup.okhttp.ConnectionPool(10, 0L);
        int int16 = connectionPool15.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient12.setConnectionPool(connectionPool15);
        com.squareup.okhttp.ConnectionPool connectionPool18 = okHttpClient12.connectionPool;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier20 = null;
        okHttpClient19.hostnameVerifier = hostnameVerifier20;
        java.net.ResponseCache responseCache22 = null;
        okHttpClient19.responseCache = responseCache22;
        javax.net.ssl.HostnameVerifier hostnameVerifier24 = okHttpClient19.hostnameVerifier;
        java.net.Proxy proxy25 = okHttpClient19.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool28 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient19.connectionPool = connectionPool28;
        com.squareup.okhttp.OkHttpClient okHttpClient30 = okHttpClient19.copyWithDefaults();
        java.net.ResponseCache responseCache31 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient30.setResponseCache(responseCache31);
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient32.setFollowProtocolRedirects(false);
        java.net.ResponseCache responseCache35 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient32.setResponseCache(responseCache35);
        com.squareup.okhttp.OkHttpClient okHttpClient37 = new com.squareup.okhttp.OkHttpClient(okHttpClient32);
        java.util.List<java.lang.String> strList38 = okHttpClient32.getTransports();
        okHttpClient12.transports = strList38;
        java.lang.Class<?> wildcardClass40 = okHttpClient12.getClass();
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(hostnameVerifier7);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNotNull(connectionPool18);
        org.junit.Assert.assertNull(hostnameVerifier24);
        org.junit.Assert.assertNull(proxy25);
        org.junit.Assert.assertNotNull(okHttpClient30);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test07378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07378");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.ResponseCache responseCache5 = null;
        okHttpClient4.responseCache = responseCache5;
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = okHttpClient4.hostnameVerifier;
        java.net.ProxySelector proxySelector8 = okHttpClient4.getProxySelector();
        java.net.ResponseCache responseCache9 = null;
        okHttpClient4.responseCache = responseCache9;
        java.net.CookieHandler cookieHandler11 = okHttpClient4.cookieHandler;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool13 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient12.connectionPool = connectionPool13;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier16 = null;
        okHttpClient15.hostnameVerifier = hostnameVerifier16;
        java.net.ResponseCache responseCache18 = null;
        okHttpClient15.responseCache = responseCache18;
        java.util.List<java.lang.String> strList20 = okHttpClient15.transports;
        com.squareup.okhttp.ConnectionPool connectionPool21 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient15.connectionPool = connectionPool21;
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient12.setConnectionPool(connectionPool21);
        com.squareup.okhttp.OkAuthenticator okAuthenticator24 = okHttpClient23.getAuthenticator();
        java.net.ProxySelector proxySelector25 = okHttpClient23.getProxySelector();
        java.net.ResponseCache responseCache26 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient23.setResponseCache(responseCache26);
        java.net.CookieHandler cookieHandler28 = null;
        okHttpClient27.cookieHandler = cookieHandler28;
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = okHttpClient27.getHostnameVerifier();
        java.net.ResponseCache responseCache31 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient27.setResponseCache(responseCache31);
        java.net.Proxy proxy33 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress34 = proxy33.address();
        java.net.Proxy.Type type35 = proxy33.type();
        java.net.SocketAddress socketAddress36 = proxy33.address();
        java.net.SocketAddress socketAddress37 = proxy33.address();
        okHttpClient27.proxy = proxy33;
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient4.setProxy(proxy33);
        java.net.CookieHandler cookieHandler40 = okHttpClient39.getCookieHandler();
        java.net.ResponseCache responseCache41 = okHttpClient39.getResponseCache();
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(hostnameVerifier7);
        org.junit.Assert.assertNull(proxySelector8);
        org.junit.Assert.assertNull(cookieHandler11);
        org.junit.Assert.assertNotNull(connectionPool13);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(connectionPool21);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertNull(okAuthenticator24);
        org.junit.Assert.assertNull(proxySelector25);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNull(hostnameVerifier30);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertNotNull(proxy33);
        org.junit.Assert.assertNull(socketAddress34);
        org.junit.Assert.assertTrue("'" + type35 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type35.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress36);
        org.junit.Assert.assertNull(socketAddress37);
        org.junit.Assert.assertNotNull(okHttpClient39);
        org.junit.Assert.assertNull(cookieHandler40);
        org.junit.Assert.assertNull(responseCache41);
    }

    @Test
    public void test07379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07379");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache1 = okHttpClient0.okResponseCache();
        java.net.ResponseCache responseCache2 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.setResponseCache(responseCache2);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory4 = okHttpClient0.sslSocketFactory;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory5 = okHttpClient0.sslSocketFactory;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = null;
        okHttpClient6.hostnameVerifier = hostnameVerifier7;
        boolean boolean9 = okHttpClient6.getFollowProtocolRedirects();
        java.net.Proxy proxy10 = okHttpClient6.proxy;
        java.util.Set<com.squareup.okhttp.Route> routeSet11 = okHttpClient6.failedRoutes;
        okHttpClient0.failedRoutes = routeSet11;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool14 = okHttpClient13.connectionPool;
        java.net.URL uRL15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.HttpURLConnection httpURLConnection16 = okHttpClient13.open(uRL15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(okResponseCache1);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertNull(sSLSocketFactory4);
        org.junit.Assert.assertNull(sSLSocketFactory5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(proxy10);
        org.junit.Assert.assertNotNull(routeSet11);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNotNull(connectionPool14);
    }

    @Test
    public void test07380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07380");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.Proxy proxy8 = null;
        okHttpClient0.proxy = proxy8;
        boolean boolean10 = okHttpClient0.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        java.net.ProxySelector proxySelector12 = okHttpClient11.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier13 = okHttpClient11.hostnameVerifier;
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = okHttpClient11.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool16 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient15.connectionPool = connectionPool16;
        com.squareup.okhttp.OkAuthenticator okAuthenticator18 = null;
        okHttpClient15.authenticator = okAuthenticator18;
        java.net.CookieHandler cookieHandler20 = null;
        okHttpClient15.cookieHandler = cookieHandler20;
        java.net.Proxy proxy22 = java.net.Proxy.NO_PROXY;
        boolean boolean24 = proxy22.equals((java.lang.Object) 1L);
        com.squareup.okhttp.OkHttpClient okHttpClient25 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache26 = okHttpClient25.okResponseCache();
        java.net.ResponseCache responseCache27 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient25.setResponseCache(responseCache27);
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        okHttpClient25.transports = strList31;
        boolean boolean34 = proxy22.equals((java.lang.Object) strList31);
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient15.setProxy(proxy22);
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient11.setProxy(proxy22);
        java.util.List<java.lang.String> strList37 = okHttpClient36.transports;
        java.net.Proxy proxy38 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress39 = proxy38.address();
        java.net.SocketAddress socketAddress40 = proxy38.address();
        java.net.SocketAddress socketAddress41 = proxy38.address();
        com.squareup.okhttp.OkHttpClient okHttpClient42 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier43 = null;
        okHttpClient42.hostnameVerifier = hostnameVerifier43;
        java.net.ResponseCache responseCache45 = null;
        okHttpClient42.responseCache = responseCache45;
        java.util.List<java.lang.String> strList47 = okHttpClient42.transports;
        com.squareup.okhttp.ConnectionPool connectionPool48 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient42.connectionPool = connectionPool48;
        java.net.CookieHandler cookieHandler50 = okHttpClient42.cookieHandler;
        java.net.ProxySelector proxySelector51 = null;
        okHttpClient42.proxySelector = proxySelector51;
        java.net.CookieHandler cookieHandler53 = okHttpClient42.getCookieHandler();
        boolean boolean54 = proxy38.equals((java.lang.Object) okHttpClient42);
        com.squareup.okhttp.OkHttpClient okHttpClient55 = okHttpClient36.setProxy(proxy38);
        com.squareup.okhttp.ConnectionPool connectionPool56 = okHttpClient36.getConnectionPool();
        com.squareup.okhttp.OkHttpClient okHttpClient57 = new com.squareup.okhttp.OkHttpClient(okHttpClient36);
        java.net.ProxySelector proxySelector58 = okHttpClient36.proxySelector;
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(proxySelector12);
        org.junit.Assert.assertNull(hostnameVerifier13);
        org.junit.Assert.assertNull(hostnameVerifier14);
        org.junit.Assert.assertNotNull(connectionPool16);
        org.junit.Assert.assertNotNull(proxy22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(okResponseCache26);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(proxy38);
        org.junit.Assert.assertNull(socketAddress39);
        org.junit.Assert.assertNull(socketAddress40);
        org.junit.Assert.assertNull(socketAddress41);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNotNull(connectionPool48);
        org.junit.Assert.assertNull(cookieHandler50);
        org.junit.Assert.assertNull(cookieHandler53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(okHttpClient55);
        org.junit.Assert.assertNull(connectionPool56);
        org.junit.Assert.assertNull(proxySelector58);
    }

    @Test
    public void test07381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07381");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory6 = okHttpClient0.sslSocketFactory;
        java.net.CookieHandler cookieHandler7 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache8 = okHttpClient0.okResponseCache();
        java.net.Proxy proxy9 = okHttpClient0.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient10 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier11 = null;
        okHttpClient10.hostnameVerifier = hostnameVerifier11;
        java.net.ResponseCache responseCache13 = null;
        okHttpClient10.responseCache = responseCache13;
        javax.net.ssl.HostnameVerifier hostnameVerifier15 = okHttpClient10.hostnameVerifier;
        java.net.Proxy proxy16 = okHttpClient10.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool19 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient10.connectionPool = connectionPool19;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient10.copyWithDefaults();
        java.util.List<java.lang.String> strList22 = okHttpClient10.getTransports();
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient10.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient24 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool25 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient24.connectionPool = connectionPool25;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier28 = null;
        okHttpClient27.hostnameVerifier = hostnameVerifier28;
        java.net.ResponseCache responseCache30 = null;
        okHttpClient27.responseCache = responseCache30;
        java.util.List<java.lang.String> strList32 = okHttpClient27.transports;
        com.squareup.okhttp.ConnectionPool connectionPool33 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient27.connectionPool = connectionPool33;
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient24.setConnectionPool(connectionPool33);
        com.squareup.okhttp.ConnectionPool connectionPool36 = okHttpClient35.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator37 = okHttpClient35.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool40 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient35.connectionPool = connectionPool40;
        com.squareup.okhttp.OkHttpClient okHttpClient42 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier43 = null;
        okHttpClient42.hostnameVerifier = hostnameVerifier43;
        java.net.ResponseCache responseCache45 = null;
        okHttpClient42.responseCache = responseCache45;
        java.util.List<java.lang.String> strList47 = okHttpClient42.transports;
        com.squareup.okhttp.ConnectionPool connectionPool48 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient42.connectionPool = connectionPool48;
        java.net.CookieHandler cookieHandler50 = okHttpClient42.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache51 = okHttpClient42.okResponseCache();
        java.net.CookieHandler cookieHandler52 = okHttpClient42.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient53 = new com.squareup.okhttp.OkHttpClient(okHttpClient42);
        java.net.Proxy proxy54 = java.net.Proxy.NO_PROXY;
        boolean boolean56 = proxy54.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type57 = proxy54.type();
        java.net.SocketAddress socketAddress58 = proxy54.address();
        com.squareup.okhttp.OkHttpClient okHttpClient59 = okHttpClient42.setProxy(proxy54);
        com.squareup.okhttp.OkHttpClient okHttpClient60 = okHttpClient35.setProxy(proxy54);
        com.squareup.okhttp.OkHttpClient okHttpClient61 = okHttpClient10.setProxy(proxy54);
        com.squareup.okhttp.OkHttpClient okHttpClient62 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool63 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient62.connectionPool = connectionPool63;
        com.squareup.okhttp.OkHttpClient okHttpClient65 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier66 = null;
        okHttpClient65.hostnameVerifier = hostnameVerifier66;
        java.net.ResponseCache responseCache68 = null;
        okHttpClient65.responseCache = responseCache68;
        java.util.List<java.lang.String> strList70 = okHttpClient65.transports;
        com.squareup.okhttp.ConnectionPool connectionPool71 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient65.connectionPool = connectionPool71;
        com.squareup.okhttp.OkHttpClient okHttpClient73 = okHttpClient62.setConnectionPool(connectionPool71);
        boolean boolean74 = proxy54.equals((java.lang.Object) okHttpClient62);
        okHttpClient0.proxy = proxy54;
        java.net.Proxy.Type type76 = proxy54.type();
        java.net.SocketAddress socketAddress77 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Proxy proxy78 = new java.net.Proxy(type76, socketAddress77);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: type DIRECT is not compatible with address null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(sSLSocketFactory6);
        org.junit.Assert.assertNull(cookieHandler7);
        org.junit.Assert.assertNull(okResponseCache8);
        org.junit.Assert.assertNull(proxy9);
        org.junit.Assert.assertNull(hostnameVerifier15);
        org.junit.Assert.assertNull(proxy16);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertNotNull(connectionPool25);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNotNull(connectionPool33);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNotNull(connectionPool36);
        org.junit.Assert.assertNull(okAuthenticator37);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNotNull(connectionPool48);
        org.junit.Assert.assertNull(cookieHandler50);
        org.junit.Assert.assertNull(okResponseCache51);
        org.junit.Assert.assertNull(cookieHandler52);
        org.junit.Assert.assertNotNull(proxy54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + type57 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type57.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress58);
        org.junit.Assert.assertNotNull(okHttpClient59);
        org.junit.Assert.assertNotNull(okHttpClient60);
        org.junit.Assert.assertNotNull(okHttpClient61);
        org.junit.Assert.assertNotNull(connectionPool63);
        org.junit.Assert.assertNull(strList70);
        org.junit.Assert.assertNotNull(connectionPool71);
        org.junit.Assert.assertNotNull(okHttpClient73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + type76 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type76.equals(java.net.Proxy.Type.DIRECT));
    }

    @Test
    public void test07382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07382");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.Proxy proxy8 = null;
        okHttpClient0.proxy = proxy8;
        boolean boolean10 = okHttpClient0.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        java.net.ProxySelector proxySelector12 = okHttpClient11.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier13 = okHttpClient11.hostnameVerifier;
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = okHttpClient11.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool16 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient15.connectionPool = connectionPool16;
        com.squareup.okhttp.OkAuthenticator okAuthenticator18 = null;
        okHttpClient15.authenticator = okAuthenticator18;
        java.net.CookieHandler cookieHandler20 = null;
        okHttpClient15.cookieHandler = cookieHandler20;
        java.net.Proxy proxy22 = java.net.Proxy.NO_PROXY;
        boolean boolean24 = proxy22.equals((java.lang.Object) 1L);
        com.squareup.okhttp.OkHttpClient okHttpClient25 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache26 = okHttpClient25.okResponseCache();
        java.net.ResponseCache responseCache27 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient25.setResponseCache(responseCache27);
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        okHttpClient25.transports = strList31;
        boolean boolean34 = proxy22.equals((java.lang.Object) strList31);
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient15.setProxy(proxy22);
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient11.setProxy(proxy22);
        com.squareup.okhttp.OkHttpClient okHttpClient37 = new com.squareup.okhttp.OkHttpClient(okHttpClient36);
        javax.net.ssl.HostnameVerifier hostnameVerifier38 = okHttpClient36.getHostnameVerifier();
        javax.net.ssl.HostnameVerifier hostnameVerifier39 = okHttpClient36.getHostnameVerifier();
        java.net.ProxySelector proxySelector40 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient41 = okHttpClient36.setProxySelector(proxySelector40);
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient41.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient43 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier44 = null;
        okHttpClient43.hostnameVerifier = hostnameVerifier44;
        java.net.ResponseCache responseCache46 = null;
        okHttpClient43.responseCache = responseCache46;
        java.util.List<java.lang.String> strList48 = okHttpClient43.transports;
        java.net.Proxy proxy49 = java.net.Proxy.NO_PROXY;
        boolean boolean51 = proxy49.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type52 = proxy49.type();
        java.net.SocketAddress socketAddress53 = proxy49.address();
        com.squareup.okhttp.OkHttpClient okHttpClient54 = okHttpClient43.setProxy(proxy49);
        javax.net.ssl.HostnameVerifier hostnameVerifier55 = okHttpClient54.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient56 = new com.squareup.okhttp.OkHttpClient(okHttpClient54);
        com.squareup.okhttp.OkHttpClient okHttpClient57 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier58 = null;
        okHttpClient57.hostnameVerifier = hostnameVerifier58;
        java.net.ResponseCache responseCache60 = null;
        okHttpClient57.responseCache = responseCache60;
        javax.net.ssl.HostnameVerifier hostnameVerifier62 = okHttpClient57.hostnameVerifier;
        java.net.Proxy proxy63 = okHttpClient57.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool66 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient57.connectionPool = connectionPool66;
        java.util.List<java.lang.String> strList68 = okHttpClient57.getTransports();
        javax.net.ssl.HostnameVerifier hostnameVerifier69 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient70 = okHttpClient57.setHostnameVerifier(hostnameVerifier69);
        com.squareup.okhttp.OkHttpClient okHttpClient71 = new com.squareup.okhttp.OkHttpClient(okHttpClient57);
        com.squareup.okhttp.OkHttpClient okHttpClient72 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier73 = null;
        okHttpClient72.hostnameVerifier = hostnameVerifier73;
        java.net.ProxySelector proxySelector75 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient76 = okHttpClient72.setProxySelector(proxySelector75);
        com.squareup.okhttp.OkHttpClient okHttpClient77 = okHttpClient76.copyWithDefaults();
        java.net.ProxySelector proxySelector78 = null;
        okHttpClient77.proxySelector = proxySelector78;
        com.squareup.okhttp.OkAuthenticator okAuthenticator80 = okHttpClient77.authenticator;
        okHttpClient71.authenticator = okAuthenticator80;
        okHttpClient56.authenticator = okAuthenticator80;
        java.util.Set<com.squareup.okhttp.Route> routeSet83 = okHttpClient56.failedRoutes;
        okHttpClient41.failedRoutes = routeSet83;
        com.squareup.okhttp.OkHttpClient okHttpClient85 = okHttpClient41.copyWithDefaults();
        java.net.CookieHandler cookieHandler86 = okHttpClient85.cookieHandler;
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(proxySelector12);
        org.junit.Assert.assertNull(hostnameVerifier13);
        org.junit.Assert.assertNull(hostnameVerifier14);
        org.junit.Assert.assertNotNull(connectionPool16);
        org.junit.Assert.assertNotNull(proxy22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(okResponseCache26);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNull(hostnameVerifier38);
        org.junit.Assert.assertNull(hostnameVerifier39);
        org.junit.Assert.assertNotNull(okHttpClient41);
        org.junit.Assert.assertNotNull(okHttpClient42);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNotNull(proxy49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + type52 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type52.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress53);
        org.junit.Assert.assertNotNull(okHttpClient54);
        org.junit.Assert.assertNull(hostnameVerifier55);
        org.junit.Assert.assertNull(hostnameVerifier62);
        org.junit.Assert.assertNull(proxy63);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNotNull(okHttpClient70);
        org.junit.Assert.assertNotNull(okHttpClient76);
        org.junit.Assert.assertNotNull(okHttpClient77);
        org.junit.Assert.assertNotNull(okAuthenticator80);
        org.junit.Assert.assertNotNull(routeSet83);
        org.junit.Assert.assertNotNull(okHttpClient85);
        org.junit.Assert.assertNull(cookieHandler86);
    }

    @Test
    public void test07383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07383");
        java.net.Proxy proxy0 = java.net.Proxy.NO_PROXY;
        boolean boolean2 = proxy0.equals((java.lang.Object) 1L);
        java.net.SocketAddress socketAddress3 = proxy0.address();
        java.net.SocketAddress socketAddress4 = proxy0.address();
        java.lang.String str5 = proxy0.toString();
        java.lang.String str6 = proxy0.toString();
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool8 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient7.connectionPool = connectionPool8;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier11 = null;
        okHttpClient10.hostnameVerifier = hostnameVerifier11;
        java.net.ResponseCache responseCache13 = null;
        okHttpClient10.responseCache = responseCache13;
        java.util.List<java.lang.String> strList15 = okHttpClient10.transports;
        com.squareup.okhttp.ConnectionPool connectionPool16 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient10.connectionPool = connectionPool16;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient7.setConnectionPool(connectionPool16);
        com.squareup.okhttp.ConnectionPool connectionPool19 = okHttpClient18.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator20 = okHttpClient18.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool23 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient18.connectionPool = connectionPool23;
        java.net.ResponseCache responseCache25 = okHttpClient18.responseCache;
        com.squareup.okhttp.ConnectionPool connectionPool28 = new com.squareup.okhttp.ConnectionPool((int) (byte) 0, 10L);
        okHttpClient18.connectionPool = connectionPool28;
        java.util.List<java.lang.String> strList30 = okHttpClient18.transports;
        java.util.List<java.lang.String> strList31 = okHttpClient18.transports;
        boolean boolean32 = proxy0.equals((java.lang.Object) okHttpClient18);
        java.util.List<java.lang.String> strList33 = okHttpClient18.getTransports();
        org.junit.Assert.assertNotNull(proxy0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(socketAddress3);
        org.junit.Assert.assertNull(socketAddress4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "DIRECT" + "'", str5, "DIRECT");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "DIRECT" + "'", str6, "DIRECT");
        org.junit.Assert.assertNotNull(connectionPool8);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(connectionPool16);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNotNull(connectionPool19);
        org.junit.Assert.assertNull(okAuthenticator20);
        org.junit.Assert.assertNull(responseCache25);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(strList33);
    }

    @Test
    public void test07384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07384");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache5 = okHttpClient0.okResponseCache();
        java.net.ResponseCache responseCache6 = okHttpClient0.responseCache;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient0.copyWithDefaults();
        java.net.ResponseCache responseCache8 = okHttpClient0.getResponseCache();
        java.net.ResponseCache responseCache9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient0.setResponseCache(responseCache9);
        javax.net.ssl.HostnameVerifier hostnameVerifier11 = okHttpClient10.getHostnameVerifier();
        com.squareup.okhttp.ConnectionPool connectionPool12 = okHttpClient10.connectionPool;
        org.junit.Assert.assertNull(okResponseCache5);
        org.junit.Assert.assertNull(responseCache6);
        org.junit.Assert.assertNotNull(okHttpClient7);
        org.junit.Assert.assertNull(responseCache8);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertNull(hostnameVerifier11);
        org.junit.Assert.assertNull(connectionPool12);
    }

    @Test
    public void test07385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07385");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        java.net.CookieHandler cookieHandler7 = null;
        okHttpClient0.cookieHandler = cookieHandler7;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier10 = null;
        okHttpClient9.hostnameVerifier = hostnameVerifier10;
        java.net.ResponseCache responseCache12 = null;
        okHttpClient9.responseCache = responseCache12;
        java.util.List<java.lang.String> strList14 = okHttpClient9.transports;
        com.squareup.okhttp.ConnectionPool connectionPool15 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient9.connectionPool = connectionPool15;
        java.net.CookieHandler cookieHandler17 = okHttpClient9.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache18 = okHttpClient9.okResponseCache();
        java.net.CookieHandler cookieHandler19 = okHttpClient9.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient20 = new com.squareup.okhttp.OkHttpClient(okHttpClient9);
        com.squareup.okhttp.OkHttpClient okHttpClient21 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier22 = null;
        okHttpClient21.hostnameVerifier = hostnameVerifier22;
        java.net.ProxySelector proxySelector24 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient21.setProxySelector(proxySelector24);
        java.net.CookieHandler cookieHandler26 = okHttpClient21.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient27 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier28 = null;
        okHttpClient27.hostnameVerifier = hostnameVerifier28;
        java.net.ResponseCache responseCache30 = null;
        okHttpClient27.responseCache = responseCache30;
        java.util.List<java.lang.String> strList32 = okHttpClient27.transports;
        com.squareup.okhttp.ConnectionPool connectionPool33 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient27.connectionPool = connectionPool33;
        java.net.Proxy proxy35 = null;
        okHttpClient27.proxy = proxy35;
        java.util.Set<com.squareup.okhttp.Route> routeSet37 = okHttpClient27.failedRoutes;
        okHttpClient21.failedRoutes = routeSet37;
        okHttpClient20.failedRoutes = routeSet37;
        okHttpClient0.failedRoutes = routeSet37;
        java.net.CookieHandler cookieHandler41 = okHttpClient0.cookieHandler;
        java.net.ProxySelector proxySelector42 = okHttpClient0.proxySelector;
        com.squareup.okhttp.ConnectionPool connectionPool43 = okHttpClient0.connectionPool;
        boolean boolean44 = okHttpClient0.getFollowProtocolRedirects();
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNotNull(connectionPool15);
        org.junit.Assert.assertNull(cookieHandler17);
        org.junit.Assert.assertNull(okResponseCache18);
        org.junit.Assert.assertNull(cookieHandler19);
        org.junit.Assert.assertNotNull(okHttpClient25);
        org.junit.Assert.assertNull(cookieHandler26);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNotNull(connectionPool33);
        org.junit.Assert.assertNotNull(routeSet37);
        org.junit.Assert.assertNull(cookieHandler41);
        org.junit.Assert.assertNull(proxySelector42);
        org.junit.Assert.assertNull(connectionPool43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
    }

    @Test
    public void test07386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07386");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache1 = okHttpClient0.okResponseCache();
        java.net.ResponseCache responseCache2 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.setResponseCache(responseCache2);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory4 = okHttpClient0.sslSocketFactory;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory5 = okHttpClient0.sslSocketFactory;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = null;
        okHttpClient6.hostnameVerifier = hostnameVerifier7;
        boolean boolean9 = okHttpClient6.getFollowProtocolRedirects();
        java.net.CookieHandler cookieHandler10 = okHttpClient6.cookieHandler;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = null;
        okHttpClient11.hostnameVerifier = hostnameVerifier12;
        java.net.ResponseCache responseCache14 = null;
        okHttpClient11.responseCache = responseCache14;
        javax.net.ssl.HostnameVerifier hostnameVerifier16 = okHttpClient11.hostnameVerifier;
        java.net.Proxy proxy17 = okHttpClient11.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool20 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient11.connectionPool = connectionPool20;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient11.copyWithDefaults();
        java.net.ResponseCache responseCache23 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient22.setResponseCache(responseCache23);
        com.squareup.okhttp.OkAuthenticator okAuthenticator25 = okHttpClient22.authenticator;
        okHttpClient6.authenticator = okAuthenticator25;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient0.setAuthenticator(okAuthenticator25);
        java.net.ResponseCache responseCache28 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient27.setResponseCache(responseCache28);
        com.squareup.okhttp.ConnectionPool connectionPool30 = okHttpClient27.getConnectionPool();
        com.squareup.okhttp.OkHttpClient okHttpClient31 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool32 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient31.connectionPool = connectionPool32;
        com.squareup.okhttp.OkHttpClient okHttpClient34 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier35 = null;
        okHttpClient34.hostnameVerifier = hostnameVerifier35;
        java.net.ResponseCache responseCache37 = null;
        okHttpClient34.responseCache = responseCache37;
        java.util.List<java.lang.String> strList39 = okHttpClient34.transports;
        com.squareup.okhttp.ConnectionPool connectionPool40 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient34.connectionPool = connectionPool40;
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient31.setConnectionPool(connectionPool40);
        java.net.Proxy proxy43 = okHttpClient42.proxy;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory44 = null;
        okHttpClient42.sslSocketFactory = sSLSocketFactory44;
        com.squareup.okhttp.OkHttpClient okHttpClient46 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier47 = null;
        okHttpClient46.hostnameVerifier = hostnameVerifier47;
        java.net.ResponseCache responseCache49 = null;
        okHttpClient46.responseCache = responseCache49;
        java.util.List<java.lang.String> strList51 = okHttpClient46.transports;
        com.squareup.okhttp.ConnectionPool connectionPool52 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient46.connectionPool = connectionPool52;
        com.squareup.okhttp.ConnectionPool connectionPool54 = okHttpClient46.connectionPool;
        int int55 = connectionPool54.getHttpConnectionCount();
        com.squareup.okhttp.Address address56 = null;
        com.squareup.okhttp.Connection connection57 = connectionPool54.get(address56);
        okHttpClient42.connectionPool = connectionPool54;
        java.net.ProxySelector proxySelector59 = okHttpClient42.proxySelector;
        java.net.Proxy proxy60 = java.net.Proxy.NO_PROXY;
        boolean boolean62 = proxy60.equals((java.lang.Object) 1L);
        com.squareup.okhttp.OkHttpClient okHttpClient63 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache64 = okHttpClient63.okResponseCache();
        java.net.ResponseCache responseCache65 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient66 = okHttpClient63.setResponseCache(responseCache65);
        java.lang.String[] strArray68 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList69 = new java.util.ArrayList<java.lang.String>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList69, strArray68);
        okHttpClient63.transports = strList69;
        boolean boolean72 = proxy60.equals((java.lang.Object) strList69);
        okHttpClient42.proxy = proxy60;
        java.lang.String str74 = proxy60.toString();
        okHttpClient27.proxy = proxy60;
        com.squareup.okhttp.OkHttpClient okHttpClient76 = new com.squareup.okhttp.OkHttpClient(okHttpClient27);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory77 = okHttpClient76.getSslSocketFactory();
        org.junit.Assert.assertNull(okResponseCache1);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertNull(sSLSocketFactory4);
        org.junit.Assert.assertNull(sSLSocketFactory5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(cookieHandler10);
        org.junit.Assert.assertNull(hostnameVerifier16);
        org.junit.Assert.assertNull(proxy17);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNotNull(okAuthenticator25);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNotNull(okHttpClient29);
        org.junit.Assert.assertNull(connectionPool30);
        org.junit.Assert.assertNotNull(connectionPool32);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNotNull(connectionPool40);
        org.junit.Assert.assertNotNull(okHttpClient42);
        org.junit.Assert.assertNull(proxy43);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNotNull(connectionPool52);
        org.junit.Assert.assertNotNull(connectionPool54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNull(connection57);
        org.junit.Assert.assertNull(proxySelector59);
        org.junit.Assert.assertNotNull(proxy60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(okResponseCache64);
        org.junit.Assert.assertNotNull(okHttpClient66);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "DIRECT" + "'", str74, "DIRECT");
        org.junit.Assert.assertNull(sSLSocketFactory77);
    }

    @Test
    public void test07387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07387");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.CookieHandler cookieHandler5 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = null;
        okHttpClient6.hostnameVerifier = hostnameVerifier7;
        java.net.ResponseCache responseCache9 = null;
        okHttpClient6.responseCache = responseCache9;
        java.util.List<java.lang.String> strList11 = okHttpClient6.transports;
        com.squareup.okhttp.ConnectionPool connectionPool12 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient6.connectionPool = connectionPool12;
        java.net.Proxy proxy14 = null;
        okHttpClient6.proxy = proxy14;
        java.util.Set<com.squareup.okhttp.Route> routeSet16 = okHttpClient6.failedRoutes;
        okHttpClient0.failedRoutes = routeSet16;
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient0.setHostnameVerifier(hostnameVerifier18);
        java.net.ResponseCache responseCache20 = okHttpClient0.responseCache;
        com.squareup.okhttp.OkAuthenticator okAuthenticator21 = okHttpClient0.authenticator;
        java.net.ProxySelector proxySelector22 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient0.setProxySelector(proxySelector22);
        com.squareup.okhttp.OkHttpClient okHttpClient24 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier25 = null;
        okHttpClient24.hostnameVerifier = hostnameVerifier25;
        java.net.ResponseCache responseCache27 = null;
        okHttpClient24.responseCache = responseCache27;
        java.util.List<java.lang.String> strList29 = okHttpClient24.transports;
        java.net.Proxy proxy30 = java.net.Proxy.NO_PROXY;
        boolean boolean32 = proxy30.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type33 = proxy30.type();
        java.net.SocketAddress socketAddress34 = proxy30.address();
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient24.setProxy(proxy30);
        java.net.SocketAddress socketAddress36 = proxy30.address();
        java.net.Proxy.Type type37 = proxy30.type();
        java.net.SocketAddress socketAddress38 = proxy30.address();
        com.squareup.okhttp.OkHttpClient okHttpClient39 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier40 = null;
        okHttpClient39.hostnameVerifier = hostnameVerifier40;
        java.net.ResponseCache responseCache42 = null;
        okHttpClient39.responseCache = responseCache42;
        javax.net.ssl.HostnameVerifier hostnameVerifier44 = okHttpClient39.hostnameVerifier;
        java.net.Proxy proxy45 = okHttpClient39.getProxy();
        java.net.CookieHandler cookieHandler46 = null;
        okHttpClient39.cookieHandler = cookieHandler46;
        okHttpClient39.followProtocolRedirects = true;
        java.net.CookieHandler cookieHandler50 = okHttpClient39.getCookieHandler();
        boolean boolean51 = proxy30.equals((java.lang.Object) okHttpClient39);
        java.lang.String str52 = proxy30.toString();
        com.squareup.okhttp.OkHttpClient okHttpClient53 = okHttpClient0.setProxy(proxy30);
        com.squareup.okhttp.OkHttpClient okHttpClient54 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier55 = null;
        okHttpClient54.hostnameVerifier = hostnameVerifier55;
        java.net.ProxySelector proxySelector57 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient58 = okHttpClient54.setProxySelector(proxySelector57);
        java.net.ResponseCache responseCache59 = null;
        okHttpClient58.responseCache = responseCache59;
        javax.net.ssl.HostnameVerifier hostnameVerifier61 = okHttpClient58.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient63 = okHttpClient58.setFollowProtocolRedirects(false);
        java.net.ResponseCache responseCache64 = okHttpClient63.responseCache;
        com.squareup.okhttp.ConnectionPool connectionPool67 = new com.squareup.okhttp.ConnectionPool(0, (long) (short) 10);
        connectionPool67.evictAll();
        com.squareup.okhttp.Address address69 = null;
        com.squareup.okhttp.Connection connection70 = connectionPool67.get(address69);
        okHttpClient63.connectionPool = connectionPool67;
        com.squareup.okhttp.OkHttpClient okHttpClient72 = okHttpClient53.setConnectionPool(connectionPool67);
        com.squareup.okhttp.Connection connection73 = null;
        // The following exception was thrown during execution in test generation
        try {
            connectionPool67.maybeShare(connection73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNotNull(routeSet16);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNull(responseCache20);
        org.junit.Assert.assertNull(okAuthenticator21);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(proxy30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + type33 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type33.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress34);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNull(socketAddress36);
        org.junit.Assert.assertTrue("'" + type37 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type37.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress38);
        org.junit.Assert.assertNull(hostnameVerifier44);
        org.junit.Assert.assertNull(proxy45);
        org.junit.Assert.assertNull(cookieHandler50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "DIRECT" + "'", str52, "DIRECT");
        org.junit.Assert.assertNotNull(okHttpClient53);
        org.junit.Assert.assertNotNull(okHttpClient58);
        org.junit.Assert.assertNull(hostnameVerifier61);
        org.junit.Assert.assertNotNull(okHttpClient63);
        org.junit.Assert.assertNull(responseCache64);
        org.junit.Assert.assertNull(connection70);
        org.junit.Assert.assertNotNull(okHttpClient72);
    }

    @Test
    public void test07388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07388");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.CookieHandler cookieHandler8 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache9 = okHttpClient0.okResponseCache();
        java.net.CookieHandler cookieHandler10 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        com.squareup.okhttp.OkHttpClient okHttpClient12 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool13 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient12.connectionPool = connectionPool13;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier16 = null;
        okHttpClient15.hostnameVerifier = hostnameVerifier16;
        java.net.ResponseCache responseCache18 = null;
        okHttpClient15.responseCache = responseCache18;
        java.util.List<java.lang.String> strList20 = okHttpClient15.transports;
        com.squareup.okhttp.ConnectionPool connectionPool21 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient15.connectionPool = connectionPool21;
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient12.setConnectionPool(connectionPool21);
        com.squareup.okhttp.ConnectionPool connectionPool24 = okHttpClient23.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator25 = okHttpClient23.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool28 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient23.connectionPool = connectionPool28;
        java.net.ResponseCache responseCache30 = okHttpClient23.responseCache;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool32 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient31.connectionPool = connectionPool32;
        com.squareup.okhttp.OkHttpClient okHttpClient34 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier35 = null;
        okHttpClient34.hostnameVerifier = hostnameVerifier35;
        java.net.ResponseCache responseCache37 = null;
        okHttpClient34.responseCache = responseCache37;
        java.util.List<java.lang.String> strList39 = okHttpClient34.transports;
        com.squareup.okhttp.ConnectionPool connectionPool40 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient34.connectionPool = connectionPool40;
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient31.setConnectionPool(connectionPool40);
        com.squareup.okhttp.ConnectionPool connectionPool43 = okHttpClient42.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator44 = okHttpClient42.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool47 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient42.connectionPool = connectionPool47;
        java.net.ResponseCache responseCache49 = okHttpClient42.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory50 = okHttpClient42.sslSocketFactory;
        java.net.Proxy proxy51 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress52 = proxy51.address();
        com.squareup.okhttp.OkHttpClient okHttpClient53 = okHttpClient42.setProxy(proxy51);
        com.squareup.okhttp.OkHttpClient okHttpClient54 = new com.squareup.okhttp.OkHttpClient(okHttpClient53);
        com.squareup.okhttp.OkHttpClient okHttpClient55 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier56 = null;
        okHttpClient55.hostnameVerifier = hostnameVerifier56;
        java.net.ResponseCache responseCache58 = null;
        okHttpClient55.responseCache = responseCache58;
        java.util.List<java.lang.String> strList60 = okHttpClient55.transports;
        com.squareup.okhttp.ConnectionPool connectionPool61 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient55.connectionPool = connectionPool61;
        com.squareup.okhttp.OkHttpClient okHttpClient63 = okHttpClient55.copyWithDefaults();
        java.net.ProxySelector proxySelector64 = okHttpClient63.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory65 = okHttpClient63.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient66 = okHttpClient53.setSSLSocketFactory(sSLSocketFactory65);
        java.lang.String[] strArray67 = sSLSocketFactory65.getSupportedCipherSuites();
        java.lang.String[] strArray68 = sSLSocketFactory65.getSupportedCipherSuites();
        okHttpClient23.sslSocketFactory = sSLSocketFactory65;
        okHttpClient0.sslSocketFactory = sSLSocketFactory65;
        java.lang.String[] strArray71 = sSLSocketFactory65.getDefaultCipherSuites();
        java.lang.String[] strArray72 = sSLSocketFactory65.getSupportedCipherSuites();
        java.lang.Class<?> wildcardClass73 = sSLSocketFactory65.getClass();
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNull(cookieHandler8);
        org.junit.Assert.assertNull(okResponseCache9);
        org.junit.Assert.assertNull(cookieHandler10);
        org.junit.Assert.assertNotNull(connectionPool13);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(connectionPool21);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertNotNull(connectionPool24);
        org.junit.Assert.assertNull(okAuthenticator25);
        org.junit.Assert.assertNull(responseCache30);
        org.junit.Assert.assertNotNull(connectionPool32);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNotNull(connectionPool40);
        org.junit.Assert.assertNotNull(okHttpClient42);
        org.junit.Assert.assertNotNull(connectionPool43);
        org.junit.Assert.assertNull(okAuthenticator44);
        org.junit.Assert.assertNull(responseCache49);
        org.junit.Assert.assertNull(sSLSocketFactory50);
        org.junit.Assert.assertNotNull(proxy51);
        org.junit.Assert.assertNull(socketAddress52);
        org.junit.Assert.assertNotNull(okHttpClient53);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNotNull(connectionPool61);
        org.junit.Assert.assertNotNull(okHttpClient63);
// flaky:         org.junit.Assert.assertNull(proxySelector64);
        org.junit.Assert.assertNotNull(sSLSocketFactory65);
        org.junit.Assert.assertNotNull(okHttpClient66);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test07389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07389");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.Proxy proxy8 = null;
        okHttpClient0.proxy = proxy8;
        boolean boolean10 = okHttpClient0.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient0.setFollowProtocolRedirects(true);
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = null;
        okHttpClient13.hostnameVerifier = hostnameVerifier14;
        java.net.ResponseCache responseCache16 = null;
        okHttpClient13.responseCache = responseCache16;
        java.util.List<java.lang.String> strList18 = okHttpClient13.transports;
        javax.net.ssl.HostnameVerifier hostnameVerifier19 = null;
        okHttpClient13.hostnameVerifier = hostnameVerifier19;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache21 = okHttpClient13.okResponseCache();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory22 = okHttpClient13.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient23 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier24 = null;
        okHttpClient23.hostnameVerifier = hostnameVerifier24;
        java.net.ResponseCache responseCache26 = null;
        okHttpClient23.responseCache = responseCache26;
        javax.net.ssl.HostnameVerifier hostnameVerifier28 = okHttpClient23.hostnameVerifier;
        java.net.Proxy proxy29 = okHttpClient23.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool32 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient23.connectionPool = connectionPool32;
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient23.copyWithDefaults();
        java.net.Proxy proxy35 = okHttpClient34.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier36 = okHttpClient34.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient13.setHostnameVerifier(hostnameVerifier36);
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient12.setHostnameVerifier(hostnameVerifier36);
        boolean boolean39 = okHttpClient38.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient40 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool41 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient40.connectionPool = connectionPool41;
        com.squareup.okhttp.OkHttpClient okHttpClient43 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier44 = null;
        okHttpClient43.hostnameVerifier = hostnameVerifier44;
        java.net.ResponseCache responseCache46 = null;
        okHttpClient43.responseCache = responseCache46;
        java.util.List<java.lang.String> strList48 = okHttpClient43.transports;
        com.squareup.okhttp.ConnectionPool connectionPool49 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient43.connectionPool = connectionPool49;
        com.squareup.okhttp.OkHttpClient okHttpClient51 = okHttpClient40.setConnectionPool(connectionPool49);
        com.squareup.okhttp.ConnectionPool connectionPool52 = okHttpClient51.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator53 = okHttpClient51.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool56 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient51.connectionPool = connectionPool56;
        java.net.ResponseCache responseCache58 = okHttpClient51.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory59 = okHttpClient51.sslSocketFactory;
        java.net.Proxy proxy60 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress61 = proxy60.address();
        com.squareup.okhttp.OkHttpClient okHttpClient62 = okHttpClient51.setProxy(proxy60);
        com.squareup.okhttp.OkHttpClient okHttpClient63 = okHttpClient38.setProxy(proxy60);
        java.net.Proxy proxy64 = java.net.Proxy.NO_PROXY;
        boolean boolean66 = proxy64.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type67 = proxy64.type();
        com.squareup.okhttp.OkHttpClient okHttpClient68 = okHttpClient38.setProxy(proxy64);
        java.net.ResponseCache responseCache69 = okHttpClient38.responseCache;
        com.squareup.okhttp.OkAuthenticator okAuthenticator70 = okHttpClient38.getAuthenticator();
        java.net.CookieHandler cookieHandler71 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient72 = okHttpClient38.setCookieHandler(cookieHandler71);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(okResponseCache21);
        org.junit.Assert.assertNull(sSLSocketFactory22);
        org.junit.Assert.assertNull(hostnameVerifier28);
        org.junit.Assert.assertNull(proxy29);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertNull(proxy35);
        org.junit.Assert.assertNotNull(hostnameVerifier36);
        org.junit.Assert.assertNotNull(okHttpClient37);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(connectionPool41);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNotNull(connectionPool49);
        org.junit.Assert.assertNotNull(okHttpClient51);
        org.junit.Assert.assertNotNull(connectionPool52);
        org.junit.Assert.assertNull(okAuthenticator53);
        org.junit.Assert.assertNull(responseCache58);
        org.junit.Assert.assertNull(sSLSocketFactory59);
        org.junit.Assert.assertNotNull(proxy60);
        org.junit.Assert.assertNull(socketAddress61);
        org.junit.Assert.assertNotNull(okHttpClient62);
        org.junit.Assert.assertNotNull(okHttpClient63);
        org.junit.Assert.assertNotNull(proxy64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + type67 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type67.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNotNull(okHttpClient68);
        org.junit.Assert.assertNull(responseCache69);
        org.junit.Assert.assertNull(okAuthenticator70);
        org.junit.Assert.assertNotNull(okHttpClient72);
    }

    @Test
    public void test07390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07390");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.ConnectionPool connectionPool12 = okHttpClient11.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator13 = okHttpClient11.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool16 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient11.connectionPool = connectionPool16;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier19 = null;
        okHttpClient18.hostnameVerifier = hostnameVerifier19;
        java.net.ResponseCache responseCache21 = null;
        okHttpClient18.responseCache = responseCache21;
        java.util.List<java.lang.String> strList23 = okHttpClient18.transports;
        com.squareup.okhttp.ConnectionPool connectionPool24 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient18.connectionPool = connectionPool24;
        java.net.CookieHandler cookieHandler26 = okHttpClient18.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache27 = okHttpClient18.okResponseCache();
        java.net.CookieHandler cookieHandler28 = okHttpClient18.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient29 = new com.squareup.okhttp.OkHttpClient(okHttpClient18);
        java.net.Proxy proxy30 = java.net.Proxy.NO_PROXY;
        boolean boolean32 = proxy30.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type33 = proxy30.type();
        java.net.SocketAddress socketAddress34 = proxy30.address();
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient18.setProxy(proxy30);
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient11.setProxy(proxy30);
        java.net.ResponseCache responseCache37 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient36.setResponseCache(responseCache37);
        com.squareup.okhttp.ConnectionPool connectionPool39 = okHttpClient38.connectionPool;
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNull(okAuthenticator13);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNotNull(connectionPool24);
        org.junit.Assert.assertNull(cookieHandler26);
        org.junit.Assert.assertNull(okResponseCache27);
        org.junit.Assert.assertNull(cookieHandler28);
        org.junit.Assert.assertNotNull(proxy30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + type33 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type33.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress34);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNotNull(connectionPool39);
    }

    @Test
    public void test07391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07391");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = null;
        okHttpClient0.proxy = proxy6;
        com.squareup.okhttp.ConnectionPool connectionPool8 = null;
        okHttpClient0.connectionPool = connectionPool8;
        com.squareup.okhttp.OkAuthenticator okAuthenticator10 = okHttpClient0.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool12 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient11.connectionPool = connectionPool12;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier15 = null;
        okHttpClient14.hostnameVerifier = hostnameVerifier15;
        java.net.ResponseCache responseCache17 = null;
        okHttpClient14.responseCache = responseCache17;
        java.util.List<java.lang.String> strList19 = okHttpClient14.transports;
        com.squareup.okhttp.ConnectionPool connectionPool20 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient14.connectionPool = connectionPool20;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient11.setConnectionPool(connectionPool20);
        java.net.ResponseCache responseCache23 = okHttpClient11.responseCache;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient11.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient25 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier26 = null;
        okHttpClient25.hostnameVerifier = hostnameVerifier26;
        java.net.ResponseCache responseCache28 = null;
        okHttpClient25.responseCache = responseCache28;
        java.util.List<java.lang.String> strList30 = okHttpClient25.transports;
        com.squareup.okhttp.ConnectionPool connectionPool31 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient25.connectionPool = connectionPool31;
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient25.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient34 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier35 = null;
        okHttpClient34.hostnameVerifier = hostnameVerifier35;
        java.net.ResponseCache responseCache37 = null;
        okHttpClient34.responseCache = responseCache37;
        java.util.List<java.lang.String> strList39 = okHttpClient34.transports;
        com.squareup.okhttp.ConnectionPool connectionPool40 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient34.connectionPool = connectionPool40;
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient34.copyWithDefaults();
        java.net.ProxySelector proxySelector43 = okHttpClient42.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory44 = okHttpClient42.getSslSocketFactory();
        okHttpClient25.sslSocketFactory = sSLSocketFactory44;
        okHttpClient24.sslSocketFactory = sSLSocketFactory44;
        java.net.ProxySelector proxySelector47 = okHttpClient24.getProxySelector();
        javax.net.ssl.HostnameVerifier hostnameVerifier48 = okHttpClient24.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient49 = okHttpClient0.setHostnameVerifier(hostnameVerifier48);
        com.squareup.okhttp.OkHttpClient okHttpClient50 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier51 = null;
        okHttpClient50.hostnameVerifier = hostnameVerifier51;
        java.net.ProxySelector proxySelector53 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient54 = okHttpClient50.setProxySelector(proxySelector53);
        com.squareup.okhttp.OkHttpClient okHttpClient55 = okHttpClient54.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient56 = okHttpClient55.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient57 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier58 = null;
        okHttpClient57.hostnameVerifier = hostnameVerifier58;
        java.net.ProxySelector proxySelector60 = okHttpClient57.proxySelector;
        java.net.Proxy proxy61 = okHttpClient57.proxy;
        java.util.List<java.lang.String> strList62 = okHttpClient57.transports;
        boolean boolean63 = okHttpClient57.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient64 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool65 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient64.connectionPool = connectionPool65;
        java.net.ResponseCache responseCache67 = null;
        okHttpClient64.responseCache = responseCache67;
        java.net.Proxy proxy69 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress70 = proxy69.address();
        java.net.SocketAddress socketAddress71 = proxy69.address();
        okHttpClient64.proxy = proxy69;
        com.squareup.okhttp.OkHttpClient okHttpClient73 = okHttpClient57.setProxy(proxy69);
        okHttpClient55.proxy = proxy69;
        java.net.SocketAddress socketAddress75 = proxy69.address();
        java.lang.Object obj76 = null;
        boolean boolean77 = proxy69.equals(obj76);
        okHttpClient49.proxy = proxy69;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory79 = okHttpClient49.getSslSocketFactory();
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(okAuthenticator10);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNotNull(connectionPool20);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNull(responseCache23);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNotNull(connectionPool31);
        org.junit.Assert.assertNotNull(okHttpClient33);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNotNull(connectionPool40);
        org.junit.Assert.assertNotNull(okHttpClient42);
// flaky:         org.junit.Assert.assertNull(proxySelector43);
        org.junit.Assert.assertNotNull(sSLSocketFactory44);
// flaky:         org.junit.Assert.assertNull(proxySelector47);
        org.junit.Assert.assertNotNull(hostnameVerifier48);
        org.junit.Assert.assertNotNull(okHttpClient49);
        org.junit.Assert.assertNotNull(okHttpClient54);
        org.junit.Assert.assertNotNull(okHttpClient55);
        org.junit.Assert.assertNotNull(okHttpClient56);
        org.junit.Assert.assertNull(proxySelector60);
        org.junit.Assert.assertNull(proxy61);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(connectionPool65);
        org.junit.Assert.assertNotNull(proxy69);
        org.junit.Assert.assertNull(socketAddress70);
        org.junit.Assert.assertNull(socketAddress71);
        org.junit.Assert.assertNotNull(okHttpClient73);
        org.junit.Assert.assertNull(socketAddress75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNull(sSLSocketFactory79);
    }

    @Test
    public void test07392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07392");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.Proxy proxy8 = null;
        okHttpClient0.proxy = proxy8;
        java.net.Proxy proxy10 = okHttpClient0.getProxy();
        java.net.ProxySelector proxySelector11 = null;
        okHttpClient0.proxySelector = proxySelector11;
        java.net.Proxy proxy13 = okHttpClient0.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient0.copyWithDefaults();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory15 = okHttpClient14.sslSocketFactory;
        java.net.InetAddress inetAddress16 = null;
        java.net.InetAddress inetAddress18 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket20 = sSLSocketFactory15.createSocket(inetAddress16, (int) (short) 0, inetAddress18, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.net.BindException; message: Permission denied (Bind failed)");
        } catch (java.net.BindException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNull(proxy10);
        org.junit.Assert.assertNull(proxy13);
        org.junit.Assert.assertNotNull(okHttpClient14);
        org.junit.Assert.assertNotNull(sSLSocketFactory15);
    }

    @Test
    public void test07393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07393");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.net.Proxy proxy5 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress6 = proxy5.address();
        java.net.SocketAddress socketAddress7 = proxy5.address();
        okHttpClient0.proxy = proxy5;
        com.squareup.okhttp.ConnectionPool connectionPool11 = new com.squareup.okhttp.ConnectionPool((-1), (long) '#');
        com.squareup.okhttp.Address address12 = null;
        com.squareup.okhttp.Connection connection13 = connectionPool11.get(address12);
        int int14 = connectionPool11.getSpdyConnectionCount();
        connectionPool11.evictAll();
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient0.setConnectionPool(connectionPool11);
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = null;
        okHttpClient17.hostnameVerifier = hostnameVerifier18;
        java.net.ProxySelector proxySelector20 = okHttpClient17.proxySelector;
        java.net.ProxySelector proxySelector21 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient17.setProxySelector(proxySelector21);
        com.squareup.okhttp.OkHttpClient okHttpClient23 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier24 = null;
        okHttpClient23.hostnameVerifier = hostnameVerifier24;
        java.net.ResponseCache responseCache26 = null;
        okHttpClient23.responseCache = responseCache26;
        java.util.List<java.lang.String> strList28 = okHttpClient23.transports;
        com.squareup.okhttp.ConnectionPool connectionPool29 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient23.connectionPool = connectionPool29;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient23.copyWithDefaults();
        java.net.ProxySelector proxySelector32 = okHttpClient31.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory33 = okHttpClient31.getSslSocketFactory();
        okHttpClient17.sslSocketFactory = sSLSocketFactory33;
        okHttpClient0.sslSocketFactory = sSLSocketFactory33;
        java.lang.String[] strArray36 = sSLSocketFactory33.getDefaultCipherSuites();
        java.lang.String[] strArray37 = sSLSocketFactory33.getDefaultCipherSuites();
        java.lang.String[] strArray38 = sSLSocketFactory33.getSupportedCipherSuites();
        java.net.InetAddress inetAddress41 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket43 = sSLSocketFactory33.createSocket("", 100, inetAddress41, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.net.BindException; message: Permission denied (Bind failed)");
        } catch (java.net.BindException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNotNull(proxy5);
        org.junit.Assert.assertNull(socketAddress6);
        org.junit.Assert.assertNull(socketAddress7);
        org.junit.Assert.assertNull(connection13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNull(proxySelector20);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNotNull(connectionPool29);
        org.junit.Assert.assertNotNull(okHttpClient31);
// flaky:         org.junit.Assert.assertNull(proxySelector32);
        org.junit.Assert.assertNotNull(sSLSocketFactory33);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(strArray38);
    }

    @Test
    public void test07394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07394");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        java.net.Proxy proxy12 = okHttpClient11.proxy;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory13 = null;
        okHttpClient11.sslSocketFactory = sSLSocketFactory13;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier16 = null;
        okHttpClient15.hostnameVerifier = hostnameVerifier16;
        java.net.ResponseCache responseCache18 = null;
        okHttpClient15.responseCache = responseCache18;
        java.util.List<java.lang.String> strList20 = okHttpClient15.transports;
        com.squareup.okhttp.ConnectionPool connectionPool21 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient15.connectionPool = connectionPool21;
        com.squareup.okhttp.ConnectionPool connectionPool23 = okHttpClient15.connectionPool;
        int int24 = connectionPool23.getHttpConnectionCount();
        com.squareup.okhttp.Address address25 = null;
        com.squareup.okhttp.Connection connection26 = connectionPool23.get(address25);
        okHttpClient11.connectionPool = connectionPool23;
        java.net.ProxySelector proxySelector28 = okHttpClient11.proxySelector;
        java.net.Proxy proxy29 = java.net.Proxy.NO_PROXY;
        boolean boolean31 = proxy29.equals((java.lang.Object) 1L);
        com.squareup.okhttp.OkHttpClient okHttpClient32 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache33 = okHttpClient32.okResponseCache();
        java.net.ResponseCache responseCache34 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient32.setResponseCache(responseCache34);
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList38 = new java.util.ArrayList<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        okHttpClient32.transports = strList38;
        boolean boolean41 = proxy29.equals((java.lang.Object) strList38);
        okHttpClient11.proxy = proxy29;
        java.net.ResponseCache responseCache43 = null;
        okHttpClient11.responseCache = responseCache43;
        com.squareup.okhttp.OkHttpClient okHttpClient45 = new com.squareup.okhttp.OkHttpClient(okHttpClient11);
        java.net.ProxySelector proxySelector46 = null;
        okHttpClient11.proxySelector = proxySelector46;
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(proxy12);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(connectionPool21);
        org.junit.Assert.assertNotNull(connectionPool23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNull(connection26);
        org.junit.Assert.assertNull(proxySelector28);
        org.junit.Assert.assertNotNull(proxy29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(okResponseCache33);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test07395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07395");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        okHttpClient0.authenticator = okAuthenticator3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient0.responseCache = responseCache6;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier9 = null;
        okHttpClient8.hostnameVerifier = hostnameVerifier9;
        java.net.ResponseCache responseCache11 = null;
        okHttpClient8.responseCache = responseCache11;
        javax.net.ssl.HostnameVerifier hostnameVerifier13 = okHttpClient8.hostnameVerifier;
        java.net.Proxy proxy14 = okHttpClient8.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool17 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient8.connectionPool = connectionPool17;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient8.copyWithDefaults();
        java.net.Proxy proxy20 = okHttpClient19.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier21 = okHttpClient19.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient0.setHostnameVerifier(hostnameVerifier21);
        java.net.CookieHandler cookieHandler23 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient22.setCookieHandler(cookieHandler23);
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient22.copyWithDefaults();
        java.util.List<java.lang.String> strList26 = okHttpClient22.transports;
        java.net.ResponseCache responseCache27 = okHttpClient22.responseCache;
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNull(hostnameVerifier13);
        org.junit.Assert.assertNull(proxy14);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNull(proxy20);
        org.junit.Assert.assertNotNull(hostnameVerifier21);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNotNull(okHttpClient25);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNull(responseCache27);
    }

    @Test
    public void test07396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07396");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache8 = okHttpClient7.okResponseCache();
        java.net.ResponseCache responseCache9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient7.setResponseCache(responseCache9);
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        okHttpClient7.transports = strList13;
        okHttpClient0.transports = strList13;
        javax.net.ssl.HostnameVerifier hostnameVerifier17 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier17;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory20 = okHttpClient0.sslSocketFactory;
        java.util.List<java.lang.String> strList21 = okHttpClient0.transports;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache22 = okHttpClient0.okResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator23 = okHttpClient0.getAuthenticator();
        com.squareup.okhttp.OkHttpClient okHttpClient24 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier25 = null;
        okHttpClient24.hostnameVerifier = hostnameVerifier25;
        java.net.ProxySelector proxySelector27 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient24.setProxySelector(proxySelector27);
        java.net.ResponseCache responseCache29 = null;
        okHttpClient28.responseCache = responseCache29;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory31 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient28.setSSLSocketFactory(sSLSocketFactory31);
        java.net.ProxySelector proxySelector33 = null;
        okHttpClient28.proxySelector = proxySelector33;
        javax.net.ssl.HostnameVerifier hostnameVerifier35 = okHttpClient28.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient28.copyWithDefaults();
        java.net.ResponseCache responseCache37 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient28.setResponseCache(responseCache37);
        com.squareup.okhttp.ConnectionPool connectionPool41 = new com.squareup.okhttp.ConnectionPool((int) (short) 1, (long) (short) 100);
        int int42 = connectionPool41.getHttpConnectionCount();
        okHttpClient38.connectionPool = connectionPool41;
        com.squareup.okhttp.OkHttpClient okHttpClient44 = okHttpClient0.setConnectionPool(connectionPool41);
        java.net.Proxy proxy45 = okHttpClient44.proxy;
        java.net.ProxySelector proxySelector46 = okHttpClient44.proxySelector;
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNull(okResponseCache8);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(sSLSocketFactory20);
        org.junit.Assert.assertNotNull(strList21);
        org.junit.Assert.assertNull(okResponseCache22);
        org.junit.Assert.assertNull(okAuthenticator23);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertNull(hostnameVerifier35);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(okHttpClient44);
        org.junit.Assert.assertNull(proxy45);
        org.junit.Assert.assertNull(proxySelector46);
    }

    @Test
    public void test07397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07397");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient0.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.copyWithDefaults();
        java.net.Proxy proxy12 = okHttpClient11.getProxy();
        java.net.CookieHandler cookieHandler13 = null;
        okHttpClient11.cookieHandler = cookieHandler13;
        com.squareup.okhttp.OkAuthenticator okAuthenticator15 = okHttpClient11.getAuthenticator();
        com.squareup.okhttp.OkHttpClient okHttpClient16 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier17 = null;
        okHttpClient16.hostnameVerifier = hostnameVerifier17;
        java.net.ProxySelector proxySelector19 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient16.setProxySelector(proxySelector19);
        java.net.ResponseCache responseCache21 = null;
        okHttpClient20.responseCache = responseCache21;
        javax.net.ssl.HostnameVerifier hostnameVerifier23 = okHttpClient20.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient20.setFollowProtocolRedirects(false);
        java.net.ProxySelector proxySelector26 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient25.setProxySelector(proxySelector26);
        okHttpClient27.followProtocolRedirects = true;
        com.squareup.okhttp.OkHttpClient okHttpClient30 = okHttpClient27.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient31 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool32 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient31.connectionPool = connectionPool32;
        com.squareup.okhttp.OkHttpClient okHttpClient34 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier35 = null;
        okHttpClient34.hostnameVerifier = hostnameVerifier35;
        java.net.ResponseCache responseCache37 = null;
        okHttpClient34.responseCache = responseCache37;
        java.util.List<java.lang.String> strList39 = okHttpClient34.transports;
        com.squareup.okhttp.ConnectionPool connectionPool40 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient34.connectionPool = connectionPool40;
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient31.setConnectionPool(connectionPool40);
        java.net.Proxy proxy43 = okHttpClient42.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient44 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool45 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient44.connectionPool = connectionPool45;
        com.squareup.okhttp.OkHttpClient okHttpClient47 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier48 = null;
        okHttpClient47.hostnameVerifier = hostnameVerifier48;
        java.net.ResponseCache responseCache50 = null;
        okHttpClient47.responseCache = responseCache50;
        java.util.List<java.lang.String> strList52 = okHttpClient47.transports;
        com.squareup.okhttp.ConnectionPool connectionPool53 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient47.connectionPool = connectionPool53;
        com.squareup.okhttp.OkHttpClient okHttpClient55 = okHttpClient44.setConnectionPool(connectionPool53);
        com.squareup.okhttp.ConnectionPool connectionPool56 = okHttpClient44.connectionPool;
        com.squareup.okhttp.OkHttpClient okHttpClient57 = okHttpClient42.setConnectionPool(connectionPool56);
        okHttpClient42.followProtocolRedirects = false;
        com.squareup.okhttp.OkHttpClient okHttpClient60 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool61 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient60.connectionPool = connectionPool61;
        com.squareup.okhttp.OkHttpClient okHttpClient63 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier64 = null;
        okHttpClient63.hostnameVerifier = hostnameVerifier64;
        java.net.ResponseCache responseCache66 = null;
        okHttpClient63.responseCache = responseCache66;
        java.util.List<java.lang.String> strList68 = okHttpClient63.transports;
        com.squareup.okhttp.ConnectionPool connectionPool69 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient63.connectionPool = connectionPool69;
        com.squareup.okhttp.OkHttpClient okHttpClient71 = okHttpClient60.setConnectionPool(connectionPool69);
        java.net.ResponseCache responseCache72 = okHttpClient60.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory73 = okHttpClient60.sslSocketFactory;
        java.net.CookieHandler cookieHandler74 = okHttpClient60.getCookieHandler();
        com.squareup.okhttp.OkAuthenticator okAuthenticator75 = okHttpClient60.authenticator;
        java.util.Set<com.squareup.okhttp.Route> routeSet76 = okHttpClient60.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient77 = new com.squareup.okhttp.OkHttpClient(okHttpClient60);
        com.squareup.okhttp.OkHttpClient okHttpClient78 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier79 = null;
        okHttpClient78.hostnameVerifier = hostnameVerifier79;
        java.net.ResponseCache responseCache81 = null;
        okHttpClient78.responseCache = responseCache81;
        javax.net.ssl.HostnameVerifier hostnameVerifier83 = okHttpClient78.hostnameVerifier;
        java.net.Proxy proxy84 = okHttpClient78.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool87 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient78.connectionPool = connectionPool87;
        com.squareup.okhttp.OkHttpClient okHttpClient89 = okHttpClient78.copyWithDefaults();
        java.net.ResponseCache responseCache90 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient91 = okHttpClient89.setResponseCache(responseCache90);
        javax.net.ssl.HostnameVerifier hostnameVerifier92 = okHttpClient91.hostnameVerifier;
        okHttpClient77.hostnameVerifier = hostnameVerifier92;
        com.squareup.okhttp.OkHttpClient okHttpClient94 = okHttpClient42.setHostnameVerifier(hostnameVerifier92);
        com.squareup.okhttp.OkHttpClient okHttpClient95 = okHttpClient30.setHostnameVerifier(hostnameVerifier92);
        com.squareup.okhttp.OkAuthenticator okAuthenticator96 = okHttpClient95.getAuthenticator();
        com.squareup.okhttp.OkAuthenticator okAuthenticator97 = okHttpClient95.authenticator;
        okHttpClient11.authenticator = okAuthenticator97;
        java.net.ResponseCache responseCache99 = okHttpClient11.getResponseCache();
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(proxy12);
        org.junit.Assert.assertNotNull(okAuthenticator15);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNull(hostnameVerifier23);
        org.junit.Assert.assertNotNull(okHttpClient25);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNotNull(okHttpClient30);
        org.junit.Assert.assertNotNull(connectionPool32);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNotNull(connectionPool40);
        org.junit.Assert.assertNotNull(okHttpClient42);
        org.junit.Assert.assertNull(proxy43);
        org.junit.Assert.assertNotNull(connectionPool45);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNotNull(connectionPool53);
        org.junit.Assert.assertNotNull(okHttpClient55);
        org.junit.Assert.assertNotNull(connectionPool56);
        org.junit.Assert.assertNotNull(okHttpClient57);
        org.junit.Assert.assertNotNull(connectionPool61);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNotNull(connectionPool69);
        org.junit.Assert.assertNotNull(okHttpClient71);
        org.junit.Assert.assertNull(responseCache72);
        org.junit.Assert.assertNull(sSLSocketFactory73);
        org.junit.Assert.assertNull(cookieHandler74);
        org.junit.Assert.assertNull(okAuthenticator75);
        org.junit.Assert.assertNotNull(routeSet76);
        org.junit.Assert.assertNull(hostnameVerifier83);
        org.junit.Assert.assertNull(proxy84);
        org.junit.Assert.assertNotNull(okHttpClient89);
        org.junit.Assert.assertNotNull(okHttpClient91);
        org.junit.Assert.assertNotNull(hostnameVerifier92);
        org.junit.Assert.assertNotNull(okHttpClient94);
        org.junit.Assert.assertNotNull(okHttpClient95);
        org.junit.Assert.assertNotNull(okAuthenticator96);
        org.junit.Assert.assertNotNull(okAuthenticator97);
        org.junit.Assert.assertNull(responseCache99);
    }

    @Test
    public void test07398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07398");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        com.squareup.okhttp.OkAuthenticator okAuthenticator5 = null;
        okHttpClient0.authenticator = okAuthenticator5;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory7 = okHttpClient0.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier9 = null;
        okHttpClient8.hostnameVerifier = hostnameVerifier9;
        java.net.ProxySelector proxySelector11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient8.setProxySelector(proxySelector11);
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient12.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient14 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool15 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient14.connectionPool = connectionPool15;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = null;
        okHttpClient17.hostnameVerifier = hostnameVerifier18;
        java.net.ResponseCache responseCache20 = null;
        okHttpClient17.responseCache = responseCache20;
        java.util.List<java.lang.String> strList22 = okHttpClient17.transports;
        com.squareup.okhttp.ConnectionPool connectionPool23 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient17.connectionPool = connectionPool23;
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient14.setConnectionPool(connectionPool23);
        com.squareup.okhttp.OkHttpClient okHttpClient26 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier27 = null;
        okHttpClient26.hostnameVerifier = hostnameVerifier27;
        java.net.ProxySelector proxySelector29 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient30 = okHttpClient26.setProxySelector(proxySelector29);
        java.net.CookieHandler cookieHandler31 = okHttpClient26.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient32 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier33 = null;
        okHttpClient32.hostnameVerifier = hostnameVerifier33;
        java.net.ResponseCache responseCache35 = null;
        okHttpClient32.responseCache = responseCache35;
        java.util.List<java.lang.String> strList37 = okHttpClient32.transports;
        com.squareup.okhttp.ConnectionPool connectionPool38 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient32.connectionPool = connectionPool38;
        java.net.Proxy proxy40 = null;
        okHttpClient32.proxy = proxy40;
        java.util.Set<com.squareup.okhttp.Route> routeSet42 = okHttpClient32.failedRoutes;
        okHttpClient26.failedRoutes = routeSet42;
        java.net.ProxySelector proxySelector44 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient45 = okHttpClient26.setProxySelector(proxySelector44);
        com.squareup.okhttp.OkHttpClient okHttpClient46 = okHttpClient26.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient47 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier48 = null;
        okHttpClient47.hostnameVerifier = hostnameVerifier48;
        java.net.ResponseCache responseCache50 = null;
        okHttpClient47.responseCache = responseCache50;
        javax.net.ssl.HostnameVerifier hostnameVerifier52 = okHttpClient47.hostnameVerifier;
        java.net.Proxy proxy53 = okHttpClient47.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool56 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient47.connectionPool = connectionPool56;
        com.squareup.okhttp.OkHttpClient okHttpClient58 = okHttpClient47.copyWithDefaults();
        java.net.Proxy proxy59 = okHttpClient58.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier60 = okHttpClient58.getHostnameVerifier();
        okHttpClient26.hostnameVerifier = hostnameVerifier60;
        okHttpClient25.hostnameVerifier = hostnameVerifier60;
        okHttpClient13.hostnameVerifier = hostnameVerifier60;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache64 = okHttpClient13.okResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient65 = okHttpClient13.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient66 = new com.squareup.okhttp.OkHttpClient(okHttpClient65);
        java.net.ResponseCache responseCache67 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient68 = okHttpClient66.setResponseCache(responseCache67);
        java.net.CookieHandler cookieHandler69 = okHttpClient68.cookieHandler;
        com.squareup.okhttp.OkHttpClient okHttpClient70 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier71 = null;
        okHttpClient70.hostnameVerifier = hostnameVerifier71;
        java.net.ResponseCache responseCache73 = null;
        okHttpClient70.responseCache = responseCache73;
        java.util.List<java.lang.String> strList75 = okHttpClient70.transports;
        com.squareup.okhttp.ConnectionPool connectionPool76 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient70.connectionPool = connectionPool76;
        java.net.CookieHandler cookieHandler78 = okHttpClient70.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache79 = okHttpClient70.okResponseCache();
        java.net.CookieHandler cookieHandler80 = okHttpClient70.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient81 = new com.squareup.okhttp.OkHttpClient(okHttpClient70);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory82 = okHttpClient81.sslSocketFactory;
        com.squareup.okhttp.OkAuthenticator okAuthenticator83 = okHttpClient81.authenticator;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache84 = okHttpClient81.okResponseCache();
        java.net.Proxy proxy85 = okHttpClient81.getProxy();
        java.net.ResponseCache responseCache86 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient87 = okHttpClient81.setResponseCache(responseCache86);
        java.net.Proxy proxy88 = java.net.Proxy.NO_PROXY;
        boolean boolean90 = proxy88.equals((java.lang.Object) 1L);
        okHttpClient87.proxy = proxy88;
        okHttpClient68.proxy = proxy88;
        com.squareup.okhttp.OkHttpClient okHttpClient93 = okHttpClient0.setProxy(proxy88);
        java.net.Proxy.Type type94 = proxy88.type();
        java.net.SocketAddress socketAddress95 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Proxy proxy96 = new java.net.Proxy(type94, socketAddress95);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: type DIRECT is not compatible with address null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(sSLSocketFactory7);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNotNull(connectionPool15);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNotNull(connectionPool23);
        org.junit.Assert.assertNotNull(okHttpClient25);
        org.junit.Assert.assertNotNull(okHttpClient30);
        org.junit.Assert.assertNull(cookieHandler31);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(connectionPool38);
        org.junit.Assert.assertNotNull(routeSet42);
        org.junit.Assert.assertNotNull(okHttpClient45);
        org.junit.Assert.assertNotNull(okHttpClient46);
        org.junit.Assert.assertNull(hostnameVerifier52);
        org.junit.Assert.assertNull(proxy53);
        org.junit.Assert.assertNotNull(okHttpClient58);
        org.junit.Assert.assertNull(proxy59);
        org.junit.Assert.assertNotNull(hostnameVerifier60);
        org.junit.Assert.assertNull(okResponseCache64);
        org.junit.Assert.assertNotNull(okHttpClient65);
        org.junit.Assert.assertNotNull(okHttpClient68);
        org.junit.Assert.assertNull(cookieHandler69);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNotNull(connectionPool76);
        org.junit.Assert.assertNull(cookieHandler78);
        org.junit.Assert.assertNull(okResponseCache79);
        org.junit.Assert.assertNull(cookieHandler80);
        org.junit.Assert.assertNull(sSLSocketFactory82);
        org.junit.Assert.assertNull(okAuthenticator83);
        org.junit.Assert.assertNull(okResponseCache84);
        org.junit.Assert.assertNull(proxy85);
        org.junit.Assert.assertNotNull(okHttpClient87);
        org.junit.Assert.assertNotNull(proxy88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(okHttpClient93);
        org.junit.Assert.assertTrue("'" + type94 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type94.equals(java.net.Proxy.Type.DIRECT));
    }

    @Test
    public void test07399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07399");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.Proxy proxy8 = null;
        okHttpClient0.proxy = proxy8;
        boolean boolean10 = okHttpClient0.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient0.setFollowProtocolRedirects(true);
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = null;
        okHttpClient13.hostnameVerifier = hostnameVerifier14;
        java.net.ResponseCache responseCache16 = null;
        okHttpClient13.responseCache = responseCache16;
        java.util.List<java.lang.String> strList18 = okHttpClient13.transports;
        com.squareup.okhttp.ConnectionPool connectionPool19 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient13.connectionPool = connectionPool19;
        com.squareup.okhttp.ConnectionPool connectionPool21 = okHttpClient13.connectionPool;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient0.setConnectionPool(connectionPool21);
        java.net.ResponseCache responseCache23 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient0.setResponseCache(responseCache23);
        java.net.CookieHandler cookieHandler25 = null;
        okHttpClient0.cookieHandler = cookieHandler25;
        java.net.CookieHandler cookieHandler27 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient0.setCookieHandler(cookieHandler27);
        java.lang.Class<?> wildcardClass29 = okHttpClient0.getClass();
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(connectionPool19);
        org.junit.Assert.assertNotNull(connectionPool21);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test07400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07400");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        java.net.Proxy proxy12 = okHttpClient11.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool14 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient13.connectionPool = connectionPool14;
        int int16 = connectionPool14.getSpdyConnectionCount();
        okHttpClient11.connectionPool = connectionPool14;
        java.net.ProxySelector proxySelector18 = okHttpClient11.proxySelector;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier20 = null;
        okHttpClient19.hostnameVerifier = hostnameVerifier20;
        java.net.ProxySelector proxySelector22 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient19.setProxySelector(proxySelector22);
        java.net.CookieHandler cookieHandler24 = okHttpClient19.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient25 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier26 = null;
        okHttpClient25.hostnameVerifier = hostnameVerifier26;
        java.net.ResponseCache responseCache28 = null;
        okHttpClient25.responseCache = responseCache28;
        java.util.List<java.lang.String> strList30 = okHttpClient25.transports;
        com.squareup.okhttp.ConnectionPool connectionPool31 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient25.connectionPool = connectionPool31;
        java.net.Proxy proxy33 = null;
        okHttpClient25.proxy = proxy33;
        java.util.Set<com.squareup.okhttp.Route> routeSet35 = okHttpClient25.failedRoutes;
        okHttpClient19.failedRoutes = routeSet35;
        java.net.ProxySelector proxySelector37 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient19.setProxySelector(proxySelector37);
        com.squareup.okhttp.ConnectionPool connectionPool41 = new com.squareup.okhttp.ConnectionPool((int) (short) 10, (long) '4');
        okHttpClient19.connectionPool = connectionPool41;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory43 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient44 = okHttpClient19.setSSLSocketFactory(sSLSocketFactory43);
        com.squareup.okhttp.OkHttpClient okHttpClient45 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier46 = null;
        okHttpClient45.hostnameVerifier = hostnameVerifier46;
        java.net.ResponseCache responseCache48 = null;
        okHttpClient45.responseCache = responseCache48;
        java.util.List<java.lang.String> strList50 = okHttpClient45.transports;
        com.squareup.okhttp.ConnectionPool connectionPool51 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient45.connectionPool = connectionPool51;
        com.squareup.okhttp.OkHttpClient okHttpClient53 = okHttpClient45.copyWithDefaults();
        boolean boolean54 = okHttpClient53.getFollowProtocolRedirects();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory55 = okHttpClient53.sslSocketFactory;
        java.util.List<java.lang.String> strList56 = okHttpClient53.transports;
        okHttpClient44.transports = strList56;
        // The following exception was thrown during execution in test generation
        try {
            com.squareup.okhttp.OkHttpClient okHttpClient58 = okHttpClient11.setTransports(strList56);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: transports doesn't contain http/1.1: [hi!]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(proxy12);
        org.junit.Assert.assertNotNull(connectionPool14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNull(proxySelector18);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertNull(cookieHandler24);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNotNull(connectionPool31);
        org.junit.Assert.assertNotNull(routeSet35);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNotNull(okHttpClient44);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNotNull(connectionPool51);
        org.junit.Assert.assertNotNull(okHttpClient53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(sSLSocketFactory55);
        org.junit.Assert.assertNotNull(strList56);
    }

    @Test
    public void test07401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07401");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        com.squareup.okhttp.ConnectionPool connectionPool8 = okHttpClient0.connectionPool;
        int int9 = connectionPool8.getHttpConnectionCount();
        int int10 = connectionPool8.getSpdyConnectionCount();
        int int11 = connectionPool8.getHttpConnectionCount();
        int int12 = connectionPool8.getConnectionCount();
        int int13 = connectionPool8.getHttpConnectionCount();
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNotNull(connectionPool8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
    }

    @Test
    public void test07402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07402");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.OkAuthenticator okAuthenticator12 = okHttpClient11.getAuthenticator();
        java.net.ProxySelector proxySelector13 = okHttpClient11.getProxySelector();
        java.net.ProxySelector proxySelector14 = null;
        okHttpClient11.proxySelector = proxySelector14;
        java.net.ProxySelector proxySelector16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient11.setProxySelector(proxySelector16);
        com.squareup.okhttp.ConnectionPool connectionPool20 = new com.squareup.okhttp.ConnectionPool(10, 1L);
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient17.setConnectionPool(connectionPool20);
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier23 = null;
        okHttpClient22.hostnameVerifier = hostnameVerifier23;
        java.net.ResponseCache responseCache25 = null;
        okHttpClient22.responseCache = responseCache25;
        java.util.List<java.lang.String> strList27 = okHttpClient22.transports;
        com.squareup.okhttp.ConnectionPool connectionPool28 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient22.connectionPool = connectionPool28;
        java.net.CookieHandler cookieHandler30 = okHttpClient22.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache31 = okHttpClient22.okResponseCache();
        java.net.CookieHandler cookieHandler32 = okHttpClient22.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient33 = new com.squareup.okhttp.OkHttpClient(okHttpClient22);
        java.net.Proxy proxy34 = java.net.Proxy.NO_PROXY;
        boolean boolean36 = proxy34.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type37 = proxy34.type();
        java.net.SocketAddress socketAddress38 = proxy34.address();
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient22.setProxy(proxy34);
        com.squareup.okhttp.OkHttpClient okHttpClient40 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier41 = null;
        okHttpClient40.hostnameVerifier = hostnameVerifier41;
        java.net.ResponseCache responseCache43 = null;
        okHttpClient40.responseCache = responseCache43;
        java.util.List<java.lang.String> strList45 = okHttpClient40.transports;
        com.squareup.okhttp.ConnectionPool connectionPool46 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient40.connectionPool = connectionPool46;
        com.squareup.okhttp.OkHttpClient okHttpClient48 = okHttpClient40.copyWithDefaults();
        java.net.ProxySelector proxySelector49 = okHttpClient48.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory50 = okHttpClient48.getSslSocketFactory();
        okHttpClient39.sslSocketFactory = sSLSocketFactory50;
        java.lang.String[] strArray52 = sSLSocketFactory50.getDefaultCipherSuites();
        java.lang.String[] strArray53 = sSLSocketFactory50.getSupportedCipherSuites();
        java.net.Socket socket54 = sSLSocketFactory50.createSocket();
        com.squareup.okhttp.OkHttpClient okHttpClient55 = okHttpClient21.setSSLSocketFactory(sSLSocketFactory50);
        java.lang.String[] strArray56 = sSLSocketFactory50.getSupportedCipherSuites();
        java.lang.String[] strArray57 = sSLSocketFactory50.getDefaultCipherSuites();
        java.net.InetAddress inetAddress58 = null;
        java.net.InetAddress inetAddress60 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket62 = sSLSocketFactory50.createSocket(inetAddress58, (int) ' ', inetAddress60, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.net.BindException; message: Permission denied (Bind failed)");
        } catch (java.net.BindException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(okAuthenticator12);
        org.junit.Assert.assertNull(proxySelector13);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNotNull(connectionPool28);
        org.junit.Assert.assertNull(cookieHandler30);
        org.junit.Assert.assertNull(okResponseCache31);
        org.junit.Assert.assertNull(cookieHandler32);
        org.junit.Assert.assertNotNull(proxy34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + type37 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type37.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress38);
        org.junit.Assert.assertNotNull(okHttpClient39);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNotNull(connectionPool46);
        org.junit.Assert.assertNotNull(okHttpClient48);
// flaky:         org.junit.Assert.assertNull(proxySelector49);
        org.junit.Assert.assertNotNull(sSLSocketFactory50);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(socket54);
        org.junit.Assert.assertEquals(socket54.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(okHttpClient55);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(strArray57);
    }

    @Test
    public void test07403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07403");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setProxySelector(proxySelector4);
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = null;
        okHttpClient6.hostnameVerifier = hostnameVerifier7;
        java.net.ResponseCache responseCache9 = null;
        okHttpClient6.responseCache = responseCache9;
        java.util.List<java.lang.String> strList11 = okHttpClient6.transports;
        com.squareup.okhttp.ConnectionPool connectionPool12 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient6.connectionPool = connectionPool12;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient6.copyWithDefaults();
        java.net.ProxySelector proxySelector15 = okHttpClient14.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory16 = okHttpClient14.getSslSocketFactory();
        okHttpClient0.sslSocketFactory = sSLSocketFactory16;
        java.net.InetAddress inetAddress20 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket22 = sSLSocketFactory16.createSocket("DIRECT", (int) '#', inetAddress20, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.net.BindException; message: Permission denied (Bind failed)");
        } catch (java.net.BindException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNotNull(okHttpClient14);
// flaky:         org.junit.Assert.assertNull(proxySelector15);
        org.junit.Assert.assertNotNull(sSLSocketFactory16);
    }

    @Test
    public void test07404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07404");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache1 = okHttpClient0.okResponseCache();
        java.net.ResponseCache responseCache2 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.setResponseCache(responseCache2);
        java.net.ProxySelector proxySelector4 = okHttpClient0.getProxySelector();
        boolean boolean5 = okHttpClient0.getFollowProtocolRedirects();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory6 = okHttpClient0.getSslSocketFactory();
        java.net.ProxySelector proxySelector7 = null;
        okHttpClient0.proxySelector = proxySelector7;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory9 = okHttpClient0.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient10 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient12 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier13 = null;
        okHttpClient12.hostnameVerifier = hostnameVerifier13;
        java.net.ResponseCache responseCache15 = null;
        okHttpClient12.responseCache = responseCache15;
        java.util.List<java.lang.String> strList17 = okHttpClient12.transports;
        com.squareup.okhttp.ConnectionPool connectionPool18 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient12.connectionPool = connectionPool18;
        java.net.CookieHandler cookieHandler20 = okHttpClient12.cookieHandler;
        java.net.ProxySelector proxySelector21 = null;
        okHttpClient12.proxySelector = proxySelector21;
        java.net.CookieHandler cookieHandler23 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient12.setCookieHandler(cookieHandler23);
        java.net.Proxy proxy25 = okHttpClient24.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier27 = null;
        okHttpClient26.hostnameVerifier = hostnameVerifier27;
        java.net.ResponseCache responseCache29 = null;
        okHttpClient26.responseCache = responseCache29;
        javax.net.ssl.HostnameVerifier hostnameVerifier31 = okHttpClient26.hostnameVerifier;
        java.net.Proxy proxy32 = okHttpClient26.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool35 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient26.connectionPool = connectionPool35;
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient26.copyWithDefaults();
        java.net.ResponseCache responseCache38 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient37.setResponseCache(responseCache38);
        java.net.CookieHandler cookieHandler40 = null;
        okHttpClient39.cookieHandler = cookieHandler40;
        com.squareup.okhttp.OkHttpClient okHttpClient42 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier43 = null;
        okHttpClient42.hostnameVerifier = hostnameVerifier43;
        java.net.ResponseCache responseCache45 = null;
        okHttpClient42.responseCache = responseCache45;
        java.util.List<java.lang.String> strList47 = okHttpClient42.transports;
        com.squareup.okhttp.ConnectionPool connectionPool48 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient42.connectionPool = connectionPool48;
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient42.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient51 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier52 = null;
        okHttpClient51.hostnameVerifier = hostnameVerifier52;
        java.net.ResponseCache responseCache54 = null;
        okHttpClient51.responseCache = responseCache54;
        java.util.List<java.lang.String> strList56 = okHttpClient51.transports;
        com.squareup.okhttp.ConnectionPool connectionPool57 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient51.connectionPool = connectionPool57;
        com.squareup.okhttp.OkHttpClient okHttpClient59 = okHttpClient51.copyWithDefaults();
        java.net.ProxySelector proxySelector60 = okHttpClient59.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory61 = okHttpClient59.getSslSocketFactory();
        okHttpClient42.sslSocketFactory = sSLSocketFactory61;
        java.net.Socket socket63 = sSLSocketFactory61.createSocket();
        java.net.Socket socket64 = sSLSocketFactory61.createSocket();
        okHttpClient39.sslSocketFactory = sSLSocketFactory61;
        java.lang.String[] strArray66 = sSLSocketFactory61.getDefaultCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient67 = okHttpClient24.setSSLSocketFactory(sSLSocketFactory61);
        okHttpClient0.sslSocketFactory = sSLSocketFactory61;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache69 = okHttpClient0.okResponseCache();
        org.junit.Assert.assertNull(okResponseCache1);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertNull(proxySelector4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(sSLSocketFactory6);
        org.junit.Assert.assertNull(sSLSocketFactory9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNotNull(connectionPool18);
        org.junit.Assert.assertNull(cookieHandler20);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNull(proxy25);
        org.junit.Assert.assertNull(hostnameVerifier31);
        org.junit.Assert.assertNull(proxy32);
        org.junit.Assert.assertNotNull(okHttpClient37);
        org.junit.Assert.assertNotNull(okHttpClient39);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNotNull(connectionPool48);
        org.junit.Assert.assertNotNull(okHttpClient50);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNotNull(connectionPool57);
        org.junit.Assert.assertNotNull(okHttpClient59);
// flaky:         org.junit.Assert.assertNull(proxySelector60);
        org.junit.Assert.assertNotNull(sSLSocketFactory61);
        org.junit.Assert.assertNotNull(socket63);
        org.junit.Assert.assertEquals(socket63.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(socket64);
        org.junit.Assert.assertEquals(socket64.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertNotNull(okHttpClient67);
        org.junit.Assert.assertNull(okResponseCache69);
    }

    @Test
    public void test07405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07405");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient0.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.copyWithDefaults();
        java.net.ResponseCache responseCache12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setResponseCache(responseCache12);
        com.squareup.okhttp.OkHttpClient okHttpClient14 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool15 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient14.connectionPool = connectionPool15;
        java.net.ResponseCache responseCache17 = null;
        okHttpClient14.responseCache = responseCache17;
        java.net.Proxy proxy19 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress20 = proxy19.address();
        java.net.SocketAddress socketAddress21 = proxy19.address();
        okHttpClient14.proxy = proxy19;
        com.squareup.okhttp.ConnectionPool connectionPool25 = new com.squareup.okhttp.ConnectionPool((-1), (long) '#');
        com.squareup.okhttp.Address address26 = null;
        com.squareup.okhttp.Connection connection27 = connectionPool25.get(address26);
        int int28 = connectionPool25.getSpdyConnectionCount();
        connectionPool25.evictAll();
        com.squareup.okhttp.OkHttpClient okHttpClient30 = okHttpClient14.setConnectionPool(connectionPool25);
        com.squareup.okhttp.OkHttpClient okHttpClient31 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier32 = null;
        okHttpClient31.hostnameVerifier = hostnameVerifier32;
        java.net.ProxySelector proxySelector34 = okHttpClient31.proxySelector;
        java.net.ProxySelector proxySelector35 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient31.setProxySelector(proxySelector35);
        com.squareup.okhttp.OkHttpClient okHttpClient37 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier38 = null;
        okHttpClient37.hostnameVerifier = hostnameVerifier38;
        java.net.ResponseCache responseCache40 = null;
        okHttpClient37.responseCache = responseCache40;
        java.util.List<java.lang.String> strList42 = okHttpClient37.transports;
        com.squareup.okhttp.ConnectionPool connectionPool43 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient37.connectionPool = connectionPool43;
        com.squareup.okhttp.OkHttpClient okHttpClient45 = okHttpClient37.copyWithDefaults();
        java.net.ProxySelector proxySelector46 = okHttpClient45.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory47 = okHttpClient45.getSslSocketFactory();
        okHttpClient31.sslSocketFactory = sSLSocketFactory47;
        okHttpClient14.sslSocketFactory = sSLSocketFactory47;
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient13.setSSLSocketFactory(sSLSocketFactory47);
        com.squareup.okhttp.OkHttpClient okHttpClient51 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool52 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient51.connectionPool = connectionPool52;
        com.squareup.okhttp.OkHttpClient okHttpClient54 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier55 = null;
        okHttpClient54.hostnameVerifier = hostnameVerifier55;
        java.net.ResponseCache responseCache57 = null;
        okHttpClient54.responseCache = responseCache57;
        java.util.List<java.lang.String> strList59 = okHttpClient54.transports;
        com.squareup.okhttp.ConnectionPool connectionPool60 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient54.connectionPool = connectionPool60;
        com.squareup.okhttp.OkHttpClient okHttpClient62 = okHttpClient51.setConnectionPool(connectionPool60);
        com.squareup.okhttp.ConnectionPool connectionPool63 = okHttpClient62.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator64 = okHttpClient62.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool67 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient62.connectionPool = connectionPool67;
        java.net.ResponseCache responseCache69 = okHttpClient62.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory70 = okHttpClient62.sslSocketFactory;
        java.net.Proxy proxy71 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress72 = proxy71.address();
        com.squareup.okhttp.OkHttpClient okHttpClient73 = okHttpClient62.setProxy(proxy71);
        com.squareup.okhttp.OkHttpClient okHttpClient74 = new com.squareup.okhttp.OkHttpClient(okHttpClient73);
        com.squareup.okhttp.OkHttpClient okHttpClient75 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier76 = null;
        okHttpClient75.hostnameVerifier = hostnameVerifier76;
        java.net.ResponseCache responseCache78 = null;
        okHttpClient75.responseCache = responseCache78;
        java.util.List<java.lang.String> strList80 = okHttpClient75.transports;
        com.squareup.okhttp.ConnectionPool connectionPool81 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient75.connectionPool = connectionPool81;
        com.squareup.okhttp.OkHttpClient okHttpClient83 = okHttpClient75.copyWithDefaults();
        java.net.ProxySelector proxySelector84 = okHttpClient83.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory85 = okHttpClient83.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient86 = okHttpClient73.setSSLSocketFactory(sSLSocketFactory85);
        java.lang.String[] strArray87 = sSLSocketFactory85.getSupportedCipherSuites();
        java.lang.String[] strArray88 = sSLSocketFactory85.getSupportedCipherSuites();
        java.lang.String[] strArray89 = sSLSocketFactory85.getSupportedCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient90 = okHttpClient13.setSSLSocketFactory(sSLSocketFactory85);
        java.lang.String[] strArray91 = sSLSocketFactory85.getDefaultCipherSuites();
        java.lang.String[] strArray92 = sSLSocketFactory85.getDefaultCipherSuites();
        java.lang.String[] strArray93 = sSLSocketFactory85.getSupportedCipherSuites();
        java.net.Socket socket94 = sSLSocketFactory85.createSocket();
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket97 = sSLSocketFactory85.createSocket("", (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.net.ConnectException; message: Connection refused (Connection refused)");
        } catch (java.net.ConnectException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNotNull(connectionPool15);
        org.junit.Assert.assertNotNull(proxy19);
        org.junit.Assert.assertNull(socketAddress20);
        org.junit.Assert.assertNull(socketAddress21);
        org.junit.Assert.assertNull(connection27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(okHttpClient30);
        org.junit.Assert.assertNull(proxySelector34);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNotNull(connectionPool43);
        org.junit.Assert.assertNotNull(okHttpClient45);
// flaky:         org.junit.Assert.assertNull(proxySelector46);
        org.junit.Assert.assertNotNull(sSLSocketFactory47);
        org.junit.Assert.assertNotNull(okHttpClient50);
        org.junit.Assert.assertNotNull(connectionPool52);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNotNull(connectionPool60);
        org.junit.Assert.assertNotNull(okHttpClient62);
        org.junit.Assert.assertNotNull(connectionPool63);
        org.junit.Assert.assertNull(okAuthenticator64);
        org.junit.Assert.assertNull(responseCache69);
        org.junit.Assert.assertNull(sSLSocketFactory70);
        org.junit.Assert.assertNotNull(proxy71);
        org.junit.Assert.assertNull(socketAddress72);
        org.junit.Assert.assertNotNull(okHttpClient73);
        org.junit.Assert.assertNull(strList80);
        org.junit.Assert.assertNotNull(connectionPool81);
        org.junit.Assert.assertNotNull(okHttpClient83);
// flaky:         org.junit.Assert.assertNull(proxySelector84);
        org.junit.Assert.assertNotNull(sSLSocketFactory85);
        org.junit.Assert.assertNotNull(okHttpClient86);
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertNotNull(strArray88);
        org.junit.Assert.assertNotNull(strArray89);
        org.junit.Assert.assertNotNull(okHttpClient90);
        org.junit.Assert.assertNotNull(strArray91);
        org.junit.Assert.assertNotNull(strArray92);
        org.junit.Assert.assertNotNull(strArray93);
        org.junit.Assert.assertNotNull(socket94);
        org.junit.Assert.assertEquals(socket94.toString(), "Socket[unconnected]");
    }

    @Test
    public void test07406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07406");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache8 = okHttpClient7.okResponseCache();
        java.net.ResponseCache responseCache9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient7.setResponseCache(responseCache9);
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        okHttpClient7.transports = strList13;
        okHttpClient0.transports = strList13;
        javax.net.ssl.HostnameVerifier hostnameVerifier17 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier17;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory20 = okHttpClient0.sslSocketFactory;
        java.util.List<java.lang.String> strList21 = okHttpClient0.transports;
        com.squareup.okhttp.OkHttpClient.DEFAULT_TRANSPORTS = strList21;
        com.squareup.okhttp.OkHttpClient.DEFAULT_TRANSPORTS = strList21;
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNull(okResponseCache8);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(sSLSocketFactory20);
        org.junit.Assert.assertNotNull(strList21);
    }

    @Test
    public void test07407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07407");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient0.copyWithDefaults();
        java.net.ProxySelector proxySelector9 = okHttpClient8.proxySelector;
        com.squareup.okhttp.ConnectionPool connectionPool10 = okHttpClient8.connectionPool;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient(okHttpClient8);
        java.net.CookieHandler cookieHandler12 = okHttpClient8.cookieHandler;
        java.net.ResponseCache responseCache13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient8.setResponseCache(responseCache13);
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier16 = null;
        okHttpClient15.hostnameVerifier = hostnameVerifier16;
        java.net.ResponseCache responseCache18 = null;
        okHttpClient15.responseCache = responseCache18;
        javax.net.ssl.HostnameVerifier hostnameVerifier20 = okHttpClient15.hostnameVerifier;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory21 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient15.setSSLSocketFactory(sSLSocketFactory21);
        com.squareup.okhttp.ConnectionPool connectionPool23 = okHttpClient22.getConnectionPool();
        java.net.ResponseCache responseCache24 = null;
        okHttpClient22.responseCache = responseCache24;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = new com.squareup.okhttp.OkHttpClient(okHttpClient22);
        com.squareup.okhttp.OkHttpClient okHttpClient27 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache28 = okHttpClient27.okResponseCache();
        java.net.ResponseCache responseCache29 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient30 = okHttpClient27.setResponseCache(responseCache29);
        com.squareup.okhttp.OkHttpClient okHttpClient31 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache32 = okHttpClient31.okResponseCache();
        java.net.ResponseCache responseCache33 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient31.setResponseCache(responseCache33);
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList37 = new java.util.ArrayList<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        okHttpClient31.transports = strList37;
        okHttpClient27.transports = strList37;
        com.squareup.okhttp.OkHttpClient okHttpClient41 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier42 = null;
        okHttpClient41.hostnameVerifier = hostnameVerifier42;
        java.net.ResponseCache responseCache44 = null;
        okHttpClient41.responseCache = responseCache44;
        java.util.List<java.lang.String> strList46 = okHttpClient41.transports;
        com.squareup.okhttp.ConnectionPool connectionPool47 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient41.connectionPool = connectionPool47;
        java.net.CookieHandler cookieHandler49 = okHttpClient41.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache50 = okHttpClient41.okResponseCache();
        java.net.CookieHandler cookieHandler51 = okHttpClient41.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient52 = new com.squareup.okhttp.OkHttpClient(okHttpClient41);
        java.net.ResponseCache responseCache53 = okHttpClient41.responseCache;
        java.net.CookieHandler cookieHandler54 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient55 = okHttpClient41.setCookieHandler(cookieHandler54);
        java.net.Proxy proxy56 = java.net.Proxy.NO_PROXY;
        boolean boolean58 = proxy56.equals((java.lang.Object) 1L);
        com.squareup.okhttp.OkHttpClient okHttpClient59 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache60 = okHttpClient59.okResponseCache();
        java.net.ResponseCache responseCache61 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient62 = okHttpClient59.setResponseCache(responseCache61);
        java.lang.String[] strArray64 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList65 = new java.util.ArrayList<java.lang.String>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList65, strArray64);
        okHttpClient59.transports = strList65;
        boolean boolean68 = proxy56.equals((java.lang.Object) strList65);
        com.squareup.okhttp.OkHttpClient.DEFAULT_TRANSPORTS = strList65;
        okHttpClient55.transports = strList65;
        okHttpClient27.transports = strList65;
        com.squareup.okhttp.OkHttpClient okHttpClient72 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier73 = null;
        okHttpClient72.hostnameVerifier = hostnameVerifier73;
        java.net.ResponseCache responseCache75 = null;
        okHttpClient72.responseCache = responseCache75;
        java.util.List<java.lang.String> strList77 = okHttpClient72.transports;
        com.squareup.okhttp.ConnectionPool connectionPool78 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient72.connectionPool = connectionPool78;
        java.net.CookieHandler cookieHandler80 = okHttpClient72.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache81 = okHttpClient72.okResponseCache();
        java.net.CookieHandler cookieHandler82 = okHttpClient72.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient83 = new com.squareup.okhttp.OkHttpClient(okHttpClient72);
        javax.net.ssl.HostnameVerifier hostnameVerifier84 = okHttpClient83.hostnameVerifier;
        java.util.List<java.lang.String> strList85 = okHttpClient83.transports;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory86 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient87 = okHttpClient83.setSSLSocketFactory(sSLSocketFactory86);
        com.squareup.okhttp.OkHttpClient okHttpClient88 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier89 = null;
        okHttpClient88.hostnameVerifier = hostnameVerifier89;
        java.util.Set<com.squareup.okhttp.Route> routeSet91 = okHttpClient88.failedRoutes;
        okHttpClient87.failedRoutes = routeSet91;
        okHttpClient27.failedRoutes = routeSet91;
        okHttpClient26.failedRoutes = routeSet91;
        okHttpClient14.failedRoutes = routeSet91;
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNotNull(okHttpClient8);
// flaky:         org.junit.Assert.assertNull(proxySelector9);
        org.junit.Assert.assertNotNull(connectionPool10);
        org.junit.Assert.assertNull(cookieHandler12);
        org.junit.Assert.assertNotNull(okHttpClient14);
        org.junit.Assert.assertNull(hostnameVerifier20);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNull(connectionPool23);
        org.junit.Assert.assertNull(okResponseCache28);
        org.junit.Assert.assertNotNull(okHttpClient30);
        org.junit.Assert.assertNull(okResponseCache32);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNotNull(connectionPool47);
        org.junit.Assert.assertNull(cookieHandler49);
        org.junit.Assert.assertNull(okResponseCache50);
        org.junit.Assert.assertNull(cookieHandler51);
        org.junit.Assert.assertNull(responseCache53);
        org.junit.Assert.assertNotNull(okHttpClient55);
        org.junit.Assert.assertNotNull(proxy56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(okResponseCache60);
        org.junit.Assert.assertNotNull(okHttpClient62);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(strList77);
        org.junit.Assert.assertNotNull(connectionPool78);
        org.junit.Assert.assertNull(cookieHandler80);
        org.junit.Assert.assertNull(okResponseCache81);
        org.junit.Assert.assertNull(cookieHandler82);
        org.junit.Assert.assertNull(hostnameVerifier84);
        org.junit.Assert.assertNull(strList85);
        org.junit.Assert.assertNotNull(okHttpClient87);
        org.junit.Assert.assertNotNull(routeSet91);
    }

    @Test
    public void test07408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07408");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache8 = okHttpClient7.okResponseCache();
        java.net.ResponseCache responseCache9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient7.setResponseCache(responseCache9);
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        okHttpClient7.transports = strList13;
        okHttpClient0.transports = strList13;
        javax.net.ssl.HostnameVerifier hostnameVerifier17 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier17;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory20 = okHttpClient0.sslSocketFactory;
        java.util.List<java.lang.String> strList21 = okHttpClient0.transports;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache22 = okHttpClient0.okResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator23 = okHttpClient0.getAuthenticator();
        com.squareup.okhttp.OkHttpClient okHttpClient24 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier25 = null;
        okHttpClient24.hostnameVerifier = hostnameVerifier25;
        java.net.ProxySelector proxySelector27 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient24.setProxySelector(proxySelector27);
        java.net.ResponseCache responseCache29 = null;
        okHttpClient28.responseCache = responseCache29;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory31 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient28.setSSLSocketFactory(sSLSocketFactory31);
        java.net.ProxySelector proxySelector33 = null;
        okHttpClient28.proxySelector = proxySelector33;
        javax.net.ssl.HostnameVerifier hostnameVerifier35 = okHttpClient28.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient28.copyWithDefaults();
        java.net.ResponseCache responseCache37 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient28.setResponseCache(responseCache37);
        com.squareup.okhttp.ConnectionPool connectionPool41 = new com.squareup.okhttp.ConnectionPool((int) (short) 1, (long) (short) 100);
        int int42 = connectionPool41.getHttpConnectionCount();
        okHttpClient38.connectionPool = connectionPool41;
        com.squareup.okhttp.OkHttpClient okHttpClient44 = okHttpClient0.setConnectionPool(connectionPool41);
        int int45 = connectionPool41.getConnectionCount();
        int int46 = connectionPool41.getConnectionCount();
        com.squareup.okhttp.Connection connection47 = null;
        // The following exception was thrown during execution in test generation
        try {
            connectionPool41.maybeShare(connection47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNull(okResponseCache8);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(sSLSocketFactory20);
        org.junit.Assert.assertNotNull(strList21);
        org.junit.Assert.assertNull(okResponseCache22);
        org.junit.Assert.assertNull(okAuthenticator23);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertNull(hostnameVerifier35);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(okHttpClient44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
    }

    @Test
    public void test07409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07409");
        java.net.Proxy proxy0 = java.net.Proxy.NO_PROXY;
        boolean boolean2 = proxy0.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type3 = proxy0.type();
        java.lang.String str4 = proxy0.toString();
        com.squareup.okhttp.OkHttpClient okHttpClient5 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier6 = null;
        okHttpClient5.hostnameVerifier = hostnameVerifier6;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory8 = okHttpClient5.getSslSocketFactory();
        boolean boolean9 = proxy0.equals((java.lang.Object) okHttpClient5);
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient5.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient5.copyWithDefaults();
        java.net.ProxySelector proxySelector12 = okHttpClient5.proxySelector;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = null;
        okHttpClient13.hostnameVerifier = hostnameVerifier14;
        java.net.ProxySelector proxySelector16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient13.setProxySelector(proxySelector16);
        java.net.CookieHandler cookieHandler18 = okHttpClient13.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient19 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier20 = null;
        okHttpClient19.hostnameVerifier = hostnameVerifier20;
        java.net.ResponseCache responseCache22 = null;
        okHttpClient19.responseCache = responseCache22;
        java.util.List<java.lang.String> strList24 = okHttpClient19.transports;
        com.squareup.okhttp.ConnectionPool connectionPool25 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient19.connectionPool = connectionPool25;
        java.net.Proxy proxy27 = null;
        okHttpClient19.proxy = proxy27;
        java.util.Set<com.squareup.okhttp.Route> routeSet29 = okHttpClient19.failedRoutes;
        okHttpClient13.failedRoutes = routeSet29;
        java.net.ProxySelector proxySelector31 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient13.setProxySelector(proxySelector31);
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient13.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient34 = new com.squareup.okhttp.OkHttpClient(okHttpClient13);
        com.squareup.okhttp.ConnectionPool connectionPool35 = null;
        okHttpClient34.connectionPool = connectionPool35;
        java.net.CookieHandler cookieHandler37 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient34.setCookieHandler(cookieHandler37);
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient34.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient40 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier41 = null;
        okHttpClient40.hostnameVerifier = hostnameVerifier41;
        java.net.ResponseCache responseCache43 = null;
        okHttpClient40.responseCache = responseCache43;
        javax.net.ssl.HostnameVerifier hostnameVerifier45 = okHttpClient40.hostnameVerifier;
        java.net.Proxy proxy46 = okHttpClient40.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool49 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient40.connectionPool = connectionPool49;
        com.squareup.okhttp.OkHttpClient okHttpClient51 = okHttpClient40.copyWithDefaults();
        java.net.ResponseCache responseCache52 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient53 = okHttpClient51.setResponseCache(responseCache52);
        javax.net.ssl.HostnameVerifier hostnameVerifier54 = okHttpClient53.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient55 = okHttpClient53.copyWithDefaults();
        java.util.List<java.lang.String> strList56 = okHttpClient53.getTransports();
        okHttpClient39.transports = strList56;
        okHttpClient5.transports = strList56;
        boolean boolean59 = okHttpClient5.getFollowProtocolRedirects();
        org.junit.Assert.assertNotNull(proxy0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + type3 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type3.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "DIRECT" + "'", str4, "DIRECT");
        org.junit.Assert.assertNull(sSLSocketFactory8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(proxySelector12);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNull(cookieHandler18);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNotNull(connectionPool25);
        org.junit.Assert.assertNotNull(routeSet29);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertNotNull(okHttpClient33);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNotNull(okHttpClient39);
        org.junit.Assert.assertNull(hostnameVerifier45);
        org.junit.Assert.assertNull(proxy46);
        org.junit.Assert.assertNotNull(okHttpClient51);
        org.junit.Assert.assertNotNull(okHttpClient53);
        org.junit.Assert.assertNotNull(hostnameVerifier54);
        org.junit.Assert.assertNotNull(okHttpClient55);
        org.junit.Assert.assertNotNull(strList56);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
    }

    @Test
    public void test07410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07410");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.Proxy proxy8 = null;
        okHttpClient0.proxy = proxy8;
        boolean boolean10 = okHttpClient0.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        java.net.ProxySelector proxySelector12 = okHttpClient11.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier13 = okHttpClient11.hostnameVerifier;
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = okHttpClient11.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool16 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient15.connectionPool = connectionPool16;
        com.squareup.okhttp.OkAuthenticator okAuthenticator18 = null;
        okHttpClient15.authenticator = okAuthenticator18;
        java.net.CookieHandler cookieHandler20 = null;
        okHttpClient15.cookieHandler = cookieHandler20;
        java.net.Proxy proxy22 = java.net.Proxy.NO_PROXY;
        boolean boolean24 = proxy22.equals((java.lang.Object) 1L);
        com.squareup.okhttp.OkHttpClient okHttpClient25 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache26 = okHttpClient25.okResponseCache();
        java.net.ResponseCache responseCache27 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient25.setResponseCache(responseCache27);
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        okHttpClient25.transports = strList31;
        boolean boolean34 = proxy22.equals((java.lang.Object) strList31);
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient15.setProxy(proxy22);
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient11.setProxy(proxy22);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory37 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient11.setSSLSocketFactory(sSLSocketFactory37);
        boolean boolean39 = okHttpClient38.getFollowProtocolRedirects();
        java.net.CookieHandler cookieHandler40 = okHttpClient38.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache41 = okHttpClient38.okResponseCache();
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(proxySelector12);
        org.junit.Assert.assertNull(hostnameVerifier13);
        org.junit.Assert.assertNull(hostnameVerifier14);
        org.junit.Assert.assertNotNull(connectionPool16);
        org.junit.Assert.assertNotNull(proxy22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(okResponseCache26);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(cookieHandler40);
        org.junit.Assert.assertNull(okResponseCache41);
    }

    @Test
    public void test07411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07411");
        java.net.Proxy proxy0 = java.net.Proxy.NO_PROXY;
        boolean boolean2 = proxy0.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type3 = proxy0.type();
        java.net.SocketAddress socketAddress4 = proxy0.address();
        com.squareup.okhttp.OkHttpClient okHttpClient5 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier6 = null;
        okHttpClient5.hostnameVerifier = hostnameVerifier6;
        java.net.ResponseCache responseCache8 = null;
        okHttpClient5.responseCache = responseCache8;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache10 = okHttpClient5.okResponseCache();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient5.setSSLSocketFactory(sSLSocketFactory11);
        boolean boolean13 = proxy0.equals((java.lang.Object) okHttpClient5);
        com.squareup.okhttp.OkHttpClient okHttpClient14 = new com.squareup.okhttp.OkHttpClient(okHttpClient5);
        java.net.Proxy proxy15 = okHttpClient5.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool16 = okHttpClient5.getConnectionPool();
        org.junit.Assert.assertNotNull(proxy0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + type3 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type3.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress4);
        org.junit.Assert.assertNull(okResponseCache10);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(proxy15);
        org.junit.Assert.assertNull(connectionPool16);
    }

    @Test
    public void test07412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07412");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.OkAuthenticator okAuthenticator12 = okHttpClient11.getAuthenticator();
        java.net.ProxySelector proxySelector13 = okHttpClient11.getProxySelector();
        java.net.ResponseCache responseCache14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient11.setResponseCache(responseCache14);
        javax.net.ssl.HostnameVerifier hostnameVerifier16 = okHttpClient15.hostnameVerifier;
        java.net.ProxySelector proxySelector17 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient15.setProxySelector(proxySelector17);
        java.net.CookieHandler cookieHandler19 = null;
        okHttpClient15.cookieHandler = cookieHandler19;
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(okAuthenticator12);
        org.junit.Assert.assertNull(proxySelector13);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNull(hostnameVerifier16);
        org.junit.Assert.assertNotNull(okHttpClient18);
    }

    @Test
    public void test07413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07413");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.Proxy proxy8 = null;
        okHttpClient0.proxy = proxy8;
        boolean boolean10 = okHttpClient0.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient0.setFollowProtocolRedirects(true);
        javax.net.ssl.HostnameVerifier hostnameVerifier13 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier13;
        javax.net.ssl.HostnameVerifier hostnameVerifier15 = okHttpClient0.getHostnameVerifier();
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertNull(hostnameVerifier15);
    }

    @Test
    public void test07414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07414");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.ConnectionPool connectionPool12 = okHttpClient11.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator13 = okHttpClient11.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool16 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient11.connectionPool = connectionPool16;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient11.setSSLSocketFactory(sSLSocketFactory18);
        javax.net.ssl.HostnameVerifier hostnameVerifier20 = okHttpClient11.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool22 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient21.connectionPool = connectionPool22;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier25 = null;
        okHttpClient24.hostnameVerifier = hostnameVerifier25;
        java.net.ResponseCache responseCache27 = null;
        okHttpClient24.responseCache = responseCache27;
        java.util.List<java.lang.String> strList29 = okHttpClient24.transports;
        com.squareup.okhttp.ConnectionPool connectionPool30 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient24.connectionPool = connectionPool30;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient21.setConnectionPool(connectionPool30);
        com.squareup.okhttp.ConnectionPool connectionPool33 = okHttpClient32.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator34 = okHttpClient32.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool37 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient32.connectionPool = connectionPool37;
        java.net.ResponseCache responseCache39 = okHttpClient32.responseCache;
        com.squareup.okhttp.ConnectionPool connectionPool42 = new com.squareup.okhttp.ConnectionPool((int) (byte) 0, 10L);
        okHttpClient32.connectionPool = connectionPool42;
        com.squareup.okhttp.ConnectionPool connectionPool46 = new com.squareup.okhttp.ConnectionPool((int) (byte) 10, 0L);
        com.squareup.okhttp.OkHttpClient okHttpClient47 = okHttpClient32.setConnectionPool(connectionPool46);
        com.squareup.okhttp.OkHttpClient okHttpClient48 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier49 = null;
        okHttpClient48.hostnameVerifier = hostnameVerifier49;
        java.net.ProxySelector proxySelector51 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient52 = okHttpClient48.setProxySelector(proxySelector51);
        java.net.ResponseCache responseCache53 = null;
        okHttpClient52.responseCache = responseCache53;
        com.squareup.okhttp.OkHttpClient okHttpClient55 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier56 = null;
        okHttpClient55.hostnameVerifier = hostnameVerifier56;
        java.net.ResponseCache responseCache58 = null;
        okHttpClient55.responseCache = responseCache58;
        java.util.List<java.lang.String> strList60 = okHttpClient55.transports;
        com.squareup.okhttp.ConnectionPool connectionPool61 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient55.connectionPool = connectionPool61;
        java.net.CookieHandler cookieHandler63 = okHttpClient55.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache64 = okHttpClient55.okResponseCache();
        java.net.CookieHandler cookieHandler65 = okHttpClient55.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient66 = new com.squareup.okhttp.OkHttpClient(okHttpClient55);
        java.net.Proxy proxy67 = java.net.Proxy.NO_PROXY;
        boolean boolean69 = proxy67.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type70 = proxy67.type();
        java.net.SocketAddress socketAddress71 = proxy67.address();
        com.squareup.okhttp.OkHttpClient okHttpClient72 = okHttpClient55.setProxy(proxy67);
        com.squareup.okhttp.OkHttpClient okHttpClient73 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier74 = null;
        okHttpClient73.hostnameVerifier = hostnameVerifier74;
        java.net.ResponseCache responseCache76 = null;
        okHttpClient73.responseCache = responseCache76;
        java.util.List<java.lang.String> strList78 = okHttpClient73.transports;
        com.squareup.okhttp.ConnectionPool connectionPool79 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient73.connectionPool = connectionPool79;
        com.squareup.okhttp.OkHttpClient okHttpClient81 = okHttpClient73.copyWithDefaults();
        java.net.ProxySelector proxySelector82 = okHttpClient81.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory83 = okHttpClient81.getSslSocketFactory();
        okHttpClient72.sslSocketFactory = sSLSocketFactory83;
        java.lang.String[] strArray85 = sSLSocketFactory83.getDefaultCipherSuites();
        java.lang.String[] strArray86 = sSLSocketFactory83.getSupportedCipherSuites();
        java.net.Socket socket87 = sSLSocketFactory83.createSocket();
        okHttpClient52.sslSocketFactory = sSLSocketFactory83;
        okHttpClient32.sslSocketFactory = sSLSocketFactory83;
        okHttpClient11.sslSocketFactory = sSLSocketFactory83;
        java.lang.String[] strArray91 = sSLSocketFactory83.getSupportedCipherSuites();
        java.lang.String[] strArray92 = sSLSocketFactory83.getDefaultCipherSuites();
        java.net.Socket socket93 = sSLSocketFactory83.createSocket();
        java.net.InetAddress inetAddress96 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket98 = sSLSocketFactory83.createSocket("", (int) (short) 10, inetAddress96, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.net.BindException; message: Permission denied (Bind failed)");
        } catch (java.net.BindException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNull(okAuthenticator13);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNull(hostnameVerifier20);
        org.junit.Assert.assertNotNull(connectionPool22);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(connectionPool30);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertNotNull(connectionPool33);
        org.junit.Assert.assertNull(okAuthenticator34);
        org.junit.Assert.assertNull(responseCache39);
        org.junit.Assert.assertNotNull(okHttpClient47);
        org.junit.Assert.assertNotNull(okHttpClient52);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNotNull(connectionPool61);
        org.junit.Assert.assertNull(cookieHandler63);
        org.junit.Assert.assertNull(okResponseCache64);
        org.junit.Assert.assertNull(cookieHandler65);
        org.junit.Assert.assertNotNull(proxy67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + type70 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type70.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress71);
        org.junit.Assert.assertNotNull(okHttpClient72);
        org.junit.Assert.assertNull(strList78);
        org.junit.Assert.assertNotNull(connectionPool79);
        org.junit.Assert.assertNotNull(okHttpClient81);
// flaky:         org.junit.Assert.assertNull(proxySelector82);
        org.junit.Assert.assertNotNull(sSLSocketFactory83);
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertNotNull(socket87);
        org.junit.Assert.assertEquals(socket87.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(strArray91);
        org.junit.Assert.assertNotNull(strArray92);
        org.junit.Assert.assertNotNull(socket93);
        org.junit.Assert.assertEquals(socket93.toString(), "Socket[unconnected]");
    }

    @Test
    public void test07415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07415");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache8 = okHttpClient7.okResponseCache();
        java.net.ResponseCache responseCache9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient7.setResponseCache(responseCache9);
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        okHttpClient7.transports = strList13;
        okHttpClient0.transports = strList13;
        javax.net.ssl.HostnameVerifier hostnameVerifier17 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier17;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        com.squareup.okhttp.OkHttpClient okHttpClient20 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier21 = null;
        okHttpClient20.hostnameVerifier = hostnameVerifier21;
        java.net.ResponseCache responseCache23 = null;
        okHttpClient20.responseCache = responseCache23;
        javax.net.ssl.HostnameVerifier hostnameVerifier25 = okHttpClient20.hostnameVerifier;
        java.net.Proxy proxy26 = okHttpClient20.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool29 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient20.connectionPool = connectionPool29;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient20.copyWithDefaults();
        java.net.ResponseCache responseCache32 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient31.setResponseCache(responseCache32);
        java.net.CookieHandler cookieHandler34 = null;
        okHttpClient33.cookieHandler = cookieHandler34;
        com.squareup.okhttp.OkHttpClient okHttpClient36 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier37 = null;
        okHttpClient36.hostnameVerifier = hostnameVerifier37;
        java.net.ResponseCache responseCache39 = null;
        okHttpClient36.responseCache = responseCache39;
        java.util.List<java.lang.String> strList41 = okHttpClient36.transports;
        com.squareup.okhttp.ConnectionPool connectionPool42 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient36.connectionPool = connectionPool42;
        com.squareup.okhttp.OkHttpClient okHttpClient44 = okHttpClient36.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient45 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier46 = null;
        okHttpClient45.hostnameVerifier = hostnameVerifier46;
        java.net.ResponseCache responseCache48 = null;
        okHttpClient45.responseCache = responseCache48;
        java.util.List<java.lang.String> strList50 = okHttpClient45.transports;
        com.squareup.okhttp.ConnectionPool connectionPool51 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient45.connectionPool = connectionPool51;
        com.squareup.okhttp.OkHttpClient okHttpClient53 = okHttpClient45.copyWithDefaults();
        java.net.ProxySelector proxySelector54 = okHttpClient53.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory55 = okHttpClient53.getSslSocketFactory();
        okHttpClient36.sslSocketFactory = sSLSocketFactory55;
        java.net.Socket socket57 = sSLSocketFactory55.createSocket();
        java.net.Socket socket58 = sSLSocketFactory55.createSocket();
        okHttpClient33.sslSocketFactory = sSLSocketFactory55;
        com.squareup.okhttp.OkHttpClient okHttpClient60 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory55);
        java.lang.String[] strArray61 = sSLSocketFactory55.getSupportedCipherSuites();
        java.lang.String[] strArray62 = sSLSocketFactory55.getSupportedCipherSuites();
        java.net.InetAddress inetAddress63 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket65 = sSLSocketFactory55.createSocket(inetAddress63, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: port out of range:-1");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNull(okResponseCache8);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(hostnameVerifier25);
        org.junit.Assert.assertNull(proxy26);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNotNull(okHttpClient33);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(connectionPool42);
        org.junit.Assert.assertNotNull(okHttpClient44);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNotNull(connectionPool51);
        org.junit.Assert.assertNotNull(okHttpClient53);
// flaky:         org.junit.Assert.assertNull(proxySelector54);
        org.junit.Assert.assertNotNull(sSLSocketFactory55);
        org.junit.Assert.assertNotNull(socket57);
        org.junit.Assert.assertEquals(socket57.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(socket58);
        org.junit.Assert.assertEquals(socket58.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(okHttpClient60);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strArray62);
    }

    @Test
    public void test07416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07416");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        java.net.Proxy proxy6 = java.net.Proxy.NO_PROXY;
        boolean boolean8 = proxy6.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type9 = proxy6.type();
        java.net.SocketAddress socketAddress10 = proxy6.address();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setProxy(proxy6);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setSSLSocketFactory(sSLSocketFactory12);
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = okHttpClient11.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool16 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient15.connectionPool = connectionPool16;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier19 = null;
        okHttpClient18.hostnameVerifier = hostnameVerifier19;
        java.net.ResponseCache responseCache21 = null;
        okHttpClient18.responseCache = responseCache21;
        java.util.List<java.lang.String> strList23 = okHttpClient18.transports;
        com.squareup.okhttp.ConnectionPool connectionPool24 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient18.connectionPool = connectionPool24;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient15.setConnectionPool(connectionPool24);
        com.squareup.okhttp.ConnectionPool connectionPool27 = okHttpClient15.connectionPool;
        int int28 = connectionPool27.getHttpConnectionCount();
        int int29 = connectionPool27.getHttpConnectionCount();
        okHttpClient11.connectionPool = connectionPool27;
        com.squareup.okhttp.ConnectionPool connectionPool31 = okHttpClient11.getConnectionPool();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory32 = okHttpClient11.sslSocketFactory;
        java.util.Set<com.squareup.okhttp.Route> routeSet33 = null;
        okHttpClient11.failedRoutes = routeSet33;
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(proxy6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + type9 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type9.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress10);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNull(hostnameVerifier14);
        org.junit.Assert.assertNotNull(connectionPool16);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNotNull(connectionPool24);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNotNull(connectionPool27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(connectionPool31);
        org.junit.Assert.assertNull(sSLSocketFactory32);
    }

    @Test
    public void test07417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07417");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.CookieHandler cookieHandler8 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache9 = okHttpClient0.okResponseCache();
        java.net.CookieHandler cookieHandler10 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        java.net.Proxy proxy12 = java.net.Proxy.NO_PROXY;
        boolean boolean14 = proxy12.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type15 = proxy12.type();
        java.net.SocketAddress socketAddress16 = proxy12.address();
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient0.setProxy(proxy12);
        boolean boolean18 = okHttpClient17.followProtocolRedirects;
        java.net.ProxySelector proxySelector19 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient17.setProxySelector(proxySelector19);
        com.squareup.okhttp.OkHttpClient okHttpClient21 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool22 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient21.connectionPool = connectionPool22;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier25 = null;
        okHttpClient24.hostnameVerifier = hostnameVerifier25;
        java.net.ResponseCache responseCache27 = null;
        okHttpClient24.responseCache = responseCache27;
        java.util.List<java.lang.String> strList29 = okHttpClient24.transports;
        com.squareup.okhttp.ConnectionPool connectionPool30 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient24.connectionPool = connectionPool30;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient21.setConnectionPool(connectionPool30);
        com.squareup.okhttp.OkAuthenticator okAuthenticator33 = okHttpClient32.getAuthenticator();
        java.net.ProxySelector proxySelector34 = okHttpClient32.getProxySelector();
        java.net.ProxySelector proxySelector35 = null;
        okHttpClient32.proxySelector = proxySelector35;
        java.net.ProxySelector proxySelector37 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient32.setProxySelector(proxySelector37);
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient38.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient40 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier41 = null;
        okHttpClient40.hostnameVerifier = hostnameVerifier41;
        boolean boolean43 = okHttpClient40.getFollowProtocolRedirects();
        java.net.CookieHandler cookieHandler44 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient45 = okHttpClient40.setCookieHandler(cookieHandler44);
        com.squareup.okhttp.OkHttpClient okHttpClient46 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier47 = null;
        okHttpClient46.hostnameVerifier = hostnameVerifier47;
        java.net.ResponseCache responseCache49 = null;
        okHttpClient46.responseCache = responseCache49;
        java.util.List<java.lang.String> strList51 = okHttpClient46.transports;
        com.squareup.okhttp.ConnectionPool connectionPool52 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient46.connectionPool = connectionPool52;
        com.squareup.okhttp.Address address54 = null;
        com.squareup.okhttp.Connection connection55 = connectionPool52.get(address54);
        com.squareup.okhttp.OkHttpClient okHttpClient56 = okHttpClient45.setConnectionPool(connectionPool52);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory57 = okHttpClient45.sslSocketFactory;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory58 = okHttpClient45.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient59 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier60 = null;
        okHttpClient59.hostnameVerifier = hostnameVerifier60;
        java.net.ResponseCache responseCache62 = null;
        okHttpClient59.responseCache = responseCache62;
        javax.net.ssl.HostnameVerifier hostnameVerifier64 = okHttpClient59.hostnameVerifier;
        java.net.Proxy proxy65 = okHttpClient59.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool68 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient59.connectionPool = connectionPool68;
        com.squareup.okhttp.OkHttpClient okHttpClient70 = okHttpClient59.copyWithDefaults();
        java.net.Proxy proxy71 = okHttpClient70.getProxy();
        java.net.CookieHandler cookieHandler72 = null;
        okHttpClient70.cookieHandler = cookieHandler72;
        com.squareup.okhttp.OkAuthenticator okAuthenticator74 = okHttpClient70.getAuthenticator();
        com.squareup.okhttp.OkHttpClient okHttpClient75 = okHttpClient45.setAuthenticator(okAuthenticator74);
        okHttpClient39.authenticator = okAuthenticator74;
        okHttpClient17.authenticator = okAuthenticator74;
        java.net.ResponseCache responseCache78 = okHttpClient17.getResponseCache();
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNull(cookieHandler8);
        org.junit.Assert.assertNull(okResponseCache9);
        org.junit.Assert.assertNull(cookieHandler10);
        org.junit.Assert.assertNotNull(proxy12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + type15 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type15.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress16);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNotNull(connectionPool22);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(connectionPool30);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertNull(okAuthenticator33);
        org.junit.Assert.assertNull(proxySelector34);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNotNull(okHttpClient39);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(okHttpClient45);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNotNull(connectionPool52);
        org.junit.Assert.assertNull(connection55);
        org.junit.Assert.assertNotNull(okHttpClient56);
        org.junit.Assert.assertNull(sSLSocketFactory57);
        org.junit.Assert.assertNull(sSLSocketFactory58);
        org.junit.Assert.assertNull(hostnameVerifier64);
        org.junit.Assert.assertNull(proxy65);
        org.junit.Assert.assertNotNull(okHttpClient70);
        org.junit.Assert.assertNull(proxy71);
        org.junit.Assert.assertNotNull(okAuthenticator74);
        org.junit.Assert.assertNotNull(okHttpClient75);
        org.junit.Assert.assertNull(responseCache78);
    }

    @Test
    public void test07418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07418");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        java.net.ResponseCache responseCache12 = okHttpClient0.responseCache;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient14 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier15 = null;
        okHttpClient14.hostnameVerifier = hostnameVerifier15;
        java.net.ResponseCache responseCache17 = null;
        okHttpClient14.responseCache = responseCache17;
        java.util.List<java.lang.String> strList19 = okHttpClient14.transports;
        com.squareup.okhttp.ConnectionPool connectionPool20 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient14.connectionPool = connectionPool20;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient14.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient23 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier24 = null;
        okHttpClient23.hostnameVerifier = hostnameVerifier24;
        java.net.ResponseCache responseCache26 = null;
        okHttpClient23.responseCache = responseCache26;
        java.util.List<java.lang.String> strList28 = okHttpClient23.transports;
        com.squareup.okhttp.ConnectionPool connectionPool29 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient23.connectionPool = connectionPool29;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient23.copyWithDefaults();
        java.net.ProxySelector proxySelector32 = okHttpClient31.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory33 = okHttpClient31.getSslSocketFactory();
        okHttpClient14.sslSocketFactory = sSLSocketFactory33;
        okHttpClient13.sslSocketFactory = sSLSocketFactory33;
        java.lang.String[] strArray36 = sSLSocketFactory33.getDefaultCipherSuites();
        java.net.Socket socket37 = sSLSocketFactory33.createSocket();
        java.lang.String[] strArray38 = sSLSocketFactory33.getSupportedCipherSuites();
        java.net.InetAddress inetAddress39 = null;
        java.net.InetAddress inetAddress41 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket43 = sSLSocketFactory33.createSocket(inetAddress39, 1, inetAddress41, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: port out of range:-1");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(responseCache12);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNotNull(connectionPool20);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNotNull(connectionPool29);
        org.junit.Assert.assertNotNull(okHttpClient31);
// flaky:         org.junit.Assert.assertNull(proxySelector32);
        org.junit.Assert.assertNotNull(sSLSocketFactory33);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(socket37);
        org.junit.Assert.assertEquals(socket37.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(strArray38);
    }

    @Test
    public void test07419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07419");
        com.squareup.okhttp.ConnectionPool connectionPool2 = new com.squareup.okhttp.ConnectionPool((int) (short) 100, (long) 'a');
        int int3 = connectionPool2.getConnectionCount();
        com.squareup.okhttp.Address address4 = null;
        com.squareup.okhttp.Connection connection5 = connectionPool2.get(address4);
        com.squareup.okhttp.Connection connection6 = null;
        // The following exception was thrown during execution in test generation
        try {
            connectionPool2.maybeShare(connection6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(connection5);
    }

    @Test
    public void test07420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07420");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.Proxy proxy8 = null;
        okHttpClient0.proxy = proxy8;
        boolean boolean10 = okHttpClient0.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        java.net.ProxySelector proxySelector12 = okHttpClient11.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier13 = okHttpClient11.hostnameVerifier;
        java.net.Proxy proxy14 = java.net.Proxy.NO_PROXY;
        boolean boolean16 = proxy14.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type17 = proxy14.type();
        java.net.Proxy.Type type18 = proxy14.type();
        okHttpClient11.proxy = proxy14;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier21 = null;
        okHttpClient20.hostnameVerifier = hostnameVerifier21;
        java.net.ResponseCache responseCache23 = null;
        okHttpClient20.responseCache = responseCache23;
        java.util.List<java.lang.String> strList25 = okHttpClient20.transports;
        com.squareup.okhttp.ConnectionPool connectionPool26 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient20.connectionPool = connectionPool26;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient20.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient29 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = null;
        okHttpClient29.hostnameVerifier = hostnameVerifier30;
        java.net.ResponseCache responseCache32 = null;
        okHttpClient29.responseCache = responseCache32;
        java.util.List<java.lang.String> strList34 = okHttpClient29.transports;
        com.squareup.okhttp.ConnectionPool connectionPool35 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient29.connectionPool = connectionPool35;
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient29.copyWithDefaults();
        java.net.ProxySelector proxySelector38 = okHttpClient37.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory39 = okHttpClient37.getSslSocketFactory();
        okHttpClient20.sslSocketFactory = sSLSocketFactory39;
        okHttpClient11.sslSocketFactory = sSLSocketFactory39;
        com.squareup.okhttp.OkHttpClient okHttpClient42 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier43 = null;
        okHttpClient42.hostnameVerifier = hostnameVerifier43;
        java.net.ResponseCache responseCache45 = null;
        okHttpClient42.responseCache = responseCache45;
        java.util.List<java.lang.String> strList47 = okHttpClient42.transports;
        java.net.Proxy proxy48 = java.net.Proxy.NO_PROXY;
        boolean boolean50 = proxy48.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type51 = proxy48.type();
        java.net.SocketAddress socketAddress52 = proxy48.address();
        com.squareup.okhttp.OkHttpClient okHttpClient53 = okHttpClient42.setProxy(proxy48);
        java.net.SocketAddress socketAddress54 = proxy48.address();
        java.net.Proxy.Type type55 = proxy48.type();
        java.net.SocketAddress socketAddress56 = proxy48.address();
        com.squareup.okhttp.OkHttpClient okHttpClient57 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier58 = null;
        okHttpClient57.hostnameVerifier = hostnameVerifier58;
        java.net.ResponseCache responseCache60 = null;
        okHttpClient57.responseCache = responseCache60;
        javax.net.ssl.HostnameVerifier hostnameVerifier62 = okHttpClient57.hostnameVerifier;
        java.net.Proxy proxy63 = okHttpClient57.getProxy();
        java.net.CookieHandler cookieHandler64 = null;
        okHttpClient57.cookieHandler = cookieHandler64;
        okHttpClient57.followProtocolRedirects = true;
        java.net.CookieHandler cookieHandler68 = okHttpClient57.getCookieHandler();
        boolean boolean69 = proxy48.equals((java.lang.Object) okHttpClient57);
        okHttpClient11.proxy = proxy48;
        java.net.SocketAddress socketAddress71 = proxy48.address();
        com.squareup.okhttp.OkHttpClient okHttpClient72 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier73 = null;
        okHttpClient72.hostnameVerifier = hostnameVerifier73;
        java.net.ResponseCache responseCache75 = null;
        okHttpClient72.responseCache = responseCache75;
        java.util.List<java.lang.String> strList77 = okHttpClient72.transports;
        com.squareup.okhttp.ConnectionPool connectionPool78 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient72.connectionPool = connectionPool78;
        java.net.CookieHandler cookieHandler80 = okHttpClient72.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache81 = okHttpClient72.okResponseCache();
        java.net.CookieHandler cookieHandler82 = okHttpClient72.getCookieHandler();
        java.net.Proxy proxy83 = okHttpClient72.proxy;
        java.net.CookieHandler cookieHandler84 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient85 = okHttpClient72.setCookieHandler(cookieHandler84);
        com.squareup.okhttp.OkHttpClient okHttpClient86 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier87 = null;
        okHttpClient86.hostnameVerifier = hostnameVerifier87;
        boolean boolean89 = okHttpClient86.getFollowProtocolRedirects();
        java.net.Proxy proxy90 = okHttpClient86.proxy;
        java.util.List<java.lang.String> strList91 = okHttpClient86.transports;
        java.util.List<java.lang.String> strList92 = com.squareup.okhttp.OkHttpClient.DEFAULT_TRANSPORTS;
        okHttpClient86.transports = strList92;
        okHttpClient85.transports = strList92;
        boolean boolean95 = proxy48.equals((java.lang.Object) okHttpClient85);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(proxySelector12);
        org.junit.Assert.assertNull(hostnameVerifier13);
        org.junit.Assert.assertNotNull(proxy14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + type17 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type17.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertTrue("'" + type18 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type18.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNotNull(connectionPool26);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(connectionPool35);
        org.junit.Assert.assertNotNull(okHttpClient37);
// flaky:         org.junit.Assert.assertNull(proxySelector38);
        org.junit.Assert.assertNotNull(sSLSocketFactory39);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNotNull(proxy48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + type51 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type51.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress52);
        org.junit.Assert.assertNotNull(okHttpClient53);
        org.junit.Assert.assertNull(socketAddress54);
        org.junit.Assert.assertTrue("'" + type55 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type55.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress56);
        org.junit.Assert.assertNull(hostnameVerifier62);
        org.junit.Assert.assertNull(proxy63);
        org.junit.Assert.assertNull(cookieHandler68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(socketAddress71);
        org.junit.Assert.assertNull(strList77);
        org.junit.Assert.assertNotNull(connectionPool78);
        org.junit.Assert.assertNull(cookieHandler80);
        org.junit.Assert.assertNull(okResponseCache81);
        org.junit.Assert.assertNull(cookieHandler82);
        org.junit.Assert.assertNull(proxy83);
        org.junit.Assert.assertNotNull(okHttpClient85);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNull(proxy90);
        org.junit.Assert.assertNull(strList91);
        org.junit.Assert.assertNotNull(strList92);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test07421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07421");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory6 = okHttpClient0.sslSocketFactory;
        java.net.CookieHandler cookieHandler7 = okHttpClient0.cookieHandler;
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = okHttpClient0.hostnameVerifier;
        java.net.ProxySelector proxySelector9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient0.setProxySelector(proxySelector9);
        java.util.List<java.lang.String> strList11 = okHttpClient0.getTransports();
        java.net.CookieHandler cookieHandler12 = okHttpClient0.getCookieHandler();
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(sSLSocketFactory6);
        org.junit.Assert.assertNull(cookieHandler7);
        org.junit.Assert.assertNull(hostnameVerifier8);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNull(cookieHandler12);
    }

    @Test
    public void test07422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07422");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient4.copyWithDefaults();
        com.squareup.okhttp.Route[] routeArray6 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet7 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet7, routeArray6);
        okHttpClient5.failedRoutes = routeSet7;
        java.net.CookieHandler cookieHandler10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient5.setCookieHandler(cookieHandler10);
        java.net.CookieHandler cookieHandler12 = null;
        okHttpClient11.cookieHandler = cookieHandler12;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory14 = okHttpClient11.getSslSocketFactory();
        java.lang.String[] strArray15 = sSLSocketFactory14.getDefaultCipherSuites();
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNotNull(routeArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(sSLSocketFactory14);
        org.junit.Assert.assertNotNull(strArray15);
    }

    @Test
    public void test07423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07423");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient0.setFollowProtocolRedirects(false);
        java.net.Proxy proxy8 = okHttpClient0.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier9 = okHttpClient0.getHostnameVerifier();
        java.util.Set<com.squareup.okhttp.Route> routeSet10 = okHttpClient0.failedRoutes;
        okHttpClient0.followProtocolRedirects = true;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = null;
        okHttpClient13.hostnameVerifier = hostnameVerifier14;
        java.net.ResponseCache responseCache16 = null;
        okHttpClient13.responseCache = responseCache16;
        java.util.List<java.lang.String> strList18 = okHttpClient13.transports;
        com.squareup.okhttp.ConnectionPool connectionPool19 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient13.connectionPool = connectionPool19;
        java.net.Proxy proxy21 = null;
        okHttpClient13.proxy = proxy21;
        boolean boolean23 = okHttpClient13.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient13.copyWithDefaults();
        java.net.Proxy proxy25 = java.net.Proxy.NO_PROXY;
        boolean boolean27 = proxy25.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type28 = proxy25.type();
        java.lang.String str29 = proxy25.toString();
        java.net.Proxy.Type type30 = proxy25.type();
        okHttpClient13.proxy = proxy25;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache33 = okHttpClient32.okResponseCache();
        java.net.ResponseCache responseCache34 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient32.setResponseCache(responseCache34);
        java.net.ProxySelector proxySelector36 = okHttpClient32.getProxySelector();
        com.squareup.okhttp.OkAuthenticator okAuthenticator37 = okHttpClient32.getAuthenticator();
        boolean boolean38 = proxy25.equals((java.lang.Object) okHttpClient32);
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient0.setProxy(proxy25);
        java.net.Proxy proxy40 = okHttpClient39.getProxy();
        java.lang.String str41 = proxy40.toString();
        java.net.Proxy.Type type42 = proxy40.type();
        java.lang.String str43 = proxy40.toString();
        java.net.SocketAddress socketAddress44 = proxy40.address();
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNotNull(okHttpClient7);
        org.junit.Assert.assertNull(proxy8);
        org.junit.Assert.assertNull(hostnameVerifier9);
        org.junit.Assert.assertNotNull(routeSet10);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(connectionPool19);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNotNull(proxy25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + type28 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type28.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "DIRECT" + "'", str29, "DIRECT");
        org.junit.Assert.assertTrue("'" + type30 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type30.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(okResponseCache33);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNull(proxySelector36);
        org.junit.Assert.assertNull(okAuthenticator37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(okHttpClient39);
        org.junit.Assert.assertNotNull(proxy40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "DIRECT" + "'", str41, "DIRECT");
        org.junit.Assert.assertTrue("'" + type42 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type42.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "DIRECT" + "'", str43, "DIRECT");
        org.junit.Assert.assertNull(socketAddress44);
    }

    @Test
    public void test07424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07424");
        com.squareup.okhttp.ConnectionPool connectionPool2 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (byte) 10);
        com.squareup.okhttp.Connection connection3 = null;
        // The following exception was thrown during execution in test generation
        try {
            connectionPool2.recycle(connection3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test07425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07425");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient0.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.copyWithDefaults();
        java.net.Proxy proxy12 = okHttpClient11.getProxy();
        java.net.CookieHandler cookieHandler13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient11.setCookieHandler(cookieHandler13);
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient(okHttpClient11);
        com.squareup.okhttp.OkHttpClient okHttpClient16 = new com.squareup.okhttp.OkHttpClient(okHttpClient11);
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = null;
        okHttpClient17.hostnameVerifier = hostnameVerifier18;
        java.net.ResponseCache responseCache20 = null;
        okHttpClient17.responseCache = responseCache20;
        javax.net.ssl.HostnameVerifier hostnameVerifier22 = okHttpClient17.hostnameVerifier;
        java.net.Proxy proxy23 = okHttpClient17.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool26 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient17.connectionPool = connectionPool26;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient17.copyWithDefaults();
        java.net.Proxy proxy29 = okHttpClient28.getProxy();
        java.util.Set<com.squareup.okhttp.Route> routeSet30 = okHttpClient28.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient28.copyWithDefaults();
        java.net.CookieHandler cookieHandler32 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient31.setCookieHandler(cookieHandler32);
        java.net.CookieHandler cookieHandler34 = null;
        okHttpClient31.cookieHandler = cookieHandler34;
        com.squareup.okhttp.OkAuthenticator okAuthenticator36 = okHttpClient31.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient16.setAuthenticator(okAuthenticator36);
        com.squareup.okhttp.OkAuthenticator okAuthenticator38 = okHttpClient37.authenticator;
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(proxy12);
        org.junit.Assert.assertNotNull(okHttpClient14);
        org.junit.Assert.assertNull(hostnameVerifier22);
        org.junit.Assert.assertNull(proxy23);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNull(proxy29);
        org.junit.Assert.assertNotNull(routeSet30);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNotNull(okHttpClient33);
        org.junit.Assert.assertNotNull(okAuthenticator36);
        org.junit.Assert.assertNotNull(okHttpClient37);
        org.junit.Assert.assertNotNull(okAuthenticator38);
    }

    @Test
    public void test07426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07426");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier7;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool10 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient9.connectionPool = connectionPool10;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier13 = null;
        okHttpClient12.hostnameVerifier = hostnameVerifier13;
        java.net.ResponseCache responseCache15 = null;
        okHttpClient12.responseCache = responseCache15;
        java.util.List<java.lang.String> strList17 = okHttpClient12.transports;
        com.squareup.okhttp.ConnectionPool connectionPool18 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient12.connectionPool = connectionPool18;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient9.setConnectionPool(connectionPool18);
        int int21 = connectionPool18.getConnectionCount();
        int int22 = connectionPool18.getSpdyConnectionCount();
        int int23 = connectionPool18.getSpdyConnectionCount();
        com.squareup.okhttp.Address address24 = null;
        com.squareup.okhttp.Connection connection25 = connectionPool18.get(address24);
        int int26 = connectionPool18.getHttpConnectionCount();
        int int27 = connectionPool18.getSpdyConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient0.setConnectionPool(connectionPool18);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory29 = okHttpClient0.getSslSocketFactory();
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNotNull(connectionPool10);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNotNull(connectionPool18);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNull(connection25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNull(sSLSocketFactory29);
    }

    @Test
    public void test07427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07427");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.ResponseCache responseCache5 = null;
        okHttpClient4.responseCache = responseCache5;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = null;
        okHttpClient7.hostnameVerifier = hostnameVerifier8;
        java.net.ResponseCache responseCache10 = null;
        okHttpClient7.responseCache = responseCache10;
        java.util.List<java.lang.String> strList12 = okHttpClient7.transports;
        com.squareup.okhttp.ConnectionPool connectionPool13 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient7.connectionPool = connectionPool13;
        java.net.CookieHandler cookieHandler15 = okHttpClient7.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache16 = okHttpClient7.okResponseCache();
        java.net.CookieHandler cookieHandler17 = okHttpClient7.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient(okHttpClient7);
        java.net.Proxy proxy19 = java.net.Proxy.NO_PROXY;
        boolean boolean21 = proxy19.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type22 = proxy19.type();
        java.net.SocketAddress socketAddress23 = proxy19.address();
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient7.setProxy(proxy19);
        com.squareup.okhttp.OkHttpClient okHttpClient25 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier26 = null;
        okHttpClient25.hostnameVerifier = hostnameVerifier26;
        java.net.ResponseCache responseCache28 = null;
        okHttpClient25.responseCache = responseCache28;
        java.util.List<java.lang.String> strList30 = okHttpClient25.transports;
        com.squareup.okhttp.ConnectionPool connectionPool31 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient25.connectionPool = connectionPool31;
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient25.copyWithDefaults();
        java.net.ProxySelector proxySelector34 = okHttpClient33.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory35 = okHttpClient33.getSslSocketFactory();
        okHttpClient24.sslSocketFactory = sSLSocketFactory35;
        java.lang.String[] strArray37 = sSLSocketFactory35.getDefaultCipherSuites();
        java.lang.String[] strArray38 = sSLSocketFactory35.getSupportedCipherSuites();
        java.net.Socket socket39 = sSLSocketFactory35.createSocket();
        okHttpClient4.sslSocketFactory = sSLSocketFactory35;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory41 = okHttpClient4.sslSocketFactory;
        com.squareup.okhttp.OkHttpClient okHttpClient42 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier43 = null;
        okHttpClient42.hostnameVerifier = hostnameVerifier43;
        java.net.ResponseCache responseCache45 = null;
        okHttpClient42.responseCache = responseCache45;
        java.util.List<java.lang.String> strList47 = okHttpClient42.transports;
        java.net.Proxy proxy48 = java.net.Proxy.NO_PROXY;
        boolean boolean50 = proxy48.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type51 = proxy48.type();
        java.net.SocketAddress socketAddress52 = proxy48.address();
        com.squareup.okhttp.OkHttpClient okHttpClient53 = okHttpClient42.setProxy(proxy48);
        java.net.SocketAddress socketAddress54 = proxy48.address();
        java.net.Proxy.Type type55 = proxy48.type();
        com.squareup.okhttp.OkHttpClient okHttpClient56 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier57 = null;
        okHttpClient56.hostnameVerifier = hostnameVerifier57;
        java.net.ProxySelector proxySelector59 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient60 = okHttpClient56.setProxySelector(proxySelector59);
        java.net.Proxy proxy61 = okHttpClient60.getProxy();
        java.util.List<java.lang.String> strList62 = okHttpClient60.getTransports();
        java.net.ResponseCache responseCache63 = null;
        okHttpClient60.responseCache = responseCache63;
        boolean boolean65 = proxy48.equals((java.lang.Object) responseCache63);
        okHttpClient4.proxy = proxy48;
        java.lang.String str67 = proxy48.toString();
        java.lang.Object obj68 = null;
        boolean boolean69 = proxy48.equals(obj68);
        java.net.Proxy.Type type70 = proxy48.type();
        com.squareup.okhttp.OkHttpClient okHttpClient71 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier72 = null;
        okHttpClient71.hostnameVerifier = hostnameVerifier72;
        java.net.ResponseCache responseCache74 = null;
        okHttpClient71.responseCache = responseCache74;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache76 = okHttpClient71.okResponseCache();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory77 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient78 = okHttpClient71.setSSLSocketFactory(sSLSocketFactory77);
        java.net.ProxySelector proxySelector79 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient80 = okHttpClient71.setProxySelector(proxySelector79);
        java.net.ResponseCache responseCache81 = okHttpClient71.getResponseCache();
        java.net.ResponseCache responseCache82 = okHttpClient71.responseCache;
        boolean boolean83 = proxy48.equals((java.lang.Object) okHttpClient71);
        java.net.SocketAddress socketAddress84 = proxy48.address();
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(connectionPool13);
        org.junit.Assert.assertNull(cookieHandler15);
        org.junit.Assert.assertNull(okResponseCache16);
        org.junit.Assert.assertNull(cookieHandler17);
        org.junit.Assert.assertNotNull(proxy19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + type22 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type22.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress23);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNotNull(connectionPool31);
        org.junit.Assert.assertNotNull(okHttpClient33);
// flaky:         org.junit.Assert.assertNull(proxySelector34);
        org.junit.Assert.assertNotNull(sSLSocketFactory35);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(socket39);
        org.junit.Assert.assertEquals(socket39.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(sSLSocketFactory41);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNotNull(proxy48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + type51 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type51.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress52);
        org.junit.Assert.assertNotNull(okHttpClient53);
        org.junit.Assert.assertNull(socketAddress54);
        org.junit.Assert.assertTrue("'" + type55 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type55.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNotNull(okHttpClient60);
        org.junit.Assert.assertNull(proxy61);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "DIRECT" + "'", str67, "DIRECT");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + type70 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type70.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(okResponseCache76);
        org.junit.Assert.assertNotNull(okHttpClient78);
        org.junit.Assert.assertNotNull(okHttpClient80);
        org.junit.Assert.assertNull(responseCache81);
        org.junit.Assert.assertNull(responseCache82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNull(socketAddress84);
    }

    @Test
    public void test07428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07428");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.ConnectionPool connectionPool12 = okHttpClient11.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator13 = okHttpClient11.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool16 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient11.connectionPool = connectionPool16;
        java.net.ResponseCache responseCache18 = okHttpClient11.responseCache;
        com.squareup.okhttp.ConnectionPool connectionPool21 = new com.squareup.okhttp.ConnectionPool((int) (byte) 0, 10L);
        okHttpClient11.connectionPool = connectionPool21;
        java.util.List<java.lang.String> strList23 = okHttpClient11.transports;
        java.util.List<java.lang.String> strList24 = okHttpClient11.transports;
        com.squareup.okhttp.OkHttpClient okHttpClient25 = new com.squareup.okhttp.OkHttpClient(okHttpClient11);
        com.squareup.okhttp.OkHttpClient okHttpClient26 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier27 = null;
        okHttpClient26.hostnameVerifier = hostnameVerifier27;
        java.net.ProxySelector proxySelector29 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient30 = okHttpClient26.setProxySelector(proxySelector29);
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient30.copyWithDefaults();
        java.net.CookieHandler cookieHandler32 = null;
        okHttpClient30.cookieHandler = cookieHandler32;
        java.net.ProxySelector proxySelector34 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient30.setProxySelector(proxySelector34);
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient35.copyWithDefaults();
        java.util.List<java.lang.String> strList37 = okHttpClient36.transports;
        com.squareup.okhttp.ConnectionPool connectionPool38 = okHttpClient36.getConnectionPool();
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient25.setConnectionPool(connectionPool38);
        com.squareup.okhttp.OkHttpClient okHttpClient40 = okHttpClient25.copyWithDefaults();
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNull(okAuthenticator13);
        org.junit.Assert.assertNull(responseCache18);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNotNull(okHttpClient30);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNotNull(strList37);
        org.junit.Assert.assertNotNull(connectionPool38);
        org.junit.Assert.assertNotNull(okHttpClient39);
        org.junit.Assert.assertNotNull(okHttpClient40);
    }

    @Test
    public void test07429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07429");
        java.net.Proxy proxy0 = java.net.Proxy.NO_PROXY;
        boolean boolean2 = proxy0.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type3 = proxy0.type();
        java.lang.String str4 = proxy0.toString();
        com.squareup.okhttp.OkHttpClient okHttpClient5 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier6 = null;
        okHttpClient5.hostnameVerifier = hostnameVerifier6;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory8 = okHttpClient5.getSslSocketFactory();
        boolean boolean9 = proxy0.equals((java.lang.Object) okHttpClient5);
        java.net.SocketAddress socketAddress10 = proxy0.address();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool12 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient11.connectionPool = connectionPool12;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier15 = null;
        okHttpClient14.hostnameVerifier = hostnameVerifier15;
        java.net.ResponseCache responseCache17 = null;
        okHttpClient14.responseCache = responseCache17;
        java.util.List<java.lang.String> strList19 = okHttpClient14.transports;
        com.squareup.okhttp.ConnectionPool connectionPool20 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient14.connectionPool = connectionPool20;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient11.setConnectionPool(connectionPool20);
        java.net.ResponseCache responseCache23 = okHttpClient11.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory24 = okHttpClient11.sslSocketFactory;
        java.net.ResponseCache responseCache25 = okHttpClient11.getResponseCache();
        com.squareup.okhttp.ConnectionPool connectionPool26 = okHttpClient11.connectionPool;
        java.net.CookieHandler cookieHandler27 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient11.setCookieHandler(cookieHandler27);
        java.net.CookieHandler cookieHandler29 = okHttpClient28.cookieHandler;
        boolean boolean30 = okHttpClient28.getFollowProtocolRedirects();
        java.net.CookieHandler cookieHandler31 = null;
        okHttpClient28.cookieHandler = cookieHandler31;
        boolean boolean33 = proxy0.equals((java.lang.Object) cookieHandler31);
        org.junit.Assert.assertNotNull(proxy0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + type3 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type3.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "DIRECT" + "'", str4, "DIRECT");
        org.junit.Assert.assertNull(sSLSocketFactory8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(socketAddress10);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNotNull(connectionPool20);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNull(responseCache23);
        org.junit.Assert.assertNull(sSLSocketFactory24);
        org.junit.Assert.assertNull(responseCache25);
        org.junit.Assert.assertNotNull(connectionPool26);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNull(cookieHandler29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test07430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07430");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.CookieHandler cookieHandler5 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = null;
        okHttpClient6.hostnameVerifier = hostnameVerifier7;
        java.net.ResponseCache responseCache9 = null;
        okHttpClient6.responseCache = responseCache9;
        java.util.List<java.lang.String> strList11 = okHttpClient6.transports;
        com.squareup.okhttp.ConnectionPool connectionPool12 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient6.connectionPool = connectionPool12;
        java.net.Proxy proxy14 = null;
        okHttpClient6.proxy = proxy14;
        java.util.Set<com.squareup.okhttp.Route> routeSet16 = okHttpClient6.failedRoutes;
        okHttpClient0.failedRoutes = routeSet16;
        java.net.ProxySelector proxySelector18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient0.setProxySelector(proxySelector18);
        com.squareup.okhttp.ConnectionPool connectionPool22 = new com.squareup.okhttp.ConnectionPool((int) (short) 10, (long) '4');
        okHttpClient0.connectionPool = connectionPool22;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory24 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory24);
        java.util.List<java.lang.String> strList26 = okHttpClient0.transports;
        java.net.ResponseCache responseCache27 = okHttpClient0.responseCache;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool29 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient28.connectionPool = connectionPool29;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier32 = null;
        okHttpClient31.hostnameVerifier = hostnameVerifier32;
        java.net.ResponseCache responseCache34 = null;
        okHttpClient31.responseCache = responseCache34;
        java.util.List<java.lang.String> strList36 = okHttpClient31.transports;
        com.squareup.okhttp.ConnectionPool connectionPool37 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient31.connectionPool = connectionPool37;
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient28.setConnectionPool(connectionPool37);
        com.squareup.okhttp.OkAuthenticator okAuthenticator40 = okHttpClient39.getAuthenticator();
        java.net.ProxySelector proxySelector41 = okHttpClient39.getProxySelector();
        com.squareup.okhttp.OkHttpClient okHttpClient42 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool43 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient42.connectionPool = connectionPool43;
        com.squareup.okhttp.OkHttpClient okHttpClient45 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier46 = null;
        okHttpClient45.hostnameVerifier = hostnameVerifier46;
        java.net.ResponseCache responseCache48 = null;
        okHttpClient45.responseCache = responseCache48;
        java.util.List<java.lang.String> strList50 = okHttpClient45.transports;
        com.squareup.okhttp.ConnectionPool connectionPool51 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient45.connectionPool = connectionPool51;
        com.squareup.okhttp.OkHttpClient okHttpClient53 = okHttpClient42.setConnectionPool(connectionPool51);
        java.net.ResponseCache responseCache54 = okHttpClient42.responseCache;
        java.net.ResponseCache responseCache55 = okHttpClient42.getResponseCache();
        java.net.ResponseCache responseCache56 = okHttpClient42.responseCache;
        com.squareup.okhttp.OkHttpClient okHttpClient57 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache58 = okHttpClient57.okResponseCache();
        java.net.ResponseCache responseCache59 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient60 = okHttpClient57.setResponseCache(responseCache59);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory61 = okHttpClient57.sslSocketFactory;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory62 = okHttpClient57.sslSocketFactory;
        com.squareup.okhttp.OkHttpClient okHttpClient63 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier64 = null;
        okHttpClient63.hostnameVerifier = hostnameVerifier64;
        boolean boolean66 = okHttpClient63.getFollowProtocolRedirects();
        java.net.CookieHandler cookieHandler67 = okHttpClient63.cookieHandler;
        com.squareup.okhttp.OkHttpClient okHttpClient68 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier69 = null;
        okHttpClient68.hostnameVerifier = hostnameVerifier69;
        java.net.ResponseCache responseCache71 = null;
        okHttpClient68.responseCache = responseCache71;
        javax.net.ssl.HostnameVerifier hostnameVerifier73 = okHttpClient68.hostnameVerifier;
        java.net.Proxy proxy74 = okHttpClient68.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool77 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient68.connectionPool = connectionPool77;
        com.squareup.okhttp.OkHttpClient okHttpClient79 = okHttpClient68.copyWithDefaults();
        java.net.ResponseCache responseCache80 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient81 = okHttpClient79.setResponseCache(responseCache80);
        com.squareup.okhttp.OkAuthenticator okAuthenticator82 = okHttpClient79.authenticator;
        okHttpClient63.authenticator = okAuthenticator82;
        com.squareup.okhttp.OkHttpClient okHttpClient84 = okHttpClient57.setAuthenticator(okAuthenticator82);
        com.squareup.okhttp.OkHttpClient okHttpClient85 = okHttpClient42.setAuthenticator(okAuthenticator82);
        okHttpClient39.authenticator = okAuthenticator82;
        com.squareup.okhttp.OkHttpClient okHttpClient87 = okHttpClient0.setAuthenticator(okAuthenticator82);
        java.util.List<java.lang.String> strList88 = okHttpClient87.transports;
        com.squareup.okhttp.OkHttpClient okHttpClient89 = new com.squareup.okhttp.OkHttpClient(okHttpClient87);
        com.squareup.okhttp.OkAuthenticator okAuthenticator90 = okHttpClient89.authenticator;
        java.util.List<java.lang.String> strList91 = okHttpClient89.transports;
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNotNull(routeSet16);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNotNull(okHttpClient25);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNull(responseCache27);
        org.junit.Assert.assertNotNull(connectionPool29);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNotNull(connectionPool37);
        org.junit.Assert.assertNotNull(okHttpClient39);
        org.junit.Assert.assertNull(okAuthenticator40);
        org.junit.Assert.assertNull(proxySelector41);
        org.junit.Assert.assertNotNull(connectionPool43);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNotNull(connectionPool51);
        org.junit.Assert.assertNotNull(okHttpClient53);
        org.junit.Assert.assertNull(responseCache54);
        org.junit.Assert.assertNull(responseCache55);
        org.junit.Assert.assertNull(responseCache56);
        org.junit.Assert.assertNull(okResponseCache58);
        org.junit.Assert.assertNotNull(okHttpClient60);
        org.junit.Assert.assertNull(sSLSocketFactory61);
        org.junit.Assert.assertNull(sSLSocketFactory62);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNull(cookieHandler67);
        org.junit.Assert.assertNull(hostnameVerifier73);
        org.junit.Assert.assertNull(proxy74);
        org.junit.Assert.assertNotNull(okHttpClient79);
        org.junit.Assert.assertNotNull(okHttpClient81);
        org.junit.Assert.assertNotNull(okAuthenticator82);
        org.junit.Assert.assertNotNull(okHttpClient84);
        org.junit.Assert.assertNotNull(okHttpClient85);
        org.junit.Assert.assertNotNull(okHttpClient87);
        org.junit.Assert.assertNull(strList88);
        org.junit.Assert.assertNull(okAuthenticator90);
        org.junit.Assert.assertNull(strList91);
    }

    @Test
    public void test07431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07431");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.CookieHandler cookieHandler8 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache9 = okHttpClient0.okResponseCache();
        java.net.CookieHandler cookieHandler10 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        java.net.Proxy proxy12 = java.net.Proxy.NO_PROXY;
        boolean boolean14 = proxy12.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type15 = proxy12.type();
        java.net.SocketAddress socketAddress16 = proxy12.address();
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient0.setProxy(proxy12);
        java.lang.String[] strArray19 = new java.lang.String[] { "DIRECT" };
        java.util.ArrayList<java.lang.String> strList20 = new java.util.ArrayList<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList20, strArray19);
        okHttpClient0.transports = strList20;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient0.setFollowProtocolRedirects(false);
        com.squareup.okhttp.ConnectionPool connectionPool27 = new com.squareup.okhttp.ConnectionPool((int) '#', (long) (short) 100);
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient24.setConnectionPool(connectionPool27);
        java.net.CookieHandler cookieHandler29 = okHttpClient24.cookieHandler;
        java.util.Set<com.squareup.okhttp.Route> routeSet30 = okHttpClient24.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient24.setFollowProtocolRedirects(true);
        java.net.ProxySelector proxySelector33 = null;
        okHttpClient32.proxySelector = proxySelector33;
        javax.net.ssl.HostnameVerifier hostnameVerifier35 = okHttpClient32.getHostnameVerifier();
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNull(cookieHandler8);
        org.junit.Assert.assertNull(okResponseCache9);
        org.junit.Assert.assertNull(cookieHandler10);
        org.junit.Assert.assertNotNull(proxy12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + type15 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type15.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress16);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNull(cookieHandler29);
        org.junit.Assert.assertNotNull(routeSet30);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertNull(hostnameVerifier35);
    }

    @Test
    public void test07432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07432");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient0.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.copyWithDefaults();
        java.net.Proxy proxy12 = okHttpClient11.getProxy();
        java.util.Set<com.squareup.okhttp.Route> routeSet13 = okHttpClient11.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient11.copyWithDefaults();
        java.net.CookieHandler cookieHandler15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient14.setCookieHandler(cookieHandler15);
        java.net.CookieHandler cookieHandler17 = null;
        okHttpClient14.cookieHandler = cookieHandler17;
        java.net.CookieHandler cookieHandler19 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient14.setCookieHandler(cookieHandler19);
        java.net.CookieHandler cookieHandler21 = okHttpClient20.getCookieHandler();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory22 = okHttpClient20.sslSocketFactory;
        com.squareup.okhttp.OkHttpClient okHttpClient23 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool24 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient23.connectionPool = connectionPool24;
        java.net.ResponseCache responseCache26 = null;
        okHttpClient23.responseCache = responseCache26;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier29 = null;
        okHttpClient28.hostnameVerifier = hostnameVerifier29;
        java.net.ResponseCache responseCache31 = null;
        okHttpClient28.responseCache = responseCache31;
        javax.net.ssl.HostnameVerifier hostnameVerifier33 = okHttpClient28.hostnameVerifier;
        java.net.Proxy proxy34 = okHttpClient28.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool37 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient28.connectionPool = connectionPool37;
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient28.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier40 = okHttpClient39.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient41 = okHttpClient23.setHostnameVerifier(hostnameVerifier40);
        com.squareup.okhttp.OkHttpClient okHttpClient42 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier43 = null;
        okHttpClient42.hostnameVerifier = hostnameVerifier43;
        java.net.ResponseCache responseCache45 = null;
        okHttpClient42.responseCache = responseCache45;
        java.util.List<java.lang.String> strList47 = okHttpClient42.transports;
        com.squareup.okhttp.ConnectionPool connectionPool48 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient42.connectionPool = connectionPool48;
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient42.copyWithDefaults();
        java.net.ProxySelector proxySelector51 = okHttpClient50.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory52 = okHttpClient50.getSslSocketFactory();
        java.lang.String[] strArray53 = sSLSocketFactory52.getSupportedCipherSuites();
        okHttpClient23.sslSocketFactory = sSLSocketFactory52;
        java.net.Socket socket55 = sSLSocketFactory52.createSocket();
        java.net.Socket socket56 = sSLSocketFactory52.createSocket();
        java.io.InputStream inputStream57 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket59 = sSLSocketFactory22.createSocket(socket56, inputStream57, true);
            org.junit.Assert.fail("Expected exception of type java.net.SocketException; message: Underlying socket is not connected");
        } catch (java.net.SocketException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(proxy12);
        org.junit.Assert.assertNotNull(routeSet13);
        org.junit.Assert.assertNotNull(okHttpClient14);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNull(cookieHandler21);
        org.junit.Assert.assertNotNull(sSLSocketFactory22);
        org.junit.Assert.assertNotNull(connectionPool24);
        org.junit.Assert.assertNull(hostnameVerifier33);
        org.junit.Assert.assertNull(proxy34);
        org.junit.Assert.assertNotNull(okHttpClient39);
        org.junit.Assert.assertNotNull(hostnameVerifier40);
        org.junit.Assert.assertNotNull(okHttpClient41);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNotNull(connectionPool48);
        org.junit.Assert.assertNotNull(okHttpClient50);
// flaky:         org.junit.Assert.assertNull(proxySelector51);
        org.junit.Assert.assertNotNull(sSLSocketFactory52);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(socket55);
        org.junit.Assert.assertEquals(socket55.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(socket56);
        org.junit.Assert.assertEquals(socket56.toString(), "Socket[unconnected]");
    }

    @Test
    public void test07433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07433");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.ConnectionPool connectionPool12 = okHttpClient11.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator13 = okHttpClient11.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool16 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient11.connectionPool = connectionPool16;
        java.net.ResponseCache responseCache18 = okHttpClient11.responseCache;
        com.squareup.okhttp.ConnectionPool connectionPool21 = new com.squareup.okhttp.ConnectionPool((int) (byte) 0, 10L);
        okHttpClient11.connectionPool = connectionPool21;
        com.squareup.okhttp.ConnectionPool connectionPool25 = new com.squareup.okhttp.ConnectionPool((int) (byte) 10, 0L);
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient11.setConnectionPool(connectionPool25);
        java.net.ResponseCache responseCache27 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient26.setResponseCache(responseCache27);
        com.squareup.okhttp.OkHttpClient okHttpClient30 = okHttpClient28.setFollowProtocolRedirects(true);
        java.net.CookieHandler cookieHandler31 = null;
        okHttpClient28.cookieHandler = cookieHandler31;
        com.squareup.okhttp.OkHttpClient okHttpClient33 = new com.squareup.okhttp.OkHttpClient(okHttpClient28);
        okHttpClient28.followProtocolRedirects = false;
        java.net.ResponseCache responseCache36 = okHttpClient28.getResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient37 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier38 = null;
        okHttpClient37.hostnameVerifier = hostnameVerifier38;
        boolean boolean40 = okHttpClient37.getFollowProtocolRedirects();
        java.net.Proxy proxy41 = okHttpClient37.proxy;
        java.util.List<java.lang.String> strList42 = okHttpClient37.transports;
        java.util.List<java.lang.String> strList43 = com.squareup.okhttp.OkHttpClient.DEFAULT_TRANSPORTS;
        okHttpClient37.transports = strList43;
        java.net.ResponseCache responseCache45 = okHttpClient37.getResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient46 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool47 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient46.connectionPool = connectionPool47;
        com.squareup.okhttp.OkHttpClient okHttpClient49 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier50 = null;
        okHttpClient49.hostnameVerifier = hostnameVerifier50;
        java.net.ResponseCache responseCache52 = null;
        okHttpClient49.responseCache = responseCache52;
        java.util.List<java.lang.String> strList54 = okHttpClient49.transports;
        com.squareup.okhttp.ConnectionPool connectionPool55 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient49.connectionPool = connectionPool55;
        com.squareup.okhttp.OkHttpClient okHttpClient57 = okHttpClient46.setConnectionPool(connectionPool55);
        java.net.Proxy proxy58 = okHttpClient57.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient59 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool60 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient59.connectionPool = connectionPool60;
        com.squareup.okhttp.OkHttpClient okHttpClient62 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier63 = null;
        okHttpClient62.hostnameVerifier = hostnameVerifier63;
        java.net.ResponseCache responseCache65 = null;
        okHttpClient62.responseCache = responseCache65;
        java.util.List<java.lang.String> strList67 = okHttpClient62.transports;
        com.squareup.okhttp.ConnectionPool connectionPool68 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient62.connectionPool = connectionPool68;
        com.squareup.okhttp.OkHttpClient okHttpClient70 = okHttpClient59.setConnectionPool(connectionPool68);
        com.squareup.okhttp.ConnectionPool connectionPool71 = okHttpClient59.connectionPool;
        com.squareup.okhttp.OkHttpClient okHttpClient72 = okHttpClient57.setConnectionPool(connectionPool71);
        com.squareup.okhttp.OkHttpClient okHttpClient73 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache74 = okHttpClient73.okResponseCache();
        java.net.ResponseCache responseCache75 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient76 = okHttpClient73.setResponseCache(responseCache75);
        com.squareup.okhttp.OkHttpClient okHttpClient77 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache78 = okHttpClient77.okResponseCache();
        java.net.ResponseCache responseCache79 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient80 = okHttpClient77.setResponseCache(responseCache79);
        java.lang.String[] strArray82 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList83 = new java.util.ArrayList<java.lang.String>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList83, strArray82);
        okHttpClient77.transports = strList83;
        okHttpClient73.transports = strList83;
        okHttpClient72.transports = strList83;
        okHttpClient37.transports = strList83;
        // The following exception was thrown during execution in test generation
        try {
            com.squareup.okhttp.OkHttpClient okHttpClient89 = okHttpClient28.setTransports((java.util.List<java.lang.String>) strList83);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: transports doesn't contain http/1.1: [hi!]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNull(okAuthenticator13);
        org.junit.Assert.assertNull(responseCache18);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNotNull(okHttpClient30);
        org.junit.Assert.assertNull(responseCache36);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(proxy41);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNull(responseCache45);
        org.junit.Assert.assertNotNull(connectionPool47);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNotNull(connectionPool55);
        org.junit.Assert.assertNotNull(okHttpClient57);
        org.junit.Assert.assertNull(proxy58);
        org.junit.Assert.assertNotNull(connectionPool60);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNotNull(connectionPool68);
        org.junit.Assert.assertNotNull(okHttpClient70);
        org.junit.Assert.assertNotNull(connectionPool71);
        org.junit.Assert.assertNotNull(okHttpClient72);
        org.junit.Assert.assertNull(okResponseCache74);
        org.junit.Assert.assertNotNull(okHttpClient76);
        org.junit.Assert.assertNull(okResponseCache78);
        org.junit.Assert.assertNotNull(okHttpClient80);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
    }

    @Test
    public void test07434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07434");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.ConnectionPool connectionPool12 = okHttpClient11.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator13 = okHttpClient11.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool16 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient11.connectionPool = connectionPool16;
        java.net.ResponseCache responseCache18 = okHttpClient11.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory19 = okHttpClient11.sslSocketFactory;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier21 = null;
        okHttpClient20.hostnameVerifier = hostnameVerifier21;
        java.net.ResponseCache responseCache23 = null;
        okHttpClient20.responseCache = responseCache23;
        javax.net.ssl.HostnameVerifier hostnameVerifier25 = okHttpClient20.hostnameVerifier;
        java.net.Proxy proxy26 = okHttpClient20.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool29 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient20.connectionPool = connectionPool29;
        boolean boolean31 = okHttpClient20.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient32 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier33 = null;
        okHttpClient32.hostnameVerifier = hostnameVerifier33;
        java.net.ResponseCache responseCache35 = null;
        okHttpClient32.responseCache = responseCache35;
        javax.net.ssl.HostnameVerifier hostnameVerifier37 = okHttpClient32.hostnameVerifier;
        java.net.Proxy proxy38 = okHttpClient32.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool41 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient32.connectionPool = connectionPool41;
        com.squareup.okhttp.OkHttpClient okHttpClient43 = okHttpClient32.copyWithDefaults();
        java.net.Proxy proxy44 = okHttpClient43.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier45 = okHttpClient43.getHostnameVerifier();
        okHttpClient20.hostnameVerifier = hostnameVerifier45;
        okHttpClient11.hostnameVerifier = hostnameVerifier45;
        com.squareup.okhttp.ConnectionPool connectionPool48 = okHttpClient11.getConnectionPool();
        com.squareup.okhttp.Address address49 = null;
        com.squareup.okhttp.Connection connection50 = connectionPool48.get(address49);
        com.squareup.okhttp.Address address51 = null;
        com.squareup.okhttp.Connection connection52 = connectionPool48.get(address51);
        int int53 = connectionPool48.getHttpConnectionCount();
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNull(okAuthenticator13);
        org.junit.Assert.assertNull(responseCache18);
        org.junit.Assert.assertNull(sSLSocketFactory19);
        org.junit.Assert.assertNull(hostnameVerifier25);
        org.junit.Assert.assertNull(proxy26);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(hostnameVerifier37);
        org.junit.Assert.assertNull(proxy38);
        org.junit.Assert.assertNotNull(okHttpClient43);
        org.junit.Assert.assertNull(proxy44);
        org.junit.Assert.assertNotNull(hostnameVerifier45);
        org.junit.Assert.assertNotNull(connectionPool48);
        org.junit.Assert.assertNull(connection50);
        org.junit.Assert.assertNull(connection52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
    }

    @Test
    public void test07435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07435");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient4.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool8 = new com.squareup.okhttp.ConnectionPool(10, (long) 10);
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient5.setConnectionPool(connectionPool8);
        java.net.CookieHandler cookieHandler10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient9.setCookieHandler(cookieHandler10);
        java.net.ResponseCache responseCache12 = okHttpClient11.getResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient(okHttpClient11);
        com.squareup.okhttp.OkHttpClient okHttpClient14 = new com.squareup.okhttp.OkHttpClient(okHttpClient13);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(responseCache12);
    }

    @Test
    public void test07436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07436");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.OkAuthenticator okAuthenticator12 = okHttpClient11.getAuthenticator();
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool14 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient13.connectionPool = connectionPool14;
        java.net.ResponseCache responseCache16 = null;
        okHttpClient13.responseCache = responseCache16;
        java.net.Proxy proxy18 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress19 = proxy18.address();
        java.net.SocketAddress socketAddress20 = proxy18.address();
        okHttpClient13.proxy = proxy18;
        com.squareup.okhttp.ConnectionPool connectionPool24 = new com.squareup.okhttp.ConnectionPool((-1), (long) '#');
        com.squareup.okhttp.Address address25 = null;
        com.squareup.okhttp.Connection connection26 = connectionPool24.get(address25);
        int int27 = connectionPool24.getSpdyConnectionCount();
        connectionPool24.evictAll();
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient13.setConnectionPool(connectionPool24);
        com.squareup.okhttp.OkHttpClient okHttpClient30 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier31 = null;
        okHttpClient30.hostnameVerifier = hostnameVerifier31;
        java.net.ProxySelector proxySelector33 = okHttpClient30.proxySelector;
        java.net.ProxySelector proxySelector34 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient30.setProxySelector(proxySelector34);
        com.squareup.okhttp.OkHttpClient okHttpClient36 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier37 = null;
        okHttpClient36.hostnameVerifier = hostnameVerifier37;
        java.net.ResponseCache responseCache39 = null;
        okHttpClient36.responseCache = responseCache39;
        java.util.List<java.lang.String> strList41 = okHttpClient36.transports;
        com.squareup.okhttp.ConnectionPool connectionPool42 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient36.connectionPool = connectionPool42;
        com.squareup.okhttp.OkHttpClient okHttpClient44 = okHttpClient36.copyWithDefaults();
        java.net.ProxySelector proxySelector45 = okHttpClient44.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory46 = okHttpClient44.getSslSocketFactory();
        okHttpClient30.sslSocketFactory = sSLSocketFactory46;
        okHttpClient13.sslSocketFactory = sSLSocketFactory46;
        java.lang.String[] strArray49 = sSLSocketFactory46.getSupportedCipherSuites();
        java.lang.String[] strArray50 = sSLSocketFactory46.getSupportedCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient51 = okHttpClient11.setSSLSocketFactory(sSLSocketFactory46);
        java.lang.String[] strArray52 = sSLSocketFactory46.getDefaultCipherSuites();
        java.net.InetAddress inetAddress53 = null;
        java.net.InetAddress inetAddress55 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket57 = sSLSocketFactory46.createSocket(inetAddress53, 100, inetAddress55, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.net.BindException; message: Permission denied (Bind failed)");
        } catch (java.net.BindException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(okAuthenticator12);
        org.junit.Assert.assertNotNull(connectionPool14);
        org.junit.Assert.assertNotNull(proxy18);
        org.junit.Assert.assertNull(socketAddress19);
        org.junit.Assert.assertNull(socketAddress20);
        org.junit.Assert.assertNull(connection26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(okHttpClient29);
        org.junit.Assert.assertNull(proxySelector33);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(connectionPool42);
        org.junit.Assert.assertNotNull(okHttpClient44);
// flaky:         org.junit.Assert.assertNull(proxySelector45);
        org.junit.Assert.assertNotNull(sSLSocketFactory46);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(okHttpClient51);
        org.junit.Assert.assertNotNull(strArray52);
    }

    @Test
    public void test07437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07437");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient0.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.copyWithDefaults();
        java.net.Proxy proxy12 = okHttpClient11.getProxy();
        java.util.Set<com.squareup.okhttp.Route> routeSet13 = okHttpClient11.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient11.copyWithDefaults();
        java.net.CookieHandler cookieHandler15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient14.setCookieHandler(cookieHandler15);
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient(okHttpClient16);
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient(okHttpClient17);
        java.net.CookieHandler cookieHandler19 = okHttpClient17.cookieHandler;
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(proxy12);
        org.junit.Assert.assertNotNull(routeSet13);
        org.junit.Assert.assertNotNull(okHttpClient14);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNull(cookieHandler19);
    }

    @Test
    public void test07438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07438");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.CookieHandler cookieHandler8 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache9 = okHttpClient0.okResponseCache();
        java.net.CookieHandler cookieHandler10 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        java.net.Proxy proxy12 = java.net.Proxy.NO_PROXY;
        boolean boolean14 = proxy12.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type15 = proxy12.type();
        java.net.SocketAddress socketAddress16 = proxy12.address();
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient0.setProxy(proxy12);
        java.net.ResponseCache responseCache18 = null;
        okHttpClient0.responseCache = responseCache18;
        com.squareup.okhttp.ConnectionPool connectionPool22 = new com.squareup.okhttp.ConnectionPool(0, 1L);
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient0.setConnectionPool(connectionPool22);
        javax.net.ssl.HostnameVerifier hostnameVerifier24 = okHttpClient0.getHostnameVerifier();
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNull(cookieHandler8);
        org.junit.Assert.assertNull(okResponseCache9);
        org.junit.Assert.assertNull(cookieHandler10);
        org.junit.Assert.assertNotNull(proxy12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + type15 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type15.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress16);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertNull(hostnameVerifier24);
    }

    @Test
    public void test07439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07439");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        boolean boolean3 = okHttpClient0.getFollowProtocolRedirects();
        java.net.CookieHandler cookieHandler4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setCookieHandler(cookieHandler4);
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache6 = okHttpClient0.okResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        com.squareup.okhttp.OkAuthenticator okAuthenticator8 = okHttpClient7.getAuthenticator();
        com.squareup.okhttp.OkHttpClient okHttpClient9 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier10 = null;
        okHttpClient9.hostnameVerifier = hostnameVerifier10;
        java.net.ResponseCache responseCache12 = null;
        okHttpClient9.responseCache = responseCache12;
        java.util.List<java.lang.String> strList14 = okHttpClient9.transports;
        com.squareup.okhttp.ConnectionPool connectionPool15 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient9.connectionPool = connectionPool15;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient9.copyWithDefaults();
        java.net.ProxySelector proxySelector18 = okHttpClient17.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory19 = okHttpClient17.getSslSocketFactory();
        okHttpClient7.sslSocketFactory = sSLSocketFactory19;
        java.lang.String[] strArray21 = sSLSocketFactory19.getDefaultCipherSuites();
        java.lang.String[] strArray22 = sSLSocketFactory19.getDefaultCipherSuites();
        java.lang.String[] strArray23 = sSLSocketFactory19.getDefaultCipherSuites();
        java.lang.String[] strArray24 = sSLSocketFactory19.getDefaultCipherSuites();
        java.net.Socket socket25 = sSLSocketFactory19.createSocket();
        java.net.Socket socket26 = sSLSocketFactory19.createSocket();
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket29 = sSLSocketFactory19.createSocket("", 1);
            org.junit.Assert.fail("Expected exception of type java.net.ConnectException; message: Connection refused (Connection refused)");
        } catch (java.net.ConnectException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(okResponseCache6);
        org.junit.Assert.assertNull(okAuthenticator8);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNotNull(connectionPool15);
        org.junit.Assert.assertNotNull(okHttpClient17);
// flaky:         org.junit.Assert.assertNull(proxySelector18);
        org.junit.Assert.assertNotNull(sSLSocketFactory19);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(socket25);
        org.junit.Assert.assertEquals(socket25.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(socket26);
        org.junit.Assert.assertEquals(socket26.toString(), "Socket[unconnected]");
    }

    @Test
    public void test07440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07440");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.OkAuthenticator okAuthenticator12 = okHttpClient11.getAuthenticator();
        java.net.ProxySelector proxySelector13 = okHttpClient11.getProxySelector();
        java.net.ResponseCache responseCache14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient11.setResponseCache(responseCache14);
        java.net.Proxy proxy16 = java.net.Proxy.NO_PROXY;
        boolean boolean18 = proxy16.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type19 = proxy16.type();
        java.net.SocketAddress socketAddress20 = proxy16.address();
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient15.setProxy(proxy16);
        java.net.Proxy proxy22 = java.net.Proxy.NO_PROXY;
        boolean boolean24 = proxy22.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type25 = proxy22.type();
        java.net.Proxy.Type type26 = proxy22.type();
        boolean boolean27 = proxy16.equals((java.lang.Object) proxy22);
        java.lang.String str28 = proxy22.toString();
        java.net.Proxy.Type type29 = proxy22.type();
        java.lang.String str30 = proxy22.toString();
        java.net.Proxy.Type type31 = proxy22.type();
        java.lang.String str32 = proxy22.toString();
        java.net.Proxy.Type type33 = proxy22.type();
        com.squareup.okhttp.OkHttpClient okHttpClient34 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier35 = null;
        okHttpClient34.hostnameVerifier = hostnameVerifier35;
        java.net.ProxySelector proxySelector37 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient34.setProxySelector(proxySelector37);
        java.net.CookieHandler cookieHandler39 = okHttpClient34.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient40 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier41 = null;
        okHttpClient40.hostnameVerifier = hostnameVerifier41;
        java.net.ResponseCache responseCache43 = null;
        okHttpClient40.responseCache = responseCache43;
        java.util.List<java.lang.String> strList45 = okHttpClient40.transports;
        com.squareup.okhttp.ConnectionPool connectionPool46 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient40.connectionPool = connectionPool46;
        java.net.Proxy proxy48 = null;
        okHttpClient40.proxy = proxy48;
        java.util.Set<com.squareup.okhttp.Route> routeSet50 = okHttpClient40.failedRoutes;
        okHttpClient34.failedRoutes = routeSet50;
        javax.net.ssl.HostnameVerifier hostnameVerifier52 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient53 = okHttpClient34.setHostnameVerifier(hostnameVerifier52);
        java.net.ProxySelector proxySelector54 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient55 = okHttpClient53.setProxySelector(proxySelector54);
        boolean boolean56 = proxy22.equals((java.lang.Object) okHttpClient55);
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(okAuthenticator12);
        org.junit.Assert.assertNull(proxySelector13);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNotNull(proxy16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + type19 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type19.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress20);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNotNull(proxy22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + type25 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type25.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertTrue("'" + type26 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type26.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "DIRECT" + "'", str28, "DIRECT");
        org.junit.Assert.assertTrue("'" + type29 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type29.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "DIRECT" + "'", str30, "DIRECT");
        org.junit.Assert.assertTrue("'" + type31 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type31.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "DIRECT" + "'", str32, "DIRECT");
        org.junit.Assert.assertTrue("'" + type33 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type33.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNull(cookieHandler39);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNotNull(connectionPool46);
        org.junit.Assert.assertNotNull(routeSet50);
        org.junit.Assert.assertNotNull(okHttpClient53);
        org.junit.Assert.assertNotNull(okHttpClient55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test07441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07441");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory6 = okHttpClient0.sslSocketFactory;
        java.net.CookieHandler cookieHandler7 = okHttpClient0.cookieHandler;
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = okHttpClient0.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool10 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient9.connectionPool = connectionPool10;
        com.squareup.okhttp.OkAuthenticator okAuthenticator12 = null;
        okHttpClient9.authenticator = okAuthenticator12;
        java.util.List<java.lang.String> strList14 = okHttpClient9.transports;
        java.net.ResponseCache responseCache15 = null;
        okHttpClient9.responseCache = responseCache15;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = null;
        okHttpClient17.hostnameVerifier = hostnameVerifier18;
        java.net.ResponseCache responseCache20 = null;
        okHttpClient17.responseCache = responseCache20;
        javax.net.ssl.HostnameVerifier hostnameVerifier22 = okHttpClient17.hostnameVerifier;
        java.net.Proxy proxy23 = okHttpClient17.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool26 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient17.connectionPool = connectionPool26;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient17.copyWithDefaults();
        java.net.Proxy proxy29 = okHttpClient28.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = okHttpClient28.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient9.setHostnameVerifier(hostnameVerifier30);
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient0.setHostnameVerifier(hostnameVerifier30);
        boolean boolean33 = okHttpClient32.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient34 = new com.squareup.okhttp.OkHttpClient(okHttpClient32);
        java.net.ResponseCache responseCache35 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient34.setResponseCache(responseCache35);
        java.net.Proxy proxy37 = null;
        okHttpClient36.proxy = proxy37;
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(sSLSocketFactory6);
        org.junit.Assert.assertNull(cookieHandler7);
        org.junit.Assert.assertNull(hostnameVerifier8);
        org.junit.Assert.assertNotNull(connectionPool10);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(hostnameVerifier22);
        org.junit.Assert.assertNull(proxy23);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNull(proxy29);
        org.junit.Assert.assertNotNull(hostnameVerifier30);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(okHttpClient36);
    }

    @Test
    public void test07442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07442");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory5 = null;
        okHttpClient0.sslSocketFactory = sSLSocketFactory5;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = null;
        okHttpClient7.hostnameVerifier = hostnameVerifier8;
        java.net.ResponseCache responseCache10 = null;
        okHttpClient7.responseCache = responseCache10;
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = okHttpClient7.hostnameVerifier;
        java.net.Proxy proxy13 = okHttpClient7.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool16 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient7.connectionPool = connectionPool16;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient7.copyWithDefaults();
        java.net.ResponseCache responseCache19 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient18.setResponseCache(responseCache19);
        com.squareup.okhttp.ConnectionPool connectionPool21 = okHttpClient18.connectionPool;
        okHttpClient0.connectionPool = connectionPool21;
        java.net.CookieHandler cookieHandler23 = null;
        okHttpClient0.cookieHandler = cookieHandler23;
        org.junit.Assert.assertNull(hostnameVerifier12);
        org.junit.Assert.assertNull(proxy13);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNotNull(connectionPool21);
    }

    @Test
    public void test07443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07443");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.ConnectionPool connectionPool12 = okHttpClient0.connectionPool;
        java.util.List<java.lang.String> strList13 = okHttpClient0.getTransports();
        java.net.ProxySelector proxySelector14 = okHttpClient0.proxySelector;
        java.net.CookieHandler cookieHandler15 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient16 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier17 = null;
        okHttpClient16.hostnameVerifier = hostnameVerifier17;
        java.net.ProxySelector proxySelector19 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient16.setProxySelector(proxySelector19);
        java.net.CookieHandler cookieHandler21 = okHttpClient16.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier23 = null;
        okHttpClient22.hostnameVerifier = hostnameVerifier23;
        java.net.ResponseCache responseCache25 = null;
        okHttpClient22.responseCache = responseCache25;
        java.util.List<java.lang.String> strList27 = okHttpClient22.transports;
        com.squareup.okhttp.ConnectionPool connectionPool28 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient22.connectionPool = connectionPool28;
        java.net.Proxy proxy30 = null;
        okHttpClient22.proxy = proxy30;
        java.util.Set<com.squareup.okhttp.Route> routeSet32 = okHttpClient22.failedRoutes;
        okHttpClient16.failedRoutes = routeSet32;
        javax.net.ssl.HostnameVerifier hostnameVerifier34 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient16.setHostnameVerifier(hostnameVerifier34);
        java.net.ProxySelector proxySelector36 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient35.setProxySelector(proxySelector36);
        com.squareup.okhttp.OkHttpClient okHttpClient38 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache39 = okHttpClient38.okResponseCache();
        java.net.ResponseCache responseCache40 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient41 = okHttpClient38.setResponseCache(responseCache40);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory42 = okHttpClient38.sslSocketFactory;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory43 = okHttpClient38.sslSocketFactory;
        com.squareup.okhttp.OkHttpClient okHttpClient44 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier45 = null;
        okHttpClient44.hostnameVerifier = hostnameVerifier45;
        boolean boolean47 = okHttpClient44.getFollowProtocolRedirects();
        java.net.CookieHandler cookieHandler48 = okHttpClient44.cookieHandler;
        com.squareup.okhttp.OkHttpClient okHttpClient49 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier50 = null;
        okHttpClient49.hostnameVerifier = hostnameVerifier50;
        java.net.ResponseCache responseCache52 = null;
        okHttpClient49.responseCache = responseCache52;
        javax.net.ssl.HostnameVerifier hostnameVerifier54 = okHttpClient49.hostnameVerifier;
        java.net.Proxy proxy55 = okHttpClient49.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool58 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient49.connectionPool = connectionPool58;
        com.squareup.okhttp.OkHttpClient okHttpClient60 = okHttpClient49.copyWithDefaults();
        java.net.ResponseCache responseCache61 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient62 = okHttpClient60.setResponseCache(responseCache61);
        com.squareup.okhttp.OkAuthenticator okAuthenticator63 = okHttpClient60.authenticator;
        okHttpClient44.authenticator = okAuthenticator63;
        com.squareup.okhttp.OkHttpClient okHttpClient65 = okHttpClient38.setAuthenticator(okAuthenticator63);
        com.squareup.okhttp.OkHttpClient okHttpClient66 = okHttpClient37.setAuthenticator(okAuthenticator63);
        com.squareup.okhttp.OkHttpClient okHttpClient67 = okHttpClient0.setAuthenticator(okAuthenticator63);
        java.util.List<java.lang.String> strList68 = okHttpClient67.transports;
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNull(proxySelector14);
        org.junit.Assert.assertNull(cookieHandler15);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNull(cookieHandler21);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNotNull(connectionPool28);
        org.junit.Assert.assertNotNull(routeSet32);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNotNull(okHttpClient37);
        org.junit.Assert.assertNull(okResponseCache39);
        org.junit.Assert.assertNotNull(okHttpClient41);
        org.junit.Assert.assertNull(sSLSocketFactory42);
        org.junit.Assert.assertNull(sSLSocketFactory43);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(cookieHandler48);
        org.junit.Assert.assertNull(hostnameVerifier54);
        org.junit.Assert.assertNull(proxy55);
        org.junit.Assert.assertNotNull(okHttpClient60);
        org.junit.Assert.assertNotNull(okHttpClient62);
        org.junit.Assert.assertNotNull(okAuthenticator63);
        org.junit.Assert.assertNotNull(okHttpClient65);
        org.junit.Assert.assertNotNull(okHttpClient66);
        org.junit.Assert.assertNotNull(okHttpClient67);
        org.junit.Assert.assertNull(strList68);
    }

    @Test
    public void test07444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07444");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.ConnectionPool connectionPool12 = okHttpClient11.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator13 = okHttpClient11.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool16 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient11.connectionPool = connectionPool16;
        java.net.ResponseCache responseCache18 = okHttpClient11.responseCache;
        com.squareup.okhttp.ConnectionPool connectionPool21 = new com.squareup.okhttp.ConnectionPool((int) (byte) 0, 10L);
        okHttpClient11.connectionPool = connectionPool21;
        com.squareup.okhttp.ConnectionPool connectionPool25 = new com.squareup.okhttp.ConnectionPool((int) (byte) 10, 0L);
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient11.setConnectionPool(connectionPool25);
        com.squareup.okhttp.OkHttpClient okHttpClient27 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier28 = null;
        okHttpClient27.hostnameVerifier = hostnameVerifier28;
        java.net.ProxySelector proxySelector30 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient27.setProxySelector(proxySelector30);
        java.net.ResponseCache responseCache32 = null;
        okHttpClient31.responseCache = responseCache32;
        com.squareup.okhttp.OkHttpClient okHttpClient34 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier35 = null;
        okHttpClient34.hostnameVerifier = hostnameVerifier35;
        java.net.ResponseCache responseCache37 = null;
        okHttpClient34.responseCache = responseCache37;
        java.util.List<java.lang.String> strList39 = okHttpClient34.transports;
        com.squareup.okhttp.ConnectionPool connectionPool40 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient34.connectionPool = connectionPool40;
        java.net.CookieHandler cookieHandler42 = okHttpClient34.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache43 = okHttpClient34.okResponseCache();
        java.net.CookieHandler cookieHandler44 = okHttpClient34.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient45 = new com.squareup.okhttp.OkHttpClient(okHttpClient34);
        java.net.Proxy proxy46 = java.net.Proxy.NO_PROXY;
        boolean boolean48 = proxy46.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type49 = proxy46.type();
        java.net.SocketAddress socketAddress50 = proxy46.address();
        com.squareup.okhttp.OkHttpClient okHttpClient51 = okHttpClient34.setProxy(proxy46);
        com.squareup.okhttp.OkHttpClient okHttpClient52 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier53 = null;
        okHttpClient52.hostnameVerifier = hostnameVerifier53;
        java.net.ResponseCache responseCache55 = null;
        okHttpClient52.responseCache = responseCache55;
        java.util.List<java.lang.String> strList57 = okHttpClient52.transports;
        com.squareup.okhttp.ConnectionPool connectionPool58 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient52.connectionPool = connectionPool58;
        com.squareup.okhttp.OkHttpClient okHttpClient60 = okHttpClient52.copyWithDefaults();
        java.net.ProxySelector proxySelector61 = okHttpClient60.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory62 = okHttpClient60.getSslSocketFactory();
        okHttpClient51.sslSocketFactory = sSLSocketFactory62;
        java.lang.String[] strArray64 = sSLSocketFactory62.getDefaultCipherSuites();
        java.lang.String[] strArray65 = sSLSocketFactory62.getSupportedCipherSuites();
        java.net.Socket socket66 = sSLSocketFactory62.createSocket();
        okHttpClient31.sslSocketFactory = sSLSocketFactory62;
        okHttpClient11.sslSocketFactory = sSLSocketFactory62;
        java.net.Socket socket69 = sSLSocketFactory62.createSocket();
        java.net.InetAddress inetAddress70 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket72 = sSLSocketFactory62.createSocket(inetAddress70, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.net.ConnectException; message: Connection refused (Connection refused)");
        } catch (java.net.ConnectException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNull(okAuthenticator13);
        org.junit.Assert.assertNull(responseCache18);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNotNull(connectionPool40);
        org.junit.Assert.assertNull(cookieHandler42);
        org.junit.Assert.assertNull(okResponseCache43);
        org.junit.Assert.assertNull(cookieHandler44);
        org.junit.Assert.assertNotNull(proxy46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + type49 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type49.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress50);
        org.junit.Assert.assertNotNull(okHttpClient51);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNotNull(connectionPool58);
        org.junit.Assert.assertNotNull(okHttpClient60);
// flaky:         org.junit.Assert.assertNull(proxySelector61);
        org.junit.Assert.assertNotNull(sSLSocketFactory62);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(socket66);
        org.junit.Assert.assertEquals(socket66.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(socket69);
        org.junit.Assert.assertEquals(socket69.toString(), "Socket[unconnected]");
    }

    @Test
    public void test07445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07445");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory6 = okHttpClient0.sslSocketFactory;
        java.net.CookieHandler cookieHandler7 = okHttpClient0.cookieHandler;
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = okHttpClient0.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool10 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient9.connectionPool = connectionPool10;
        com.squareup.okhttp.OkAuthenticator okAuthenticator12 = null;
        okHttpClient9.authenticator = okAuthenticator12;
        java.util.List<java.lang.String> strList14 = okHttpClient9.transports;
        java.net.ResponseCache responseCache15 = null;
        okHttpClient9.responseCache = responseCache15;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = null;
        okHttpClient17.hostnameVerifier = hostnameVerifier18;
        java.net.ResponseCache responseCache20 = null;
        okHttpClient17.responseCache = responseCache20;
        javax.net.ssl.HostnameVerifier hostnameVerifier22 = okHttpClient17.hostnameVerifier;
        java.net.Proxy proxy23 = okHttpClient17.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool26 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient17.connectionPool = connectionPool26;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient17.copyWithDefaults();
        java.net.Proxy proxy29 = okHttpClient28.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = okHttpClient28.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient9.setHostnameVerifier(hostnameVerifier30);
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient0.setHostnameVerifier(hostnameVerifier30);
        java.net.Proxy proxy33 = okHttpClient32.proxy;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory34 = okHttpClient32.sslSocketFactory;
        java.net.CookieHandler cookieHandler35 = null;
        okHttpClient32.cookieHandler = cookieHandler35;
        com.squareup.okhttp.ConnectionPool connectionPool37 = okHttpClient32.getConnectionPool();
        javax.net.ssl.HostnameVerifier hostnameVerifier38 = okHttpClient32.hostnameVerifier;
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(sSLSocketFactory6);
        org.junit.Assert.assertNull(cookieHandler7);
        org.junit.Assert.assertNull(hostnameVerifier8);
        org.junit.Assert.assertNotNull(connectionPool10);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(hostnameVerifier22);
        org.junit.Assert.assertNull(proxy23);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNull(proxy29);
        org.junit.Assert.assertNotNull(hostnameVerifier30);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertNull(proxy33);
        org.junit.Assert.assertNull(sSLSocketFactory34);
        org.junit.Assert.assertNull(connectionPool37);
        org.junit.Assert.assertNotNull(hostnameVerifier38);
    }

    @Test
    public void test07446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07446");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        java.net.Proxy proxy6 = java.net.Proxy.NO_PROXY;
        boolean boolean8 = proxy6.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type9 = proxy6.type();
        java.net.SocketAddress socketAddress10 = proxy6.address();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setProxy(proxy6);
        java.net.SocketAddress socketAddress12 = proxy6.address();
        java.net.Proxy.Type type13 = proxy6.type();
        java.net.Proxy.Type type14 = proxy6.type();
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier16 = null;
        okHttpClient15.hostnameVerifier = hostnameVerifier16;
        java.net.ResponseCache responseCache18 = null;
        okHttpClient15.responseCache = responseCache18;
        javax.net.ssl.HostnameVerifier hostnameVerifier20 = okHttpClient15.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient15.setFollowProtocolRedirects(false);
        java.net.Proxy proxy23 = okHttpClient15.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier24 = okHttpClient15.getHostnameVerifier();
        java.util.Set<com.squareup.okhttp.Route> routeSet25 = okHttpClient15.failedRoutes;
        com.squareup.okhttp.ConnectionPool connectionPool28 = new com.squareup.okhttp.ConnectionPool((int) '4', (long) (short) 10);
        int int29 = connectionPool28.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient30 = okHttpClient15.setConnectionPool(connectionPool28);
        boolean boolean31 = proxy6.equals((java.lang.Object) okHttpClient15);
        java.net.CookieHandler cookieHandler32 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient15.setCookieHandler(cookieHandler32);
        javax.net.ssl.HostnameVerifier hostnameVerifier34 = okHttpClient33.hostnameVerifier;
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(proxy6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + type9 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type9.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress10);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(socketAddress12);
        org.junit.Assert.assertTrue("'" + type13 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type13.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertTrue("'" + type14 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type14.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(hostnameVerifier20);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNull(proxy23);
        org.junit.Assert.assertNull(hostnameVerifier24);
        org.junit.Assert.assertNotNull(routeSet25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(okHttpClient30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(okHttpClient33);
        org.junit.Assert.assertNull(hostnameVerifier34);
    }

    @Test
    public void test07447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07447");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        javax.net.ssl.HostnameVerifier hostnameVerifier6 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier6;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache8 = okHttpClient0.okResponseCache();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory9 = okHttpClient0.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient10 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier11 = null;
        okHttpClient10.hostnameVerifier = hostnameVerifier11;
        java.net.ResponseCache responseCache13 = null;
        okHttpClient10.responseCache = responseCache13;
        javax.net.ssl.HostnameVerifier hostnameVerifier15 = okHttpClient10.hostnameVerifier;
        java.net.Proxy proxy16 = okHttpClient10.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool19 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient10.connectionPool = connectionPool19;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient10.copyWithDefaults();
        java.net.Proxy proxy22 = okHttpClient21.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier23 = okHttpClient21.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient0.setHostnameVerifier(hostnameVerifier23);
        java.net.CookieHandler cookieHandler25 = okHttpClient24.getCookieHandler();
        java.util.List<java.lang.String> strList26 = okHttpClient24.getTransports();
        javax.net.ssl.HostnameVerifier hostnameVerifier27 = okHttpClient24.hostnameVerifier;
        com.squareup.okhttp.ConnectionPool connectionPool28 = okHttpClient24.getConnectionPool();
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNull(okResponseCache8);
        org.junit.Assert.assertNull(sSLSocketFactory9);
        org.junit.Assert.assertNull(hostnameVerifier15);
        org.junit.Assert.assertNull(proxy16);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNull(proxy22);
        org.junit.Assert.assertNotNull(hostnameVerifier23);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNull(cookieHandler25);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNotNull(hostnameVerifier27);
        org.junit.Assert.assertNull(connectionPool28);
    }

    @Test
    public void test07448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07448");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.CookieHandler cookieHandler8 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache9 = okHttpClient0.okResponseCache();
        java.net.CookieHandler cookieHandler10 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory12 = okHttpClient11.sslSocketFactory;
        java.net.Proxy proxy13 = okHttpClient11.proxy;
        com.squareup.okhttp.ConnectionPool connectionPool14 = okHttpClient11.getConnectionPool();
        java.net.ProxySelector proxySelector15 = okHttpClient11.proxySelector;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier17 = null;
        okHttpClient16.hostnameVerifier = hostnameVerifier17;
        java.net.ResponseCache responseCache19 = null;
        okHttpClient16.responseCache = responseCache19;
        java.util.List<java.lang.String> strList21 = okHttpClient16.transports;
        com.squareup.okhttp.ConnectionPool connectionPool22 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient16.connectionPool = connectionPool22;
        java.net.Proxy proxy24 = null;
        okHttpClient16.proxy = proxy24;
        boolean boolean26 = okHttpClient16.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache28 = okHttpClient27.okResponseCache();
        java.net.ResponseCache responseCache29 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient30 = okHttpClient27.setResponseCache(responseCache29);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        okHttpClient27.transports = strList33;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory36 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient27.setSSLSocketFactory(sSLSocketFactory36);
        com.squareup.okhttp.OkHttpClient okHttpClient38 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier39 = null;
        okHttpClient38.hostnameVerifier = hostnameVerifier39;
        java.net.ResponseCache responseCache41 = null;
        okHttpClient38.responseCache = responseCache41;
        javax.net.ssl.HostnameVerifier hostnameVerifier43 = okHttpClient38.hostnameVerifier;
        java.net.Proxy proxy44 = okHttpClient38.getProxy();
        java.net.CookieHandler cookieHandler45 = null;
        okHttpClient38.cookieHandler = cookieHandler45;
        okHttpClient38.followProtocolRedirects = true;
        com.squareup.okhttp.OkHttpClient okHttpClient49 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier50 = null;
        okHttpClient49.hostnameVerifier = hostnameVerifier50;
        java.net.ResponseCache responseCache52 = null;
        okHttpClient49.responseCache = responseCache52;
        javax.net.ssl.HostnameVerifier hostnameVerifier54 = okHttpClient49.hostnameVerifier;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory55 = okHttpClient49.sslSocketFactory;
        java.net.CookieHandler cookieHandler56 = okHttpClient49.cookieHandler;
        javax.net.ssl.HostnameVerifier hostnameVerifier57 = okHttpClient49.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient58 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool59 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient58.connectionPool = connectionPool59;
        com.squareup.okhttp.OkAuthenticator okAuthenticator61 = null;
        okHttpClient58.authenticator = okAuthenticator61;
        java.util.List<java.lang.String> strList63 = okHttpClient58.transports;
        java.net.ResponseCache responseCache64 = null;
        okHttpClient58.responseCache = responseCache64;
        com.squareup.okhttp.OkHttpClient okHttpClient66 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier67 = null;
        okHttpClient66.hostnameVerifier = hostnameVerifier67;
        java.net.ResponseCache responseCache69 = null;
        okHttpClient66.responseCache = responseCache69;
        javax.net.ssl.HostnameVerifier hostnameVerifier71 = okHttpClient66.hostnameVerifier;
        java.net.Proxy proxy72 = okHttpClient66.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool75 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient66.connectionPool = connectionPool75;
        com.squareup.okhttp.OkHttpClient okHttpClient77 = okHttpClient66.copyWithDefaults();
        java.net.Proxy proxy78 = okHttpClient77.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier79 = okHttpClient77.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient80 = okHttpClient58.setHostnameVerifier(hostnameVerifier79);
        com.squareup.okhttp.OkHttpClient okHttpClient81 = okHttpClient49.setHostnameVerifier(hostnameVerifier79);
        okHttpClient38.hostnameVerifier = hostnameVerifier79;
        com.squareup.okhttp.OkHttpClient okHttpClient83 = okHttpClient27.setHostnameVerifier(hostnameVerifier79);
        com.squareup.okhttp.OkHttpClient okHttpClient84 = okHttpClient16.setHostnameVerifier(hostnameVerifier79);
        javax.net.ssl.HostnameVerifier hostnameVerifier85 = okHttpClient84.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient86 = okHttpClient11.setHostnameVerifier(hostnameVerifier85);
        java.net.CookieHandler cookieHandler87 = okHttpClient11.getCookieHandler();
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNull(cookieHandler8);
        org.junit.Assert.assertNull(okResponseCache9);
        org.junit.Assert.assertNull(cookieHandler10);
        org.junit.Assert.assertNull(sSLSocketFactory12);
        org.junit.Assert.assertNull(proxy13);
        org.junit.Assert.assertNull(connectionPool14);
        org.junit.Assert.assertNull(proxySelector15);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(connectionPool22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(okResponseCache28);
        org.junit.Assert.assertNotNull(okHttpClient30);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(okHttpClient37);
        org.junit.Assert.assertNull(hostnameVerifier43);
        org.junit.Assert.assertNull(proxy44);
        org.junit.Assert.assertNull(hostnameVerifier54);
        org.junit.Assert.assertNull(sSLSocketFactory55);
        org.junit.Assert.assertNull(cookieHandler56);
        org.junit.Assert.assertNull(hostnameVerifier57);
        org.junit.Assert.assertNotNull(connectionPool59);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNull(hostnameVerifier71);
        org.junit.Assert.assertNull(proxy72);
        org.junit.Assert.assertNotNull(okHttpClient77);
        org.junit.Assert.assertNull(proxy78);
        org.junit.Assert.assertNotNull(hostnameVerifier79);
        org.junit.Assert.assertNotNull(okHttpClient80);
        org.junit.Assert.assertNotNull(okHttpClient81);
        org.junit.Assert.assertNotNull(okHttpClient83);
        org.junit.Assert.assertNotNull(okHttpClient84);
        org.junit.Assert.assertNotNull(hostnameVerifier85);
        org.junit.Assert.assertNotNull(okHttpClient86);
        org.junit.Assert.assertNull(cookieHandler87);
    }

    @Test
    public void test07449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07449");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.OkAuthenticator okAuthenticator12 = okHttpClient11.getAuthenticator();
        java.net.ProxySelector proxySelector13 = okHttpClient11.getProxySelector();
        java.net.ResponseCache responseCache14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient11.setResponseCache(responseCache14);
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache16 = okHttpClient15.okResponseCache();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory17 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient15.setSSLSocketFactory(sSLSocketFactory17);
        java.net.ProxySelector proxySelector19 = okHttpClient18.getProxySelector();
        java.net.CookieHandler cookieHandler20 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient18.setCookieHandler(cookieHandler20);
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient(okHttpClient21);
        com.squareup.okhttp.OkHttpClient okHttpClient23 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier24 = null;
        okHttpClient23.hostnameVerifier = hostnameVerifier24;
        java.net.ProxySelector proxySelector26 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient23.setProxySelector(proxySelector26);
        java.net.ResponseCache responseCache28 = null;
        okHttpClient27.responseCache = responseCache28;
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = okHttpClient27.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool32 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient31.connectionPool = connectionPool32;
        com.squareup.okhttp.OkHttpClient okHttpClient34 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier35 = null;
        okHttpClient34.hostnameVerifier = hostnameVerifier35;
        java.net.ResponseCache responseCache37 = null;
        okHttpClient34.responseCache = responseCache37;
        java.util.List<java.lang.String> strList39 = okHttpClient34.transports;
        com.squareup.okhttp.ConnectionPool connectionPool40 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient34.connectionPool = connectionPool40;
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient31.setConnectionPool(connectionPool40);
        com.squareup.okhttp.ConnectionPool connectionPool43 = okHttpClient42.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator44 = okHttpClient42.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool47 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient42.connectionPool = connectionPool47;
        java.net.ResponseCache responseCache49 = okHttpClient42.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory50 = okHttpClient42.sslSocketFactory;
        java.net.Proxy proxy51 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress52 = proxy51.address();
        com.squareup.okhttp.OkHttpClient okHttpClient53 = okHttpClient42.setProxy(proxy51);
        com.squareup.okhttp.OkHttpClient okHttpClient54 = new com.squareup.okhttp.OkHttpClient(okHttpClient53);
        com.squareup.okhttp.OkHttpClient okHttpClient55 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier56 = null;
        okHttpClient55.hostnameVerifier = hostnameVerifier56;
        java.net.ResponseCache responseCache58 = null;
        okHttpClient55.responseCache = responseCache58;
        java.util.List<java.lang.String> strList60 = okHttpClient55.transports;
        com.squareup.okhttp.ConnectionPool connectionPool61 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient55.connectionPool = connectionPool61;
        com.squareup.okhttp.OkHttpClient okHttpClient63 = okHttpClient55.copyWithDefaults();
        java.net.ProxySelector proxySelector64 = okHttpClient63.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory65 = okHttpClient63.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient66 = okHttpClient53.setSSLSocketFactory(sSLSocketFactory65);
        com.squareup.okhttp.OkHttpClient okHttpClient67 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier68 = null;
        okHttpClient67.hostnameVerifier = hostnameVerifier68;
        java.net.ProxySelector proxySelector70 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient71 = okHttpClient67.setProxySelector(proxySelector70);
        com.squareup.okhttp.OkHttpClient okHttpClient72 = okHttpClient71.copyWithDefaults();
        java.net.ProxySelector proxySelector73 = null;
        okHttpClient72.proxySelector = proxySelector73;
        com.squareup.okhttp.OkAuthenticator okAuthenticator75 = okHttpClient72.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient76 = okHttpClient53.setAuthenticator(okAuthenticator75);
        com.squareup.okhttp.OkHttpClient okHttpClient77 = okHttpClient27.setAuthenticator(okAuthenticator75);
        com.squareup.okhttp.OkAuthenticator okAuthenticator78 = okHttpClient27.getAuthenticator();
        okHttpClient22.authenticator = okAuthenticator78;
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(okAuthenticator12);
        org.junit.Assert.assertNull(proxySelector13);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNull(okResponseCache16);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNull(proxySelector19);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNull(hostnameVerifier30);
        org.junit.Assert.assertNotNull(connectionPool32);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNotNull(connectionPool40);
        org.junit.Assert.assertNotNull(okHttpClient42);
        org.junit.Assert.assertNotNull(connectionPool43);
        org.junit.Assert.assertNull(okAuthenticator44);
        org.junit.Assert.assertNull(responseCache49);
        org.junit.Assert.assertNull(sSLSocketFactory50);
        org.junit.Assert.assertNotNull(proxy51);
        org.junit.Assert.assertNull(socketAddress52);
        org.junit.Assert.assertNotNull(okHttpClient53);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNotNull(connectionPool61);
        org.junit.Assert.assertNotNull(okHttpClient63);
// flaky:         org.junit.Assert.assertNull(proxySelector64);
        org.junit.Assert.assertNotNull(sSLSocketFactory65);
        org.junit.Assert.assertNotNull(okHttpClient66);
        org.junit.Assert.assertNotNull(okHttpClient71);
        org.junit.Assert.assertNotNull(okHttpClient72);
        org.junit.Assert.assertNotNull(okAuthenticator75);
        org.junit.Assert.assertNotNull(okHttpClient76);
        org.junit.Assert.assertNotNull(okHttpClient77);
        org.junit.Assert.assertNotNull(okAuthenticator78);
    }

    @Test
    public void test07450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07450");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache1 = okHttpClient0.okResponseCache();
        java.net.ResponseCache responseCache2 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.setResponseCache(responseCache2);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory4 = okHttpClient0.sslSocketFactory;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory5 = okHttpClient0.sslSocketFactory;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory6);
        com.squareup.okhttp.OkHttpClient okHttpClient8 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier9 = null;
        okHttpClient8.hostnameVerifier = hostnameVerifier9;
        java.net.ResponseCache responseCache11 = null;
        okHttpClient8.responseCache = responseCache11;
        java.util.List<java.lang.String> strList13 = okHttpClient8.transports;
        com.squareup.okhttp.ConnectionPool connectionPool14 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient8.connectionPool = connectionPool14;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient0.setConnectionPool(connectionPool14);
        java.net.CookieHandler cookieHandler17 = null;
        okHttpClient0.cookieHandler = cookieHandler17;
        java.net.CookieHandler cookieHandler19 = okHttpClient0.getCookieHandler();
        org.junit.Assert.assertNull(okResponseCache1);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertNull(sSLSocketFactory4);
        org.junit.Assert.assertNull(sSLSocketFactory5);
        org.junit.Assert.assertNotNull(okHttpClient7);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNotNull(connectionPool14);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNull(cookieHandler19);
    }

    @Test
    public void test07451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07451");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        boolean boolean3 = okHttpClient0.getFollowProtocolRedirects();
        java.net.CookieHandler cookieHandler4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setCookieHandler(cookieHandler4);
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache6 = okHttpClient0.okResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        com.squareup.okhttp.OkAuthenticator okAuthenticator8 = okHttpClient7.getAuthenticator();
        com.squareup.okhttp.OkHttpClient okHttpClient9 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier10 = null;
        okHttpClient9.hostnameVerifier = hostnameVerifier10;
        java.net.ResponseCache responseCache12 = null;
        okHttpClient9.responseCache = responseCache12;
        java.util.List<java.lang.String> strList14 = okHttpClient9.transports;
        com.squareup.okhttp.ConnectionPool connectionPool15 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient9.connectionPool = connectionPool15;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient9.copyWithDefaults();
        java.net.ProxySelector proxySelector18 = okHttpClient17.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory19 = okHttpClient17.getSslSocketFactory();
        okHttpClient7.sslSocketFactory = sSLSocketFactory19;
        java.lang.String[] strArray21 = sSLSocketFactory19.getSupportedCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier23 = null;
        okHttpClient22.hostnameVerifier = hostnameVerifier23;
        java.net.ResponseCache responseCache25 = null;
        okHttpClient22.responseCache = responseCache25;
        java.util.List<java.lang.String> strList27 = okHttpClient22.transports;
        com.squareup.okhttp.ConnectionPool connectionPool28 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient22.connectionPool = connectionPool28;
        com.squareup.okhttp.OkHttpClient okHttpClient30 = okHttpClient22.copyWithDefaults();
        boolean boolean31 = okHttpClient30.getFollowProtocolRedirects();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory32 = okHttpClient30.sslSocketFactory;
        java.lang.String[] strArray33 = sSLSocketFactory32.getDefaultCipherSuites();
        java.net.Socket socket34 = sSLSocketFactory32.createSocket();
        java.io.InputStream inputStream35 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket37 = sSLSocketFactory19.createSocket(socket34, inputStream35, false);
            org.junit.Assert.fail("Expected exception of type java.net.SocketException; message: Underlying socket is not connected");
        } catch (java.net.SocketException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(okResponseCache6);
        org.junit.Assert.assertNull(okAuthenticator8);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNotNull(connectionPool15);
        org.junit.Assert.assertNotNull(okHttpClient17);
// flaky:         org.junit.Assert.assertNull(proxySelector18);
        org.junit.Assert.assertNotNull(sSLSocketFactory19);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNotNull(connectionPool28);
        org.junit.Assert.assertNotNull(okHttpClient30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(sSLSocketFactory32);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(socket34);
        org.junit.Assert.assertEquals(socket34.toString(), "Socket[unconnected]");
    }

    @Test
    public void test07452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07452");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.Proxy proxy8 = null;
        okHttpClient0.proxy = proxy8;
        boolean boolean10 = okHttpClient0.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient0.setFollowProtocolRedirects(true);
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = null;
        okHttpClient13.hostnameVerifier = hostnameVerifier14;
        java.net.ResponseCache responseCache16 = null;
        okHttpClient13.responseCache = responseCache16;
        java.util.List<java.lang.String> strList18 = okHttpClient13.transports;
        javax.net.ssl.HostnameVerifier hostnameVerifier19 = null;
        okHttpClient13.hostnameVerifier = hostnameVerifier19;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache21 = okHttpClient13.okResponseCache();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory22 = okHttpClient13.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient23 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier24 = null;
        okHttpClient23.hostnameVerifier = hostnameVerifier24;
        java.net.ResponseCache responseCache26 = null;
        okHttpClient23.responseCache = responseCache26;
        javax.net.ssl.HostnameVerifier hostnameVerifier28 = okHttpClient23.hostnameVerifier;
        java.net.Proxy proxy29 = okHttpClient23.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool32 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient23.connectionPool = connectionPool32;
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient23.copyWithDefaults();
        java.net.Proxy proxy35 = okHttpClient34.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier36 = okHttpClient34.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient13.setHostnameVerifier(hostnameVerifier36);
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient12.setHostnameVerifier(hostnameVerifier36);
        boolean boolean39 = okHttpClient38.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient40 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool41 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient40.connectionPool = connectionPool41;
        com.squareup.okhttp.OkHttpClient okHttpClient43 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier44 = null;
        okHttpClient43.hostnameVerifier = hostnameVerifier44;
        java.net.ResponseCache responseCache46 = null;
        okHttpClient43.responseCache = responseCache46;
        java.util.List<java.lang.String> strList48 = okHttpClient43.transports;
        com.squareup.okhttp.ConnectionPool connectionPool49 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient43.connectionPool = connectionPool49;
        com.squareup.okhttp.OkHttpClient okHttpClient51 = okHttpClient40.setConnectionPool(connectionPool49);
        com.squareup.okhttp.ConnectionPool connectionPool52 = okHttpClient51.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator53 = okHttpClient51.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool56 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient51.connectionPool = connectionPool56;
        java.net.ResponseCache responseCache58 = okHttpClient51.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory59 = okHttpClient51.sslSocketFactory;
        java.net.Proxy proxy60 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress61 = proxy60.address();
        com.squareup.okhttp.OkHttpClient okHttpClient62 = okHttpClient51.setProxy(proxy60);
        com.squareup.okhttp.OkHttpClient okHttpClient63 = okHttpClient38.setProxy(proxy60);
        java.net.Proxy proxy64 = java.net.Proxy.NO_PROXY;
        boolean boolean66 = proxy64.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type67 = proxy64.type();
        com.squareup.okhttp.OkHttpClient okHttpClient68 = okHttpClient38.setProxy(proxy64);
        com.squareup.okhttp.OkHttpClient okHttpClient69 = new com.squareup.okhttp.OkHttpClient(okHttpClient68);
        javax.net.ssl.HostnameVerifier hostnameVerifier70 = okHttpClient68.getHostnameVerifier();
        java.net.ProxySelector proxySelector71 = okHttpClient68.getProxySelector();
        boolean boolean72 = okHttpClient68.getFollowProtocolRedirects();
        java.net.ResponseCache responseCache73 = okHttpClient68.responseCache;
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(okResponseCache21);
        org.junit.Assert.assertNull(sSLSocketFactory22);
        org.junit.Assert.assertNull(hostnameVerifier28);
        org.junit.Assert.assertNull(proxy29);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertNull(proxy35);
        org.junit.Assert.assertNotNull(hostnameVerifier36);
        org.junit.Assert.assertNotNull(okHttpClient37);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(connectionPool41);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNotNull(connectionPool49);
        org.junit.Assert.assertNotNull(okHttpClient51);
        org.junit.Assert.assertNotNull(connectionPool52);
        org.junit.Assert.assertNull(okAuthenticator53);
        org.junit.Assert.assertNull(responseCache58);
        org.junit.Assert.assertNull(sSLSocketFactory59);
        org.junit.Assert.assertNotNull(proxy60);
        org.junit.Assert.assertNull(socketAddress61);
        org.junit.Assert.assertNotNull(okHttpClient62);
        org.junit.Assert.assertNotNull(okHttpClient63);
        org.junit.Assert.assertNotNull(proxy64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + type67 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type67.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNotNull(okHttpClient68);
        org.junit.Assert.assertNotNull(hostnameVerifier70);
        org.junit.Assert.assertNull(proxySelector71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNull(responseCache73);
    }

    @Test
    public void test07453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07453");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.CookieHandler cookieHandler8 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache9 = okHttpClient0.okResponseCache();
        java.net.CookieHandler cookieHandler10 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        java.net.Proxy proxy12 = java.net.Proxy.NO_PROXY;
        boolean boolean14 = proxy12.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type15 = proxy12.type();
        java.net.SocketAddress socketAddress16 = proxy12.address();
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient0.setProxy(proxy12);
        java.lang.String[] strArray19 = new java.lang.String[] { "DIRECT" };
        java.util.ArrayList<java.lang.String> strList20 = new java.util.ArrayList<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList20, strArray19);
        okHttpClient0.transports = strList20;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient0.setFollowProtocolRedirects(false);
        com.squareup.okhttp.ConnectionPool connectionPool27 = new com.squareup.okhttp.ConnectionPool((int) '#', (long) (short) 100);
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient24.setConnectionPool(connectionPool27);
        java.net.CookieHandler cookieHandler29 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient30 = okHttpClient28.setCookieHandler(cookieHandler29);
        java.net.ResponseCache responseCache31 = okHttpClient30.responseCache;
        java.net.Proxy proxy32 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress33 = proxy32.address();
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient30.setProxy(proxy32);
        java.util.List<java.lang.String> strList35 = okHttpClient34.transports;
        java.util.List<java.lang.String> strList36 = okHttpClient34.getTransports();
        com.squareup.okhttp.OkHttpClient okHttpClient37 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier38 = null;
        okHttpClient37.hostnameVerifier = hostnameVerifier38;
        java.net.ResponseCache responseCache40 = null;
        okHttpClient37.responseCache = responseCache40;
        java.util.List<java.lang.String> strList42 = okHttpClient37.transports;
        java.net.Proxy proxy43 = java.net.Proxy.NO_PROXY;
        boolean boolean45 = proxy43.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type46 = proxy43.type();
        java.net.SocketAddress socketAddress47 = proxy43.address();
        com.squareup.okhttp.OkHttpClient okHttpClient48 = okHttpClient37.setProxy(proxy43);
        java.net.SocketAddress socketAddress49 = proxy43.address();
        java.net.Proxy.Type type50 = proxy43.type();
        com.squareup.okhttp.OkHttpClient okHttpClient51 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier52 = null;
        okHttpClient51.hostnameVerifier = hostnameVerifier52;
        java.net.ProxySelector proxySelector54 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient55 = okHttpClient51.setProxySelector(proxySelector54);
        java.net.Proxy proxy56 = okHttpClient55.getProxy();
        java.util.List<java.lang.String> strList57 = okHttpClient55.getTransports();
        java.net.ResponseCache responseCache58 = null;
        okHttpClient55.responseCache = responseCache58;
        boolean boolean60 = proxy43.equals((java.lang.Object) responseCache58);
        java.net.Proxy.Type type61 = proxy43.type();
        okHttpClient34.proxy = proxy43;
        java.lang.String str63 = proxy43.toString();
        java.lang.String str64 = proxy43.toString();
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNull(cookieHandler8);
        org.junit.Assert.assertNull(okResponseCache9);
        org.junit.Assert.assertNull(cookieHandler10);
        org.junit.Assert.assertNotNull(proxy12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + type15 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type15.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress16);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNotNull(okHttpClient30);
        org.junit.Assert.assertNull(responseCache31);
        org.junit.Assert.assertNotNull(proxy32);
        org.junit.Assert.assertNull(socketAddress33);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNotNull(proxy43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + type46 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type46.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress47);
        org.junit.Assert.assertNotNull(okHttpClient48);
        org.junit.Assert.assertNull(socketAddress49);
        org.junit.Assert.assertTrue("'" + type50 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type50.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNotNull(okHttpClient55);
        org.junit.Assert.assertNull(proxy56);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + type61 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type61.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "DIRECT" + "'", str63, "DIRECT");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "DIRECT" + "'", str64, "DIRECT");
    }

    @Test
    public void test07454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07454");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.CookieHandler cookieHandler5 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = null;
        okHttpClient6.hostnameVerifier = hostnameVerifier7;
        java.net.ResponseCache responseCache9 = null;
        okHttpClient6.responseCache = responseCache9;
        java.util.List<java.lang.String> strList11 = okHttpClient6.transports;
        com.squareup.okhttp.ConnectionPool connectionPool12 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient6.connectionPool = connectionPool12;
        java.net.Proxy proxy14 = null;
        okHttpClient6.proxy = proxy14;
        java.util.Set<com.squareup.okhttp.Route> routeSet16 = okHttpClient6.failedRoutes;
        okHttpClient0.failedRoutes = routeSet16;
        java.net.ProxySelector proxySelector18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient0.setProxySelector(proxySelector18);
        com.squareup.okhttp.OkHttpClient okHttpClient20 = new com.squareup.okhttp.OkHttpClient(okHttpClient19);
        com.squareup.okhttp.OkAuthenticator okAuthenticator21 = okHttpClient20.authenticator;
        java.net.ProxySelector proxySelector22 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient20.setProxySelector(proxySelector22);
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient23.copyWithDefaults();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory25 = okHttpClient24.sslSocketFactory;
        java.net.CookieHandler cookieHandler26 = okHttpClient24.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient24.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient27.setFollowProtocolRedirects(false);
        com.squareup.okhttp.ConnectionPool connectionPool30 = okHttpClient29.getConnectionPool();
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNotNull(routeSet16);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNull(okAuthenticator21);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNotNull(sSLSocketFactory25);
        org.junit.Assert.assertNull(cookieHandler26);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNotNull(okHttpClient29);
        org.junit.Assert.assertNotNull(connectionPool30);
    }

    @Test
    public void test07455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07455");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.ConnectionPool connectionPool12 = okHttpClient11.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator13 = okHttpClient11.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool16 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient11.connectionPool = connectionPool16;
        java.net.ResponseCache responseCache18 = okHttpClient11.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory19 = okHttpClient11.sslSocketFactory;
        java.net.Proxy proxy20 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress21 = proxy20.address();
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient11.setProxy(proxy20);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory23 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient11.setSSLSocketFactory(sSLSocketFactory23);
        com.squareup.okhttp.OkHttpClient okHttpClient25 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier26 = null;
        okHttpClient25.hostnameVerifier = hostnameVerifier26;
        java.net.ResponseCache responseCache28 = null;
        okHttpClient25.responseCache = responseCache28;
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = okHttpClient25.hostnameVerifier;
        java.net.Proxy proxy31 = okHttpClient25.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool34 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient25.connectionPool = connectionPool34;
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient25.copyWithDefaults();
        java.net.ResponseCache responseCache37 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient36.setResponseCache(responseCache37);
        com.squareup.okhttp.OkAuthenticator okAuthenticator39 = okHttpClient36.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient40 = okHttpClient11.setAuthenticator(okAuthenticator39);
        java.net.Proxy proxy41 = okHttpClient40.getProxy();
        java.net.CookieHandler cookieHandler42 = okHttpClient40.cookieHandler;
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNull(okAuthenticator13);
        org.junit.Assert.assertNull(responseCache18);
        org.junit.Assert.assertNull(sSLSocketFactory19);
        org.junit.Assert.assertNotNull(proxy20);
        org.junit.Assert.assertNull(socketAddress21);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNull(hostnameVerifier30);
        org.junit.Assert.assertNull(proxy31);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNotNull(okAuthenticator39);
        org.junit.Assert.assertNotNull(okHttpClient40);
        org.junit.Assert.assertNotNull(proxy41);
        org.junit.Assert.assertNull(cookieHandler42);
    }

    @Test
    public void test07456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07456");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        okHttpClient0.authenticator = okAuthenticator3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient0.responseCache = responseCache6;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier9 = null;
        okHttpClient8.hostnameVerifier = hostnameVerifier9;
        java.net.ResponseCache responseCache11 = null;
        okHttpClient8.responseCache = responseCache11;
        javax.net.ssl.HostnameVerifier hostnameVerifier13 = okHttpClient8.hostnameVerifier;
        java.net.Proxy proxy14 = okHttpClient8.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool17 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient8.connectionPool = connectionPool17;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient8.copyWithDefaults();
        java.net.Proxy proxy20 = okHttpClient19.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier21 = okHttpClient19.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient0.setHostnameVerifier(hostnameVerifier21);
        java.net.ProxySelector proxySelector23 = okHttpClient22.getProxySelector();
        java.net.Proxy proxy24 = okHttpClient22.proxy;
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNull(hostnameVerifier13);
        org.junit.Assert.assertNull(proxy14);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNull(proxy20);
        org.junit.Assert.assertNotNull(hostnameVerifier21);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNull(proxySelector23);
        org.junit.Assert.assertNull(proxy24);
    }

    @Test
    public void test07457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07457");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache8 = okHttpClient7.okResponseCache();
        java.net.ResponseCache responseCache9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient7.setResponseCache(responseCache9);
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        okHttpClient7.transports = strList13;
        okHttpClient0.transports = strList13;
        javax.net.ssl.HostnameVerifier hostnameVerifier17 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier17;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory20 = okHttpClient0.sslSocketFactory;
        java.util.List<java.lang.String> strList21 = okHttpClient0.transports;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory22 = okHttpClient0.sslSocketFactory;
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient0.copyWithDefaults();
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNull(okResponseCache8);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(sSLSocketFactory20);
        org.junit.Assert.assertNotNull(strList21);
        org.junit.Assert.assertNull(sSLSocketFactory22);
        org.junit.Assert.assertNotNull(okHttpClient23);
    }

    @Test
    public void test07458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07458");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory8 = okHttpClient0.getSslSocketFactory();
        java.net.CookieHandler cookieHandler9 = okHttpClient0.cookieHandler;
        java.net.ResponseCache responseCache10 = okHttpClient0.responseCache;
        com.squareup.okhttp.ConnectionPool connectionPool13 = new com.squareup.okhttp.ConnectionPool((-1), (long) '#');
        com.squareup.okhttp.Address address14 = null;
        com.squareup.okhttp.Connection connection15 = connectionPool13.get(address14);
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient0.setConnectionPool(connectionPool13);
        java.net.ResponseCache responseCache17 = okHttpClient0.getResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient0.setFollowProtocolRedirects(true);
        com.squareup.okhttp.OkHttpClient okHttpClient21 = new com.squareup.okhttp.OkHttpClient(okHttpClient20);
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient20.copyWithDefaults();
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNull(sSLSocketFactory8);
        org.junit.Assert.assertNull(cookieHandler9);
        org.junit.Assert.assertNull(responseCache10);
        org.junit.Assert.assertNull(connection15);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNull(responseCache17);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNotNull(okHttpClient22);
    }

    @Test
    public void test07459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07459");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        java.net.ResponseCache responseCache12 = okHttpClient0.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory13 = okHttpClient0.sslSocketFactory;
        java.net.CookieHandler cookieHandler14 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        java.net.CookieHandler cookieHandler16 = okHttpClient15.cookieHandler;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = null;
        okHttpClient17.hostnameVerifier = hostnameVerifier18;
        java.net.ResponseCache responseCache20 = null;
        okHttpClient17.responseCache = responseCache20;
        java.util.List<java.lang.String> strList22 = okHttpClient17.transports;
        com.squareup.okhttp.ConnectionPool connectionPool23 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient17.connectionPool = connectionPool23;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory25 = okHttpClient17.getSslSocketFactory();
        java.net.CookieHandler cookieHandler26 = okHttpClient17.cookieHandler;
        com.squareup.okhttp.ConnectionPool connectionPool27 = com.squareup.okhttp.ConnectionPool.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient17.setConnectionPool(connectionPool27);
        java.net.ProxySelector proxySelector29 = null;
        okHttpClient17.proxySelector = proxySelector29;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier32 = null;
        okHttpClient31.hostnameVerifier = hostnameVerifier32;
        java.net.ResponseCache responseCache34 = null;
        okHttpClient31.responseCache = responseCache34;
        javax.net.ssl.HostnameVerifier hostnameVerifier36 = okHttpClient31.hostnameVerifier;
        java.net.Proxy proxy37 = okHttpClient31.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool40 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient31.connectionPool = connectionPool40;
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient31.copyWithDefaults();
        java.net.ResponseCache responseCache43 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient44 = okHttpClient42.setResponseCache(responseCache43);
        com.squareup.okhttp.OkHttpClient okHttpClient45 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool46 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient45.connectionPool = connectionPool46;
        java.net.ResponseCache responseCache48 = null;
        okHttpClient45.responseCache = responseCache48;
        java.net.Proxy proxy50 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress51 = proxy50.address();
        java.net.SocketAddress socketAddress52 = proxy50.address();
        okHttpClient45.proxy = proxy50;
        com.squareup.okhttp.ConnectionPool connectionPool56 = new com.squareup.okhttp.ConnectionPool((-1), (long) '#');
        com.squareup.okhttp.Address address57 = null;
        com.squareup.okhttp.Connection connection58 = connectionPool56.get(address57);
        int int59 = connectionPool56.getSpdyConnectionCount();
        connectionPool56.evictAll();
        com.squareup.okhttp.OkHttpClient okHttpClient61 = okHttpClient45.setConnectionPool(connectionPool56);
        com.squareup.okhttp.OkHttpClient okHttpClient62 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier63 = null;
        okHttpClient62.hostnameVerifier = hostnameVerifier63;
        java.net.ProxySelector proxySelector65 = okHttpClient62.proxySelector;
        java.net.ProxySelector proxySelector66 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient67 = okHttpClient62.setProxySelector(proxySelector66);
        com.squareup.okhttp.OkHttpClient okHttpClient68 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier69 = null;
        okHttpClient68.hostnameVerifier = hostnameVerifier69;
        java.net.ResponseCache responseCache71 = null;
        okHttpClient68.responseCache = responseCache71;
        java.util.List<java.lang.String> strList73 = okHttpClient68.transports;
        com.squareup.okhttp.ConnectionPool connectionPool74 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient68.connectionPool = connectionPool74;
        com.squareup.okhttp.OkHttpClient okHttpClient76 = okHttpClient68.copyWithDefaults();
        java.net.ProxySelector proxySelector77 = okHttpClient76.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory78 = okHttpClient76.getSslSocketFactory();
        okHttpClient62.sslSocketFactory = sSLSocketFactory78;
        okHttpClient45.sslSocketFactory = sSLSocketFactory78;
        com.squareup.okhttp.OkHttpClient okHttpClient81 = okHttpClient44.setSSLSocketFactory(sSLSocketFactory78);
        java.net.Socket socket82 = sSLSocketFactory78.createSocket();
        okHttpClient17.sslSocketFactory = sSLSocketFactory78;
        com.squareup.okhttp.OkHttpClient okHttpClient84 = okHttpClient15.setSSLSocketFactory(sSLSocketFactory78);
        java.net.InetAddress inetAddress85 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket87 = sSLSocketFactory78.createSocket(inetAddress85, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.net.ConnectException; message: Connection refused (Connection refused)");
        } catch (java.net.ConnectException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(responseCache12);
        org.junit.Assert.assertNull(sSLSocketFactory13);
        org.junit.Assert.assertNull(cookieHandler14);
        org.junit.Assert.assertNull(cookieHandler16);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNotNull(connectionPool23);
        org.junit.Assert.assertNull(sSLSocketFactory25);
        org.junit.Assert.assertNull(cookieHandler26);
        org.junit.Assert.assertNotNull(connectionPool27);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNull(hostnameVerifier36);
        org.junit.Assert.assertNull(proxy37);
        org.junit.Assert.assertNotNull(okHttpClient42);
        org.junit.Assert.assertNotNull(okHttpClient44);
        org.junit.Assert.assertNotNull(connectionPool46);
        org.junit.Assert.assertNotNull(proxy50);
        org.junit.Assert.assertNull(socketAddress51);
        org.junit.Assert.assertNull(socketAddress52);
        org.junit.Assert.assertNull(connection58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(okHttpClient61);
        org.junit.Assert.assertNull(proxySelector65);
        org.junit.Assert.assertNotNull(okHttpClient67);
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertNotNull(connectionPool74);
        org.junit.Assert.assertNotNull(okHttpClient76);
// flaky:         org.junit.Assert.assertNull(proxySelector77);
        org.junit.Assert.assertNotNull(sSLSocketFactory78);
        org.junit.Assert.assertNotNull(okHttpClient81);
        org.junit.Assert.assertNotNull(socket82);
        org.junit.Assert.assertEquals(socket82.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(okHttpClient84);
    }

    @Test
    public void test07460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07460");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.Proxy proxy8 = null;
        okHttpClient0.proxy = proxy8;
        boolean boolean10 = okHttpClient0.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.copyWithDefaults();
        java.net.Proxy proxy12 = java.net.Proxy.NO_PROXY;
        boolean boolean14 = proxy12.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type15 = proxy12.type();
        java.lang.String str16 = proxy12.toString();
        java.net.Proxy.Type type17 = proxy12.type();
        okHttpClient0.proxy = proxy12;
        boolean boolean19 = okHttpClient0.followProtocolRedirects;
        java.net.Proxy proxy20 = okHttpClient0.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient21 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool22 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient21.connectionPool = connectionPool22;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier25 = null;
        okHttpClient24.hostnameVerifier = hostnameVerifier25;
        java.net.ResponseCache responseCache27 = null;
        okHttpClient24.responseCache = responseCache27;
        java.util.List<java.lang.String> strList29 = okHttpClient24.transports;
        com.squareup.okhttp.ConnectionPool connectionPool30 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient24.connectionPool = connectionPool30;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient21.setConnectionPool(connectionPool30);
        java.net.ResponseCache responseCache33 = okHttpClient21.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory34 = okHttpClient21.sslSocketFactory;
        java.net.CookieHandler cookieHandler35 = okHttpClient21.getCookieHandler();
        com.squareup.okhttp.OkAuthenticator okAuthenticator36 = okHttpClient21.authenticator;
        java.util.Set<com.squareup.okhttp.Route> routeSet37 = okHttpClient21.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient38 = new com.squareup.okhttp.OkHttpClient(okHttpClient21);
        java.net.CookieHandler cookieHandler39 = null;
        okHttpClient21.cookieHandler = cookieHandler39;
        com.squareup.okhttp.OkHttpClient okHttpClient41 = okHttpClient21.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient42 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier43 = null;
        okHttpClient42.hostnameVerifier = hostnameVerifier43;
        java.net.ResponseCache responseCache45 = null;
        okHttpClient42.responseCache = responseCache45;
        java.util.List<java.lang.String> strList47 = okHttpClient42.transports;
        com.squareup.okhttp.ConnectionPool connectionPool48 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient42.connectionPool = connectionPool48;
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient42.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient51 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier52 = null;
        okHttpClient51.hostnameVerifier = hostnameVerifier52;
        java.net.ResponseCache responseCache54 = null;
        okHttpClient51.responseCache = responseCache54;
        java.util.List<java.lang.String> strList56 = okHttpClient51.transports;
        com.squareup.okhttp.ConnectionPool connectionPool57 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient51.connectionPool = connectionPool57;
        com.squareup.okhttp.OkHttpClient okHttpClient59 = okHttpClient51.copyWithDefaults();
        java.net.ProxySelector proxySelector60 = okHttpClient59.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory61 = okHttpClient59.getSslSocketFactory();
        okHttpClient42.sslSocketFactory = sSLSocketFactory61;
        com.squareup.okhttp.OkHttpClient okHttpClient63 = okHttpClient21.setSSLSocketFactory(sSLSocketFactory61);
        com.squareup.okhttp.OkHttpClient okHttpClient64 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory61);
        java.lang.String[] strArray65 = sSLSocketFactory61.getDefaultCipherSuites();
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(proxy12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + type15 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type15.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "DIRECT" + "'", str16, "DIRECT");
        org.junit.Assert.assertTrue("'" + type17 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type17.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(proxy20);
        org.junit.Assert.assertNotNull(connectionPool22);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(connectionPool30);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertNull(responseCache33);
        org.junit.Assert.assertNull(sSLSocketFactory34);
        org.junit.Assert.assertNull(cookieHandler35);
        org.junit.Assert.assertNull(okAuthenticator36);
        org.junit.Assert.assertNotNull(routeSet37);
        org.junit.Assert.assertNotNull(okHttpClient41);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNotNull(connectionPool48);
        org.junit.Assert.assertNotNull(okHttpClient50);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNotNull(connectionPool57);
        org.junit.Assert.assertNotNull(okHttpClient59);
// flaky:         org.junit.Assert.assertNull(proxySelector60);
        org.junit.Assert.assertNotNull(sSLSocketFactory61);
        org.junit.Assert.assertNotNull(okHttpClient63);
        org.junit.Assert.assertNotNull(okHttpClient64);
        org.junit.Assert.assertNotNull(strArray65);
    }

    @Test
    public void test07461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07461");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.ResponseCache responseCache5 = null;
        okHttpClient4.responseCache = responseCache5;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient4.setSSLSocketFactory(sSLSocketFactory7);
        java.util.List<java.lang.String> strList9 = okHttpClient4.transports;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient4.setFollowProtocolRedirects(true);
        com.squareup.okhttp.OkHttpClient okHttpClient12 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier13 = null;
        okHttpClient12.hostnameVerifier = hostnameVerifier13;
        java.net.ResponseCache responseCache15 = null;
        okHttpClient12.responseCache = responseCache15;
        javax.net.ssl.HostnameVerifier hostnameVerifier17 = okHttpClient12.hostnameVerifier;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory18 = okHttpClient12.sslSocketFactory;
        java.net.CookieHandler cookieHandler19 = okHttpClient12.cookieHandler;
        javax.net.ssl.HostnameVerifier hostnameVerifier20 = okHttpClient12.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool22 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient21.connectionPool = connectionPool22;
        com.squareup.okhttp.OkAuthenticator okAuthenticator24 = null;
        okHttpClient21.authenticator = okAuthenticator24;
        java.util.List<java.lang.String> strList26 = okHttpClient21.transports;
        java.net.ResponseCache responseCache27 = null;
        okHttpClient21.responseCache = responseCache27;
        com.squareup.okhttp.OkHttpClient okHttpClient29 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = null;
        okHttpClient29.hostnameVerifier = hostnameVerifier30;
        java.net.ResponseCache responseCache32 = null;
        okHttpClient29.responseCache = responseCache32;
        javax.net.ssl.HostnameVerifier hostnameVerifier34 = okHttpClient29.hostnameVerifier;
        java.net.Proxy proxy35 = okHttpClient29.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool38 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient29.connectionPool = connectionPool38;
        com.squareup.okhttp.OkHttpClient okHttpClient40 = okHttpClient29.copyWithDefaults();
        java.net.Proxy proxy41 = okHttpClient40.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier42 = okHttpClient40.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient43 = okHttpClient21.setHostnameVerifier(hostnameVerifier42);
        com.squareup.okhttp.OkHttpClient okHttpClient44 = okHttpClient12.setHostnameVerifier(hostnameVerifier42);
        java.net.ProxySelector proxySelector45 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient46 = okHttpClient44.setProxySelector(proxySelector45);
        javax.net.ssl.HostnameVerifier hostnameVerifier47 = okHttpClient44.getHostnameVerifier();
        okHttpClient11.hostnameVerifier = hostnameVerifier47;
        java.net.Proxy proxy49 = okHttpClient11.proxy;
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(hostnameVerifier17);
        org.junit.Assert.assertNull(sSLSocketFactory18);
        org.junit.Assert.assertNull(cookieHandler19);
        org.junit.Assert.assertNull(hostnameVerifier20);
        org.junit.Assert.assertNotNull(connectionPool22);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNull(hostnameVerifier34);
        org.junit.Assert.assertNull(proxy35);
        org.junit.Assert.assertNotNull(okHttpClient40);
        org.junit.Assert.assertNull(proxy41);
        org.junit.Assert.assertNotNull(hostnameVerifier42);
        org.junit.Assert.assertNotNull(okHttpClient43);
        org.junit.Assert.assertNotNull(okHttpClient44);
        org.junit.Assert.assertNotNull(okHttpClient46);
        org.junit.Assert.assertNotNull(hostnameVerifier47);
        org.junit.Assert.assertNull(proxy49);
    }

    @Test
    public void test07462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07462");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.CookieHandler cookieHandler8 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache9 = okHttpClient0.okResponseCache();
        java.net.CookieHandler cookieHandler10 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory12 = okHttpClient11.sslSocketFactory;
        java.net.Proxy proxy13 = okHttpClient11.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient11.setFollowProtocolRedirects(true);
        com.squareup.okhttp.OkHttpClient okHttpClient16 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool17 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient16.connectionPool = connectionPool17;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier20 = null;
        okHttpClient19.hostnameVerifier = hostnameVerifier20;
        java.net.ResponseCache responseCache22 = null;
        okHttpClient19.responseCache = responseCache22;
        java.util.List<java.lang.String> strList24 = okHttpClient19.transports;
        com.squareup.okhttp.ConnectionPool connectionPool25 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient19.connectionPool = connectionPool25;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient16.setConnectionPool(connectionPool25);
        int int28 = connectionPool25.getConnectionCount();
        int int29 = connectionPool25.getSpdyConnectionCount();
        int int30 = connectionPool25.getSpdyConnectionCount();
        com.squareup.okhttp.Address address31 = null;
        com.squareup.okhttp.Connection connection32 = connectionPool25.get(address31);
        int int33 = connectionPool25.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient15.setConnectionPool(connectionPool25);
        int int35 = connectionPool25.getHttpConnectionCount();
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNull(cookieHandler8);
        org.junit.Assert.assertNull(okResponseCache9);
        org.junit.Assert.assertNull(cookieHandler10);
        org.junit.Assert.assertNull(sSLSocketFactory12);
        org.junit.Assert.assertNull(proxy13);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNotNull(connectionPool17);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNotNull(connectionPool25);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNull(connection32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
    }

    @Test
    public void test07463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07463");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache1 = okHttpClient0.okResponseCache();
        java.net.ResponseCache responseCache2 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.setResponseCache(responseCache2);
        com.squareup.okhttp.OkHttpClient okHttpClient4 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        com.squareup.okhttp.ConnectionPool connectionPool5 = okHttpClient4.connectionPool;
        java.net.Proxy proxy6 = okHttpClient4.getProxy();
        java.util.List<java.lang.String> strList7 = okHttpClient4.getTransports();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient4.copyWithDefaults();
        java.lang.Class<?> wildcardClass9 = okHttpClient4.getClass();
        org.junit.Assert.assertNull(okResponseCache1);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertNull(connectionPool5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test07464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07464");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory6 = okHttpClient0.sslSocketFactory;
        java.net.CookieHandler cookieHandler7 = okHttpClient0.cookieHandler;
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = okHttpClient0.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool10 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient9.connectionPool = connectionPool10;
        com.squareup.okhttp.OkAuthenticator okAuthenticator12 = null;
        okHttpClient9.authenticator = okAuthenticator12;
        java.util.List<java.lang.String> strList14 = okHttpClient9.transports;
        java.net.ResponseCache responseCache15 = null;
        okHttpClient9.responseCache = responseCache15;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = null;
        okHttpClient17.hostnameVerifier = hostnameVerifier18;
        java.net.ResponseCache responseCache20 = null;
        okHttpClient17.responseCache = responseCache20;
        javax.net.ssl.HostnameVerifier hostnameVerifier22 = okHttpClient17.hostnameVerifier;
        java.net.Proxy proxy23 = okHttpClient17.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool26 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient17.connectionPool = connectionPool26;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient17.copyWithDefaults();
        java.net.Proxy proxy29 = okHttpClient28.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = okHttpClient28.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient9.setHostnameVerifier(hostnameVerifier30);
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient0.setHostnameVerifier(hostnameVerifier30);
        java.net.ProxySelector proxySelector33 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient32.setProxySelector(proxySelector33);
        javax.net.ssl.HostnameVerifier hostnameVerifier35 = okHttpClient32.getHostnameVerifier();
        java.net.ResponseCache responseCache36 = okHttpClient32.getResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient37 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool38 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient37.connectionPool = connectionPool38;
        java.net.ResponseCache responseCache40 = null;
        okHttpClient37.responseCache = responseCache40;
        java.net.Proxy proxy42 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress43 = proxy42.address();
        java.net.SocketAddress socketAddress44 = proxy42.address();
        okHttpClient37.proxy = proxy42;
        com.squareup.okhttp.ConnectionPool connectionPool48 = new com.squareup.okhttp.ConnectionPool((-1), (long) '#');
        com.squareup.okhttp.Address address49 = null;
        com.squareup.okhttp.Connection connection50 = connectionPool48.get(address49);
        int int51 = connectionPool48.getSpdyConnectionCount();
        connectionPool48.evictAll();
        com.squareup.okhttp.OkHttpClient okHttpClient53 = okHttpClient37.setConnectionPool(connectionPool48);
        com.squareup.okhttp.OkHttpClient okHttpClient54 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier55 = null;
        okHttpClient54.hostnameVerifier = hostnameVerifier55;
        java.net.ProxySelector proxySelector57 = okHttpClient54.proxySelector;
        java.net.ProxySelector proxySelector58 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient59 = okHttpClient54.setProxySelector(proxySelector58);
        com.squareup.okhttp.OkHttpClient okHttpClient60 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier61 = null;
        okHttpClient60.hostnameVerifier = hostnameVerifier61;
        java.net.ResponseCache responseCache63 = null;
        okHttpClient60.responseCache = responseCache63;
        java.util.List<java.lang.String> strList65 = okHttpClient60.transports;
        com.squareup.okhttp.ConnectionPool connectionPool66 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient60.connectionPool = connectionPool66;
        com.squareup.okhttp.OkHttpClient okHttpClient68 = okHttpClient60.copyWithDefaults();
        java.net.ProxySelector proxySelector69 = okHttpClient68.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory70 = okHttpClient68.getSslSocketFactory();
        okHttpClient54.sslSocketFactory = sSLSocketFactory70;
        okHttpClient37.sslSocketFactory = sSLSocketFactory70;
        java.lang.String[] strArray73 = sSLSocketFactory70.getSupportedCipherSuites();
        okHttpClient32.sslSocketFactory = sSLSocketFactory70;
        java.lang.String[] strArray75 = sSLSocketFactory70.getSupportedCipherSuites();
        java.lang.String[] strArray76 = sSLSocketFactory70.getSupportedCipherSuites();
        java.lang.String[] strArray77 = sSLSocketFactory70.getDefaultCipherSuites();
        java.net.InetAddress inetAddress78 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket80 = sSLSocketFactory70.createSocket(inetAddress78, 0);
            org.junit.Assert.fail("Expected exception of type java.net.ConnectException; message: Connection refused (Connection refused)");
        } catch (java.net.ConnectException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(sSLSocketFactory6);
        org.junit.Assert.assertNull(cookieHandler7);
        org.junit.Assert.assertNull(hostnameVerifier8);
        org.junit.Assert.assertNotNull(connectionPool10);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(hostnameVerifier22);
        org.junit.Assert.assertNull(proxy23);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNull(proxy29);
        org.junit.Assert.assertNotNull(hostnameVerifier30);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertNotNull(hostnameVerifier35);
        org.junit.Assert.assertNull(responseCache36);
        org.junit.Assert.assertNotNull(connectionPool38);
        org.junit.Assert.assertNotNull(proxy42);
        org.junit.Assert.assertNull(socketAddress43);
        org.junit.Assert.assertNull(socketAddress44);
        org.junit.Assert.assertNull(connection50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(okHttpClient53);
        org.junit.Assert.assertNull(proxySelector57);
        org.junit.Assert.assertNotNull(okHttpClient59);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNotNull(connectionPool66);
        org.junit.Assert.assertNotNull(okHttpClient68);
// flaky:         org.junit.Assert.assertNull(proxySelector69);
        org.junit.Assert.assertNotNull(sSLSocketFactory70);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertNotNull(strArray77);
    }

    @Test
    public void test07465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07465");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        boolean boolean3 = okHttpClient0.getFollowProtocolRedirects();
        java.net.CookieHandler cookieHandler4 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.ConnectionPool connectionPool5 = okHttpClient0.connectionPool;
        java.util.List<java.lang.String> strList6 = null;
        okHttpClient0.transports = strList6;
        com.squareup.okhttp.ConnectionPool connectionPool8 = okHttpClient0.connectionPool;
        com.squareup.okhttp.ConnectionPool connectionPool11 = new com.squareup.okhttp.ConnectionPool((int) (short) 1, (long) (short) 1);
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient0.setConnectionPool(connectionPool11);
        java.net.ProxySelector proxySelector13 = okHttpClient0.proxySelector;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier15 = null;
        okHttpClient14.hostnameVerifier = hostnameVerifier15;
        java.net.ResponseCache responseCache17 = null;
        okHttpClient14.responseCache = responseCache17;
        java.util.List<java.lang.String> strList19 = okHttpClient14.transports;
        java.net.Proxy proxy20 = java.net.Proxy.NO_PROXY;
        boolean boolean22 = proxy20.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type23 = proxy20.type();
        java.net.SocketAddress socketAddress24 = proxy20.address();
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient14.setProxy(proxy20);
        javax.net.ssl.HostnameVerifier hostnameVerifier26 = okHttpClient25.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = new com.squareup.okhttp.OkHttpClient(okHttpClient25);
        com.squareup.okhttp.OkHttpClient okHttpClient28 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier29 = null;
        okHttpClient28.hostnameVerifier = hostnameVerifier29;
        java.net.ResponseCache responseCache31 = null;
        okHttpClient28.responseCache = responseCache31;
        javax.net.ssl.HostnameVerifier hostnameVerifier33 = okHttpClient28.hostnameVerifier;
        java.net.Proxy proxy34 = okHttpClient28.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool37 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient28.connectionPool = connectionPool37;
        java.util.List<java.lang.String> strList39 = okHttpClient28.getTransports();
        javax.net.ssl.HostnameVerifier hostnameVerifier40 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient41 = okHttpClient28.setHostnameVerifier(hostnameVerifier40);
        com.squareup.okhttp.OkHttpClient okHttpClient42 = new com.squareup.okhttp.OkHttpClient(okHttpClient28);
        com.squareup.okhttp.OkHttpClient okHttpClient43 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier44 = null;
        okHttpClient43.hostnameVerifier = hostnameVerifier44;
        java.net.ProxySelector proxySelector46 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient47 = okHttpClient43.setProxySelector(proxySelector46);
        com.squareup.okhttp.OkHttpClient okHttpClient48 = okHttpClient47.copyWithDefaults();
        java.net.ProxySelector proxySelector49 = null;
        okHttpClient48.proxySelector = proxySelector49;
        com.squareup.okhttp.OkAuthenticator okAuthenticator51 = okHttpClient48.authenticator;
        okHttpClient42.authenticator = okAuthenticator51;
        okHttpClient27.authenticator = okAuthenticator51;
        java.util.Set<com.squareup.okhttp.Route> routeSet54 = okHttpClient27.failedRoutes;
        okHttpClient0.failedRoutes = routeSet54;
        java.net.ProxySelector proxySelector56 = null;
        okHttpClient0.proxySelector = proxySelector56;
        com.squareup.okhttp.OkHttpClient okHttpClient58 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier59 = null;
        okHttpClient58.hostnameVerifier = hostnameVerifier59;
        boolean boolean61 = okHttpClient58.getFollowProtocolRedirects();
        java.util.List<java.lang.String> strList62 = okHttpClient58.transports;
        com.squareup.okhttp.ConnectionPool connectionPool63 = okHttpClient58.getConnectionPool();
        javax.net.ssl.HostnameVerifier hostnameVerifier64 = okHttpClient58.hostnameVerifier;
        java.net.ResponseCache responseCache65 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient66 = okHttpClient58.setResponseCache(responseCache65);
        com.squareup.okhttp.OkHttpClient okHttpClient67 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier68 = null;
        okHttpClient67.hostnameVerifier = hostnameVerifier68;
        java.net.ProxySelector proxySelector70 = okHttpClient67.proxySelector;
        java.net.ProxySelector proxySelector71 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient72 = okHttpClient67.setProxySelector(proxySelector71);
        com.squareup.okhttp.OkHttpClient okHttpClient73 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier74 = null;
        okHttpClient73.hostnameVerifier = hostnameVerifier74;
        java.net.ResponseCache responseCache76 = null;
        okHttpClient73.responseCache = responseCache76;
        java.util.List<java.lang.String> strList78 = okHttpClient73.transports;
        com.squareup.okhttp.ConnectionPool connectionPool79 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient73.connectionPool = connectionPool79;
        com.squareup.okhttp.OkHttpClient okHttpClient81 = okHttpClient73.copyWithDefaults();
        java.net.ProxySelector proxySelector82 = okHttpClient81.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory83 = okHttpClient81.getSslSocketFactory();
        okHttpClient67.sslSocketFactory = sSLSocketFactory83;
        java.net.Socket socket85 = sSLSocketFactory83.createSocket();
        com.squareup.okhttp.OkHttpClient okHttpClient86 = okHttpClient66.setSSLSocketFactory(sSLSocketFactory83);
        com.squareup.okhttp.OkHttpClient okHttpClient87 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory83);
        java.net.CookieHandler cookieHandler88 = null;
        okHttpClient87.cookieHandler = cookieHandler88;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(cookieHandler4);
        org.junit.Assert.assertNull(connectionPool5);
        org.junit.Assert.assertNull(connectionPool8);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertNull(proxySelector13);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNotNull(proxy20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + type23 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type23.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress24);
        org.junit.Assert.assertNotNull(okHttpClient25);
        org.junit.Assert.assertNull(hostnameVerifier26);
        org.junit.Assert.assertNull(hostnameVerifier33);
        org.junit.Assert.assertNull(proxy34);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNotNull(okHttpClient41);
        org.junit.Assert.assertNotNull(okHttpClient47);
        org.junit.Assert.assertNotNull(okHttpClient48);
        org.junit.Assert.assertNotNull(okAuthenticator51);
        org.junit.Assert.assertNotNull(routeSet54);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertNull(connectionPool63);
        org.junit.Assert.assertNull(hostnameVerifier64);
        org.junit.Assert.assertNotNull(okHttpClient66);
        org.junit.Assert.assertNull(proxySelector70);
        org.junit.Assert.assertNotNull(okHttpClient72);
        org.junit.Assert.assertNull(strList78);
        org.junit.Assert.assertNotNull(connectionPool79);
        org.junit.Assert.assertNotNull(okHttpClient81);
// flaky:         org.junit.Assert.assertNull(proxySelector82);
        org.junit.Assert.assertNotNull(sSLSocketFactory83);
        org.junit.Assert.assertNotNull(socket85);
        org.junit.Assert.assertEquals(socket85.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(okHttpClient86);
        org.junit.Assert.assertNotNull(okHttpClient87);
    }

    @Test
    public void test07466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07466");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient4.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool7 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient6.connectionPool = connectionPool7;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier10 = null;
        okHttpClient9.hostnameVerifier = hostnameVerifier10;
        java.net.ResponseCache responseCache12 = null;
        okHttpClient9.responseCache = responseCache12;
        java.util.List<java.lang.String> strList14 = okHttpClient9.transports;
        com.squareup.okhttp.ConnectionPool connectionPool15 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient9.connectionPool = connectionPool15;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient6.setConnectionPool(connectionPool15);
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier19 = null;
        okHttpClient18.hostnameVerifier = hostnameVerifier19;
        java.net.ProxySelector proxySelector21 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient18.setProxySelector(proxySelector21);
        java.net.CookieHandler cookieHandler23 = okHttpClient18.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient24 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier25 = null;
        okHttpClient24.hostnameVerifier = hostnameVerifier25;
        java.net.ResponseCache responseCache27 = null;
        okHttpClient24.responseCache = responseCache27;
        java.util.List<java.lang.String> strList29 = okHttpClient24.transports;
        com.squareup.okhttp.ConnectionPool connectionPool30 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient24.connectionPool = connectionPool30;
        java.net.Proxy proxy32 = null;
        okHttpClient24.proxy = proxy32;
        java.util.Set<com.squareup.okhttp.Route> routeSet34 = okHttpClient24.failedRoutes;
        okHttpClient18.failedRoutes = routeSet34;
        java.net.ProxySelector proxySelector36 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient18.setProxySelector(proxySelector36);
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient18.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient39 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier40 = null;
        okHttpClient39.hostnameVerifier = hostnameVerifier40;
        java.net.ResponseCache responseCache42 = null;
        okHttpClient39.responseCache = responseCache42;
        javax.net.ssl.HostnameVerifier hostnameVerifier44 = okHttpClient39.hostnameVerifier;
        java.net.Proxy proxy45 = okHttpClient39.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool48 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient39.connectionPool = connectionPool48;
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient39.copyWithDefaults();
        java.net.Proxy proxy51 = okHttpClient50.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier52 = okHttpClient50.getHostnameVerifier();
        okHttpClient18.hostnameVerifier = hostnameVerifier52;
        okHttpClient17.hostnameVerifier = hostnameVerifier52;
        okHttpClient5.hostnameVerifier = hostnameVerifier52;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache56 = okHttpClient5.okResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient57 = okHttpClient5.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient58 = new com.squareup.okhttp.OkHttpClient(okHttpClient57);
        java.net.ResponseCache responseCache59 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient60 = okHttpClient58.setResponseCache(responseCache59);
        com.squareup.okhttp.OkHttpClient okHttpClient61 = new com.squareup.okhttp.OkHttpClient(okHttpClient60);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNotNull(connectionPool7);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNotNull(connectionPool15);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNull(cookieHandler23);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(connectionPool30);
        org.junit.Assert.assertNotNull(routeSet34);
        org.junit.Assert.assertNotNull(okHttpClient37);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNull(hostnameVerifier44);
        org.junit.Assert.assertNull(proxy45);
        org.junit.Assert.assertNotNull(okHttpClient50);
        org.junit.Assert.assertNull(proxy51);
        org.junit.Assert.assertNotNull(hostnameVerifier52);
        org.junit.Assert.assertNull(okResponseCache56);
        org.junit.Assert.assertNotNull(okHttpClient57);
        org.junit.Assert.assertNotNull(okHttpClient60);
    }

    @Test
    public void test07467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07467");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache1 = okHttpClient0.okResponseCache();
        java.net.ResponseCache responseCache2 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.setResponseCache(responseCache2);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        okHttpClient0.transports = strList6;
        java.net.CookieHandler cookieHandler9 = okHttpClient0.cookieHandler;
        java.net.CookieHandler cookieHandler10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setCookieHandler(cookieHandler10);
        com.squareup.okhttp.OkHttpClient okHttpClient12 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        com.squareup.okhttp.OkAuthenticator okAuthenticator13 = okHttpClient12.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier15 = null;
        okHttpClient14.hostnameVerifier = hostnameVerifier15;
        java.net.ResponseCache responseCache17 = null;
        okHttpClient14.responseCache = responseCache17;
        java.util.List<java.lang.String> strList19 = okHttpClient14.transports;
        com.squareup.okhttp.ConnectionPool connectionPool20 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient14.connectionPool = connectionPool20;
        java.net.CookieHandler cookieHandler22 = okHttpClient14.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache23 = okHttpClient14.okResponseCache();
        java.net.CookieHandler cookieHandler24 = okHttpClient14.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient25 = new com.squareup.okhttp.OkHttpClient(okHttpClient14);
        java.net.Proxy proxy26 = java.net.Proxy.NO_PROXY;
        boolean boolean28 = proxy26.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type29 = proxy26.type();
        java.net.SocketAddress socketAddress30 = proxy26.address();
        com.squareup.okhttp.OkHttpClient okHttpClient31 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier32 = null;
        okHttpClient31.hostnameVerifier = hostnameVerifier32;
        java.net.ResponseCache responseCache34 = null;
        okHttpClient31.responseCache = responseCache34;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache36 = okHttpClient31.okResponseCache();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory37 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient31.setSSLSocketFactory(sSLSocketFactory37);
        boolean boolean39 = proxy26.equals((java.lang.Object) okHttpClient31);
        java.net.SocketAddress socketAddress40 = proxy26.address();
        okHttpClient25.proxy = proxy26;
        java.net.Proxy.Type type42 = proxy26.type();
        java.net.Proxy.Type type43 = proxy26.type();
        com.squareup.okhttp.OkHttpClient okHttpClient44 = okHttpClient12.setProxy(proxy26);
        java.net.ResponseCache responseCache45 = okHttpClient12.responseCache;
        java.net.CookieHandler cookieHandler46 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient47 = okHttpClient12.setCookieHandler(cookieHandler46);
        org.junit.Assert.assertNull(okResponseCache1);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(cookieHandler9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(okAuthenticator13);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNotNull(connectionPool20);
        org.junit.Assert.assertNull(cookieHandler22);
        org.junit.Assert.assertNull(okResponseCache23);
        org.junit.Assert.assertNull(cookieHandler24);
        org.junit.Assert.assertNotNull(proxy26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + type29 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type29.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress30);
        org.junit.Assert.assertNull(okResponseCache36);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(socketAddress40);
        org.junit.Assert.assertTrue("'" + type42 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type42.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertTrue("'" + type43 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type43.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNotNull(okHttpClient44);
        org.junit.Assert.assertNull(responseCache45);
        org.junit.Assert.assertNotNull(okHttpClient47);
    }

    @Test
    public void test07468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07468");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        java.net.ResponseCache responseCache12 = okHttpClient0.responseCache;
        java.net.ResponseCache responseCache13 = okHttpClient0.getResponseCache();
        java.net.ResponseCache responseCache14 = okHttpClient0.responseCache;
        java.net.ResponseCache responseCache15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient0.setResponseCache(responseCache15);
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient0.copyWithDefaults();
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(responseCache12);
        org.junit.Assert.assertNull(responseCache13);
        org.junit.Assert.assertNull(responseCache14);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNotNull(okHttpClient17);
    }

    @Test
    public void test07469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07469");
        com.squareup.okhttp.ConnectionPool connectionPool2 = new com.squareup.okhttp.ConnectionPool(100, (long) (byte) -1);
        com.squareup.okhttp.Connection connection3 = null;
        // The following exception was thrown during execution in test generation
        try {
            connectionPool2.recycle(connection3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test07470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07470");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient0.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.copyWithDefaults();
        java.util.List<java.lang.String> strList12 = okHttpClient0.getTransports();
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient14 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool15 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient14.connectionPool = connectionPool15;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = null;
        okHttpClient17.hostnameVerifier = hostnameVerifier18;
        java.net.ResponseCache responseCache20 = null;
        okHttpClient17.responseCache = responseCache20;
        java.util.List<java.lang.String> strList22 = okHttpClient17.transports;
        com.squareup.okhttp.ConnectionPool connectionPool23 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient17.connectionPool = connectionPool23;
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient14.setConnectionPool(connectionPool23);
        com.squareup.okhttp.ConnectionPool connectionPool26 = okHttpClient25.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator27 = okHttpClient25.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool30 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient25.connectionPool = connectionPool30;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier33 = null;
        okHttpClient32.hostnameVerifier = hostnameVerifier33;
        java.net.ResponseCache responseCache35 = null;
        okHttpClient32.responseCache = responseCache35;
        java.util.List<java.lang.String> strList37 = okHttpClient32.transports;
        com.squareup.okhttp.ConnectionPool connectionPool38 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient32.connectionPool = connectionPool38;
        java.net.CookieHandler cookieHandler40 = okHttpClient32.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache41 = okHttpClient32.okResponseCache();
        java.net.CookieHandler cookieHandler42 = okHttpClient32.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient43 = new com.squareup.okhttp.OkHttpClient(okHttpClient32);
        java.net.Proxy proxy44 = java.net.Proxy.NO_PROXY;
        boolean boolean46 = proxy44.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type47 = proxy44.type();
        java.net.SocketAddress socketAddress48 = proxy44.address();
        com.squareup.okhttp.OkHttpClient okHttpClient49 = okHttpClient32.setProxy(proxy44);
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient25.setProxy(proxy44);
        com.squareup.okhttp.OkHttpClient okHttpClient51 = okHttpClient0.setProxy(proxy44);
        com.squareup.okhttp.OkHttpClient okHttpClient52 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier53 = null;
        okHttpClient52.hostnameVerifier = hostnameVerifier53;
        java.net.ResponseCache responseCache55 = null;
        okHttpClient52.responseCache = responseCache55;
        javax.net.ssl.HostnameVerifier hostnameVerifier57 = okHttpClient52.hostnameVerifier;
        java.net.Proxy proxy58 = okHttpClient52.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool61 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient52.connectionPool = connectionPool61;
        com.squareup.okhttp.OkHttpClient okHttpClient63 = okHttpClient52.copyWithDefaults();
        java.net.ResponseCache responseCache64 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient65 = okHttpClient63.setResponseCache(responseCache64);
        javax.net.ssl.HostnameVerifier hostnameVerifier66 = okHttpClient65.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient67 = okHttpClient51.setHostnameVerifier(hostnameVerifier66);
        com.squareup.okhttp.ConnectionPool connectionPool70 = new com.squareup.okhttp.ConnectionPool((int) (byte) 0, 0L);
        int int71 = connectionPool70.getSpdyConnectionCount();
        int int72 = connectionPool70.getConnectionCount();
        int int73 = connectionPool70.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient74 = okHttpClient51.setConnectionPool(connectionPool70);
        com.squareup.okhttp.ConnectionPool connectionPool75 = okHttpClient74.getConnectionPool();
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNotNull(connectionPool15);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNotNull(connectionPool23);
        org.junit.Assert.assertNotNull(okHttpClient25);
        org.junit.Assert.assertNotNull(connectionPool26);
        org.junit.Assert.assertNull(okAuthenticator27);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(connectionPool38);
        org.junit.Assert.assertNull(cookieHandler40);
        org.junit.Assert.assertNull(okResponseCache41);
        org.junit.Assert.assertNull(cookieHandler42);
        org.junit.Assert.assertNotNull(proxy44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + type47 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type47.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress48);
        org.junit.Assert.assertNotNull(okHttpClient49);
        org.junit.Assert.assertNotNull(okHttpClient50);
        org.junit.Assert.assertNotNull(okHttpClient51);
        org.junit.Assert.assertNull(hostnameVerifier57);
        org.junit.Assert.assertNull(proxy58);
        org.junit.Assert.assertNotNull(okHttpClient63);
        org.junit.Assert.assertNotNull(okHttpClient65);
        org.junit.Assert.assertNotNull(hostnameVerifier66);
        org.junit.Assert.assertNotNull(okHttpClient67);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertNotNull(okHttpClient74);
        org.junit.Assert.assertNotNull(connectionPool75);
    }

    @Test
    public void test07471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07471");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.CookieHandler cookieHandler8 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache9 = okHttpClient0.okResponseCache();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory10 = null;
        okHttpClient0.sslSocketFactory = sSLSocketFactory10;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        java.net.ProxySelector proxySelector13 = null;
        okHttpClient0.proxySelector = proxySelector13;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient0.copyWithDefaults();
        java.net.ResponseCache responseCache16 = okHttpClient0.getResponseCache();
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNull(cookieHandler8);
        org.junit.Assert.assertNull(okResponseCache9);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNull(responseCache16);
    }

    @Test
    public void test07472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07472");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache5 = okHttpClient0.okResponseCache();
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(okResponseCache5);
    }

    @Test
    public void test07473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07473");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache1 = okHttpClient0.okResponseCache();
        java.net.ResponseCache responseCache2 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.setResponseCache(responseCache2);
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = okHttpClient3.hostnameVerifier;
        java.net.ResponseCache responseCache5 = null;
        okHttpClient3.responseCache = responseCache5;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = null;
        okHttpClient7.hostnameVerifier = hostnameVerifier8;
        java.net.ResponseCache responseCache10 = null;
        okHttpClient7.responseCache = responseCache10;
        java.util.List<java.lang.String> strList12 = okHttpClient7.transports;
        com.squareup.okhttp.ConnectionPool connectionPool13 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient7.connectionPool = connectionPool13;
        java.net.CookieHandler cookieHandler15 = okHttpClient7.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache16 = okHttpClient7.okResponseCache();
        java.net.CookieHandler cookieHandler17 = okHttpClient7.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient(okHttpClient7);
        com.squareup.okhttp.OkHttpClient okHttpClient19 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier20 = null;
        okHttpClient19.hostnameVerifier = hostnameVerifier20;
        java.net.ProxySelector proxySelector22 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient19.setProxySelector(proxySelector22);
        java.net.CookieHandler cookieHandler24 = okHttpClient19.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient25 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier26 = null;
        okHttpClient25.hostnameVerifier = hostnameVerifier26;
        java.net.ResponseCache responseCache28 = null;
        okHttpClient25.responseCache = responseCache28;
        java.util.List<java.lang.String> strList30 = okHttpClient25.transports;
        com.squareup.okhttp.ConnectionPool connectionPool31 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient25.connectionPool = connectionPool31;
        java.net.Proxy proxy33 = null;
        okHttpClient25.proxy = proxy33;
        java.util.Set<com.squareup.okhttp.Route> routeSet35 = okHttpClient25.failedRoutes;
        okHttpClient19.failedRoutes = routeSet35;
        okHttpClient18.failedRoutes = routeSet35;
        java.util.List<java.lang.String> strList38 = okHttpClient18.getTransports();
        java.net.ResponseCache responseCache39 = null;
        okHttpClient18.responseCache = responseCache39;
        java.net.Proxy proxy41 = java.net.Proxy.NO_PROXY;
        boolean boolean43 = proxy41.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type44 = proxy41.type();
        java.net.Proxy.Type type45 = proxy41.type();
        okHttpClient18.proxy = proxy41;
        java.lang.Object obj47 = null;
        boolean boolean48 = proxy41.equals(obj47);
        com.squareup.okhttp.OkHttpClient okHttpClient49 = okHttpClient3.setProxy(proxy41);
        com.squareup.okhttp.OkHttpClient okHttpClient50 = new com.squareup.okhttp.OkHttpClient(okHttpClient49);
        java.net.CookieHandler cookieHandler51 = okHttpClient49.getCookieHandler();
        java.net.ProxySelector proxySelector52 = null;
        okHttpClient49.proxySelector = proxySelector52;
        com.squareup.okhttp.OkAuthenticator okAuthenticator54 = okHttpClient49.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool55 = null;
        okHttpClient49.connectionPool = connectionPool55;
        org.junit.Assert.assertNull(okResponseCache1);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertNull(hostnameVerifier4);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(connectionPool13);
        org.junit.Assert.assertNull(cookieHandler15);
        org.junit.Assert.assertNull(okResponseCache16);
        org.junit.Assert.assertNull(cookieHandler17);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertNull(cookieHandler24);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNotNull(connectionPool31);
        org.junit.Assert.assertNotNull(routeSet35);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNotNull(proxy41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + type44 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type44.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertTrue("'" + type45 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type45.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(okHttpClient49);
        org.junit.Assert.assertNull(cookieHandler51);
        org.junit.Assert.assertNull(okAuthenticator54);
    }

    @Test
    public void test07474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07474");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.ResponseCache responseCache5 = null;
        okHttpClient4.responseCache = responseCache5;
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = okHttpClient4.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient4.setFollowProtocolRedirects(false);
        java.net.ProxySelector proxySelector10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient9.setProxySelector(proxySelector10);
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache12 = okHttpClient9.okResponseCache();
        java.net.ProxySelector proxySelector13 = okHttpClient9.getProxySelector();
        com.squareup.okhttp.OkHttpClient okHttpClient14 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier15 = null;
        okHttpClient14.hostnameVerifier = hostnameVerifier15;
        java.net.ResponseCache responseCache17 = null;
        okHttpClient14.responseCache = responseCache17;
        javax.net.ssl.HostnameVerifier hostnameVerifier19 = okHttpClient14.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient14.setFollowProtocolRedirects(false);
        java.net.Proxy proxy22 = okHttpClient14.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier23 = okHttpClient14.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient24 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier25 = null;
        okHttpClient24.hostnameVerifier = hostnameVerifier25;
        java.net.ResponseCache responseCache27 = null;
        okHttpClient24.responseCache = responseCache27;
        java.util.List<java.lang.String> strList29 = okHttpClient24.transports;
        com.squareup.okhttp.ConnectionPool connectionPool30 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient24.connectionPool = connectionPool30;
        java.net.Proxy proxy32 = null;
        okHttpClient24.proxy = proxy32;
        java.net.Proxy proxy34 = okHttpClient24.getProxy();
        java.net.ProxySelector proxySelector35 = null;
        okHttpClient24.proxySelector = proxySelector35;
        java.net.Proxy proxy37 = okHttpClient24.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient24.copyWithDefaults();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory39 = okHttpClient38.sslSocketFactory;
        okHttpClient14.sslSocketFactory = sSLSocketFactory39;
        java.net.Socket socket41 = sSLSocketFactory39.createSocket();
        java.lang.String[] strArray42 = sSLSocketFactory39.getSupportedCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient43 = okHttpClient9.setSSLSocketFactory(sSLSocketFactory39);
        java.net.InetAddress inetAddress44 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket46 = sSLSocketFactory39.createSocket(inetAddress44, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: port out of range:-1");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(hostnameVerifier7);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(okResponseCache12);
        org.junit.Assert.assertNull(proxySelector13);
        org.junit.Assert.assertNull(hostnameVerifier19);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNull(proxy22);
        org.junit.Assert.assertNull(hostnameVerifier23);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(connectionPool30);
        org.junit.Assert.assertNull(proxy34);
        org.junit.Assert.assertNull(proxy37);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNotNull(sSLSocketFactory39);
        org.junit.Assert.assertNotNull(socket41);
        org.junit.Assert.assertEquals(socket41.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(okHttpClient43);
    }

    @Test
    public void test07475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07475");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.ConnectionPool connectionPool12 = okHttpClient11.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator13 = okHttpClient11.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool16 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient11.connectionPool = connectionPool16;
        java.net.ResponseCache responseCache18 = okHttpClient11.responseCache;
        com.squareup.okhttp.ConnectionPool connectionPool21 = new com.squareup.okhttp.ConnectionPool((int) (byte) 0, 10L);
        okHttpClient11.connectionPool = connectionPool21;
        com.squareup.okhttp.ConnectionPool connectionPool25 = new com.squareup.okhttp.ConnectionPool((int) (byte) 10, 0L);
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient11.setConnectionPool(connectionPool25);
        java.net.ResponseCache responseCache27 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient26.setResponseCache(responseCache27);
        com.squareup.okhttp.ConnectionPool connectionPool31 = new com.squareup.okhttp.ConnectionPool((int) '#', 10L);
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient28.setConnectionPool(connectionPool31);
        int int33 = connectionPool31.getHttpConnectionCount();
        com.squareup.okhttp.Address address34 = null;
        com.squareup.okhttp.Connection connection35 = connectionPool31.get(address34);
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNull(okAuthenticator13);
        org.junit.Assert.assertNull(responseCache18);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNull(connection35);
    }

    @Test
    public void test07476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07476");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.CookieHandler cookieHandler5 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = null;
        okHttpClient6.hostnameVerifier = hostnameVerifier7;
        java.net.ResponseCache responseCache9 = null;
        okHttpClient6.responseCache = responseCache9;
        java.util.List<java.lang.String> strList11 = okHttpClient6.transports;
        com.squareup.okhttp.ConnectionPool connectionPool12 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient6.connectionPool = connectionPool12;
        java.net.Proxy proxy14 = null;
        okHttpClient6.proxy = proxy14;
        java.util.Set<com.squareup.okhttp.Route> routeSet16 = okHttpClient6.failedRoutes;
        okHttpClient0.failedRoutes = routeSet16;
        java.net.ProxySelector proxySelector18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient0.setProxySelector(proxySelector18);
        com.squareup.okhttp.OkHttpClient okHttpClient20 = new com.squareup.okhttp.OkHttpClient(okHttpClient19);
        com.squareup.okhttp.OkAuthenticator okAuthenticator21 = okHttpClient20.authenticator;
        java.net.ProxySelector proxySelector22 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient20.setProxySelector(proxySelector22);
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient23.copyWithDefaults();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory25 = okHttpClient24.sslSocketFactory;
        java.net.CookieHandler cookieHandler26 = okHttpClient24.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient24.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient27.setFollowProtocolRedirects(false);
        java.net.CookieHandler cookieHandler30 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient29.setCookieHandler(cookieHandler30);
        java.net.ProxySelector proxySelector32 = okHttpClient29.proxySelector;
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNotNull(routeSet16);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNull(okAuthenticator21);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNotNull(sSLSocketFactory25);
        org.junit.Assert.assertNull(cookieHandler26);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNotNull(okHttpClient29);
        org.junit.Assert.assertNotNull(okHttpClient31);
// flaky:         org.junit.Assert.assertNull(proxySelector32);
    }

    @Test
    public void test07477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07477");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.CookieHandler cookieHandler5 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = null;
        okHttpClient6.hostnameVerifier = hostnameVerifier7;
        java.net.ResponseCache responseCache9 = null;
        okHttpClient6.responseCache = responseCache9;
        java.util.List<java.lang.String> strList11 = okHttpClient6.transports;
        com.squareup.okhttp.ConnectionPool connectionPool12 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient6.connectionPool = connectionPool12;
        java.net.Proxy proxy14 = null;
        okHttpClient6.proxy = proxy14;
        java.util.Set<com.squareup.okhttp.Route> routeSet16 = okHttpClient6.failedRoutes;
        okHttpClient0.failedRoutes = routeSet16;
        java.net.ProxySelector proxySelector18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient0.setProxySelector(proxySelector18);
        com.squareup.okhttp.ConnectionPool connectionPool22 = new com.squareup.okhttp.ConnectionPool((int) (short) 10, (long) '4');
        okHttpClient0.connectionPool = connectionPool22;
        boolean boolean24 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.ConnectionPool connectionPool25 = okHttpClient0.getConnectionPool();
        int int26 = connectionPool25.getHttpConnectionCount();
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNotNull(routeSet16);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(connectionPool25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
    }

    @Test
    public void test07478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07478");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.ConnectionPool connectionPool12 = okHttpClient11.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator13 = okHttpClient11.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool16 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient11.connectionPool = connectionPool16;
        java.net.ResponseCache responseCache18 = okHttpClient11.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory19 = okHttpClient11.sslSocketFactory;
        boolean boolean20 = okHttpClient11.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient21 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier22 = null;
        okHttpClient21.hostnameVerifier = hostnameVerifier22;
        java.net.ProxySelector proxySelector24 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient21.setProxySelector(proxySelector24);
        java.net.CookieHandler cookieHandler26 = okHttpClient21.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient27 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier28 = null;
        okHttpClient27.hostnameVerifier = hostnameVerifier28;
        java.net.ResponseCache responseCache30 = null;
        okHttpClient27.responseCache = responseCache30;
        java.util.List<java.lang.String> strList32 = okHttpClient27.transports;
        com.squareup.okhttp.ConnectionPool connectionPool33 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient27.connectionPool = connectionPool33;
        java.net.Proxy proxy35 = null;
        okHttpClient27.proxy = proxy35;
        java.util.Set<com.squareup.okhttp.Route> routeSet37 = okHttpClient27.failedRoutes;
        okHttpClient21.failedRoutes = routeSet37;
        javax.net.ssl.HostnameVerifier hostnameVerifier39 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient40 = okHttpClient21.setHostnameVerifier(hostnameVerifier39);
        java.net.ProxySelector proxySelector41 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient40.setProxySelector(proxySelector41);
        java.net.Proxy proxy43 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress44 = proxy43.address();
        com.squareup.okhttp.OkHttpClient okHttpClient45 = okHttpClient40.setProxy(proxy43);
        java.net.ProxySelector proxySelector46 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient47 = okHttpClient45.setProxySelector(proxySelector46);
        java.util.List<java.lang.String> strList48 = okHttpClient45.getTransports();
        com.squareup.okhttp.OkHttpClient okHttpClient49 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier50 = null;
        okHttpClient49.hostnameVerifier = hostnameVerifier50;
        java.net.ResponseCache responseCache52 = null;
        okHttpClient49.responseCache = responseCache52;
        javax.net.ssl.HostnameVerifier hostnameVerifier54 = okHttpClient49.hostnameVerifier;
        java.net.Proxy proxy55 = okHttpClient49.getProxy();
        java.net.CookieHandler cookieHandler56 = null;
        okHttpClient49.cookieHandler = cookieHandler56;
        com.squareup.okhttp.OkHttpClient okHttpClient58 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier59 = null;
        okHttpClient58.hostnameVerifier = hostnameVerifier59;
        java.net.ResponseCache responseCache61 = null;
        okHttpClient58.responseCache = responseCache61;
        java.util.List<java.lang.String> strList63 = okHttpClient58.transports;
        com.squareup.okhttp.ConnectionPool connectionPool64 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient58.connectionPool = connectionPool64;
        java.net.CookieHandler cookieHandler66 = okHttpClient58.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache67 = okHttpClient58.okResponseCache();
        java.net.CookieHandler cookieHandler68 = okHttpClient58.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient69 = new com.squareup.okhttp.OkHttpClient(okHttpClient58);
        com.squareup.okhttp.OkHttpClient okHttpClient70 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier71 = null;
        okHttpClient70.hostnameVerifier = hostnameVerifier71;
        java.net.ProxySelector proxySelector73 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient74 = okHttpClient70.setProxySelector(proxySelector73);
        java.net.CookieHandler cookieHandler75 = okHttpClient70.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient76 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier77 = null;
        okHttpClient76.hostnameVerifier = hostnameVerifier77;
        java.net.ResponseCache responseCache79 = null;
        okHttpClient76.responseCache = responseCache79;
        java.util.List<java.lang.String> strList81 = okHttpClient76.transports;
        com.squareup.okhttp.ConnectionPool connectionPool82 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient76.connectionPool = connectionPool82;
        java.net.Proxy proxy84 = null;
        okHttpClient76.proxy = proxy84;
        java.util.Set<com.squareup.okhttp.Route> routeSet86 = okHttpClient76.failedRoutes;
        okHttpClient70.failedRoutes = routeSet86;
        okHttpClient69.failedRoutes = routeSet86;
        okHttpClient49.failedRoutes = routeSet86;
        okHttpClient45.failedRoutes = routeSet86;
        okHttpClient11.failedRoutes = routeSet86;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache92 = okHttpClient11.okResponseCache();
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNull(okAuthenticator13);
        org.junit.Assert.assertNull(responseCache18);
        org.junit.Assert.assertNull(sSLSocketFactory19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(okHttpClient25);
        org.junit.Assert.assertNull(cookieHandler26);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNotNull(connectionPool33);
        org.junit.Assert.assertNotNull(routeSet37);
        org.junit.Assert.assertNotNull(okHttpClient40);
        org.junit.Assert.assertNotNull(okHttpClient42);
        org.junit.Assert.assertNotNull(proxy43);
        org.junit.Assert.assertNull(socketAddress44);
        org.junit.Assert.assertNotNull(okHttpClient45);
        org.junit.Assert.assertNotNull(okHttpClient47);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNull(hostnameVerifier54);
        org.junit.Assert.assertNull(proxy55);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNotNull(connectionPool64);
        org.junit.Assert.assertNull(cookieHandler66);
        org.junit.Assert.assertNull(okResponseCache67);
        org.junit.Assert.assertNull(cookieHandler68);
        org.junit.Assert.assertNotNull(okHttpClient74);
        org.junit.Assert.assertNull(cookieHandler75);
        org.junit.Assert.assertNull(strList81);
        org.junit.Assert.assertNotNull(connectionPool82);
        org.junit.Assert.assertNotNull(routeSet86);
        org.junit.Assert.assertNull(okResponseCache92);
    }

    @Test
    public void test07479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07479");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.Proxy proxy8 = null;
        okHttpClient0.proxy = proxy8;
        java.util.Set<com.squareup.okhttp.Route> routeSet10 = okHttpClient0.failedRoutes;
        javax.net.ssl.HostnameVerifier hostnameVerifier11 = okHttpClient0.getHostnameVerifier();
        java.net.ProxySelector proxySelector12 = null;
        okHttpClient0.proxySelector = proxySelector12;
        java.net.ProxySelector proxySelector14 = okHttpClient0.proxySelector;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier16 = null;
        okHttpClient15.hostnameVerifier = hostnameVerifier16;
        java.net.ResponseCache responseCache18 = null;
        okHttpClient15.responseCache = responseCache18;
        java.util.List<java.lang.String> strList20 = okHttpClient15.transports;
        java.net.Proxy proxy21 = java.net.Proxy.NO_PROXY;
        boolean boolean23 = proxy21.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type24 = proxy21.type();
        java.net.SocketAddress socketAddress25 = proxy21.address();
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient15.setProxy(proxy21);
        java.net.Proxy proxy27 = okHttpClient26.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient28 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier29 = null;
        okHttpClient28.hostnameVerifier = hostnameVerifier29;
        java.net.ResponseCache responseCache31 = null;
        okHttpClient28.responseCache = responseCache31;
        javax.net.ssl.HostnameVerifier hostnameVerifier33 = okHttpClient28.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient28.setFollowProtocolRedirects(false);
        java.net.Proxy proxy36 = okHttpClient28.getProxy();
        boolean boolean37 = okHttpClient28.followProtocolRedirects;
        java.net.Proxy proxy38 = okHttpClient28.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient40 = okHttpClient28.setFollowProtocolRedirects(false);
        boolean boolean41 = proxy27.equals((java.lang.Object) okHttpClient40);
        okHttpClient0.proxy = proxy27;
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNotNull(routeSet10);
        org.junit.Assert.assertNull(hostnameVerifier11);
        org.junit.Assert.assertNull(proxySelector14);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(proxy21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + type24 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type24.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress25);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNotNull(proxy27);
        org.junit.Assert.assertNull(hostnameVerifier33);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNull(proxy36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(proxy38);
        org.junit.Assert.assertNotNull(okHttpClient40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test07480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07480");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.CookieHandler cookieHandler8 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache9 = okHttpClient0.okResponseCache();
        java.net.CookieHandler cookieHandler10 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        com.squareup.okhttp.OkHttpClient okHttpClient12 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier13 = null;
        okHttpClient12.hostnameVerifier = hostnameVerifier13;
        java.net.ProxySelector proxySelector15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient12.setProxySelector(proxySelector15);
        java.net.CookieHandler cookieHandler17 = okHttpClient12.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier19 = null;
        okHttpClient18.hostnameVerifier = hostnameVerifier19;
        java.net.ResponseCache responseCache21 = null;
        okHttpClient18.responseCache = responseCache21;
        java.util.List<java.lang.String> strList23 = okHttpClient18.transports;
        com.squareup.okhttp.ConnectionPool connectionPool24 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient18.connectionPool = connectionPool24;
        java.net.Proxy proxy26 = null;
        okHttpClient18.proxy = proxy26;
        java.util.Set<com.squareup.okhttp.Route> routeSet28 = okHttpClient18.failedRoutes;
        okHttpClient12.failedRoutes = routeSet28;
        okHttpClient11.failedRoutes = routeSet28;
        java.util.List<java.lang.String> strList31 = okHttpClient11.getTransports();
        com.squareup.okhttp.OkHttpClient okHttpClient32 = new com.squareup.okhttp.OkHttpClient(okHttpClient11);
        com.squareup.okhttp.OkHttpClient okHttpClient33 = new com.squareup.okhttp.OkHttpClient(okHttpClient11);
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient11.copyWithDefaults();
        java.util.List<java.lang.String> strList35 = okHttpClient34.transports;
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNull(cookieHandler8);
        org.junit.Assert.assertNull(okResponseCache9);
        org.junit.Assert.assertNull(cookieHandler10);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNull(cookieHandler17);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNotNull(connectionPool24);
        org.junit.Assert.assertNotNull(routeSet28);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertNotNull(strList35);
    }

    @Test
    public void test07481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07481");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.Proxy proxy8 = null;
        okHttpClient0.proxy = proxy8;
        boolean boolean10 = okHttpClient0.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient0.setFollowProtocolRedirects(true);
        javax.net.ssl.HostnameVerifier hostnameVerifier13 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier13;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        com.squareup.okhttp.OkHttpClient okHttpClient16 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier17 = null;
        okHttpClient16.hostnameVerifier = hostnameVerifier17;
        java.net.ProxySelector proxySelector19 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient16.setProxySelector(proxySelector19);
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient20.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool23 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient22.connectionPool = connectionPool23;
        com.squareup.okhttp.OkHttpClient okHttpClient25 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier26 = null;
        okHttpClient25.hostnameVerifier = hostnameVerifier26;
        java.net.ResponseCache responseCache28 = null;
        okHttpClient25.responseCache = responseCache28;
        java.util.List<java.lang.String> strList30 = okHttpClient25.transports;
        com.squareup.okhttp.ConnectionPool connectionPool31 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient25.connectionPool = connectionPool31;
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient22.setConnectionPool(connectionPool31);
        com.squareup.okhttp.OkHttpClient okHttpClient34 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier35 = null;
        okHttpClient34.hostnameVerifier = hostnameVerifier35;
        java.net.ProxySelector proxySelector37 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient34.setProxySelector(proxySelector37);
        java.net.CookieHandler cookieHandler39 = okHttpClient34.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient40 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier41 = null;
        okHttpClient40.hostnameVerifier = hostnameVerifier41;
        java.net.ResponseCache responseCache43 = null;
        okHttpClient40.responseCache = responseCache43;
        java.util.List<java.lang.String> strList45 = okHttpClient40.transports;
        com.squareup.okhttp.ConnectionPool connectionPool46 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient40.connectionPool = connectionPool46;
        java.net.Proxy proxy48 = null;
        okHttpClient40.proxy = proxy48;
        java.util.Set<com.squareup.okhttp.Route> routeSet50 = okHttpClient40.failedRoutes;
        okHttpClient34.failedRoutes = routeSet50;
        java.net.ProxySelector proxySelector52 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient53 = okHttpClient34.setProxySelector(proxySelector52);
        com.squareup.okhttp.OkHttpClient okHttpClient54 = okHttpClient34.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient55 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier56 = null;
        okHttpClient55.hostnameVerifier = hostnameVerifier56;
        java.net.ResponseCache responseCache58 = null;
        okHttpClient55.responseCache = responseCache58;
        javax.net.ssl.HostnameVerifier hostnameVerifier60 = okHttpClient55.hostnameVerifier;
        java.net.Proxy proxy61 = okHttpClient55.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool64 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient55.connectionPool = connectionPool64;
        com.squareup.okhttp.OkHttpClient okHttpClient66 = okHttpClient55.copyWithDefaults();
        java.net.Proxy proxy67 = okHttpClient66.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier68 = okHttpClient66.getHostnameVerifier();
        okHttpClient34.hostnameVerifier = hostnameVerifier68;
        okHttpClient33.hostnameVerifier = hostnameVerifier68;
        okHttpClient21.hostnameVerifier = hostnameVerifier68;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache72 = okHttpClient21.okResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient73 = okHttpClient21.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool74 = okHttpClient73.getConnectionPool();
        com.squareup.okhttp.OkHttpClient okHttpClient75 = okHttpClient0.setConnectionPool(connectionPool74);
        okHttpClient75.followProtocolRedirects = false;
        java.net.ResponseCache responseCache78 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient79 = okHttpClient75.setResponseCache(responseCache78);
        com.squareup.okhttp.OkHttpClient okHttpClient80 = okHttpClient79.copyWithDefaults();
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNotNull(connectionPool23);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNotNull(connectionPool31);
        org.junit.Assert.assertNotNull(okHttpClient33);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNull(cookieHandler39);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNotNull(connectionPool46);
        org.junit.Assert.assertNotNull(routeSet50);
        org.junit.Assert.assertNotNull(okHttpClient53);
        org.junit.Assert.assertNotNull(okHttpClient54);
        org.junit.Assert.assertNull(hostnameVerifier60);
        org.junit.Assert.assertNull(proxy61);
        org.junit.Assert.assertNotNull(okHttpClient66);
        org.junit.Assert.assertNull(proxy67);
        org.junit.Assert.assertNotNull(hostnameVerifier68);
        org.junit.Assert.assertNull(okResponseCache72);
        org.junit.Assert.assertNotNull(okHttpClient73);
        org.junit.Assert.assertNotNull(connectionPool74);
        org.junit.Assert.assertNotNull(okHttpClient75);
        org.junit.Assert.assertNotNull(okHttpClient79);
        org.junit.Assert.assertNotNull(okHttpClient80);
    }

    @Test
    public void test07482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07482");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient0.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient11.copyWithDefaults();
        java.net.CookieHandler cookieHandler13 = okHttpClient11.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient14 = new com.squareup.okhttp.OkHttpClient(okHttpClient11);
        java.net.CookieHandler cookieHandler15 = okHttpClient11.cookieHandler;
        java.net.ProxySelector proxySelector16 = okHttpClient11.proxySelector;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = null;
        okHttpClient17.hostnameVerifier = hostnameVerifier18;
        java.net.ResponseCache responseCache20 = null;
        okHttpClient17.responseCache = responseCache20;
        java.util.List<java.lang.String> strList22 = okHttpClient17.transports;
        com.squareup.okhttp.ConnectionPool connectionPool23 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient17.connectionPool = connectionPool23;
        java.net.Proxy proxy25 = null;
        okHttpClient17.proxy = proxy25;
        boolean boolean27 = okHttpClient17.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient17.copyWithDefaults();
        java.net.CookieHandler cookieHandler29 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient30 = okHttpClient28.setCookieHandler(cookieHandler29);
        java.net.Proxy proxy31 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient28.setProxy(proxy31);
        com.squareup.okhttp.OkHttpClient okHttpClient33 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier34 = null;
        okHttpClient33.hostnameVerifier = hostnameVerifier34;
        java.net.ProxySelector proxySelector36 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient33.setProxySelector(proxySelector36);
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient37.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient38.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet40 = okHttpClient39.failedRoutes;
        boolean boolean41 = proxy31.equals((java.lang.Object) okHttpClient39);
        java.util.List<java.lang.String> strList42 = okHttpClient39.getTransports();
        // The following exception was thrown during execution in test generation
        try {
            com.squareup.okhttp.OkHttpClient okHttpClient43 = okHttpClient11.setTransports(strList42);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: transports doesn't contain http/1.1: [hi!]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertNull(cookieHandler13);
        org.junit.Assert.assertNull(cookieHandler15);
// flaky:         org.junit.Assert.assertNull(proxySelector16);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNotNull(connectionPool23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNotNull(okHttpClient30);
        org.junit.Assert.assertNotNull(proxy31);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertNotNull(okHttpClient37);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNotNull(okHttpClient39);
        org.junit.Assert.assertNotNull(routeSet40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strList42);
    }

    @Test
    public void test07483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07483");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.Proxy proxy8 = null;
        okHttpClient0.proxy = proxy8;
        boolean boolean10 = okHttpClient0.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.copyWithDefaults();
        java.net.CookieHandler cookieHandler12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient0.setCookieHandler(cookieHandler12);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory14 = okHttpClient0.getSslSocketFactory();
        java.net.ResponseCache responseCache15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient0.setResponseCache(responseCache15);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory17 = okHttpClient16.sslSocketFactory;
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNull(sSLSocketFactory14);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNull(sSLSocketFactory17);
    }

    @Test
    public void test07484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07484");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.Proxy proxy8 = null;
        okHttpClient0.proxy = proxy8;
        boolean boolean10 = okHttpClient0.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient0.setFollowProtocolRedirects(true);
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = null;
        okHttpClient13.hostnameVerifier = hostnameVerifier14;
        java.net.ResponseCache responseCache16 = null;
        okHttpClient13.responseCache = responseCache16;
        java.util.List<java.lang.String> strList18 = okHttpClient13.transports;
        javax.net.ssl.HostnameVerifier hostnameVerifier19 = null;
        okHttpClient13.hostnameVerifier = hostnameVerifier19;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache21 = okHttpClient13.okResponseCache();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory22 = okHttpClient13.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient23 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier24 = null;
        okHttpClient23.hostnameVerifier = hostnameVerifier24;
        java.net.ResponseCache responseCache26 = null;
        okHttpClient23.responseCache = responseCache26;
        javax.net.ssl.HostnameVerifier hostnameVerifier28 = okHttpClient23.hostnameVerifier;
        java.net.Proxy proxy29 = okHttpClient23.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool32 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient23.connectionPool = connectionPool32;
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient23.copyWithDefaults();
        java.net.Proxy proxy35 = okHttpClient34.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier36 = okHttpClient34.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient13.setHostnameVerifier(hostnameVerifier36);
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient12.setHostnameVerifier(hostnameVerifier36);
        java.net.Proxy proxy39 = okHttpClient12.proxy;
        java.net.ResponseCache responseCache40 = okHttpClient12.responseCache;
        java.net.CookieHandler cookieHandler41 = okHttpClient12.cookieHandler;
        com.squareup.okhttp.OkHttpClient okHttpClient42 = new com.squareup.okhttp.OkHttpClient(okHttpClient12);
        com.squareup.okhttp.OkHttpClient okHttpClient43 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier44 = null;
        okHttpClient43.hostnameVerifier = hostnameVerifier44;
        java.net.ResponseCache responseCache46 = null;
        okHttpClient43.responseCache = responseCache46;
        javax.net.ssl.HostnameVerifier hostnameVerifier48 = okHttpClient43.hostnameVerifier;
        java.net.Proxy proxy49 = okHttpClient43.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient50 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache51 = okHttpClient50.okResponseCache();
        java.net.ResponseCache responseCache52 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient53 = okHttpClient50.setResponseCache(responseCache52);
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList56 = new java.util.ArrayList<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        okHttpClient50.transports = strList56;
        okHttpClient43.transports = strList56;
        com.squareup.okhttp.OkHttpClient.DEFAULT_TRANSPORTS = strList56;
        okHttpClient12.transports = strList56;
        com.squareup.okhttp.OkHttpClient okHttpClient62 = okHttpClient12.copyWithDefaults();
        java.net.ResponseCache responseCache63 = null;
        okHttpClient12.responseCache = responseCache63;
        boolean boolean65 = okHttpClient12.followProtocolRedirects;
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(okResponseCache21);
        org.junit.Assert.assertNull(sSLSocketFactory22);
        org.junit.Assert.assertNull(hostnameVerifier28);
        org.junit.Assert.assertNull(proxy29);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertNull(proxy35);
        org.junit.Assert.assertNotNull(hostnameVerifier36);
        org.junit.Assert.assertNotNull(okHttpClient37);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNull(proxy39);
        org.junit.Assert.assertNull(responseCache40);
        org.junit.Assert.assertNull(cookieHandler41);
        org.junit.Assert.assertNull(hostnameVerifier48);
        org.junit.Assert.assertNull(proxy49);
        org.junit.Assert.assertNull(okResponseCache51);
        org.junit.Assert.assertNotNull(okHttpClient53);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(okHttpClient62);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
    }

    @Test
    public void test07485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07485");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory3 = okHttpClient0.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient4 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = null;
        okHttpClient4.hostnameVerifier = hostnameVerifier5;
        java.net.ResponseCache responseCache7 = null;
        okHttpClient4.responseCache = responseCache7;
        java.util.List<java.lang.String> strList9 = okHttpClient4.transports;
        com.squareup.okhttp.ConnectionPool connectionPool10 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient4.connectionPool = connectionPool10;
        java.net.Proxy proxy12 = null;
        okHttpClient4.proxy = proxy12;
        boolean boolean14 = okHttpClient4.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient(okHttpClient4);
        java.net.ProxySelector proxySelector16 = okHttpClient15.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier17 = okHttpClient15.hostnameVerifier;
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = okHttpClient15.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient19 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool20 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient19.connectionPool = connectionPool20;
        com.squareup.okhttp.OkAuthenticator okAuthenticator22 = null;
        okHttpClient19.authenticator = okAuthenticator22;
        java.net.CookieHandler cookieHandler24 = null;
        okHttpClient19.cookieHandler = cookieHandler24;
        java.net.Proxy proxy26 = java.net.Proxy.NO_PROXY;
        boolean boolean28 = proxy26.equals((java.lang.Object) 1L);
        com.squareup.okhttp.OkHttpClient okHttpClient29 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache30 = okHttpClient29.okResponseCache();
        java.net.ResponseCache responseCache31 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient29.setResponseCache(responseCache31);
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        okHttpClient29.transports = strList35;
        boolean boolean38 = proxy26.equals((java.lang.Object) strList35);
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient19.setProxy(proxy26);
        com.squareup.okhttp.OkHttpClient okHttpClient40 = okHttpClient15.setProxy(proxy26);
        java.lang.String str41 = proxy26.toString();
        okHttpClient0.proxy = proxy26;
        com.squareup.okhttp.OkHttpClient okHttpClient43 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        org.junit.Assert.assertNull(sSLSocketFactory3);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(connectionPool10);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(proxySelector16);
        org.junit.Assert.assertNull(hostnameVerifier17);
        org.junit.Assert.assertNull(hostnameVerifier18);
        org.junit.Assert.assertNotNull(connectionPool20);
        org.junit.Assert.assertNotNull(proxy26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(okResponseCache30);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(okHttpClient39);
        org.junit.Assert.assertNotNull(okHttpClient40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "DIRECT" + "'", str41, "DIRECT");
    }

    @Test
    public void test07486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07486");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        java.net.ResponseCache responseCache12 = okHttpClient0.responseCache;
        java.net.ResponseCache responseCache13 = okHttpClient0.getResponseCache();
        java.net.ResponseCache responseCache14 = okHttpClient0.responseCache;
        java.net.ProxySelector proxySelector15 = okHttpClient0.proxySelector;
        java.util.List<java.lang.String> strList16 = okHttpClient0.transports;
        java.net.ProxySelector proxySelector17 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient0.setProxySelector(proxySelector17);
        com.squareup.okhttp.OkAuthenticator okAuthenticator19 = okHttpClient18.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache21 = okHttpClient20.okResponseCache();
        java.net.ResponseCache responseCache22 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient20.setResponseCache(responseCache22);
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList26 = new java.util.ArrayList<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        okHttpClient20.transports = strList26;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory29 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient30 = okHttpClient20.setSSLSocketFactory(sSLSocketFactory29);
        com.squareup.okhttp.OkHttpClient okHttpClient31 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier32 = null;
        okHttpClient31.hostnameVerifier = hostnameVerifier32;
        java.net.ResponseCache responseCache34 = null;
        okHttpClient31.responseCache = responseCache34;
        javax.net.ssl.HostnameVerifier hostnameVerifier36 = okHttpClient31.hostnameVerifier;
        java.net.Proxy proxy37 = okHttpClient31.getProxy();
        java.net.CookieHandler cookieHandler38 = null;
        okHttpClient31.cookieHandler = cookieHandler38;
        okHttpClient31.followProtocolRedirects = true;
        com.squareup.okhttp.OkHttpClient okHttpClient42 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier43 = null;
        okHttpClient42.hostnameVerifier = hostnameVerifier43;
        java.net.ResponseCache responseCache45 = null;
        okHttpClient42.responseCache = responseCache45;
        javax.net.ssl.HostnameVerifier hostnameVerifier47 = okHttpClient42.hostnameVerifier;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory48 = okHttpClient42.sslSocketFactory;
        java.net.CookieHandler cookieHandler49 = okHttpClient42.cookieHandler;
        javax.net.ssl.HostnameVerifier hostnameVerifier50 = okHttpClient42.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient51 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool52 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient51.connectionPool = connectionPool52;
        com.squareup.okhttp.OkAuthenticator okAuthenticator54 = null;
        okHttpClient51.authenticator = okAuthenticator54;
        java.util.List<java.lang.String> strList56 = okHttpClient51.transports;
        java.net.ResponseCache responseCache57 = null;
        okHttpClient51.responseCache = responseCache57;
        com.squareup.okhttp.OkHttpClient okHttpClient59 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier60 = null;
        okHttpClient59.hostnameVerifier = hostnameVerifier60;
        java.net.ResponseCache responseCache62 = null;
        okHttpClient59.responseCache = responseCache62;
        javax.net.ssl.HostnameVerifier hostnameVerifier64 = okHttpClient59.hostnameVerifier;
        java.net.Proxy proxy65 = okHttpClient59.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool68 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient59.connectionPool = connectionPool68;
        com.squareup.okhttp.OkHttpClient okHttpClient70 = okHttpClient59.copyWithDefaults();
        java.net.Proxy proxy71 = okHttpClient70.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier72 = okHttpClient70.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient73 = okHttpClient51.setHostnameVerifier(hostnameVerifier72);
        com.squareup.okhttp.OkHttpClient okHttpClient74 = okHttpClient42.setHostnameVerifier(hostnameVerifier72);
        okHttpClient31.hostnameVerifier = hostnameVerifier72;
        com.squareup.okhttp.OkHttpClient okHttpClient76 = okHttpClient20.setHostnameVerifier(hostnameVerifier72);
        com.squareup.okhttp.OkHttpClient okHttpClient77 = new com.squareup.okhttp.OkHttpClient(okHttpClient76);
        javax.net.ssl.HostnameVerifier hostnameVerifier78 = okHttpClient76.getHostnameVerifier();
        okHttpClient18.hostnameVerifier = hostnameVerifier78;
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(responseCache12);
        org.junit.Assert.assertNull(responseCache13);
        org.junit.Assert.assertNull(responseCache14);
        org.junit.Assert.assertNull(proxySelector15);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNull(okAuthenticator19);
        org.junit.Assert.assertNull(okResponseCache21);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(okHttpClient30);
        org.junit.Assert.assertNull(hostnameVerifier36);
        org.junit.Assert.assertNull(proxy37);
        org.junit.Assert.assertNull(hostnameVerifier47);
        org.junit.Assert.assertNull(sSLSocketFactory48);
        org.junit.Assert.assertNull(cookieHandler49);
        org.junit.Assert.assertNull(hostnameVerifier50);
        org.junit.Assert.assertNotNull(connectionPool52);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNull(hostnameVerifier64);
        org.junit.Assert.assertNull(proxy65);
        org.junit.Assert.assertNotNull(okHttpClient70);
        org.junit.Assert.assertNull(proxy71);
        org.junit.Assert.assertNotNull(hostnameVerifier72);
        org.junit.Assert.assertNotNull(okHttpClient73);
        org.junit.Assert.assertNotNull(okHttpClient74);
        org.junit.Assert.assertNotNull(okHttpClient76);
        org.junit.Assert.assertNotNull(hostnameVerifier78);
    }

    @Test
    public void test07487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07487");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.CookieHandler cookieHandler5 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = null;
        okHttpClient6.hostnameVerifier = hostnameVerifier7;
        java.net.ResponseCache responseCache9 = null;
        okHttpClient6.responseCache = responseCache9;
        java.util.List<java.lang.String> strList11 = okHttpClient6.transports;
        com.squareup.okhttp.ConnectionPool connectionPool12 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient6.connectionPool = connectionPool12;
        java.net.Proxy proxy14 = null;
        okHttpClient6.proxy = proxy14;
        java.util.Set<com.squareup.okhttp.Route> routeSet16 = okHttpClient6.failedRoutes;
        okHttpClient0.failedRoutes = routeSet16;
        java.net.ProxySelector proxySelector18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient0.setProxySelector(proxySelector18);
        javax.net.ssl.HostnameVerifier hostnameVerifier20 = okHttpClient19.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient19.copyWithDefaults();
        okHttpClient21.followProtocolRedirects = false;
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNotNull(routeSet16);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNull(hostnameVerifier20);
        org.junit.Assert.assertNotNull(okHttpClient21);
    }

    @Test
    public void test07488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07488");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.ResponseCache responseCache5 = null;
        okHttpClient4.responseCache = responseCache5;
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = okHttpClient4.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient4.setFollowProtocolRedirects(false);
        com.squareup.okhttp.OkHttpClient okHttpClient10 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier11 = null;
        okHttpClient10.hostnameVerifier = hostnameVerifier11;
        java.net.ResponseCache responseCache13 = null;
        okHttpClient10.responseCache = responseCache13;
        java.util.List<java.lang.String> strList15 = okHttpClient10.transports;
        com.squareup.okhttp.ConnectionPool connectionPool16 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient10.connectionPool = connectionPool16;
        com.squareup.okhttp.ConnectionPool connectionPool18 = okHttpClient10.connectionPool;
        int int19 = connectionPool18.getHttpConnectionCount();
        okHttpClient4.connectionPool = connectionPool18;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = new com.squareup.okhttp.OkHttpClient(okHttpClient4);
        java.net.CookieHandler cookieHandler22 = null;
        okHttpClient4.cookieHandler = cookieHandler22;
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(hostnameVerifier7);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(connectionPool16);
        org.junit.Assert.assertNotNull(connectionPool18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
    }

    @Test
    public void test07489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07489");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.CookieHandler cookieHandler5 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = null;
        okHttpClient6.hostnameVerifier = hostnameVerifier7;
        java.net.ResponseCache responseCache9 = null;
        okHttpClient6.responseCache = responseCache9;
        java.util.List<java.lang.String> strList11 = okHttpClient6.transports;
        com.squareup.okhttp.ConnectionPool connectionPool12 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient6.connectionPool = connectionPool12;
        java.net.Proxy proxy14 = null;
        okHttpClient6.proxy = proxy14;
        java.util.Set<com.squareup.okhttp.Route> routeSet16 = okHttpClient6.failedRoutes;
        okHttpClient0.failedRoutes = routeSet16;
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient0.setHostnameVerifier(hostnameVerifier18);
        java.net.ProxySelector proxySelector20 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient19.setProxySelector(proxySelector20);
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient19.setFollowProtocolRedirects(true);
        com.squareup.okhttp.OkHttpClient okHttpClient24 = new com.squareup.okhttp.OkHttpClient(okHttpClient23);
        com.squareup.okhttp.OkHttpClient okHttpClient25 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool26 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient25.connectionPool = connectionPool26;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier29 = null;
        okHttpClient28.hostnameVerifier = hostnameVerifier29;
        java.net.ResponseCache responseCache31 = null;
        okHttpClient28.responseCache = responseCache31;
        java.util.List<java.lang.String> strList33 = okHttpClient28.transports;
        com.squareup.okhttp.ConnectionPool connectionPool34 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient28.connectionPool = connectionPool34;
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient25.setConnectionPool(connectionPool34);
        java.net.Proxy proxy37 = okHttpClient36.proxy;
        okHttpClient36.followProtocolRedirects = true;
        com.squareup.okhttp.OkHttpClient okHttpClient40 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool41 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient40.connectionPool = connectionPool41;
        com.squareup.okhttp.OkHttpClient okHttpClient43 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier44 = null;
        okHttpClient43.hostnameVerifier = hostnameVerifier44;
        java.net.ResponseCache responseCache46 = null;
        okHttpClient43.responseCache = responseCache46;
        java.util.List<java.lang.String> strList48 = okHttpClient43.transports;
        com.squareup.okhttp.ConnectionPool connectionPool49 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient43.connectionPool = connectionPool49;
        com.squareup.okhttp.OkHttpClient okHttpClient51 = okHttpClient40.setConnectionPool(connectionPool49);
        com.squareup.okhttp.ConnectionPool connectionPool52 = okHttpClient51.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator53 = okHttpClient51.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool56 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient51.connectionPool = connectionPool56;
        java.net.ResponseCache responseCache58 = okHttpClient51.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory59 = okHttpClient51.sslSocketFactory;
        java.net.Proxy proxy60 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress61 = proxy60.address();
        com.squareup.okhttp.OkHttpClient okHttpClient62 = okHttpClient51.setProxy(proxy60);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory63 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient64 = okHttpClient51.setSSLSocketFactory(sSLSocketFactory63);
        com.squareup.okhttp.OkHttpClient okHttpClient65 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier66 = null;
        okHttpClient65.hostnameVerifier = hostnameVerifier66;
        java.net.ResponseCache responseCache68 = null;
        okHttpClient65.responseCache = responseCache68;
        javax.net.ssl.HostnameVerifier hostnameVerifier70 = okHttpClient65.hostnameVerifier;
        java.net.Proxy proxy71 = okHttpClient65.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool74 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient65.connectionPool = connectionPool74;
        com.squareup.okhttp.OkHttpClient okHttpClient76 = okHttpClient65.copyWithDefaults();
        java.net.ResponseCache responseCache77 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient78 = okHttpClient76.setResponseCache(responseCache77);
        com.squareup.okhttp.OkAuthenticator okAuthenticator79 = okHttpClient76.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient80 = okHttpClient51.setAuthenticator(okAuthenticator79);
        java.net.Proxy proxy81 = okHttpClient80.getProxy();
        com.squareup.okhttp.OkAuthenticator okAuthenticator82 = okHttpClient80.getAuthenticator();
        okHttpClient36.authenticator = okAuthenticator82;
        com.squareup.okhttp.OkHttpClient okHttpClient84 = okHttpClient23.setAuthenticator(okAuthenticator82);
        com.squareup.okhttp.ConnectionPool connectionPool85 = okHttpClient23.getConnectionPool();
        boolean boolean86 = okHttpClient23.getFollowProtocolRedirects();
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNotNull(routeSet16);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertNotNull(connectionPool26);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNotNull(connectionPool34);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNull(proxy37);
        org.junit.Assert.assertNotNull(connectionPool41);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNotNull(connectionPool49);
        org.junit.Assert.assertNotNull(okHttpClient51);
        org.junit.Assert.assertNotNull(connectionPool52);
        org.junit.Assert.assertNull(okAuthenticator53);
        org.junit.Assert.assertNull(responseCache58);
        org.junit.Assert.assertNull(sSLSocketFactory59);
        org.junit.Assert.assertNotNull(proxy60);
        org.junit.Assert.assertNull(socketAddress61);
        org.junit.Assert.assertNotNull(okHttpClient62);
        org.junit.Assert.assertNotNull(okHttpClient64);
        org.junit.Assert.assertNull(hostnameVerifier70);
        org.junit.Assert.assertNull(proxy71);
        org.junit.Assert.assertNotNull(okHttpClient76);
        org.junit.Assert.assertNotNull(okHttpClient78);
        org.junit.Assert.assertNotNull(okAuthenticator79);
        org.junit.Assert.assertNotNull(okHttpClient80);
        org.junit.Assert.assertNotNull(proxy81);
        org.junit.Assert.assertNotNull(okAuthenticator82);
        org.junit.Assert.assertNotNull(okHttpClient84);
        org.junit.Assert.assertNull(connectionPool85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
    }

    @Test
    public void test07490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07490");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.ConnectionPool connectionPool12 = okHttpClient11.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator13 = okHttpClient11.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool16 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient11.connectionPool = connectionPool16;
        java.net.ResponseCache responseCache18 = okHttpClient11.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory19 = okHttpClient11.sslSocketFactory;
        java.net.Proxy proxy20 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress21 = proxy20.address();
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient11.setProxy(proxy20);
        com.squareup.okhttp.OkHttpClient okHttpClient23 = new com.squareup.okhttp.OkHttpClient(okHttpClient22);
        com.squareup.okhttp.OkHttpClient okHttpClient24 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier25 = null;
        okHttpClient24.hostnameVerifier = hostnameVerifier25;
        java.net.ResponseCache responseCache27 = null;
        okHttpClient24.responseCache = responseCache27;
        java.util.List<java.lang.String> strList29 = okHttpClient24.transports;
        com.squareup.okhttp.ConnectionPool connectionPool30 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient24.connectionPool = connectionPool30;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient24.copyWithDefaults();
        java.net.ProxySelector proxySelector33 = okHttpClient32.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory34 = okHttpClient32.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient22.setSSLSocketFactory(sSLSocketFactory34);
        com.squareup.okhttp.OkHttpClient okHttpClient36 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool37 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient36.connectionPool = connectionPool37;
        com.squareup.okhttp.OkHttpClient okHttpClient39 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier40 = null;
        okHttpClient39.hostnameVerifier = hostnameVerifier40;
        java.net.ResponseCache responseCache42 = null;
        okHttpClient39.responseCache = responseCache42;
        java.util.List<java.lang.String> strList44 = okHttpClient39.transports;
        com.squareup.okhttp.ConnectionPool connectionPool45 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient39.connectionPool = connectionPool45;
        com.squareup.okhttp.OkHttpClient okHttpClient47 = okHttpClient36.setConnectionPool(connectionPool45);
        java.net.Proxy proxy48 = okHttpClient47.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient49 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool50 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient49.connectionPool = connectionPool50;
        int int52 = connectionPool50.getSpdyConnectionCount();
        okHttpClient47.connectionPool = connectionPool50;
        int int54 = connectionPool50.getSpdyConnectionCount();
        int int55 = connectionPool50.getConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient56 = okHttpClient35.setConnectionPool(connectionPool50);
        com.squareup.okhttp.ConnectionPool connectionPool59 = new com.squareup.okhttp.ConnectionPool((int) (short) 10, 0L);
        okHttpClient35.connectionPool = connectionPool59;
        com.squareup.okhttp.ConnectionPool connectionPool63 = new com.squareup.okhttp.ConnectionPool((int) ' ', (long) 100);
        com.squareup.okhttp.OkHttpClient okHttpClient64 = okHttpClient35.setConnectionPool(connectionPool63);
        java.net.ResponseCache responseCache65 = okHttpClient64.getResponseCache();
        com.squareup.okhttp.ConnectionPool connectionPool68 = new com.squareup.okhttp.ConnectionPool(10, 1L);
        com.squareup.okhttp.OkHttpClient okHttpClient69 = okHttpClient64.setConnectionPool(connectionPool68);
        com.squareup.okhttp.OkHttpClient okHttpClient70 = new com.squareup.okhttp.OkHttpClient(okHttpClient69);
        com.squareup.okhttp.OkAuthenticator okAuthenticator71 = okHttpClient70.authenticator;
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNull(okAuthenticator13);
        org.junit.Assert.assertNull(responseCache18);
        org.junit.Assert.assertNull(sSLSocketFactory19);
        org.junit.Assert.assertNotNull(proxy20);
        org.junit.Assert.assertNull(socketAddress21);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(connectionPool30);
        org.junit.Assert.assertNotNull(okHttpClient32);
// flaky:         org.junit.Assert.assertNull(proxySelector33);
        org.junit.Assert.assertNotNull(sSLSocketFactory34);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNotNull(connectionPool37);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNotNull(connectionPool45);
        org.junit.Assert.assertNotNull(okHttpClient47);
        org.junit.Assert.assertNull(proxy48);
        org.junit.Assert.assertNotNull(connectionPool50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(okHttpClient56);
        org.junit.Assert.assertNotNull(okHttpClient64);
        org.junit.Assert.assertNull(responseCache65);
        org.junit.Assert.assertNotNull(okHttpClient69);
        org.junit.Assert.assertNull(okAuthenticator71);
    }

    @Test
    public void test07491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07491");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.CookieHandler cookieHandler8 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache9 = okHttpClient0.okResponseCache();
        java.net.CookieHandler cookieHandler10 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        java.net.Proxy proxy12 = java.net.Proxy.NO_PROXY;
        boolean boolean14 = proxy12.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type15 = proxy12.type();
        java.net.SocketAddress socketAddress16 = proxy12.address();
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient0.setProxy(proxy12);
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier19 = null;
        okHttpClient18.hostnameVerifier = hostnameVerifier19;
        java.net.ResponseCache responseCache21 = null;
        okHttpClient18.responseCache = responseCache21;
        java.util.List<java.lang.String> strList23 = okHttpClient18.transports;
        com.squareup.okhttp.ConnectionPool connectionPool24 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient18.connectionPool = connectionPool24;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient18.copyWithDefaults();
        java.net.ProxySelector proxySelector27 = okHttpClient26.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory28 = okHttpClient26.getSslSocketFactory();
        okHttpClient17.sslSocketFactory = sSLSocketFactory28;
        java.lang.String[] strArray30 = sSLSocketFactory28.getDefaultCipherSuites();
        java.lang.String[] strArray31 = sSLSocketFactory28.getSupportedCipherSuites();
        java.lang.String[] strArray32 = sSLSocketFactory28.getDefaultCipherSuites();
        java.lang.String[] strArray33 = sSLSocketFactory28.getDefaultCipherSuites();
        java.lang.String[] strArray34 = sSLSocketFactory28.getDefaultCipherSuites();
        java.net.Socket socket35 = sSLSocketFactory28.createSocket();
        java.net.InetAddress inetAddress36 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket38 = sSLSocketFactory28.createSocket(inetAddress36, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: port out of range:-1");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNull(cookieHandler8);
        org.junit.Assert.assertNull(okResponseCache9);
        org.junit.Assert.assertNull(cookieHandler10);
        org.junit.Assert.assertNotNull(proxy12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + type15 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type15.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress16);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNotNull(connectionPool24);
        org.junit.Assert.assertNotNull(okHttpClient26);
// flaky:         org.junit.Assert.assertNull(proxySelector27);
        org.junit.Assert.assertNotNull(sSLSocketFactory28);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(socket35);
        org.junit.Assert.assertEquals(socket35.toString(), "Socket[unconnected]");
    }

    @Test
    public void test07492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07492");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache1 = okHttpClient0.okResponseCache();
        java.net.ResponseCache responseCache2 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.setResponseCache(responseCache2);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        okHttpClient0.transports = strList6;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory9);
        java.net.CookieHandler cookieHandler11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient0.setCookieHandler(cookieHandler11);
        java.util.List<java.lang.String> strList13 = okHttpClient0.getTransports();
        com.squareup.okhttp.OkHttpClient.DEFAULT_TRANSPORTS = strList13;
        com.squareup.okhttp.OkHttpClient.DEFAULT_TRANSPORTS = strList13;
        com.squareup.okhttp.OkHttpClient.DEFAULT_TRANSPORTS = strList13;
        org.junit.Assert.assertNull(okResponseCache1);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertNotNull(strList13);
    }

    @Test
    public void test07493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07493");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache1 = okHttpClient0.okResponseCache();
        java.net.ResponseCache responseCache2 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.setResponseCache(responseCache2);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory4 = okHttpClient0.sslSocketFactory;
        java.net.CookieHandler cookieHandler5 = okHttpClient0.getCookieHandler();
        java.net.ResponseCache responseCache6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient0.setResponseCache(responseCache6);
        java.net.CookieHandler cookieHandler8 = null;
        okHttpClient0.cookieHandler = cookieHandler8;
        com.squareup.okhttp.OkAuthenticator okAuthenticator10 = okHttpClient0.getAuthenticator();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool12 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient11.connectionPool = connectionPool12;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier15 = null;
        okHttpClient14.hostnameVerifier = hostnameVerifier15;
        java.net.ResponseCache responseCache17 = null;
        okHttpClient14.responseCache = responseCache17;
        java.util.List<java.lang.String> strList19 = okHttpClient14.transports;
        com.squareup.okhttp.ConnectionPool connectionPool20 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient14.connectionPool = connectionPool20;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient11.setConnectionPool(connectionPool20);
        com.squareup.okhttp.ConnectionPool connectionPool23 = okHttpClient22.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator24 = okHttpClient22.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool27 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient22.connectionPool = connectionPool27;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory29 = okHttpClient22.sslSocketFactory;
        com.squareup.okhttp.OkAuthenticator okAuthenticator30 = okHttpClient22.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache32 = okHttpClient31.okResponseCache();
        java.net.ResponseCache responseCache33 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient31.setResponseCache(responseCache33);
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList37 = new java.util.ArrayList<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        okHttpClient31.transports = strList37;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory40 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient41 = okHttpClient31.setSSLSocketFactory(sSLSocketFactory40);
        com.squareup.okhttp.OkHttpClient okHttpClient42 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache43 = okHttpClient42.okResponseCache();
        java.net.ResponseCache responseCache44 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient45 = okHttpClient42.setResponseCache(responseCache44);
        java.lang.String[] strArray47 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList48 = new java.util.ArrayList<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        okHttpClient42.transports = strList48;
        okHttpClient31.transports = strList48;
        com.squareup.okhttp.OkHttpClient.DEFAULT_TRANSPORTS = strList48;
        okHttpClient22.transports = strList48;
        okHttpClient0.transports = strList48;
        org.junit.Assert.assertNull(okResponseCache1);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertNull(sSLSocketFactory4);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertNotNull(okHttpClient7);
        org.junit.Assert.assertNull(okAuthenticator10);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNotNull(connectionPool20);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNotNull(connectionPool23);
        org.junit.Assert.assertNull(okAuthenticator24);
        org.junit.Assert.assertNull(sSLSocketFactory29);
        org.junit.Assert.assertNull(okAuthenticator30);
        org.junit.Assert.assertNull(okResponseCache32);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(okHttpClient41);
        org.junit.Assert.assertNull(okResponseCache43);
        org.junit.Assert.assertNotNull(okHttpClient45);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
    }

    @Test
    public void test07494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07494");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        java.net.CookieHandler cookieHandler7 = null;
        okHttpClient0.cookieHandler = cookieHandler7;
        okHttpClient0.followProtocolRedirects = true;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = null;
        okHttpClient11.hostnameVerifier = hostnameVerifier12;
        java.net.ResponseCache responseCache14 = null;
        okHttpClient11.responseCache = responseCache14;
        javax.net.ssl.HostnameVerifier hostnameVerifier16 = okHttpClient11.hostnameVerifier;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory17 = okHttpClient11.sslSocketFactory;
        java.net.CookieHandler cookieHandler18 = okHttpClient11.cookieHandler;
        javax.net.ssl.HostnameVerifier hostnameVerifier19 = okHttpClient11.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool21 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient20.connectionPool = connectionPool21;
        com.squareup.okhttp.OkAuthenticator okAuthenticator23 = null;
        okHttpClient20.authenticator = okAuthenticator23;
        java.util.List<java.lang.String> strList25 = okHttpClient20.transports;
        java.net.ResponseCache responseCache26 = null;
        okHttpClient20.responseCache = responseCache26;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier29 = null;
        okHttpClient28.hostnameVerifier = hostnameVerifier29;
        java.net.ResponseCache responseCache31 = null;
        okHttpClient28.responseCache = responseCache31;
        javax.net.ssl.HostnameVerifier hostnameVerifier33 = okHttpClient28.hostnameVerifier;
        java.net.Proxy proxy34 = okHttpClient28.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool37 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient28.connectionPool = connectionPool37;
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient28.copyWithDefaults();
        java.net.Proxy proxy40 = okHttpClient39.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier41 = okHttpClient39.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient20.setHostnameVerifier(hostnameVerifier41);
        com.squareup.okhttp.OkHttpClient okHttpClient43 = okHttpClient11.setHostnameVerifier(hostnameVerifier41);
        okHttpClient0.hostnameVerifier = hostnameVerifier41;
        javax.net.ssl.HostnameVerifier hostnameVerifier45 = okHttpClient0.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient46 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        okHttpClient0.followProtocolRedirects = false;
        com.squareup.okhttp.OkHttpClient okHttpClient49 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.OkAuthenticator okAuthenticator50 = okHttpClient49.authenticator;
        java.net.ResponseCache responseCache51 = okHttpClient49.getResponseCache();
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNull(hostnameVerifier16);
        org.junit.Assert.assertNull(sSLSocketFactory17);
        org.junit.Assert.assertNull(cookieHandler18);
        org.junit.Assert.assertNull(hostnameVerifier19);
        org.junit.Assert.assertNotNull(connectionPool21);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNull(hostnameVerifier33);
        org.junit.Assert.assertNull(proxy34);
        org.junit.Assert.assertNotNull(okHttpClient39);
        org.junit.Assert.assertNull(proxy40);
        org.junit.Assert.assertNotNull(hostnameVerifier41);
        org.junit.Assert.assertNotNull(okHttpClient42);
        org.junit.Assert.assertNotNull(okHttpClient43);
        org.junit.Assert.assertNotNull(hostnameVerifier45);
        org.junit.Assert.assertNotNull(okHttpClient49);
        org.junit.Assert.assertNotNull(okAuthenticator50);
        org.junit.Assert.assertNull(responseCache51);
    }

    @Test
    public void test07495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07495");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.Proxy proxy8 = null;
        okHttpClient0.proxy = proxy8;
        boolean boolean10 = okHttpClient0.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        java.net.ProxySelector proxySelector12 = okHttpClient11.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier13 = okHttpClient11.hostnameVerifier;
        java.net.Proxy proxy14 = java.net.Proxy.NO_PROXY;
        boolean boolean16 = proxy14.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type17 = proxy14.type();
        java.net.Proxy.Type type18 = proxy14.type();
        okHttpClient11.proxy = proxy14;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier21 = null;
        okHttpClient20.hostnameVerifier = hostnameVerifier21;
        java.net.ResponseCache responseCache23 = null;
        okHttpClient20.responseCache = responseCache23;
        java.util.List<java.lang.String> strList25 = okHttpClient20.transports;
        com.squareup.okhttp.ConnectionPool connectionPool26 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient20.connectionPool = connectionPool26;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient20.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient29 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = null;
        okHttpClient29.hostnameVerifier = hostnameVerifier30;
        java.net.ResponseCache responseCache32 = null;
        okHttpClient29.responseCache = responseCache32;
        java.util.List<java.lang.String> strList34 = okHttpClient29.transports;
        com.squareup.okhttp.ConnectionPool connectionPool35 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient29.connectionPool = connectionPool35;
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient29.copyWithDefaults();
        java.net.ProxySelector proxySelector38 = okHttpClient37.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory39 = okHttpClient37.getSslSocketFactory();
        okHttpClient20.sslSocketFactory = sSLSocketFactory39;
        okHttpClient11.sslSocketFactory = sSLSocketFactory39;
        java.net.Socket socket42 = sSLSocketFactory39.createSocket();
        java.net.Socket socket43 = sSLSocketFactory39.createSocket();
        java.net.InetAddress inetAddress44 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket46 = sSLSocketFactory39.createSocket(inetAddress44, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.net.ConnectException; message: Connection refused (Connection refused)");
        } catch (java.net.ConnectException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(proxySelector12);
        org.junit.Assert.assertNull(hostnameVerifier13);
        org.junit.Assert.assertNotNull(proxy14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + type17 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type17.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertTrue("'" + type18 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type18.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNotNull(connectionPool26);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(connectionPool35);
        org.junit.Assert.assertNotNull(okHttpClient37);
// flaky:         org.junit.Assert.assertNull(proxySelector38);
        org.junit.Assert.assertNotNull(sSLSocketFactory39);
        org.junit.Assert.assertNotNull(socket42);
        org.junit.Assert.assertEquals(socket42.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(socket43);
        org.junit.Assert.assertEquals(socket43.toString(), "Socket[unconnected]");
    }

    @Test
    public void test07496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07496");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = null;
        okHttpClient0.proxy = proxy6;
        com.squareup.okhttp.ConnectionPool connectionPool8 = null;
        okHttpClient0.connectionPool = connectionPool8;
        com.squareup.okhttp.OkAuthenticator okAuthenticator10 = okHttpClient0.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool12 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient11.connectionPool = connectionPool12;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier15 = null;
        okHttpClient14.hostnameVerifier = hostnameVerifier15;
        java.net.ResponseCache responseCache17 = null;
        okHttpClient14.responseCache = responseCache17;
        java.util.List<java.lang.String> strList19 = okHttpClient14.transports;
        com.squareup.okhttp.ConnectionPool connectionPool20 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient14.connectionPool = connectionPool20;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient11.setConnectionPool(connectionPool20);
        java.net.ResponseCache responseCache23 = okHttpClient11.responseCache;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient11.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient25 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier26 = null;
        okHttpClient25.hostnameVerifier = hostnameVerifier26;
        java.net.ResponseCache responseCache28 = null;
        okHttpClient25.responseCache = responseCache28;
        java.util.List<java.lang.String> strList30 = okHttpClient25.transports;
        com.squareup.okhttp.ConnectionPool connectionPool31 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient25.connectionPool = connectionPool31;
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient25.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient34 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier35 = null;
        okHttpClient34.hostnameVerifier = hostnameVerifier35;
        java.net.ResponseCache responseCache37 = null;
        okHttpClient34.responseCache = responseCache37;
        java.util.List<java.lang.String> strList39 = okHttpClient34.transports;
        com.squareup.okhttp.ConnectionPool connectionPool40 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient34.connectionPool = connectionPool40;
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient34.copyWithDefaults();
        java.net.ProxySelector proxySelector43 = okHttpClient42.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory44 = okHttpClient42.getSslSocketFactory();
        okHttpClient25.sslSocketFactory = sSLSocketFactory44;
        okHttpClient24.sslSocketFactory = sSLSocketFactory44;
        java.net.ProxySelector proxySelector47 = okHttpClient24.getProxySelector();
        javax.net.ssl.HostnameVerifier hostnameVerifier48 = okHttpClient24.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient49 = okHttpClient0.setHostnameVerifier(hostnameVerifier48);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory50 = okHttpClient49.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient51 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier52 = null;
        okHttpClient51.hostnameVerifier = hostnameVerifier52;
        java.net.ProxySelector proxySelector54 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient55 = okHttpClient51.setProxySelector(proxySelector54);
        java.net.CookieHandler cookieHandler56 = okHttpClient51.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient57 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier58 = null;
        okHttpClient57.hostnameVerifier = hostnameVerifier58;
        java.net.ResponseCache responseCache60 = null;
        okHttpClient57.responseCache = responseCache60;
        java.util.List<java.lang.String> strList62 = okHttpClient57.transports;
        com.squareup.okhttp.ConnectionPool connectionPool63 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient57.connectionPool = connectionPool63;
        java.net.Proxy proxy65 = null;
        okHttpClient57.proxy = proxy65;
        java.util.Set<com.squareup.okhttp.Route> routeSet67 = okHttpClient57.failedRoutes;
        okHttpClient51.failedRoutes = routeSet67;
        java.net.ProxySelector proxySelector69 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient70 = okHttpClient51.setProxySelector(proxySelector69);
        com.squareup.okhttp.OkHttpClient okHttpClient71 = okHttpClient51.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient72 = new com.squareup.okhttp.OkHttpClient(okHttpClient51);
        com.squareup.okhttp.ConnectionPool connectionPool73 = null;
        okHttpClient72.connectionPool = connectionPool73;
        com.squareup.okhttp.OkAuthenticator okAuthenticator75 = okHttpClient72.authenticator;
        com.squareup.okhttp.ConnectionPool connectionPool78 = new com.squareup.okhttp.ConnectionPool((int) (byte) 10, 1L);
        okHttpClient72.connectionPool = connectionPool78;
        com.squareup.okhttp.ConnectionPool connectionPool82 = new com.squareup.okhttp.ConnectionPool(100, (long) (short) -1);
        int int83 = connectionPool82.getConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient84 = okHttpClient72.setConnectionPool(connectionPool82);
        okHttpClient49.connectionPool = connectionPool82;
        int int86 = connectionPool82.getConnectionCount();
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(okAuthenticator10);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNotNull(connectionPool20);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNull(responseCache23);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNotNull(connectionPool31);
        org.junit.Assert.assertNotNull(okHttpClient33);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNotNull(connectionPool40);
        org.junit.Assert.assertNotNull(okHttpClient42);
// flaky:         org.junit.Assert.assertNull(proxySelector43);
        org.junit.Assert.assertNotNull(sSLSocketFactory44);
// flaky:         org.junit.Assert.assertNull(proxySelector47);
        org.junit.Assert.assertNotNull(hostnameVerifier48);
        org.junit.Assert.assertNotNull(okHttpClient49);
        org.junit.Assert.assertNull(sSLSocketFactory50);
        org.junit.Assert.assertNotNull(okHttpClient55);
        org.junit.Assert.assertNull(cookieHandler56);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertNotNull(connectionPool63);
        org.junit.Assert.assertNotNull(routeSet67);
        org.junit.Assert.assertNotNull(okHttpClient70);
        org.junit.Assert.assertNotNull(okHttpClient71);
        org.junit.Assert.assertNull(okAuthenticator75);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertNotNull(okHttpClient84);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
    }

    @Test
    public void test07497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07497");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.CookieHandler cookieHandler5 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = null;
        okHttpClient6.hostnameVerifier = hostnameVerifier7;
        java.net.ResponseCache responseCache9 = null;
        okHttpClient6.responseCache = responseCache9;
        java.util.List<java.lang.String> strList11 = okHttpClient6.transports;
        com.squareup.okhttp.ConnectionPool connectionPool12 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient6.connectionPool = connectionPool12;
        java.net.Proxy proxy14 = null;
        okHttpClient6.proxy = proxy14;
        java.util.Set<com.squareup.okhttp.Route> routeSet16 = okHttpClient6.failedRoutes;
        okHttpClient0.failedRoutes = routeSet16;
        java.net.ProxySelector proxySelector18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient0.setProxySelector(proxySelector18);
        com.squareup.okhttp.OkHttpClient okHttpClient20 = new com.squareup.okhttp.OkHttpClient(okHttpClient19);
        com.squareup.okhttp.OkAuthenticator okAuthenticator21 = okHttpClient20.authenticator;
        java.net.ProxySelector proxySelector22 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient20.setProxySelector(proxySelector22);
        java.net.Proxy proxy24 = okHttpClient20.getProxy();
        java.net.CookieHandler cookieHandler25 = okHttpClient20.getCookieHandler();
        com.squareup.okhttp.ConnectionPool connectionPool26 = okHttpClient20.connectionPool;
        javax.net.ssl.HostnameVerifier hostnameVerifier27 = okHttpClient20.hostnameVerifier;
        java.net.Proxy proxy28 = java.net.Proxy.NO_PROXY;
        boolean boolean30 = proxy28.equals((java.lang.Object) 1L);
        java.net.SocketAddress socketAddress31 = proxy28.address();
        java.net.SocketAddress socketAddress32 = proxy28.address();
        com.squareup.okhttp.OkHttpClient okHttpClient33 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier34 = null;
        okHttpClient33.hostnameVerifier = hostnameVerifier34;
        java.net.ResponseCache responseCache36 = null;
        okHttpClient33.responseCache = responseCache36;
        javax.net.ssl.HostnameVerifier hostnameVerifier38 = okHttpClient33.hostnameVerifier;
        java.net.Proxy proxy39 = okHttpClient33.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool42 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient33.connectionPool = connectionPool42;
        java.util.List<java.lang.String> strList44 = okHttpClient33.transports;
        boolean boolean45 = proxy28.equals((java.lang.Object) okHttpClient33);
        okHttpClient20.proxy = proxy28;
        java.net.SocketAddress socketAddress47 = proxy28.address();
        java.net.Proxy.Type type48 = proxy28.type();
        java.lang.String str49 = proxy28.toString();
        java.net.SocketAddress socketAddress50 = proxy28.address();
        java.lang.String str51 = proxy28.toString();
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNotNull(routeSet16);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNull(okAuthenticator21);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertNull(proxy24);
        org.junit.Assert.assertNull(cookieHandler25);
        org.junit.Assert.assertNull(connectionPool26);
        org.junit.Assert.assertNull(hostnameVerifier27);
        org.junit.Assert.assertNotNull(proxy28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(socketAddress31);
        org.junit.Assert.assertNull(socketAddress32);
        org.junit.Assert.assertNull(hostnameVerifier38);
        org.junit.Assert.assertNull(proxy39);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(socketAddress47);
        org.junit.Assert.assertTrue("'" + type48 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type48.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "DIRECT" + "'", str49, "DIRECT");
        org.junit.Assert.assertNull(socketAddress50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "DIRECT" + "'", str51, "DIRECT");
    }

    @Test
    public void test07498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07498");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.CookieHandler cookieHandler6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient0.setCookieHandler(cookieHandler6);
        java.net.ResponseCache responseCache8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient7.setResponseCache(responseCache8);
        com.squareup.okhttp.OkHttpClient okHttpClient10 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier11 = null;
        okHttpClient10.hostnameVerifier = hostnameVerifier11;
        java.net.ResponseCache responseCache13 = null;
        okHttpClient10.responseCache = responseCache13;
        java.util.List<java.lang.String> strList15 = okHttpClient10.transports;
        com.squareup.okhttp.ConnectionPool connectionPool16 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient10.connectionPool = connectionPool16;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient10.copyWithDefaults();
        java.net.ProxySelector proxySelector19 = okHttpClient18.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory20 = okHttpClient18.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient7.setSSLSocketFactory(sSLSocketFactory20);
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier23 = null;
        okHttpClient22.hostnameVerifier = hostnameVerifier23;
        java.net.ResponseCache responseCache25 = null;
        okHttpClient22.responseCache = responseCache25;
        javax.net.ssl.HostnameVerifier hostnameVerifier27 = okHttpClient22.hostnameVerifier;
        java.net.Proxy proxy28 = okHttpClient22.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient29 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache30 = okHttpClient29.okResponseCache();
        java.net.ResponseCache responseCache31 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient29.setResponseCache(responseCache31);
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        okHttpClient29.transports = strList35;
        okHttpClient22.transports = strList35;
        javax.net.ssl.HostnameVerifier hostnameVerifier39 = null;
        okHttpClient22.hostnameVerifier = hostnameVerifier39;
        com.squareup.okhttp.OkHttpClient okHttpClient41 = new com.squareup.okhttp.OkHttpClient(okHttpClient22);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory42 = okHttpClient22.sslSocketFactory;
        java.net.CookieHandler cookieHandler43 = okHttpClient22.cookieHandler;
        java.net.CookieHandler cookieHandler44 = null;
        okHttpClient22.cookieHandler = cookieHandler44;
        com.squareup.okhttp.OkHttpClient okHttpClient46 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool47 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient46.connectionPool = connectionPool47;
        com.squareup.okhttp.OkHttpClient okHttpClient49 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier50 = null;
        okHttpClient49.hostnameVerifier = hostnameVerifier50;
        java.net.ResponseCache responseCache52 = null;
        okHttpClient49.responseCache = responseCache52;
        java.util.List<java.lang.String> strList54 = okHttpClient49.transports;
        com.squareup.okhttp.ConnectionPool connectionPool55 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient49.connectionPool = connectionPool55;
        com.squareup.okhttp.OkHttpClient okHttpClient57 = okHttpClient46.setConnectionPool(connectionPool55);
        com.squareup.okhttp.ConnectionPool connectionPool58 = okHttpClient57.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator59 = okHttpClient57.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool62 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient57.connectionPool = connectionPool62;
        java.net.ResponseCache responseCache64 = okHttpClient57.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory65 = okHttpClient57.sslSocketFactory;
        java.net.Proxy proxy66 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress67 = proxy66.address();
        com.squareup.okhttp.OkHttpClient okHttpClient68 = okHttpClient57.setProxy(proxy66);
        com.squareup.okhttp.OkHttpClient okHttpClient69 = new com.squareup.okhttp.OkHttpClient(okHttpClient68);
        com.squareup.okhttp.OkHttpClient okHttpClient70 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier71 = null;
        okHttpClient70.hostnameVerifier = hostnameVerifier71;
        java.net.ResponseCache responseCache73 = null;
        okHttpClient70.responseCache = responseCache73;
        java.util.List<java.lang.String> strList75 = okHttpClient70.transports;
        com.squareup.okhttp.ConnectionPool connectionPool76 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient70.connectionPool = connectionPool76;
        com.squareup.okhttp.OkHttpClient okHttpClient78 = okHttpClient70.copyWithDefaults();
        java.net.ProxySelector proxySelector79 = okHttpClient78.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory80 = okHttpClient78.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient81 = okHttpClient68.setSSLSocketFactory(sSLSocketFactory80);
        java.lang.String[] strArray82 = sSLSocketFactory80.getSupportedCipherSuites();
        java.lang.String[] strArray83 = sSLSocketFactory80.getSupportedCipherSuites();
        java.lang.String[] strArray84 = sSLSocketFactory80.getSupportedCipherSuites();
        okHttpClient22.sslSocketFactory = sSLSocketFactory80;
        okHttpClient21.sslSocketFactory = sSLSocketFactory80;
        java.lang.String[] strArray87 = sSLSocketFactory80.getSupportedCipherSuites();
        java.net.InetAddress inetAddress88 = null;
        java.net.InetAddress inetAddress90 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket92 = sSLSocketFactory80.createSocket(inetAddress88, (int) ' ', inetAddress90, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.net.BindException; message: Permission denied (Bind failed)");
        } catch (java.net.BindException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNotNull(okHttpClient7);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(connectionPool16);
        org.junit.Assert.assertNotNull(okHttpClient18);
// flaky:         org.junit.Assert.assertNull(proxySelector19);
        org.junit.Assert.assertNotNull(sSLSocketFactory20);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNull(hostnameVerifier27);
        org.junit.Assert.assertNull(proxy28);
        org.junit.Assert.assertNull(okResponseCache30);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(sSLSocketFactory42);
        org.junit.Assert.assertNull(cookieHandler43);
        org.junit.Assert.assertNotNull(connectionPool47);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNotNull(connectionPool55);
        org.junit.Assert.assertNotNull(okHttpClient57);
        org.junit.Assert.assertNotNull(connectionPool58);
        org.junit.Assert.assertNull(okAuthenticator59);
        org.junit.Assert.assertNull(responseCache64);
        org.junit.Assert.assertNull(sSLSocketFactory65);
        org.junit.Assert.assertNotNull(proxy66);
        org.junit.Assert.assertNull(socketAddress67);
        org.junit.Assert.assertNotNull(okHttpClient68);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNotNull(connectionPool76);
        org.junit.Assert.assertNotNull(okHttpClient78);
// flaky:         org.junit.Assert.assertNull(proxySelector79);
        org.junit.Assert.assertNotNull(sSLSocketFactory80);
        org.junit.Assert.assertNotNull(okHttpClient81);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertNotNull(strArray87);
    }

    @Test
    public void test07499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07499");
        java.net.Proxy proxy0 = java.net.Proxy.NO_PROXY;
        boolean boolean2 = proxy0.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type3 = proxy0.type();
        java.net.SocketAddress socketAddress4 = proxy0.address();
        com.squareup.okhttp.OkHttpClient okHttpClient5 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier6 = null;
        okHttpClient5.hostnameVerifier = hostnameVerifier6;
        java.net.ResponseCache responseCache8 = null;
        okHttpClient5.responseCache = responseCache8;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache10 = okHttpClient5.okResponseCache();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient5.setSSLSocketFactory(sSLSocketFactory11);
        boolean boolean13 = proxy0.equals((java.lang.Object) okHttpClient5);
        com.squareup.okhttp.OkHttpClient okHttpClient14 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool15 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient14.connectionPool = connectionPool15;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = null;
        okHttpClient17.hostnameVerifier = hostnameVerifier18;
        java.net.ResponseCache responseCache20 = null;
        okHttpClient17.responseCache = responseCache20;
        java.util.List<java.lang.String> strList22 = okHttpClient17.transports;
        com.squareup.okhttp.ConnectionPool connectionPool23 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient17.connectionPool = connectionPool23;
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient14.setConnectionPool(connectionPool23);
        java.net.ResponseCache responseCache26 = okHttpClient14.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory27 = okHttpClient14.sslSocketFactory;
        java.net.ResponseCache responseCache28 = okHttpClient14.getResponseCache();
        com.squareup.okhttp.ConnectionPool connectionPool29 = okHttpClient14.connectionPool;
        boolean boolean30 = proxy0.equals((java.lang.Object) connectionPool29);
        java.lang.String str31 = proxy0.toString();
        com.squareup.okhttp.OkHttpClient okHttpClient32 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool33 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient32.connectionPool = connectionPool33;
        com.squareup.okhttp.OkHttpClient okHttpClient35 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier36 = null;
        okHttpClient35.hostnameVerifier = hostnameVerifier36;
        java.net.ResponseCache responseCache38 = null;
        okHttpClient35.responseCache = responseCache38;
        java.util.List<java.lang.String> strList40 = okHttpClient35.transports;
        com.squareup.okhttp.ConnectionPool connectionPool41 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient35.connectionPool = connectionPool41;
        com.squareup.okhttp.OkHttpClient okHttpClient43 = okHttpClient32.setConnectionPool(connectionPool41);
        com.squareup.okhttp.ConnectionPool connectionPool44 = okHttpClient43.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator45 = okHttpClient43.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool48 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient43.connectionPool = connectionPool48;
        java.net.ResponseCache responseCache50 = okHttpClient43.responseCache;
        com.squareup.okhttp.ConnectionPool connectionPool53 = new com.squareup.okhttp.ConnectionPool((int) (byte) 0, 10L);
        okHttpClient43.connectionPool = connectionPool53;
        com.squareup.okhttp.ConnectionPool connectionPool57 = new com.squareup.okhttp.ConnectionPool((int) (byte) 10, 0L);
        com.squareup.okhttp.OkHttpClient okHttpClient58 = okHttpClient43.setConnectionPool(connectionPool57);
        boolean boolean59 = proxy0.equals((java.lang.Object) okHttpClient58);
        java.net.SocketAddress socketAddress60 = proxy0.address();
        java.net.Proxy.Type type61 = proxy0.type();
        java.net.SocketAddress socketAddress62 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Proxy proxy63 = new java.net.Proxy(type61, socketAddress62);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: type DIRECT is not compatible with address null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(proxy0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + type3 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type3.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress4);
        org.junit.Assert.assertNull(okResponseCache10);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(connectionPool15);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNotNull(connectionPool23);
        org.junit.Assert.assertNotNull(okHttpClient25);
        org.junit.Assert.assertNull(responseCache26);
        org.junit.Assert.assertNull(sSLSocketFactory27);
        org.junit.Assert.assertNull(responseCache28);
        org.junit.Assert.assertNotNull(connectionPool29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "DIRECT" + "'", str31, "DIRECT");
        org.junit.Assert.assertNotNull(connectionPool33);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNotNull(connectionPool41);
        org.junit.Assert.assertNotNull(okHttpClient43);
        org.junit.Assert.assertNotNull(connectionPool44);
        org.junit.Assert.assertNull(okAuthenticator45);
        org.junit.Assert.assertNull(responseCache50);
        org.junit.Assert.assertNotNull(okHttpClient58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(socketAddress60);
        org.junit.Assert.assertTrue("'" + type61 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type61.equals(java.net.Proxy.Type.DIRECT));
    }

    @Test
    public void test07500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07500");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.ConnectionPool connectionPool12 = okHttpClient11.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator13 = okHttpClient11.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool16 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient11.connectionPool = connectionPool16;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory18 = okHttpClient11.sslSocketFactory;
        com.squareup.okhttp.OkAuthenticator okAuthenticator19 = okHttpClient11.authenticator;
        java.net.ResponseCache responseCache20 = okHttpClient11.getResponseCache();
        com.squareup.okhttp.ConnectionPool connectionPool21 = okHttpClient11.getConnectionPool();
        com.squareup.okhttp.Address address22 = null;
        com.squareup.okhttp.Connection connection23 = connectionPool21.get(address22);
        com.squareup.okhttp.Connection connection24 = null;
        // The following exception was thrown during execution in test generation
        try {
            connectionPool21.maybeShare(connection24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNull(okAuthenticator13);
        org.junit.Assert.assertNull(sSLSocketFactory18);
        org.junit.Assert.assertNull(okAuthenticator19);
        org.junit.Assert.assertNull(responseCache20);
        org.junit.Assert.assertNotNull(connectionPool21);
        org.junit.Assert.assertNull(connection23);
    }
}
