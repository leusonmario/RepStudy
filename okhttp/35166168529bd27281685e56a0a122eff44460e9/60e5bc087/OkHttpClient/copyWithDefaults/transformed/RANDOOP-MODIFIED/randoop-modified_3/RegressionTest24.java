import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest24 {

    public static boolean debug = false;

    @Test
    public void test12001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12001");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.ResponseCache responseCache5 = null;
        okHttpClient4.responseCache = responseCache5;
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = okHttpClient4.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient4.setFollowProtocolRedirects(false);
        java.net.ResponseCache responseCache10 = okHttpClient9.responseCache;
        com.squareup.okhttp.ConnectionPool connectionPool13 = new com.squareup.okhttp.ConnectionPool(0, (long) (short) 10);
        connectionPool13.evictAll();
        com.squareup.okhttp.Address address15 = null;
        com.squareup.okhttp.Connection connection16 = connectionPool13.get(address15);
        okHttpClient9.connectionPool = connectionPool13;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient9.setFollowProtocolRedirects(false);
        java.net.CookieHandler cookieHandler20 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient19.setCookieHandler(cookieHandler20);
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient19.copyWithDefaults();
        java.net.CookieHandler cookieHandler23 = okHttpClient22.getCookieHandler();
        java.net.ProxySelector proxySelector24 = okHttpClient22.getProxySelector();
        com.squareup.okhttp.OkHttpClient okHttpClient25 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier26 = null;
        okHttpClient25.hostnameVerifier = hostnameVerifier26;
        java.net.ResponseCache responseCache28 = null;
        okHttpClient25.responseCache = responseCache28;
        java.util.List<java.lang.String> strList30 = okHttpClient25.transports;
        com.squareup.okhttp.ConnectionPool connectionPool31 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient25.connectionPool = connectionPool31;
        java.net.Proxy proxy33 = null;
        okHttpClient25.proxy = proxy33;
        java.net.Proxy proxy35 = okHttpClient25.getProxy();
        java.net.ProxySelector proxySelector36 = null;
        okHttpClient25.proxySelector = proxySelector36;
        java.net.Proxy proxy38 = okHttpClient25.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient25.copyWithDefaults();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory40 = okHttpClient39.sslSocketFactory;
        java.util.List<java.lang.String> strList41 = okHttpClient39.transports;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory42 = okHttpClient39.sslSocketFactory;
        java.net.Socket socket43 = sSLSocketFactory42.createSocket();
        com.squareup.okhttp.OkHttpClient okHttpClient44 = okHttpClient22.setSSLSocketFactory(sSLSocketFactory42);
        com.squareup.okhttp.OkHttpClient okHttpClient45 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier46 = null;
        okHttpClient45.hostnameVerifier = hostnameVerifier46;
        java.net.ProxySelector proxySelector48 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient49 = okHttpClient45.setProxySelector(proxySelector48);
        boolean boolean50 = okHttpClient45.getFollowProtocolRedirects();
        java.net.ProxySelector proxySelector51 = null;
        okHttpClient45.proxySelector = proxySelector51;
        com.squareup.okhttp.OkHttpClient okHttpClient53 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool54 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient53.connectionPool = connectionPool54;
        com.squareup.okhttp.OkHttpClient okHttpClient56 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier57 = null;
        okHttpClient56.hostnameVerifier = hostnameVerifier57;
        java.net.ResponseCache responseCache59 = null;
        okHttpClient56.responseCache = responseCache59;
        java.util.List<java.lang.String> strList61 = okHttpClient56.transports;
        com.squareup.okhttp.ConnectionPool connectionPool62 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient56.connectionPool = connectionPool62;
        com.squareup.okhttp.OkHttpClient okHttpClient64 = okHttpClient53.setConnectionPool(connectionPool62);
        java.net.Proxy proxy65 = okHttpClient64.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient66 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool67 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient66.connectionPool = connectionPool67;
        int int69 = connectionPool67.getSpdyConnectionCount();
        okHttpClient64.connectionPool = connectionPool67;
        com.squareup.okhttp.OkHttpClient okHttpClient71 = okHttpClient64.copyWithDefaults();
        java.net.CookieHandler cookieHandler72 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient73 = okHttpClient64.setCookieHandler(cookieHandler72);
        java.util.Set<com.squareup.okhttp.Route> routeSet74 = okHttpClient73.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient75 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier76 = null;
        okHttpClient75.hostnameVerifier = hostnameVerifier76;
        java.net.ResponseCache responseCache78 = null;
        okHttpClient75.responseCache = responseCache78;
        javax.net.ssl.HostnameVerifier hostnameVerifier80 = okHttpClient75.hostnameVerifier;
        java.net.Proxy proxy81 = okHttpClient75.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool84 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient75.connectionPool = connectionPool84;
        com.squareup.okhttp.OkHttpClient okHttpClient86 = okHttpClient75.copyWithDefaults();
        java.net.ResponseCache responseCache87 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient88 = okHttpClient86.setResponseCache(responseCache87);
        java.net.ProxySelector proxySelector89 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient90 = okHttpClient86.setProxySelector(proxySelector89);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory91 = okHttpClient90.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient92 = okHttpClient73.setSSLSocketFactory(sSLSocketFactory91);
        java.lang.String[] strArray93 = sSLSocketFactory91.getSupportedCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient94 = okHttpClient45.setSSLSocketFactory(sSLSocketFactory91);
        okHttpClient22.sslSocketFactory = sSLSocketFactory91;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory96 = okHttpClient22.sslSocketFactory;
        java.net.Proxy proxy97 = okHttpClient22.getProxy();
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(hostnameVerifier7);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNull(responseCache10);
        org.junit.Assert.assertNull(connection16);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNull(cookieHandler23);
// flaky:         org.junit.Assert.assertNull(proxySelector24);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNotNull(connectionPool31);
        org.junit.Assert.assertNull(proxy35);
        org.junit.Assert.assertNull(proxy38);
        org.junit.Assert.assertNotNull(okHttpClient39);
        org.junit.Assert.assertNotNull(sSLSocketFactory40);
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertNotNull(sSLSocketFactory42);
        org.junit.Assert.assertNotNull(socket43);
        org.junit.Assert.assertEquals(socket43.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(okHttpClient44);
        org.junit.Assert.assertNotNull(okHttpClient49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(connectionPool54);
        org.junit.Assert.assertNull(strList61);
        org.junit.Assert.assertNotNull(connectionPool62);
        org.junit.Assert.assertNotNull(okHttpClient64);
        org.junit.Assert.assertNull(proxy65);
        org.junit.Assert.assertNotNull(connectionPool67);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNotNull(okHttpClient71);
        org.junit.Assert.assertNotNull(okHttpClient73);
        org.junit.Assert.assertNotNull(routeSet74);
        org.junit.Assert.assertNull(hostnameVerifier80);
        org.junit.Assert.assertNull(proxy81);
        org.junit.Assert.assertNotNull(okHttpClient86);
        org.junit.Assert.assertNotNull(okHttpClient88);
        org.junit.Assert.assertNotNull(okHttpClient90);
        org.junit.Assert.assertNotNull(sSLSocketFactory91);
        org.junit.Assert.assertNotNull(okHttpClient92);
        org.junit.Assert.assertNotNull(strArray93);
        org.junit.Assert.assertNotNull(okHttpClient94);
        org.junit.Assert.assertNotNull(sSLSocketFactory96);
        org.junit.Assert.assertNull(proxy97);
    }

    @Test
    public void test12002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12002");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        boolean boolean3 = okHttpClient0.getFollowProtocolRedirects();
        java.net.Proxy proxy4 = okHttpClient0.proxy;
        boolean boolean5 = okHttpClient0.followProtocolRedirects;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient0.responseCache = responseCache6;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier9 = null;
        okHttpClient8.hostnameVerifier = hostnameVerifier9;
        java.net.ResponseCache responseCache11 = null;
        okHttpClient8.responseCache = responseCache11;
        javax.net.ssl.HostnameVerifier hostnameVerifier13 = okHttpClient8.hostnameVerifier;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory14 = okHttpClient8.sslSocketFactory;
        java.net.ResponseCache responseCache15 = okHttpClient8.getResponseCache();
        javax.net.ssl.HostnameVerifier hostnameVerifier16 = okHttpClient8.getHostnameVerifier();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache17 = okHttpClient8.okResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier19 = null;
        okHttpClient18.hostnameVerifier = hostnameVerifier19;
        java.net.ResponseCache responseCache21 = null;
        okHttpClient18.responseCache = responseCache21;
        java.util.List<java.lang.String> strList23 = okHttpClient18.transports;
        com.squareup.okhttp.ConnectionPool connectionPool24 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient18.connectionPool = connectionPool24;
        java.net.Proxy proxy26 = null;
        okHttpClient18.proxy = proxy26;
        boolean boolean28 = okHttpClient18.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient30 = okHttpClient18.setFollowProtocolRedirects(true);
        com.squareup.okhttp.OkHttpClient okHttpClient31 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier32 = null;
        okHttpClient31.hostnameVerifier = hostnameVerifier32;
        java.net.ResponseCache responseCache34 = null;
        okHttpClient31.responseCache = responseCache34;
        java.util.List<java.lang.String> strList36 = okHttpClient31.transports;
        javax.net.ssl.HostnameVerifier hostnameVerifier37 = null;
        okHttpClient31.hostnameVerifier = hostnameVerifier37;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache39 = okHttpClient31.okResponseCache();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory40 = okHttpClient31.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient41 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier42 = null;
        okHttpClient41.hostnameVerifier = hostnameVerifier42;
        java.net.ResponseCache responseCache44 = null;
        okHttpClient41.responseCache = responseCache44;
        javax.net.ssl.HostnameVerifier hostnameVerifier46 = okHttpClient41.hostnameVerifier;
        java.net.Proxy proxy47 = okHttpClient41.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool50 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient41.connectionPool = connectionPool50;
        com.squareup.okhttp.OkHttpClient okHttpClient52 = okHttpClient41.copyWithDefaults();
        java.net.Proxy proxy53 = okHttpClient52.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier54 = okHttpClient52.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient55 = okHttpClient31.setHostnameVerifier(hostnameVerifier54);
        com.squareup.okhttp.OkHttpClient okHttpClient56 = okHttpClient30.setHostnameVerifier(hostnameVerifier54);
        boolean boolean57 = okHttpClient56.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient58 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool59 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient58.connectionPool = connectionPool59;
        com.squareup.okhttp.OkHttpClient okHttpClient61 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier62 = null;
        okHttpClient61.hostnameVerifier = hostnameVerifier62;
        java.net.ResponseCache responseCache64 = null;
        okHttpClient61.responseCache = responseCache64;
        java.util.List<java.lang.String> strList66 = okHttpClient61.transports;
        com.squareup.okhttp.ConnectionPool connectionPool67 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient61.connectionPool = connectionPool67;
        com.squareup.okhttp.OkHttpClient okHttpClient69 = okHttpClient58.setConnectionPool(connectionPool67);
        com.squareup.okhttp.ConnectionPool connectionPool70 = okHttpClient69.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator71 = okHttpClient69.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool74 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient69.connectionPool = connectionPool74;
        java.net.ResponseCache responseCache76 = okHttpClient69.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory77 = okHttpClient69.sslSocketFactory;
        java.net.Proxy proxy78 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress79 = proxy78.address();
        com.squareup.okhttp.OkHttpClient okHttpClient80 = okHttpClient69.setProxy(proxy78);
        com.squareup.okhttp.OkHttpClient okHttpClient81 = okHttpClient56.setProxy(proxy78);
        java.net.Proxy proxy82 = java.net.Proxy.NO_PROXY;
        boolean boolean84 = proxy82.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type85 = proxy82.type();
        com.squareup.okhttp.OkHttpClient okHttpClient86 = okHttpClient56.setProxy(proxy82);
        com.squareup.okhttp.OkHttpClient okHttpClient87 = new com.squareup.okhttp.OkHttpClient(okHttpClient86);
        javax.net.ssl.HostnameVerifier hostnameVerifier88 = okHttpClient86.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient89 = okHttpClient8.setHostnameVerifier(hostnameVerifier88);
        java.net.ProxySelector proxySelector90 = okHttpClient89.getProxySelector();
        javax.net.ssl.HostnameVerifier hostnameVerifier91 = okHttpClient89.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient92 = okHttpClient0.setHostnameVerifier(hostnameVerifier91);
        javax.net.ssl.HostnameVerifier hostnameVerifier93 = okHttpClient92.getHostnameVerifier();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(proxy4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(hostnameVerifier13);
        org.junit.Assert.assertNull(sSLSocketFactory14);
        org.junit.Assert.assertNull(responseCache15);
        org.junit.Assert.assertNull(hostnameVerifier16);
        org.junit.Assert.assertNull(okResponseCache17);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNotNull(connectionPool24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(okHttpClient30);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNull(okResponseCache39);
        org.junit.Assert.assertNull(sSLSocketFactory40);
        org.junit.Assert.assertNull(hostnameVerifier46);
        org.junit.Assert.assertNull(proxy47);
        org.junit.Assert.assertNotNull(okHttpClient52);
        org.junit.Assert.assertNull(proxy53);
        org.junit.Assert.assertNotNull(hostnameVerifier54);
        org.junit.Assert.assertNotNull(okHttpClient55);
        org.junit.Assert.assertNotNull(okHttpClient56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(connectionPool59);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNotNull(connectionPool67);
        org.junit.Assert.assertNotNull(okHttpClient69);
        org.junit.Assert.assertNotNull(connectionPool70);
        org.junit.Assert.assertNull(okAuthenticator71);
        org.junit.Assert.assertNull(responseCache76);
        org.junit.Assert.assertNull(sSLSocketFactory77);
        org.junit.Assert.assertNotNull(proxy78);
        org.junit.Assert.assertNull(socketAddress79);
        org.junit.Assert.assertNotNull(okHttpClient80);
        org.junit.Assert.assertNotNull(okHttpClient81);
        org.junit.Assert.assertNotNull(proxy82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + type85 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type85.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNotNull(okHttpClient86);
        org.junit.Assert.assertNotNull(hostnameVerifier88);
        org.junit.Assert.assertNotNull(okHttpClient89);
        org.junit.Assert.assertNull(proxySelector90);
        org.junit.Assert.assertNotNull(hostnameVerifier91);
        org.junit.Assert.assertNotNull(okHttpClient92);
        org.junit.Assert.assertNotNull(hostnameVerifier93);
    }

    @Test
    public void test12003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12003");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient0.connectionPool = connectionPool9;
        java.util.List<java.lang.String> strList11 = okHttpClient0.getTransports();
        com.squareup.okhttp.OkHttpClient okHttpClient12 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        java.net.ResponseCache responseCache13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient12.setResponseCache(responseCache13);
        com.squareup.okhttp.ConnectionPool connectionPool15 = okHttpClient14.getConnectionPool();
        com.squareup.okhttp.OkHttpClient okHttpClient16 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier17 = null;
        okHttpClient16.hostnameVerifier = hostnameVerifier17;
        java.net.ProxySelector proxySelector19 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient16.setProxySelector(proxySelector19);
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient20.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient21.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet23 = okHttpClient22.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier25 = null;
        okHttpClient24.hostnameVerifier = hostnameVerifier25;
        java.net.ResponseCache responseCache27 = null;
        okHttpClient24.responseCache = responseCache27;
        javax.net.ssl.HostnameVerifier hostnameVerifier29 = okHttpClient24.hostnameVerifier;
        java.net.Proxy proxy30 = okHttpClient24.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool33 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient24.connectionPool = connectionPool33;
        java.util.List<java.lang.String> strList35 = okHttpClient24.getTransports();
        javax.net.ssl.HostnameVerifier hostnameVerifier36 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient24.setHostnameVerifier(hostnameVerifier36);
        com.squareup.okhttp.OkHttpClient okHttpClient38 = new com.squareup.okhttp.OkHttpClient(okHttpClient24);
        java.util.List<java.lang.String> strList39 = okHttpClient24.getTransports();
        com.squareup.okhttp.OkHttpClient okHttpClient40 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool41 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient40.connectionPool = connectionPool41;
        com.squareup.okhttp.OkHttpClient okHttpClient43 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier44 = null;
        okHttpClient43.hostnameVerifier = hostnameVerifier44;
        java.net.ResponseCache responseCache46 = null;
        okHttpClient43.responseCache = responseCache46;
        java.util.List<java.lang.String> strList48 = okHttpClient43.transports;
        com.squareup.okhttp.ConnectionPool connectionPool49 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient43.connectionPool = connectionPool49;
        com.squareup.okhttp.OkHttpClient okHttpClient51 = okHttpClient40.setConnectionPool(connectionPool49);
        com.squareup.okhttp.ConnectionPool connectionPool52 = okHttpClient51.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator53 = okHttpClient51.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool56 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient51.connectionPool = connectionPool56;
        java.net.ResponseCache responseCache58 = okHttpClient51.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory59 = okHttpClient51.sslSocketFactory;
        java.net.Proxy proxy60 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress61 = proxy60.address();
        com.squareup.okhttp.OkHttpClient okHttpClient62 = okHttpClient51.setProxy(proxy60);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory63 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient64 = okHttpClient51.setSSLSocketFactory(sSLSocketFactory63);
        com.squareup.okhttp.OkHttpClient okHttpClient65 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier66 = null;
        okHttpClient65.hostnameVerifier = hostnameVerifier66;
        java.net.ResponseCache responseCache68 = null;
        okHttpClient65.responseCache = responseCache68;
        javax.net.ssl.HostnameVerifier hostnameVerifier70 = okHttpClient65.hostnameVerifier;
        java.net.Proxy proxy71 = okHttpClient65.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool74 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient65.connectionPool = connectionPool74;
        com.squareup.okhttp.OkHttpClient okHttpClient76 = okHttpClient65.copyWithDefaults();
        java.net.ResponseCache responseCache77 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient78 = okHttpClient76.setResponseCache(responseCache77);
        com.squareup.okhttp.OkAuthenticator okAuthenticator79 = okHttpClient76.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient80 = okHttpClient51.setAuthenticator(okAuthenticator79);
        java.net.Proxy proxy81 = okHttpClient80.getProxy();
        java.net.ResponseCache responseCache82 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient83 = okHttpClient80.setResponseCache(responseCache82);
        com.squareup.okhttp.OkAuthenticator okAuthenticator84 = okHttpClient80.getAuthenticator();
        okHttpClient24.authenticator = okAuthenticator84;
        okHttpClient22.authenticator = okAuthenticator84;
        com.squareup.okhttp.OkHttpClient okHttpClient87 = okHttpClient14.setAuthenticator(okAuthenticator84);
        com.squareup.okhttp.OkHttpClient okHttpClient89 = okHttpClient14.setFollowProtocolRedirects(false);
        com.squareup.okhttp.OkHttpClient okHttpClient90 = new com.squareup.okhttp.OkHttpClient(okHttpClient89);
        java.net.CookieHandler cookieHandler91 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient92 = okHttpClient90.setCookieHandler(cookieHandler91);
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(okHttpClient14);
        org.junit.Assert.assertNull(connectionPool15);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNotNull(routeSet23);
        org.junit.Assert.assertNull(hostnameVerifier29);
        org.junit.Assert.assertNull(proxy30);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNotNull(okHttpClient37);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNotNull(connectionPool41);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNotNull(connectionPool49);
        org.junit.Assert.assertNotNull(okHttpClient51);
        org.junit.Assert.assertNotNull(connectionPool52);
        org.junit.Assert.assertNull(okAuthenticator53);
        org.junit.Assert.assertNull(responseCache58);
        org.junit.Assert.assertNull(sSLSocketFactory59);
        org.junit.Assert.assertNotNull(proxy60);
        org.junit.Assert.assertNull(socketAddress61);
        org.junit.Assert.assertNotNull(okHttpClient62);
        org.junit.Assert.assertNotNull(okHttpClient64);
        org.junit.Assert.assertNull(hostnameVerifier70);
        org.junit.Assert.assertNull(proxy71);
        org.junit.Assert.assertNotNull(okHttpClient76);
        org.junit.Assert.assertNotNull(okHttpClient78);
        org.junit.Assert.assertNotNull(okAuthenticator79);
        org.junit.Assert.assertNotNull(okHttpClient80);
        org.junit.Assert.assertNotNull(proxy81);
        org.junit.Assert.assertNotNull(okHttpClient83);
        org.junit.Assert.assertNotNull(okAuthenticator84);
        org.junit.Assert.assertNotNull(okHttpClient87);
        org.junit.Assert.assertNotNull(okHttpClient89);
        org.junit.Assert.assertNotNull(okHttpClient92);
    }

    @Test
    public void test12004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12004");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.Proxy proxy8 = null;
        okHttpClient0.proxy = proxy8;
        boolean boolean10 = okHttpClient0.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient0.setFollowProtocolRedirects(true);
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = null;
        okHttpClient13.hostnameVerifier = hostnameVerifier14;
        java.net.ResponseCache responseCache16 = null;
        okHttpClient13.responseCache = responseCache16;
        java.util.List<java.lang.String> strList18 = okHttpClient13.transports;
        javax.net.ssl.HostnameVerifier hostnameVerifier19 = null;
        okHttpClient13.hostnameVerifier = hostnameVerifier19;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache21 = okHttpClient13.okResponseCache();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory22 = okHttpClient13.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient23 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier24 = null;
        okHttpClient23.hostnameVerifier = hostnameVerifier24;
        java.net.ResponseCache responseCache26 = null;
        okHttpClient23.responseCache = responseCache26;
        javax.net.ssl.HostnameVerifier hostnameVerifier28 = okHttpClient23.hostnameVerifier;
        java.net.Proxy proxy29 = okHttpClient23.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool32 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient23.connectionPool = connectionPool32;
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient23.copyWithDefaults();
        java.net.Proxy proxy35 = okHttpClient34.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier36 = okHttpClient34.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient13.setHostnameVerifier(hostnameVerifier36);
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient12.setHostnameVerifier(hostnameVerifier36);
        boolean boolean39 = okHttpClient38.getFollowProtocolRedirects();
        java.net.CookieHandler cookieHandler40 = okHttpClient38.cookieHandler;
        java.net.ResponseCache responseCache41 = okHttpClient38.responseCache;
        com.squareup.okhttp.OkAuthenticator okAuthenticator42 = okHttpClient38.authenticator;
        boolean boolean43 = okHttpClient38.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient44 = new com.squareup.okhttp.OkHttpClient(okHttpClient38);
        java.net.CookieHandler cookieHandler45 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient46 = okHttpClient44.setCookieHandler(cookieHandler45);
        com.squareup.okhttp.OkHttpClient okHttpClient47 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier48 = null;
        okHttpClient47.hostnameVerifier = hostnameVerifier48;
        java.net.ProxySelector proxySelector50 = okHttpClient47.proxySelector;
        java.net.Proxy proxy51 = okHttpClient47.proxy;
        java.util.List<java.lang.String> strList52 = okHttpClient47.transports;
        com.squareup.okhttp.OkHttpClient okHttpClient53 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier54 = null;
        okHttpClient53.hostnameVerifier = hostnameVerifier54;
        java.net.ResponseCache responseCache56 = null;
        okHttpClient53.responseCache = responseCache56;
        java.util.List<java.lang.String> strList58 = okHttpClient53.transports;
        com.squareup.okhttp.ConnectionPool connectionPool59 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient53.connectionPool = connectionPool59;
        java.net.Proxy proxy61 = null;
        okHttpClient53.proxy = proxy61;
        boolean boolean63 = okHttpClient53.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient64 = okHttpClient53.copyWithDefaults();
        java.net.CookieHandler cookieHandler65 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient66 = okHttpClient64.setCookieHandler(cookieHandler65);
        com.squareup.okhttp.OkHttpClient okHttpClient67 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier68 = null;
        okHttpClient67.hostnameVerifier = hostnameVerifier68;
        java.net.ResponseCache responseCache70 = null;
        okHttpClient67.responseCache = responseCache70;
        javax.net.ssl.HostnameVerifier hostnameVerifier72 = okHttpClient67.hostnameVerifier;
        java.net.Proxy proxy73 = okHttpClient67.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool76 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient67.connectionPool = connectionPool76;
        boolean boolean78 = okHttpClient67.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient79 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier80 = null;
        okHttpClient79.hostnameVerifier = hostnameVerifier80;
        java.net.ResponseCache responseCache82 = null;
        okHttpClient79.responseCache = responseCache82;
        javax.net.ssl.HostnameVerifier hostnameVerifier84 = okHttpClient79.hostnameVerifier;
        java.net.Proxy proxy85 = okHttpClient79.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool88 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient79.connectionPool = connectionPool88;
        com.squareup.okhttp.OkHttpClient okHttpClient90 = okHttpClient79.copyWithDefaults();
        java.net.Proxy proxy91 = okHttpClient90.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier92 = okHttpClient90.getHostnameVerifier();
        okHttpClient67.hostnameVerifier = hostnameVerifier92;
        okHttpClient64.hostnameVerifier = hostnameVerifier92;
        java.util.List<java.lang.String> strList95 = okHttpClient64.getTransports();
        okHttpClient47.transports = strList95;
        okHttpClient46.transports = strList95;
        com.squareup.okhttp.OkHttpClient.DEFAULT_TRANSPORTS = strList95;
        com.squareup.okhttp.OkHttpClient.DEFAULT_TRANSPORTS = strList95;
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(okResponseCache21);
        org.junit.Assert.assertNull(sSLSocketFactory22);
        org.junit.Assert.assertNull(hostnameVerifier28);
        org.junit.Assert.assertNull(proxy29);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertNull(proxy35);
        org.junit.Assert.assertNotNull(hostnameVerifier36);
        org.junit.Assert.assertNotNull(okHttpClient37);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(cookieHandler40);
        org.junit.Assert.assertNull(responseCache41);
        org.junit.Assert.assertNull(okAuthenticator42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(okHttpClient46);
        org.junit.Assert.assertNull(proxySelector50);
        org.junit.Assert.assertNull(proxy51);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNotNull(connectionPool59);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(okHttpClient64);
        org.junit.Assert.assertNotNull(okHttpClient66);
        org.junit.Assert.assertNull(hostnameVerifier72);
        org.junit.Assert.assertNull(proxy73);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNull(hostnameVerifier84);
        org.junit.Assert.assertNull(proxy85);
        org.junit.Assert.assertNotNull(okHttpClient90);
        org.junit.Assert.assertNull(proxy91);
        org.junit.Assert.assertNotNull(hostnameVerifier92);
        org.junit.Assert.assertNotNull(strList95);
    }

    @Test
    public void test12005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12005");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient0.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.copyWithDefaults();
        java.net.ResponseCache responseCache12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setResponseCache(responseCache12);
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = okHttpClient13.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient13.copyWithDefaults();
        java.util.List<java.lang.String> strList16 = okHttpClient13.getTransports();
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = null;
        okHttpClient17.hostnameVerifier = hostnameVerifier18;
        java.net.ResponseCache responseCache20 = null;
        okHttpClient17.responseCache = responseCache20;
        java.util.List<java.lang.String> strList22 = okHttpClient17.transports;
        java.net.Proxy proxy23 = java.net.Proxy.NO_PROXY;
        boolean boolean25 = proxy23.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type26 = proxy23.type();
        java.net.SocketAddress socketAddress27 = proxy23.address();
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient17.setProxy(proxy23);
        com.squareup.okhttp.OkHttpClient okHttpClient29 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = null;
        okHttpClient29.hostnameVerifier = hostnameVerifier30;
        java.net.ProxySelector proxySelector32 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient29.setProxySelector(proxySelector32);
        javax.net.ssl.HostnameVerifier hostnameVerifier34 = okHttpClient29.hostnameVerifier;
        java.net.CookieHandler cookieHandler35 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient29.setCookieHandler(cookieHandler35);
        java.net.ResponseCache responseCache37 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient36.setResponseCache(responseCache37);
        com.squareup.okhttp.OkHttpClient okHttpClient39 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier40 = null;
        okHttpClient39.hostnameVerifier = hostnameVerifier40;
        java.net.ResponseCache responseCache42 = null;
        okHttpClient39.responseCache = responseCache42;
        java.util.List<java.lang.String> strList44 = okHttpClient39.transports;
        com.squareup.okhttp.ConnectionPool connectionPool45 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient39.connectionPool = connectionPool45;
        com.squareup.okhttp.OkHttpClient okHttpClient47 = okHttpClient39.copyWithDefaults();
        java.net.ProxySelector proxySelector48 = okHttpClient47.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory49 = okHttpClient47.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient36.setSSLSocketFactory(sSLSocketFactory49);
        boolean boolean51 = proxy23.equals((java.lang.Object) sSLSocketFactory49);
        java.lang.String[] strArray52 = sSLSocketFactory49.getSupportedCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient53 = okHttpClient13.setSSLSocketFactory(sSLSocketFactory49);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory54 = okHttpClient53.getSslSocketFactory();
        java.net.ResponseCache responseCache55 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient56 = okHttpClient53.setResponseCache(responseCache55);
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache57 = okHttpClient56.okResponseCache();
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNotNull(hostnameVerifier14);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNotNull(proxy23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + type26 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type26.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress27);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNotNull(okHttpClient33);
        org.junit.Assert.assertNull(hostnameVerifier34);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNotNull(connectionPool45);
        org.junit.Assert.assertNotNull(okHttpClient47);
// flaky:         org.junit.Assert.assertNull(proxySelector48);
        org.junit.Assert.assertNotNull(sSLSocketFactory49);
        org.junit.Assert.assertNotNull(okHttpClient50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(okHttpClient53);
        org.junit.Assert.assertNotNull(sSLSocketFactory54);
        org.junit.Assert.assertNotNull(okHttpClient56);
        org.junit.Assert.assertNull(okResponseCache57);
    }

    @Test
    public void test12006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12006");
        com.squareup.okhttp.ConnectionPool connectionPool2 = new com.squareup.okhttp.ConnectionPool((int) (short) -1, 100L);
        connectionPool2.evictAll();
        com.squareup.okhttp.Address address4 = null;
        com.squareup.okhttp.Connection connection5 = connectionPool2.get(address4);
        com.squareup.okhttp.Address address6 = null;
        com.squareup.okhttp.Connection connection7 = connectionPool2.get(address6);
        com.squareup.okhttp.Connection connection8 = null;
        // The following exception was thrown during execution in test generation
        try {
            connectionPool2.recycle(connection8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(connection5);
        org.junit.Assert.assertNull(connection7);
    }

    @Test
    public void test12007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12007");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.Proxy proxy8 = null;
        okHttpClient0.proxy = proxy8;
        boolean boolean10 = okHttpClient0.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.copyWithDefaults();
        java.net.CookieHandler cookieHandler12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setCookieHandler(cookieHandler12);
        java.net.Proxy proxy14 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient11.setProxy(proxy14);
        okHttpClient11.followProtocolRedirects = true;
        java.net.CookieHandler cookieHandler18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient11.setCookieHandler(cookieHandler18);
        java.net.ProxySelector proxySelector20 = null;
        okHttpClient19.proxySelector = proxySelector20;
        com.squareup.okhttp.OkAuthenticator okAuthenticator22 = okHttpClient19.getAuthenticator();
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNotNull(proxy14);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNotNull(okAuthenticator22);
    }

    @Test
    public void test12008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12008");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.ConnectionPool connectionPool12 = okHttpClient11.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator13 = okHttpClient11.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool16 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient11.connectionPool = connectionPool16;
        java.net.ResponseCache responseCache18 = okHttpClient11.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory19 = okHttpClient11.sslSocketFactory;
        java.net.Proxy proxy20 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress21 = proxy20.address();
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient11.setProxy(proxy20);
        com.squareup.okhttp.OkHttpClient okHttpClient23 = new com.squareup.okhttp.OkHttpClient(okHttpClient22);
        com.squareup.okhttp.OkHttpClient okHttpClient24 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier25 = null;
        okHttpClient24.hostnameVerifier = hostnameVerifier25;
        java.net.ResponseCache responseCache27 = null;
        okHttpClient24.responseCache = responseCache27;
        java.util.List<java.lang.String> strList29 = okHttpClient24.transports;
        com.squareup.okhttp.ConnectionPool connectionPool30 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient24.connectionPool = connectionPool30;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient24.copyWithDefaults();
        java.net.ProxySelector proxySelector33 = okHttpClient32.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory34 = okHttpClient32.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient22.setSSLSocketFactory(sSLSocketFactory34);
        java.lang.String[] strArray36 = sSLSocketFactory34.getSupportedCipherSuites();
        java.lang.String[] strArray37 = sSLSocketFactory34.getSupportedCipherSuites();
        java.lang.String[] strArray38 = sSLSocketFactory34.getSupportedCipherSuites();
        java.lang.String[] strArray39 = sSLSocketFactory34.getDefaultCipherSuites();
        java.net.InetAddress inetAddress40 = null;
        java.net.InetAddress inetAddress42 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket44 = sSLSocketFactory34.createSocket(inetAddress40, 10, inetAddress42, 1);
            org.junit.Assert.fail("Expected exception of type java.net.BindException; message: Permission denied (Bind failed)");
        } catch (java.net.BindException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNull(okAuthenticator13);
        org.junit.Assert.assertNull(responseCache18);
        org.junit.Assert.assertNull(sSLSocketFactory19);
        org.junit.Assert.assertNotNull(proxy20);
        org.junit.Assert.assertNull(socketAddress21);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(connectionPool30);
        org.junit.Assert.assertNotNull(okHttpClient32);
// flaky:         org.junit.Assert.assertNull(proxySelector33);
        org.junit.Assert.assertNotNull(sSLSocketFactory34);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(strArray39);
    }

    @Test
    public void test12009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12009");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.OkAuthenticator okAuthenticator12 = okHttpClient11.getAuthenticator();
        java.util.List<java.lang.String> strList13 = okHttpClient11.getTransports();
        java.net.ProxySelector proxySelector14 = null;
        okHttpClient11.proxySelector = proxySelector14;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier17 = null;
        okHttpClient16.hostnameVerifier = hostnameVerifier17;
        java.net.ProxySelector proxySelector19 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient16.setProxySelector(proxySelector19);
        java.net.CookieHandler cookieHandler21 = okHttpClient16.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier23 = null;
        okHttpClient22.hostnameVerifier = hostnameVerifier23;
        java.net.ResponseCache responseCache25 = null;
        okHttpClient22.responseCache = responseCache25;
        java.util.List<java.lang.String> strList27 = okHttpClient22.transports;
        com.squareup.okhttp.ConnectionPool connectionPool28 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient22.connectionPool = connectionPool28;
        java.net.Proxy proxy30 = null;
        okHttpClient22.proxy = proxy30;
        java.util.Set<com.squareup.okhttp.Route> routeSet32 = okHttpClient22.failedRoutes;
        okHttpClient16.failedRoutes = routeSet32;
        java.net.ProxySelector proxySelector34 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient16.setProxySelector(proxySelector34);
        com.squareup.okhttp.OkHttpClient okHttpClient36 = new com.squareup.okhttp.OkHttpClient(okHttpClient35);
        com.squareup.okhttp.OkAuthenticator okAuthenticator37 = okHttpClient36.authenticator;
        java.net.ProxySelector proxySelector38 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient36.setProxySelector(proxySelector38);
        com.squareup.okhttp.OkHttpClient okHttpClient40 = okHttpClient39.copyWithDefaults();
        java.net.Proxy proxy41 = okHttpClient39.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient39.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient43 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier44 = null;
        okHttpClient43.hostnameVerifier = hostnameVerifier44;
        java.net.ResponseCache responseCache46 = null;
        okHttpClient43.responseCache = responseCache46;
        java.util.List<java.lang.String> strList48 = okHttpClient43.transports;
        com.squareup.okhttp.ConnectionPool connectionPool49 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient43.connectionPool = connectionPool49;
        java.net.Proxy proxy51 = null;
        okHttpClient43.proxy = proxy51;
        boolean boolean53 = okHttpClient43.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient54 = new com.squareup.okhttp.OkHttpClient(okHttpClient43);
        java.net.ProxySelector proxySelector55 = okHttpClient54.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier56 = okHttpClient54.hostnameVerifier;
        java.net.Proxy proxy57 = java.net.Proxy.NO_PROXY;
        boolean boolean59 = proxy57.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type60 = proxy57.type();
        java.net.Proxy.Type type61 = proxy57.type();
        okHttpClient54.proxy = proxy57;
        com.squareup.okhttp.OkHttpClient okHttpClient63 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier64 = null;
        okHttpClient63.hostnameVerifier = hostnameVerifier64;
        java.net.ResponseCache responseCache66 = null;
        okHttpClient63.responseCache = responseCache66;
        java.util.List<java.lang.String> strList68 = okHttpClient63.transports;
        com.squareup.okhttp.ConnectionPool connectionPool69 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient63.connectionPool = connectionPool69;
        com.squareup.okhttp.OkHttpClient okHttpClient71 = okHttpClient63.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient72 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier73 = null;
        okHttpClient72.hostnameVerifier = hostnameVerifier73;
        java.net.ResponseCache responseCache75 = null;
        okHttpClient72.responseCache = responseCache75;
        java.util.List<java.lang.String> strList77 = okHttpClient72.transports;
        com.squareup.okhttp.ConnectionPool connectionPool78 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient72.connectionPool = connectionPool78;
        com.squareup.okhttp.OkHttpClient okHttpClient80 = okHttpClient72.copyWithDefaults();
        java.net.ProxySelector proxySelector81 = okHttpClient80.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory82 = okHttpClient80.getSslSocketFactory();
        okHttpClient63.sslSocketFactory = sSLSocketFactory82;
        okHttpClient54.sslSocketFactory = sSLSocketFactory82;
        com.squareup.okhttp.OkHttpClient okHttpClient85 = okHttpClient39.setSSLSocketFactory(sSLSocketFactory82);
        okHttpClient11.sslSocketFactory = sSLSocketFactory82;
        java.lang.String[] strArray87 = sSLSocketFactory82.getDefaultCipherSuites();
        java.net.InetAddress inetAddress88 = null;
        java.net.InetAddress inetAddress90 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket92 = sSLSocketFactory82.createSocket(inetAddress88, (int) (short) 10, inetAddress90, 1);
            org.junit.Assert.fail("Expected exception of type java.net.BindException; message: Permission denied (Bind failed)");
        } catch (java.net.BindException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(okAuthenticator12);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNull(cookieHandler21);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNotNull(connectionPool28);
        org.junit.Assert.assertNotNull(routeSet32);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNull(okAuthenticator37);
        org.junit.Assert.assertNotNull(okHttpClient39);
        org.junit.Assert.assertNotNull(okHttpClient40);
        org.junit.Assert.assertNull(proxy41);
        org.junit.Assert.assertNotNull(okHttpClient42);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNotNull(connectionPool49);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(proxySelector55);
        org.junit.Assert.assertNull(hostnameVerifier56);
        org.junit.Assert.assertNotNull(proxy57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + type60 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type60.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertTrue("'" + type61 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type61.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNotNull(connectionPool69);
        org.junit.Assert.assertNotNull(okHttpClient71);
        org.junit.Assert.assertNull(strList77);
        org.junit.Assert.assertNotNull(connectionPool78);
        org.junit.Assert.assertNotNull(okHttpClient80);
// flaky:         org.junit.Assert.assertNull(proxySelector81);
        org.junit.Assert.assertNotNull(sSLSocketFactory82);
        org.junit.Assert.assertNotNull(okHttpClient85);
        org.junit.Assert.assertNotNull(strArray87);
    }

    @Test
    public void test12010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12010");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.ResponseCache responseCache5 = null;
        okHttpClient4.responseCache = responseCache5;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = null;
        okHttpClient7.hostnameVerifier = hostnameVerifier8;
        java.net.ProxySelector proxySelector10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient7.setProxySelector(proxySelector10);
        java.net.CookieHandler cookieHandler12 = okHttpClient7.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = null;
        okHttpClient13.hostnameVerifier = hostnameVerifier14;
        java.net.ResponseCache responseCache16 = null;
        okHttpClient13.responseCache = responseCache16;
        java.util.List<java.lang.String> strList18 = okHttpClient13.transports;
        com.squareup.okhttp.ConnectionPool connectionPool19 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient13.connectionPool = connectionPool19;
        java.net.Proxy proxy21 = null;
        okHttpClient13.proxy = proxy21;
        java.util.Set<com.squareup.okhttp.Route> routeSet23 = okHttpClient13.failedRoutes;
        okHttpClient7.failedRoutes = routeSet23;
        java.net.ProxySelector proxySelector25 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient7.setProxySelector(proxySelector25);
        com.squareup.okhttp.OkHttpClient okHttpClient27 = new com.squareup.okhttp.OkHttpClient(okHttpClient26);
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient27.setFollowProtocolRedirects(false);
        java.net.ResponseCache responseCache30 = okHttpClient29.getResponseCache();
        com.squareup.okhttp.ConnectionPool connectionPool33 = new com.squareup.okhttp.ConnectionPool((int) (short) 0, 1L);
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient29.setConnectionPool(connectionPool33);
        int int35 = connectionPool33.getConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient4.setConnectionPool(connectionPool33);
        com.squareup.okhttp.Connection connection37 = null;
        // The following exception was thrown during execution in test generation
        try {
            connectionPool33.maybeShare(connection37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(cookieHandler12);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(connectionPool19);
        org.junit.Assert.assertNotNull(routeSet23);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNotNull(okHttpClient29);
        org.junit.Assert.assertNull(responseCache30);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(okHttpClient36);
    }

    @Test
    public void test12011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12011");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        java.net.ResponseCache responseCache12 = okHttpClient0.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory13 = okHttpClient0.sslSocketFactory;
        java.net.CookieHandler cookieHandler14 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkAuthenticator okAuthenticator15 = okHttpClient0.authenticator;
        java.util.Set<com.squareup.okhttp.Route> routeSet16 = okHttpClient0.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier19 = null;
        okHttpClient18.hostnameVerifier = hostnameVerifier19;
        java.net.ResponseCache responseCache21 = null;
        okHttpClient18.responseCache = responseCache21;
        javax.net.ssl.HostnameVerifier hostnameVerifier23 = okHttpClient18.hostnameVerifier;
        java.net.Proxy proxy24 = okHttpClient18.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool27 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient18.connectionPool = connectionPool27;
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient18.copyWithDefaults();
        java.net.ResponseCache responseCache30 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient29.setResponseCache(responseCache30);
        javax.net.ssl.HostnameVerifier hostnameVerifier32 = okHttpClient31.hostnameVerifier;
        okHttpClient17.hostnameVerifier = hostnameVerifier32;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory34 = okHttpClient17.getSslSocketFactory();
        com.squareup.okhttp.ConnectionPool connectionPool35 = okHttpClient17.getConnectionPool();
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(responseCache12);
        org.junit.Assert.assertNull(sSLSocketFactory13);
        org.junit.Assert.assertNull(cookieHandler14);
        org.junit.Assert.assertNull(okAuthenticator15);
        org.junit.Assert.assertNotNull(routeSet16);
        org.junit.Assert.assertNull(hostnameVerifier23);
        org.junit.Assert.assertNull(proxy24);
        org.junit.Assert.assertNotNull(okHttpClient29);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNotNull(hostnameVerifier32);
        org.junit.Assert.assertNull(sSLSocketFactory34);
        org.junit.Assert.assertNull(connectionPool35);
    }

    @Test
    public void test12012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12012");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.CookieHandler cookieHandler5 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = null;
        okHttpClient6.hostnameVerifier = hostnameVerifier7;
        java.net.ResponseCache responseCache9 = null;
        okHttpClient6.responseCache = responseCache9;
        java.util.List<java.lang.String> strList11 = okHttpClient6.transports;
        com.squareup.okhttp.ConnectionPool connectionPool12 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient6.connectionPool = connectionPool12;
        java.net.Proxy proxy14 = null;
        okHttpClient6.proxy = proxy14;
        java.util.Set<com.squareup.okhttp.Route> routeSet16 = okHttpClient6.failedRoutes;
        okHttpClient0.failedRoutes = routeSet16;
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient0.setHostnameVerifier(hostnameVerifier18);
        java.net.ProxySelector proxySelector20 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient0.setProxySelector(proxySelector20);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory22 = okHttpClient0.sslSocketFactory;
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNotNull(routeSet16);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNull(sSLSocketFactory22);
    }

    @Test
    public void test12013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12013");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.CookieHandler cookieHandler8 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache9 = okHttpClient0.okResponseCache();
        java.net.CookieHandler cookieHandler10 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory12 = okHttpClient11.sslSocketFactory;
        java.net.Proxy proxy13 = okHttpClient11.proxy;
        com.squareup.okhttp.ConnectionPool connectionPool14 = okHttpClient11.getConnectionPool();
        java.net.ProxySelector proxySelector15 = okHttpClient11.proxySelector;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier17 = null;
        okHttpClient16.hostnameVerifier = hostnameVerifier17;
        java.net.ResponseCache responseCache19 = null;
        okHttpClient16.responseCache = responseCache19;
        java.util.List<java.lang.String> strList21 = okHttpClient16.transports;
        com.squareup.okhttp.ConnectionPool connectionPool22 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient16.connectionPool = connectionPool22;
        java.net.Proxy proxy24 = null;
        okHttpClient16.proxy = proxy24;
        boolean boolean26 = okHttpClient16.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache28 = okHttpClient27.okResponseCache();
        java.net.ResponseCache responseCache29 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient30 = okHttpClient27.setResponseCache(responseCache29);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        okHttpClient27.transports = strList33;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory36 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient27.setSSLSocketFactory(sSLSocketFactory36);
        com.squareup.okhttp.OkHttpClient okHttpClient38 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier39 = null;
        okHttpClient38.hostnameVerifier = hostnameVerifier39;
        java.net.ResponseCache responseCache41 = null;
        okHttpClient38.responseCache = responseCache41;
        javax.net.ssl.HostnameVerifier hostnameVerifier43 = okHttpClient38.hostnameVerifier;
        java.net.Proxy proxy44 = okHttpClient38.getProxy();
        java.net.CookieHandler cookieHandler45 = null;
        okHttpClient38.cookieHandler = cookieHandler45;
        okHttpClient38.followProtocolRedirects = true;
        com.squareup.okhttp.OkHttpClient okHttpClient49 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier50 = null;
        okHttpClient49.hostnameVerifier = hostnameVerifier50;
        java.net.ResponseCache responseCache52 = null;
        okHttpClient49.responseCache = responseCache52;
        javax.net.ssl.HostnameVerifier hostnameVerifier54 = okHttpClient49.hostnameVerifier;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory55 = okHttpClient49.sslSocketFactory;
        java.net.CookieHandler cookieHandler56 = okHttpClient49.cookieHandler;
        javax.net.ssl.HostnameVerifier hostnameVerifier57 = okHttpClient49.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient58 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool59 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient58.connectionPool = connectionPool59;
        com.squareup.okhttp.OkAuthenticator okAuthenticator61 = null;
        okHttpClient58.authenticator = okAuthenticator61;
        java.util.List<java.lang.String> strList63 = okHttpClient58.transports;
        java.net.ResponseCache responseCache64 = null;
        okHttpClient58.responseCache = responseCache64;
        com.squareup.okhttp.OkHttpClient okHttpClient66 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier67 = null;
        okHttpClient66.hostnameVerifier = hostnameVerifier67;
        java.net.ResponseCache responseCache69 = null;
        okHttpClient66.responseCache = responseCache69;
        javax.net.ssl.HostnameVerifier hostnameVerifier71 = okHttpClient66.hostnameVerifier;
        java.net.Proxy proxy72 = okHttpClient66.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool75 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient66.connectionPool = connectionPool75;
        com.squareup.okhttp.OkHttpClient okHttpClient77 = okHttpClient66.copyWithDefaults();
        java.net.Proxy proxy78 = okHttpClient77.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier79 = okHttpClient77.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient80 = okHttpClient58.setHostnameVerifier(hostnameVerifier79);
        com.squareup.okhttp.OkHttpClient okHttpClient81 = okHttpClient49.setHostnameVerifier(hostnameVerifier79);
        okHttpClient38.hostnameVerifier = hostnameVerifier79;
        com.squareup.okhttp.OkHttpClient okHttpClient83 = okHttpClient27.setHostnameVerifier(hostnameVerifier79);
        com.squareup.okhttp.OkHttpClient okHttpClient84 = okHttpClient16.setHostnameVerifier(hostnameVerifier79);
        javax.net.ssl.HostnameVerifier hostnameVerifier85 = okHttpClient84.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient86 = okHttpClient11.setHostnameVerifier(hostnameVerifier85);
        java.net.ProxySelector proxySelector87 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient88 = okHttpClient86.setProxySelector(proxySelector87);
        okHttpClient88.followProtocolRedirects = false;
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNull(cookieHandler8);
        org.junit.Assert.assertNull(okResponseCache9);
        org.junit.Assert.assertNull(cookieHandler10);
        org.junit.Assert.assertNull(sSLSocketFactory12);
        org.junit.Assert.assertNull(proxy13);
        org.junit.Assert.assertNull(connectionPool14);
        org.junit.Assert.assertNull(proxySelector15);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(connectionPool22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(okResponseCache28);
        org.junit.Assert.assertNotNull(okHttpClient30);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(okHttpClient37);
        org.junit.Assert.assertNull(hostnameVerifier43);
        org.junit.Assert.assertNull(proxy44);
        org.junit.Assert.assertNull(hostnameVerifier54);
        org.junit.Assert.assertNull(sSLSocketFactory55);
        org.junit.Assert.assertNull(cookieHandler56);
        org.junit.Assert.assertNull(hostnameVerifier57);
        org.junit.Assert.assertNotNull(connectionPool59);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNull(hostnameVerifier71);
        org.junit.Assert.assertNull(proxy72);
        org.junit.Assert.assertNotNull(okHttpClient77);
        org.junit.Assert.assertNull(proxy78);
        org.junit.Assert.assertNotNull(hostnameVerifier79);
        org.junit.Assert.assertNotNull(okHttpClient80);
        org.junit.Assert.assertNotNull(okHttpClient81);
        org.junit.Assert.assertNotNull(okHttpClient83);
        org.junit.Assert.assertNotNull(okHttpClient84);
        org.junit.Assert.assertNotNull(hostnameVerifier85);
        org.junit.Assert.assertNotNull(okHttpClient86);
        org.junit.Assert.assertNotNull(okHttpClient88);
    }

    @Test
    public void test12014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12014");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.ConnectionPool connectionPool12 = okHttpClient11.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator13 = okHttpClient11.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool16 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient11.connectionPool = connectionPool16;
        java.net.ResponseCache responseCache18 = okHttpClient11.responseCache;
        java.util.List<java.lang.String> strList19 = okHttpClient11.getTransports();
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient11.copyWithDefaults();
        java.net.ResponseCache responseCache21 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient20.setResponseCache(responseCache21);
        com.squareup.okhttp.OkAuthenticator okAuthenticator23 = okHttpClient20.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool26 = new com.squareup.okhttp.ConnectionPool((int) (short) -1, (long) 'a');
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient20.setConnectionPool(connectionPool26);
        java.net.Proxy proxy28 = okHttpClient20.getProxy();
        java.net.CookieHandler cookieHandler29 = okHttpClient20.cookieHandler;
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNull(okAuthenticator13);
        org.junit.Assert.assertNull(responseCache18);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNotNull(okAuthenticator23);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNull(proxy28);
        org.junit.Assert.assertNull(cookieHandler29);
    }

    @Test
    public void test12015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12015");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.CookieHandler cookieHandler5 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = null;
        okHttpClient6.hostnameVerifier = hostnameVerifier7;
        java.net.ResponseCache responseCache9 = null;
        okHttpClient6.responseCache = responseCache9;
        java.util.List<java.lang.String> strList11 = okHttpClient6.transports;
        com.squareup.okhttp.ConnectionPool connectionPool12 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient6.connectionPool = connectionPool12;
        java.net.Proxy proxy14 = null;
        okHttpClient6.proxy = proxy14;
        java.util.Set<com.squareup.okhttp.Route> routeSet16 = okHttpClient6.failedRoutes;
        okHttpClient0.failedRoutes = routeSet16;
        java.net.ProxySelector proxySelector18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient0.setProxySelector(proxySelector18);
        com.squareup.okhttp.OkHttpClient okHttpClient20 = new com.squareup.okhttp.OkHttpClient(okHttpClient19);
        com.squareup.okhttp.OkHttpClient okHttpClient21 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier22 = null;
        okHttpClient21.hostnameVerifier = hostnameVerifier22;
        java.net.ResponseCache responseCache24 = null;
        okHttpClient21.responseCache = responseCache24;
        javax.net.ssl.HostnameVerifier hostnameVerifier26 = okHttpClient21.hostnameVerifier;
        java.net.Proxy proxy27 = okHttpClient21.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool30 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient21.connectionPool = connectionPool30;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient21.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier33 = okHttpClient32.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient19.setHostnameVerifier(hostnameVerifier33);
        java.net.CookieHandler cookieHandler35 = null;
        okHttpClient34.cookieHandler = cookieHandler35;
        com.squareup.okhttp.OkHttpClient okHttpClient37 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier38 = null;
        okHttpClient37.hostnameVerifier = hostnameVerifier38;
        java.net.ResponseCache responseCache40 = null;
        okHttpClient37.responseCache = responseCache40;
        java.util.List<java.lang.String> strList42 = okHttpClient37.transports;
        com.squareup.okhttp.ConnectionPool connectionPool43 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient37.connectionPool = connectionPool43;
        java.net.CookieHandler cookieHandler45 = okHttpClient37.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache46 = okHttpClient37.okResponseCache();
        java.net.CookieHandler cookieHandler47 = okHttpClient37.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient48 = new com.squareup.okhttp.OkHttpClient(okHttpClient37);
        java.net.Proxy proxy49 = java.net.Proxy.NO_PROXY;
        boolean boolean51 = proxy49.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type52 = proxy49.type();
        java.net.SocketAddress socketAddress53 = proxy49.address();
        com.squareup.okhttp.OkHttpClient okHttpClient54 = okHttpClient37.setProxy(proxy49);
        java.lang.String[] strArray56 = new java.lang.String[] { "DIRECT" };
        java.util.ArrayList<java.lang.String> strList57 = new java.util.ArrayList<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList57, strArray56);
        okHttpClient37.transports = strList57;
        com.squareup.okhttp.OkHttpClient okHttpClient61 = okHttpClient37.setFollowProtocolRedirects(false);
        com.squareup.okhttp.ConnectionPool connectionPool64 = new com.squareup.okhttp.ConnectionPool((int) '#', (long) (short) 100);
        com.squareup.okhttp.OkHttpClient okHttpClient65 = okHttpClient61.setConnectionPool(connectionPool64);
        java.net.ProxySelector proxySelector66 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient67 = okHttpClient61.setProxySelector(proxySelector66);
        boolean boolean68 = okHttpClient61.getFollowProtocolRedirects();
        java.util.Set<com.squareup.okhttp.Route> routeSet69 = okHttpClient61.failedRoutes;
        okHttpClient34.failedRoutes = routeSet69;
        java.net.Proxy proxy71 = okHttpClient34.getProxy();
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNotNull(routeSet16);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNull(hostnameVerifier26);
        org.junit.Assert.assertNull(proxy27);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertNotNull(hostnameVerifier33);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNotNull(connectionPool43);
        org.junit.Assert.assertNull(cookieHandler45);
        org.junit.Assert.assertNull(okResponseCache46);
        org.junit.Assert.assertNull(cookieHandler47);
        org.junit.Assert.assertNotNull(proxy49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + type52 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type52.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress53);
        org.junit.Assert.assertNotNull(okHttpClient54);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(okHttpClient61);
        org.junit.Assert.assertNotNull(okHttpClient65);
        org.junit.Assert.assertNotNull(okHttpClient67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(routeSet69);
        org.junit.Assert.assertNull(proxy71);
    }

    @Test
    public void test12016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12016");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.OkAuthenticator okAuthenticator12 = okHttpClient11.getAuthenticator();
        java.util.List<java.lang.String> strList13 = okHttpClient11.transports;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient11.copyWithDefaults();
        okHttpClient14.followProtocolRedirects = true;
        java.net.URL uRL17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.HttpURLConnection httpURLConnection18 = okHttpClient14.open(uRL17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(okAuthenticator12);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNotNull(okHttpClient14);
    }

    @Test
    public void test12017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12017");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.ResponseCache responseCache5 = null;
        okHttpClient4.responseCache = responseCache5;
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = okHttpClient4.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient4.setFollowProtocolRedirects(false);
        java.net.ProxySelector proxySelector10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient9.setProxySelector(proxySelector10);
        okHttpClient11.followProtocolRedirects = true;
        java.util.List<java.lang.String> strList14 = okHttpClient11.transports;
        okHttpClient11.followProtocolRedirects = false;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = null;
        okHttpClient17.hostnameVerifier = hostnameVerifier18;
        java.net.ProxySelector proxySelector20 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient17.setProxySelector(proxySelector20);
        java.net.CookieHandler cookieHandler22 = okHttpClient17.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient23 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier24 = null;
        okHttpClient23.hostnameVerifier = hostnameVerifier24;
        java.net.ResponseCache responseCache26 = null;
        okHttpClient23.responseCache = responseCache26;
        java.util.List<java.lang.String> strList28 = okHttpClient23.transports;
        com.squareup.okhttp.ConnectionPool connectionPool29 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient23.connectionPool = connectionPool29;
        java.net.Proxy proxy31 = null;
        okHttpClient23.proxy = proxy31;
        java.util.Set<com.squareup.okhttp.Route> routeSet33 = okHttpClient23.failedRoutes;
        okHttpClient17.failedRoutes = routeSet33;
        javax.net.ssl.HostnameVerifier hostnameVerifier35 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient17.setHostnameVerifier(hostnameVerifier35);
        java.net.ProxySelector proxySelector37 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient36.setProxySelector(proxySelector37);
        com.squareup.okhttp.OkHttpClient okHttpClient39 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache40 = okHttpClient39.okResponseCache();
        java.net.ResponseCache responseCache41 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient39.setResponseCache(responseCache41);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory43 = okHttpClient39.sslSocketFactory;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory44 = okHttpClient39.sslSocketFactory;
        com.squareup.okhttp.OkHttpClient okHttpClient45 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier46 = null;
        okHttpClient45.hostnameVerifier = hostnameVerifier46;
        boolean boolean48 = okHttpClient45.getFollowProtocolRedirects();
        java.net.CookieHandler cookieHandler49 = okHttpClient45.cookieHandler;
        com.squareup.okhttp.OkHttpClient okHttpClient50 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier51 = null;
        okHttpClient50.hostnameVerifier = hostnameVerifier51;
        java.net.ResponseCache responseCache53 = null;
        okHttpClient50.responseCache = responseCache53;
        javax.net.ssl.HostnameVerifier hostnameVerifier55 = okHttpClient50.hostnameVerifier;
        java.net.Proxy proxy56 = okHttpClient50.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool59 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient50.connectionPool = connectionPool59;
        com.squareup.okhttp.OkHttpClient okHttpClient61 = okHttpClient50.copyWithDefaults();
        java.net.ResponseCache responseCache62 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient63 = okHttpClient61.setResponseCache(responseCache62);
        com.squareup.okhttp.OkAuthenticator okAuthenticator64 = okHttpClient61.authenticator;
        okHttpClient45.authenticator = okAuthenticator64;
        com.squareup.okhttp.OkHttpClient okHttpClient66 = okHttpClient39.setAuthenticator(okAuthenticator64);
        com.squareup.okhttp.OkHttpClient okHttpClient67 = okHttpClient38.setAuthenticator(okAuthenticator64);
        com.squareup.okhttp.OkHttpClient okHttpClient68 = okHttpClient11.setAuthenticator(okAuthenticator64);
        java.net.Proxy proxy69 = okHttpClient68.getProxy();
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(hostnameVerifier7);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNull(cookieHandler22);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNotNull(connectionPool29);
        org.junit.Assert.assertNotNull(routeSet33);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNull(okResponseCache40);
        org.junit.Assert.assertNotNull(okHttpClient42);
        org.junit.Assert.assertNull(sSLSocketFactory43);
        org.junit.Assert.assertNull(sSLSocketFactory44);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(cookieHandler49);
        org.junit.Assert.assertNull(hostnameVerifier55);
        org.junit.Assert.assertNull(proxy56);
        org.junit.Assert.assertNotNull(okHttpClient61);
        org.junit.Assert.assertNotNull(okHttpClient63);
        org.junit.Assert.assertNotNull(okAuthenticator64);
        org.junit.Assert.assertNotNull(okHttpClient66);
        org.junit.Assert.assertNotNull(okHttpClient67);
        org.junit.Assert.assertNotNull(okHttpClient68);
        org.junit.Assert.assertNull(proxy69);
    }

    @Test
    public void test12018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12018");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient0.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.copyWithDefaults();
        java.net.Proxy proxy12 = okHttpClient11.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier13 = okHttpClient11.getHostnameVerifier();
        com.squareup.okhttp.ConnectionPool connectionPool14 = null;
        okHttpClient11.connectionPool = connectionPool14;
        com.squareup.okhttp.ConnectionPool connectionPool16 = okHttpClient11.connectionPool;
        com.squareup.okhttp.ConnectionPool connectionPool17 = okHttpClient11.getConnectionPool();
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(proxy12);
        org.junit.Assert.assertNotNull(hostnameVerifier13);
        org.junit.Assert.assertNull(connectionPool16);
        org.junit.Assert.assertNull(connectionPool17);
    }

    @Test
    public void test12019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12019");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        boolean boolean6 = okHttpClient0.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        com.squareup.okhttp.OkHttpClient okHttpClient8 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        com.squareup.okhttp.OkHttpClient okHttpClient9 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier10 = null;
        okHttpClient9.hostnameVerifier = hostnameVerifier10;
        java.net.ResponseCache responseCache12 = null;
        okHttpClient9.responseCache = responseCache12;
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = okHttpClient9.hostnameVerifier;
        java.net.Proxy proxy15 = okHttpClient9.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool18 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient9.connectionPool = connectionPool18;
        java.util.List<java.lang.String> strList20 = okHttpClient9.getTransports();
        javax.net.ssl.HostnameVerifier hostnameVerifier21 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient9.setHostnameVerifier(hostnameVerifier21);
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient22.copyWithDefaults();
        okHttpClient23.followProtocolRedirects = false;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier27 = null;
        okHttpClient26.hostnameVerifier = hostnameVerifier27;
        java.net.ResponseCache responseCache29 = null;
        okHttpClient26.responseCache = responseCache29;
        java.util.List<java.lang.String> strList31 = okHttpClient26.transports;
        com.squareup.okhttp.ConnectionPool connectionPool32 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient26.connectionPool = connectionPool32;
        java.net.Proxy proxy34 = null;
        okHttpClient26.proxy = proxy34;
        boolean boolean36 = okHttpClient26.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient26.setFollowProtocolRedirects(true);
        com.squareup.okhttp.OkHttpClient okHttpClient39 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier40 = null;
        okHttpClient39.hostnameVerifier = hostnameVerifier40;
        java.net.ResponseCache responseCache42 = null;
        okHttpClient39.responseCache = responseCache42;
        java.util.List<java.lang.String> strList44 = okHttpClient39.transports;
        javax.net.ssl.HostnameVerifier hostnameVerifier45 = null;
        okHttpClient39.hostnameVerifier = hostnameVerifier45;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache47 = okHttpClient39.okResponseCache();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory48 = okHttpClient39.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient49 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier50 = null;
        okHttpClient49.hostnameVerifier = hostnameVerifier50;
        java.net.ResponseCache responseCache52 = null;
        okHttpClient49.responseCache = responseCache52;
        javax.net.ssl.HostnameVerifier hostnameVerifier54 = okHttpClient49.hostnameVerifier;
        java.net.Proxy proxy55 = okHttpClient49.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool58 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient49.connectionPool = connectionPool58;
        com.squareup.okhttp.OkHttpClient okHttpClient60 = okHttpClient49.copyWithDefaults();
        java.net.Proxy proxy61 = okHttpClient60.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier62 = okHttpClient60.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient63 = okHttpClient39.setHostnameVerifier(hostnameVerifier62);
        com.squareup.okhttp.OkHttpClient okHttpClient64 = okHttpClient38.setHostnameVerifier(hostnameVerifier62);
        com.squareup.okhttp.OkHttpClient okHttpClient65 = okHttpClient23.setHostnameVerifier(hostnameVerifier62);
        com.squareup.okhttp.OkHttpClient okHttpClient66 = okHttpClient8.setHostnameVerifier(hostnameVerifier62);
        java.net.ProxySelector proxySelector67 = okHttpClient66.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier68 = okHttpClient66.getHostnameVerifier();
        java.net.CookieHandler cookieHandler69 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient70 = okHttpClient66.setCookieHandler(cookieHandler69);
        com.squareup.okhttp.OkHttpClient okHttpClient72 = okHttpClient66.setFollowProtocolRedirects(true);
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(hostnameVerifier14);
        org.junit.Assert.assertNull(proxy15);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNotNull(connectionPool32);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNull(okResponseCache47);
        org.junit.Assert.assertNull(sSLSocketFactory48);
        org.junit.Assert.assertNull(hostnameVerifier54);
        org.junit.Assert.assertNull(proxy55);
        org.junit.Assert.assertNotNull(okHttpClient60);
        org.junit.Assert.assertNull(proxy61);
        org.junit.Assert.assertNotNull(hostnameVerifier62);
        org.junit.Assert.assertNotNull(okHttpClient63);
        org.junit.Assert.assertNotNull(okHttpClient64);
        org.junit.Assert.assertNotNull(okHttpClient65);
        org.junit.Assert.assertNotNull(okHttpClient66);
        org.junit.Assert.assertNull(proxySelector67);
        org.junit.Assert.assertNotNull(hostnameVerifier68);
        org.junit.Assert.assertNotNull(okHttpClient70);
        org.junit.Assert.assertNotNull(okHttpClient72);
    }

    @Test
    public void test12020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12020");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.util.Set<com.squareup.okhttp.Route> routeSet3 = okHttpClient0.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        java.net.ResponseCache responseCache5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient0.setResponseCache(responseCache5);
        java.net.ResponseCache responseCache7 = okHttpClient0.responseCache;
        org.junit.Assert.assertNotNull(routeSet3);
        org.junit.Assert.assertNotNull(okHttpClient6);
        org.junit.Assert.assertNull(responseCache7);
    }

    @Test
    public void test12021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12021");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.CookieHandler cookieHandler6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient0.setCookieHandler(cookieHandler6);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory8 = null;
        okHttpClient7.sslSocketFactory = sSLSocketFactory8;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier11 = null;
        okHttpClient10.hostnameVerifier = hostnameVerifier11;
        java.net.ResponseCache responseCache13 = null;
        okHttpClient10.responseCache = responseCache13;
        javax.net.ssl.HostnameVerifier hostnameVerifier15 = okHttpClient10.hostnameVerifier;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient10.setSSLSocketFactory(sSLSocketFactory16);
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier19 = null;
        okHttpClient18.hostnameVerifier = hostnameVerifier19;
        java.net.ResponseCache responseCache21 = null;
        okHttpClient18.responseCache = responseCache21;
        javax.net.ssl.HostnameVerifier hostnameVerifier23 = okHttpClient18.hostnameVerifier;
        java.net.Proxy proxy24 = okHttpClient18.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool27 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient18.connectionPool = connectionPool27;
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient18.copyWithDefaults();
        java.net.ResponseCache responseCache30 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient29.setResponseCache(responseCache30);
        javax.net.ssl.HostnameVerifier hostnameVerifier32 = okHttpClient31.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient31.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient34 = new com.squareup.okhttp.OkHttpClient(okHttpClient33);
        com.squareup.okhttp.ConnectionPool connectionPool37 = new com.squareup.okhttp.ConnectionPool((int) (byte) 0, (long) (short) 0);
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient33.setConnectionPool(connectionPool37);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory39 = okHttpClient33.getSslSocketFactory();
        java.net.Socket socket40 = sSLSocketFactory39.createSocket();
        com.squareup.okhttp.OkHttpClient okHttpClient41 = okHttpClient10.setSSLSocketFactory(sSLSocketFactory39);
        java.lang.String[] strArray42 = sSLSocketFactory39.getDefaultCipherSuites();
        okHttpClient7.sslSocketFactory = sSLSocketFactory39;
        com.squareup.okhttp.OkHttpClient okHttpClient44 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier45 = null;
        okHttpClient44.hostnameVerifier = hostnameVerifier45;
        java.net.ResponseCache responseCache47 = null;
        okHttpClient44.responseCache = responseCache47;
        javax.net.ssl.HostnameVerifier hostnameVerifier49 = okHttpClient44.hostnameVerifier;
        java.net.Proxy proxy50 = okHttpClient44.getProxy();
        java.net.CookieHandler cookieHandler51 = null;
        okHttpClient44.cookieHandler = cookieHandler51;
        okHttpClient44.followProtocolRedirects = true;
        com.squareup.okhttp.OkHttpClient okHttpClient55 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier56 = null;
        okHttpClient55.hostnameVerifier = hostnameVerifier56;
        java.net.ResponseCache responseCache58 = null;
        okHttpClient55.responseCache = responseCache58;
        javax.net.ssl.HostnameVerifier hostnameVerifier60 = okHttpClient55.hostnameVerifier;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory61 = okHttpClient55.sslSocketFactory;
        java.net.CookieHandler cookieHandler62 = okHttpClient55.cookieHandler;
        javax.net.ssl.HostnameVerifier hostnameVerifier63 = okHttpClient55.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient64 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool65 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient64.connectionPool = connectionPool65;
        com.squareup.okhttp.OkAuthenticator okAuthenticator67 = null;
        okHttpClient64.authenticator = okAuthenticator67;
        java.util.List<java.lang.String> strList69 = okHttpClient64.transports;
        java.net.ResponseCache responseCache70 = null;
        okHttpClient64.responseCache = responseCache70;
        com.squareup.okhttp.OkHttpClient okHttpClient72 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier73 = null;
        okHttpClient72.hostnameVerifier = hostnameVerifier73;
        java.net.ResponseCache responseCache75 = null;
        okHttpClient72.responseCache = responseCache75;
        javax.net.ssl.HostnameVerifier hostnameVerifier77 = okHttpClient72.hostnameVerifier;
        java.net.Proxy proxy78 = okHttpClient72.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool81 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient72.connectionPool = connectionPool81;
        com.squareup.okhttp.OkHttpClient okHttpClient83 = okHttpClient72.copyWithDefaults();
        java.net.Proxy proxy84 = okHttpClient83.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier85 = okHttpClient83.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient86 = okHttpClient64.setHostnameVerifier(hostnameVerifier85);
        com.squareup.okhttp.OkHttpClient okHttpClient87 = okHttpClient55.setHostnameVerifier(hostnameVerifier85);
        okHttpClient44.hostnameVerifier = hostnameVerifier85;
        javax.net.ssl.HostnameVerifier hostnameVerifier89 = okHttpClient44.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient90 = new com.squareup.okhttp.OkHttpClient(okHttpClient44);
        okHttpClient44.followProtocolRedirects = false;
        com.squareup.okhttp.OkHttpClient okHttpClient93 = okHttpClient44.copyWithDefaults();
        com.squareup.okhttp.OkAuthenticator okAuthenticator94 = okHttpClient93.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient95 = okHttpClient7.setAuthenticator(okAuthenticator94);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNotNull(okHttpClient7);
        org.junit.Assert.assertNull(hostnameVerifier15);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNull(hostnameVerifier23);
        org.junit.Assert.assertNull(proxy24);
        org.junit.Assert.assertNotNull(okHttpClient29);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNotNull(hostnameVerifier32);
        org.junit.Assert.assertNotNull(okHttpClient33);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNotNull(sSLSocketFactory39);
        org.junit.Assert.assertNotNull(socket40);
        org.junit.Assert.assertEquals(socket40.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(okHttpClient41);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNull(hostnameVerifier49);
        org.junit.Assert.assertNull(proxy50);
        org.junit.Assert.assertNull(hostnameVerifier60);
        org.junit.Assert.assertNull(sSLSocketFactory61);
        org.junit.Assert.assertNull(cookieHandler62);
        org.junit.Assert.assertNull(hostnameVerifier63);
        org.junit.Assert.assertNotNull(connectionPool65);
        org.junit.Assert.assertNull(strList69);
        org.junit.Assert.assertNull(hostnameVerifier77);
        org.junit.Assert.assertNull(proxy78);
        org.junit.Assert.assertNotNull(okHttpClient83);
        org.junit.Assert.assertNull(proxy84);
        org.junit.Assert.assertNotNull(hostnameVerifier85);
        org.junit.Assert.assertNotNull(okHttpClient86);
        org.junit.Assert.assertNotNull(okHttpClient87);
        org.junit.Assert.assertNotNull(hostnameVerifier89);
        org.junit.Assert.assertNotNull(okHttpClient93);
        org.junit.Assert.assertNotNull(okAuthenticator94);
        org.junit.Assert.assertNotNull(okHttpClient95);
    }

    @Test
    public void test12022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12022");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.OkAuthenticator okAuthenticator12 = okHttpClient11.getAuthenticator();
        java.net.ProxySelector proxySelector13 = okHttpClient11.getProxySelector();
        java.net.ResponseCache responseCache14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient11.setResponseCache(responseCache14);
        java.net.CookieHandler cookieHandler16 = null;
        okHttpClient15.cookieHandler = cookieHandler16;
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = okHttpClient15.getHostnameVerifier();
        java.net.ResponseCache responseCache19 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient15.setResponseCache(responseCache19);
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache21 = okHttpClient20.okResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier23 = null;
        okHttpClient22.hostnameVerifier = hostnameVerifier23;
        java.net.ResponseCache responseCache25 = null;
        okHttpClient22.responseCache = responseCache25;
        java.util.List<java.lang.String> strList27 = okHttpClient22.transports;
        com.squareup.okhttp.ConnectionPool connectionPool28 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient22.connectionPool = connectionPool28;
        java.net.CookieHandler cookieHandler30 = okHttpClient22.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache31 = okHttpClient22.okResponseCache();
        java.net.CookieHandler cookieHandler32 = okHttpClient22.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient33 = new com.squareup.okhttp.OkHttpClient(okHttpClient22);
        java.net.Proxy proxy34 = java.net.Proxy.NO_PROXY;
        boolean boolean36 = proxy34.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type37 = proxy34.type();
        java.net.SocketAddress socketAddress38 = proxy34.address();
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient22.setProxy(proxy34);
        com.squareup.okhttp.OkHttpClient okHttpClient40 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier41 = null;
        okHttpClient40.hostnameVerifier = hostnameVerifier41;
        java.net.ResponseCache responseCache43 = null;
        okHttpClient40.responseCache = responseCache43;
        java.util.List<java.lang.String> strList45 = okHttpClient40.transports;
        com.squareup.okhttp.ConnectionPool connectionPool46 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient40.connectionPool = connectionPool46;
        com.squareup.okhttp.OkHttpClient okHttpClient48 = okHttpClient40.copyWithDefaults();
        java.net.ProxySelector proxySelector49 = okHttpClient48.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory50 = okHttpClient48.getSslSocketFactory();
        okHttpClient39.sslSocketFactory = sSLSocketFactory50;
        java.lang.String[] strArray52 = sSLSocketFactory50.getDefaultCipherSuites();
        java.lang.String[] strArray53 = sSLSocketFactory50.getSupportedCipherSuites();
        java.lang.String[] strArray54 = sSLSocketFactory50.getDefaultCipherSuites();
        java.net.Socket socket55 = sSLSocketFactory50.createSocket();
        java.lang.String[] strArray56 = sSLSocketFactory50.getDefaultCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient57 = okHttpClient20.setSSLSocketFactory(sSLSocketFactory50);
        boolean boolean58 = okHttpClient20.getFollowProtocolRedirects();
        java.util.Set<com.squareup.okhttp.Route> routeSet59 = okHttpClient20.failedRoutes;
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(okAuthenticator12);
        org.junit.Assert.assertNull(proxySelector13);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNull(hostnameVerifier18);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNull(okResponseCache21);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNotNull(connectionPool28);
        org.junit.Assert.assertNull(cookieHandler30);
        org.junit.Assert.assertNull(okResponseCache31);
        org.junit.Assert.assertNull(cookieHandler32);
        org.junit.Assert.assertNotNull(proxy34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + type37 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type37.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress38);
        org.junit.Assert.assertNotNull(okHttpClient39);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNotNull(connectionPool46);
        org.junit.Assert.assertNotNull(okHttpClient48);
// flaky:         org.junit.Assert.assertNull(proxySelector49);
        org.junit.Assert.assertNotNull(sSLSocketFactory50);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(socket55);
        org.junit.Assert.assertEquals(socket55.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(okHttpClient57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(routeSet59);
    }

    @Test
    public void test12023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12023");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient0.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.copyWithDefaults();
        java.net.Proxy proxy12 = okHttpClient11.getProxy();
        java.net.CookieHandler cookieHandler13 = null;
        okHttpClient11.cookieHandler = cookieHandler13;
        java.util.List<java.lang.String> strList15 = okHttpClient11.transports;
        boolean boolean16 = okHttpClient11.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient(okHttpClient11);
        com.squareup.okhttp.ConnectionPool connectionPool18 = okHttpClient11.connectionPool;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool20 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient19.connectionPool = connectionPool20;
        java.net.ResponseCache responseCache22 = null;
        okHttpClient19.responseCache = responseCache22;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = new com.squareup.okhttp.OkHttpClient(okHttpClient19);
        boolean boolean25 = okHttpClient19.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = new com.squareup.okhttp.OkHttpClient(okHttpClient19);
        com.squareup.okhttp.OkHttpClient okHttpClient27 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier28 = null;
        okHttpClient27.hostnameVerifier = hostnameVerifier28;
        java.net.ResponseCache responseCache30 = null;
        okHttpClient27.responseCache = responseCache30;
        java.util.List<java.lang.String> strList32 = okHttpClient27.transports;
        java.net.Proxy proxy33 = java.net.Proxy.NO_PROXY;
        boolean boolean35 = proxy33.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type36 = proxy33.type();
        java.net.SocketAddress socketAddress37 = proxy33.address();
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient27.setProxy(proxy33);
        java.net.SocketAddress socketAddress39 = proxy33.address();
        java.net.Proxy.Type type40 = proxy33.type();
        java.net.SocketAddress socketAddress41 = proxy33.address();
        java.net.SocketAddress socketAddress42 = proxy33.address();
        java.lang.String str43 = proxy33.toString();
        java.net.Proxy.Type type44 = proxy33.type();
        com.squareup.okhttp.OkHttpClient okHttpClient45 = okHttpClient19.setProxy(proxy33);
        com.squareup.okhttp.OkHttpClient okHttpClient46 = okHttpClient11.setProxy(proxy33);
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(proxy12);
        org.junit.Assert.assertNotNull(strList15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(connectionPool18);
        org.junit.Assert.assertNotNull(connectionPool20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNotNull(proxy33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + type36 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type36.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress37);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNull(socketAddress39);
        org.junit.Assert.assertTrue("'" + type40 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type40.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress41);
        org.junit.Assert.assertNull(socketAddress42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "DIRECT" + "'", str43, "DIRECT");
        org.junit.Assert.assertTrue("'" + type44 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type44.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNotNull(okHttpClient45);
        org.junit.Assert.assertNotNull(okHttpClient46);
    }

    @Test
    public void test12024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12024");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.Proxy proxy8 = null;
        okHttpClient0.proxy = proxy8;
        boolean boolean10 = okHttpClient0.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        java.net.ProxySelector proxySelector12 = okHttpClient11.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier13 = okHttpClient11.hostnameVerifier;
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = okHttpClient11.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool16 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient15.connectionPool = connectionPool16;
        com.squareup.okhttp.OkAuthenticator okAuthenticator18 = null;
        okHttpClient15.authenticator = okAuthenticator18;
        java.net.CookieHandler cookieHandler20 = null;
        okHttpClient15.cookieHandler = cookieHandler20;
        java.net.Proxy proxy22 = java.net.Proxy.NO_PROXY;
        boolean boolean24 = proxy22.equals((java.lang.Object) 1L);
        com.squareup.okhttp.OkHttpClient okHttpClient25 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache26 = okHttpClient25.okResponseCache();
        java.net.ResponseCache responseCache27 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient25.setResponseCache(responseCache27);
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        okHttpClient25.transports = strList31;
        boolean boolean34 = proxy22.equals((java.lang.Object) strList31);
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient15.setProxy(proxy22);
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient11.setProxy(proxy22);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory37 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient11.setSSLSocketFactory(sSLSocketFactory37);
        com.squareup.okhttp.OkAuthenticator okAuthenticator39 = okHttpClient38.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier40 = okHttpClient38.getHostnameVerifier();
        javax.net.ssl.HostnameVerifier hostnameVerifier41 = okHttpClient38.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient38.copyWithDefaults();
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(proxySelector12);
        org.junit.Assert.assertNull(hostnameVerifier13);
        org.junit.Assert.assertNull(hostnameVerifier14);
        org.junit.Assert.assertNotNull(connectionPool16);
        org.junit.Assert.assertNotNull(proxy22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(okResponseCache26);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNull(okAuthenticator39);
        org.junit.Assert.assertNull(hostnameVerifier40);
        org.junit.Assert.assertNull(hostnameVerifier41);
        org.junit.Assert.assertNotNull(okHttpClient42);
    }

    @Test
    public void test12025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12025");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache1 = okHttpClient0.okResponseCache();
        java.net.ResponseCache responseCache2 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.setResponseCache(responseCache2);
        java.net.ProxySelector proxySelector4 = okHttpClient0.getProxySelector();
        com.squareup.okhttp.OkAuthenticator okAuthenticator5 = okHttpClient0.getAuthenticator();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory6 = okHttpClient0.sslSocketFactory;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient0.copyWithDefaults();
        java.net.Proxy proxy8 = okHttpClient0.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient9 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool10 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient9.connectionPool = connectionPool10;
        com.squareup.okhttp.OkAuthenticator okAuthenticator12 = null;
        okHttpClient9.authenticator = okAuthenticator12;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient9.copyWithDefaults();
        java.net.ResponseCache responseCache15 = okHttpClient9.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator16 = okHttpClient9.getAuthenticator();
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = null;
        okHttpClient17.hostnameVerifier = hostnameVerifier18;
        java.net.ResponseCache responseCache20 = null;
        okHttpClient17.responseCache = responseCache20;
        javax.net.ssl.HostnameVerifier hostnameVerifier22 = okHttpClient17.hostnameVerifier;
        java.net.Proxy proxy23 = okHttpClient17.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool26 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient17.connectionPool = connectionPool26;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient17.copyWithDefaults();
        java.net.Proxy proxy29 = okHttpClient28.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient30 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier31 = null;
        okHttpClient30.hostnameVerifier = hostnameVerifier31;
        java.net.ResponseCache responseCache33 = null;
        okHttpClient30.responseCache = responseCache33;
        javax.net.ssl.HostnameVerifier hostnameVerifier35 = okHttpClient30.hostnameVerifier;
        java.net.Proxy proxy36 = okHttpClient30.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool39 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient30.connectionPool = connectionPool39;
        com.squareup.okhttp.OkHttpClient okHttpClient41 = okHttpClient30.copyWithDefaults();
        java.net.ResponseCache responseCache42 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient43 = okHttpClient41.setResponseCache(responseCache42);
        okHttpClient43.followProtocolRedirects = true;
        java.util.List<java.lang.String> strList46 = okHttpClient43.getTransports();
        okHttpClient28.transports = strList46;
        com.squareup.okhttp.ConnectionPool connectionPool50 = new com.squareup.okhttp.ConnectionPool((int) (byte) 0, (long) (byte) 100);
        okHttpClient28.connectionPool = connectionPool50;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory52 = okHttpClient28.sslSocketFactory;
        java.net.Socket socket53 = sSLSocketFactory52.createSocket();
        com.squareup.okhttp.OkHttpClient okHttpClient54 = okHttpClient9.setSSLSocketFactory(sSLSocketFactory52);
        java.net.Proxy proxy55 = null;
        okHttpClient9.proxy = proxy55;
        com.squareup.okhttp.OkHttpClient okHttpClient57 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier58 = null;
        okHttpClient57.hostnameVerifier = hostnameVerifier58;
        java.net.ResponseCache responseCache60 = null;
        okHttpClient57.responseCache = responseCache60;
        java.util.List<java.lang.String> strList62 = okHttpClient57.transports;
        java.net.Proxy proxy63 = java.net.Proxy.NO_PROXY;
        boolean boolean65 = proxy63.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type66 = proxy63.type();
        java.net.SocketAddress socketAddress67 = proxy63.address();
        com.squareup.okhttp.OkHttpClient okHttpClient68 = okHttpClient57.setProxy(proxy63);
        javax.net.ssl.HostnameVerifier hostnameVerifier69 = okHttpClient68.hostnameVerifier;
        java.net.Proxy proxy70 = java.net.Proxy.NO_PROXY;
        boolean boolean72 = proxy70.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type73 = proxy70.type();
        java.lang.String str74 = proxy70.toString();
        com.squareup.okhttp.OkHttpClient okHttpClient75 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier76 = null;
        okHttpClient75.hostnameVerifier = hostnameVerifier76;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory78 = okHttpClient75.getSslSocketFactory();
        boolean boolean79 = proxy70.equals((java.lang.Object) okHttpClient75);
        java.lang.String str80 = proxy70.toString();
        java.net.Proxy.Type type81 = proxy70.type();
        com.squareup.okhttp.OkHttpClient okHttpClient82 = okHttpClient68.setProxy(proxy70);
        com.squareup.okhttp.OkHttpClient okHttpClient83 = okHttpClient9.setProxy(proxy70);
        com.squareup.okhttp.OkHttpClient okHttpClient84 = okHttpClient0.setProxy(proxy70);
        java.net.SocketAddress socketAddress85 = proxy70.address();
        org.junit.Assert.assertNull(okResponseCache1);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertNull(proxySelector4);
        org.junit.Assert.assertNull(okAuthenticator5);
        org.junit.Assert.assertNull(sSLSocketFactory6);
        org.junit.Assert.assertNotNull(okHttpClient7);
        org.junit.Assert.assertNull(proxy8);
        org.junit.Assert.assertNotNull(connectionPool10);
        org.junit.Assert.assertNotNull(okHttpClient14);
        org.junit.Assert.assertNull(responseCache15);
        org.junit.Assert.assertNull(okAuthenticator16);
        org.junit.Assert.assertNull(hostnameVerifier22);
        org.junit.Assert.assertNull(proxy23);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNull(proxy29);
        org.junit.Assert.assertNull(hostnameVerifier35);
        org.junit.Assert.assertNull(proxy36);
        org.junit.Assert.assertNotNull(okHttpClient41);
        org.junit.Assert.assertNotNull(okHttpClient43);
        org.junit.Assert.assertNotNull(strList46);
        org.junit.Assert.assertNotNull(sSLSocketFactory52);
        org.junit.Assert.assertNotNull(socket53);
        org.junit.Assert.assertEquals(socket53.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(okHttpClient54);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertNotNull(proxy63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + type66 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type66.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress67);
        org.junit.Assert.assertNotNull(okHttpClient68);
        org.junit.Assert.assertNull(hostnameVerifier69);
        org.junit.Assert.assertNotNull(proxy70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + type73 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type73.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "DIRECT" + "'", str74, "DIRECT");
        org.junit.Assert.assertNull(sSLSocketFactory78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "DIRECT" + "'", str80, "DIRECT");
        org.junit.Assert.assertTrue("'" + type81 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type81.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNotNull(okHttpClient82);
        org.junit.Assert.assertNotNull(okHttpClient83);
        org.junit.Assert.assertNotNull(okHttpClient84);
        org.junit.Assert.assertNull(socketAddress85);
    }

    @Test
    public void test12026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12026");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache1 = okHttpClient0.okResponseCache();
        java.net.ResponseCache responseCache2 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.setResponseCache(responseCache2);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        okHttpClient0.transports = strList6;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory9);
        java.net.CookieHandler cookieHandler11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient0.setCookieHandler(cookieHandler11);
        com.squareup.okhttp.OkAuthenticator okAuthenticator13 = okHttpClient0.getAuthenticator();
        java.net.ResponseCache responseCache14 = okHttpClient0.responseCache;
        java.net.ProxySelector proxySelector15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient0.setProxySelector(proxySelector15);
        java.net.Proxy proxy17 = okHttpClient16.proxy;
        org.junit.Assert.assertNull(okResponseCache1);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertNull(okAuthenticator13);
        org.junit.Assert.assertNull(responseCache14);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNull(proxy17);
    }

    @Test
    public void test12027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12027");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        com.squareup.okhttp.ConnectionPool connectionPool8 = okHttpClient0.connectionPool;
        boolean boolean9 = okHttpClient0.getFollowProtocolRedirects();
        java.net.ResponseCache responseCache10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setResponseCache(responseCache10);
        com.squareup.okhttp.OkAuthenticator okAuthenticator12 = okHttpClient11.getAuthenticator();
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient(okHttpClient11);
        com.squareup.okhttp.OkHttpClient okHttpClient14 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier15 = null;
        okHttpClient14.hostnameVerifier = hostnameVerifier15;
        java.net.ProxySelector proxySelector17 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient14.setProxySelector(proxySelector17);
        java.net.CookieHandler cookieHandler19 = okHttpClient14.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient20 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier21 = null;
        okHttpClient20.hostnameVerifier = hostnameVerifier21;
        java.net.ResponseCache responseCache23 = null;
        okHttpClient20.responseCache = responseCache23;
        java.util.List<java.lang.String> strList25 = okHttpClient20.transports;
        com.squareup.okhttp.ConnectionPool connectionPool26 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient20.connectionPool = connectionPool26;
        java.net.Proxy proxy28 = null;
        okHttpClient20.proxy = proxy28;
        java.util.Set<com.squareup.okhttp.Route> routeSet30 = okHttpClient20.failedRoutes;
        okHttpClient14.failedRoutes = routeSet30;
        java.net.ProxySelector proxySelector32 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient14.setProxySelector(proxySelector32);
        com.squareup.okhttp.ConnectionPool connectionPool36 = new com.squareup.okhttp.ConnectionPool((int) (short) 10, (long) '4');
        okHttpClient14.connectionPool = connectionPool36;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory38 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient14.setSSLSocketFactory(sSLSocketFactory38);
        java.util.List<java.lang.String> strList40 = okHttpClient14.transports;
        java.net.ResponseCache responseCache41 = okHttpClient14.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet42 = okHttpClient14.failedRoutes;
        okHttpClient13.failedRoutes = routeSet42;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory44 = okHttpClient13.sslSocketFactory;
        com.squareup.okhttp.OkHttpClient okHttpClient45 = okHttpClient13.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient47 = okHttpClient13.setFollowProtocolRedirects(true);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNotNull(connectionPool8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(okAuthenticator12);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNull(cookieHandler19);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNotNull(connectionPool26);
        org.junit.Assert.assertNotNull(routeSet30);
        org.junit.Assert.assertNotNull(okHttpClient33);
        org.junit.Assert.assertNotNull(okHttpClient39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(responseCache41);
        org.junit.Assert.assertNotNull(routeSet42);
        org.junit.Assert.assertNull(sSLSocketFactory44);
        org.junit.Assert.assertNotNull(okHttpClient45);
        org.junit.Assert.assertNotNull(okHttpClient47);
    }

    @Test
    public void test12028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12028");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.ConnectionPool connectionPool12 = okHttpClient11.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator13 = okHttpClient11.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool16 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient11.connectionPool = connectionPool16;
        java.net.Proxy proxy18 = okHttpClient11.proxy;
        com.squareup.okhttp.ConnectionPool connectionPool19 = okHttpClient11.getConnectionPool();
        com.squareup.okhttp.Address address20 = null;
        com.squareup.okhttp.Connection connection21 = connectionPool19.get(address20);
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNull(okAuthenticator13);
        org.junit.Assert.assertNull(proxy18);
        org.junit.Assert.assertNotNull(connectionPool19);
        org.junit.Assert.assertNull(connection21);
    }

    @Test
    public void test12029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12029");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.ConnectionPool connectionPool14 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        okHttpClient0.connectionPool = connectionPool14;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory16 = okHttpClient0.getSslSocketFactory();
        java.net.CookieHandler cookieHandler17 = null;
        okHttpClient0.cookieHandler = cookieHandler17;
        java.net.ProxySelector proxySelector19 = okHttpClient0.proxySelector;
        java.net.CookieHandler cookieHandler20 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient21 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier22 = null;
        okHttpClient21.hostnameVerifier = hostnameVerifier22;
        java.net.ResponseCache responseCache24 = null;
        okHttpClient21.responseCache = responseCache24;
        java.util.List<java.lang.String> strList26 = okHttpClient21.transports;
        com.squareup.okhttp.ConnectionPool connectionPool27 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient21.connectionPool = connectionPool27;
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient21.copyWithDefaults();
        java.net.ProxySelector proxySelector30 = okHttpClient29.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier31 = okHttpClient29.getHostnameVerifier();
        okHttpClient0.hostnameVerifier = hostnameVerifier31;
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(sSLSocketFactory16);
        org.junit.Assert.assertNull(proxySelector19);
        org.junit.Assert.assertNull(cookieHandler20);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNotNull(connectionPool27);
        org.junit.Assert.assertNotNull(okHttpClient29);
// flaky:         org.junit.Assert.assertNull(proxySelector30);
        org.junit.Assert.assertNotNull(hostnameVerifier31);
    }

    @Test
    public void test12030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12030");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        okHttpClient0.authenticator = okAuthenticator3;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient5.copyWithDefaults();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory7 = okHttpClient5.sslSocketFactory;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket10 = sSLSocketFactory7.createSocket("", (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.net.ConnectException; message: Connection refused (Connection refused)");
        } catch (java.net.ConnectException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNotNull(okHttpClient6);
        org.junit.Assert.assertNotNull(sSLSocketFactory7);
    }

    @Test
    public void test12031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12031");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache1 = okHttpClient0.okResponseCache();
        java.net.ResponseCache responseCache2 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.setResponseCache(responseCache2);
        java.net.ProxySelector proxySelector4 = okHttpClient0.getProxySelector();
        boolean boolean5 = okHttpClient0.getFollowProtocolRedirects();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory6 = okHttpClient0.getSslSocketFactory();
        java.net.ResponseCache responseCache7 = okHttpClient0.getResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient8.connectionPool = connectionPool9;
        java.net.ResponseCache responseCache11 = null;
        okHttpClient8.responseCache = responseCache11;
        com.squareup.okhttp.OkAuthenticator okAuthenticator13 = null;
        okHttpClient8.authenticator = okAuthenticator13;
        okHttpClient8.followProtocolRedirects = false;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool18 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient17.connectionPool = connectionPool18;
        com.squareup.okhttp.OkAuthenticator okAuthenticator20 = null;
        okHttpClient17.authenticator = okAuthenticator20;
        java.util.List<java.lang.String> strList22 = okHttpClient17.transports;
        com.squareup.okhttp.OkHttpClient okHttpClient23 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier24 = null;
        okHttpClient23.hostnameVerifier = hostnameVerifier24;
        java.net.ResponseCache responseCache26 = null;
        okHttpClient23.responseCache = responseCache26;
        java.util.List<java.lang.String> strList28 = okHttpClient23.transports;
        com.squareup.okhttp.ConnectionPool connectionPool29 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient23.connectionPool = connectionPool29;
        java.net.CookieHandler cookieHandler31 = okHttpClient23.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache32 = okHttpClient23.okResponseCache();
        java.net.CookieHandler cookieHandler33 = okHttpClient23.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient34 = new com.squareup.okhttp.OkHttpClient(okHttpClient23);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory35 = okHttpClient34.sslSocketFactory;
        com.squareup.okhttp.OkAuthenticator okAuthenticator36 = okHttpClient34.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient37 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier38 = null;
        okHttpClient37.hostnameVerifier = hostnameVerifier38;
        java.net.ResponseCache responseCache40 = null;
        okHttpClient37.responseCache = responseCache40;
        java.util.List<java.lang.String> strList42 = okHttpClient37.transports;
        com.squareup.okhttp.ConnectionPool connectionPool43 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient37.connectionPool = connectionPool43;
        java.net.CookieHandler cookieHandler45 = okHttpClient37.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache46 = okHttpClient37.okResponseCache();
        java.net.CookieHandler cookieHandler47 = okHttpClient37.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient48 = new com.squareup.okhttp.OkHttpClient(okHttpClient37);
        com.squareup.okhttp.OkHttpClient okHttpClient49 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier50 = null;
        okHttpClient49.hostnameVerifier = hostnameVerifier50;
        java.net.ProxySelector proxySelector52 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient53 = okHttpClient49.setProxySelector(proxySelector52);
        java.net.CookieHandler cookieHandler54 = okHttpClient49.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient55 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier56 = null;
        okHttpClient55.hostnameVerifier = hostnameVerifier56;
        java.net.ResponseCache responseCache58 = null;
        okHttpClient55.responseCache = responseCache58;
        java.util.List<java.lang.String> strList60 = okHttpClient55.transports;
        com.squareup.okhttp.ConnectionPool connectionPool61 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient55.connectionPool = connectionPool61;
        java.net.Proxy proxy63 = null;
        okHttpClient55.proxy = proxy63;
        java.util.Set<com.squareup.okhttp.Route> routeSet65 = okHttpClient55.failedRoutes;
        okHttpClient49.failedRoutes = routeSet65;
        okHttpClient48.failedRoutes = routeSet65;
        okHttpClient34.failedRoutes = routeSet65;
        okHttpClient17.failedRoutes = routeSet65;
        okHttpClient8.failedRoutes = routeSet65;
        okHttpClient0.failedRoutes = routeSet65;
        com.squareup.okhttp.OkHttpClient okHttpClient72 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        java.net.ProxySelector proxySelector73 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient74 = okHttpClient0.setProxySelector(proxySelector73);
        java.net.CookieHandler cookieHandler75 = okHttpClient0.cookieHandler;
        java.net.ResponseCache responseCache76 = okHttpClient0.getResponseCache();
        org.junit.Assert.assertNull(okResponseCache1);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertNull(proxySelector4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(sSLSocketFactory6);
        org.junit.Assert.assertNull(responseCache7);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(connectionPool18);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNotNull(connectionPool29);
        org.junit.Assert.assertNull(cookieHandler31);
        org.junit.Assert.assertNull(okResponseCache32);
        org.junit.Assert.assertNull(cookieHandler33);
        org.junit.Assert.assertNull(sSLSocketFactory35);
        org.junit.Assert.assertNull(okAuthenticator36);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNotNull(connectionPool43);
        org.junit.Assert.assertNull(cookieHandler45);
        org.junit.Assert.assertNull(okResponseCache46);
        org.junit.Assert.assertNull(cookieHandler47);
        org.junit.Assert.assertNotNull(okHttpClient53);
        org.junit.Assert.assertNull(cookieHandler54);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNotNull(connectionPool61);
        org.junit.Assert.assertNotNull(routeSet65);
        org.junit.Assert.assertNotNull(okHttpClient74);
        org.junit.Assert.assertNull(cookieHandler75);
        org.junit.Assert.assertNull(responseCache76);
    }

    @Test
    public void test12032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12032");
        java.net.Proxy proxy0 = java.net.Proxy.NO_PROXY;
        boolean boolean2 = proxy0.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type3 = proxy0.type();
        java.lang.String str4 = proxy0.toString();
        com.squareup.okhttp.OkHttpClient okHttpClient5 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier6 = null;
        okHttpClient5.hostnameVerifier = hostnameVerifier6;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory8 = okHttpClient5.getSslSocketFactory();
        boolean boolean9 = proxy0.equals((java.lang.Object) okHttpClient5);
        com.squareup.okhttp.OkHttpClient okHttpClient10 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier11 = null;
        okHttpClient10.hostnameVerifier = hostnameVerifier11;
        java.net.ResponseCache responseCache13 = null;
        okHttpClient10.responseCache = responseCache13;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache15 = okHttpClient10.okResponseCache();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient10.setSSLSocketFactory(sSLSocketFactory16);
        java.net.ProxySelector proxySelector18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient10.setProxySelector(proxySelector18);
        boolean boolean20 = proxy0.equals((java.lang.Object) okHttpClient19);
        com.squareup.okhttp.OkHttpClient okHttpClient21 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier22 = null;
        okHttpClient21.hostnameVerifier = hostnameVerifier22;
        java.net.ProxySelector proxySelector24 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient21.setProxySelector(proxySelector24);
        java.net.CookieHandler cookieHandler26 = okHttpClient21.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient27 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier28 = null;
        okHttpClient27.hostnameVerifier = hostnameVerifier28;
        java.net.ResponseCache responseCache30 = null;
        okHttpClient27.responseCache = responseCache30;
        java.util.List<java.lang.String> strList32 = okHttpClient27.transports;
        com.squareup.okhttp.ConnectionPool connectionPool33 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient27.connectionPool = connectionPool33;
        java.net.Proxy proxy35 = null;
        okHttpClient27.proxy = proxy35;
        java.util.Set<com.squareup.okhttp.Route> routeSet37 = okHttpClient27.failedRoutes;
        okHttpClient21.failedRoutes = routeSet37;
        java.net.ProxySelector proxySelector39 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient40 = okHttpClient21.setProxySelector(proxySelector39);
        com.squareup.okhttp.OkHttpClient okHttpClient41 = new com.squareup.okhttp.OkHttpClient(okHttpClient40);
        com.squareup.okhttp.OkHttpClient okHttpClient42 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool43 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient42.connectionPool = connectionPool43;
        com.squareup.okhttp.OkAuthenticator okAuthenticator45 = null;
        okHttpClient42.authenticator = okAuthenticator45;
        java.util.List<java.lang.String> strList47 = okHttpClient42.transports;
        com.squareup.okhttp.OkHttpClient okHttpClient48 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier49 = null;
        okHttpClient48.hostnameVerifier = hostnameVerifier49;
        java.net.ResponseCache responseCache51 = null;
        okHttpClient48.responseCache = responseCache51;
        java.util.List<java.lang.String> strList53 = okHttpClient48.transports;
        com.squareup.okhttp.ConnectionPool connectionPool54 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient48.connectionPool = connectionPool54;
        java.net.CookieHandler cookieHandler56 = okHttpClient48.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache57 = okHttpClient48.okResponseCache();
        java.net.CookieHandler cookieHandler58 = okHttpClient48.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient59 = new com.squareup.okhttp.OkHttpClient(okHttpClient48);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory60 = okHttpClient59.sslSocketFactory;
        com.squareup.okhttp.OkAuthenticator okAuthenticator61 = okHttpClient59.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient62 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier63 = null;
        okHttpClient62.hostnameVerifier = hostnameVerifier63;
        java.net.ResponseCache responseCache65 = null;
        okHttpClient62.responseCache = responseCache65;
        java.util.List<java.lang.String> strList67 = okHttpClient62.transports;
        com.squareup.okhttp.ConnectionPool connectionPool68 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient62.connectionPool = connectionPool68;
        java.net.CookieHandler cookieHandler70 = okHttpClient62.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache71 = okHttpClient62.okResponseCache();
        java.net.CookieHandler cookieHandler72 = okHttpClient62.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient73 = new com.squareup.okhttp.OkHttpClient(okHttpClient62);
        com.squareup.okhttp.OkHttpClient okHttpClient74 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier75 = null;
        okHttpClient74.hostnameVerifier = hostnameVerifier75;
        java.net.ProxySelector proxySelector77 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient78 = okHttpClient74.setProxySelector(proxySelector77);
        java.net.CookieHandler cookieHandler79 = okHttpClient74.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient80 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier81 = null;
        okHttpClient80.hostnameVerifier = hostnameVerifier81;
        java.net.ResponseCache responseCache83 = null;
        okHttpClient80.responseCache = responseCache83;
        java.util.List<java.lang.String> strList85 = okHttpClient80.transports;
        com.squareup.okhttp.ConnectionPool connectionPool86 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient80.connectionPool = connectionPool86;
        java.net.Proxy proxy88 = null;
        okHttpClient80.proxy = proxy88;
        java.util.Set<com.squareup.okhttp.Route> routeSet90 = okHttpClient80.failedRoutes;
        okHttpClient74.failedRoutes = routeSet90;
        okHttpClient73.failedRoutes = routeSet90;
        okHttpClient59.failedRoutes = routeSet90;
        okHttpClient42.failedRoutes = routeSet90;
        okHttpClient40.failedRoutes = routeSet90;
        boolean boolean96 = proxy0.equals((java.lang.Object) okHttpClient40);
        java.net.SocketAddress socketAddress97 = proxy0.address();
        java.net.Proxy.Type type98 = proxy0.type();
        org.junit.Assert.assertNotNull(proxy0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + type3 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type3.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "DIRECT" + "'", str4, "DIRECT");
        org.junit.Assert.assertNull(sSLSocketFactory8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(okResponseCache15);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(okHttpClient25);
        org.junit.Assert.assertNull(cookieHandler26);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNotNull(connectionPool33);
        org.junit.Assert.assertNotNull(routeSet37);
        org.junit.Assert.assertNotNull(okHttpClient40);
        org.junit.Assert.assertNotNull(connectionPool43);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNotNull(connectionPool54);
        org.junit.Assert.assertNull(cookieHandler56);
        org.junit.Assert.assertNull(okResponseCache57);
        org.junit.Assert.assertNull(cookieHandler58);
        org.junit.Assert.assertNull(sSLSocketFactory60);
        org.junit.Assert.assertNull(okAuthenticator61);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNotNull(connectionPool68);
        org.junit.Assert.assertNull(cookieHandler70);
        org.junit.Assert.assertNull(okResponseCache71);
        org.junit.Assert.assertNull(cookieHandler72);
        org.junit.Assert.assertNotNull(okHttpClient78);
        org.junit.Assert.assertNull(cookieHandler79);
        org.junit.Assert.assertNull(strList85);
        org.junit.Assert.assertNotNull(connectionPool86);
        org.junit.Assert.assertNotNull(routeSet90);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertNull(socketAddress97);
        org.junit.Assert.assertTrue("'" + type98 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type98.equals(java.net.Proxy.Type.DIRECT));
    }

    @Test
    public void test12033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12033");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.Proxy proxy8 = null;
        okHttpClient0.proxy = proxy8;
        boolean boolean10 = okHttpClient0.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient0.setFollowProtocolRedirects(true);
        java.net.ProxySelector proxySelector13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient12.setProxySelector(proxySelector13);
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier16 = null;
        okHttpClient15.hostnameVerifier = hostnameVerifier16;
        java.net.ProxySelector proxySelector18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient15.setProxySelector(proxySelector18);
        com.squareup.okhttp.OkHttpClient okHttpClient20 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool21 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient20.connectionPool = connectionPool21;
        com.squareup.okhttp.OkAuthenticator okAuthenticator23 = null;
        okHttpClient20.authenticator = okAuthenticator23;
        java.net.CookieHandler cookieHandler25 = null;
        okHttpClient20.cookieHandler = cookieHandler25;
        java.net.Proxy proxy27 = java.net.Proxy.NO_PROXY;
        boolean boolean29 = proxy27.equals((java.lang.Object) 1L);
        com.squareup.okhttp.OkHttpClient okHttpClient30 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache31 = okHttpClient30.okResponseCache();
        java.net.ResponseCache responseCache32 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient30.setResponseCache(responseCache32);
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        okHttpClient30.transports = strList36;
        boolean boolean39 = proxy27.equals((java.lang.Object) strList36);
        com.squareup.okhttp.OkHttpClient okHttpClient40 = okHttpClient20.setProxy(proxy27);
        com.squareup.okhttp.OkHttpClient okHttpClient41 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier42 = null;
        okHttpClient41.hostnameVerifier = hostnameVerifier42;
        java.net.ProxySelector proxySelector44 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient45 = okHttpClient41.setProxySelector(proxySelector44);
        java.net.CookieHandler cookieHandler46 = okHttpClient41.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient47 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier48 = null;
        okHttpClient47.hostnameVerifier = hostnameVerifier48;
        java.net.ResponseCache responseCache50 = null;
        okHttpClient47.responseCache = responseCache50;
        java.util.List<java.lang.String> strList52 = okHttpClient47.transports;
        com.squareup.okhttp.ConnectionPool connectionPool53 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient47.connectionPool = connectionPool53;
        java.net.Proxy proxy55 = null;
        okHttpClient47.proxy = proxy55;
        java.util.Set<com.squareup.okhttp.Route> routeSet57 = okHttpClient47.failedRoutes;
        okHttpClient41.failedRoutes = routeSet57;
        javax.net.ssl.HostnameVerifier hostnameVerifier59 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient60 = okHttpClient41.setHostnameVerifier(hostnameVerifier59);
        boolean boolean61 = proxy27.equals((java.lang.Object) okHttpClient60);
        java.net.SocketAddress socketAddress62 = proxy27.address();
        com.squareup.okhttp.OkHttpClient okHttpClient63 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier64 = null;
        okHttpClient63.hostnameVerifier = hostnameVerifier64;
        java.net.ResponseCache responseCache66 = null;
        okHttpClient63.responseCache = responseCache66;
        java.util.List<java.lang.String> strList68 = okHttpClient63.transports;
        com.squareup.okhttp.ConnectionPool connectionPool69 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient63.connectionPool = connectionPool69;
        java.net.Proxy proxy71 = null;
        okHttpClient63.proxy = proxy71;
        boolean boolean73 = okHttpClient63.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient74 = new com.squareup.okhttp.OkHttpClient(okHttpClient63);
        java.util.Set<com.squareup.okhttp.Route> routeSet75 = okHttpClient63.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient76 = new com.squareup.okhttp.OkHttpClient(okHttpClient63);
        boolean boolean77 = proxy27.equals((java.lang.Object) okHttpClient76);
        java.lang.String str78 = proxy27.toString();
        java.net.SocketAddress socketAddress79 = proxy27.address();
        okHttpClient15.proxy = proxy27;
        com.squareup.okhttp.OkHttpClient okHttpClient81 = okHttpClient14.setProxy(proxy27);
        java.net.URL uRL82 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.HttpURLConnection httpURLConnection83 = okHttpClient14.open(uRL82);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertNotNull(okHttpClient14);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNotNull(connectionPool21);
        org.junit.Assert.assertNotNull(proxy27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(okResponseCache31);
        org.junit.Assert.assertNotNull(okHttpClient33);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(okHttpClient40);
        org.junit.Assert.assertNotNull(okHttpClient45);
        org.junit.Assert.assertNull(cookieHandler46);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNotNull(connectionPool53);
        org.junit.Assert.assertNotNull(routeSet57);
        org.junit.Assert.assertNotNull(okHttpClient60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(socketAddress62);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNotNull(connectionPool69);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(routeSet75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "DIRECT" + "'", str78, "DIRECT");
        org.junit.Assert.assertNull(socketAddress79);
        org.junit.Assert.assertNotNull(okHttpClient81);
    }

    @Test
    public void test12034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12034");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        java.util.List<java.lang.String> strList6 = okHttpClient0.getTransports();
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier9 = null;
        okHttpClient8.hostnameVerifier = hostnameVerifier9;
        java.net.ProxySelector proxySelector11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient8.setProxySelector(proxySelector11);
        java.net.CookieHandler cookieHandler13 = okHttpClient8.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient14 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier15 = null;
        okHttpClient14.hostnameVerifier = hostnameVerifier15;
        java.net.ResponseCache responseCache17 = null;
        okHttpClient14.responseCache = responseCache17;
        java.util.List<java.lang.String> strList19 = okHttpClient14.transports;
        com.squareup.okhttp.ConnectionPool connectionPool20 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient14.connectionPool = connectionPool20;
        java.net.Proxy proxy22 = null;
        okHttpClient14.proxy = proxy22;
        java.util.Set<com.squareup.okhttp.Route> routeSet24 = okHttpClient14.failedRoutes;
        okHttpClient8.failedRoutes = routeSet24;
        javax.net.ssl.HostnameVerifier hostnameVerifier26 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient8.setHostnameVerifier(hostnameVerifier26);
        java.net.Proxy proxy28 = okHttpClient27.proxy;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory29 = okHttpClient27.sslSocketFactory;
        com.squareup.okhttp.OkHttpClient okHttpClient30 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier31 = null;
        okHttpClient30.hostnameVerifier = hostnameVerifier31;
        java.net.ResponseCache responseCache33 = null;
        okHttpClient30.responseCache = responseCache33;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache35 = okHttpClient30.okResponseCache();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory36 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient30.setSSLSocketFactory(sSLSocketFactory36);
        java.net.ProxySelector proxySelector38 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient30.setProxySelector(proxySelector38);
        com.squareup.okhttp.OkHttpClient okHttpClient40 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool41 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient40.connectionPool = connectionPool41;
        com.squareup.okhttp.OkHttpClient okHttpClient43 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier44 = null;
        okHttpClient43.hostnameVerifier = hostnameVerifier44;
        java.net.ResponseCache responseCache46 = null;
        okHttpClient43.responseCache = responseCache46;
        java.util.List<java.lang.String> strList48 = okHttpClient43.transports;
        com.squareup.okhttp.ConnectionPool connectionPool49 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient43.connectionPool = connectionPool49;
        com.squareup.okhttp.OkHttpClient okHttpClient51 = okHttpClient40.setConnectionPool(connectionPool49);
        com.squareup.okhttp.ConnectionPool connectionPool52 = okHttpClient51.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator53 = okHttpClient51.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool56 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient51.connectionPool = connectionPool56;
        java.net.ResponseCache responseCache58 = okHttpClient51.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory59 = okHttpClient51.sslSocketFactory;
        java.net.Proxy proxy60 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress61 = proxy60.address();
        com.squareup.okhttp.OkHttpClient okHttpClient62 = okHttpClient51.setProxy(proxy60);
        com.squareup.okhttp.OkHttpClient okHttpClient63 = new com.squareup.okhttp.OkHttpClient(okHttpClient62);
        com.squareup.okhttp.OkHttpClient okHttpClient64 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier65 = null;
        okHttpClient64.hostnameVerifier = hostnameVerifier65;
        boolean boolean67 = okHttpClient64.getFollowProtocolRedirects();
        java.net.CookieHandler cookieHandler68 = okHttpClient64.cookieHandler;
        com.squareup.okhttp.OkHttpClient okHttpClient69 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier70 = null;
        okHttpClient69.hostnameVerifier = hostnameVerifier70;
        java.net.ResponseCache responseCache72 = null;
        okHttpClient69.responseCache = responseCache72;
        javax.net.ssl.HostnameVerifier hostnameVerifier74 = okHttpClient69.hostnameVerifier;
        java.net.Proxy proxy75 = okHttpClient69.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool78 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient69.connectionPool = connectionPool78;
        com.squareup.okhttp.OkHttpClient okHttpClient80 = okHttpClient69.copyWithDefaults();
        java.net.ResponseCache responseCache81 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient82 = okHttpClient80.setResponseCache(responseCache81);
        com.squareup.okhttp.OkAuthenticator okAuthenticator83 = okHttpClient80.authenticator;
        okHttpClient64.authenticator = okAuthenticator83;
        okHttpClient63.authenticator = okAuthenticator83;
        okHttpClient39.authenticator = okAuthenticator83;
        okHttpClient27.authenticator = okAuthenticator83;
        com.squareup.okhttp.OkHttpClient okHttpClient88 = okHttpClient0.setAuthenticator(okAuthenticator83);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory89 = okHttpClient88.sslSocketFactory;
        java.net.ResponseCache responseCache90 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient91 = okHttpClient88.setResponseCache(responseCache90);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(okHttpClient7);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertNull(cookieHandler13);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNotNull(connectionPool20);
        org.junit.Assert.assertNotNull(routeSet24);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNull(proxy28);
        org.junit.Assert.assertNull(sSLSocketFactory29);
        org.junit.Assert.assertNull(okResponseCache35);
        org.junit.Assert.assertNotNull(okHttpClient37);
        org.junit.Assert.assertNotNull(okHttpClient39);
        org.junit.Assert.assertNotNull(connectionPool41);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNotNull(connectionPool49);
        org.junit.Assert.assertNotNull(okHttpClient51);
        org.junit.Assert.assertNotNull(connectionPool52);
        org.junit.Assert.assertNull(okAuthenticator53);
        org.junit.Assert.assertNull(responseCache58);
        org.junit.Assert.assertNull(sSLSocketFactory59);
        org.junit.Assert.assertNotNull(proxy60);
        org.junit.Assert.assertNull(socketAddress61);
        org.junit.Assert.assertNotNull(okHttpClient62);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNull(cookieHandler68);
        org.junit.Assert.assertNull(hostnameVerifier74);
        org.junit.Assert.assertNull(proxy75);
        org.junit.Assert.assertNotNull(okHttpClient80);
        org.junit.Assert.assertNotNull(okHttpClient82);
        org.junit.Assert.assertNotNull(okAuthenticator83);
        org.junit.Assert.assertNotNull(okHttpClient88);
        org.junit.Assert.assertNull(sSLSocketFactory89);
        org.junit.Assert.assertNotNull(okHttpClient91);
    }

    @Test
    public void test12035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12035");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        java.net.CookieHandler cookieHandler7 = null;
        okHttpClient0.cookieHandler = cookieHandler7;
        okHttpClient0.followProtocolRedirects = true;
        java.net.CookieHandler cookieHandler11 = okHttpClient0.getCookieHandler();
        java.net.Proxy proxy12 = okHttpClient0.proxy;
        java.net.ProxySelector proxySelector13 = okHttpClient0.getProxySelector();
        java.net.CookieHandler cookieHandler14 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier16 = null;
        okHttpClient15.hostnameVerifier = hostnameVerifier16;
        java.net.ResponseCache responseCache18 = null;
        okHttpClient15.responseCache = responseCache18;
        java.util.List<java.lang.String> strList20 = okHttpClient15.transports;
        com.squareup.okhttp.ConnectionPool connectionPool21 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient15.connectionPool = connectionPool21;
        java.net.CookieHandler cookieHandler23 = okHttpClient15.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache24 = okHttpClient15.okResponseCache();
        java.net.CookieHandler cookieHandler25 = okHttpClient15.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient26 = new com.squareup.okhttp.OkHttpClient(okHttpClient15);
        java.net.Proxy proxy27 = java.net.Proxy.NO_PROXY;
        boolean boolean29 = proxy27.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type30 = proxy27.type();
        java.net.SocketAddress socketAddress31 = proxy27.address();
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient15.setProxy(proxy27);
        java.lang.String[] strArray34 = new java.lang.String[] { "DIRECT" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        okHttpClient15.transports = strList35;
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient15.setFollowProtocolRedirects(false);
        com.squareup.okhttp.ConnectionPool connectionPool42 = new com.squareup.okhttp.ConnectionPool((int) '#', (long) (short) 100);
        com.squareup.okhttp.OkHttpClient okHttpClient43 = okHttpClient39.setConnectionPool(connectionPool42);
        java.net.CookieHandler cookieHandler44 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient45 = okHttpClient43.setCookieHandler(cookieHandler44);
        java.net.ResponseCache responseCache46 = okHttpClient45.responseCache;
        java.net.Proxy proxy47 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress48 = proxy47.address();
        com.squareup.okhttp.OkHttpClient okHttpClient49 = okHttpClient45.setProxy(proxy47);
        java.util.List<java.lang.String> strList50 = okHttpClient49.transports;
        java.util.List<java.lang.String> strList51 = okHttpClient49.getTransports();
        java.util.Set<com.squareup.okhttp.Route> routeSet52 = okHttpClient49.failedRoutes;
        okHttpClient0.failedRoutes = routeSet52;
        java.net.ProxySelector proxySelector54 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient55 = okHttpClient0.setProxySelector(proxySelector54);
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNull(cookieHandler11);
        org.junit.Assert.assertNull(proxy12);
        org.junit.Assert.assertNull(proxySelector13);
        org.junit.Assert.assertNull(cookieHandler14);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(connectionPool21);
        org.junit.Assert.assertNull(cookieHandler23);
        org.junit.Assert.assertNull(okResponseCache24);
        org.junit.Assert.assertNull(cookieHandler25);
        org.junit.Assert.assertNotNull(proxy27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + type30 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type30.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress31);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(okHttpClient39);
        org.junit.Assert.assertNotNull(okHttpClient43);
        org.junit.Assert.assertNotNull(okHttpClient45);
        org.junit.Assert.assertNull(responseCache46);
        org.junit.Assert.assertNotNull(proxy47);
        org.junit.Assert.assertNull(socketAddress48);
        org.junit.Assert.assertNotNull(okHttpClient49);
        org.junit.Assert.assertNotNull(strList50);
        org.junit.Assert.assertNotNull(strList51);
        org.junit.Assert.assertNotNull(routeSet52);
        org.junit.Assert.assertNotNull(okHttpClient55);
    }

    @Test
    public void test12036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12036");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.ConnectionPool connectionPool12 = okHttpClient11.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator13 = okHttpClient11.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool16 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient11.connectionPool = connectionPool16;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier19 = null;
        okHttpClient18.hostnameVerifier = hostnameVerifier19;
        java.net.ResponseCache responseCache21 = null;
        okHttpClient18.responseCache = responseCache21;
        java.util.List<java.lang.String> strList23 = okHttpClient18.transports;
        com.squareup.okhttp.ConnectionPool connectionPool24 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient18.connectionPool = connectionPool24;
        java.net.CookieHandler cookieHandler26 = okHttpClient18.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache27 = okHttpClient18.okResponseCache();
        java.net.CookieHandler cookieHandler28 = okHttpClient18.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient29 = new com.squareup.okhttp.OkHttpClient(okHttpClient18);
        java.net.Proxy proxy30 = java.net.Proxy.NO_PROXY;
        boolean boolean32 = proxy30.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type33 = proxy30.type();
        java.net.SocketAddress socketAddress34 = proxy30.address();
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient18.setProxy(proxy30);
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient11.setProxy(proxy30);
        java.net.ResponseCache responseCache37 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient36.setResponseCache(responseCache37);
        com.squareup.okhttp.ConnectionPool connectionPool39 = okHttpClient36.connectionPool;
        com.squareup.okhttp.OkHttpClient okHttpClient40 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier41 = null;
        okHttpClient40.hostnameVerifier = hostnameVerifier41;
        java.net.ResponseCache responseCache43 = null;
        okHttpClient40.responseCache = responseCache43;
        java.util.List<java.lang.String> strList45 = okHttpClient40.transports;
        com.squareup.okhttp.ConnectionPool connectionPool46 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient40.connectionPool = connectionPool46;
        com.squareup.okhttp.OkHttpClient okHttpClient48 = okHttpClient40.copyWithDefaults();
        boolean boolean49 = okHttpClient48.getFollowProtocolRedirects();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory50 = okHttpClient48.sslSocketFactory;
        java.lang.String[] strArray51 = sSLSocketFactory50.getSupportedCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient52 = okHttpClient36.setSSLSocketFactory(sSLSocketFactory50);
        javax.net.ssl.HostnameVerifier hostnameVerifier53 = okHttpClient52.hostnameVerifier;
        java.net.CookieHandler cookieHandler54 = okHttpClient52.cookieHandler;
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNull(okAuthenticator13);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNotNull(connectionPool24);
        org.junit.Assert.assertNull(cookieHandler26);
        org.junit.Assert.assertNull(okResponseCache27);
        org.junit.Assert.assertNull(cookieHandler28);
        org.junit.Assert.assertNotNull(proxy30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + type33 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type33.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress34);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNotNull(connectionPool39);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNotNull(connectionPool46);
        org.junit.Assert.assertNotNull(okHttpClient48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(sSLSocketFactory50);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(okHttpClient52);
        org.junit.Assert.assertNull(hostnameVerifier53);
        org.junit.Assert.assertNull(cookieHandler54);
    }

    @Test
    public void test12037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12037");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.CookieHandler cookieHandler5 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = null;
        okHttpClient6.hostnameVerifier = hostnameVerifier7;
        java.net.ResponseCache responseCache9 = null;
        okHttpClient6.responseCache = responseCache9;
        java.util.List<java.lang.String> strList11 = okHttpClient6.transports;
        com.squareup.okhttp.ConnectionPool connectionPool12 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient6.connectionPool = connectionPool12;
        java.net.Proxy proxy14 = null;
        okHttpClient6.proxy = proxy14;
        java.util.Set<com.squareup.okhttp.Route> routeSet16 = okHttpClient6.failedRoutes;
        okHttpClient0.failedRoutes = routeSet16;
        java.net.ProxySelector proxySelector18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient0.setProxySelector(proxySelector18);
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient0.copyWithDefaults();
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        okHttpClient20.transports = strList24;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient20.setFollowProtocolRedirects(true);
        com.squareup.okhttp.OkHttpClient okHttpClient29 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = null;
        okHttpClient29.hostnameVerifier = hostnameVerifier30;
        java.net.ProxySelector proxySelector32 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient29.setProxySelector(proxySelector32);
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient33.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool37 = new com.squareup.okhttp.ConnectionPool(10, (long) 10);
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient34.setConnectionPool(connectionPool37);
        java.net.CookieHandler cookieHandler39 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient40 = okHttpClient38.setCookieHandler(cookieHandler39);
        com.squareup.okhttp.OkHttpClient okHttpClient41 = new com.squareup.okhttp.OkHttpClient(okHttpClient38);
        com.squareup.okhttp.OkHttpClient okHttpClient43 = okHttpClient38.setFollowProtocolRedirects(false);
        java.net.ResponseCache responseCache44 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient45 = okHttpClient43.setResponseCache(responseCache44);
        com.squareup.okhttp.OkHttpClient okHttpClient46 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool47 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient46.connectionPool = connectionPool47;
        com.squareup.okhttp.OkHttpClient okHttpClient49 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier50 = null;
        okHttpClient49.hostnameVerifier = hostnameVerifier50;
        java.net.ResponseCache responseCache52 = null;
        okHttpClient49.responseCache = responseCache52;
        java.util.List<java.lang.String> strList54 = okHttpClient49.transports;
        com.squareup.okhttp.ConnectionPool connectionPool55 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient49.connectionPool = connectionPool55;
        com.squareup.okhttp.OkHttpClient okHttpClient57 = okHttpClient46.setConnectionPool(connectionPool55);
        com.squareup.okhttp.ConnectionPool connectionPool58 = okHttpClient57.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator59 = okHttpClient57.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool60 = okHttpClient57.getConnectionPool();
        java.net.ProxySelector proxySelector61 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient62 = okHttpClient57.setProxySelector(proxySelector61);
        com.squareup.okhttp.OkHttpClient okHttpClient63 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier64 = null;
        okHttpClient63.hostnameVerifier = hostnameVerifier64;
        java.net.ResponseCache responseCache66 = null;
        okHttpClient63.responseCache = responseCache66;
        javax.net.ssl.HostnameVerifier hostnameVerifier68 = okHttpClient63.hostnameVerifier;
        java.net.Proxy proxy69 = okHttpClient63.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool72 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient63.connectionPool = connectionPool72;
        com.squareup.okhttp.OkHttpClient okHttpClient74 = okHttpClient63.copyWithDefaults();
        java.net.Proxy proxy75 = okHttpClient74.getProxy();
        java.util.Set<com.squareup.okhttp.Route> routeSet76 = okHttpClient74.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient77 = okHttpClient74.copyWithDefaults();
        java.net.CookieHandler cookieHandler78 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient79 = okHttpClient77.setCookieHandler(cookieHandler78);
        java.net.CookieHandler cookieHandler80 = null;
        okHttpClient77.cookieHandler = cookieHandler80;
        java.net.CookieHandler cookieHandler82 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient83 = okHttpClient77.setCookieHandler(cookieHandler82);
        com.squareup.okhttp.OkAuthenticator okAuthenticator84 = okHttpClient77.authenticator;
        okHttpClient62.authenticator = okAuthenticator84;
        com.squareup.okhttp.OkAuthenticator okAuthenticator86 = okHttpClient62.authenticator;
        okHttpClient45.authenticator = okAuthenticator86;
        okHttpClient20.authenticator = okAuthenticator86;
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNotNull(routeSet16);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNotNull(okHttpClient33);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNotNull(okHttpClient40);
        org.junit.Assert.assertNotNull(okHttpClient43);
        org.junit.Assert.assertNotNull(okHttpClient45);
        org.junit.Assert.assertNotNull(connectionPool47);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNotNull(connectionPool55);
        org.junit.Assert.assertNotNull(okHttpClient57);
        org.junit.Assert.assertNotNull(connectionPool58);
        org.junit.Assert.assertNull(okAuthenticator59);
        org.junit.Assert.assertNotNull(connectionPool60);
        org.junit.Assert.assertNotNull(okHttpClient62);
        org.junit.Assert.assertNull(hostnameVerifier68);
        org.junit.Assert.assertNull(proxy69);
        org.junit.Assert.assertNotNull(okHttpClient74);
        org.junit.Assert.assertNull(proxy75);
        org.junit.Assert.assertNotNull(routeSet76);
        org.junit.Assert.assertNotNull(okHttpClient77);
        org.junit.Assert.assertNotNull(okHttpClient79);
        org.junit.Assert.assertNotNull(okHttpClient83);
        org.junit.Assert.assertNotNull(okAuthenticator84);
        org.junit.Assert.assertNotNull(okAuthenticator86);
    }

    @Test
    public void test12038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12038");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.ResponseCache responseCache5 = null;
        okHttpClient4.responseCache = responseCache5;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient4.setSSLSocketFactory(sSLSocketFactory7);
        java.net.ProxySelector proxySelector9 = null;
        okHttpClient4.proxySelector = proxySelector9;
        javax.net.ssl.HostnameVerifier hostnameVerifier11 = okHttpClient4.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient4.copyWithDefaults();
        java.net.ResponseCache responseCache13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient4.setResponseCache(responseCache13);
        java.net.Proxy proxy15 = okHttpClient4.proxy;
        java.net.Proxy proxy16 = okHttpClient4.proxy;
        java.net.ResponseCache responseCache17 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient4.setResponseCache(responseCache17);
        com.squareup.okhttp.ConnectionPool connectionPool19 = okHttpClient18.connectionPool;
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertNull(hostnameVerifier11);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertNotNull(okHttpClient14);
        org.junit.Assert.assertNull(proxy15);
        org.junit.Assert.assertNull(proxy16);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNull(connectionPool19);
    }

    @Test
    public void test12039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12039");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.ResponseCache responseCache5 = null;
        okHttpClient4.responseCache = responseCache5;
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = okHttpClient4.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient4.setFollowProtocolRedirects(false);
        java.net.ResponseCache responseCache10 = okHttpClient9.responseCache;
        com.squareup.okhttp.ConnectionPool connectionPool13 = new com.squareup.okhttp.ConnectionPool(0, (long) (short) 10);
        connectionPool13.evictAll();
        com.squareup.okhttp.Address address15 = null;
        com.squareup.okhttp.Connection connection16 = connectionPool13.get(address15);
        okHttpClient9.connectionPool = connectionPool13;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache18 = okHttpClient9.okResponseCache();
        java.net.CookieHandler cookieHandler19 = null;
        okHttpClient9.cookieHandler = cookieHandler19;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = new com.squareup.okhttp.OkHttpClient(okHttpClient9);
        java.util.List<java.lang.String> strList22 = okHttpClient9.getTransports();
        com.squareup.okhttp.OkHttpClient okHttpClient23 = new com.squareup.okhttp.OkHttpClient(okHttpClient9);
        java.util.List<java.lang.String> strList24 = okHttpClient9.transports;
        java.net.ResponseCache responseCache25 = okHttpClient9.responseCache;
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(hostnameVerifier7);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNull(responseCache10);
        org.junit.Assert.assertNull(connection16);
        org.junit.Assert.assertNull(okResponseCache18);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNull(responseCache25);
    }

    @Test
    public void test12040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12040");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.CookieHandler cookieHandler5 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = null;
        okHttpClient6.hostnameVerifier = hostnameVerifier7;
        java.net.ResponseCache responseCache9 = null;
        okHttpClient6.responseCache = responseCache9;
        java.util.List<java.lang.String> strList11 = okHttpClient6.transports;
        com.squareup.okhttp.ConnectionPool connectionPool12 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient6.connectionPool = connectionPool12;
        java.net.Proxy proxy14 = null;
        okHttpClient6.proxy = proxy14;
        java.util.Set<com.squareup.okhttp.Route> routeSet16 = okHttpClient6.failedRoutes;
        okHttpClient0.failedRoutes = routeSet16;
        java.net.ProxySelector proxySelector18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient0.setProxySelector(proxySelector18);
        com.squareup.okhttp.ConnectionPool connectionPool22 = new com.squareup.okhttp.ConnectionPool((int) (short) 10, (long) '4');
        okHttpClient0.connectionPool = connectionPool22;
        java.net.ResponseCache responseCache24 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient0.setResponseCache(responseCache24);
        com.squareup.okhttp.OkHttpClient okHttpClient26 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool27 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient26.connectionPool = connectionPool27;
        com.squareup.okhttp.OkHttpClient okHttpClient29 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = null;
        okHttpClient29.hostnameVerifier = hostnameVerifier30;
        java.net.ResponseCache responseCache32 = null;
        okHttpClient29.responseCache = responseCache32;
        java.util.List<java.lang.String> strList34 = okHttpClient29.transports;
        com.squareup.okhttp.ConnectionPool connectionPool35 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient29.connectionPool = connectionPool35;
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient26.setConnectionPool(connectionPool35);
        com.squareup.okhttp.ConnectionPool connectionPool38 = okHttpClient37.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator39 = okHttpClient37.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool42 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient37.connectionPool = connectionPool42;
        java.net.ResponseCache responseCache44 = okHttpClient37.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory45 = okHttpClient37.sslSocketFactory;
        java.net.Proxy proxy46 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress47 = proxy46.address();
        com.squareup.okhttp.OkHttpClient okHttpClient48 = okHttpClient37.setProxy(proxy46);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory49 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient37.setSSLSocketFactory(sSLSocketFactory49);
        com.squareup.okhttp.OkHttpClient okHttpClient51 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier52 = null;
        okHttpClient51.hostnameVerifier = hostnameVerifier52;
        java.net.ResponseCache responseCache54 = null;
        okHttpClient51.responseCache = responseCache54;
        javax.net.ssl.HostnameVerifier hostnameVerifier56 = okHttpClient51.hostnameVerifier;
        java.net.Proxy proxy57 = okHttpClient51.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool60 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient51.connectionPool = connectionPool60;
        com.squareup.okhttp.OkHttpClient okHttpClient62 = okHttpClient51.copyWithDefaults();
        java.net.ResponseCache responseCache63 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient64 = okHttpClient62.setResponseCache(responseCache63);
        com.squareup.okhttp.OkAuthenticator okAuthenticator65 = okHttpClient62.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient66 = okHttpClient37.setAuthenticator(okAuthenticator65);
        java.net.Proxy proxy67 = okHttpClient66.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient68 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier69 = null;
        okHttpClient68.hostnameVerifier = hostnameVerifier69;
        java.net.ResponseCache responseCache71 = null;
        okHttpClient68.responseCache = responseCache71;
        java.util.List<java.lang.String> strList73 = okHttpClient68.transports;
        com.squareup.okhttp.ConnectionPool connectionPool74 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient68.connectionPool = connectionPool74;
        java.net.CookieHandler cookieHandler76 = okHttpClient68.cookieHandler;
        java.net.ProxySelector proxySelector77 = null;
        okHttpClient68.proxySelector = proxySelector77;
        java.net.CookieHandler cookieHandler79 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient80 = okHttpClient68.setCookieHandler(cookieHandler79);
        boolean boolean81 = proxy67.equals((java.lang.Object) cookieHandler79);
        com.squareup.okhttp.OkHttpClient okHttpClient82 = okHttpClient0.setProxy(proxy67);
        com.squareup.okhttp.ConnectionPool connectionPool83 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient84 = okHttpClient0.setConnectionPool(connectionPool83);
        java.net.ResponseCache responseCache85 = okHttpClient84.getResponseCache();
        java.net.CookieHandler cookieHandler86 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient87 = okHttpClient84.setCookieHandler(cookieHandler86);
        boolean boolean88 = okHttpClient84.getFollowProtocolRedirects();
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNotNull(routeSet16);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNotNull(okHttpClient25);
        org.junit.Assert.assertNotNull(connectionPool27);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(connectionPool35);
        org.junit.Assert.assertNotNull(okHttpClient37);
        org.junit.Assert.assertNotNull(connectionPool38);
        org.junit.Assert.assertNull(okAuthenticator39);
        org.junit.Assert.assertNull(responseCache44);
        org.junit.Assert.assertNull(sSLSocketFactory45);
        org.junit.Assert.assertNotNull(proxy46);
        org.junit.Assert.assertNull(socketAddress47);
        org.junit.Assert.assertNotNull(okHttpClient48);
        org.junit.Assert.assertNotNull(okHttpClient50);
        org.junit.Assert.assertNull(hostnameVerifier56);
        org.junit.Assert.assertNull(proxy57);
        org.junit.Assert.assertNotNull(okHttpClient62);
        org.junit.Assert.assertNotNull(okHttpClient64);
        org.junit.Assert.assertNotNull(okAuthenticator65);
        org.junit.Assert.assertNotNull(okHttpClient66);
        org.junit.Assert.assertNotNull(proxy67);
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertNotNull(connectionPool74);
        org.junit.Assert.assertNull(cookieHandler76);
        org.junit.Assert.assertNotNull(okHttpClient80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(okHttpClient82);
        org.junit.Assert.assertNotNull(okHttpClient84);
        org.junit.Assert.assertNull(responseCache85);
        org.junit.Assert.assertNotNull(okHttpClient87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
    }

    @Test
    public void test12041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12041");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient0.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.copyWithDefaults();
        java.net.ResponseCache responseCache12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setResponseCache(responseCache12);
        java.net.ProxySelector proxySelector14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient11.setProxySelector(proxySelector14);
        java.util.Set<com.squareup.okhttp.Route> routeSet16 = okHttpClient15.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient(okHttpClient15);
        com.squareup.okhttp.OkAuthenticator okAuthenticator18 = okHttpClient15.authenticator;
        boolean boolean19 = okHttpClient15.getFollowProtocolRedirects();
        boolean boolean20 = okHttpClient15.getFollowProtocolRedirects();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory21 = okHttpClient15.sslSocketFactory;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket24 = sSLSocketFactory21.createSocket("hi!", (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.net.UnknownHostException; message: hi!");
        } catch (java.net.UnknownHostException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNotNull(routeSet16);
        org.junit.Assert.assertNotNull(okAuthenticator18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(sSLSocketFactory21);
    }

    @Test
    public void test12042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12042");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        java.net.Proxy proxy12 = okHttpClient11.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool14 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient13.connectionPool = connectionPool14;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier17 = null;
        okHttpClient16.hostnameVerifier = hostnameVerifier17;
        java.net.ResponseCache responseCache19 = null;
        okHttpClient16.responseCache = responseCache19;
        java.util.List<java.lang.String> strList21 = okHttpClient16.transports;
        com.squareup.okhttp.ConnectionPool connectionPool22 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient16.connectionPool = connectionPool22;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient13.setConnectionPool(connectionPool22);
        com.squareup.okhttp.ConnectionPool connectionPool25 = okHttpClient13.connectionPool;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient11.setConnectionPool(connectionPool25);
        java.net.ProxySelector proxySelector27 = okHttpClient26.proxySelector;
        java.net.URL uRL28 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.HttpURLConnection httpURLConnection29 = okHttpClient26.open(uRL28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(proxy12);
        org.junit.Assert.assertNotNull(connectionPool14);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(connectionPool22);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNotNull(connectionPool25);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNull(proxySelector27);
    }

    @Test
    public void test12043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12043");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.Proxy proxy8 = null;
        okHttpClient0.proxy = proxy8;
        boolean boolean10 = okHttpClient0.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        java.net.Proxy proxy12 = okHttpClient0.proxy;
        boolean boolean13 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient0.setFollowProtocolRedirects(true);
        com.squareup.okhttp.OkHttpClient okHttpClient16 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier17 = null;
        okHttpClient16.hostnameVerifier = hostnameVerifier17;
        java.net.ResponseCache responseCache19 = null;
        okHttpClient16.responseCache = responseCache19;
        javax.net.ssl.HostnameVerifier hostnameVerifier21 = okHttpClient16.hostnameVerifier;
        java.net.Proxy proxy22 = okHttpClient16.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient23 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache24 = okHttpClient23.okResponseCache();
        java.net.ResponseCache responseCache25 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient23.setResponseCache(responseCache25);
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList29 = new java.util.ArrayList<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        okHttpClient23.transports = strList29;
        okHttpClient16.transports = strList29;
        javax.net.ssl.HostnameVerifier hostnameVerifier33 = null;
        okHttpClient16.hostnameVerifier = hostnameVerifier33;
        com.squareup.okhttp.OkHttpClient okHttpClient35 = new com.squareup.okhttp.OkHttpClient(okHttpClient16);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory36 = okHttpClient16.sslSocketFactory;
        java.net.CookieHandler cookieHandler37 = okHttpClient16.cookieHandler;
        java.net.CookieHandler cookieHandler38 = null;
        okHttpClient16.cookieHandler = cookieHandler38;
        com.squareup.okhttp.OkHttpClient okHttpClient40 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool41 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient40.connectionPool = connectionPool41;
        com.squareup.okhttp.OkHttpClient okHttpClient43 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier44 = null;
        okHttpClient43.hostnameVerifier = hostnameVerifier44;
        java.net.ResponseCache responseCache46 = null;
        okHttpClient43.responseCache = responseCache46;
        java.util.List<java.lang.String> strList48 = okHttpClient43.transports;
        com.squareup.okhttp.ConnectionPool connectionPool49 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient43.connectionPool = connectionPool49;
        com.squareup.okhttp.OkHttpClient okHttpClient51 = okHttpClient40.setConnectionPool(connectionPool49);
        com.squareup.okhttp.ConnectionPool connectionPool52 = okHttpClient51.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator53 = okHttpClient51.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool56 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient51.connectionPool = connectionPool56;
        java.net.ResponseCache responseCache58 = okHttpClient51.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory59 = okHttpClient51.sslSocketFactory;
        java.net.Proxy proxy60 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress61 = proxy60.address();
        com.squareup.okhttp.OkHttpClient okHttpClient62 = okHttpClient51.setProxy(proxy60);
        com.squareup.okhttp.OkHttpClient okHttpClient63 = new com.squareup.okhttp.OkHttpClient(okHttpClient62);
        com.squareup.okhttp.OkHttpClient okHttpClient64 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier65 = null;
        okHttpClient64.hostnameVerifier = hostnameVerifier65;
        java.net.ResponseCache responseCache67 = null;
        okHttpClient64.responseCache = responseCache67;
        java.util.List<java.lang.String> strList69 = okHttpClient64.transports;
        com.squareup.okhttp.ConnectionPool connectionPool70 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient64.connectionPool = connectionPool70;
        com.squareup.okhttp.OkHttpClient okHttpClient72 = okHttpClient64.copyWithDefaults();
        java.net.ProxySelector proxySelector73 = okHttpClient72.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory74 = okHttpClient72.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient75 = okHttpClient62.setSSLSocketFactory(sSLSocketFactory74);
        java.lang.String[] strArray76 = sSLSocketFactory74.getSupportedCipherSuites();
        java.lang.String[] strArray77 = sSLSocketFactory74.getSupportedCipherSuites();
        java.lang.String[] strArray78 = sSLSocketFactory74.getSupportedCipherSuites();
        okHttpClient16.sslSocketFactory = sSLSocketFactory74;
        okHttpClient0.sslSocketFactory = sSLSocketFactory74;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory81 = okHttpClient0.sslSocketFactory;
        java.lang.String[] strArray82 = sSLSocketFactory81.getDefaultCipherSuites();
        java.net.Socket socket83 = sSLSocketFactory81.createSocket();
        java.lang.String[] strArray84 = sSLSocketFactory81.getSupportedCipherSuites();
        java.lang.String[] strArray85 = sSLSocketFactory81.getDefaultCipherSuites();
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(proxy12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNull(hostnameVerifier21);
        org.junit.Assert.assertNull(proxy22);
        org.junit.Assert.assertNull(okResponseCache24);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(sSLSocketFactory36);
        org.junit.Assert.assertNull(cookieHandler37);
        org.junit.Assert.assertNotNull(connectionPool41);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNotNull(connectionPool49);
        org.junit.Assert.assertNotNull(okHttpClient51);
        org.junit.Assert.assertNotNull(connectionPool52);
        org.junit.Assert.assertNull(okAuthenticator53);
        org.junit.Assert.assertNull(responseCache58);
        org.junit.Assert.assertNull(sSLSocketFactory59);
        org.junit.Assert.assertNotNull(proxy60);
        org.junit.Assert.assertNull(socketAddress61);
        org.junit.Assert.assertNotNull(okHttpClient62);
        org.junit.Assert.assertNull(strList69);
        org.junit.Assert.assertNotNull(connectionPool70);
        org.junit.Assert.assertNotNull(okHttpClient72);
// flaky:         org.junit.Assert.assertNull(proxySelector73);
        org.junit.Assert.assertNotNull(sSLSocketFactory74);
        org.junit.Assert.assertNotNull(okHttpClient75);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertNotNull(sSLSocketFactory81);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertNotNull(socket83);
        org.junit.Assert.assertEquals(socket83.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertNotNull(strArray85);
    }

    @Test
    public void test12044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12044");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.CookieHandler cookieHandler5 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = null;
        okHttpClient6.hostnameVerifier = hostnameVerifier7;
        java.net.ResponseCache responseCache9 = null;
        okHttpClient6.responseCache = responseCache9;
        java.util.List<java.lang.String> strList11 = okHttpClient6.transports;
        com.squareup.okhttp.ConnectionPool connectionPool12 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient6.connectionPool = connectionPool12;
        java.net.Proxy proxy14 = null;
        okHttpClient6.proxy = proxy14;
        java.util.Set<com.squareup.okhttp.Route> routeSet16 = okHttpClient6.failedRoutes;
        okHttpClient0.failedRoutes = routeSet16;
        java.net.ProxySelector proxySelector18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient0.setProxySelector(proxySelector18);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory20 = null;
        okHttpClient19.sslSocketFactory = sSLSocketFactory20;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient19.copyWithDefaults();
        java.net.CookieHandler cookieHandler23 = okHttpClient22.getCookieHandler();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache24 = okHttpClient22.okResponseCache();
        boolean boolean25 = okHttpClient22.getFollowProtocolRedirects();
        java.util.Set<com.squareup.okhttp.Route> routeSet26 = okHttpClient22.failedRoutes;
        javax.net.ssl.HostnameVerifier hostnameVerifier27 = okHttpClient22.getHostnameVerifier();
        java.util.List<java.lang.String> strList28 = okHttpClient22.transports;
        com.squareup.okhttp.OkHttpClient.DEFAULT_TRANSPORTS = strList28;
        com.squareup.okhttp.OkHttpClient.DEFAULT_TRANSPORTS = strList28;
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNotNull(routeSet16);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNull(cookieHandler23);
        org.junit.Assert.assertNull(okResponseCache24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(routeSet26);
        org.junit.Assert.assertNotNull(hostnameVerifier27);
        org.junit.Assert.assertNotNull(strList28);
    }

    @Test
    public void test12045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12045");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient0.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.copyWithDefaults();
        java.net.ResponseCache responseCache12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setResponseCache(responseCache12);
        java.net.ProxySelector proxySelector14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient11.setProxySelector(proxySelector14);
        java.net.Proxy proxy16 = okHttpClient11.getProxy();
        java.net.ProxySelector proxySelector17 = okHttpClient11.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory18 = okHttpClient11.sslSocketFactory;
        java.net.InetAddress inetAddress19 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket21 = sSLSocketFactory18.createSocket(inetAddress19, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.net.ConnectException; message: Connection refused (Connection refused)");
        } catch (java.net.ConnectException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNull(proxy16);
        org.junit.Assert.assertNull(proxySelector17);
        org.junit.Assert.assertNotNull(sSLSocketFactory18);
    }

    @Test
    public void test12046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12046");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache1 = okHttpClient0.okResponseCache();
        java.net.ResponseCache responseCache2 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.setResponseCache(responseCache2);
        java.util.List<java.lang.String> strList4 = okHttpClient0.getTransports();
        java.net.ProxySelector proxySelector5 = null;
        okHttpClient0.proxySelector = proxySelector5;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient0.setFollowProtocolRedirects(true);
        com.squareup.okhttp.OkAuthenticator okAuthenticator9 = okHttpClient8.getAuthenticator();
        com.squareup.okhttp.OkHttpClient okHttpClient10 = new com.squareup.okhttp.OkHttpClient(okHttpClient8);
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool12 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient11.connectionPool = connectionPool12;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier15 = null;
        okHttpClient14.hostnameVerifier = hostnameVerifier15;
        java.net.ResponseCache responseCache17 = null;
        okHttpClient14.responseCache = responseCache17;
        java.util.List<java.lang.String> strList19 = okHttpClient14.transports;
        com.squareup.okhttp.ConnectionPool connectionPool20 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient14.connectionPool = connectionPool20;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient11.setConnectionPool(connectionPool20);
        com.squareup.okhttp.OkAuthenticator okAuthenticator23 = okHttpClient22.getAuthenticator();
        java.net.ProxySelector proxySelector24 = okHttpClient22.getProxySelector();
        com.squareup.okhttp.OkHttpClient okHttpClient25 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool26 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient25.connectionPool = connectionPool26;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier29 = null;
        okHttpClient28.hostnameVerifier = hostnameVerifier29;
        java.net.ResponseCache responseCache31 = null;
        okHttpClient28.responseCache = responseCache31;
        java.util.List<java.lang.String> strList33 = okHttpClient28.transports;
        com.squareup.okhttp.ConnectionPool connectionPool34 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient28.connectionPool = connectionPool34;
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient25.setConnectionPool(connectionPool34);
        java.net.ResponseCache responseCache37 = okHttpClient25.responseCache;
        java.net.ResponseCache responseCache38 = okHttpClient25.getResponseCache();
        java.net.ResponseCache responseCache39 = okHttpClient25.responseCache;
        com.squareup.okhttp.OkHttpClient okHttpClient40 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache41 = okHttpClient40.okResponseCache();
        java.net.ResponseCache responseCache42 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient43 = okHttpClient40.setResponseCache(responseCache42);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory44 = okHttpClient40.sslSocketFactory;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory45 = okHttpClient40.sslSocketFactory;
        com.squareup.okhttp.OkHttpClient okHttpClient46 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier47 = null;
        okHttpClient46.hostnameVerifier = hostnameVerifier47;
        boolean boolean49 = okHttpClient46.getFollowProtocolRedirects();
        java.net.CookieHandler cookieHandler50 = okHttpClient46.cookieHandler;
        com.squareup.okhttp.OkHttpClient okHttpClient51 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier52 = null;
        okHttpClient51.hostnameVerifier = hostnameVerifier52;
        java.net.ResponseCache responseCache54 = null;
        okHttpClient51.responseCache = responseCache54;
        javax.net.ssl.HostnameVerifier hostnameVerifier56 = okHttpClient51.hostnameVerifier;
        java.net.Proxy proxy57 = okHttpClient51.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool60 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient51.connectionPool = connectionPool60;
        com.squareup.okhttp.OkHttpClient okHttpClient62 = okHttpClient51.copyWithDefaults();
        java.net.ResponseCache responseCache63 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient64 = okHttpClient62.setResponseCache(responseCache63);
        com.squareup.okhttp.OkAuthenticator okAuthenticator65 = okHttpClient62.authenticator;
        okHttpClient46.authenticator = okAuthenticator65;
        com.squareup.okhttp.OkHttpClient okHttpClient67 = okHttpClient40.setAuthenticator(okAuthenticator65);
        com.squareup.okhttp.OkHttpClient okHttpClient68 = okHttpClient25.setAuthenticator(okAuthenticator65);
        okHttpClient22.authenticator = okAuthenticator65;
        com.squareup.okhttp.ConnectionPool connectionPool70 = okHttpClient22.getConnectionPool();
        okHttpClient8.connectionPool = connectionPool70;
        com.squareup.okhttp.OkHttpClient okHttpClient72 = okHttpClient8.copyWithDefaults();
        org.junit.Assert.assertNull(okResponseCache1);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertNull(okAuthenticator9);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNotNull(connectionPool20);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNull(okAuthenticator23);
        org.junit.Assert.assertNull(proxySelector24);
        org.junit.Assert.assertNotNull(connectionPool26);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNotNull(connectionPool34);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNull(responseCache37);
        org.junit.Assert.assertNull(responseCache38);
        org.junit.Assert.assertNull(responseCache39);
        org.junit.Assert.assertNull(okResponseCache41);
        org.junit.Assert.assertNotNull(okHttpClient43);
        org.junit.Assert.assertNull(sSLSocketFactory44);
        org.junit.Assert.assertNull(sSLSocketFactory45);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(cookieHandler50);
        org.junit.Assert.assertNull(hostnameVerifier56);
        org.junit.Assert.assertNull(proxy57);
        org.junit.Assert.assertNotNull(okHttpClient62);
        org.junit.Assert.assertNotNull(okHttpClient64);
        org.junit.Assert.assertNotNull(okAuthenticator65);
        org.junit.Assert.assertNotNull(okHttpClient67);
        org.junit.Assert.assertNotNull(okHttpClient68);
        org.junit.Assert.assertNotNull(connectionPool70);
        org.junit.Assert.assertNotNull(okHttpClient72);
    }

    @Test
    public void test12047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12047");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient0.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.copyWithDefaults();
        java.net.ResponseCache responseCache12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setResponseCache(responseCache12);
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient13.setFollowProtocolRedirects(false);
        java.util.List<java.lang.String> strList16 = okHttpClient13.transports;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient13.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier19 = null;
        okHttpClient18.hostnameVerifier = hostnameVerifier19;
        java.net.ResponseCache responseCache21 = null;
        okHttpClient18.responseCache = responseCache21;
        javax.net.ssl.HostnameVerifier hostnameVerifier23 = okHttpClient18.hostnameVerifier;
        java.net.Proxy proxy24 = okHttpClient18.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool27 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient18.connectionPool = connectionPool27;
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient18.copyWithDefaults();
        java.net.ResponseCache responseCache30 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient29.setResponseCache(responseCache30);
        com.squareup.okhttp.OkHttpClient okHttpClient32 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool33 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient32.connectionPool = connectionPool33;
        java.net.ResponseCache responseCache35 = null;
        okHttpClient32.responseCache = responseCache35;
        java.net.Proxy proxy37 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress38 = proxy37.address();
        java.net.SocketAddress socketAddress39 = proxy37.address();
        okHttpClient32.proxy = proxy37;
        com.squareup.okhttp.ConnectionPool connectionPool43 = new com.squareup.okhttp.ConnectionPool((-1), (long) '#');
        com.squareup.okhttp.Address address44 = null;
        com.squareup.okhttp.Connection connection45 = connectionPool43.get(address44);
        int int46 = connectionPool43.getSpdyConnectionCount();
        connectionPool43.evictAll();
        com.squareup.okhttp.OkHttpClient okHttpClient48 = okHttpClient32.setConnectionPool(connectionPool43);
        com.squareup.okhttp.OkHttpClient okHttpClient49 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier50 = null;
        okHttpClient49.hostnameVerifier = hostnameVerifier50;
        java.net.ProxySelector proxySelector52 = okHttpClient49.proxySelector;
        java.net.ProxySelector proxySelector53 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient54 = okHttpClient49.setProxySelector(proxySelector53);
        com.squareup.okhttp.OkHttpClient okHttpClient55 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier56 = null;
        okHttpClient55.hostnameVerifier = hostnameVerifier56;
        java.net.ResponseCache responseCache58 = null;
        okHttpClient55.responseCache = responseCache58;
        java.util.List<java.lang.String> strList60 = okHttpClient55.transports;
        com.squareup.okhttp.ConnectionPool connectionPool61 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient55.connectionPool = connectionPool61;
        com.squareup.okhttp.OkHttpClient okHttpClient63 = okHttpClient55.copyWithDefaults();
        java.net.ProxySelector proxySelector64 = okHttpClient63.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory65 = okHttpClient63.getSslSocketFactory();
        okHttpClient49.sslSocketFactory = sSLSocketFactory65;
        okHttpClient32.sslSocketFactory = sSLSocketFactory65;
        com.squareup.okhttp.OkHttpClient okHttpClient68 = okHttpClient31.setSSLSocketFactory(sSLSocketFactory65);
        java.net.Socket socket69 = sSLSocketFactory65.createSocket();
        com.squareup.okhttp.OkHttpClient okHttpClient70 = okHttpClient13.setSSLSocketFactory(sSLSocketFactory65);
        com.squareup.okhttp.OkHttpClient okHttpClient71 = okHttpClient70.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool74 = new com.squareup.okhttp.ConnectionPool((int) (byte) 10, (long) (byte) 0);
        int int75 = connectionPool74.getConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient76 = okHttpClient70.setConnectionPool(connectionPool74);
        java.util.List<java.lang.String> strList77 = okHttpClient70.transports;
        java.net.Proxy proxy78 = okHttpClient70.proxy;
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNull(hostnameVerifier23);
        org.junit.Assert.assertNull(proxy24);
        org.junit.Assert.assertNotNull(okHttpClient29);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNotNull(connectionPool33);
        org.junit.Assert.assertNotNull(proxy37);
        org.junit.Assert.assertNull(socketAddress38);
        org.junit.Assert.assertNull(socketAddress39);
        org.junit.Assert.assertNull(connection45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(okHttpClient48);
        org.junit.Assert.assertNull(proxySelector52);
        org.junit.Assert.assertNotNull(okHttpClient54);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNotNull(connectionPool61);
        org.junit.Assert.assertNotNull(okHttpClient63);
// flaky:         org.junit.Assert.assertNull(proxySelector64);
        org.junit.Assert.assertNotNull(sSLSocketFactory65);
        org.junit.Assert.assertNotNull(okHttpClient68);
        org.junit.Assert.assertNotNull(socket69);
        org.junit.Assert.assertEquals(socket69.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(okHttpClient70);
        org.junit.Assert.assertNotNull(okHttpClient71);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertNotNull(okHttpClient76);
        org.junit.Assert.assertNotNull(strList77);
        org.junit.Assert.assertNull(proxy78);
    }

    @Test
    public void test12048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12048");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.CookieHandler cookieHandler8 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache9 = okHttpClient0.okResponseCache();
        java.net.CookieHandler cookieHandler10 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = okHttpClient11.hostnameVerifier;
        java.util.List<java.lang.String> strList13 = okHttpClient11.transports;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient11.setSSLSocketFactory(sSLSocketFactory14);
        java.net.ResponseCache responseCache16 = okHttpClient15.responseCache;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache18 = okHttpClient17.okResponseCache();
        java.net.ResponseCache responseCache19 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient17.setResponseCache(responseCache19);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory21 = okHttpClient17.sslSocketFactory;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory22 = okHttpClient17.sslSocketFactory;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory23 = okHttpClient17.sslSocketFactory;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier25 = null;
        okHttpClient24.hostnameVerifier = hostnameVerifier25;
        java.net.ResponseCache responseCache27 = null;
        okHttpClient24.responseCache = responseCache27;
        java.util.List<java.lang.String> strList29 = okHttpClient24.transports;
        com.squareup.okhttp.ConnectionPool connectionPool30 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient24.connectionPool = connectionPool30;
        java.net.Proxy proxy32 = null;
        okHttpClient24.proxy = proxy32;
        boolean boolean34 = okHttpClient24.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient35 = new com.squareup.okhttp.OkHttpClient(okHttpClient24);
        java.net.ProxySelector proxySelector36 = okHttpClient35.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier37 = okHttpClient35.hostnameVerifier;
        java.net.Proxy proxy38 = java.net.Proxy.NO_PROXY;
        boolean boolean40 = proxy38.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type41 = proxy38.type();
        java.net.Proxy.Type type42 = proxy38.type();
        okHttpClient35.proxy = proxy38;
        com.squareup.okhttp.OkHttpClient okHttpClient44 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier45 = null;
        okHttpClient44.hostnameVerifier = hostnameVerifier45;
        java.net.ResponseCache responseCache47 = null;
        okHttpClient44.responseCache = responseCache47;
        java.util.List<java.lang.String> strList49 = okHttpClient44.transports;
        com.squareup.okhttp.ConnectionPool connectionPool50 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient44.connectionPool = connectionPool50;
        com.squareup.okhttp.OkHttpClient okHttpClient52 = okHttpClient44.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient53 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier54 = null;
        okHttpClient53.hostnameVerifier = hostnameVerifier54;
        java.net.ResponseCache responseCache56 = null;
        okHttpClient53.responseCache = responseCache56;
        java.util.List<java.lang.String> strList58 = okHttpClient53.transports;
        com.squareup.okhttp.ConnectionPool connectionPool59 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient53.connectionPool = connectionPool59;
        com.squareup.okhttp.OkHttpClient okHttpClient61 = okHttpClient53.copyWithDefaults();
        java.net.ProxySelector proxySelector62 = okHttpClient61.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory63 = okHttpClient61.getSslSocketFactory();
        okHttpClient44.sslSocketFactory = sSLSocketFactory63;
        okHttpClient35.sslSocketFactory = sSLSocketFactory63;
        com.squareup.okhttp.OkHttpClient okHttpClient66 = okHttpClient17.setSSLSocketFactory(sSLSocketFactory63);
        java.lang.String[] strArray67 = sSLSocketFactory63.getDefaultCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient68 = okHttpClient15.setSSLSocketFactory(sSLSocketFactory63);
        java.net.ProxySelector proxySelector69 = okHttpClient15.proxySelector;
        com.squareup.okhttp.OkHttpClient okHttpClient70 = new com.squareup.okhttp.OkHttpClient(okHttpClient15);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNull(cookieHandler8);
        org.junit.Assert.assertNull(okResponseCache9);
        org.junit.Assert.assertNull(cookieHandler10);
        org.junit.Assert.assertNull(hostnameVerifier12);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNull(responseCache16);
        org.junit.Assert.assertNull(okResponseCache18);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNull(sSLSocketFactory21);
        org.junit.Assert.assertNull(sSLSocketFactory22);
        org.junit.Assert.assertNull(sSLSocketFactory23);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(connectionPool30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(proxySelector36);
        org.junit.Assert.assertNull(hostnameVerifier37);
        org.junit.Assert.assertNotNull(proxy38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + type41 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type41.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertTrue("'" + type42 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type42.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(strList49);
        org.junit.Assert.assertNotNull(connectionPool50);
        org.junit.Assert.assertNotNull(okHttpClient52);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNotNull(connectionPool59);
        org.junit.Assert.assertNotNull(okHttpClient61);
// flaky:         org.junit.Assert.assertNull(proxySelector62);
        org.junit.Assert.assertNotNull(sSLSocketFactory63);
        org.junit.Assert.assertNotNull(okHttpClient66);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(okHttpClient68);
        org.junit.Assert.assertNull(proxySelector69);
    }

    @Test
    public void test12049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12049");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.OkAuthenticator okAuthenticator12 = okHttpClient11.getAuthenticator();
        java.net.ProxySelector proxySelector13 = okHttpClient11.getProxySelector();
        java.net.ProxySelector proxySelector14 = null;
        okHttpClient11.proxySelector = proxySelector14;
        java.net.ProxySelector proxySelector16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient11.setProxySelector(proxySelector16);
        com.squareup.okhttp.ConnectionPool connectionPool20 = new com.squareup.okhttp.ConnectionPool(10, 1L);
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient17.setConnectionPool(connectionPool20);
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier23 = null;
        okHttpClient22.hostnameVerifier = hostnameVerifier23;
        java.net.ResponseCache responseCache25 = null;
        okHttpClient22.responseCache = responseCache25;
        java.util.List<java.lang.String> strList27 = okHttpClient22.transports;
        com.squareup.okhttp.ConnectionPool connectionPool28 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient22.connectionPool = connectionPool28;
        java.net.CookieHandler cookieHandler30 = okHttpClient22.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache31 = okHttpClient22.okResponseCache();
        java.net.CookieHandler cookieHandler32 = okHttpClient22.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient33 = new com.squareup.okhttp.OkHttpClient(okHttpClient22);
        java.net.Proxy proxy34 = java.net.Proxy.NO_PROXY;
        boolean boolean36 = proxy34.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type37 = proxy34.type();
        java.net.SocketAddress socketAddress38 = proxy34.address();
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient22.setProxy(proxy34);
        com.squareup.okhttp.OkHttpClient okHttpClient40 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier41 = null;
        okHttpClient40.hostnameVerifier = hostnameVerifier41;
        java.net.ResponseCache responseCache43 = null;
        okHttpClient40.responseCache = responseCache43;
        java.util.List<java.lang.String> strList45 = okHttpClient40.transports;
        com.squareup.okhttp.ConnectionPool connectionPool46 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient40.connectionPool = connectionPool46;
        com.squareup.okhttp.OkHttpClient okHttpClient48 = okHttpClient40.copyWithDefaults();
        java.net.ProxySelector proxySelector49 = okHttpClient48.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory50 = okHttpClient48.getSslSocketFactory();
        okHttpClient39.sslSocketFactory = sSLSocketFactory50;
        java.lang.String[] strArray52 = sSLSocketFactory50.getDefaultCipherSuites();
        java.lang.String[] strArray53 = sSLSocketFactory50.getSupportedCipherSuites();
        java.net.Socket socket54 = sSLSocketFactory50.createSocket();
        com.squareup.okhttp.OkHttpClient okHttpClient55 = okHttpClient21.setSSLSocketFactory(sSLSocketFactory50);
        java.lang.String[] strArray56 = sSLSocketFactory50.getDefaultCipherSuites();
        java.lang.String[] strArray57 = sSLSocketFactory50.getDefaultCipherSuites();
        java.lang.String[] strArray58 = sSLSocketFactory50.getDefaultCipherSuites();
        java.lang.String[] strArray59 = sSLSocketFactory50.getSupportedCipherSuites();
        java.net.InetAddress inetAddress60 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket62 = sSLSocketFactory50.createSocket(inetAddress60, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.net.ConnectException; message: Connection refused (Connection refused)");
        } catch (java.net.ConnectException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(okAuthenticator12);
        org.junit.Assert.assertNull(proxySelector13);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNotNull(connectionPool28);
        org.junit.Assert.assertNull(cookieHandler30);
        org.junit.Assert.assertNull(okResponseCache31);
        org.junit.Assert.assertNull(cookieHandler32);
        org.junit.Assert.assertNotNull(proxy34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + type37 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type37.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress38);
        org.junit.Assert.assertNotNull(okHttpClient39);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNotNull(connectionPool46);
        org.junit.Assert.assertNotNull(okHttpClient48);
// flaky:         org.junit.Assert.assertNull(proxySelector49);
        org.junit.Assert.assertNotNull(sSLSocketFactory50);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(socket54);
        org.junit.Assert.assertEquals(socket54.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(okHttpClient55);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(strArray59);
    }

    @Test
    public void test12050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12050");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.OkAuthenticator okAuthenticator12 = okHttpClient11.getAuthenticator();
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool14 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient13.connectionPool = connectionPool14;
        java.net.ResponseCache responseCache16 = null;
        okHttpClient13.responseCache = responseCache16;
        java.net.Proxy proxy18 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress19 = proxy18.address();
        java.net.SocketAddress socketAddress20 = proxy18.address();
        okHttpClient13.proxy = proxy18;
        com.squareup.okhttp.ConnectionPool connectionPool24 = new com.squareup.okhttp.ConnectionPool((-1), (long) '#');
        com.squareup.okhttp.Address address25 = null;
        com.squareup.okhttp.Connection connection26 = connectionPool24.get(address25);
        int int27 = connectionPool24.getSpdyConnectionCount();
        connectionPool24.evictAll();
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient13.setConnectionPool(connectionPool24);
        com.squareup.okhttp.OkHttpClient okHttpClient30 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier31 = null;
        okHttpClient30.hostnameVerifier = hostnameVerifier31;
        java.net.ProxySelector proxySelector33 = okHttpClient30.proxySelector;
        java.net.ProxySelector proxySelector34 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient30.setProxySelector(proxySelector34);
        com.squareup.okhttp.OkHttpClient okHttpClient36 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier37 = null;
        okHttpClient36.hostnameVerifier = hostnameVerifier37;
        java.net.ResponseCache responseCache39 = null;
        okHttpClient36.responseCache = responseCache39;
        java.util.List<java.lang.String> strList41 = okHttpClient36.transports;
        com.squareup.okhttp.ConnectionPool connectionPool42 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient36.connectionPool = connectionPool42;
        com.squareup.okhttp.OkHttpClient okHttpClient44 = okHttpClient36.copyWithDefaults();
        java.net.ProxySelector proxySelector45 = okHttpClient44.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory46 = okHttpClient44.getSslSocketFactory();
        okHttpClient30.sslSocketFactory = sSLSocketFactory46;
        okHttpClient13.sslSocketFactory = sSLSocketFactory46;
        java.lang.String[] strArray49 = sSLSocketFactory46.getSupportedCipherSuites();
        java.lang.String[] strArray50 = sSLSocketFactory46.getSupportedCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient51 = okHttpClient11.setSSLSocketFactory(sSLSocketFactory46);
        java.lang.String[] strArray52 = sSLSocketFactory46.getSupportedCipherSuites();
        java.net.InetAddress inetAddress55 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket57 = sSLSocketFactory46.createSocket("DIRECT", 0, inetAddress55, 10);
            org.junit.Assert.fail("Expected exception of type java.net.BindException; message: Permission denied (Bind failed)");
        } catch (java.net.BindException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(okAuthenticator12);
        org.junit.Assert.assertNotNull(connectionPool14);
        org.junit.Assert.assertNotNull(proxy18);
        org.junit.Assert.assertNull(socketAddress19);
        org.junit.Assert.assertNull(socketAddress20);
        org.junit.Assert.assertNull(connection26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(okHttpClient29);
        org.junit.Assert.assertNull(proxySelector33);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(connectionPool42);
        org.junit.Assert.assertNotNull(okHttpClient44);
// flaky:         org.junit.Assert.assertNull(proxySelector45);
        org.junit.Assert.assertNotNull(sSLSocketFactory46);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(okHttpClient51);
        org.junit.Assert.assertNotNull(strArray52);
    }

    @Test
    public void test12051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12051");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache1 = okHttpClient0.okResponseCache();
        java.net.ProxySelector proxySelector2 = okHttpClient0.proxySelector;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        com.squareup.okhttp.OkAuthenticator okAuthenticator4 = okHttpClient3.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = new com.squareup.okhttp.OkHttpClient(okHttpClient3);
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool7 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient6.connectionPool = connectionPool7;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier10 = null;
        okHttpClient9.hostnameVerifier = hostnameVerifier10;
        java.net.ResponseCache responseCache12 = null;
        okHttpClient9.responseCache = responseCache12;
        java.util.List<java.lang.String> strList14 = okHttpClient9.transports;
        com.squareup.okhttp.ConnectionPool connectionPool15 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient9.connectionPool = connectionPool15;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient6.setConnectionPool(connectionPool15);
        com.squareup.okhttp.OkAuthenticator okAuthenticator18 = okHttpClient17.getAuthenticator();
        java.net.ProxySelector proxySelector19 = okHttpClient17.getProxySelector();
        java.net.ResponseCache responseCache20 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient17.setResponseCache(responseCache20);
        java.net.Proxy proxy22 = java.net.Proxy.NO_PROXY;
        boolean boolean24 = proxy22.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type25 = proxy22.type();
        java.net.SocketAddress socketAddress26 = proxy22.address();
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient21.setProxy(proxy22);
        java.net.Proxy proxy28 = java.net.Proxy.NO_PROXY;
        boolean boolean30 = proxy28.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type31 = proxy28.type();
        java.net.Proxy.Type type32 = proxy28.type();
        boolean boolean33 = proxy22.equals((java.lang.Object) proxy28);
        com.squareup.okhttp.OkHttpClient okHttpClient34 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier35 = null;
        okHttpClient34.hostnameVerifier = hostnameVerifier35;
        boolean boolean37 = okHttpClient34.getFollowProtocolRedirects();
        java.net.CookieHandler cookieHandler38 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient34.setCookieHandler(cookieHandler38);
        okHttpClient34.followProtocolRedirects = true;
        boolean boolean42 = proxy22.equals((java.lang.Object) okHttpClient34);
        com.squareup.okhttp.OkHttpClient okHttpClient43 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier44 = null;
        okHttpClient43.hostnameVerifier = hostnameVerifier44;
        java.net.ResponseCache responseCache46 = null;
        okHttpClient43.responseCache = responseCache46;
        javax.net.ssl.HostnameVerifier hostnameVerifier48 = okHttpClient43.hostnameVerifier;
        java.net.Proxy proxy49 = okHttpClient43.getProxy();
        java.net.CookieHandler cookieHandler50 = null;
        okHttpClient43.cookieHandler = cookieHandler50;
        okHttpClient43.followProtocolRedirects = true;
        java.net.CookieHandler cookieHandler54 = okHttpClient43.getCookieHandler();
        java.net.CookieHandler cookieHandler55 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient56 = okHttpClient43.setCookieHandler(cookieHandler55);
        boolean boolean57 = proxy22.equals((java.lang.Object) okHttpClient43);
        com.squareup.okhttp.OkHttpClient okHttpClient58 = new com.squareup.okhttp.OkHttpClient(okHttpClient43);
        java.util.Set<com.squareup.okhttp.Route> routeSet59 = okHttpClient58.failedRoutes;
        okHttpClient5.failedRoutes = routeSet59;
        org.junit.Assert.assertNull(okResponseCache1);
        org.junit.Assert.assertNull(proxySelector2);
        org.junit.Assert.assertNull(okAuthenticator4);
        org.junit.Assert.assertNotNull(connectionPool7);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNotNull(connectionPool15);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNull(okAuthenticator18);
        org.junit.Assert.assertNull(proxySelector19);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNotNull(proxy22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + type25 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type25.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress26);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNotNull(proxy28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + type31 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type31.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertTrue("'" + type32 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type32.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(okHttpClient39);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(hostnameVerifier48);
        org.junit.Assert.assertNull(proxy49);
        org.junit.Assert.assertNull(cookieHandler54);
        org.junit.Assert.assertNotNull(okHttpClient56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(routeSet59);
    }

    @Test
    public void test12052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12052");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.Proxy proxy8 = null;
        okHttpClient0.proxy = proxy8;
        boolean boolean10 = okHttpClient0.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient0.setFollowProtocolRedirects(true);
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = null;
        okHttpClient13.hostnameVerifier = hostnameVerifier14;
        java.net.ResponseCache responseCache16 = null;
        okHttpClient13.responseCache = responseCache16;
        java.util.List<java.lang.String> strList18 = okHttpClient13.transports;
        javax.net.ssl.HostnameVerifier hostnameVerifier19 = null;
        okHttpClient13.hostnameVerifier = hostnameVerifier19;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache21 = okHttpClient13.okResponseCache();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory22 = okHttpClient13.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient23 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier24 = null;
        okHttpClient23.hostnameVerifier = hostnameVerifier24;
        java.net.ResponseCache responseCache26 = null;
        okHttpClient23.responseCache = responseCache26;
        javax.net.ssl.HostnameVerifier hostnameVerifier28 = okHttpClient23.hostnameVerifier;
        java.net.Proxy proxy29 = okHttpClient23.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool32 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient23.connectionPool = connectionPool32;
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient23.copyWithDefaults();
        java.net.Proxy proxy35 = okHttpClient34.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier36 = okHttpClient34.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient13.setHostnameVerifier(hostnameVerifier36);
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient12.setHostnameVerifier(hostnameVerifier36);
        java.net.Proxy proxy39 = okHttpClient12.proxy;
        java.net.ResponseCache responseCache40 = okHttpClient12.responseCache;
        java.net.CookieHandler cookieHandler41 = okHttpClient12.cookieHandler;
        com.squareup.okhttp.OkHttpClient okHttpClient42 = new com.squareup.okhttp.OkHttpClient(okHttpClient12);
        com.squareup.okhttp.OkHttpClient okHttpClient43 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier44 = null;
        okHttpClient43.hostnameVerifier = hostnameVerifier44;
        java.net.ResponseCache responseCache46 = null;
        okHttpClient43.responseCache = responseCache46;
        javax.net.ssl.HostnameVerifier hostnameVerifier48 = okHttpClient43.hostnameVerifier;
        java.net.Proxy proxy49 = okHttpClient43.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient50 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache51 = okHttpClient50.okResponseCache();
        java.net.ResponseCache responseCache52 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient53 = okHttpClient50.setResponseCache(responseCache52);
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList56 = new java.util.ArrayList<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        okHttpClient50.transports = strList56;
        okHttpClient43.transports = strList56;
        com.squareup.okhttp.OkHttpClient.DEFAULT_TRANSPORTS = strList56;
        okHttpClient12.transports = strList56;
        com.squareup.okhttp.OkHttpClient okHttpClient62 = okHttpClient12.copyWithDefaults();
        java.net.ResponseCache responseCache63 = null;
        okHttpClient62.responseCache = responseCache63;
        com.squareup.okhttp.OkHttpClient okHttpClient65 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier66 = null;
        okHttpClient65.hostnameVerifier = hostnameVerifier66;
        java.net.ResponseCache responseCache68 = null;
        okHttpClient65.responseCache = responseCache68;
        javax.net.ssl.HostnameVerifier hostnameVerifier70 = okHttpClient65.hostnameVerifier;
        java.net.Proxy proxy71 = okHttpClient65.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient72 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache73 = okHttpClient72.okResponseCache();
        java.net.ResponseCache responseCache74 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient75 = okHttpClient72.setResponseCache(responseCache74);
        java.lang.String[] strArray77 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList78 = new java.util.ArrayList<java.lang.String>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList78, strArray77);
        okHttpClient72.transports = strList78;
        okHttpClient65.transports = strList78;
        javax.net.ssl.HostnameVerifier hostnameVerifier82 = null;
        okHttpClient65.hostnameVerifier = hostnameVerifier82;
        com.squareup.okhttp.OkHttpClient okHttpClient84 = new com.squareup.okhttp.OkHttpClient(okHttpClient65);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory85 = okHttpClient65.sslSocketFactory;
        java.util.List<java.lang.String> strList86 = okHttpClient65.transports;
        com.squareup.okhttp.OkHttpClient.DEFAULT_TRANSPORTS = strList86;
        // The following exception was thrown during execution in test generation
        try {
            com.squareup.okhttp.OkHttpClient okHttpClient88 = okHttpClient62.setTransports(strList86);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: transports doesn't contain http/1.1: [hi!]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(okResponseCache21);
        org.junit.Assert.assertNull(sSLSocketFactory22);
        org.junit.Assert.assertNull(hostnameVerifier28);
        org.junit.Assert.assertNull(proxy29);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertNull(proxy35);
        org.junit.Assert.assertNotNull(hostnameVerifier36);
        org.junit.Assert.assertNotNull(okHttpClient37);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNull(proxy39);
        org.junit.Assert.assertNull(responseCache40);
        org.junit.Assert.assertNull(cookieHandler41);
        org.junit.Assert.assertNull(hostnameVerifier48);
        org.junit.Assert.assertNull(proxy49);
        org.junit.Assert.assertNull(okResponseCache51);
        org.junit.Assert.assertNotNull(okHttpClient53);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(okHttpClient62);
        org.junit.Assert.assertNull(hostnameVerifier70);
        org.junit.Assert.assertNull(proxy71);
        org.junit.Assert.assertNull(okResponseCache73);
        org.junit.Assert.assertNotNull(okHttpClient75);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNull(sSLSocketFactory85);
        org.junit.Assert.assertNotNull(strList86);
    }

    @Test
    public void test12053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12053");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient0.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.copyWithDefaults();
        java.net.Proxy proxy12 = okHttpClient11.getProxy();
        java.net.CookieHandler cookieHandler13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient11.setCookieHandler(cookieHandler13);
        com.squareup.okhttp.ConnectionPool connectionPool17 = new com.squareup.okhttp.ConnectionPool((int) (short) 0, (long) (byte) 1);
        okHttpClient14.connectionPool = connectionPool17;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient14.copyWithDefaults();
        java.net.ProxySelector proxySelector20 = okHttpClient14.proxySelector;
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(proxy12);
        org.junit.Assert.assertNotNull(okHttpClient14);
        org.junit.Assert.assertNotNull(okHttpClient19);
// flaky:         org.junit.Assert.assertNull(proxySelector20);
    }

    @Test
    public void test12054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12054");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.Proxy proxy8 = null;
        okHttpClient0.proxy = proxy8;
        boolean boolean10 = okHttpClient0.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient0.setFollowProtocolRedirects(true);
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = null;
        okHttpClient13.hostnameVerifier = hostnameVerifier14;
        java.net.ProxySelector proxySelector16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient13.setProxySelector(proxySelector16);
        java.net.ResponseCache responseCache18 = null;
        okHttpClient17.responseCache = responseCache18;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory20 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient17.setSSLSocketFactory(sSLSocketFactory20);
        java.net.ProxySelector proxySelector22 = null;
        okHttpClient17.proxySelector = proxySelector22;
        com.squareup.okhttp.ConnectionPool connectionPool26 = new com.squareup.okhttp.ConnectionPool((int) ' ', (long) (short) 100);
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient17.setConnectionPool(connectionPool26);
        okHttpClient0.connectionPool = connectionPool26;
        java.net.ProxySelector proxySelector29 = null;
        okHttpClient0.proxySelector = proxySelector29;
        javax.net.ssl.HostnameVerifier hostnameVerifier31 = okHttpClient0.getHostnameVerifier();
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNull(hostnameVerifier31);
    }

    @Test
    public void test12055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12055");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.ConnectionPool connectionPool12 = okHttpClient11.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator13 = okHttpClient11.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool16 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient11.connectionPool = connectionPool16;
        java.net.ResponseCache responseCache18 = okHttpClient11.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory19 = okHttpClient11.sslSocketFactory;
        java.net.Proxy proxy20 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress21 = proxy20.address();
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient11.setProxy(proxy20);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory23 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient11.setSSLSocketFactory(sSLSocketFactory23);
        javax.net.ssl.HostnameVerifier hostnameVerifier25 = okHttpClient24.getHostnameVerifier();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache26 = okHttpClient24.okResponseCache();
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNull(okAuthenticator13);
        org.junit.Assert.assertNull(responseCache18);
        org.junit.Assert.assertNull(sSLSocketFactory19);
        org.junit.Assert.assertNotNull(proxy20);
        org.junit.Assert.assertNull(socketAddress21);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNull(hostnameVerifier25);
        org.junit.Assert.assertNull(okResponseCache26);
    }

    @Test
    public void test12056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12056");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.CookieHandler cookieHandler8 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache9 = okHttpClient0.okResponseCache();
        java.net.CookieHandler cookieHandler10 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        java.net.Proxy proxy12 = java.net.Proxy.NO_PROXY;
        boolean boolean14 = proxy12.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type15 = proxy12.type();
        java.net.SocketAddress socketAddress16 = proxy12.address();
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient0.setProxy(proxy12);
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = okHttpClient0.hostnameVerifier;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory19 = okHttpClient0.sslSocketFactory;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache20 = okHttpClient0.okResponseCache();
        javax.net.ssl.HostnameVerifier hostnameVerifier21 = okHttpClient0.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        boolean boolean23 = okHttpClient0.getFollowProtocolRedirects();
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNull(cookieHandler8);
        org.junit.Assert.assertNull(okResponseCache9);
        org.junit.Assert.assertNull(cookieHandler10);
        org.junit.Assert.assertNotNull(proxy12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + type15 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type15.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress16);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNull(hostnameVerifier18);
        org.junit.Assert.assertNull(sSLSocketFactory19);
        org.junit.Assert.assertNull(okResponseCache20);
        org.junit.Assert.assertNull(hostnameVerifier21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    }

    @Test
    public void test12057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12057");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.ConnectionPool connectionPool12 = okHttpClient11.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator13 = okHttpClient11.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool14 = okHttpClient11.getConnectionPool();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory15 = okHttpClient11.getSslSocketFactory();
        java.net.ProxySelector proxySelector16 = okHttpClient11.getProxySelector();
        java.util.Set<com.squareup.okhttp.Route> routeSet17 = okHttpClient11.failedRoutes;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory18 = okHttpClient11.sslSocketFactory;
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNull(okAuthenticator13);
        org.junit.Assert.assertNotNull(connectionPool14);
        org.junit.Assert.assertNull(sSLSocketFactory15);
        org.junit.Assert.assertNull(proxySelector16);
        org.junit.Assert.assertNotNull(routeSet17);
        org.junit.Assert.assertNull(sSLSocketFactory18);
    }

    @Test
    public void test12058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12058");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        java.net.Proxy proxy12 = okHttpClient11.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool14 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient13.connectionPool = connectionPool14;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier17 = null;
        okHttpClient16.hostnameVerifier = hostnameVerifier17;
        java.net.ResponseCache responseCache19 = null;
        okHttpClient16.responseCache = responseCache19;
        java.util.List<java.lang.String> strList21 = okHttpClient16.transports;
        com.squareup.okhttp.ConnectionPool connectionPool22 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient16.connectionPool = connectionPool22;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient13.setConnectionPool(connectionPool22);
        com.squareup.okhttp.ConnectionPool connectionPool25 = okHttpClient13.connectionPool;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient11.setConnectionPool(connectionPool25);
        okHttpClient11.followProtocolRedirects = false;
        com.squareup.okhttp.OkHttpClient okHttpClient29 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool30 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient29.connectionPool = connectionPool30;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier33 = null;
        okHttpClient32.hostnameVerifier = hostnameVerifier33;
        java.net.ResponseCache responseCache35 = null;
        okHttpClient32.responseCache = responseCache35;
        java.util.List<java.lang.String> strList37 = okHttpClient32.transports;
        com.squareup.okhttp.ConnectionPool connectionPool38 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient32.connectionPool = connectionPool38;
        com.squareup.okhttp.OkHttpClient okHttpClient40 = okHttpClient29.setConnectionPool(connectionPool38);
        java.net.ResponseCache responseCache41 = okHttpClient29.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory42 = okHttpClient29.sslSocketFactory;
        java.net.CookieHandler cookieHandler43 = okHttpClient29.getCookieHandler();
        com.squareup.okhttp.OkAuthenticator okAuthenticator44 = okHttpClient29.authenticator;
        java.util.Set<com.squareup.okhttp.Route> routeSet45 = okHttpClient29.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient46 = new com.squareup.okhttp.OkHttpClient(okHttpClient29);
        com.squareup.okhttp.OkHttpClient okHttpClient47 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier48 = null;
        okHttpClient47.hostnameVerifier = hostnameVerifier48;
        java.net.ResponseCache responseCache50 = null;
        okHttpClient47.responseCache = responseCache50;
        javax.net.ssl.HostnameVerifier hostnameVerifier52 = okHttpClient47.hostnameVerifier;
        java.net.Proxy proxy53 = okHttpClient47.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool56 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient47.connectionPool = connectionPool56;
        com.squareup.okhttp.OkHttpClient okHttpClient58 = okHttpClient47.copyWithDefaults();
        java.net.ResponseCache responseCache59 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient60 = okHttpClient58.setResponseCache(responseCache59);
        javax.net.ssl.HostnameVerifier hostnameVerifier61 = okHttpClient60.hostnameVerifier;
        okHttpClient46.hostnameVerifier = hostnameVerifier61;
        com.squareup.okhttp.OkHttpClient okHttpClient63 = okHttpClient11.setHostnameVerifier(hostnameVerifier61);
        java.net.Proxy proxy64 = okHttpClient63.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient66 = okHttpClient63.setFollowProtocolRedirects(true);
        com.squareup.okhttp.OkHttpClient okHttpClient67 = new com.squareup.okhttp.OkHttpClient(okHttpClient63);
        boolean boolean68 = okHttpClient63.followProtocolRedirects;
        com.squareup.okhttp.ConnectionPool connectionPool69 = okHttpClient63.connectionPool;
        com.squareup.okhttp.Connection connection70 = null;
        // The following exception was thrown during execution in test generation
        try {
            connectionPool69.recycle(connection70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(proxy12);
        org.junit.Assert.assertNotNull(connectionPool14);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(connectionPool22);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNotNull(connectionPool25);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNotNull(connectionPool30);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(connectionPool38);
        org.junit.Assert.assertNotNull(okHttpClient40);
        org.junit.Assert.assertNull(responseCache41);
        org.junit.Assert.assertNull(sSLSocketFactory42);
        org.junit.Assert.assertNull(cookieHandler43);
        org.junit.Assert.assertNull(okAuthenticator44);
        org.junit.Assert.assertNotNull(routeSet45);
        org.junit.Assert.assertNull(hostnameVerifier52);
        org.junit.Assert.assertNull(proxy53);
        org.junit.Assert.assertNotNull(okHttpClient58);
        org.junit.Assert.assertNotNull(okHttpClient60);
        org.junit.Assert.assertNotNull(hostnameVerifier61);
        org.junit.Assert.assertNotNull(okHttpClient63);
        org.junit.Assert.assertNull(proxy64);
        org.junit.Assert.assertNotNull(okHttpClient66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(connectionPool69);
    }

    @Test
    public void test12059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12059");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.ConnectionPool connectionPool12 = okHttpClient11.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator13 = okHttpClient11.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool16 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient11.connectionPool = connectionPool16;
        java.net.ResponseCache responseCache18 = okHttpClient11.responseCache;
        java.util.List<java.lang.String> strList19 = okHttpClient11.getTransports();
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient11.copyWithDefaults();
        java.net.ProxySelector proxySelector21 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient11.setProxySelector(proxySelector21);
        com.squareup.okhttp.OkHttpClient okHttpClient23 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier24 = null;
        okHttpClient23.hostnameVerifier = hostnameVerifier24;
        java.net.ProxySelector proxySelector26 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient23.setProxySelector(proxySelector26);
        java.net.CookieHandler cookieHandler28 = okHttpClient23.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient29 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = null;
        okHttpClient29.hostnameVerifier = hostnameVerifier30;
        java.net.ResponseCache responseCache32 = null;
        okHttpClient29.responseCache = responseCache32;
        java.util.List<java.lang.String> strList34 = okHttpClient29.transports;
        com.squareup.okhttp.ConnectionPool connectionPool35 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient29.connectionPool = connectionPool35;
        java.net.Proxy proxy37 = null;
        okHttpClient29.proxy = proxy37;
        java.util.Set<com.squareup.okhttp.Route> routeSet39 = okHttpClient29.failedRoutes;
        okHttpClient23.failedRoutes = routeSet39;
        javax.net.ssl.HostnameVerifier hostnameVerifier41 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient23.setHostnameVerifier(hostnameVerifier41);
        java.net.ProxySelector proxySelector43 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient44 = okHttpClient42.setProxySelector(proxySelector43);
        com.squareup.okhttp.ConnectionPool connectionPool47 = new com.squareup.okhttp.ConnectionPool((int) (byte) 10, (long) (byte) 0);
        okHttpClient42.connectionPool = connectionPool47;
        com.squareup.okhttp.OkHttpClient okHttpClient49 = okHttpClient42.copyWithDefaults();
        java.net.Proxy proxy50 = okHttpClient49.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient51 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier52 = null;
        okHttpClient51.hostnameVerifier = hostnameVerifier52;
        java.net.ResponseCache responseCache54 = null;
        okHttpClient51.responseCache = responseCache54;
        java.util.List<java.lang.String> strList56 = okHttpClient51.transports;
        com.squareup.okhttp.ConnectionPool connectionPool57 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient51.connectionPool = connectionPool57;
        java.net.Proxy proxy59 = null;
        okHttpClient51.proxy = proxy59;
        boolean boolean61 = okHttpClient51.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient62 = okHttpClient51.copyWithDefaults();
        java.net.Proxy proxy63 = java.net.Proxy.NO_PROXY;
        boolean boolean65 = proxy63.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type66 = proxy63.type();
        java.lang.String str67 = proxy63.toString();
        java.net.Proxy.Type type68 = proxy63.type();
        okHttpClient51.proxy = proxy63;
        com.squareup.okhttp.OkHttpClient okHttpClient70 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache71 = okHttpClient70.okResponseCache();
        java.net.ResponseCache responseCache72 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient73 = okHttpClient70.setResponseCache(responseCache72);
        java.net.ProxySelector proxySelector74 = okHttpClient70.getProxySelector();
        com.squareup.okhttp.OkAuthenticator okAuthenticator75 = okHttpClient70.getAuthenticator();
        boolean boolean76 = proxy63.equals((java.lang.Object) okHttpClient70);
        java.net.SocketAddress socketAddress77 = proxy63.address();
        okHttpClient49.proxy = proxy63;
        java.util.List<java.lang.String> strList79 = okHttpClient49.transports;
        okHttpClient11.transports = strList79;
        java.net.ProxySelector proxySelector81 = okHttpClient11.proxySelector;
        java.net.CookieHandler cookieHandler82 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient83 = okHttpClient11.setCookieHandler(cookieHandler82);
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNull(okAuthenticator13);
        org.junit.Assert.assertNull(responseCache18);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNull(cookieHandler28);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(connectionPool35);
        org.junit.Assert.assertNotNull(routeSet39);
        org.junit.Assert.assertNotNull(okHttpClient42);
        org.junit.Assert.assertNotNull(okHttpClient44);
        org.junit.Assert.assertNotNull(okHttpClient49);
        org.junit.Assert.assertNull(proxy50);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNotNull(connectionPool57);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(okHttpClient62);
        org.junit.Assert.assertNotNull(proxy63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + type66 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type66.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "DIRECT" + "'", str67, "DIRECT");
        org.junit.Assert.assertTrue("'" + type68 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type68.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(okResponseCache71);
        org.junit.Assert.assertNotNull(okHttpClient73);
        org.junit.Assert.assertNull(proxySelector74);
        org.junit.Assert.assertNull(okAuthenticator75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNull(socketAddress77);
        org.junit.Assert.assertNotNull(strList79);
        org.junit.Assert.assertNull(proxySelector81);
        org.junit.Assert.assertNotNull(okHttpClient83);
    }

    @Test
    public void test12060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12060");
        com.squareup.okhttp.ConnectionPool connectionPool2 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) '#');
        int int3 = connectionPool2.getSpdyConnectionCount();
        connectionPool2.evictAll();
        int int5 = connectionPool2.getSpdyConnectionCount();
        int int6 = connectionPool2.getSpdyConnectionCount();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }

    @Test
    public void test12061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12061");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache1 = okHttpClient0.okResponseCache();
        java.net.ResponseCache responseCache2 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.setResponseCache(responseCache2);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory4 = okHttpClient0.sslSocketFactory;
        java.net.CookieHandler cookieHandler5 = okHttpClient0.getCookieHandler();
        java.net.ResponseCache responseCache6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient0.setResponseCache(responseCache6);
        java.net.CookieHandler cookieHandler8 = null;
        okHttpClient0.cookieHandler = cookieHandler8;
        com.squareup.okhttp.OkAuthenticator okAuthenticator10 = okHttpClient0.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool11 = okHttpClient0.getConnectionPool();
        org.junit.Assert.assertNull(okResponseCache1);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertNull(sSLSocketFactory4);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertNotNull(okHttpClient7);
        org.junit.Assert.assertNull(okAuthenticator10);
        org.junit.Assert.assertNull(connectionPool11);
    }

    @Test
    public void test12062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12062");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.ConnectionPool connectionPool3 = okHttpClient0.connectionPool;
        com.squareup.okhttp.OkAuthenticator okAuthenticator4 = okHttpClient0.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        java.net.ProxySelector proxySelector6 = okHttpClient5.proxySelector;
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNotNull(connectionPool3);
        org.junit.Assert.assertNull(okAuthenticator4);
        org.junit.Assert.assertNull(proxySelector6);
    }

    @Test
    public void test12063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12063");
        com.squareup.okhttp.ConnectionPool connectionPool2 = new com.squareup.okhttp.ConnectionPool((int) (short) 100, (long) 10);
        int int3 = connectionPool2.getConnectionCount();
        connectionPool2.evictAll();
        int int5 = connectionPool2.getConnectionCount();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test12064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12064");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        boolean boolean3 = okHttpClient0.getFollowProtocolRedirects();
        java.net.CookieHandler cookieHandler4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setCookieHandler(cookieHandler4);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory6 = null;
        okHttpClient5.sslSocketFactory = sSLSocketFactory6;
        java.net.ResponseCache responseCache8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient5.setResponseCache(responseCache8);
        java.net.ProxySelector proxySelector10 = okHttpClient9.getProxySelector();
        java.net.ResponseCache responseCache11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient9.setResponseCache(responseCache11);
        java.net.CookieHandler cookieHandler13 = okHttpClient9.getCookieHandler();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNull(proxySelector10);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertNull(cookieHandler13);
    }

    @Test
    public void test12065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12065");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient0.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.copyWithDefaults();
        java.net.ResponseCache responseCache12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setResponseCache(responseCache12);
        java.net.ProxySelector proxySelector14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient11.setProxySelector(proxySelector14);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory16 = okHttpClient15.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient(okHttpClient15);
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient(okHttpClient17);
        java.net.ResponseCache responseCache19 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient17.setResponseCache(responseCache19);
        com.squareup.okhttp.ConnectionPool connectionPool21 = okHttpClient17.connectionPool;
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNotNull(sSLSocketFactory16);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNull(connectionPool21);
    }

    @Test
    public void test12066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12066");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.Proxy proxy8 = null;
        okHttpClient0.proxy = proxy8;
        boolean boolean10 = okHttpClient0.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.copyWithDefaults();
        java.net.CookieHandler cookieHandler12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient0.setCookieHandler(cookieHandler12);
        java.net.ProxySelector proxySelector14 = null;
        okHttpClient13.proxySelector = proxySelector14;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = new com.squareup.okhttp.OkHttpClient(okHttpClient13);
        okHttpClient13.followProtocolRedirects = false;
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(okHttpClient13);
    }

    @Test
    public void test12067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12067");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.CookieHandler cookieHandler6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient0.setCookieHandler(cookieHandler6);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory8 = null;
        okHttpClient7.sslSocketFactory = sSLSocketFactory8;
        com.squareup.okhttp.OkAuthenticator okAuthenticator10 = okHttpClient7.authenticator;
        java.net.ResponseCache responseCache11 = okHttpClient7.responseCache;
        java.net.ResponseCache responseCache12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient7.setResponseCache(responseCache12);
        java.net.ProxySelector proxySelector14 = okHttpClient7.proxySelector;
        java.net.ProxySelector proxySelector15 = okHttpClient7.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier16 = okHttpClient7.getHostnameVerifier();
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNotNull(okHttpClient7);
        org.junit.Assert.assertNull(okAuthenticator10);
        org.junit.Assert.assertNull(responseCache11);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNull(proxySelector14);
        org.junit.Assert.assertNull(proxySelector15);
        org.junit.Assert.assertNull(hostnameVerifier16);
    }

    @Test
    public void test12068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12068");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.ConnectionPool connectionPool12 = okHttpClient11.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator13 = okHttpClient11.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool16 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient11.connectionPool = connectionPool16;
        java.net.ResponseCache responseCache18 = okHttpClient11.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory19 = okHttpClient11.sslSocketFactory;
        java.net.Proxy proxy20 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress21 = proxy20.address();
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient11.setProxy(proxy20);
        boolean boolean23 = okHttpClient22.getFollowProtocolRedirects();
        boolean boolean24 = okHttpClient22.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient25 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.OkHttpClient okHttpClient26 = new com.squareup.okhttp.OkHttpClient(okHttpClient25);
        com.squareup.okhttp.OkHttpClient okHttpClient27 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier28 = null;
        okHttpClient27.hostnameVerifier = hostnameVerifier28;
        java.net.ResponseCache responseCache30 = null;
        okHttpClient27.responseCache = responseCache30;
        java.util.List<java.lang.String> strList32 = okHttpClient27.transports;
        java.net.Proxy proxy33 = java.net.Proxy.NO_PROXY;
        boolean boolean35 = proxy33.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type36 = proxy33.type();
        java.net.SocketAddress socketAddress37 = proxy33.address();
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient27.setProxy(proxy33);
        java.util.Set<com.squareup.okhttp.Route> routeSet39 = okHttpClient27.failedRoutes;
        okHttpClient26.failedRoutes = routeSet39;
        com.squareup.okhttp.OkHttpClient okHttpClient41 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier42 = null;
        okHttpClient41.hostnameVerifier = hostnameVerifier42;
        java.net.ResponseCache responseCache44 = null;
        okHttpClient41.responseCache = responseCache44;
        javax.net.ssl.HostnameVerifier hostnameVerifier46 = okHttpClient41.hostnameVerifier;
        java.net.Proxy proxy47 = okHttpClient41.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool50 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient41.connectionPool = connectionPool50;
        com.squareup.okhttp.OkHttpClient okHttpClient52 = okHttpClient41.copyWithDefaults();
        java.net.ResponseCache responseCache53 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient54 = okHttpClient52.setResponseCache(responseCache53);
        com.squareup.okhttp.OkHttpClient okHttpClient56 = okHttpClient54.setFollowProtocolRedirects(false);
        java.net.ResponseCache responseCache57 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient58 = okHttpClient54.setResponseCache(responseCache57);
        com.squareup.okhttp.OkHttpClient okHttpClient59 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool60 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient59.connectionPool = connectionPool60;
        com.squareup.okhttp.OkHttpClient okHttpClient62 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier63 = null;
        okHttpClient62.hostnameVerifier = hostnameVerifier63;
        java.net.ResponseCache responseCache65 = null;
        okHttpClient62.responseCache = responseCache65;
        java.util.List<java.lang.String> strList67 = okHttpClient62.transports;
        com.squareup.okhttp.ConnectionPool connectionPool68 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient62.connectionPool = connectionPool68;
        com.squareup.okhttp.OkHttpClient okHttpClient70 = okHttpClient59.setConnectionPool(connectionPool68);
        java.net.ResponseCache responseCache71 = okHttpClient59.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory72 = okHttpClient59.sslSocketFactory;
        java.net.CookieHandler cookieHandler73 = okHttpClient59.getCookieHandler();
        com.squareup.okhttp.OkAuthenticator okAuthenticator74 = okHttpClient59.authenticator;
        java.util.Set<com.squareup.okhttp.Route> routeSet75 = okHttpClient59.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient76 = new com.squareup.okhttp.OkHttpClient(okHttpClient59);
        com.squareup.okhttp.OkHttpClient okHttpClient77 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier78 = null;
        okHttpClient77.hostnameVerifier = hostnameVerifier78;
        java.net.ResponseCache responseCache80 = null;
        okHttpClient77.responseCache = responseCache80;
        javax.net.ssl.HostnameVerifier hostnameVerifier82 = okHttpClient77.hostnameVerifier;
        java.net.Proxy proxy83 = okHttpClient77.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool86 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient77.connectionPool = connectionPool86;
        com.squareup.okhttp.OkHttpClient okHttpClient88 = okHttpClient77.copyWithDefaults();
        java.net.ResponseCache responseCache89 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient90 = okHttpClient88.setResponseCache(responseCache89);
        javax.net.ssl.HostnameVerifier hostnameVerifier91 = okHttpClient90.hostnameVerifier;
        okHttpClient76.hostnameVerifier = hostnameVerifier91;
        com.squareup.okhttp.OkHttpClient okHttpClient93 = okHttpClient54.setHostnameVerifier(hostnameVerifier91);
        okHttpClient26.hostnameVerifier = hostnameVerifier91;
        com.squareup.okhttp.OkHttpClient okHttpClient95 = okHttpClient22.setHostnameVerifier(hostnameVerifier91);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory96 = okHttpClient95.sslSocketFactory;
        java.net.CookieHandler cookieHandler97 = null;
        okHttpClient95.cookieHandler = cookieHandler97;
        java.net.ResponseCache responseCache99 = okHttpClient95.responseCache;
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNull(okAuthenticator13);
        org.junit.Assert.assertNull(responseCache18);
        org.junit.Assert.assertNull(sSLSocketFactory19);
        org.junit.Assert.assertNotNull(proxy20);
        org.junit.Assert.assertNull(socketAddress21);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNotNull(proxy33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + type36 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type36.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress37);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNotNull(routeSet39);
        org.junit.Assert.assertNull(hostnameVerifier46);
        org.junit.Assert.assertNull(proxy47);
        org.junit.Assert.assertNotNull(okHttpClient52);
        org.junit.Assert.assertNotNull(okHttpClient54);
        org.junit.Assert.assertNotNull(okHttpClient56);
        org.junit.Assert.assertNotNull(okHttpClient58);
        org.junit.Assert.assertNotNull(connectionPool60);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNotNull(connectionPool68);
        org.junit.Assert.assertNotNull(okHttpClient70);
        org.junit.Assert.assertNull(responseCache71);
        org.junit.Assert.assertNull(sSLSocketFactory72);
        org.junit.Assert.assertNull(cookieHandler73);
        org.junit.Assert.assertNull(okAuthenticator74);
        org.junit.Assert.assertNotNull(routeSet75);
        org.junit.Assert.assertNull(hostnameVerifier82);
        org.junit.Assert.assertNull(proxy83);
        org.junit.Assert.assertNotNull(okHttpClient88);
        org.junit.Assert.assertNotNull(okHttpClient90);
        org.junit.Assert.assertNotNull(hostnameVerifier91);
        org.junit.Assert.assertNotNull(okHttpClient93);
        org.junit.Assert.assertNotNull(okHttpClient95);
        org.junit.Assert.assertNull(sSLSocketFactory96);
        org.junit.Assert.assertNull(responseCache99);
    }

    @Test
    public void test12069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12069");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        java.net.CookieHandler cookieHandler6 = okHttpClient0.getCookieHandler();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory7 = okHttpClient0.getSslSocketFactory();
        java.net.CookieHandler cookieHandler8 = null;
        okHttpClient0.cookieHandler = cookieHandler8;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool11 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient10.connectionPool = connectionPool11;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = null;
        okHttpClient13.hostnameVerifier = hostnameVerifier14;
        java.net.ResponseCache responseCache16 = null;
        okHttpClient13.responseCache = responseCache16;
        java.util.List<java.lang.String> strList18 = okHttpClient13.transports;
        com.squareup.okhttp.ConnectionPool connectionPool19 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient13.connectionPool = connectionPool19;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient10.setConnectionPool(connectionPool19);
        com.squareup.okhttp.ConnectionPool connectionPool22 = okHttpClient21.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator23 = okHttpClient21.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool26 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient21.connectionPool = connectionPool26;
        java.net.ResponseCache responseCache28 = okHttpClient21.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory29 = okHttpClient21.sslSocketFactory;
        java.net.Proxy proxy30 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress31 = proxy30.address();
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient21.setProxy(proxy30);
        com.squareup.okhttp.OkHttpClient okHttpClient33 = new com.squareup.okhttp.OkHttpClient(okHttpClient32);
        javax.net.ssl.HostnameVerifier hostnameVerifier34 = okHttpClient33.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient35 = new com.squareup.okhttp.OkHttpClient(okHttpClient33);
        java.net.Proxy proxy36 = okHttpClient33.proxy;
        okHttpClient33.followProtocolRedirects = false;
        com.squareup.okhttp.OkHttpClient okHttpClient39 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool40 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient39.connectionPool = connectionPool40;
        com.squareup.okhttp.OkHttpClient okHttpClient42 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier43 = null;
        okHttpClient42.hostnameVerifier = hostnameVerifier43;
        java.net.ResponseCache responseCache45 = null;
        okHttpClient42.responseCache = responseCache45;
        java.util.List<java.lang.String> strList47 = okHttpClient42.transports;
        com.squareup.okhttp.ConnectionPool connectionPool48 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient42.connectionPool = connectionPool48;
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient39.setConnectionPool(connectionPool48);
        java.net.Proxy proxy51 = okHttpClient50.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient52 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool53 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient52.connectionPool = connectionPool53;
        int int55 = connectionPool53.getSpdyConnectionCount();
        okHttpClient50.connectionPool = connectionPool53;
        com.squareup.okhttp.OkHttpClient okHttpClient57 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier58 = null;
        okHttpClient57.hostnameVerifier = hostnameVerifier58;
        java.net.ResponseCache responseCache60 = null;
        okHttpClient57.responseCache = responseCache60;
        javax.net.ssl.HostnameVerifier hostnameVerifier62 = okHttpClient57.hostnameVerifier;
        java.net.Proxy proxy63 = okHttpClient57.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool66 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient57.connectionPool = connectionPool66;
        com.squareup.okhttp.OkHttpClient okHttpClient68 = okHttpClient57.copyWithDefaults();
        java.net.ResponseCache responseCache69 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient70 = okHttpClient68.setResponseCache(responseCache69);
        com.squareup.okhttp.OkAuthenticator okAuthenticator71 = okHttpClient68.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient72 = okHttpClient50.setAuthenticator(okAuthenticator71);
        com.squareup.okhttp.OkHttpClient okHttpClient73 = okHttpClient33.setAuthenticator(okAuthenticator71);
        com.squareup.okhttp.OkHttpClient okHttpClient74 = okHttpClient0.setAuthenticator(okAuthenticator71);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNull(cookieHandler6);
        org.junit.Assert.assertNull(sSLSocketFactory7);
        org.junit.Assert.assertNotNull(connectionPool11);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(connectionPool19);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNotNull(connectionPool22);
        org.junit.Assert.assertNull(okAuthenticator23);
        org.junit.Assert.assertNull(responseCache28);
        org.junit.Assert.assertNull(sSLSocketFactory29);
        org.junit.Assert.assertNotNull(proxy30);
        org.junit.Assert.assertNull(socketAddress31);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertNull(hostnameVerifier34);
        org.junit.Assert.assertNull(proxy36);
        org.junit.Assert.assertNotNull(connectionPool40);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNotNull(connectionPool48);
        org.junit.Assert.assertNotNull(okHttpClient50);
        org.junit.Assert.assertNull(proxy51);
        org.junit.Assert.assertNotNull(connectionPool53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNull(hostnameVerifier62);
        org.junit.Assert.assertNull(proxy63);
        org.junit.Assert.assertNotNull(okHttpClient68);
        org.junit.Assert.assertNotNull(okHttpClient70);
        org.junit.Assert.assertNotNull(okAuthenticator71);
        org.junit.Assert.assertNotNull(okHttpClient72);
        org.junit.Assert.assertNotNull(okHttpClient73);
        org.junit.Assert.assertNotNull(okHttpClient74);
    }

    @Test
    public void test12070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12070");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.ConnectionPool connectionPool12 = okHttpClient0.connectionPool;
        java.util.List<java.lang.String> strList13 = okHttpClient0.getTransports();
        java.net.CookieHandler cookieHandler14 = null;
        okHttpClient0.cookieHandler = cookieHandler14;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        java.net.CookieHandler cookieHandler17 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient16.setCookieHandler(cookieHandler17);
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache19 = okHttpClient16.okResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient20 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier21 = null;
        okHttpClient20.hostnameVerifier = hostnameVerifier21;
        java.net.ResponseCache responseCache23 = null;
        okHttpClient20.responseCache = responseCache23;
        java.util.List<java.lang.String> strList25 = okHttpClient20.transports;
        java.net.Proxy proxy26 = java.net.Proxy.NO_PROXY;
        boolean boolean28 = proxy26.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type29 = proxy26.type();
        java.net.SocketAddress socketAddress30 = proxy26.address();
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient20.setProxy(proxy26);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory32 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient31.setSSLSocketFactory(sSLSocketFactory32);
        java.net.CookieHandler cookieHandler34 = okHttpClient31.cookieHandler;
        java.net.ProxySelector proxySelector35 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient31.setProxySelector(proxySelector35);
        java.net.ResponseCache responseCache37 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient31.setResponseCache(responseCache37);
        com.squareup.okhttp.ConnectionPool connectionPool41 = new com.squareup.okhttp.ConnectionPool((int) '4', (long) 1);
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient38.setConnectionPool(connectionPool41);
        java.util.List<java.lang.String> strList43 = okHttpClient42.transports;
        java.net.ResponseCache responseCache44 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient45 = okHttpClient42.setResponseCache(responseCache44);
        com.squareup.okhttp.OkHttpClient okHttpClient46 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier47 = null;
        okHttpClient46.hostnameVerifier = hostnameVerifier47;
        java.net.ResponseCache responseCache49 = null;
        okHttpClient46.responseCache = responseCache49;
        javax.net.ssl.HostnameVerifier hostnameVerifier51 = okHttpClient46.hostnameVerifier;
        java.net.Proxy proxy52 = okHttpClient46.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool55 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient46.connectionPool = connectionPool55;
        com.squareup.okhttp.OkHttpClient okHttpClient57 = okHttpClient46.copyWithDefaults();
        java.net.ResponseCache responseCache58 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient59 = okHttpClient57.setResponseCache(responseCache58);
        com.squareup.okhttp.OkHttpClient okHttpClient61 = okHttpClient59.setFollowProtocolRedirects(false);
        java.net.CookieHandler cookieHandler62 = okHttpClient61.cookieHandler;
        boolean boolean63 = okHttpClient61.getFollowProtocolRedirects();
        java.util.List<java.lang.String> strList64 = okHttpClient61.getTransports();
        com.squareup.okhttp.OkAuthenticator okAuthenticator65 = okHttpClient61.getAuthenticator();
        okHttpClient45.authenticator = okAuthenticator65;
        okHttpClient16.authenticator = okAuthenticator65;
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNull(okResponseCache19);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNotNull(proxy26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + type29 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type29.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress30);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNotNull(okHttpClient33);
        org.junit.Assert.assertNull(cookieHandler34);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNotNull(okHttpClient42);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNotNull(okHttpClient45);
        org.junit.Assert.assertNull(hostnameVerifier51);
        org.junit.Assert.assertNull(proxy52);
        org.junit.Assert.assertNotNull(okHttpClient57);
        org.junit.Assert.assertNotNull(okHttpClient59);
        org.junit.Assert.assertNotNull(okHttpClient61);
        org.junit.Assert.assertNull(cookieHandler62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(strList64);
        org.junit.Assert.assertNotNull(okAuthenticator65);
    }

    @Test
    public void test12071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12071");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        com.squareup.okhttp.ConnectionPool connectionPool8 = okHttpClient0.connectionPool;
        boolean boolean9 = okHttpClient0.getFollowProtocolRedirects();
        java.net.ResponseCache responseCache10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setResponseCache(responseCache10);
        com.squareup.okhttp.OkAuthenticator okAuthenticator12 = okHttpClient11.getAuthenticator();
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient(okHttpClient11);
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient13.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient(okHttpClient14);
        java.net.URL uRL16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.HttpURLConnection httpURLConnection17 = okHttpClient15.open(uRL16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNotNull(connectionPool8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(okAuthenticator12);
        org.junit.Assert.assertNotNull(okHttpClient14);
    }

    @Test
    public void test12072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12072");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.CookieHandler cookieHandler8 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache9 = okHttpClient0.okResponseCache();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory10 = null;
        okHttpClient0.sslSocketFactory = sSLSocketFactory10;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory12);
        java.net.CookieHandler cookieHandler14 = okHttpClient0.cookieHandler;
        java.net.Proxy proxy15 = okHttpClient0.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient16 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier17 = null;
        okHttpClient16.hostnameVerifier = hostnameVerifier17;
        java.net.ResponseCache responseCache19 = null;
        okHttpClient16.responseCache = responseCache19;
        javax.net.ssl.HostnameVerifier hostnameVerifier21 = okHttpClient16.hostnameVerifier;
        java.net.Proxy proxy22 = okHttpClient16.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient23 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache24 = okHttpClient23.okResponseCache();
        java.net.ResponseCache responseCache25 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient23.setResponseCache(responseCache25);
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList29 = new java.util.ArrayList<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        okHttpClient23.transports = strList29;
        okHttpClient16.transports = strList29;
        com.squareup.okhttp.OkHttpClient.DEFAULT_TRANSPORTS = strList29;
        okHttpClient0.transports = strList29;
        com.squareup.okhttp.OkHttpClient.DEFAULT_TRANSPORTS = strList29;
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNull(cookieHandler8);
        org.junit.Assert.assertNull(okResponseCache9);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNull(cookieHandler14);
        org.junit.Assert.assertNull(proxy15);
        org.junit.Assert.assertNull(hostnameVerifier21);
        org.junit.Assert.assertNull(proxy22);
        org.junit.Assert.assertNull(okResponseCache24);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    }

    @Test
    public void test12073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12073");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.net.ResponseCache responseCache5 = okHttpClient0.responseCache;
        java.net.CookieHandler cookieHandler6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient0.setCookieHandler(cookieHandler6);
        java.util.List<java.lang.String> strList8 = okHttpClient0.transports;
        java.net.ProxySelector proxySelector9 = null;
        okHttpClient0.proxySelector = proxySelector9;
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(responseCache5);
        org.junit.Assert.assertNotNull(okHttpClient7);
        org.junit.Assert.assertNull(strList8);
    }

    @Test
    public void test12074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12074");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.CookieHandler cookieHandler8 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache9 = okHttpClient0.okResponseCache();
        java.net.CookieHandler cookieHandler10 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory12 = okHttpClient11.sslSocketFactory;
        java.net.Proxy proxy13 = okHttpClient11.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient11.setFollowProtocolRedirects(true);
        com.squareup.okhttp.OkHttpClient okHttpClient16 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool17 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient16.connectionPool = connectionPool17;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier20 = null;
        okHttpClient19.hostnameVerifier = hostnameVerifier20;
        java.net.ResponseCache responseCache22 = null;
        okHttpClient19.responseCache = responseCache22;
        java.util.List<java.lang.String> strList24 = okHttpClient19.transports;
        com.squareup.okhttp.ConnectionPool connectionPool25 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient19.connectionPool = connectionPool25;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient16.setConnectionPool(connectionPool25);
        int int28 = connectionPool25.getConnectionCount();
        int int29 = connectionPool25.getSpdyConnectionCount();
        int int30 = connectionPool25.getSpdyConnectionCount();
        com.squareup.okhttp.Address address31 = null;
        com.squareup.okhttp.Connection connection32 = connectionPool25.get(address31);
        int int33 = connectionPool25.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient15.setConnectionPool(connectionPool25);
        java.net.ResponseCache responseCache35 = okHttpClient34.responseCache;
        com.squareup.okhttp.OkHttpClient okHttpClient36 = new com.squareup.okhttp.OkHttpClient(okHttpClient34);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNull(cookieHandler8);
        org.junit.Assert.assertNull(okResponseCache9);
        org.junit.Assert.assertNull(cookieHandler10);
        org.junit.Assert.assertNull(sSLSocketFactory12);
        org.junit.Assert.assertNull(proxy13);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNotNull(connectionPool17);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNotNull(connectionPool25);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNull(connection32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertNull(responseCache35);
    }

    @Test
    public void test12075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12075");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.OkAuthenticator okAuthenticator12 = okHttpClient11.getAuthenticator();
        java.net.ProxySelector proxySelector13 = okHttpClient11.getProxySelector();
        java.net.ResponseCache responseCache14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient11.setResponseCache(responseCache14);
        java.net.CookieHandler cookieHandler16 = null;
        okHttpClient15.cookieHandler = cookieHandler16;
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = okHttpClient15.getHostnameVerifier();
        java.net.ResponseCache responseCache19 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient15.setResponseCache(responseCache19);
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache21 = okHttpClient20.okResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier23 = null;
        okHttpClient22.hostnameVerifier = hostnameVerifier23;
        java.net.ResponseCache responseCache25 = null;
        okHttpClient22.responseCache = responseCache25;
        java.util.List<java.lang.String> strList27 = okHttpClient22.transports;
        com.squareup.okhttp.ConnectionPool connectionPool28 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient22.connectionPool = connectionPool28;
        java.net.CookieHandler cookieHandler30 = okHttpClient22.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache31 = okHttpClient22.okResponseCache();
        java.net.CookieHandler cookieHandler32 = okHttpClient22.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient33 = new com.squareup.okhttp.OkHttpClient(okHttpClient22);
        java.net.Proxy proxy34 = java.net.Proxy.NO_PROXY;
        boolean boolean36 = proxy34.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type37 = proxy34.type();
        java.net.SocketAddress socketAddress38 = proxy34.address();
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient22.setProxy(proxy34);
        com.squareup.okhttp.OkHttpClient okHttpClient40 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier41 = null;
        okHttpClient40.hostnameVerifier = hostnameVerifier41;
        java.net.ResponseCache responseCache43 = null;
        okHttpClient40.responseCache = responseCache43;
        java.util.List<java.lang.String> strList45 = okHttpClient40.transports;
        com.squareup.okhttp.ConnectionPool connectionPool46 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient40.connectionPool = connectionPool46;
        com.squareup.okhttp.OkHttpClient okHttpClient48 = okHttpClient40.copyWithDefaults();
        java.net.ProxySelector proxySelector49 = okHttpClient48.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory50 = okHttpClient48.getSslSocketFactory();
        okHttpClient39.sslSocketFactory = sSLSocketFactory50;
        java.lang.String[] strArray52 = sSLSocketFactory50.getDefaultCipherSuites();
        java.lang.String[] strArray53 = sSLSocketFactory50.getSupportedCipherSuites();
        java.lang.String[] strArray54 = sSLSocketFactory50.getDefaultCipherSuites();
        java.net.Socket socket55 = sSLSocketFactory50.createSocket();
        java.lang.String[] strArray56 = sSLSocketFactory50.getDefaultCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient57 = okHttpClient20.setSSLSocketFactory(sSLSocketFactory50);
        java.net.InetAddress inetAddress58 = null;
        java.net.InetAddress inetAddress60 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket62 = sSLSocketFactory50.createSocket(inetAddress58, (int) 'a', inetAddress60, 1);
            org.junit.Assert.fail("Expected exception of type java.net.BindException; message: Permission denied (Bind failed)");
        } catch (java.net.BindException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(okAuthenticator12);
        org.junit.Assert.assertNull(proxySelector13);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNull(hostnameVerifier18);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNull(okResponseCache21);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNotNull(connectionPool28);
        org.junit.Assert.assertNull(cookieHandler30);
        org.junit.Assert.assertNull(okResponseCache31);
        org.junit.Assert.assertNull(cookieHandler32);
        org.junit.Assert.assertNotNull(proxy34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + type37 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type37.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress38);
        org.junit.Assert.assertNotNull(okHttpClient39);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNotNull(connectionPool46);
        org.junit.Assert.assertNotNull(okHttpClient48);
// flaky:         org.junit.Assert.assertNull(proxySelector49);
        org.junit.Assert.assertNotNull(sSLSocketFactory50);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(socket55);
        org.junit.Assert.assertEquals(socket55.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(okHttpClient57);
    }

    @Test
    public void test12076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12076");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient0.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.copyWithDefaults();
        java.net.Proxy proxy12 = okHttpClient11.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier13 = okHttpClient11.getHostnameVerifier();
        com.squareup.okhttp.ConnectionPool connectionPool14 = null;
        okHttpClient11.connectionPool = connectionPool14;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier17 = null;
        okHttpClient16.hostnameVerifier = hostnameVerifier17;
        java.net.ResponseCache responseCache19 = null;
        okHttpClient16.responseCache = responseCache19;
        java.util.List<java.lang.String> strList21 = okHttpClient16.transports;
        com.squareup.okhttp.ConnectionPool connectionPool22 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient16.connectionPool = connectionPool22;
        java.net.CookieHandler cookieHandler24 = okHttpClient16.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache25 = okHttpClient16.okResponseCache();
        java.net.CookieHandler cookieHandler26 = okHttpClient16.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient27 = new com.squareup.okhttp.OkHttpClient(okHttpClient16);
        com.squareup.okhttp.OkHttpClient okHttpClient28 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier29 = null;
        okHttpClient28.hostnameVerifier = hostnameVerifier29;
        java.net.ProxySelector proxySelector31 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient28.setProxySelector(proxySelector31);
        java.net.CookieHandler cookieHandler33 = okHttpClient28.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient34 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier35 = null;
        okHttpClient34.hostnameVerifier = hostnameVerifier35;
        java.net.ResponseCache responseCache37 = null;
        okHttpClient34.responseCache = responseCache37;
        java.util.List<java.lang.String> strList39 = okHttpClient34.transports;
        com.squareup.okhttp.ConnectionPool connectionPool40 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient34.connectionPool = connectionPool40;
        java.net.Proxy proxy42 = null;
        okHttpClient34.proxy = proxy42;
        java.util.Set<com.squareup.okhttp.Route> routeSet44 = okHttpClient34.failedRoutes;
        okHttpClient28.failedRoutes = routeSet44;
        okHttpClient27.failedRoutes = routeSet44;
        java.util.List<java.lang.String> strList47 = okHttpClient27.getTransports();
        java.net.ResponseCache responseCache48 = null;
        okHttpClient27.responseCache = responseCache48;
        java.net.Proxy proxy50 = java.net.Proxy.NO_PROXY;
        boolean boolean52 = proxy50.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type53 = proxy50.type();
        java.net.Proxy.Type type54 = proxy50.type();
        okHttpClient27.proxy = proxy50;
        okHttpClient11.proxy = proxy50;
        java.net.CookieHandler cookieHandler57 = null;
        okHttpClient11.cookieHandler = cookieHandler57;
        com.squareup.okhttp.OkHttpClient okHttpClient59 = new com.squareup.okhttp.OkHttpClient(okHttpClient11);
        com.squareup.okhttp.ConnectionPool connectionPool60 = okHttpClient59.connectionPool;
        java.net.ResponseCache responseCache61 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient62 = okHttpClient59.setResponseCache(responseCache61);
        java.net.URL uRL63 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.HttpURLConnection httpURLConnection64 = okHttpClient62.open(uRL63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(proxy12);
        org.junit.Assert.assertNotNull(hostnameVerifier13);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(connectionPool22);
        org.junit.Assert.assertNull(cookieHandler24);
        org.junit.Assert.assertNull(okResponseCache25);
        org.junit.Assert.assertNull(cookieHandler26);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertNull(cookieHandler33);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNotNull(connectionPool40);
        org.junit.Assert.assertNotNull(routeSet44);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNotNull(proxy50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + type53 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type53.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertTrue("'" + type54 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type54.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(connectionPool60);
        org.junit.Assert.assertNotNull(okHttpClient62);
    }

    @Test
    public void test12077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12077");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.CookieHandler cookieHandler5 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = null;
        okHttpClient6.hostnameVerifier = hostnameVerifier7;
        java.net.ResponseCache responseCache9 = null;
        okHttpClient6.responseCache = responseCache9;
        java.util.List<java.lang.String> strList11 = okHttpClient6.transports;
        com.squareup.okhttp.ConnectionPool connectionPool12 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient6.connectionPool = connectionPool12;
        java.net.Proxy proxy14 = null;
        okHttpClient6.proxy = proxy14;
        java.util.Set<com.squareup.okhttp.Route> routeSet16 = okHttpClient6.failedRoutes;
        okHttpClient0.failedRoutes = routeSet16;
        java.net.ProxySelector proxySelector18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient0.setProxySelector(proxySelector18);
        javax.net.ssl.HostnameVerifier hostnameVerifier20 = okHttpClient19.getHostnameVerifier();
        com.squareup.okhttp.ConnectionPool connectionPool21 = com.squareup.okhttp.ConnectionPool.getDefault();
        com.squareup.okhttp.Address address22 = null;
        com.squareup.okhttp.Connection connection23 = connectionPool21.get(address22);
        int int24 = connectionPool21.getSpdyConnectionCount();
        connectionPool21.evictAll();
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient19.setConnectionPool(connectionPool21);
        java.net.Proxy proxy27 = okHttpClient26.proxy;
        java.net.ProxySelector proxySelector28 = okHttpClient26.getProxySelector();
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNotNull(routeSet16);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNull(hostnameVerifier20);
        org.junit.Assert.assertNotNull(connectionPool21);
        org.junit.Assert.assertNull(connection23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNull(proxy27);
        org.junit.Assert.assertNull(proxySelector28);
    }

    @Test
    public void test12078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12078");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.OkAuthenticator okAuthenticator12 = okHttpClient11.getAuthenticator();
        java.net.ProxySelector proxySelector13 = okHttpClient11.getProxySelector();
        java.net.ResponseCache responseCache14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient11.setResponseCache(responseCache14);
        java.net.CookieHandler cookieHandler16 = null;
        okHttpClient15.cookieHandler = cookieHandler16;
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = okHttpClient15.getHostnameVerifier();
        com.squareup.okhttp.ConnectionPool connectionPool19 = okHttpClient15.connectionPool;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = new com.squareup.okhttp.OkHttpClient(okHttpClient15);
        com.squareup.okhttp.OkHttpClient okHttpClient21 = new com.squareup.okhttp.OkHttpClient(okHttpClient15);
        com.squareup.okhttp.OkAuthenticator okAuthenticator22 = okHttpClient15.getAuthenticator();
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(okAuthenticator12);
        org.junit.Assert.assertNull(proxySelector13);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNull(hostnameVerifier18);
        org.junit.Assert.assertNotNull(connectionPool19);
        org.junit.Assert.assertNull(okAuthenticator22);
    }

    @Test
    public void test12079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12079");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.net.Proxy proxy5 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress6 = proxy5.address();
        java.net.SocketAddress socketAddress7 = proxy5.address();
        okHttpClient0.proxy = proxy5;
        com.squareup.okhttp.ConnectionPool connectionPool11 = new com.squareup.okhttp.ConnectionPool((-1), (long) '#');
        com.squareup.okhttp.Address address12 = null;
        com.squareup.okhttp.Connection connection13 = connectionPool11.get(address12);
        int int14 = connectionPool11.getSpdyConnectionCount();
        connectionPool11.evictAll();
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient0.setConnectionPool(connectionPool11);
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = null;
        okHttpClient17.hostnameVerifier = hostnameVerifier18;
        java.net.ProxySelector proxySelector20 = okHttpClient17.proxySelector;
        java.net.ProxySelector proxySelector21 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient17.setProxySelector(proxySelector21);
        com.squareup.okhttp.OkHttpClient okHttpClient23 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier24 = null;
        okHttpClient23.hostnameVerifier = hostnameVerifier24;
        java.net.ResponseCache responseCache26 = null;
        okHttpClient23.responseCache = responseCache26;
        java.util.List<java.lang.String> strList28 = okHttpClient23.transports;
        com.squareup.okhttp.ConnectionPool connectionPool29 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient23.connectionPool = connectionPool29;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient23.copyWithDefaults();
        java.net.ProxySelector proxySelector32 = okHttpClient31.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory33 = okHttpClient31.getSslSocketFactory();
        okHttpClient17.sslSocketFactory = sSLSocketFactory33;
        okHttpClient0.sslSocketFactory = sSLSocketFactory33;
        com.squareup.okhttp.OkHttpClient okHttpClient36 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier37 = null;
        okHttpClient36.hostnameVerifier = hostnameVerifier37;
        java.net.ResponseCache responseCache39 = null;
        okHttpClient36.responseCache = responseCache39;
        java.util.List<java.lang.String> strList41 = okHttpClient36.transports;
        com.squareup.okhttp.ConnectionPool connectionPool42 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient36.connectionPool = connectionPool42;
        com.squareup.okhttp.OkHttpClient okHttpClient44 = okHttpClient36.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient45 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier46 = null;
        okHttpClient45.hostnameVerifier = hostnameVerifier46;
        java.net.ResponseCache responseCache48 = null;
        okHttpClient45.responseCache = responseCache48;
        java.util.List<java.lang.String> strList50 = okHttpClient45.transports;
        com.squareup.okhttp.ConnectionPool connectionPool51 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient45.connectionPool = connectionPool51;
        com.squareup.okhttp.OkHttpClient okHttpClient53 = okHttpClient45.copyWithDefaults();
        java.net.ProxySelector proxySelector54 = okHttpClient53.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory55 = okHttpClient53.getSslSocketFactory();
        okHttpClient36.sslSocketFactory = sSLSocketFactory55;
        java.net.Socket socket57 = sSLSocketFactory55.createSocket();
        okHttpClient0.sslSocketFactory = sSLSocketFactory55;
        java.lang.String[] strArray59 = sSLSocketFactory55.getSupportedCipherSuites();
        java.net.Socket socket60 = sSLSocketFactory55.createSocket();
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket63 = sSLSocketFactory55.createSocket("", (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.net.ConnectException; message: Connection refused (Connection refused)");
        } catch (java.net.ConnectException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNotNull(proxy5);
        org.junit.Assert.assertNull(socketAddress6);
        org.junit.Assert.assertNull(socketAddress7);
        org.junit.Assert.assertNull(connection13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNull(proxySelector20);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNotNull(connectionPool29);
        org.junit.Assert.assertNotNull(okHttpClient31);
// flaky:         org.junit.Assert.assertNull(proxySelector32);
        org.junit.Assert.assertNotNull(sSLSocketFactory33);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(connectionPool42);
        org.junit.Assert.assertNotNull(okHttpClient44);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNotNull(connectionPool51);
        org.junit.Assert.assertNotNull(okHttpClient53);
// flaky:         org.junit.Assert.assertNull(proxySelector54);
        org.junit.Assert.assertNotNull(sSLSocketFactory55);
        org.junit.Assert.assertNotNull(socket57);
        org.junit.Assert.assertEquals(socket57.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(socket60);
        org.junit.Assert.assertEquals(socket60.toString(), "Socket[unconnected]");
    }

    @Test
    public void test12080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12080");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache1 = okHttpClient0.okResponseCache();
        java.net.ResponseCache responseCache2 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.setResponseCache(responseCache2);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory4 = okHttpClient0.sslSocketFactory;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory5 = okHttpClient0.sslSocketFactory;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory6 = okHttpClient0.sslSocketFactory;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = null;
        okHttpClient7.hostnameVerifier = hostnameVerifier8;
        java.net.ResponseCache responseCache10 = null;
        okHttpClient7.responseCache = responseCache10;
        java.util.List<java.lang.String> strList12 = okHttpClient7.transports;
        com.squareup.okhttp.ConnectionPool connectionPool13 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient7.connectionPool = connectionPool13;
        java.net.Proxy proxy15 = null;
        okHttpClient7.proxy = proxy15;
        boolean boolean17 = okHttpClient7.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient(okHttpClient7);
        java.net.ProxySelector proxySelector19 = okHttpClient18.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier20 = okHttpClient18.hostnameVerifier;
        java.net.Proxy proxy21 = java.net.Proxy.NO_PROXY;
        boolean boolean23 = proxy21.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type24 = proxy21.type();
        java.net.Proxy.Type type25 = proxy21.type();
        okHttpClient18.proxy = proxy21;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier28 = null;
        okHttpClient27.hostnameVerifier = hostnameVerifier28;
        java.net.ResponseCache responseCache30 = null;
        okHttpClient27.responseCache = responseCache30;
        java.util.List<java.lang.String> strList32 = okHttpClient27.transports;
        com.squareup.okhttp.ConnectionPool connectionPool33 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient27.connectionPool = connectionPool33;
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient27.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient36 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier37 = null;
        okHttpClient36.hostnameVerifier = hostnameVerifier37;
        java.net.ResponseCache responseCache39 = null;
        okHttpClient36.responseCache = responseCache39;
        java.util.List<java.lang.String> strList41 = okHttpClient36.transports;
        com.squareup.okhttp.ConnectionPool connectionPool42 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient36.connectionPool = connectionPool42;
        com.squareup.okhttp.OkHttpClient okHttpClient44 = okHttpClient36.copyWithDefaults();
        java.net.ProxySelector proxySelector45 = okHttpClient44.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory46 = okHttpClient44.getSslSocketFactory();
        okHttpClient27.sslSocketFactory = sSLSocketFactory46;
        okHttpClient18.sslSocketFactory = sSLSocketFactory46;
        com.squareup.okhttp.OkHttpClient okHttpClient49 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory46);
        java.net.CookieHandler cookieHandler50 = null;
        okHttpClient49.cookieHandler = cookieHandler50;
        org.junit.Assert.assertNull(okResponseCache1);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertNull(sSLSocketFactory4);
        org.junit.Assert.assertNull(sSLSocketFactory5);
        org.junit.Assert.assertNull(sSLSocketFactory6);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(connectionPool13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(proxySelector19);
        org.junit.Assert.assertNull(hostnameVerifier20);
        org.junit.Assert.assertNotNull(proxy21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + type24 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type24.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertTrue("'" + type25 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type25.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNotNull(connectionPool33);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(connectionPool42);
        org.junit.Assert.assertNotNull(okHttpClient44);
// flaky:         org.junit.Assert.assertNull(proxySelector45);
        org.junit.Assert.assertNotNull(sSLSocketFactory46);
        org.junit.Assert.assertNotNull(okHttpClient49);
    }

    @Test
    public void test12081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12081");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient0.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.copyWithDefaults();
        java.net.ResponseCache responseCache12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setResponseCache(responseCache12);
        java.net.ProxySelector proxySelector14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient11.setProxySelector(proxySelector14);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory16 = okHttpClient15.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient(okHttpClient15);
        com.squareup.okhttp.ConnectionPool connectionPool18 = okHttpClient15.getConnectionPool();
        java.net.ResponseCache responseCache19 = okHttpClient15.responseCache;
        java.net.CookieHandler cookieHandler20 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient15.setCookieHandler(cookieHandler20);
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier23 = null;
        okHttpClient22.hostnameVerifier = hostnameVerifier23;
        java.net.ProxySelector proxySelector25 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient22.setProxySelector(proxySelector25);
        java.net.ResponseCache responseCache27 = null;
        okHttpClient26.responseCache = responseCache27;
        javax.net.ssl.HostnameVerifier hostnameVerifier29 = okHttpClient26.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient26.setFollowProtocolRedirects(false);
        java.net.ProxySelector proxySelector32 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient31.setProxySelector(proxySelector32);
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient33.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool37 = new com.squareup.okhttp.ConnectionPool(10, 0L);
        int int38 = connectionPool37.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient34.setConnectionPool(connectionPool37);
        com.squareup.okhttp.ConnectionPool connectionPool40 = okHttpClient34.connectionPool;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory41 = okHttpClient34.sslSocketFactory;
        okHttpClient21.sslSocketFactory = sSLSocketFactory41;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket45 = sSLSocketFactory41.createSocket("DIRECT", (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.net.UnknownHostException; message: DIRECT");
        } catch (java.net.UnknownHostException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNotNull(sSLSocketFactory16);
        org.junit.Assert.assertNotNull(connectionPool18);
        org.junit.Assert.assertNull(responseCache19);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNull(hostnameVerifier29);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNotNull(okHttpClient33);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(okHttpClient39);
        org.junit.Assert.assertNotNull(connectionPool40);
        org.junit.Assert.assertNotNull(sSLSocketFactory41);
    }

    @Test
    public void test12082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12082");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        com.squareup.okhttp.ConnectionPool connectionPool8 = okHttpClient0.connectionPool;
        boolean boolean9 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient10 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier11 = null;
        okHttpClient10.hostnameVerifier = hostnameVerifier11;
        java.net.ResponseCache responseCache13 = null;
        okHttpClient10.responseCache = responseCache13;
        javax.net.ssl.HostnameVerifier hostnameVerifier15 = okHttpClient10.hostnameVerifier;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory16 = okHttpClient10.sslSocketFactory;
        java.net.CookieHandler cookieHandler17 = okHttpClient10.cookieHandler;
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = okHttpClient10.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool20 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient19.connectionPool = connectionPool20;
        com.squareup.okhttp.OkAuthenticator okAuthenticator22 = null;
        okHttpClient19.authenticator = okAuthenticator22;
        java.util.List<java.lang.String> strList24 = okHttpClient19.transports;
        java.net.ResponseCache responseCache25 = null;
        okHttpClient19.responseCache = responseCache25;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier28 = null;
        okHttpClient27.hostnameVerifier = hostnameVerifier28;
        java.net.ResponseCache responseCache30 = null;
        okHttpClient27.responseCache = responseCache30;
        javax.net.ssl.HostnameVerifier hostnameVerifier32 = okHttpClient27.hostnameVerifier;
        java.net.Proxy proxy33 = okHttpClient27.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool36 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient27.connectionPool = connectionPool36;
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient27.copyWithDefaults();
        java.net.Proxy proxy39 = okHttpClient38.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier40 = okHttpClient38.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient41 = okHttpClient19.setHostnameVerifier(hostnameVerifier40);
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient10.setHostnameVerifier(hostnameVerifier40);
        com.squareup.okhttp.OkHttpClient okHttpClient43 = okHttpClient0.setHostnameVerifier(hostnameVerifier40);
        com.squareup.okhttp.OkHttpClient okHttpClient44 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier45 = null;
        okHttpClient44.hostnameVerifier = hostnameVerifier45;
        java.net.ProxySelector proxySelector47 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient48 = okHttpClient44.setProxySelector(proxySelector47);
        com.squareup.okhttp.OkHttpClient okHttpClient49 = okHttpClient48.copyWithDefaults();
        com.squareup.okhttp.Route[] routeArray50 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet51 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet51, routeArray50);
        okHttpClient49.failedRoutes = routeSet51;
        okHttpClient0.failedRoutes = routeSet51;
        java.net.CookieHandler cookieHandler55 = okHttpClient0.cookieHandler;
        java.net.CookieHandler cookieHandler56 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient57 = okHttpClient0.setCookieHandler(cookieHandler56);
        java.net.CookieHandler cookieHandler58 = okHttpClient0.cookieHandler;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory59 = okHttpClient0.getSslSocketFactory();
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNotNull(connectionPool8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(hostnameVerifier15);
        org.junit.Assert.assertNull(sSLSocketFactory16);
        org.junit.Assert.assertNull(cookieHandler17);
        org.junit.Assert.assertNull(hostnameVerifier18);
        org.junit.Assert.assertNotNull(connectionPool20);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNull(hostnameVerifier32);
        org.junit.Assert.assertNull(proxy33);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNull(proxy39);
        org.junit.Assert.assertNotNull(hostnameVerifier40);
        org.junit.Assert.assertNotNull(okHttpClient41);
        org.junit.Assert.assertNotNull(okHttpClient42);
        org.junit.Assert.assertNotNull(okHttpClient43);
        org.junit.Assert.assertNotNull(okHttpClient48);
        org.junit.Assert.assertNotNull(okHttpClient49);
        org.junit.Assert.assertNotNull(routeArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(cookieHandler55);
        org.junit.Assert.assertNotNull(okHttpClient57);
        org.junit.Assert.assertNull(cookieHandler58);
        org.junit.Assert.assertNull(sSLSocketFactory59);
    }

    @Test
    public void test12083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12083");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.CookieHandler cookieHandler8 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache9 = okHttpClient0.okResponseCache();
        java.net.CookieHandler cookieHandler10 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        java.net.Proxy proxy12 = java.net.Proxy.NO_PROXY;
        boolean boolean14 = proxy12.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type15 = proxy12.type();
        java.net.SocketAddress socketAddress16 = proxy12.address();
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient0.setProxy(proxy12);
        com.squareup.okhttp.ConnectionPool connectionPool18 = okHttpClient0.connectionPool;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        com.squareup.okhttp.OkHttpClient okHttpClient20 = new com.squareup.okhttp.OkHttpClient(okHttpClient19);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNull(cookieHandler8);
        org.junit.Assert.assertNull(okResponseCache9);
        org.junit.Assert.assertNull(cookieHandler10);
        org.junit.Assert.assertNotNull(proxy12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + type15 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type15.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress16);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNotNull(connectionPool18);
    }

    @Test
    public void test12084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12084");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.ResponseCache responseCache5 = null;
        okHttpClient4.responseCache = responseCache5;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient4.setSSLSocketFactory(sSLSocketFactory7);
        com.squareup.okhttp.OkHttpClient okHttpClient9 = new com.squareup.okhttp.OkHttpClient(okHttpClient8);
        com.squareup.okhttp.OkHttpClient okHttpClient10 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool11 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient10.connectionPool = connectionPool11;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = null;
        okHttpClient13.hostnameVerifier = hostnameVerifier14;
        java.net.ResponseCache responseCache16 = null;
        okHttpClient13.responseCache = responseCache16;
        java.util.List<java.lang.String> strList18 = okHttpClient13.transports;
        com.squareup.okhttp.ConnectionPool connectionPool19 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient13.connectionPool = connectionPool19;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient10.setConnectionPool(connectionPool19);
        java.net.ResponseCache responseCache22 = okHttpClient10.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory23 = okHttpClient10.sslSocketFactory;
        java.net.CookieHandler cookieHandler24 = okHttpClient10.getCookieHandler();
        com.squareup.okhttp.OkAuthenticator okAuthenticator25 = okHttpClient10.authenticator;
        java.util.Set<com.squareup.okhttp.Route> routeSet26 = okHttpClient10.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = new com.squareup.okhttp.OkHttpClient(okHttpClient10);
        java.util.Set<com.squareup.okhttp.Route> routeSet28 = okHttpClient10.failedRoutes;
        okHttpClient8.failedRoutes = routeSet28;
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertNotNull(connectionPool11);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(connectionPool19);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNull(responseCache22);
        org.junit.Assert.assertNull(sSLSocketFactory23);
        org.junit.Assert.assertNull(cookieHandler24);
        org.junit.Assert.assertNull(okAuthenticator25);
        org.junit.Assert.assertNotNull(routeSet26);
        org.junit.Assert.assertNotNull(routeSet28);
    }

    @Test
    public void test12085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12085");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient4.copyWithDefaults();
        java.net.CookieHandler cookieHandler6 = null;
        okHttpClient4.cookieHandler = cookieHandler6;
        java.net.CookieHandler cookieHandler8 = null;
        okHttpClient4.cookieHandler = cookieHandler8;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = new com.squareup.okhttp.OkHttpClient(okHttpClient4);
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = null;
        okHttpClient11.hostnameVerifier = hostnameVerifier12;
        java.net.ResponseCache responseCache14 = null;
        okHttpClient11.responseCache = responseCache14;
        javax.net.ssl.HostnameVerifier hostnameVerifier16 = okHttpClient11.hostnameVerifier;
        java.net.Proxy proxy17 = okHttpClient11.getProxy();
        java.net.CookieHandler cookieHandler18 = null;
        okHttpClient11.cookieHandler = cookieHandler18;
        okHttpClient11.followProtocolRedirects = true;
        java.net.CookieHandler cookieHandler22 = okHttpClient11.getCookieHandler();
        java.net.CookieHandler cookieHandler23 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient11.setCookieHandler(cookieHandler23);
        java.net.ProxySelector proxySelector25 = okHttpClient24.getProxySelector();
        com.squareup.okhttp.OkHttpClient okHttpClient26 = new com.squareup.okhttp.OkHttpClient(okHttpClient24);
        javax.net.ssl.HostnameVerifier hostnameVerifier27 = okHttpClient26.hostnameVerifier;
        javax.net.ssl.HostnameVerifier hostnameVerifier28 = okHttpClient26.hostnameVerifier;
        java.net.CookieHandler cookieHandler29 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient30 = okHttpClient26.setCookieHandler(cookieHandler29);
        com.squareup.okhttp.OkHttpClient okHttpClient31 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier32 = null;
        okHttpClient31.hostnameVerifier = hostnameVerifier32;
        boolean boolean34 = okHttpClient31.getFollowProtocolRedirects();
        java.net.Proxy proxy35 = okHttpClient31.proxy;
        java.util.List<java.lang.String> strList36 = okHttpClient31.transports;
        java.util.List<java.lang.String> strList37 = com.squareup.okhttp.OkHttpClient.DEFAULT_TRANSPORTS;
        okHttpClient31.transports = strList37;
        com.squareup.okhttp.OkHttpClient.DEFAULT_TRANSPORTS = strList37;
        com.squareup.okhttp.OkHttpClient.DEFAULT_TRANSPORTS = strList37;
        okHttpClient26.transports = strList37;
        // The following exception was thrown during execution in test generation
        try {
            com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient4.setTransports(strList37);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: transports doesn't contain http/1.1: [hi!]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(hostnameVerifier16);
        org.junit.Assert.assertNull(proxy17);
        org.junit.Assert.assertNull(cookieHandler22);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNull(proxySelector25);
        org.junit.Assert.assertNull(hostnameVerifier27);
        org.junit.Assert.assertNull(hostnameVerifier28);
        org.junit.Assert.assertNotNull(okHttpClient30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(proxy35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNotNull(strList37);
    }

    @Test
    public void test12086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12086");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.ConnectionPool connectionPool12 = okHttpClient11.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator13 = okHttpClient11.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool16 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient11.connectionPool = connectionPool16;
        java.net.ResponseCache responseCache18 = okHttpClient11.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory19 = okHttpClient11.sslSocketFactory;
        java.net.Proxy proxy20 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress21 = proxy20.address();
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient11.setProxy(proxy20);
        com.squareup.okhttp.OkHttpClient okHttpClient23 = new com.squareup.okhttp.OkHttpClient(okHttpClient22);
        com.squareup.okhttp.OkHttpClient okHttpClient24 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier25 = null;
        okHttpClient24.hostnameVerifier = hostnameVerifier25;
        java.net.ResponseCache responseCache27 = null;
        okHttpClient24.responseCache = responseCache27;
        java.util.List<java.lang.String> strList29 = okHttpClient24.transports;
        com.squareup.okhttp.ConnectionPool connectionPool30 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient24.connectionPool = connectionPool30;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient24.copyWithDefaults();
        java.net.ProxySelector proxySelector33 = okHttpClient32.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory34 = okHttpClient32.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient22.setSSLSocketFactory(sSLSocketFactory34);
        java.lang.String[] strArray36 = sSLSocketFactory34.getSupportedCipherSuites();
        java.lang.String[] strArray37 = sSLSocketFactory34.getSupportedCipherSuites();
        java.lang.String[] strArray38 = sSLSocketFactory34.getSupportedCipherSuites();
        java.lang.String[] strArray39 = sSLSocketFactory34.getDefaultCipherSuites();
        java.lang.String[] strArray40 = sSLSocketFactory34.getDefaultCipherSuites();
        java.net.InetAddress inetAddress43 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket45 = sSLSocketFactory34.createSocket("DIRECT", (int) (short) 100, inetAddress43, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.net.BindException; message: Permission denied (Bind failed)");
        } catch (java.net.BindException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNull(okAuthenticator13);
        org.junit.Assert.assertNull(responseCache18);
        org.junit.Assert.assertNull(sSLSocketFactory19);
        org.junit.Assert.assertNotNull(proxy20);
        org.junit.Assert.assertNull(socketAddress21);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(connectionPool30);
        org.junit.Assert.assertNotNull(okHttpClient32);
// flaky:         org.junit.Assert.assertNull(proxySelector33);
        org.junit.Assert.assertNotNull(sSLSocketFactory34);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(strArray40);
    }

    @Test
    public void test12087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12087");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache5 = okHttpClient0.okResponseCache();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory6);
        java.net.ProxySelector proxySelector8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient0.setProxySelector(proxySelector8);
        java.net.ResponseCache responseCache10 = okHttpClient0.getResponseCache();
        com.squareup.okhttp.ConnectionPool connectionPool11 = okHttpClient0.getConnectionPool();
        com.squareup.okhttp.OkHttpClient okHttpClient12 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier13 = null;
        okHttpClient12.hostnameVerifier = hostnameVerifier13;
        java.net.ResponseCache responseCache15 = null;
        okHttpClient12.responseCache = responseCache15;
        java.util.List<java.lang.String> strList17 = okHttpClient12.transports;
        com.squareup.okhttp.ConnectionPool connectionPool18 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient12.connectionPool = connectionPool18;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient12.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient21 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier22 = null;
        okHttpClient21.hostnameVerifier = hostnameVerifier22;
        java.net.ResponseCache responseCache24 = null;
        okHttpClient21.responseCache = responseCache24;
        java.util.List<java.lang.String> strList26 = okHttpClient21.transports;
        com.squareup.okhttp.ConnectionPool connectionPool27 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient21.connectionPool = connectionPool27;
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient21.copyWithDefaults();
        java.net.ProxySelector proxySelector30 = okHttpClient29.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory31 = okHttpClient29.getSslSocketFactory();
        okHttpClient12.sslSocketFactory = sSLSocketFactory31;
        java.net.Socket socket33 = sSLSocketFactory31.createSocket();
        java.net.Socket socket34 = sSLSocketFactory31.createSocket();
        okHttpClient0.sslSocketFactory = sSLSocketFactory31;
        java.lang.String[] strArray36 = sSLSocketFactory31.getSupportedCipherSuites();
        java.lang.String[] strArray37 = sSLSocketFactory31.getSupportedCipherSuites();
        java.net.InetAddress inetAddress38 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket40 = sSLSocketFactory31.createSocket(inetAddress38, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: port out of range:-1");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(okResponseCache5);
        org.junit.Assert.assertNotNull(okHttpClient7);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNull(responseCache10);
        org.junit.Assert.assertNull(connectionPool11);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNotNull(connectionPool18);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNotNull(connectionPool27);
        org.junit.Assert.assertNotNull(okHttpClient29);
// flaky:         org.junit.Assert.assertNull(proxySelector30);
        org.junit.Assert.assertNotNull(sSLSocketFactory31);
        org.junit.Assert.assertNotNull(socket33);
        org.junit.Assert.assertEquals(socket33.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(socket34);
        org.junit.Assert.assertEquals(socket34.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(strArray37);
    }

    @Test
    public void test12088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12088");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        com.squareup.okhttp.ConnectionPool connectionPool8 = okHttpClient0.connectionPool;
        boolean boolean9 = okHttpClient0.getFollowProtocolRedirects();
        java.net.ResponseCache responseCache10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setResponseCache(responseCache10);
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setFollowProtocolRedirects(false);
        com.squareup.okhttp.OkHttpClient okHttpClient14 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool15 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient14.connectionPool = connectionPool15;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = null;
        okHttpClient17.hostnameVerifier = hostnameVerifier18;
        java.net.ResponseCache responseCache20 = null;
        okHttpClient17.responseCache = responseCache20;
        java.util.List<java.lang.String> strList22 = okHttpClient17.transports;
        com.squareup.okhttp.ConnectionPool connectionPool23 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient17.connectionPool = connectionPool23;
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient14.setConnectionPool(connectionPool23);
        com.squareup.okhttp.ConnectionPool connectionPool26 = okHttpClient25.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator27 = okHttpClient25.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool30 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient25.connectionPool = connectionPool30;
        java.net.ResponseCache responseCache32 = okHttpClient25.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory33 = okHttpClient25.sslSocketFactory;
        java.net.Proxy proxy34 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress35 = proxy34.address();
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient25.setProxy(proxy34);
        com.squareup.okhttp.OkHttpClient okHttpClient37 = new com.squareup.okhttp.OkHttpClient(okHttpClient36);
        com.squareup.okhttp.OkHttpClient okHttpClient38 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier39 = null;
        okHttpClient38.hostnameVerifier = hostnameVerifier39;
        java.net.ResponseCache responseCache41 = null;
        okHttpClient38.responseCache = responseCache41;
        java.util.List<java.lang.String> strList43 = okHttpClient38.transports;
        com.squareup.okhttp.ConnectionPool connectionPool44 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient38.connectionPool = connectionPool44;
        com.squareup.okhttp.OkHttpClient okHttpClient46 = okHttpClient38.copyWithDefaults();
        java.net.ProxySelector proxySelector47 = okHttpClient46.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory48 = okHttpClient46.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient49 = okHttpClient36.setSSLSocketFactory(sSLSocketFactory48);
        java.net.Socket socket50 = sSLSocketFactory48.createSocket();
        java.lang.String[] strArray51 = sSLSocketFactory48.getSupportedCipherSuites();
        java.net.Socket socket52 = sSLSocketFactory48.createSocket();
        com.squareup.okhttp.OkHttpClient okHttpClient53 = okHttpClient11.setSSLSocketFactory(sSLSocketFactory48);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNotNull(connectionPool8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNotNull(connectionPool15);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNotNull(connectionPool23);
        org.junit.Assert.assertNotNull(okHttpClient25);
        org.junit.Assert.assertNotNull(connectionPool26);
        org.junit.Assert.assertNull(okAuthenticator27);
        org.junit.Assert.assertNull(responseCache32);
        org.junit.Assert.assertNull(sSLSocketFactory33);
        org.junit.Assert.assertNotNull(proxy34);
        org.junit.Assert.assertNull(socketAddress35);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNotNull(connectionPool44);
        org.junit.Assert.assertNotNull(okHttpClient46);
// flaky:         org.junit.Assert.assertNull(proxySelector47);
        org.junit.Assert.assertNotNull(sSLSocketFactory48);
        org.junit.Assert.assertNotNull(okHttpClient49);
        org.junit.Assert.assertNotNull(socket50);
        org.junit.Assert.assertEquals(socket50.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(socket52);
        org.junit.Assert.assertEquals(socket52.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(okHttpClient53);
    }

    @Test
    public void test12089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12089");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache5 = okHttpClient0.okResponseCache();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory6);
        java.net.CookieHandler cookieHandler8 = null;
        okHttpClient0.cookieHandler = cookieHandler8;
        java.util.List<java.lang.String> strList10 = okHttpClient0.transports;
        javax.net.ssl.HostnameVerifier hostnameVerifier11 = okHttpClient0.getHostnameVerifier();
        org.junit.Assert.assertNull(okResponseCache5);
        org.junit.Assert.assertNotNull(okHttpClient7);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(hostnameVerifier11);
    }

    @Test
    public void test12090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12090");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        boolean boolean3 = okHttpClient0.getFollowProtocolRedirects();
        java.net.CookieHandler cookieHandler4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setCookieHandler(cookieHandler4);
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = null;
        okHttpClient6.hostnameVerifier = hostnameVerifier7;
        java.net.ResponseCache responseCache9 = null;
        okHttpClient6.responseCache = responseCache9;
        java.util.List<java.lang.String> strList11 = okHttpClient6.transports;
        com.squareup.okhttp.ConnectionPool connectionPool12 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient6.connectionPool = connectionPool12;
        com.squareup.okhttp.Address address14 = null;
        com.squareup.okhttp.Connection connection15 = connectionPool12.get(address14);
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient5.setConnectionPool(connectionPool12);
        java.net.ProxySelector proxySelector17 = okHttpClient16.proxySelector;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient16.copyWithDefaults();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNull(connection15);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNull(proxySelector17);
        org.junit.Assert.assertNotNull(okHttpClient18);
    }

    @Test
    public void test12091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12091");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory6 = okHttpClient0.sslSocketFactory;
        java.net.CookieHandler cookieHandler7 = okHttpClient0.cookieHandler;
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = okHttpClient0.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool10 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient9.connectionPool = connectionPool10;
        com.squareup.okhttp.OkAuthenticator okAuthenticator12 = null;
        okHttpClient9.authenticator = okAuthenticator12;
        java.util.List<java.lang.String> strList14 = okHttpClient9.transports;
        java.net.ResponseCache responseCache15 = null;
        okHttpClient9.responseCache = responseCache15;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = null;
        okHttpClient17.hostnameVerifier = hostnameVerifier18;
        java.net.ResponseCache responseCache20 = null;
        okHttpClient17.responseCache = responseCache20;
        javax.net.ssl.HostnameVerifier hostnameVerifier22 = okHttpClient17.hostnameVerifier;
        java.net.Proxy proxy23 = okHttpClient17.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool26 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient17.connectionPool = connectionPool26;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient17.copyWithDefaults();
        java.net.Proxy proxy29 = okHttpClient28.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = okHttpClient28.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient9.setHostnameVerifier(hostnameVerifier30);
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient0.setHostnameVerifier(hostnameVerifier30);
        okHttpClient32.followProtocolRedirects = false;
        com.squareup.okhttp.OkHttpClient okHttpClient35 = new com.squareup.okhttp.OkHttpClient(okHttpClient32);
        java.net.ProxySelector proxySelector36 = okHttpClient35.getProxySelector();
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(sSLSocketFactory6);
        org.junit.Assert.assertNull(cookieHandler7);
        org.junit.Assert.assertNull(hostnameVerifier8);
        org.junit.Assert.assertNotNull(connectionPool10);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(hostnameVerifier22);
        org.junit.Assert.assertNull(proxy23);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNull(proxy29);
        org.junit.Assert.assertNotNull(hostnameVerifier30);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertNull(proxySelector36);
    }

    @Test
    public void test12092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12092");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        boolean boolean6 = okHttpClient0.getFollowProtocolRedirects();
        java.net.CookieHandler cookieHandler7 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.OkAuthenticator okAuthenticator8 = okHttpClient0.getAuthenticator();
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(cookieHandler7);
        org.junit.Assert.assertNull(okAuthenticator8);
    }

    @Test
    public void test12093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12093");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.CookieHandler cookieHandler6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient0.setCookieHandler(cookieHandler6);
        com.squareup.okhttp.OkAuthenticator okAuthenticator8 = okHttpClient7.authenticator;
        com.squareup.okhttp.ConnectionPool connectionPool9 = okHttpClient7.getConnectionPool();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory10 = okHttpClient7.sslSocketFactory;
        javax.net.ssl.HostnameVerifier hostnameVerifier11 = okHttpClient7.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient12 = new com.squareup.okhttp.OkHttpClient(okHttpClient7);
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient12.setFollowProtocolRedirects(true);
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient14.setFollowProtocolRedirects(false);
        java.net.ProxySelector proxySelector17 = null;
        okHttpClient14.proxySelector = proxySelector17;
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNotNull(okHttpClient7);
        org.junit.Assert.assertNull(okAuthenticator8);
        org.junit.Assert.assertNull(connectionPool9);
        org.junit.Assert.assertNull(sSLSocketFactory10);
        org.junit.Assert.assertNull(hostnameVerifier11);
        org.junit.Assert.assertNotNull(okHttpClient14);
        org.junit.Assert.assertNotNull(okHttpClient16);
    }

    @Test
    public void test12094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12094");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache1 = okHttpClient0.okResponseCache();
        java.net.ResponseCache responseCache2 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.setResponseCache(responseCache2);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        okHttpClient0.transports = strList6;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory9);
        java.net.CookieHandler cookieHandler11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient0.setCookieHandler(cookieHandler11);
        java.util.Set<com.squareup.okhttp.Route> routeSet13 = okHttpClient12.failedRoutes;
        org.junit.Assert.assertNull(okResponseCache1);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertNotNull(routeSet13);
    }

    @Test
    public void test12095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12095");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.ConnectionPool connectionPool12 = okHttpClient11.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator13 = okHttpClient11.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool16 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient11.connectionPool = connectionPool16;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier19 = null;
        okHttpClient18.hostnameVerifier = hostnameVerifier19;
        java.net.ResponseCache responseCache21 = null;
        okHttpClient18.responseCache = responseCache21;
        java.util.List<java.lang.String> strList23 = okHttpClient18.transports;
        com.squareup.okhttp.ConnectionPool connectionPool24 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient18.connectionPool = connectionPool24;
        java.net.CookieHandler cookieHandler26 = okHttpClient18.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache27 = okHttpClient18.okResponseCache();
        java.net.CookieHandler cookieHandler28 = okHttpClient18.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient29 = new com.squareup.okhttp.OkHttpClient(okHttpClient18);
        java.net.Proxy proxy30 = java.net.Proxy.NO_PROXY;
        boolean boolean32 = proxy30.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type33 = proxy30.type();
        java.net.SocketAddress socketAddress34 = proxy30.address();
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient18.setProxy(proxy30);
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient11.setProxy(proxy30);
        okHttpClient36.followProtocolRedirects = true;
        java.net.ProxySelector proxySelector39 = null;
        okHttpClient36.proxySelector = proxySelector39;
        com.squareup.okhttp.ConnectionPool connectionPool41 = okHttpClient36.getConnectionPool();
        com.squareup.okhttp.Address address42 = null;
        com.squareup.okhttp.Connection connection43 = connectionPool41.get(address42);
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNull(okAuthenticator13);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNotNull(connectionPool24);
        org.junit.Assert.assertNull(cookieHandler26);
        org.junit.Assert.assertNull(okResponseCache27);
        org.junit.Assert.assertNull(cookieHandler28);
        org.junit.Assert.assertNotNull(proxy30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + type33 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type33.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress34);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNotNull(connectionPool41);
        org.junit.Assert.assertNull(connection43);
    }

    @Test
    public void test12096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12096");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        boolean boolean6 = okHttpClient0.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        com.squareup.okhttp.OkHttpClient okHttpClient8 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.OkHttpClient okHttpClient9 = new com.squareup.okhttp.OkHttpClient(okHttpClient8);
        boolean boolean10 = okHttpClient9.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool12 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient11.connectionPool = connectionPool12;
        java.net.ResponseCache responseCache14 = null;
        okHttpClient11.responseCache = responseCache14;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier17 = null;
        okHttpClient16.hostnameVerifier = hostnameVerifier17;
        java.net.ResponseCache responseCache19 = null;
        okHttpClient16.responseCache = responseCache19;
        javax.net.ssl.HostnameVerifier hostnameVerifier21 = okHttpClient16.hostnameVerifier;
        java.net.Proxy proxy22 = okHttpClient16.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool25 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient16.connectionPool = connectionPool25;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient16.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier28 = okHttpClient27.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient11.setHostnameVerifier(hostnameVerifier28);
        okHttpClient9.hostnameVerifier = hostnameVerifier28;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient7.setHostnameVerifier(hostnameVerifier28);
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient31.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient33 = new com.squareup.okhttp.OkHttpClient(okHttpClient31);
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNull(hostnameVerifier21);
        org.junit.Assert.assertNull(proxy22);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNotNull(hostnameVerifier28);
        org.junit.Assert.assertNotNull(okHttpClient29);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNotNull(okHttpClient32);
    }

    @Test
    public void test12097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12097");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory8 = okHttpClient0.getSslSocketFactory();
        java.net.CookieHandler cookieHandler9 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.ConnectionPool connectionPool12 = new com.squareup.okhttp.ConnectionPool(10, 1L);
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient0.setConnectionPool(connectionPool12);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory14 = okHttpClient0.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient16 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier17 = null;
        okHttpClient16.hostnameVerifier = hostnameVerifier17;
        java.net.ResponseCache responseCache19 = null;
        okHttpClient16.responseCache = responseCache19;
        javax.net.ssl.HostnameVerifier hostnameVerifier21 = okHttpClient16.hostnameVerifier;
        java.net.Proxy proxy22 = okHttpClient16.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool25 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient16.connectionPool = connectionPool25;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient16.copyWithDefaults();
        java.net.ResponseCache responseCache28 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient27.setResponseCache(responseCache28);
        java.net.CookieHandler cookieHandler30 = null;
        okHttpClient29.cookieHandler = cookieHandler30;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier33 = null;
        okHttpClient32.hostnameVerifier = hostnameVerifier33;
        java.net.ResponseCache responseCache35 = null;
        okHttpClient32.responseCache = responseCache35;
        java.util.List<java.lang.String> strList37 = okHttpClient32.transports;
        com.squareup.okhttp.ConnectionPool connectionPool38 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient32.connectionPool = connectionPool38;
        com.squareup.okhttp.OkHttpClient okHttpClient40 = okHttpClient32.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient41 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier42 = null;
        okHttpClient41.hostnameVerifier = hostnameVerifier42;
        java.net.ResponseCache responseCache44 = null;
        okHttpClient41.responseCache = responseCache44;
        java.util.List<java.lang.String> strList46 = okHttpClient41.transports;
        com.squareup.okhttp.ConnectionPool connectionPool47 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient41.connectionPool = connectionPool47;
        com.squareup.okhttp.OkHttpClient okHttpClient49 = okHttpClient41.copyWithDefaults();
        java.net.ProxySelector proxySelector50 = okHttpClient49.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory51 = okHttpClient49.getSslSocketFactory();
        okHttpClient32.sslSocketFactory = sSLSocketFactory51;
        java.net.Socket socket53 = sSLSocketFactory51.createSocket();
        java.net.Socket socket54 = sSLSocketFactory51.createSocket();
        okHttpClient29.sslSocketFactory = sSLSocketFactory51;
        java.net.Socket socket56 = sSLSocketFactory51.createSocket();
        com.squareup.okhttp.OkHttpClient okHttpClient57 = okHttpClient15.setSSLSocketFactory(sSLSocketFactory51);
        java.lang.String[] strArray58 = sSLSocketFactory51.getDefaultCipherSuites();
        java.net.Socket socket59 = sSLSocketFactory51.createSocket();
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket62 = sSLSocketFactory51.createSocket("", (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: port out of range:-1");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNull(sSLSocketFactory8);
        org.junit.Assert.assertNull(cookieHandler9);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNull(sSLSocketFactory14);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNull(hostnameVerifier21);
        org.junit.Assert.assertNull(proxy22);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNotNull(okHttpClient29);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(connectionPool38);
        org.junit.Assert.assertNotNull(okHttpClient40);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNotNull(connectionPool47);
        org.junit.Assert.assertNotNull(okHttpClient49);
// flaky:         org.junit.Assert.assertNull(proxySelector50);
        org.junit.Assert.assertNotNull(sSLSocketFactory51);
        org.junit.Assert.assertNotNull(socket53);
        org.junit.Assert.assertEquals(socket53.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(socket54);
        org.junit.Assert.assertEquals(socket54.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(socket56);
        org.junit.Assert.assertEquals(socket56.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(okHttpClient57);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(socket59);
        org.junit.Assert.assertEquals(socket59.toString(), "Socket[unconnected]");
    }

    @Test
    public void test12098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12098");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.CookieHandler cookieHandler5 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = null;
        okHttpClient6.hostnameVerifier = hostnameVerifier7;
        java.net.ResponseCache responseCache9 = null;
        okHttpClient6.responseCache = responseCache9;
        java.util.List<java.lang.String> strList11 = okHttpClient6.transports;
        com.squareup.okhttp.ConnectionPool connectionPool12 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient6.connectionPool = connectionPool12;
        java.net.Proxy proxy14 = null;
        okHttpClient6.proxy = proxy14;
        java.util.Set<com.squareup.okhttp.Route> routeSet16 = okHttpClient6.failedRoutes;
        okHttpClient0.failedRoutes = routeSet16;
        java.net.ProxySelector proxySelector18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient0.setProxySelector(proxySelector18);
        com.squareup.okhttp.OkHttpClient okHttpClient20 = new com.squareup.okhttp.OkHttpClient(okHttpClient19);
        com.squareup.okhttp.OkHttpClient okHttpClient21 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool22 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient21.connectionPool = connectionPool22;
        com.squareup.okhttp.OkAuthenticator okAuthenticator24 = null;
        okHttpClient21.authenticator = okAuthenticator24;
        java.util.List<java.lang.String> strList26 = okHttpClient21.transports;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier28 = null;
        okHttpClient27.hostnameVerifier = hostnameVerifier28;
        java.net.ResponseCache responseCache30 = null;
        okHttpClient27.responseCache = responseCache30;
        java.util.List<java.lang.String> strList32 = okHttpClient27.transports;
        com.squareup.okhttp.ConnectionPool connectionPool33 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient27.connectionPool = connectionPool33;
        java.net.CookieHandler cookieHandler35 = okHttpClient27.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache36 = okHttpClient27.okResponseCache();
        java.net.CookieHandler cookieHandler37 = okHttpClient27.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient38 = new com.squareup.okhttp.OkHttpClient(okHttpClient27);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory39 = okHttpClient38.sslSocketFactory;
        com.squareup.okhttp.OkAuthenticator okAuthenticator40 = okHttpClient38.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient41 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier42 = null;
        okHttpClient41.hostnameVerifier = hostnameVerifier42;
        java.net.ResponseCache responseCache44 = null;
        okHttpClient41.responseCache = responseCache44;
        java.util.List<java.lang.String> strList46 = okHttpClient41.transports;
        com.squareup.okhttp.ConnectionPool connectionPool47 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient41.connectionPool = connectionPool47;
        java.net.CookieHandler cookieHandler49 = okHttpClient41.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache50 = okHttpClient41.okResponseCache();
        java.net.CookieHandler cookieHandler51 = okHttpClient41.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient52 = new com.squareup.okhttp.OkHttpClient(okHttpClient41);
        com.squareup.okhttp.OkHttpClient okHttpClient53 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier54 = null;
        okHttpClient53.hostnameVerifier = hostnameVerifier54;
        java.net.ProxySelector proxySelector56 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient57 = okHttpClient53.setProxySelector(proxySelector56);
        java.net.CookieHandler cookieHandler58 = okHttpClient53.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient59 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier60 = null;
        okHttpClient59.hostnameVerifier = hostnameVerifier60;
        java.net.ResponseCache responseCache62 = null;
        okHttpClient59.responseCache = responseCache62;
        java.util.List<java.lang.String> strList64 = okHttpClient59.transports;
        com.squareup.okhttp.ConnectionPool connectionPool65 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient59.connectionPool = connectionPool65;
        java.net.Proxy proxy67 = null;
        okHttpClient59.proxy = proxy67;
        java.util.Set<com.squareup.okhttp.Route> routeSet69 = okHttpClient59.failedRoutes;
        okHttpClient53.failedRoutes = routeSet69;
        okHttpClient52.failedRoutes = routeSet69;
        okHttpClient38.failedRoutes = routeSet69;
        okHttpClient21.failedRoutes = routeSet69;
        okHttpClient19.failedRoutes = routeSet69;
        com.squareup.okhttp.OkHttpClient okHttpClient75 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier76 = null;
        okHttpClient75.hostnameVerifier = hostnameVerifier76;
        java.net.ResponseCache responseCache78 = null;
        okHttpClient75.responseCache = responseCache78;
        java.util.List<java.lang.String> strList80 = okHttpClient75.transports;
        com.squareup.okhttp.ConnectionPool connectionPool81 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient75.connectionPool = connectionPool81;
        com.squareup.okhttp.OkHttpClient okHttpClient83 = okHttpClient75.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient84 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier85 = null;
        okHttpClient84.hostnameVerifier = hostnameVerifier85;
        java.net.ResponseCache responseCache87 = null;
        okHttpClient84.responseCache = responseCache87;
        java.util.List<java.lang.String> strList89 = okHttpClient84.transports;
        com.squareup.okhttp.ConnectionPool connectionPool90 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient84.connectionPool = connectionPool90;
        com.squareup.okhttp.OkHttpClient okHttpClient92 = okHttpClient84.copyWithDefaults();
        java.net.ProxySelector proxySelector93 = okHttpClient92.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory94 = okHttpClient92.getSslSocketFactory();
        okHttpClient75.sslSocketFactory = sSLSocketFactory94;
        com.squareup.okhttp.OkHttpClient okHttpClient96 = okHttpClient19.setSSLSocketFactory(sSLSocketFactory94);
        com.squareup.okhttp.OkHttpClient okHttpClient97 = new com.squareup.okhttp.OkHttpClient(okHttpClient96);
        java.util.List<java.lang.String> strList98 = okHttpClient96.transports;
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNotNull(routeSet16);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNotNull(connectionPool22);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNotNull(connectionPool33);
        org.junit.Assert.assertNull(cookieHandler35);
        org.junit.Assert.assertNull(okResponseCache36);
        org.junit.Assert.assertNull(cookieHandler37);
        org.junit.Assert.assertNull(sSLSocketFactory39);
        org.junit.Assert.assertNull(okAuthenticator40);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNotNull(connectionPool47);
        org.junit.Assert.assertNull(cookieHandler49);
        org.junit.Assert.assertNull(okResponseCache50);
        org.junit.Assert.assertNull(cookieHandler51);
        org.junit.Assert.assertNotNull(okHttpClient57);
        org.junit.Assert.assertNull(cookieHandler58);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNotNull(connectionPool65);
        org.junit.Assert.assertNotNull(routeSet69);
        org.junit.Assert.assertNull(strList80);
        org.junit.Assert.assertNotNull(connectionPool81);
        org.junit.Assert.assertNotNull(okHttpClient83);
        org.junit.Assert.assertNull(strList89);
        org.junit.Assert.assertNotNull(connectionPool90);
        org.junit.Assert.assertNotNull(okHttpClient92);
// flaky:         org.junit.Assert.assertNull(proxySelector93);
        org.junit.Assert.assertNotNull(sSLSocketFactory94);
        org.junit.Assert.assertNotNull(okHttpClient96);
        org.junit.Assert.assertNull(strList98);
    }

    @Test
    public void test12099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12099");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient0.copyWithDefaults();
        boolean boolean9 = okHttpClient8.getFollowProtocolRedirects();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory10 = okHttpClient8.sslSocketFactory;
        java.lang.String[] strArray11 = sSLSocketFactory10.getSupportedCipherSuites();
        java.net.Socket socket12 = sSLSocketFactory10.createSocket();
        java.net.Socket socket13 = sSLSocketFactory10.createSocket();
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket16 = sSLSocketFactory10.createSocket("", (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: port out of range:-1");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(sSLSocketFactory10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(socket12);
        org.junit.Assert.assertEquals(socket12.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(socket13);
        org.junit.Assert.assertEquals(socket13.toString(), "Socket[unconnected]");
    }

    @Test
    public void test12100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12100");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.ConnectionPool connectionPool12 = okHttpClient11.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator13 = okHttpClient11.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool16 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient11.connectionPool = connectionPool16;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory18 = okHttpClient11.sslSocketFactory;
        com.squareup.okhttp.OkAuthenticator okAuthenticator19 = okHttpClient11.authenticator;
        java.net.ResponseCache responseCache20 = okHttpClient11.getResponseCache();
        com.squareup.okhttp.ConnectionPool connectionPool21 = okHttpClient11.getConnectionPool();
        com.squareup.okhttp.Address address22 = null;
        com.squareup.okhttp.Connection connection23 = connectionPool21.get(address22);
        int int24 = connectionPool21.getSpdyConnectionCount();
        com.squareup.okhttp.Connection connection25 = null;
        // The following exception was thrown during execution in test generation
        try {
            connectionPool21.recycle(connection25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNull(okAuthenticator13);
        org.junit.Assert.assertNull(sSLSocketFactory18);
        org.junit.Assert.assertNull(okAuthenticator19);
        org.junit.Assert.assertNull(responseCache20);
        org.junit.Assert.assertNotNull(connectionPool21);
        org.junit.Assert.assertNull(connection23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
    }

    @Test
    public void test12101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12101");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory8 = okHttpClient0.getSslSocketFactory();
        java.net.CookieHandler cookieHandler9 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.ConnectionPool connectionPool12 = new com.squareup.okhttp.ConnectionPool(10, 1L);
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient0.setConnectionPool(connectionPool12);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory14 = okHttpClient0.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient0.copyWithDefaults();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory16 = okHttpClient15.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient15.copyWithDefaults();
        boolean boolean18 = okHttpClient15.followProtocolRedirects;
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNull(sSLSocketFactory8);
        org.junit.Assert.assertNull(cookieHandler9);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNull(sSLSocketFactory14);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNotNull(sSLSocketFactory16);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test12102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12102");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.ConnectionPool connectionPool12 = okHttpClient11.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator13 = okHttpClient11.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool16 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient11.connectionPool = connectionPool16;
        java.net.ResponseCache responseCache18 = okHttpClient11.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory19 = okHttpClient11.sslSocketFactory;
        java.net.Proxy proxy20 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress21 = proxy20.address();
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient11.setProxy(proxy20);
        com.squareup.okhttp.OkHttpClient okHttpClient23 = new com.squareup.okhttp.OkHttpClient(okHttpClient22);
        com.squareup.okhttp.OkHttpClient okHttpClient24 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier25 = null;
        okHttpClient24.hostnameVerifier = hostnameVerifier25;
        boolean boolean27 = okHttpClient24.getFollowProtocolRedirects();
        java.net.CookieHandler cookieHandler28 = okHttpClient24.cookieHandler;
        com.squareup.okhttp.OkHttpClient okHttpClient29 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = null;
        okHttpClient29.hostnameVerifier = hostnameVerifier30;
        java.net.ResponseCache responseCache32 = null;
        okHttpClient29.responseCache = responseCache32;
        javax.net.ssl.HostnameVerifier hostnameVerifier34 = okHttpClient29.hostnameVerifier;
        java.net.Proxy proxy35 = okHttpClient29.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool38 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient29.connectionPool = connectionPool38;
        com.squareup.okhttp.OkHttpClient okHttpClient40 = okHttpClient29.copyWithDefaults();
        java.net.ResponseCache responseCache41 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient40.setResponseCache(responseCache41);
        com.squareup.okhttp.OkAuthenticator okAuthenticator43 = okHttpClient40.authenticator;
        okHttpClient24.authenticator = okAuthenticator43;
        okHttpClient23.authenticator = okAuthenticator43;
        okHttpClient23.followProtocolRedirects = true;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache48 = okHttpClient23.okResponseCache();
        java.net.Proxy proxy49 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient23.setProxy(proxy49);
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNull(okAuthenticator13);
        org.junit.Assert.assertNull(responseCache18);
        org.junit.Assert.assertNull(sSLSocketFactory19);
        org.junit.Assert.assertNotNull(proxy20);
        org.junit.Assert.assertNull(socketAddress21);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(cookieHandler28);
        org.junit.Assert.assertNull(hostnameVerifier34);
        org.junit.Assert.assertNull(proxy35);
        org.junit.Assert.assertNotNull(okHttpClient40);
        org.junit.Assert.assertNotNull(okHttpClient42);
        org.junit.Assert.assertNotNull(okAuthenticator43);
        org.junit.Assert.assertNull(okResponseCache48);
        org.junit.Assert.assertNotNull(okHttpClient50);
    }

    @Test
    public void test12103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12103");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        okHttpClient0.authenticator = okAuthenticator3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        java.net.Proxy proxy6 = java.net.Proxy.NO_PROXY;
        boolean boolean8 = proxy6.equals((java.lang.Object) 1L);
        com.squareup.okhttp.OkHttpClient okHttpClient9 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier10 = null;
        okHttpClient9.hostnameVerifier = hostnameVerifier10;
        java.net.ProxySelector proxySelector12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient9.setProxySelector(proxySelector12);
        java.net.ResponseCache responseCache14 = null;
        okHttpClient13.responseCache = responseCache14;
        javax.net.ssl.HostnameVerifier hostnameVerifier16 = okHttpClient13.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient13.setFollowProtocolRedirects(false);
        com.squareup.okhttp.OkHttpClient okHttpClient19 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier20 = null;
        okHttpClient19.hostnameVerifier = hostnameVerifier20;
        java.net.ResponseCache responseCache22 = null;
        okHttpClient19.responseCache = responseCache22;
        java.util.List<java.lang.String> strList24 = okHttpClient19.transports;
        com.squareup.okhttp.ConnectionPool connectionPool25 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient19.connectionPool = connectionPool25;
        com.squareup.okhttp.ConnectionPool connectionPool27 = okHttpClient19.connectionPool;
        int int28 = connectionPool27.getHttpConnectionCount();
        okHttpClient13.connectionPool = connectionPool27;
        boolean boolean30 = proxy6.equals((java.lang.Object) okHttpClient13);
        com.squareup.okhttp.OkHttpClient okHttpClient31 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool32 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient31.connectionPool = connectionPool32;
        com.squareup.okhttp.OkHttpClient okHttpClient34 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier35 = null;
        okHttpClient34.hostnameVerifier = hostnameVerifier35;
        java.net.ResponseCache responseCache37 = null;
        okHttpClient34.responseCache = responseCache37;
        java.util.List<java.lang.String> strList39 = okHttpClient34.transports;
        com.squareup.okhttp.ConnectionPool connectionPool40 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient34.connectionPool = connectionPool40;
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient31.setConnectionPool(connectionPool40);
        com.squareup.okhttp.OkAuthenticator okAuthenticator43 = okHttpClient42.getAuthenticator();
        com.squareup.okhttp.OkHttpClient okHttpClient44 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool45 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient44.connectionPool = connectionPool45;
        java.net.ResponseCache responseCache47 = null;
        okHttpClient44.responseCache = responseCache47;
        java.net.Proxy proxy49 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress50 = proxy49.address();
        java.net.SocketAddress socketAddress51 = proxy49.address();
        okHttpClient44.proxy = proxy49;
        com.squareup.okhttp.ConnectionPool connectionPool55 = new com.squareup.okhttp.ConnectionPool((-1), (long) '#');
        com.squareup.okhttp.Address address56 = null;
        com.squareup.okhttp.Connection connection57 = connectionPool55.get(address56);
        int int58 = connectionPool55.getSpdyConnectionCount();
        connectionPool55.evictAll();
        com.squareup.okhttp.OkHttpClient okHttpClient60 = okHttpClient44.setConnectionPool(connectionPool55);
        com.squareup.okhttp.OkHttpClient okHttpClient61 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier62 = null;
        okHttpClient61.hostnameVerifier = hostnameVerifier62;
        java.net.ProxySelector proxySelector64 = okHttpClient61.proxySelector;
        java.net.ProxySelector proxySelector65 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient66 = okHttpClient61.setProxySelector(proxySelector65);
        com.squareup.okhttp.OkHttpClient okHttpClient67 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier68 = null;
        okHttpClient67.hostnameVerifier = hostnameVerifier68;
        java.net.ResponseCache responseCache70 = null;
        okHttpClient67.responseCache = responseCache70;
        java.util.List<java.lang.String> strList72 = okHttpClient67.transports;
        com.squareup.okhttp.ConnectionPool connectionPool73 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient67.connectionPool = connectionPool73;
        com.squareup.okhttp.OkHttpClient okHttpClient75 = okHttpClient67.copyWithDefaults();
        java.net.ProxySelector proxySelector76 = okHttpClient75.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory77 = okHttpClient75.getSslSocketFactory();
        okHttpClient61.sslSocketFactory = sSLSocketFactory77;
        okHttpClient44.sslSocketFactory = sSLSocketFactory77;
        java.lang.String[] strArray80 = sSLSocketFactory77.getSupportedCipherSuites();
        java.lang.String[] strArray81 = sSLSocketFactory77.getSupportedCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient82 = okHttpClient42.setSSLSocketFactory(sSLSocketFactory77);
        java.lang.String[] strArray83 = sSLSocketFactory77.getDefaultCipherSuites();
        java.net.Socket socket84 = sSLSocketFactory77.createSocket();
        java.lang.String[] strArray85 = sSLSocketFactory77.getSupportedCipherSuites();
        boolean boolean86 = proxy6.equals((java.lang.Object) sSLSocketFactory77);
        okHttpClient0.sslSocketFactory = sSLSocketFactory77;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache88 = okHttpClient0.okResponseCache();
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(proxy6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNull(hostnameVerifier16);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNotNull(connectionPool25);
        org.junit.Assert.assertNotNull(connectionPool27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(connectionPool32);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNotNull(connectionPool40);
        org.junit.Assert.assertNotNull(okHttpClient42);
        org.junit.Assert.assertNull(okAuthenticator43);
        org.junit.Assert.assertNotNull(connectionPool45);
        org.junit.Assert.assertNotNull(proxy49);
        org.junit.Assert.assertNull(socketAddress50);
        org.junit.Assert.assertNull(socketAddress51);
        org.junit.Assert.assertNull(connection57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(okHttpClient60);
        org.junit.Assert.assertNull(proxySelector64);
        org.junit.Assert.assertNotNull(okHttpClient66);
        org.junit.Assert.assertNull(strList72);
        org.junit.Assert.assertNotNull(connectionPool73);
        org.junit.Assert.assertNotNull(okHttpClient75);
// flaky:         org.junit.Assert.assertNull(proxySelector76);
        org.junit.Assert.assertNotNull(sSLSocketFactory77);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertNotNull(okHttpClient82);
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertNotNull(socket84);
        org.junit.Assert.assertEquals(socket84.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNull(okResponseCache88);
    }

    @Test
    public void test12104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12104");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.ConnectionPool connectionPool12 = okHttpClient11.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator13 = okHttpClient11.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool16 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient11.connectionPool = connectionPool16;
        java.net.ResponseCache responseCache18 = okHttpClient11.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory19 = okHttpClient11.sslSocketFactory;
        java.net.Proxy proxy20 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress21 = proxy20.address();
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient11.setProxy(proxy20);
        com.squareup.okhttp.OkHttpClient okHttpClient23 = new com.squareup.okhttp.OkHttpClient(okHttpClient22);
        com.squareup.okhttp.OkHttpClient okHttpClient24 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier25 = null;
        okHttpClient24.hostnameVerifier = hostnameVerifier25;
        boolean boolean27 = okHttpClient24.getFollowProtocolRedirects();
        java.net.CookieHandler cookieHandler28 = okHttpClient24.cookieHandler;
        com.squareup.okhttp.OkHttpClient okHttpClient29 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = null;
        okHttpClient29.hostnameVerifier = hostnameVerifier30;
        java.net.ResponseCache responseCache32 = null;
        okHttpClient29.responseCache = responseCache32;
        javax.net.ssl.HostnameVerifier hostnameVerifier34 = okHttpClient29.hostnameVerifier;
        java.net.Proxy proxy35 = okHttpClient29.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool38 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient29.connectionPool = connectionPool38;
        com.squareup.okhttp.OkHttpClient okHttpClient40 = okHttpClient29.copyWithDefaults();
        java.net.ResponseCache responseCache41 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient40.setResponseCache(responseCache41);
        com.squareup.okhttp.OkAuthenticator okAuthenticator43 = okHttpClient40.authenticator;
        okHttpClient24.authenticator = okAuthenticator43;
        okHttpClient23.authenticator = okAuthenticator43;
        okHttpClient23.followProtocolRedirects = true;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache48 = okHttpClient23.okResponseCache();
        java.net.Proxy proxy49 = okHttpClient23.getProxy();
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNull(okAuthenticator13);
        org.junit.Assert.assertNull(responseCache18);
        org.junit.Assert.assertNull(sSLSocketFactory19);
        org.junit.Assert.assertNotNull(proxy20);
        org.junit.Assert.assertNull(socketAddress21);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(cookieHandler28);
        org.junit.Assert.assertNull(hostnameVerifier34);
        org.junit.Assert.assertNull(proxy35);
        org.junit.Assert.assertNotNull(okHttpClient40);
        org.junit.Assert.assertNotNull(okHttpClient42);
        org.junit.Assert.assertNotNull(okAuthenticator43);
        org.junit.Assert.assertNull(okResponseCache48);
        org.junit.Assert.assertNull(proxy49);
    }

    @Test
    public void test12105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12105");
        com.squareup.okhttp.ConnectionPool connectionPool2 = new com.squareup.okhttp.ConnectionPool((int) (short) -1, (long) (byte) 100);
        int int3 = connectionPool2.getConnectionCount();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test12106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12106");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory6);
        java.net.ResponseCache responseCache8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient0.setResponseCache(responseCache8);
        com.squareup.okhttp.OkHttpClient okHttpClient10 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier11 = null;
        okHttpClient10.hostnameVerifier = hostnameVerifier11;
        java.net.ResponseCache responseCache13 = null;
        okHttpClient10.responseCache = responseCache13;
        java.util.List<java.lang.String> strList15 = okHttpClient10.transports;
        com.squareup.okhttp.ConnectionPool connectionPool16 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient10.connectionPool = connectionPool16;
        com.squareup.okhttp.ConnectionPool connectionPool18 = okHttpClient10.connectionPool;
        boolean boolean19 = okHttpClient10.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient20 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier21 = null;
        okHttpClient20.hostnameVerifier = hostnameVerifier21;
        java.net.ResponseCache responseCache23 = null;
        okHttpClient20.responseCache = responseCache23;
        javax.net.ssl.HostnameVerifier hostnameVerifier25 = okHttpClient20.hostnameVerifier;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory26 = okHttpClient20.sslSocketFactory;
        java.net.CookieHandler cookieHandler27 = okHttpClient20.cookieHandler;
        javax.net.ssl.HostnameVerifier hostnameVerifier28 = okHttpClient20.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient29 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool30 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient29.connectionPool = connectionPool30;
        com.squareup.okhttp.OkAuthenticator okAuthenticator32 = null;
        okHttpClient29.authenticator = okAuthenticator32;
        java.util.List<java.lang.String> strList34 = okHttpClient29.transports;
        java.net.ResponseCache responseCache35 = null;
        okHttpClient29.responseCache = responseCache35;
        com.squareup.okhttp.OkHttpClient okHttpClient37 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier38 = null;
        okHttpClient37.hostnameVerifier = hostnameVerifier38;
        java.net.ResponseCache responseCache40 = null;
        okHttpClient37.responseCache = responseCache40;
        javax.net.ssl.HostnameVerifier hostnameVerifier42 = okHttpClient37.hostnameVerifier;
        java.net.Proxy proxy43 = okHttpClient37.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool46 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient37.connectionPool = connectionPool46;
        com.squareup.okhttp.OkHttpClient okHttpClient48 = okHttpClient37.copyWithDefaults();
        java.net.Proxy proxy49 = okHttpClient48.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier50 = okHttpClient48.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient51 = okHttpClient29.setHostnameVerifier(hostnameVerifier50);
        com.squareup.okhttp.OkHttpClient okHttpClient52 = okHttpClient20.setHostnameVerifier(hostnameVerifier50);
        com.squareup.okhttp.OkHttpClient okHttpClient53 = okHttpClient10.setHostnameVerifier(hostnameVerifier50);
        com.squareup.okhttp.OkHttpClient okHttpClient54 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier55 = null;
        okHttpClient54.hostnameVerifier = hostnameVerifier55;
        java.net.ProxySelector proxySelector57 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient58 = okHttpClient54.setProxySelector(proxySelector57);
        com.squareup.okhttp.OkHttpClient okHttpClient59 = okHttpClient58.copyWithDefaults();
        com.squareup.okhttp.Route[] routeArray60 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet61 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet61, routeArray60);
        okHttpClient59.failedRoutes = routeSet61;
        okHttpClient10.failedRoutes = routeSet61;
        okHttpClient9.failedRoutes = routeSet61;
        java.util.List<java.lang.String> strList66 = okHttpClient9.transports;
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNotNull(okHttpClient7);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(connectionPool16);
        org.junit.Assert.assertNotNull(connectionPool18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(hostnameVerifier25);
        org.junit.Assert.assertNull(sSLSocketFactory26);
        org.junit.Assert.assertNull(cookieHandler27);
        org.junit.Assert.assertNull(hostnameVerifier28);
        org.junit.Assert.assertNotNull(connectionPool30);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNull(hostnameVerifier42);
        org.junit.Assert.assertNull(proxy43);
        org.junit.Assert.assertNotNull(okHttpClient48);
        org.junit.Assert.assertNull(proxy49);
        org.junit.Assert.assertNotNull(hostnameVerifier50);
        org.junit.Assert.assertNotNull(okHttpClient51);
        org.junit.Assert.assertNotNull(okHttpClient52);
        org.junit.Assert.assertNotNull(okHttpClient53);
        org.junit.Assert.assertNotNull(okHttpClient58);
        org.junit.Assert.assertNotNull(okHttpClient59);
        org.junit.Assert.assertNotNull(routeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(strList66);
    }

    @Test
    public void test12107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12107");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient0.connectionPool = connectionPool9;
        java.util.List<java.lang.String> strList11 = okHttpClient0.getTransports();
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient0.setHostnameVerifier(hostnameVerifier12);
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient0.copyWithDefaults();
        java.net.ResponseCache responseCache15 = okHttpClient14.getResponseCache();
        java.net.ResponseCache responseCache16 = okHttpClient14.getResponseCache();
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNotNull(okHttpClient14);
        org.junit.Assert.assertNull(responseCache15);
        org.junit.Assert.assertNull(responseCache16);
    }

    @Test
    public void test12108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12108");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.net.ResponseCache responseCache5 = okHttpClient0.responseCache;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient0.responseCache = responseCache6;
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = okHttpClient0.getHostnameVerifier();
        java.util.List<java.lang.String> strList9 = okHttpClient0.transports;
        java.net.ResponseCache responseCache10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setResponseCache(responseCache10);
        org.junit.Assert.assertNull(responseCache5);
        org.junit.Assert.assertNull(hostnameVerifier8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(okHttpClient11);
    }

    @Test
    public void test12109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12109");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.ConnectionPool connectionPool12 = okHttpClient11.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator13 = okHttpClient11.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool16 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient11.connectionPool = connectionPool16;
        java.net.ResponseCache responseCache18 = okHttpClient11.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory19 = okHttpClient11.sslSocketFactory;
        java.net.Proxy proxy20 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress21 = proxy20.address();
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient11.setProxy(proxy20);
        com.squareup.okhttp.OkHttpClient okHttpClient23 = new com.squareup.okhttp.OkHttpClient(okHttpClient22);
        com.squareup.okhttp.OkHttpClient okHttpClient24 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier25 = null;
        okHttpClient24.hostnameVerifier = hostnameVerifier25;
        boolean boolean27 = okHttpClient24.getFollowProtocolRedirects();
        java.net.CookieHandler cookieHandler28 = okHttpClient24.cookieHandler;
        com.squareup.okhttp.OkHttpClient okHttpClient29 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = null;
        okHttpClient29.hostnameVerifier = hostnameVerifier30;
        java.net.ResponseCache responseCache32 = null;
        okHttpClient29.responseCache = responseCache32;
        javax.net.ssl.HostnameVerifier hostnameVerifier34 = okHttpClient29.hostnameVerifier;
        java.net.Proxy proxy35 = okHttpClient29.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool38 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient29.connectionPool = connectionPool38;
        com.squareup.okhttp.OkHttpClient okHttpClient40 = okHttpClient29.copyWithDefaults();
        java.net.ResponseCache responseCache41 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient40.setResponseCache(responseCache41);
        com.squareup.okhttp.OkAuthenticator okAuthenticator43 = okHttpClient40.authenticator;
        okHttpClient24.authenticator = okAuthenticator43;
        okHttpClient23.authenticator = okAuthenticator43;
        com.squareup.okhttp.ConnectionPool connectionPool46 = okHttpClient23.getConnectionPool();
        java.net.Proxy proxy47 = okHttpClient23.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient49 = okHttpClient23.setFollowProtocolRedirects(false);
        java.util.List<java.lang.String> strList50 = okHttpClient23.transports;
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNull(okAuthenticator13);
        org.junit.Assert.assertNull(responseCache18);
        org.junit.Assert.assertNull(sSLSocketFactory19);
        org.junit.Assert.assertNotNull(proxy20);
        org.junit.Assert.assertNull(socketAddress21);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(cookieHandler28);
        org.junit.Assert.assertNull(hostnameVerifier34);
        org.junit.Assert.assertNull(proxy35);
        org.junit.Assert.assertNotNull(okHttpClient40);
        org.junit.Assert.assertNotNull(okHttpClient42);
        org.junit.Assert.assertNotNull(okAuthenticator43);
        org.junit.Assert.assertNull(connectionPool46);
        org.junit.Assert.assertNull(proxy47);
        org.junit.Assert.assertNotNull(okHttpClient49);
        org.junit.Assert.assertNull(strList50);
    }

    @Test
    public void test12110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12110");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.CookieHandler cookieHandler5 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = null;
        okHttpClient6.hostnameVerifier = hostnameVerifier7;
        java.net.ResponseCache responseCache9 = null;
        okHttpClient6.responseCache = responseCache9;
        java.util.List<java.lang.String> strList11 = okHttpClient6.transports;
        com.squareup.okhttp.ConnectionPool connectionPool12 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient6.connectionPool = connectionPool12;
        java.net.Proxy proxy14 = null;
        okHttpClient6.proxy = proxy14;
        java.util.Set<com.squareup.okhttp.Route> routeSet16 = okHttpClient6.failedRoutes;
        okHttpClient0.failedRoutes = routeSet16;
        java.net.ProxySelector proxySelector18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient0.setProxySelector(proxySelector18);
        com.squareup.okhttp.OkHttpClient okHttpClient20 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier21 = null;
        okHttpClient20.hostnameVerifier = hostnameVerifier21;
        java.net.ResponseCache responseCache23 = null;
        okHttpClient20.responseCache = responseCache23;
        java.util.List<java.lang.String> strList25 = okHttpClient20.transports;
        com.squareup.okhttp.ConnectionPool connectionPool26 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient20.connectionPool = connectionPool26;
        java.net.Proxy proxy28 = null;
        okHttpClient20.proxy = proxy28;
        boolean boolean30 = okHttpClient20.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient20.setFollowProtocolRedirects(true);
        javax.net.ssl.HostnameVerifier hostnameVerifier33 = null;
        okHttpClient20.hostnameVerifier = hostnameVerifier33;
        com.squareup.okhttp.OkHttpClient okHttpClient35 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier36 = null;
        okHttpClient35.hostnameVerifier = hostnameVerifier36;
        java.net.ResponseCache responseCache38 = null;
        okHttpClient35.responseCache = responseCache38;
        java.util.List<java.lang.String> strList40 = okHttpClient35.transports;
        com.squareup.okhttp.ConnectionPool connectionPool41 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient35.connectionPool = connectionPool41;
        java.net.Proxy proxy43 = null;
        okHttpClient35.proxy = proxy43;
        boolean boolean45 = okHttpClient35.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient47 = okHttpClient35.setFollowProtocolRedirects(true);
        com.squareup.okhttp.OkHttpClient okHttpClient48 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier49 = null;
        okHttpClient48.hostnameVerifier = hostnameVerifier49;
        java.net.ResponseCache responseCache51 = null;
        okHttpClient48.responseCache = responseCache51;
        java.util.List<java.lang.String> strList53 = okHttpClient48.transports;
        com.squareup.okhttp.ConnectionPool connectionPool54 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient48.connectionPool = connectionPool54;
        com.squareup.okhttp.ConnectionPool connectionPool56 = okHttpClient48.connectionPool;
        com.squareup.okhttp.OkHttpClient okHttpClient57 = okHttpClient35.setConnectionPool(connectionPool56);
        com.squareup.okhttp.OkHttpClient okHttpClient58 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier59 = null;
        okHttpClient58.hostnameVerifier = hostnameVerifier59;
        java.net.ResponseCache responseCache61 = null;
        okHttpClient58.responseCache = responseCache61;
        java.util.List<java.lang.String> strList63 = okHttpClient58.transports;
        com.squareup.okhttp.ConnectionPool connectionPool64 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient58.connectionPool = connectionPool64;
        com.squareup.okhttp.OkHttpClient okHttpClient66 = okHttpClient58.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient67 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier68 = null;
        okHttpClient67.hostnameVerifier = hostnameVerifier68;
        java.net.ResponseCache responseCache70 = null;
        okHttpClient67.responseCache = responseCache70;
        java.util.List<java.lang.String> strList72 = okHttpClient67.transports;
        com.squareup.okhttp.ConnectionPool connectionPool73 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient67.connectionPool = connectionPool73;
        com.squareup.okhttp.OkHttpClient okHttpClient75 = okHttpClient67.copyWithDefaults();
        java.net.ProxySelector proxySelector76 = okHttpClient75.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory77 = okHttpClient75.getSslSocketFactory();
        okHttpClient58.sslSocketFactory = sSLSocketFactory77;
        com.squareup.okhttp.OkHttpClient okHttpClient79 = okHttpClient57.setSSLSocketFactory(sSLSocketFactory77);
        okHttpClient20.sslSocketFactory = sSLSocketFactory77;
        java.lang.String[] strArray81 = sSLSocketFactory77.getSupportedCipherSuites();
        java.lang.String[] strArray82 = sSLSocketFactory77.getDefaultCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient83 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory77);
        java.net.Proxy proxy84 = okHttpClient0.proxy;
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNotNull(routeSet16);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNotNull(connectionPool26);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNotNull(connectionPool41);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(okHttpClient47);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNotNull(connectionPool54);
        org.junit.Assert.assertNotNull(connectionPool56);
        org.junit.Assert.assertNotNull(okHttpClient57);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNotNull(connectionPool64);
        org.junit.Assert.assertNotNull(okHttpClient66);
        org.junit.Assert.assertNull(strList72);
        org.junit.Assert.assertNotNull(connectionPool73);
        org.junit.Assert.assertNotNull(okHttpClient75);
// flaky:         org.junit.Assert.assertNull(proxySelector76);
        org.junit.Assert.assertNotNull(sSLSocketFactory77);
        org.junit.Assert.assertNotNull(okHttpClient79);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertNotNull(okHttpClient83);
        org.junit.Assert.assertNull(proxy84);
    }

    @Test
    public void test12111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12111");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.Proxy proxy8 = null;
        okHttpClient0.proxy = proxy8;
        boolean boolean10 = okHttpClient0.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient0.setFollowProtocolRedirects(true);
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = null;
        okHttpClient13.hostnameVerifier = hostnameVerifier14;
        java.net.ProxySelector proxySelector16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient13.setProxySelector(proxySelector16);
        java.net.ResponseCache responseCache18 = null;
        okHttpClient17.responseCache = responseCache18;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory20 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient17.setSSLSocketFactory(sSLSocketFactory20);
        java.net.ProxySelector proxySelector22 = null;
        okHttpClient17.proxySelector = proxySelector22;
        com.squareup.okhttp.ConnectionPool connectionPool26 = new com.squareup.okhttp.ConnectionPool((int) ' ', (long) (short) 100);
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient17.setConnectionPool(connectionPool26);
        okHttpClient0.connectionPool = connectionPool26;
        java.net.ProxySelector proxySelector29 = null;
        okHttpClient0.proxySelector = proxySelector29;
        java.net.Proxy proxy31 = okHttpClient0.proxy;
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNull(proxy31);
    }

    @Test
    public void test12112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12112");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.CookieHandler cookieHandler8 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache9 = okHttpClient0.okResponseCache();
        java.net.CookieHandler cookieHandler10 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        java.net.Proxy proxy12 = java.net.Proxy.NO_PROXY;
        boolean boolean14 = proxy12.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type15 = proxy12.type();
        java.net.SocketAddress socketAddress16 = proxy12.address();
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient0.setProxy(proxy12);
        boolean boolean18 = okHttpClient17.followProtocolRedirects;
        java.net.ProxySelector proxySelector19 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient17.setProxySelector(proxySelector19);
        com.squareup.okhttp.OkHttpClient okHttpClient21 = new com.squareup.okhttp.OkHttpClient(okHttpClient20);
        com.squareup.okhttp.ConnectionPool connectionPool22 = okHttpClient20.getConnectionPool();
        java.util.List<java.lang.String> strList23 = okHttpClient20.getTransports();
        com.squareup.okhttp.ConnectionPool connectionPool26 = new com.squareup.okhttp.ConnectionPool((int) (short) 10, (long) (short) 10);
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient20.setConnectionPool(connectionPool26);
        com.squareup.okhttp.OkHttpClient okHttpClient28 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool29 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient28.connectionPool = connectionPool29;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier32 = null;
        okHttpClient31.hostnameVerifier = hostnameVerifier32;
        java.net.ResponseCache responseCache34 = null;
        okHttpClient31.responseCache = responseCache34;
        java.util.List<java.lang.String> strList36 = okHttpClient31.transports;
        com.squareup.okhttp.ConnectionPool connectionPool37 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient31.connectionPool = connectionPool37;
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient28.setConnectionPool(connectionPool37);
        com.squareup.okhttp.ConnectionPool connectionPool40 = okHttpClient39.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator41 = okHttpClient39.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool44 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient39.connectionPool = connectionPool44;
        java.net.ResponseCache responseCache46 = okHttpClient39.responseCache;
        com.squareup.okhttp.ConnectionPool connectionPool49 = new com.squareup.okhttp.ConnectionPool((int) (byte) 0, 10L);
        okHttpClient39.connectionPool = connectionPool49;
        java.util.List<java.lang.String> strList51 = okHttpClient39.transports;
        java.util.List<java.lang.String> strList52 = okHttpClient39.transports;
        com.squareup.okhttp.OkHttpClient okHttpClient53 = new com.squareup.okhttp.OkHttpClient(okHttpClient39);
        com.squareup.okhttp.OkHttpClient okHttpClient54 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool55 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient54.connectionPool = connectionPool55;
        java.net.ResponseCache responseCache57 = null;
        okHttpClient54.responseCache = responseCache57;
        java.net.Proxy proxy59 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress60 = proxy59.address();
        java.net.SocketAddress socketAddress61 = proxy59.address();
        okHttpClient54.proxy = proxy59;
        java.util.Set<com.squareup.okhttp.Route> routeSet63 = okHttpClient54.failedRoutes;
        okHttpClient39.failedRoutes = routeSet63;
        com.squareup.okhttp.OkHttpClient okHttpClient65 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool66 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient65.connectionPool = connectionPool66;
        com.squareup.okhttp.OkHttpClient okHttpClient68 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier69 = null;
        okHttpClient68.hostnameVerifier = hostnameVerifier69;
        java.net.ResponseCache responseCache71 = null;
        okHttpClient68.responseCache = responseCache71;
        java.util.List<java.lang.String> strList73 = okHttpClient68.transports;
        com.squareup.okhttp.ConnectionPool connectionPool74 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient68.connectionPool = connectionPool74;
        com.squareup.okhttp.OkHttpClient okHttpClient76 = okHttpClient65.setConnectionPool(connectionPool74);
        com.squareup.okhttp.OkAuthenticator okAuthenticator77 = okHttpClient76.getAuthenticator();
        java.net.ProxySelector proxySelector78 = okHttpClient76.getProxySelector();
        java.net.ProxySelector proxySelector79 = null;
        okHttpClient76.proxySelector = proxySelector79;
        java.net.ProxySelector proxySelector81 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient82 = okHttpClient76.setProxySelector(proxySelector81);
        com.squareup.okhttp.ConnectionPool connectionPool85 = new com.squareup.okhttp.ConnectionPool(10, 1L);
        com.squareup.okhttp.OkHttpClient okHttpClient86 = okHttpClient82.setConnectionPool(connectionPool85);
        java.util.Set<com.squareup.okhttp.Route> routeSet87 = okHttpClient86.failedRoutes;
        okHttpClient39.failedRoutes = routeSet87;
        okHttpClient20.failedRoutes = routeSet87;
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNull(cookieHandler8);
        org.junit.Assert.assertNull(okResponseCache9);
        org.junit.Assert.assertNull(cookieHandler10);
        org.junit.Assert.assertNotNull(proxy12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + type15 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type15.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress16);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNotNull(connectionPool22);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNotNull(connectionPool29);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNotNull(connectionPool37);
        org.junit.Assert.assertNotNull(okHttpClient39);
        org.junit.Assert.assertNotNull(connectionPool40);
        org.junit.Assert.assertNull(okAuthenticator41);
        org.junit.Assert.assertNull(responseCache46);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNotNull(connectionPool55);
        org.junit.Assert.assertNotNull(proxy59);
        org.junit.Assert.assertNull(socketAddress60);
        org.junit.Assert.assertNull(socketAddress61);
        org.junit.Assert.assertNotNull(routeSet63);
        org.junit.Assert.assertNotNull(connectionPool66);
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertNotNull(connectionPool74);
        org.junit.Assert.assertNotNull(okHttpClient76);
        org.junit.Assert.assertNull(okAuthenticator77);
        org.junit.Assert.assertNull(proxySelector78);
        org.junit.Assert.assertNotNull(okHttpClient82);
        org.junit.Assert.assertNotNull(okHttpClient86);
        org.junit.Assert.assertNotNull(routeSet87);
    }

    @Test
    public void test12113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12113");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory8 = okHttpClient0.getSslSocketFactory();
        java.net.ProxySelector proxySelector9 = null;
        okHttpClient0.proxySelector = proxySelector9;
        com.squareup.okhttp.ConnectionPool connectionPool11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient0.setConnectionPool(connectionPool11);
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = null;
        okHttpClient13.hostnameVerifier = hostnameVerifier14;
        java.net.ResponseCache responseCache16 = null;
        okHttpClient13.responseCache = responseCache16;
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = okHttpClient13.hostnameVerifier;
        java.net.Proxy proxy19 = okHttpClient13.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool22 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient13.connectionPool = connectionPool22;
        boolean boolean24 = okHttpClient13.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient25 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier26 = null;
        okHttpClient25.hostnameVerifier = hostnameVerifier26;
        java.net.ResponseCache responseCache28 = null;
        okHttpClient25.responseCache = responseCache28;
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = okHttpClient25.hostnameVerifier;
        java.net.Proxy proxy31 = okHttpClient25.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool34 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient25.connectionPool = connectionPool34;
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient25.copyWithDefaults();
        java.net.Proxy proxy37 = okHttpClient36.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier38 = okHttpClient36.getHostnameVerifier();
        okHttpClient13.hostnameVerifier = hostnameVerifier38;
        com.squareup.okhttp.OkHttpClient okHttpClient40 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier41 = null;
        okHttpClient40.hostnameVerifier = hostnameVerifier41;
        java.net.ResponseCache responseCache43 = null;
        okHttpClient40.responseCache = responseCache43;
        java.util.List<java.lang.String> strList45 = okHttpClient40.transports;
        com.squareup.okhttp.ConnectionPool connectionPool46 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient40.connectionPool = connectionPool46;
        java.net.Proxy proxy48 = null;
        okHttpClient40.proxy = proxy48;
        boolean boolean50 = okHttpClient40.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient52 = okHttpClient40.setFollowProtocolRedirects(true);
        com.squareup.okhttp.OkHttpClient okHttpClient53 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier54 = null;
        okHttpClient53.hostnameVerifier = hostnameVerifier54;
        java.net.ResponseCache responseCache56 = null;
        okHttpClient53.responseCache = responseCache56;
        java.util.List<java.lang.String> strList58 = okHttpClient53.transports;
        com.squareup.okhttp.ConnectionPool connectionPool59 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient53.connectionPool = connectionPool59;
        com.squareup.okhttp.ConnectionPool connectionPool61 = okHttpClient53.connectionPool;
        com.squareup.okhttp.OkHttpClient okHttpClient62 = okHttpClient40.setConnectionPool(connectionPool61);
        com.squareup.okhttp.OkHttpClient okHttpClient63 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier64 = null;
        okHttpClient63.hostnameVerifier = hostnameVerifier64;
        java.net.ResponseCache responseCache66 = null;
        okHttpClient63.responseCache = responseCache66;
        java.util.List<java.lang.String> strList68 = okHttpClient63.transports;
        com.squareup.okhttp.ConnectionPool connectionPool69 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient63.connectionPool = connectionPool69;
        com.squareup.okhttp.OkHttpClient okHttpClient71 = okHttpClient63.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient72 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier73 = null;
        okHttpClient72.hostnameVerifier = hostnameVerifier73;
        java.net.ResponseCache responseCache75 = null;
        okHttpClient72.responseCache = responseCache75;
        java.util.List<java.lang.String> strList77 = okHttpClient72.transports;
        com.squareup.okhttp.ConnectionPool connectionPool78 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient72.connectionPool = connectionPool78;
        com.squareup.okhttp.OkHttpClient okHttpClient80 = okHttpClient72.copyWithDefaults();
        java.net.ProxySelector proxySelector81 = okHttpClient80.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory82 = okHttpClient80.getSslSocketFactory();
        okHttpClient63.sslSocketFactory = sSLSocketFactory82;
        com.squareup.okhttp.OkHttpClient okHttpClient84 = okHttpClient62.setSSLSocketFactory(sSLSocketFactory82);
        okHttpClient13.sslSocketFactory = sSLSocketFactory82;
        java.lang.String[] strArray86 = sSLSocketFactory82.getSupportedCipherSuites();
        java.net.Socket socket87 = sSLSocketFactory82.createSocket();
        com.squareup.okhttp.OkHttpClient okHttpClient88 = okHttpClient12.setSSLSocketFactory(sSLSocketFactory82);
        java.lang.String[] strArray89 = sSLSocketFactory82.getDefaultCipherSuites();
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNull(sSLSocketFactory8);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertNull(hostnameVerifier18);
        org.junit.Assert.assertNull(proxy19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(hostnameVerifier30);
        org.junit.Assert.assertNull(proxy31);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNull(proxy37);
        org.junit.Assert.assertNotNull(hostnameVerifier38);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNotNull(connectionPool46);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(okHttpClient52);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNotNull(connectionPool59);
        org.junit.Assert.assertNotNull(connectionPool61);
        org.junit.Assert.assertNotNull(okHttpClient62);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNotNull(connectionPool69);
        org.junit.Assert.assertNotNull(okHttpClient71);
        org.junit.Assert.assertNull(strList77);
        org.junit.Assert.assertNotNull(connectionPool78);
        org.junit.Assert.assertNotNull(okHttpClient80);
// flaky:         org.junit.Assert.assertNull(proxySelector81);
        org.junit.Assert.assertNotNull(sSLSocketFactory82);
        org.junit.Assert.assertNotNull(okHttpClient84);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertNotNull(socket87);
        org.junit.Assert.assertEquals(socket87.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(okHttpClient88);
        org.junit.Assert.assertNotNull(strArray89);
    }

    @Test
    public void test12114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12114");
        com.squareup.okhttp.ConnectionPool connectionPool2 = new com.squareup.okhttp.ConnectionPool((int) (short) -1, (long) (short) 10);
        int int3 = connectionPool2.getSpdyConnectionCount();
        connectionPool2.evictAll();
        com.squareup.okhttp.Connection connection5 = null;
        // The following exception was thrown during execution in test generation
        try {
            connectionPool2.maybeShare(connection5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test12115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12115");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.CookieHandler cookieHandler5 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = null;
        okHttpClient6.hostnameVerifier = hostnameVerifier7;
        java.net.ResponseCache responseCache9 = null;
        okHttpClient6.responseCache = responseCache9;
        java.util.List<java.lang.String> strList11 = okHttpClient6.transports;
        com.squareup.okhttp.ConnectionPool connectionPool12 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient6.connectionPool = connectionPool12;
        java.net.Proxy proxy14 = null;
        okHttpClient6.proxy = proxy14;
        java.util.Set<com.squareup.okhttp.Route> routeSet16 = okHttpClient6.failedRoutes;
        okHttpClient0.failedRoutes = routeSet16;
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient0.setHostnameVerifier(hostnameVerifier18);
        java.net.ProxySelector proxySelector20 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient19.setProxySelector(proxySelector20);
        java.net.ResponseCache responseCache22 = null;
        okHttpClient21.responseCache = responseCache22;
        java.net.CookieHandler cookieHandler24 = okHttpClient21.cookieHandler;
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNotNull(routeSet16);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNull(cookieHandler24);
    }

    @Test
    public void test12116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12116");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient0.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.copyWithDefaults();
        java.net.Proxy proxy12 = okHttpClient11.getProxy();
        java.net.CookieHandler cookieHandler13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient11.setCookieHandler(cookieHandler13);
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient(okHttpClient11);
        com.squareup.okhttp.OkHttpClient okHttpClient16 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier17 = null;
        okHttpClient16.hostnameVerifier = hostnameVerifier17;
        boolean boolean19 = okHttpClient16.getFollowProtocolRedirects();
        java.net.CookieHandler cookieHandler20 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient16.setCookieHandler(cookieHandler20);
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache22 = okHttpClient16.okResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient23 = new com.squareup.okhttp.OkHttpClient(okHttpClient16);
        java.net.ResponseCache responseCache24 = okHttpClient23.responseCache;
        java.util.Set<com.squareup.okhttp.Route> routeSet25 = okHttpClient23.failedRoutes;
        okHttpClient15.failedRoutes = routeSet25;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool28 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient27.connectionPool = connectionPool28;
        com.squareup.okhttp.OkHttpClient okHttpClient30 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier31 = null;
        okHttpClient30.hostnameVerifier = hostnameVerifier31;
        java.net.ResponseCache responseCache33 = null;
        okHttpClient30.responseCache = responseCache33;
        java.util.List<java.lang.String> strList35 = okHttpClient30.transports;
        com.squareup.okhttp.ConnectionPool connectionPool36 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient30.connectionPool = connectionPool36;
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient27.setConnectionPool(connectionPool36);
        com.squareup.okhttp.OkAuthenticator okAuthenticator39 = okHttpClient38.getAuthenticator();
        java.net.ProxySelector proxySelector40 = okHttpClient38.getProxySelector();
        java.net.ResponseCache responseCache41 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient38.setResponseCache(responseCache41);
        java.net.ResponseCache responseCache43 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient44 = okHttpClient42.setResponseCache(responseCache43);
        com.squareup.okhttp.ConnectionPool connectionPool45 = okHttpClient42.connectionPool;
        boolean boolean46 = okHttpClient42.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient47 = okHttpClient42.copyWithDefaults();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory48 = okHttpClient47.getSslSocketFactory();
        okHttpClient15.sslSocketFactory = sSLSocketFactory48;
        java.lang.String[] strArray50 = sSLSocketFactory48.getDefaultCipherSuites();
        java.net.Socket socket51 = sSLSocketFactory48.createSocket();
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(proxy12);
        org.junit.Assert.assertNotNull(okHttpClient14);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNull(okResponseCache22);
        org.junit.Assert.assertNull(responseCache24);
        org.junit.Assert.assertNotNull(routeSet25);
        org.junit.Assert.assertNotNull(connectionPool28);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNotNull(connectionPool36);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNull(okAuthenticator39);
        org.junit.Assert.assertNull(proxySelector40);
        org.junit.Assert.assertNotNull(okHttpClient42);
        org.junit.Assert.assertNotNull(okHttpClient44);
        org.junit.Assert.assertNotNull(connectionPool45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(okHttpClient47);
        org.junit.Assert.assertNotNull(sSLSocketFactory48);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(socket51);
        org.junit.Assert.assertEquals(socket51.toString(), "Socket[unconnected]");
    }

    @Test
    public void test12117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12117");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient0.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.copyWithDefaults();
        java.net.Proxy proxy12 = okHttpClient11.getProxy();
        java.net.CookieHandler cookieHandler13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient11.setCookieHandler(cookieHandler13);
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient(okHttpClient11);
        com.squareup.okhttp.OkHttpClient okHttpClient16 = new com.squareup.okhttp.OkHttpClient(okHttpClient11);
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = null;
        okHttpClient17.hostnameVerifier = hostnameVerifier18;
        java.net.ResponseCache responseCache20 = null;
        okHttpClient17.responseCache = responseCache20;
        javax.net.ssl.HostnameVerifier hostnameVerifier22 = okHttpClient17.hostnameVerifier;
        java.net.Proxy proxy23 = okHttpClient17.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool26 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient17.connectionPool = connectionPool26;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient17.copyWithDefaults();
        java.net.Proxy proxy29 = okHttpClient28.getProxy();
        java.util.Set<com.squareup.okhttp.Route> routeSet30 = okHttpClient28.failedRoutes;
        okHttpClient16.failedRoutes = routeSet30;
        java.net.ProxySelector proxySelector32 = okHttpClient16.proxySelector;
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(proxy12);
        org.junit.Assert.assertNotNull(okHttpClient14);
        org.junit.Assert.assertNull(hostnameVerifier22);
        org.junit.Assert.assertNull(proxy23);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNull(proxy29);
        org.junit.Assert.assertNotNull(routeSet30);
        org.junit.Assert.assertNull(proxySelector32);
    }

    @Test
    public void test12118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12118");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient9 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier10 = null;
        okHttpClient9.hostnameVerifier = hostnameVerifier10;
        java.net.ResponseCache responseCache12 = null;
        okHttpClient9.responseCache = responseCache12;
        java.util.List<java.lang.String> strList14 = okHttpClient9.transports;
        com.squareup.okhttp.ConnectionPool connectionPool15 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient9.connectionPool = connectionPool15;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient9.copyWithDefaults();
        java.net.ProxySelector proxySelector18 = okHttpClient17.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory19 = okHttpClient17.getSslSocketFactory();
        okHttpClient0.sslSocketFactory = sSLSocketFactory19;
        java.net.Socket socket21 = sSLSocketFactory19.createSocket();
        java.net.Socket socket22 = sSLSocketFactory19.createSocket();
        java.lang.String[] strArray23 = sSLSocketFactory19.getSupportedCipherSuites();
        java.net.Socket socket24 = sSLSocketFactory19.createSocket();
        java.lang.String[] strArray25 = sSLSocketFactory19.getSupportedCipherSuites();
        java.net.Socket socket26 = sSLSocketFactory19.createSocket();
        java.lang.String[] strArray27 = sSLSocketFactory19.getDefaultCipherSuites();
        java.lang.String[] strArray28 = sSLSocketFactory19.getDefaultCipherSuites();
        java.net.Socket socket29 = sSLSocketFactory19.createSocket();
        java.net.Socket socket30 = sSLSocketFactory19.createSocket();
        java.lang.String[] strArray31 = sSLSocketFactory19.getSupportedCipherSuites();
        java.net.Socket socket32 = sSLSocketFactory19.createSocket();
        java.net.Socket socket33 = sSLSocketFactory19.createSocket();
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNotNull(connectionPool15);
        org.junit.Assert.assertNotNull(okHttpClient17);
// flaky:         org.junit.Assert.assertNull(proxySelector18);
        org.junit.Assert.assertNotNull(sSLSocketFactory19);
        org.junit.Assert.assertNotNull(socket21);
        org.junit.Assert.assertEquals(socket21.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(socket22);
        org.junit.Assert.assertEquals(socket22.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(socket24);
        org.junit.Assert.assertEquals(socket24.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(socket26);
        org.junit.Assert.assertEquals(socket26.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(socket29);
        org.junit.Assert.assertEquals(socket29.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(socket30);
        org.junit.Assert.assertEquals(socket30.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(socket32);
        org.junit.Assert.assertEquals(socket32.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(socket33);
        org.junit.Assert.assertEquals(socket33.toString(), "Socket[unconnected]");
    }

    @Test
    public void test12119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12119");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient0.connectionPool = connectionPool9;
        java.util.List<java.lang.String> strList11 = okHttpClient0.getTransports();
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient0.setHostnameVerifier(hostnameVerifier12);
        com.squareup.okhttp.OkHttpClient okHttpClient14 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        boolean boolean15 = okHttpClient14.followProtocolRedirects;
        com.squareup.okhttp.ConnectionPool connectionPool16 = okHttpClient14.connectionPool;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient(okHttpClient14);
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = okHttpClient14.hostnameVerifier;
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(connectionPool16);
        org.junit.Assert.assertNull(hostnameVerifier18);
    }

    @Test
    public void test12120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12120");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        java.net.Proxy proxy12 = okHttpClient11.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool14 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient13.connectionPool = connectionPool14;
        int int16 = connectionPool14.getSpdyConnectionCount();
        okHttpClient11.connectionPool = connectionPool14;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient11.copyWithDefaults();
        java.net.CookieHandler cookieHandler19 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient11.setCookieHandler(cookieHandler19);
        java.util.Set<com.squareup.okhttp.Route> routeSet21 = okHttpClient20.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier23 = null;
        okHttpClient22.hostnameVerifier = hostnameVerifier23;
        java.net.ProxySelector proxySelector25 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient22.setProxySelector(proxySelector25);
        java.net.ResponseCache responseCache27 = null;
        okHttpClient26.responseCache = responseCache27;
        javax.net.ssl.HostnameVerifier hostnameVerifier29 = okHttpClient26.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient26.setFollowProtocolRedirects(false);
        java.net.ProxySelector proxySelector32 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient31.setProxySelector(proxySelector32);
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache34 = okHttpClient31.okResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient35 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool36 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient35.connectionPool = connectionPool36;
        com.squareup.okhttp.OkHttpClient okHttpClient38 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier39 = null;
        okHttpClient38.hostnameVerifier = hostnameVerifier39;
        java.net.ResponseCache responseCache41 = null;
        okHttpClient38.responseCache = responseCache41;
        java.util.List<java.lang.String> strList43 = okHttpClient38.transports;
        com.squareup.okhttp.ConnectionPool connectionPool44 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient38.connectionPool = connectionPool44;
        com.squareup.okhttp.OkHttpClient okHttpClient46 = okHttpClient35.setConnectionPool(connectionPool44);
        com.squareup.okhttp.ConnectionPool connectionPool47 = okHttpClient46.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator48 = okHttpClient46.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool51 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient46.connectionPool = connectionPool51;
        java.net.ResponseCache responseCache53 = okHttpClient46.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory54 = okHttpClient46.sslSocketFactory;
        java.net.Proxy proxy55 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress56 = proxy55.address();
        com.squareup.okhttp.OkHttpClient okHttpClient57 = okHttpClient46.setProxy(proxy55);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory58 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient59 = okHttpClient46.setSSLSocketFactory(sSLSocketFactory58);
        com.squareup.okhttp.OkHttpClient okHttpClient60 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier61 = null;
        okHttpClient60.hostnameVerifier = hostnameVerifier61;
        java.net.ResponseCache responseCache63 = null;
        okHttpClient60.responseCache = responseCache63;
        javax.net.ssl.HostnameVerifier hostnameVerifier65 = okHttpClient60.hostnameVerifier;
        java.net.Proxy proxy66 = okHttpClient60.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool69 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient60.connectionPool = connectionPool69;
        com.squareup.okhttp.OkHttpClient okHttpClient71 = okHttpClient60.copyWithDefaults();
        java.net.ResponseCache responseCache72 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient73 = okHttpClient71.setResponseCache(responseCache72);
        com.squareup.okhttp.OkAuthenticator okAuthenticator74 = okHttpClient71.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient75 = okHttpClient46.setAuthenticator(okAuthenticator74);
        com.squareup.okhttp.OkHttpClient okHttpClient76 = okHttpClient31.setAuthenticator(okAuthenticator74);
        com.squareup.okhttp.OkHttpClient okHttpClient77 = okHttpClient20.setAuthenticator(okAuthenticator74);
        java.net.CookieHandler cookieHandler78 = null;
        okHttpClient20.cookieHandler = cookieHandler78;
        com.squareup.okhttp.OkHttpClient okHttpClient80 = new com.squareup.okhttp.OkHttpClient(okHttpClient20);
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(proxy12);
        org.junit.Assert.assertNotNull(connectionPool14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNotNull(routeSet21);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNull(hostnameVerifier29);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNotNull(okHttpClient33);
        org.junit.Assert.assertNull(okResponseCache34);
        org.junit.Assert.assertNotNull(connectionPool36);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNotNull(connectionPool44);
        org.junit.Assert.assertNotNull(okHttpClient46);
        org.junit.Assert.assertNotNull(connectionPool47);
        org.junit.Assert.assertNull(okAuthenticator48);
        org.junit.Assert.assertNull(responseCache53);
        org.junit.Assert.assertNull(sSLSocketFactory54);
        org.junit.Assert.assertNotNull(proxy55);
        org.junit.Assert.assertNull(socketAddress56);
        org.junit.Assert.assertNotNull(okHttpClient57);
        org.junit.Assert.assertNotNull(okHttpClient59);
        org.junit.Assert.assertNull(hostnameVerifier65);
        org.junit.Assert.assertNull(proxy66);
        org.junit.Assert.assertNotNull(okHttpClient71);
        org.junit.Assert.assertNotNull(okHttpClient73);
        org.junit.Assert.assertNotNull(okAuthenticator74);
        org.junit.Assert.assertNotNull(okHttpClient75);
        org.junit.Assert.assertNotNull(okHttpClient76);
        org.junit.Assert.assertNotNull(okHttpClient77);
    }

    @Test
    public void test12121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12121");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache8 = okHttpClient7.okResponseCache();
        java.net.ResponseCache responseCache9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient7.setResponseCache(responseCache9);
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        okHttpClient7.transports = strList13;
        okHttpClient0.transports = strList13;
        javax.net.ssl.HostnameVerifier hostnameVerifier17 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier17;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory20 = null;
        okHttpClient0.sslSocketFactory = sSLSocketFactory20;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache22 = okHttpClient0.okResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient23 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        java.net.CookieHandler cookieHandler24 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient0.setCookieHandler(cookieHandler24);
        javax.net.ssl.HostnameVerifier hostnameVerifier26 = okHttpClient25.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient27 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier28 = null;
        okHttpClient27.hostnameVerifier = hostnameVerifier28;
        java.net.ResponseCache responseCache30 = null;
        okHttpClient27.responseCache = responseCache30;
        java.util.List<java.lang.String> strList32 = okHttpClient27.transports;
        com.squareup.okhttp.ConnectionPool connectionPool33 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient27.connectionPool = connectionPool33;
        java.net.CookieHandler cookieHandler35 = okHttpClient27.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache36 = okHttpClient27.okResponseCache();
        java.net.CookieHandler cookieHandler37 = okHttpClient27.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient38 = new com.squareup.okhttp.OkHttpClient(okHttpClient27);
        java.net.Proxy proxy39 = java.net.Proxy.NO_PROXY;
        boolean boolean41 = proxy39.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type42 = proxy39.type();
        java.net.SocketAddress socketAddress43 = proxy39.address();
        com.squareup.okhttp.OkHttpClient okHttpClient44 = okHttpClient27.setProxy(proxy39);
        java.lang.String[] strArray46 = new java.lang.String[] { "DIRECT" };
        java.util.ArrayList<java.lang.String> strList47 = new java.util.ArrayList<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        okHttpClient27.transports = strList47;
        com.squareup.okhttp.OkHttpClient okHttpClient51 = okHttpClient27.setFollowProtocolRedirects(false);
        com.squareup.okhttp.ConnectionPool connectionPool54 = new com.squareup.okhttp.ConnectionPool((int) '#', (long) (short) 100);
        com.squareup.okhttp.OkHttpClient okHttpClient55 = okHttpClient51.setConnectionPool(connectionPool54);
        java.net.CookieHandler cookieHandler56 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient57 = okHttpClient55.setCookieHandler(cookieHandler56);
        java.net.ResponseCache responseCache58 = okHttpClient57.responseCache;
        java.net.Proxy proxy59 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress60 = proxy59.address();
        com.squareup.okhttp.OkHttpClient okHttpClient61 = okHttpClient57.setProxy(proxy59);
        java.net.Proxy.Type type62 = proxy59.type();
        com.squareup.okhttp.OkHttpClient okHttpClient63 = okHttpClient25.setProxy(proxy59);
        com.squareup.okhttp.OkHttpClient okHttpClient64 = new com.squareup.okhttp.OkHttpClient(okHttpClient63);
        com.squareup.okhttp.ConnectionPool connectionPool65 = okHttpClient63.connectionPool;
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNull(okResponseCache8);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(okResponseCache22);
        org.junit.Assert.assertNotNull(okHttpClient25);
        org.junit.Assert.assertNull(hostnameVerifier26);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNotNull(connectionPool33);
        org.junit.Assert.assertNull(cookieHandler35);
        org.junit.Assert.assertNull(okResponseCache36);
        org.junit.Assert.assertNull(cookieHandler37);
        org.junit.Assert.assertNotNull(proxy39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + type42 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type42.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress43);
        org.junit.Assert.assertNotNull(okHttpClient44);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(okHttpClient51);
        org.junit.Assert.assertNotNull(okHttpClient55);
        org.junit.Assert.assertNotNull(okHttpClient57);
        org.junit.Assert.assertNull(responseCache58);
        org.junit.Assert.assertNotNull(proxy59);
        org.junit.Assert.assertNull(socketAddress60);
        org.junit.Assert.assertNotNull(okHttpClient61);
        org.junit.Assert.assertTrue("'" + type62 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type62.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNotNull(okHttpClient63);
        org.junit.Assert.assertNull(connectionPool65);
    }

    @Test
    public void test12122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12122");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        java.net.Proxy proxy4 = okHttpClient0.proxy;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        boolean boolean6 = okHttpClient0.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool8 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient7.connectionPool = connectionPool8;
        java.net.ResponseCache responseCache10 = null;
        okHttpClient7.responseCache = responseCache10;
        java.net.Proxy proxy12 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress13 = proxy12.address();
        java.net.SocketAddress socketAddress14 = proxy12.address();
        okHttpClient7.proxy = proxy12;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient0.setProxy(proxy12);
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        com.squareup.okhttp.ConnectionPool connectionPool20 = new com.squareup.okhttp.ConnectionPool((int) (short) -1, (long) (short) 10);
        int int21 = connectionPool20.getSpdyConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient0.setConnectionPool(connectionPool20);
        com.squareup.okhttp.OkAuthenticator okAuthenticator23 = okHttpClient0.authenticator;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory24 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory24);
        java.net.ProxySelector proxySelector26 = okHttpClient0.getProxySelector();
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNull(proxy4);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(connectionPool8);
        org.junit.Assert.assertNotNull(proxy12);
        org.junit.Assert.assertNull(socketAddress13);
        org.junit.Assert.assertNull(socketAddress14);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNull(okAuthenticator23);
        org.junit.Assert.assertNotNull(okHttpClient25);
        org.junit.Assert.assertNull(proxySelector26);
    }

    @Test
    public void test12123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12123");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.CookieHandler cookieHandler8 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache9 = okHttpClient0.okResponseCache();
        java.net.CookieHandler cookieHandler10 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        java.net.Proxy proxy12 = java.net.Proxy.NO_PROXY;
        boolean boolean14 = proxy12.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type15 = proxy12.type();
        java.net.SocketAddress socketAddress16 = proxy12.address();
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient0.setProxy(proxy12);
        java.lang.String[] strArray19 = new java.lang.String[] { "DIRECT" };
        java.util.ArrayList<java.lang.String> strList20 = new java.util.ArrayList<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList20, strArray19);
        okHttpClient0.transports = strList20;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient0.setFollowProtocolRedirects(false);
        com.squareup.okhttp.ConnectionPool connectionPool27 = new com.squareup.okhttp.ConnectionPool((int) '#', (long) (short) 100);
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient24.setConnectionPool(connectionPool27);
        java.net.CookieHandler cookieHandler29 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient30 = okHttpClient28.setCookieHandler(cookieHandler29);
        java.net.ResponseCache responseCache31 = okHttpClient30.responseCache;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = new com.squareup.okhttp.OkHttpClient(okHttpClient30);
        boolean boolean33 = okHttpClient32.followProtocolRedirects;
        com.squareup.okhttp.ConnectionPool connectionPool36 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, 100L);
        connectionPool36.evictAll();
        connectionPool36.evictAll();
        okHttpClient32.connectionPool = connectionPool36;
        com.squareup.okhttp.ConnectionPool connectionPool40 = okHttpClient32.connectionPool;
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient32.setFollowProtocolRedirects(true);
        com.squareup.okhttp.OkHttpClient okHttpClient43 = new com.squareup.okhttp.OkHttpClient(okHttpClient42);
        com.squareup.okhttp.OkHttpClient okHttpClient44 = okHttpClient43.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient45 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier46 = null;
        okHttpClient45.hostnameVerifier = hostnameVerifier46;
        java.net.ResponseCache responseCache48 = null;
        okHttpClient45.responseCache = responseCache48;
        java.util.List<java.lang.String> strList50 = okHttpClient45.transports;
        com.squareup.okhttp.ConnectionPool connectionPool51 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient45.connectionPool = connectionPool51;
        java.net.CookieHandler cookieHandler53 = okHttpClient45.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache54 = okHttpClient45.okResponseCache();
        java.net.CookieHandler cookieHandler55 = okHttpClient45.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient56 = new com.squareup.okhttp.OkHttpClient(okHttpClient45);
        java.net.Proxy proxy57 = java.net.Proxy.NO_PROXY;
        boolean boolean59 = proxy57.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type60 = proxy57.type();
        java.net.SocketAddress socketAddress61 = proxy57.address();
        com.squareup.okhttp.OkHttpClient okHttpClient62 = okHttpClient45.setProxy(proxy57);
        com.squareup.okhttp.OkHttpClient okHttpClient63 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier64 = null;
        okHttpClient63.hostnameVerifier = hostnameVerifier64;
        java.net.ResponseCache responseCache66 = null;
        okHttpClient63.responseCache = responseCache66;
        java.util.List<java.lang.String> strList68 = okHttpClient63.transports;
        com.squareup.okhttp.ConnectionPool connectionPool69 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient63.connectionPool = connectionPool69;
        com.squareup.okhttp.OkHttpClient okHttpClient71 = okHttpClient63.copyWithDefaults();
        java.net.ProxySelector proxySelector72 = okHttpClient71.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory73 = okHttpClient71.getSslSocketFactory();
        okHttpClient62.sslSocketFactory = sSLSocketFactory73;
        java.lang.String[] strArray75 = sSLSocketFactory73.getSupportedCipherSuites();
        okHttpClient43.sslSocketFactory = sSLSocketFactory73;
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNull(cookieHandler8);
        org.junit.Assert.assertNull(okResponseCache9);
        org.junit.Assert.assertNull(cookieHandler10);
        org.junit.Assert.assertNotNull(proxy12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + type15 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type15.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress16);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNotNull(okHttpClient30);
        org.junit.Assert.assertNull(responseCache31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(connectionPool40);
        org.junit.Assert.assertNotNull(okHttpClient42);
        org.junit.Assert.assertNotNull(okHttpClient44);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNotNull(connectionPool51);
        org.junit.Assert.assertNull(cookieHandler53);
        org.junit.Assert.assertNull(okResponseCache54);
        org.junit.Assert.assertNull(cookieHandler55);
        org.junit.Assert.assertNotNull(proxy57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + type60 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type60.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress61);
        org.junit.Assert.assertNotNull(okHttpClient62);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNotNull(connectionPool69);
        org.junit.Assert.assertNotNull(okHttpClient71);
// flaky:         org.junit.Assert.assertNull(proxySelector72);
        org.junit.Assert.assertNotNull(sSLSocketFactory73);
        org.junit.Assert.assertNotNull(strArray75);
    }

    @Test
    public void test12124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12124");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient4.copyWithDefaults();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache6 = okHttpClient4.okResponseCache();
        java.net.CookieHandler cookieHandler7 = null;
        okHttpClient4.cookieHandler = cookieHandler7;
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(okResponseCache6);
    }

    @Test
    public void test12125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12125");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.CookieHandler cookieHandler8 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache9 = okHttpClient0.okResponseCache();
        java.net.CookieHandler cookieHandler10 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        java.net.Proxy proxy12 = java.net.Proxy.NO_PROXY;
        boolean boolean14 = proxy12.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type15 = proxy12.type();
        java.net.SocketAddress socketAddress16 = proxy12.address();
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient0.setProxy(proxy12);
        boolean boolean18 = okHttpClient17.followProtocolRedirects;
        java.net.ProxySelector proxySelector19 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient17.setProxySelector(proxySelector19);
        com.squareup.okhttp.OkHttpClient okHttpClient21 = new com.squareup.okhttp.OkHttpClient(okHttpClient20);
        com.squareup.okhttp.ConnectionPool connectionPool22 = okHttpClient20.getConnectionPool();
        java.util.List<java.lang.String> strList23 = okHttpClient20.getTransports();
        com.squareup.okhttp.ConnectionPool connectionPool26 = new com.squareup.okhttp.ConnectionPool((int) (short) 10, (long) (short) 10);
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient20.setConnectionPool(connectionPool26);
        com.squareup.okhttp.OkHttpClient okHttpClient28 = new com.squareup.okhttp.OkHttpClient(okHttpClient27);
        com.squareup.okhttp.OkHttpClient okHttpClient29 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = null;
        okHttpClient29.hostnameVerifier = hostnameVerifier30;
        java.net.ResponseCache responseCache32 = null;
        okHttpClient29.responseCache = responseCache32;
        javax.net.ssl.HostnameVerifier hostnameVerifier34 = okHttpClient29.hostnameVerifier;
        java.net.Proxy proxy35 = okHttpClient29.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool38 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient29.connectionPool = connectionPool38;
        com.squareup.okhttp.OkHttpClient okHttpClient40 = okHttpClient29.copyWithDefaults();
        java.net.CookieHandler cookieHandler41 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient40.setCookieHandler(cookieHandler41);
        java.net.ResponseCache responseCache43 = null;
        okHttpClient42.responseCache = responseCache43;
        com.squareup.okhttp.OkHttpClient okHttpClient45 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache46 = okHttpClient45.okResponseCache();
        java.net.ResponseCache responseCache47 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient48 = okHttpClient45.setResponseCache(responseCache47);
        com.squareup.okhttp.OkHttpClient okHttpClient49 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache50 = okHttpClient49.okResponseCache();
        java.net.ResponseCache responseCache51 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient52 = okHttpClient49.setResponseCache(responseCache51);
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList55 = new java.util.ArrayList<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        okHttpClient49.transports = strList55;
        okHttpClient45.transports = strList55;
        com.squareup.okhttp.OkHttpClient okHttpClient59 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier60 = null;
        okHttpClient59.hostnameVerifier = hostnameVerifier60;
        java.net.ResponseCache responseCache62 = null;
        okHttpClient59.responseCache = responseCache62;
        java.util.List<java.lang.String> strList64 = okHttpClient59.transports;
        com.squareup.okhttp.ConnectionPool connectionPool65 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient59.connectionPool = connectionPool65;
        java.net.CookieHandler cookieHandler67 = okHttpClient59.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache68 = okHttpClient59.okResponseCache();
        java.net.CookieHandler cookieHandler69 = okHttpClient59.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient70 = new com.squareup.okhttp.OkHttpClient(okHttpClient59);
        java.net.ResponseCache responseCache71 = okHttpClient59.responseCache;
        java.net.CookieHandler cookieHandler72 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient73 = okHttpClient59.setCookieHandler(cookieHandler72);
        java.net.Proxy proxy74 = java.net.Proxy.NO_PROXY;
        boolean boolean76 = proxy74.equals((java.lang.Object) 1L);
        com.squareup.okhttp.OkHttpClient okHttpClient77 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache78 = okHttpClient77.okResponseCache();
        java.net.ResponseCache responseCache79 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient80 = okHttpClient77.setResponseCache(responseCache79);
        java.lang.String[] strArray82 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList83 = new java.util.ArrayList<java.lang.String>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList83, strArray82);
        okHttpClient77.transports = strList83;
        boolean boolean86 = proxy74.equals((java.lang.Object) strList83);
        com.squareup.okhttp.OkHttpClient.DEFAULT_TRANSPORTS = strList83;
        okHttpClient73.transports = strList83;
        okHttpClient45.transports = strList83;
        com.squareup.okhttp.OkHttpClient.DEFAULT_TRANSPORTS = strList83;
        com.squareup.okhttp.OkHttpClient.DEFAULT_TRANSPORTS = strList83;
        okHttpClient42.transports = strList83;
        okHttpClient28.transports = strList83;
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNull(cookieHandler8);
        org.junit.Assert.assertNull(okResponseCache9);
        org.junit.Assert.assertNull(cookieHandler10);
        org.junit.Assert.assertNotNull(proxy12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + type15 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type15.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress16);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNotNull(connectionPool22);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNull(hostnameVerifier34);
        org.junit.Assert.assertNull(proxy35);
        org.junit.Assert.assertNotNull(okHttpClient40);
        org.junit.Assert.assertNotNull(okHttpClient42);
        org.junit.Assert.assertNull(okResponseCache46);
        org.junit.Assert.assertNotNull(okHttpClient48);
        org.junit.Assert.assertNull(okResponseCache50);
        org.junit.Assert.assertNotNull(okHttpClient52);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNotNull(connectionPool65);
        org.junit.Assert.assertNull(cookieHandler67);
        org.junit.Assert.assertNull(okResponseCache68);
        org.junit.Assert.assertNull(cookieHandler69);
        org.junit.Assert.assertNull(responseCache71);
        org.junit.Assert.assertNotNull(okHttpClient73);
        org.junit.Assert.assertNotNull(proxy74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNull(okResponseCache78);
        org.junit.Assert.assertNotNull(okHttpClient80);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test12126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12126");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        java.net.CookieHandler cookieHandler6 = okHttpClient0.getCookieHandler();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory7 = okHttpClient0.getSslSocketFactory();
        com.squareup.okhttp.OkAuthenticator okAuthenticator8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient0.setAuthenticator(okAuthenticator8);
        java.net.ResponseCache responseCache10 = okHttpClient9.getResponseCache();
        okHttpClient9.followProtocolRedirects = false;
        java.net.ProxySelector proxySelector13 = okHttpClient9.proxySelector;
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNull(cookieHandler6);
        org.junit.Assert.assertNull(sSLSocketFactory7);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNull(responseCache10);
        org.junit.Assert.assertNull(proxySelector13);
    }

    @Test
    public void test12127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12127");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.CookieHandler cookieHandler5 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = null;
        okHttpClient6.hostnameVerifier = hostnameVerifier7;
        java.net.ResponseCache responseCache9 = null;
        okHttpClient6.responseCache = responseCache9;
        java.util.List<java.lang.String> strList11 = okHttpClient6.transports;
        com.squareup.okhttp.ConnectionPool connectionPool12 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient6.connectionPool = connectionPool12;
        java.net.Proxy proxy14 = null;
        okHttpClient6.proxy = proxy14;
        java.util.Set<com.squareup.okhttp.Route> routeSet16 = okHttpClient6.failedRoutes;
        okHttpClient0.failedRoutes = routeSet16;
        java.net.ProxySelector proxySelector18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient0.setProxySelector(proxySelector18);
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient21 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        java.net.ProxySelector proxySelector22 = null;
        okHttpClient21.proxySelector = proxySelector22;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory24 = okHttpClient21.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient25 = new com.squareup.okhttp.OkHttpClient(okHttpClient21);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNotNull(routeSet16);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNull(sSLSocketFactory24);
    }

    @Test
    public void test12128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12128");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.ConnectionPool connectionPool12 = okHttpClient11.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator13 = okHttpClient11.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool16 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient11.connectionPool = connectionPool16;
        java.net.ResponseCache responseCache18 = okHttpClient11.responseCache;
        com.squareup.okhttp.ConnectionPool connectionPool21 = new com.squareup.okhttp.ConnectionPool((int) (byte) 0, 10L);
        okHttpClient11.connectionPool = connectionPool21;
        com.squareup.okhttp.ConnectionPool connectionPool25 = new com.squareup.okhttp.ConnectionPool((int) (byte) 10, 0L);
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient11.setConnectionPool(connectionPool25);
        java.net.ResponseCache responseCache27 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient26.setResponseCache(responseCache27);
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient28.copyWithDefaults();
        boolean boolean30 = okHttpClient28.getFollowProtocolRedirects();
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNull(okAuthenticator13);
        org.junit.Assert.assertNull(responseCache18);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNotNull(okHttpClient29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    }

    @Test
    public void test12129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12129");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient0.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.copyWithDefaults();
        java.net.ResponseCache responseCache12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setResponseCache(responseCache12);
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient13.setFollowProtocolRedirects(false);
        java.net.CookieHandler cookieHandler16 = okHttpClient15.cookieHandler;
        java.net.ResponseCache responseCache17 = okHttpClient15.responseCache;
        java.net.Proxy proxy18 = java.net.Proxy.NO_PROXY;
        boolean boolean20 = proxy18.equals((java.lang.Object) 1L);
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient15.setProxy(proxy18);
        com.squareup.okhttp.ConnectionPool connectionPool24 = new com.squareup.okhttp.ConnectionPool((-1), (long) '#');
        com.squareup.okhttp.Address address25 = null;
        com.squareup.okhttp.Connection connection26 = connectionPool24.get(address25);
        int int27 = connectionPool24.getSpdyConnectionCount();
        com.squareup.okhttp.Address address28 = null;
        com.squareup.okhttp.Connection connection29 = connectionPool24.get(address28);
        int int30 = connectionPool24.getConnectionCount();
        com.squareup.okhttp.Address address31 = null;
        com.squareup.okhttp.Connection connection32 = connectionPool24.get(address31);
        okHttpClient15.connectionPool = connectionPool24;
        int int34 = connectionPool24.getHttpConnectionCount();
        com.squareup.okhttp.Connection connection35 = null;
        // The following exception was thrown during execution in test generation
        try {
            connectionPool24.maybeShare(connection35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNull(cookieHandler16);
        org.junit.Assert.assertNull(responseCache17);
        org.junit.Assert.assertNotNull(proxy18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNull(connection26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNull(connection29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNull(connection32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
    }

    @Test
    public void test12130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12130");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.Proxy proxy8 = null;
        okHttpClient0.proxy = proxy8;
        java.util.Set<com.squareup.okhttp.Route> routeSet10 = okHttpClient0.failedRoutes;
        javax.net.ssl.HostnameVerifier hostnameVerifier11 = okHttpClient0.getHostnameVerifier();
        com.squareup.okhttp.OkAuthenticator okAuthenticator12 = okHttpClient0.getAuthenticator();
        java.net.ResponseCache responseCache13 = okHttpClient0.getResponseCache();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory14 = okHttpClient0.getSslSocketFactory();
        java.net.ResponseCache responseCache15 = okHttpClient0.responseCache;
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNotNull(routeSet10);
        org.junit.Assert.assertNull(hostnameVerifier11);
        org.junit.Assert.assertNull(okAuthenticator12);
        org.junit.Assert.assertNull(responseCache13);
        org.junit.Assert.assertNull(sSLSocketFactory14);
        org.junit.Assert.assertNull(responseCache15);
    }

    @Test
    public void test12131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12131");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        java.net.CookieHandler cookieHandler7 = null;
        okHttpClient0.cookieHandler = cookieHandler7;
        okHttpClient0.followProtocolRedirects = true;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = null;
        okHttpClient11.hostnameVerifier = hostnameVerifier12;
        java.net.ResponseCache responseCache14 = null;
        okHttpClient11.responseCache = responseCache14;
        javax.net.ssl.HostnameVerifier hostnameVerifier16 = okHttpClient11.hostnameVerifier;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory17 = okHttpClient11.sslSocketFactory;
        java.net.CookieHandler cookieHandler18 = okHttpClient11.cookieHandler;
        javax.net.ssl.HostnameVerifier hostnameVerifier19 = okHttpClient11.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool21 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient20.connectionPool = connectionPool21;
        com.squareup.okhttp.OkAuthenticator okAuthenticator23 = null;
        okHttpClient20.authenticator = okAuthenticator23;
        java.util.List<java.lang.String> strList25 = okHttpClient20.transports;
        java.net.ResponseCache responseCache26 = null;
        okHttpClient20.responseCache = responseCache26;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier29 = null;
        okHttpClient28.hostnameVerifier = hostnameVerifier29;
        java.net.ResponseCache responseCache31 = null;
        okHttpClient28.responseCache = responseCache31;
        javax.net.ssl.HostnameVerifier hostnameVerifier33 = okHttpClient28.hostnameVerifier;
        java.net.Proxy proxy34 = okHttpClient28.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool37 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient28.connectionPool = connectionPool37;
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient28.copyWithDefaults();
        java.net.Proxy proxy40 = okHttpClient39.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier41 = okHttpClient39.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient20.setHostnameVerifier(hostnameVerifier41);
        com.squareup.okhttp.OkHttpClient okHttpClient43 = okHttpClient11.setHostnameVerifier(hostnameVerifier41);
        okHttpClient0.hostnameVerifier = hostnameVerifier41;
        java.util.List<java.lang.String> strList45 = com.squareup.okhttp.OkHttpClient.DEFAULT_TRANSPORTS;
        okHttpClient0.transports = strList45;
        com.squareup.okhttp.OkHttpClient okHttpClient47 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNull(hostnameVerifier16);
        org.junit.Assert.assertNull(sSLSocketFactory17);
        org.junit.Assert.assertNull(cookieHandler18);
        org.junit.Assert.assertNull(hostnameVerifier19);
        org.junit.Assert.assertNotNull(connectionPool21);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNull(hostnameVerifier33);
        org.junit.Assert.assertNull(proxy34);
        org.junit.Assert.assertNotNull(okHttpClient39);
        org.junit.Assert.assertNull(proxy40);
        org.junit.Assert.assertNotNull(hostnameVerifier41);
        org.junit.Assert.assertNotNull(okHttpClient42);
        org.junit.Assert.assertNotNull(okHttpClient43);
        org.junit.Assert.assertNotNull(strList45);
    }

    @Test
    public void test12132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12132");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        java.net.ResponseCache responseCache12 = okHttpClient0.responseCache;
        java.net.ResponseCache responseCache13 = okHttpClient0.getResponseCache();
        java.net.ResponseCache responseCache14 = okHttpClient0.responseCache;
        java.net.ResponseCache responseCache15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient0.setResponseCache(responseCache15);
        java.net.ProxySelector proxySelector17 = null;
        okHttpClient16.proxySelector = proxySelector17;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache20 = okHttpClient19.okResponseCache();
        java.net.ResponseCache responseCache21 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient19.setResponseCache(responseCache21);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory23 = okHttpClient19.sslSocketFactory;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory24 = okHttpClient19.sslSocketFactory;
        com.squareup.okhttp.OkHttpClient okHttpClient25 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier26 = null;
        okHttpClient25.hostnameVerifier = hostnameVerifier26;
        boolean boolean28 = okHttpClient25.getFollowProtocolRedirects();
        java.net.Proxy proxy29 = okHttpClient25.proxy;
        java.util.Set<com.squareup.okhttp.Route> routeSet30 = okHttpClient25.failedRoutes;
        okHttpClient19.failedRoutes = routeSet30;
        okHttpClient16.failedRoutes = routeSet30;
        com.squareup.okhttp.OkHttpClient okHttpClient33 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier34 = null;
        okHttpClient33.hostnameVerifier = hostnameVerifier34;
        java.net.ResponseCache responseCache36 = null;
        okHttpClient33.responseCache = responseCache36;
        java.util.List<java.lang.String> strList38 = okHttpClient33.transports;
        java.util.List<java.lang.String> strList39 = okHttpClient33.getTransports();
        com.squareup.okhttp.OkHttpClient okHttpClient40 = okHttpClient33.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient41 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool42 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient41.connectionPool = connectionPool42;
        com.squareup.okhttp.OkHttpClient okHttpClient44 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier45 = null;
        okHttpClient44.hostnameVerifier = hostnameVerifier45;
        java.net.ResponseCache responseCache47 = null;
        okHttpClient44.responseCache = responseCache47;
        java.util.List<java.lang.String> strList49 = okHttpClient44.transports;
        com.squareup.okhttp.ConnectionPool connectionPool50 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient44.connectionPool = connectionPool50;
        com.squareup.okhttp.OkHttpClient okHttpClient52 = okHttpClient41.setConnectionPool(connectionPool50);
        java.net.ResponseCache responseCache53 = okHttpClient41.responseCache;
        com.squareup.okhttp.OkHttpClient okHttpClient54 = okHttpClient41.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient55 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier56 = null;
        okHttpClient55.hostnameVerifier = hostnameVerifier56;
        java.net.ResponseCache responseCache58 = null;
        okHttpClient55.responseCache = responseCache58;
        java.util.List<java.lang.String> strList60 = okHttpClient55.transports;
        com.squareup.okhttp.ConnectionPool connectionPool61 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient55.connectionPool = connectionPool61;
        com.squareup.okhttp.OkHttpClient okHttpClient63 = okHttpClient55.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient64 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier65 = null;
        okHttpClient64.hostnameVerifier = hostnameVerifier65;
        java.net.ResponseCache responseCache67 = null;
        okHttpClient64.responseCache = responseCache67;
        java.util.List<java.lang.String> strList69 = okHttpClient64.transports;
        com.squareup.okhttp.ConnectionPool connectionPool70 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient64.connectionPool = connectionPool70;
        com.squareup.okhttp.OkHttpClient okHttpClient72 = okHttpClient64.copyWithDefaults();
        java.net.ProxySelector proxySelector73 = okHttpClient72.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory74 = okHttpClient72.getSslSocketFactory();
        okHttpClient55.sslSocketFactory = sSLSocketFactory74;
        okHttpClient54.sslSocketFactory = sSLSocketFactory74;
        java.net.ProxySelector proxySelector77 = okHttpClient54.getProxySelector();
        javax.net.ssl.HostnameVerifier hostnameVerifier78 = okHttpClient54.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient79 = okHttpClient33.setHostnameVerifier(hostnameVerifier78);
        okHttpClient16.hostnameVerifier = hostnameVerifier78;
        java.net.CookieHandler cookieHandler81 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient82 = okHttpClient16.setCookieHandler(cookieHandler81);
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(responseCache12);
        org.junit.Assert.assertNull(responseCache13);
        org.junit.Assert.assertNull(responseCache14);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNull(okResponseCache20);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNull(sSLSocketFactory23);
        org.junit.Assert.assertNull(sSLSocketFactory24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(proxy29);
        org.junit.Assert.assertNotNull(routeSet30);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNotNull(okHttpClient40);
        org.junit.Assert.assertNotNull(connectionPool42);
        org.junit.Assert.assertNull(strList49);
        org.junit.Assert.assertNotNull(connectionPool50);
        org.junit.Assert.assertNotNull(okHttpClient52);
        org.junit.Assert.assertNull(responseCache53);
        org.junit.Assert.assertNotNull(okHttpClient54);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNotNull(connectionPool61);
        org.junit.Assert.assertNotNull(okHttpClient63);
        org.junit.Assert.assertNull(strList69);
        org.junit.Assert.assertNotNull(connectionPool70);
        org.junit.Assert.assertNotNull(okHttpClient72);
// flaky:         org.junit.Assert.assertNull(proxySelector73);
        org.junit.Assert.assertNotNull(sSLSocketFactory74);
// flaky:         org.junit.Assert.assertNull(proxySelector77);
        org.junit.Assert.assertNotNull(hostnameVerifier78);
        org.junit.Assert.assertNotNull(okHttpClient79);
        org.junit.Assert.assertNotNull(okHttpClient82);
    }

    @Test
    public void test12133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12133");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        okHttpClient0.authenticator = okAuthenticator3;
        java.net.CookieHandler cookieHandler5 = null;
        okHttpClient0.cookieHandler = cookieHandler5;
        java.net.Proxy proxy7 = java.net.Proxy.NO_PROXY;
        boolean boolean9 = proxy7.equals((java.lang.Object) 1L);
        com.squareup.okhttp.OkHttpClient okHttpClient10 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache11 = okHttpClient10.okResponseCache();
        java.net.ResponseCache responseCache12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient10.setResponseCache(responseCache12);
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        okHttpClient10.transports = strList16;
        boolean boolean19 = proxy7.equals((java.lang.Object) strList16);
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient0.setProxy(proxy7);
        com.squareup.okhttp.OkHttpClient okHttpClient21 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier22 = null;
        okHttpClient21.hostnameVerifier = hostnameVerifier22;
        java.net.ProxySelector proxySelector24 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient21.setProxySelector(proxySelector24);
        java.net.CookieHandler cookieHandler26 = okHttpClient21.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient27 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier28 = null;
        okHttpClient27.hostnameVerifier = hostnameVerifier28;
        java.net.ResponseCache responseCache30 = null;
        okHttpClient27.responseCache = responseCache30;
        java.util.List<java.lang.String> strList32 = okHttpClient27.transports;
        com.squareup.okhttp.ConnectionPool connectionPool33 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient27.connectionPool = connectionPool33;
        java.net.Proxy proxy35 = null;
        okHttpClient27.proxy = proxy35;
        java.util.Set<com.squareup.okhttp.Route> routeSet37 = okHttpClient27.failedRoutes;
        okHttpClient21.failedRoutes = routeSet37;
        javax.net.ssl.HostnameVerifier hostnameVerifier39 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient40 = okHttpClient21.setHostnameVerifier(hostnameVerifier39);
        boolean boolean41 = proxy7.equals((java.lang.Object) okHttpClient40);
        java.net.SocketAddress socketAddress42 = proxy7.address();
        com.squareup.okhttp.OkHttpClient okHttpClient43 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier44 = null;
        okHttpClient43.hostnameVerifier = hostnameVerifier44;
        java.net.ResponseCache responseCache46 = null;
        okHttpClient43.responseCache = responseCache46;
        java.util.List<java.lang.String> strList48 = okHttpClient43.transports;
        com.squareup.okhttp.ConnectionPool connectionPool49 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient43.connectionPool = connectionPool49;
        java.net.Proxy proxy51 = null;
        okHttpClient43.proxy = proxy51;
        boolean boolean53 = okHttpClient43.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient54 = new com.squareup.okhttp.OkHttpClient(okHttpClient43);
        java.util.Set<com.squareup.okhttp.Route> routeSet55 = okHttpClient43.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient56 = new com.squareup.okhttp.OkHttpClient(okHttpClient43);
        boolean boolean57 = proxy7.equals((java.lang.Object) okHttpClient56);
        java.net.SocketAddress socketAddress58 = proxy7.address();
        java.net.SocketAddress socketAddress59 = proxy7.address();
        java.lang.String str60 = proxy7.toString();
        java.lang.String str61 = proxy7.toString();
        java.net.Proxy.Type type62 = proxy7.type();
        java.net.SocketAddress socketAddress63 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Proxy proxy64 = new java.net.Proxy(type62, socketAddress63);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: type DIRECT is not compatible with address null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNotNull(proxy7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(okResponseCache11);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNotNull(okHttpClient25);
        org.junit.Assert.assertNull(cookieHandler26);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNotNull(connectionPool33);
        org.junit.Assert.assertNotNull(routeSet37);
        org.junit.Assert.assertNotNull(okHttpClient40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(socketAddress42);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNotNull(connectionPool49);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(routeSet55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(socketAddress58);
        org.junit.Assert.assertNull(socketAddress59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "DIRECT" + "'", str60, "DIRECT");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "DIRECT" + "'", str61, "DIRECT");
        org.junit.Assert.assertTrue("'" + type62 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type62.equals(java.net.Proxy.Type.DIRECT));
    }

    @Test
    public void test12134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12134");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.ConnectionPool connectionPool12 = okHttpClient11.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator13 = okHttpClient11.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool14 = okHttpClient11.getConnectionPool();
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient(okHttpClient11);
        com.squareup.okhttp.OkHttpClient okHttpClient16 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier17 = null;
        okHttpClient16.hostnameVerifier = hostnameVerifier17;
        java.net.ProxySelector proxySelector19 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient16.setProxySelector(proxySelector19);
        java.net.CookieHandler cookieHandler21 = okHttpClient16.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier23 = null;
        okHttpClient22.hostnameVerifier = hostnameVerifier23;
        java.net.ResponseCache responseCache25 = null;
        okHttpClient22.responseCache = responseCache25;
        java.util.List<java.lang.String> strList27 = okHttpClient22.transports;
        com.squareup.okhttp.ConnectionPool connectionPool28 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient22.connectionPool = connectionPool28;
        java.net.Proxy proxy30 = null;
        okHttpClient22.proxy = proxy30;
        java.util.Set<com.squareup.okhttp.Route> routeSet32 = okHttpClient22.failedRoutes;
        okHttpClient16.failedRoutes = routeSet32;
        java.net.ProxySelector proxySelector34 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient16.setProxySelector(proxySelector34);
        com.squareup.okhttp.OkHttpClient okHttpClient36 = new com.squareup.okhttp.OkHttpClient(okHttpClient35);
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient36.setFollowProtocolRedirects(false);
        java.net.ResponseCache responseCache39 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient40 = okHttpClient38.setResponseCache(responseCache39);
        boolean boolean41 = okHttpClient38.getFollowProtocolRedirects();
        java.net.ResponseCache responseCache42 = okHttpClient38.responseCache;
        java.net.ResponseCache responseCache43 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient44 = okHttpClient38.setResponseCache(responseCache43);
        java.net.ProxySelector proxySelector45 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient46 = okHttpClient38.setProxySelector(proxySelector45);
        java.net.ProxySelector proxySelector47 = okHttpClient46.proxySelector;
        com.squareup.okhttp.OkHttpClient okHttpClient48 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier49 = null;
        okHttpClient48.hostnameVerifier = hostnameVerifier49;
        boolean boolean51 = okHttpClient48.getFollowProtocolRedirects();
        java.net.Proxy proxy52 = okHttpClient48.proxy;
        java.util.List<java.lang.String> strList53 = okHttpClient48.transports;
        com.squareup.okhttp.OkHttpClient okHttpClient54 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier55 = null;
        okHttpClient54.hostnameVerifier = hostnameVerifier55;
        java.net.ResponseCache responseCache57 = null;
        okHttpClient54.responseCache = responseCache57;
        java.util.List<java.lang.String> strList59 = okHttpClient54.transports;
        java.net.Proxy proxy60 = java.net.Proxy.NO_PROXY;
        boolean boolean62 = proxy60.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type63 = proxy60.type();
        java.net.SocketAddress socketAddress64 = proxy60.address();
        com.squareup.okhttp.OkHttpClient okHttpClient65 = okHttpClient54.setProxy(proxy60);
        java.net.SocketAddress socketAddress66 = proxy60.address();
        java.net.Proxy.Type type67 = proxy60.type();
        java.net.SocketAddress socketAddress68 = proxy60.address();
        com.squareup.okhttp.OkHttpClient okHttpClient69 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier70 = null;
        okHttpClient69.hostnameVerifier = hostnameVerifier70;
        java.net.ResponseCache responseCache72 = null;
        okHttpClient69.responseCache = responseCache72;
        javax.net.ssl.HostnameVerifier hostnameVerifier74 = okHttpClient69.hostnameVerifier;
        java.net.Proxy proxy75 = okHttpClient69.getProxy();
        java.net.CookieHandler cookieHandler76 = null;
        okHttpClient69.cookieHandler = cookieHandler76;
        okHttpClient69.followProtocolRedirects = true;
        java.net.CookieHandler cookieHandler80 = okHttpClient69.getCookieHandler();
        boolean boolean81 = proxy60.equals((java.lang.Object) okHttpClient69);
        java.lang.String str82 = proxy60.toString();
        com.squareup.okhttp.OkHttpClient okHttpClient83 = okHttpClient48.setProxy(proxy60);
        com.squareup.okhttp.OkHttpClient okHttpClient84 = okHttpClient46.setProxy(proxy60);
        com.squareup.okhttp.OkHttpClient okHttpClient85 = okHttpClient11.setProxy(proxy60);
        java.net.ResponseCache responseCache86 = okHttpClient11.getResponseCache();
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNull(okAuthenticator13);
        org.junit.Assert.assertNotNull(connectionPool14);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNull(cookieHandler21);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNotNull(connectionPool28);
        org.junit.Assert.assertNotNull(routeSet32);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNotNull(okHttpClient40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(responseCache42);
        org.junit.Assert.assertNotNull(okHttpClient44);
        org.junit.Assert.assertNotNull(okHttpClient46);
        org.junit.Assert.assertNull(proxySelector47);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNull(proxy52);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNotNull(proxy60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + type63 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type63.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress64);
        org.junit.Assert.assertNotNull(okHttpClient65);
        org.junit.Assert.assertNull(socketAddress66);
        org.junit.Assert.assertTrue("'" + type67 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type67.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress68);
        org.junit.Assert.assertNull(hostnameVerifier74);
        org.junit.Assert.assertNull(proxy75);
        org.junit.Assert.assertNull(cookieHandler80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "DIRECT" + "'", str82, "DIRECT");
        org.junit.Assert.assertNotNull(okHttpClient83);
        org.junit.Assert.assertNotNull(okHttpClient84);
        org.junit.Assert.assertNotNull(okHttpClient85);
        org.junit.Assert.assertNull(responseCache86);
    }

    @Test
    public void test12135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12135");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.OkHttpClient okHttpClient1 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        com.squareup.okhttp.OkHttpClient okHttpClient2 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier3 = null;
        okHttpClient2.hostnameVerifier = hostnameVerifier3;
        java.net.ProxySelector proxySelector5 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient2.setProxySelector(proxySelector5);
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient6.copyWithDefaults();
        com.squareup.okhttp.Route[] routeArray8 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet9 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet9, routeArray8);
        okHttpClient7.failedRoutes = routeSet9;
        java.net.CookieHandler cookieHandler12 = okHttpClient7.cookieHandler;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = null;
        okHttpClient13.hostnameVerifier = hostnameVerifier14;
        java.net.ResponseCache responseCache16 = null;
        okHttpClient13.responseCache = responseCache16;
        java.util.List<java.lang.String> strList18 = okHttpClient13.transports;
        com.squareup.okhttp.ConnectionPool connectionPool19 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient13.connectionPool = connectionPool19;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient13.copyWithDefaults();
        java.net.ProxySelector proxySelector22 = okHttpClient21.proxySelector;
        com.squareup.okhttp.ConnectionPool connectionPool23 = okHttpClient21.connectionPool;
        java.util.Set<com.squareup.okhttp.Route> routeSet24 = okHttpClient21.failedRoutes;
        okHttpClient7.failedRoutes = routeSet24;
        okHttpClient0.failedRoutes = routeSet24;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier28 = null;
        okHttpClient27.hostnameVerifier = hostnameVerifier28;
        java.net.ResponseCache responseCache30 = null;
        okHttpClient27.responseCache = responseCache30;
        java.util.List<java.lang.String> strList32 = okHttpClient27.transports;
        com.squareup.okhttp.ConnectionPool connectionPool33 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient27.connectionPool = connectionPool33;
        java.net.Proxy proxy35 = null;
        okHttpClient27.proxy = proxy35;
        boolean boolean37 = okHttpClient27.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient27.setFollowProtocolRedirects(true);
        com.squareup.okhttp.OkHttpClient okHttpClient40 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier41 = null;
        okHttpClient40.hostnameVerifier = hostnameVerifier41;
        java.net.ResponseCache responseCache43 = null;
        okHttpClient40.responseCache = responseCache43;
        java.util.List<java.lang.String> strList45 = okHttpClient40.transports;
        javax.net.ssl.HostnameVerifier hostnameVerifier46 = null;
        okHttpClient40.hostnameVerifier = hostnameVerifier46;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache48 = okHttpClient40.okResponseCache();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory49 = okHttpClient40.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient50 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier51 = null;
        okHttpClient50.hostnameVerifier = hostnameVerifier51;
        java.net.ResponseCache responseCache53 = null;
        okHttpClient50.responseCache = responseCache53;
        javax.net.ssl.HostnameVerifier hostnameVerifier55 = okHttpClient50.hostnameVerifier;
        java.net.Proxy proxy56 = okHttpClient50.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool59 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient50.connectionPool = connectionPool59;
        com.squareup.okhttp.OkHttpClient okHttpClient61 = okHttpClient50.copyWithDefaults();
        java.net.Proxy proxy62 = okHttpClient61.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier63 = okHttpClient61.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient64 = okHttpClient40.setHostnameVerifier(hostnameVerifier63);
        com.squareup.okhttp.OkHttpClient okHttpClient65 = okHttpClient39.setHostnameVerifier(hostnameVerifier63);
        boolean boolean66 = okHttpClient65.getFollowProtocolRedirects();
        java.net.CookieHandler cookieHandler67 = okHttpClient65.cookieHandler;
        java.net.ResponseCache responseCache68 = okHttpClient65.responseCache;
        com.squareup.okhttp.OkAuthenticator okAuthenticator69 = okHttpClient65.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient70 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier71 = null;
        okHttpClient70.hostnameVerifier = hostnameVerifier71;
        java.net.ResponseCache responseCache73 = null;
        okHttpClient70.responseCache = responseCache73;
        java.util.List<java.lang.String> strList75 = okHttpClient70.transports;
        com.squareup.okhttp.ConnectionPool connectionPool76 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient70.connectionPool = connectionPool76;
        com.squareup.okhttp.Address address78 = null;
        com.squareup.okhttp.Connection connection79 = connectionPool76.get(address78);
        com.squareup.okhttp.OkHttpClient okHttpClient80 = okHttpClient65.setConnectionPool(connectionPool76);
        int int81 = connectionPool76.getConnectionCount();
        connectionPool76.evictAll();
        int int83 = connectionPool76.getSpdyConnectionCount();
        connectionPool76.evictAll();
        okHttpClient0.connectionPool = connectionPool76;
        org.junit.Assert.assertNotNull(okHttpClient6);
        org.junit.Assert.assertNotNull(okHttpClient7);
        org.junit.Assert.assertNotNull(routeArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(cookieHandler12);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(connectionPool19);
        org.junit.Assert.assertNotNull(okHttpClient21);
// flaky:         org.junit.Assert.assertNull(proxySelector22);
        org.junit.Assert.assertNotNull(connectionPool23);
        org.junit.Assert.assertNotNull(routeSet24);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNotNull(connectionPool33);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(okHttpClient39);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNull(okResponseCache48);
        org.junit.Assert.assertNull(sSLSocketFactory49);
        org.junit.Assert.assertNull(hostnameVerifier55);
        org.junit.Assert.assertNull(proxy56);
        org.junit.Assert.assertNotNull(okHttpClient61);
        org.junit.Assert.assertNull(proxy62);
        org.junit.Assert.assertNotNull(hostnameVerifier63);
        org.junit.Assert.assertNotNull(okHttpClient64);
        org.junit.Assert.assertNotNull(okHttpClient65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNull(cookieHandler67);
        org.junit.Assert.assertNull(responseCache68);
        org.junit.Assert.assertNull(okAuthenticator69);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNotNull(connectionPool76);
        org.junit.Assert.assertNull(connection79);
        org.junit.Assert.assertNotNull(okHttpClient80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
    }

    @Test
    public void test12136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12136");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.ConnectionPool connectionPool14 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        okHttpClient0.connectionPool = connectionPool14;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory16 = okHttpClient0.sslSocketFactory;
        java.net.CookieHandler cookieHandler17 = okHttpClient0.getCookieHandler();
        java.net.ProxySelector proxySelector18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient0.setProxySelector(proxySelector18);
        java.util.Set<com.squareup.okhttp.Route> routeSet20 = okHttpClient19.failedRoutes;
        java.net.CookieHandler cookieHandler21 = null;
        okHttpClient19.cookieHandler = cookieHandler21;
        com.squareup.okhttp.OkHttpClient okHttpClient23 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool24 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient23.connectionPool = connectionPool24;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier27 = null;
        okHttpClient26.hostnameVerifier = hostnameVerifier27;
        java.net.ResponseCache responseCache29 = null;
        okHttpClient26.responseCache = responseCache29;
        java.util.List<java.lang.String> strList31 = okHttpClient26.transports;
        com.squareup.okhttp.ConnectionPool connectionPool32 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient26.connectionPool = connectionPool32;
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient23.setConnectionPool(connectionPool32);
        java.net.Proxy proxy35 = okHttpClient34.proxy;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory36 = null;
        okHttpClient34.sslSocketFactory = sSLSocketFactory36;
        com.squareup.okhttp.OkHttpClient okHttpClient38 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier39 = null;
        okHttpClient38.hostnameVerifier = hostnameVerifier39;
        java.net.ResponseCache responseCache41 = null;
        okHttpClient38.responseCache = responseCache41;
        java.util.List<java.lang.String> strList43 = okHttpClient38.transports;
        com.squareup.okhttp.ConnectionPool connectionPool44 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient38.connectionPool = connectionPool44;
        com.squareup.okhttp.ConnectionPool connectionPool46 = okHttpClient38.connectionPool;
        int int47 = connectionPool46.getHttpConnectionCount();
        com.squareup.okhttp.Address address48 = null;
        com.squareup.okhttp.Connection connection49 = connectionPool46.get(address48);
        okHttpClient34.connectionPool = connectionPool46;
        java.net.ProxySelector proxySelector51 = okHttpClient34.proxySelector;
        java.net.Proxy proxy52 = java.net.Proxy.NO_PROXY;
        boolean boolean54 = proxy52.equals((java.lang.Object) 1L);
        com.squareup.okhttp.OkHttpClient okHttpClient55 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache56 = okHttpClient55.okResponseCache();
        java.net.ResponseCache responseCache57 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient58 = okHttpClient55.setResponseCache(responseCache57);
        java.lang.String[] strArray60 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList61 = new java.util.ArrayList<java.lang.String>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList61, strArray60);
        okHttpClient55.transports = strList61;
        boolean boolean64 = proxy52.equals((java.lang.Object) strList61);
        okHttpClient34.proxy = proxy52;
        com.squareup.okhttp.OkHttpClient okHttpClient66 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier67 = null;
        okHttpClient66.hostnameVerifier = hostnameVerifier67;
        java.net.ResponseCache responseCache69 = null;
        okHttpClient66.responseCache = responseCache69;
        javax.net.ssl.HostnameVerifier hostnameVerifier71 = okHttpClient66.hostnameVerifier;
        java.net.Proxy proxy72 = okHttpClient66.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool75 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient66.connectionPool = connectionPool75;
        com.squareup.okhttp.OkHttpClient okHttpClient77 = okHttpClient66.copyWithDefaults();
        java.net.ResponseCache responseCache78 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient79 = okHttpClient77.setResponseCache(responseCache78);
        java.net.ProxySelector proxySelector80 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient81 = okHttpClient77.setProxySelector(proxySelector80);
        java.util.Set<com.squareup.okhttp.Route> routeSet82 = okHttpClient81.failedRoutes;
        com.squareup.okhttp.OkAuthenticator okAuthenticator83 = okHttpClient81.authenticator;
        okHttpClient34.authenticator = okAuthenticator83;
        okHttpClient34.followProtocolRedirects = false;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory87 = okHttpClient34.getSslSocketFactory();
        java.net.Proxy proxy88 = okHttpClient34.getProxy();
        okHttpClient19.proxy = proxy88;
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(sSLSocketFactory16);
        org.junit.Assert.assertNull(cookieHandler17);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNotNull(routeSet20);
        org.junit.Assert.assertNotNull(connectionPool24);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNotNull(connectionPool32);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertNull(proxy35);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNotNull(connectionPool44);
        org.junit.Assert.assertNotNull(connectionPool46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNull(connection49);
        org.junit.Assert.assertNull(proxySelector51);
        org.junit.Assert.assertNotNull(proxy52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(okResponseCache56);
        org.junit.Assert.assertNotNull(okHttpClient58);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(hostnameVerifier71);
        org.junit.Assert.assertNull(proxy72);
        org.junit.Assert.assertNotNull(okHttpClient77);
        org.junit.Assert.assertNotNull(okHttpClient79);
        org.junit.Assert.assertNotNull(okHttpClient81);
        org.junit.Assert.assertNotNull(routeSet82);
        org.junit.Assert.assertNotNull(okAuthenticator83);
        org.junit.Assert.assertNull(sSLSocketFactory87);
        org.junit.Assert.assertNotNull(proxy88);
    }

    @Test
    public void test12137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12137");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache1 = okHttpClient0.okResponseCache();
        java.net.ResponseCache responseCache2 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.setResponseCache(responseCache2);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        okHttpClient0.transports = strList6;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory9);
        java.net.CookieHandler cookieHandler11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient0.setCookieHandler(cookieHandler11);
        com.squareup.okhttp.OkAuthenticator okAuthenticator13 = okHttpClient0.getAuthenticator();
        java.net.ResponseCache responseCache14 = okHttpClient0.responseCache;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory16 = okHttpClient15.getSslSocketFactory();
        boolean boolean17 = okHttpClient15.getFollowProtocolRedirects();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory18 = okHttpClient15.sslSocketFactory;
        java.net.CookieHandler cookieHandler19 = null;
        okHttpClient15.cookieHandler = cookieHandler19;
        org.junit.Assert.assertNull(okResponseCache1);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertNull(okAuthenticator13);
        org.junit.Assert.assertNull(responseCache14);
        org.junit.Assert.assertNull(sSLSocketFactory16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(sSLSocketFactory18);
    }

    @Test
    public void test12138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12138");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.net.Proxy proxy5 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress6 = proxy5.address();
        java.net.SocketAddress socketAddress7 = proxy5.address();
        okHttpClient0.proxy = proxy5;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        com.squareup.okhttp.OkHttpClient okHttpClient10 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier11 = null;
        okHttpClient10.hostnameVerifier = hostnameVerifier11;
        java.net.ResponseCache responseCache13 = null;
        okHttpClient10.responseCache = responseCache13;
        java.util.List<java.lang.String> strList15 = okHttpClient10.transports;
        com.squareup.okhttp.ConnectionPool connectionPool16 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient10.connectionPool = connectionPool16;
        java.net.CookieHandler cookieHandler18 = okHttpClient10.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache19 = okHttpClient10.okResponseCache();
        java.net.CookieHandler cookieHandler20 = okHttpClient10.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient21 = new com.squareup.okhttp.OkHttpClient(okHttpClient10);
        java.net.Proxy proxy22 = java.net.Proxy.NO_PROXY;
        boolean boolean24 = proxy22.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type25 = proxy22.type();
        java.net.SocketAddress socketAddress26 = proxy22.address();
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient10.setProxy(proxy22);
        com.squareup.okhttp.ConnectionPool connectionPool28 = okHttpClient10.connectionPool;
        com.squareup.okhttp.ConnectionPool connectionPool31 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        int int32 = connectionPool31.getSpdyConnectionCount();
        okHttpClient10.connectionPool = connectionPool31;
        okHttpClient0.connectionPool = connectionPool31;
        connectionPool31.evictAll();
        int int36 = connectionPool31.getHttpConnectionCount();
        com.squareup.okhttp.Connection connection37 = null;
        // The following exception was thrown during execution in test generation
        try {
            connectionPool31.maybeShare(connection37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNotNull(proxy5);
        org.junit.Assert.assertNull(socketAddress6);
        org.junit.Assert.assertNull(socketAddress7);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(connectionPool16);
        org.junit.Assert.assertNull(cookieHandler18);
        org.junit.Assert.assertNull(okResponseCache19);
        org.junit.Assert.assertNull(cookieHandler20);
        org.junit.Assert.assertNotNull(proxy22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + type25 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type25.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress26);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNotNull(connectionPool28);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
    }

    @Test
    public void test12139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12139");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.CookieHandler cookieHandler5 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = null;
        okHttpClient6.hostnameVerifier = hostnameVerifier7;
        java.net.ResponseCache responseCache9 = null;
        okHttpClient6.responseCache = responseCache9;
        java.util.List<java.lang.String> strList11 = okHttpClient6.transports;
        com.squareup.okhttp.ConnectionPool connectionPool12 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient6.connectionPool = connectionPool12;
        java.net.Proxy proxy14 = null;
        okHttpClient6.proxy = proxy14;
        java.util.Set<com.squareup.okhttp.Route> routeSet16 = okHttpClient6.failedRoutes;
        okHttpClient0.failedRoutes = routeSet16;
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient0.setHostnameVerifier(hostnameVerifier18);
        java.net.ProxySelector proxySelector20 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient0.setProxySelector(proxySelector20);
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        boolean boolean23 = okHttpClient22.followProtocolRedirects;
        java.net.Proxy proxy24 = okHttpClient22.getProxy();
        com.squareup.okhttp.OkAuthenticator okAuthenticator25 = okHttpClient22.getAuthenticator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass26 = okAuthenticator25.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNotNull(routeSet16);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(proxy24);
        org.junit.Assert.assertNull(okAuthenticator25);
    }

    @Test
    public void test12140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12140");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        boolean boolean3 = okHttpClient0.getFollowProtocolRedirects();
        java.net.Proxy proxy4 = okHttpClient0.proxy;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = null;
        okHttpClient6.hostnameVerifier = hostnameVerifier7;
        java.net.ResponseCache responseCache9 = null;
        okHttpClient6.responseCache = responseCache9;
        java.util.List<java.lang.String> strList11 = okHttpClient6.transports;
        java.net.Proxy proxy12 = java.net.Proxy.NO_PROXY;
        boolean boolean14 = proxy12.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type15 = proxy12.type();
        java.net.SocketAddress socketAddress16 = proxy12.address();
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient6.setProxy(proxy12);
        java.net.SocketAddress socketAddress18 = proxy12.address();
        java.net.Proxy.Type type19 = proxy12.type();
        java.net.SocketAddress socketAddress20 = proxy12.address();
        com.squareup.okhttp.OkHttpClient okHttpClient21 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier22 = null;
        okHttpClient21.hostnameVerifier = hostnameVerifier22;
        java.net.ResponseCache responseCache24 = null;
        okHttpClient21.responseCache = responseCache24;
        javax.net.ssl.HostnameVerifier hostnameVerifier26 = okHttpClient21.hostnameVerifier;
        java.net.Proxy proxy27 = okHttpClient21.getProxy();
        java.net.CookieHandler cookieHandler28 = null;
        okHttpClient21.cookieHandler = cookieHandler28;
        okHttpClient21.followProtocolRedirects = true;
        java.net.CookieHandler cookieHandler32 = okHttpClient21.getCookieHandler();
        boolean boolean33 = proxy12.equals((java.lang.Object) okHttpClient21);
        java.lang.String str34 = proxy12.toString();
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient0.setProxy(proxy12);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory36 = okHttpClient0.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient37 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier38 = null;
        okHttpClient37.hostnameVerifier = hostnameVerifier38;
        java.net.ResponseCache responseCache40 = null;
        okHttpClient37.responseCache = responseCache40;
        javax.net.ssl.HostnameVerifier hostnameVerifier42 = okHttpClient37.hostnameVerifier;
        java.net.Proxy proxy43 = okHttpClient37.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool46 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient37.connectionPool = connectionPool46;
        com.squareup.okhttp.OkHttpClient okHttpClient48 = okHttpClient37.copyWithDefaults();
        java.net.Proxy proxy49 = okHttpClient48.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier50 = okHttpClient48.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient51 = new com.squareup.okhttp.OkHttpClient(okHttpClient48);
        com.squareup.okhttp.OkHttpClient okHttpClient52 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool53 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient52.connectionPool = connectionPool53;
        java.net.ResponseCache responseCache55 = null;
        okHttpClient52.responseCache = responseCache55;
        java.net.Proxy proxy57 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress58 = proxy57.address();
        java.net.SocketAddress socketAddress59 = proxy57.address();
        okHttpClient52.proxy = proxy57;
        com.squareup.okhttp.OkHttpClient okHttpClient61 = new com.squareup.okhttp.OkHttpClient(okHttpClient52);
        java.lang.String[] strArray63 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList64 = new java.util.ArrayList<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64, strArray63);
        okHttpClient52.transports = strList64;
        okHttpClient48.transports = strList64;
        okHttpClient0.transports = strList64;
        com.squareup.okhttp.ConnectionPool connectionPool71 = new com.squareup.okhttp.ConnectionPool((int) (short) -1, 100L);
        connectionPool71.evictAll();
        com.squareup.okhttp.Address address73 = null;
        com.squareup.okhttp.Connection connection74 = connectionPool71.get(address73);
        com.squareup.okhttp.OkHttpClient okHttpClient75 = okHttpClient0.setConnectionPool(connectionPool71);
        int int76 = connectionPool71.getHttpConnectionCount();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(proxy4);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(proxy12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + type15 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type15.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress16);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNull(socketAddress18);
        org.junit.Assert.assertTrue("'" + type19 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type19.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress20);
        org.junit.Assert.assertNull(hostnameVerifier26);
        org.junit.Assert.assertNull(proxy27);
        org.junit.Assert.assertNull(cookieHandler32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "DIRECT" + "'", str34, "DIRECT");
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNull(sSLSocketFactory36);
        org.junit.Assert.assertNull(hostnameVerifier42);
        org.junit.Assert.assertNull(proxy43);
        org.junit.Assert.assertNotNull(okHttpClient48);
        org.junit.Assert.assertNull(proxy49);
        org.junit.Assert.assertNotNull(hostnameVerifier50);
        org.junit.Assert.assertNotNull(connectionPool53);
        org.junit.Assert.assertNotNull(proxy57);
        org.junit.Assert.assertNull(socketAddress58);
        org.junit.Assert.assertNull(socketAddress59);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNull(connection74);
        org.junit.Assert.assertNotNull(okHttpClient75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
    }

    @Test
    public void test12141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12141");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.ResponseCache responseCache5 = null;
        okHttpClient4.responseCache = responseCache5;
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = okHttpClient4.getHostnameVerifier();
        com.squareup.okhttp.OkAuthenticator okAuthenticator8 = null;
        okHttpClient4.authenticator = okAuthenticator8;
        java.net.CookieHandler cookieHandler10 = okHttpClient4.cookieHandler;
        java.net.ProxySelector proxySelector11 = okHttpClient4.getProxySelector();
        com.squareup.okhttp.ConnectionPool connectionPool14 = new com.squareup.okhttp.ConnectionPool((int) (byte) 10, (long) (byte) 0);
        com.squareup.okhttp.Address address15 = null;
        com.squareup.okhttp.Connection connection16 = connectionPool14.get(address15);
        int int17 = connectionPool14.getSpdyConnectionCount();
        int int18 = connectionPool14.getConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient4.setConnectionPool(connectionPool14);
        com.squareup.okhttp.OkHttpClient okHttpClient20 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier21 = null;
        okHttpClient20.hostnameVerifier = hostnameVerifier21;
        java.net.ResponseCache responseCache23 = null;
        okHttpClient20.responseCache = responseCache23;
        javax.net.ssl.HostnameVerifier hostnameVerifier25 = okHttpClient20.hostnameVerifier;
        java.net.Proxy proxy26 = okHttpClient20.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool29 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient20.connectionPool = connectionPool29;
        java.util.List<java.lang.String> strList31 = okHttpClient20.getTransports();
        javax.net.ssl.HostnameVerifier hostnameVerifier32 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient20.setHostnameVerifier(hostnameVerifier32);
        com.squareup.okhttp.ConnectionPool connectionPool34 = okHttpClient33.getConnectionPool();
        java.util.Set<com.squareup.okhttp.Route> routeSet35 = okHttpClient33.failedRoutes;
        okHttpClient19.failedRoutes = routeSet35;
        java.net.CookieHandler cookieHandler37 = okHttpClient19.cookieHandler;
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(hostnameVerifier7);
        org.junit.Assert.assertNull(cookieHandler10);
        org.junit.Assert.assertNull(proxySelector11);
        org.junit.Assert.assertNull(connection16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNull(hostnameVerifier25);
        org.junit.Assert.assertNull(proxy26);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNotNull(okHttpClient33);
        org.junit.Assert.assertNotNull(connectionPool34);
        org.junit.Assert.assertNotNull(routeSet35);
        org.junit.Assert.assertNull(cookieHandler37);
    }

    @Test
    public void test12142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12142");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory6 = okHttpClient0.sslSocketFactory;
        java.net.CookieHandler cookieHandler7 = okHttpClient0.cookieHandler;
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = okHttpClient0.hostnameVerifier;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache9 = okHttpClient0.okResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient10 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool11 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient10.connectionPool = connectionPool11;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = null;
        okHttpClient13.hostnameVerifier = hostnameVerifier14;
        java.net.ResponseCache responseCache16 = null;
        okHttpClient13.responseCache = responseCache16;
        java.util.List<java.lang.String> strList18 = okHttpClient13.transports;
        com.squareup.okhttp.ConnectionPool connectionPool19 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient13.connectionPool = connectionPool19;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient10.setConnectionPool(connectionPool19);
        com.squareup.okhttp.ConnectionPool connectionPool22 = okHttpClient21.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator23 = okHttpClient21.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool26 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient21.connectionPool = connectionPool26;
        java.net.ResponseCache responseCache28 = okHttpClient21.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory29 = okHttpClient21.sslSocketFactory;
        java.net.Proxy proxy30 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress31 = proxy30.address();
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient21.setProxy(proxy30);
        com.squareup.okhttp.OkHttpClient okHttpClient33 = new com.squareup.okhttp.OkHttpClient(okHttpClient32);
        com.squareup.okhttp.OkHttpClient okHttpClient34 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier35 = null;
        okHttpClient34.hostnameVerifier = hostnameVerifier35;
        boolean boolean37 = okHttpClient34.getFollowProtocolRedirects();
        java.net.CookieHandler cookieHandler38 = okHttpClient34.cookieHandler;
        com.squareup.okhttp.OkHttpClient okHttpClient39 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier40 = null;
        okHttpClient39.hostnameVerifier = hostnameVerifier40;
        java.net.ResponseCache responseCache42 = null;
        okHttpClient39.responseCache = responseCache42;
        javax.net.ssl.HostnameVerifier hostnameVerifier44 = okHttpClient39.hostnameVerifier;
        java.net.Proxy proxy45 = okHttpClient39.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool48 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient39.connectionPool = connectionPool48;
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient39.copyWithDefaults();
        java.net.ResponseCache responseCache51 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient52 = okHttpClient50.setResponseCache(responseCache51);
        com.squareup.okhttp.OkAuthenticator okAuthenticator53 = okHttpClient50.authenticator;
        okHttpClient34.authenticator = okAuthenticator53;
        okHttpClient33.authenticator = okAuthenticator53;
        com.squareup.okhttp.OkHttpClient okHttpClient56 = okHttpClient0.setAuthenticator(okAuthenticator53);
        com.squareup.okhttp.OkHttpClient okHttpClient57 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool58 = okHttpClient57.getConnectionPool();
        int int59 = connectionPool58.getConnectionCount();
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(sSLSocketFactory6);
        org.junit.Assert.assertNull(cookieHandler7);
        org.junit.Assert.assertNull(hostnameVerifier8);
        org.junit.Assert.assertNull(okResponseCache9);
        org.junit.Assert.assertNotNull(connectionPool11);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(connectionPool19);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNotNull(connectionPool22);
        org.junit.Assert.assertNull(okAuthenticator23);
        org.junit.Assert.assertNull(responseCache28);
        org.junit.Assert.assertNull(sSLSocketFactory29);
        org.junit.Assert.assertNotNull(proxy30);
        org.junit.Assert.assertNull(socketAddress31);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(cookieHandler38);
        org.junit.Assert.assertNull(hostnameVerifier44);
        org.junit.Assert.assertNull(proxy45);
        org.junit.Assert.assertNotNull(okHttpClient50);
        org.junit.Assert.assertNotNull(okHttpClient52);
        org.junit.Assert.assertNotNull(okAuthenticator53);
        org.junit.Assert.assertNotNull(okHttpClient56);
        org.junit.Assert.assertNotNull(okHttpClient57);
        org.junit.Assert.assertNotNull(connectionPool58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
    }

    @Test
    public void test12143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12143");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.CookieHandler cookieHandler8 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache9 = okHttpClient0.okResponseCache();
        java.net.CookieHandler cookieHandler10 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        com.squareup.okhttp.OkHttpClient okHttpClient12 = new com.squareup.okhttp.OkHttpClient(okHttpClient11);
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient(okHttpClient12);
        com.squareup.okhttp.OkHttpClient okHttpClient14 = new com.squareup.okhttp.OkHttpClient(okHttpClient12);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNull(cookieHandler8);
        org.junit.Assert.assertNull(okResponseCache9);
        org.junit.Assert.assertNull(cookieHandler10);
    }

    @Test
    public void test12144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12144");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.CookieHandler cookieHandler8 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache9 = okHttpClient0.okResponseCache();
        java.net.CookieHandler cookieHandler10 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        java.net.Proxy proxy12 = java.net.Proxy.NO_PROXY;
        boolean boolean14 = proxy12.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type15 = proxy12.type();
        java.net.SocketAddress socketAddress16 = proxy12.address();
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient0.setProxy(proxy12);
        boolean boolean18 = okHttpClient17.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient17.setFollowProtocolRedirects(false);
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient20.copyWithDefaults();
        java.net.Proxy proxy22 = okHttpClient20.getProxy();
        java.net.Proxy.Type type23 = proxy22.type();
        com.squareup.okhttp.OkHttpClient okHttpClient24 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool25 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient24.connectionPool = connectionPool25;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier28 = null;
        okHttpClient27.hostnameVerifier = hostnameVerifier28;
        java.net.ResponseCache responseCache30 = null;
        okHttpClient27.responseCache = responseCache30;
        java.util.List<java.lang.String> strList32 = okHttpClient27.transports;
        com.squareup.okhttp.ConnectionPool connectionPool33 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient27.connectionPool = connectionPool33;
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient24.setConnectionPool(connectionPool33);
        com.squareup.okhttp.ConnectionPool connectionPool36 = okHttpClient35.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator37 = okHttpClient35.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool40 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient35.connectionPool = connectionPool40;
        java.net.ResponseCache responseCache42 = okHttpClient35.responseCache;
        com.squareup.okhttp.ConnectionPool connectionPool45 = new com.squareup.okhttp.ConnectionPool((int) (byte) 0, 10L);
        okHttpClient35.connectionPool = connectionPool45;
        com.squareup.okhttp.ConnectionPool connectionPool49 = new com.squareup.okhttp.ConnectionPool((int) (byte) 10, 0L);
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient35.setConnectionPool(connectionPool49);
        java.net.ResponseCache responseCache51 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient52 = okHttpClient50.setResponseCache(responseCache51);
        com.squareup.okhttp.OkHttpClient okHttpClient53 = okHttpClient52.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient54 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier55 = null;
        okHttpClient54.hostnameVerifier = hostnameVerifier55;
        java.net.ResponseCache responseCache57 = null;
        okHttpClient54.responseCache = responseCache57;
        java.util.List<java.lang.String> strList59 = okHttpClient54.transports;
        com.squareup.okhttp.ConnectionPool connectionPool60 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient54.connectionPool = connectionPool60;
        java.net.Proxy proxy62 = null;
        okHttpClient54.proxy = proxy62;
        boolean boolean64 = okHttpClient54.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient65 = okHttpClient54.copyWithDefaults();
        java.net.CookieHandler cookieHandler66 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient67 = okHttpClient65.setCookieHandler(cookieHandler66);
        java.net.Proxy proxy68 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient69 = okHttpClient65.setProxy(proxy68);
        java.lang.String str70 = proxy68.toString();
        java.net.SocketAddress socketAddress71 = proxy68.address();
        com.squareup.okhttp.OkHttpClient okHttpClient72 = okHttpClient52.setProxy(proxy68);
        boolean boolean73 = proxy22.equals((java.lang.Object) proxy68);
        java.lang.String str74 = proxy22.toString();
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNull(cookieHandler8);
        org.junit.Assert.assertNull(okResponseCache9);
        org.junit.Assert.assertNull(cookieHandler10);
        org.junit.Assert.assertNotNull(proxy12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + type15 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type15.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress16);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNotNull(proxy22);
        org.junit.Assert.assertTrue("'" + type23 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type23.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNotNull(connectionPool25);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNotNull(connectionPool33);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNotNull(connectionPool36);
        org.junit.Assert.assertNull(okAuthenticator37);
        org.junit.Assert.assertNull(responseCache42);
        org.junit.Assert.assertNotNull(okHttpClient50);
        org.junit.Assert.assertNotNull(okHttpClient52);
        org.junit.Assert.assertNotNull(okHttpClient53);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNotNull(connectionPool60);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(okHttpClient65);
        org.junit.Assert.assertNotNull(okHttpClient67);
        org.junit.Assert.assertNotNull(proxy68);
        org.junit.Assert.assertNotNull(okHttpClient69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "DIRECT" + "'", str70, "DIRECT");
        org.junit.Assert.assertNull(socketAddress71);
        org.junit.Assert.assertNotNull(okHttpClient72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "DIRECT" + "'", str74, "DIRECT");
    }

    @Test
    public void test12145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12145");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient0.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.copyWithDefaults();
        java.util.List<java.lang.String> strList12 = okHttpClient0.getTransports();
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient14 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool15 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient14.connectionPool = connectionPool15;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = null;
        okHttpClient17.hostnameVerifier = hostnameVerifier18;
        java.net.ResponseCache responseCache20 = null;
        okHttpClient17.responseCache = responseCache20;
        java.util.List<java.lang.String> strList22 = okHttpClient17.transports;
        com.squareup.okhttp.ConnectionPool connectionPool23 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient17.connectionPool = connectionPool23;
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient14.setConnectionPool(connectionPool23);
        com.squareup.okhttp.ConnectionPool connectionPool26 = okHttpClient25.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator27 = okHttpClient25.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool30 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient25.connectionPool = connectionPool30;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier33 = null;
        okHttpClient32.hostnameVerifier = hostnameVerifier33;
        java.net.ResponseCache responseCache35 = null;
        okHttpClient32.responseCache = responseCache35;
        java.util.List<java.lang.String> strList37 = okHttpClient32.transports;
        com.squareup.okhttp.ConnectionPool connectionPool38 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient32.connectionPool = connectionPool38;
        java.net.CookieHandler cookieHandler40 = okHttpClient32.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache41 = okHttpClient32.okResponseCache();
        java.net.CookieHandler cookieHandler42 = okHttpClient32.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient43 = new com.squareup.okhttp.OkHttpClient(okHttpClient32);
        java.net.Proxy proxy44 = java.net.Proxy.NO_PROXY;
        boolean boolean46 = proxy44.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type47 = proxy44.type();
        java.net.SocketAddress socketAddress48 = proxy44.address();
        com.squareup.okhttp.OkHttpClient okHttpClient49 = okHttpClient32.setProxy(proxy44);
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient25.setProxy(proxy44);
        com.squareup.okhttp.OkHttpClient okHttpClient51 = okHttpClient0.setProxy(proxy44);
        java.net.ProxySelector proxySelector52 = null;
        okHttpClient51.proxySelector = proxySelector52;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory54 = okHttpClient51.getSslSocketFactory();
        com.squareup.okhttp.ConnectionPool connectionPool55 = okHttpClient51.connectionPool;
        java.net.ProxySelector proxySelector56 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient57 = okHttpClient51.setProxySelector(proxySelector56);
        java.net.CookieHandler cookieHandler58 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient59 = okHttpClient57.setCookieHandler(cookieHandler58);
        java.util.Set<com.squareup.okhttp.Route> routeSet60 = okHttpClient59.failedRoutes;
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNotNull(connectionPool15);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNotNull(connectionPool23);
        org.junit.Assert.assertNotNull(okHttpClient25);
        org.junit.Assert.assertNotNull(connectionPool26);
        org.junit.Assert.assertNull(okAuthenticator27);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(connectionPool38);
        org.junit.Assert.assertNull(cookieHandler40);
        org.junit.Assert.assertNull(okResponseCache41);
        org.junit.Assert.assertNull(cookieHandler42);
        org.junit.Assert.assertNotNull(proxy44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + type47 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type47.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress48);
        org.junit.Assert.assertNotNull(okHttpClient49);
        org.junit.Assert.assertNotNull(okHttpClient50);
        org.junit.Assert.assertNotNull(okHttpClient51);
        org.junit.Assert.assertNull(sSLSocketFactory54);
        org.junit.Assert.assertNotNull(connectionPool55);
        org.junit.Assert.assertNotNull(okHttpClient57);
        org.junit.Assert.assertNotNull(okHttpClient59);
        org.junit.Assert.assertNotNull(routeSet60);
    }

    @Test
    public void test12146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12146");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.ResponseCache responseCache5 = null;
        okHttpClient4.responseCache = responseCache5;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient4.setSSLSocketFactory(sSLSocketFactory7);
        java.net.ProxySelector proxySelector9 = null;
        okHttpClient4.proxySelector = proxySelector9;
        com.squareup.okhttp.ConnectionPool connectionPool13 = new com.squareup.okhttp.ConnectionPool((int) ' ', (long) (short) 100);
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient4.setConnectionPool(connectionPool13);
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool16 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient15.connectionPool = connectionPool16;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier19 = null;
        okHttpClient18.hostnameVerifier = hostnameVerifier19;
        java.net.ResponseCache responseCache21 = null;
        okHttpClient18.responseCache = responseCache21;
        java.util.List<java.lang.String> strList23 = okHttpClient18.transports;
        com.squareup.okhttp.ConnectionPool connectionPool24 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient18.connectionPool = connectionPool24;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient15.setConnectionPool(connectionPool24);
        com.squareup.okhttp.ConnectionPool connectionPool27 = okHttpClient26.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator28 = okHttpClient26.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool31 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient26.connectionPool = connectionPool31;
        java.net.ResponseCache responseCache33 = okHttpClient26.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory34 = okHttpClient26.sslSocketFactory;
        java.net.Proxy proxy35 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress36 = proxy35.address();
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient26.setProxy(proxy35);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory38 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient26.setSSLSocketFactory(sSLSocketFactory38);
        com.squareup.okhttp.OkHttpClient okHttpClient40 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier41 = null;
        okHttpClient40.hostnameVerifier = hostnameVerifier41;
        java.net.ResponseCache responseCache43 = null;
        okHttpClient40.responseCache = responseCache43;
        javax.net.ssl.HostnameVerifier hostnameVerifier45 = okHttpClient40.hostnameVerifier;
        java.net.Proxy proxy46 = okHttpClient40.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool49 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient40.connectionPool = connectionPool49;
        com.squareup.okhttp.OkHttpClient okHttpClient51 = okHttpClient40.copyWithDefaults();
        java.net.ResponseCache responseCache52 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient53 = okHttpClient51.setResponseCache(responseCache52);
        com.squareup.okhttp.OkAuthenticator okAuthenticator54 = okHttpClient51.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient55 = okHttpClient26.setAuthenticator(okAuthenticator54);
        java.net.Proxy proxy56 = okHttpClient55.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient57 = okHttpClient14.setProxy(proxy56);
        java.util.Set<com.squareup.okhttp.Route> routeSet58 = okHttpClient14.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient59 = new com.squareup.okhttp.OkHttpClient(okHttpClient14);
        com.squareup.okhttp.OkHttpClient okHttpClient60 = new com.squareup.okhttp.OkHttpClient(okHttpClient59);
        java.net.ProxySelector proxySelector61 = okHttpClient60.getProxySelector();
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertNotNull(okHttpClient14);
        org.junit.Assert.assertNotNull(connectionPool16);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNotNull(connectionPool24);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNotNull(connectionPool27);
        org.junit.Assert.assertNull(okAuthenticator28);
        org.junit.Assert.assertNull(responseCache33);
        org.junit.Assert.assertNull(sSLSocketFactory34);
        org.junit.Assert.assertNotNull(proxy35);
        org.junit.Assert.assertNull(socketAddress36);
        org.junit.Assert.assertNotNull(okHttpClient37);
        org.junit.Assert.assertNotNull(okHttpClient39);
        org.junit.Assert.assertNull(hostnameVerifier45);
        org.junit.Assert.assertNull(proxy46);
        org.junit.Assert.assertNotNull(okHttpClient51);
        org.junit.Assert.assertNotNull(okHttpClient53);
        org.junit.Assert.assertNotNull(okAuthenticator54);
        org.junit.Assert.assertNotNull(okHttpClient55);
        org.junit.Assert.assertNotNull(proxy56);
        org.junit.Assert.assertNotNull(okHttpClient57);
        org.junit.Assert.assertNotNull(routeSet58);
        org.junit.Assert.assertNull(proxySelector61);
    }

    @Test
    public void test12147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12147");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.Proxy proxy8 = null;
        okHttpClient0.proxy = proxy8;
        boolean boolean10 = okHttpClient0.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient0.setFollowProtocolRedirects(true);
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = null;
        okHttpClient13.hostnameVerifier = hostnameVerifier14;
        java.net.ResponseCache responseCache16 = null;
        okHttpClient13.responseCache = responseCache16;
        java.util.List<java.lang.String> strList18 = okHttpClient13.transports;
        com.squareup.okhttp.ConnectionPool connectionPool19 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient13.connectionPool = connectionPool19;
        com.squareup.okhttp.ConnectionPool connectionPool21 = okHttpClient13.connectionPool;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient0.setConnectionPool(connectionPool21);
        com.squareup.okhttp.OkHttpClient okHttpClient23 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier24 = null;
        okHttpClient23.hostnameVerifier = hostnameVerifier24;
        java.net.ResponseCache responseCache26 = null;
        okHttpClient23.responseCache = responseCache26;
        java.util.List<java.lang.String> strList28 = okHttpClient23.transports;
        com.squareup.okhttp.ConnectionPool connectionPool29 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient23.connectionPool = connectionPool29;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient23.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient32 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier33 = null;
        okHttpClient32.hostnameVerifier = hostnameVerifier33;
        java.net.ResponseCache responseCache35 = null;
        okHttpClient32.responseCache = responseCache35;
        java.util.List<java.lang.String> strList37 = okHttpClient32.transports;
        com.squareup.okhttp.ConnectionPool connectionPool38 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient32.connectionPool = connectionPool38;
        com.squareup.okhttp.OkHttpClient okHttpClient40 = okHttpClient32.copyWithDefaults();
        java.net.ProxySelector proxySelector41 = okHttpClient40.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory42 = okHttpClient40.getSslSocketFactory();
        okHttpClient23.sslSocketFactory = sSLSocketFactory42;
        com.squareup.okhttp.OkHttpClient okHttpClient44 = okHttpClient22.setSSLSocketFactory(sSLSocketFactory42);
        java.lang.String[] strArray45 = sSLSocketFactory42.getSupportedCipherSuites();
        java.net.Socket socket46 = sSLSocketFactory42.createSocket();
        java.lang.String[] strArray47 = sSLSocketFactory42.getSupportedCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient48 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier49 = null;
        okHttpClient48.hostnameVerifier = hostnameVerifier49;
        java.net.ResponseCache responseCache51 = null;
        okHttpClient48.responseCache = responseCache51;
        java.util.List<java.lang.String> strList53 = okHttpClient48.transports;
        com.squareup.okhttp.ConnectionPool connectionPool54 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient48.connectionPool = connectionPool54;
        java.net.CookieHandler cookieHandler56 = okHttpClient48.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache57 = okHttpClient48.okResponseCache();
        java.net.CookieHandler cookieHandler58 = okHttpClient48.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient59 = new com.squareup.okhttp.OkHttpClient(okHttpClient48);
        java.net.Proxy proxy60 = java.net.Proxy.NO_PROXY;
        boolean boolean62 = proxy60.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type63 = proxy60.type();
        java.net.SocketAddress socketAddress64 = proxy60.address();
        com.squareup.okhttp.OkHttpClient okHttpClient65 = okHttpClient48.setProxy(proxy60);
        com.squareup.okhttp.OkHttpClient okHttpClient66 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier67 = null;
        okHttpClient66.hostnameVerifier = hostnameVerifier67;
        java.net.ResponseCache responseCache69 = null;
        okHttpClient66.responseCache = responseCache69;
        java.util.List<java.lang.String> strList71 = okHttpClient66.transports;
        com.squareup.okhttp.ConnectionPool connectionPool72 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient66.connectionPool = connectionPool72;
        com.squareup.okhttp.OkHttpClient okHttpClient74 = okHttpClient66.copyWithDefaults();
        java.net.ProxySelector proxySelector75 = okHttpClient74.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory76 = okHttpClient74.getSslSocketFactory();
        okHttpClient65.sslSocketFactory = sSLSocketFactory76;
        java.lang.String[] strArray78 = sSLSocketFactory76.getDefaultCipherSuites();
        java.lang.String[] strArray79 = sSLSocketFactory76.getSupportedCipherSuites();
        java.lang.String[] strArray80 = sSLSocketFactory76.getDefaultCipherSuites();
        java.lang.String[] strArray81 = sSLSocketFactory76.getDefaultCipherSuites();
        java.lang.String[] strArray82 = sSLSocketFactory76.getDefaultCipherSuites();
        java.net.Socket socket83 = sSLSocketFactory76.createSocket();
        java.net.Socket socket84 = sSLSocketFactory76.createSocket();
        java.io.InputStream inputStream85 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket87 = sSLSocketFactory42.createSocket(socket84, inputStream85, false);
            org.junit.Assert.fail("Expected exception of type java.net.SocketException; message: Underlying socket is not connected");
        } catch (java.net.SocketException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(connectionPool19);
        org.junit.Assert.assertNotNull(connectionPool21);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNotNull(connectionPool29);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(connectionPool38);
        org.junit.Assert.assertNotNull(okHttpClient40);
// flaky:         org.junit.Assert.assertNull(proxySelector41);
        org.junit.Assert.assertNotNull(sSLSocketFactory42);
        org.junit.Assert.assertNotNull(okHttpClient44);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(socket46);
        org.junit.Assert.assertEquals(socket46.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNotNull(connectionPool54);
        org.junit.Assert.assertNull(cookieHandler56);
        org.junit.Assert.assertNull(okResponseCache57);
        org.junit.Assert.assertNull(cookieHandler58);
        org.junit.Assert.assertNotNull(proxy60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + type63 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type63.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress64);
        org.junit.Assert.assertNotNull(okHttpClient65);
        org.junit.Assert.assertNull(strList71);
        org.junit.Assert.assertNotNull(connectionPool72);
        org.junit.Assert.assertNotNull(okHttpClient74);
// flaky:         org.junit.Assert.assertNull(proxySelector75);
        org.junit.Assert.assertNotNull(sSLSocketFactory76);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertNotNull(socket83);
        org.junit.Assert.assertEquals(socket83.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(socket84);
        org.junit.Assert.assertEquals(socket84.toString(), "Socket[unconnected]");
    }

    @Test
    public void test12148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12148");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.OkAuthenticator okAuthenticator12 = okHttpClient11.getAuthenticator();
        java.net.ProxySelector proxySelector13 = okHttpClient11.getProxySelector();
        java.net.ResponseCache responseCache14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient11.setResponseCache(responseCache14);
        java.net.CookieHandler cookieHandler16 = null;
        okHttpClient15.cookieHandler = cookieHandler16;
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = okHttpClient15.getHostnameVerifier();
        java.net.ResponseCache responseCache19 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient15.setResponseCache(responseCache19);
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache21 = okHttpClient20.okResponseCache();
        com.squareup.okhttp.ConnectionPool connectionPool22 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient20.setConnectionPool(connectionPool22);
        java.net.Proxy proxy24 = okHttpClient23.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient25 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier26 = null;
        okHttpClient25.hostnameVerifier = hostnameVerifier26;
        java.net.ResponseCache responseCache28 = null;
        okHttpClient25.responseCache = responseCache28;
        java.util.List<java.lang.String> strList30 = okHttpClient25.transports;
        com.squareup.okhttp.ConnectionPool connectionPool31 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient25.connectionPool = connectionPool31;
        java.net.Proxy proxy33 = null;
        okHttpClient25.proxy = proxy33;
        boolean boolean35 = okHttpClient25.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient36 = new com.squareup.okhttp.OkHttpClient(okHttpClient25);
        java.net.ProxySelector proxySelector37 = okHttpClient36.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier38 = okHttpClient36.hostnameVerifier;
        javax.net.ssl.HostnameVerifier hostnameVerifier39 = okHttpClient36.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient40 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool41 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient40.connectionPool = connectionPool41;
        com.squareup.okhttp.OkAuthenticator okAuthenticator43 = null;
        okHttpClient40.authenticator = okAuthenticator43;
        java.net.CookieHandler cookieHandler45 = null;
        okHttpClient40.cookieHandler = cookieHandler45;
        java.net.Proxy proxy47 = java.net.Proxy.NO_PROXY;
        boolean boolean49 = proxy47.equals((java.lang.Object) 1L);
        com.squareup.okhttp.OkHttpClient okHttpClient50 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache51 = okHttpClient50.okResponseCache();
        java.net.ResponseCache responseCache52 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient53 = okHttpClient50.setResponseCache(responseCache52);
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList56 = new java.util.ArrayList<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        okHttpClient50.transports = strList56;
        boolean boolean59 = proxy47.equals((java.lang.Object) strList56);
        com.squareup.okhttp.OkHttpClient okHttpClient60 = okHttpClient40.setProxy(proxy47);
        com.squareup.okhttp.OkHttpClient okHttpClient61 = okHttpClient36.setProxy(proxy47);
        java.net.SocketAddress socketAddress62 = proxy47.address();
        com.squareup.okhttp.OkHttpClient okHttpClient63 = okHttpClient23.setProxy(proxy47);
        com.squareup.okhttp.OkHttpClient okHttpClient64 = new com.squareup.okhttp.OkHttpClient(okHttpClient63);
        java.net.ResponseCache responseCache65 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient66 = okHttpClient64.setResponseCache(responseCache65);
        java.net.CookieHandler cookieHandler67 = null;
        okHttpClient64.cookieHandler = cookieHandler67;
        java.net.ProxySelector proxySelector69 = okHttpClient64.proxySelector;
        java.net.ProxySelector proxySelector70 = okHttpClient64.getProxySelector();
        java.net.ProxySelector proxySelector71 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient72 = okHttpClient64.setProxySelector(proxySelector71);
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(okAuthenticator12);
        org.junit.Assert.assertNull(proxySelector13);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNull(hostnameVerifier18);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNull(okResponseCache21);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertNull(proxy24);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNotNull(connectionPool31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(proxySelector37);
        org.junit.Assert.assertNull(hostnameVerifier38);
        org.junit.Assert.assertNull(hostnameVerifier39);
        org.junit.Assert.assertNotNull(connectionPool41);
        org.junit.Assert.assertNotNull(proxy47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(okResponseCache51);
        org.junit.Assert.assertNotNull(okHttpClient53);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(okHttpClient60);
        org.junit.Assert.assertNotNull(okHttpClient61);
        org.junit.Assert.assertNull(socketAddress62);
        org.junit.Assert.assertNotNull(okHttpClient63);
        org.junit.Assert.assertNotNull(okHttpClient66);
        org.junit.Assert.assertNull(proxySelector69);
        org.junit.Assert.assertNull(proxySelector70);
        org.junit.Assert.assertNotNull(okHttpClient72);
    }

    @Test
    public void test12149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12149");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.CookieHandler cookieHandler8 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache9 = okHttpClient0.okResponseCache();
        java.net.CookieHandler cookieHandler10 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = okHttpClient11.hostnameVerifier;
        java.util.List<java.lang.String> strList13 = okHttpClient11.transports;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient11.setSSLSocketFactory(sSLSocketFactory14);
        com.squareup.okhttp.OkHttpClient okHttpClient16 = new com.squareup.okhttp.OkHttpClient(okHttpClient11);
        java.net.CookieHandler cookieHandler17 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient11.setCookieHandler(cookieHandler17);
        com.squareup.okhttp.OkAuthenticator okAuthenticator19 = okHttpClient18.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient18.setFollowProtocolRedirects(false);
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient(okHttpClient21);
        com.squareup.okhttp.OkAuthenticator okAuthenticator23 = okHttpClient21.authenticator;
        java.util.List<java.lang.String> strList24 = okHttpClient21.getTransports();
        com.squareup.okhttp.OkAuthenticator okAuthenticator25 = okHttpClient21.getAuthenticator();
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNull(cookieHandler8);
        org.junit.Assert.assertNull(okResponseCache9);
        org.junit.Assert.assertNull(cookieHandler10);
        org.junit.Assert.assertNull(hostnameVerifier12);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNull(okAuthenticator19);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNull(okAuthenticator23);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNull(okAuthenticator25);
    }

    @Test
    public void test12150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12150");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.ConnectionPool connectionPool12 = okHttpClient11.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator13 = okHttpClient11.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool16 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient11.connectionPool = connectionPool16;
        java.net.ResponseCache responseCache18 = okHttpClient11.responseCache;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool20 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient19.connectionPool = connectionPool20;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier23 = null;
        okHttpClient22.hostnameVerifier = hostnameVerifier23;
        java.net.ResponseCache responseCache25 = null;
        okHttpClient22.responseCache = responseCache25;
        java.util.List<java.lang.String> strList27 = okHttpClient22.transports;
        com.squareup.okhttp.ConnectionPool connectionPool28 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient22.connectionPool = connectionPool28;
        com.squareup.okhttp.OkHttpClient okHttpClient30 = okHttpClient19.setConnectionPool(connectionPool28);
        com.squareup.okhttp.ConnectionPool connectionPool31 = okHttpClient30.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator32 = okHttpClient30.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool35 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient30.connectionPool = connectionPool35;
        java.net.ResponseCache responseCache37 = okHttpClient30.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory38 = okHttpClient30.sslSocketFactory;
        java.net.Proxy proxy39 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress40 = proxy39.address();
        com.squareup.okhttp.OkHttpClient okHttpClient41 = okHttpClient30.setProxy(proxy39);
        com.squareup.okhttp.OkHttpClient okHttpClient42 = new com.squareup.okhttp.OkHttpClient(okHttpClient41);
        com.squareup.okhttp.OkHttpClient okHttpClient43 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier44 = null;
        okHttpClient43.hostnameVerifier = hostnameVerifier44;
        java.net.ResponseCache responseCache46 = null;
        okHttpClient43.responseCache = responseCache46;
        java.util.List<java.lang.String> strList48 = okHttpClient43.transports;
        com.squareup.okhttp.ConnectionPool connectionPool49 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient43.connectionPool = connectionPool49;
        com.squareup.okhttp.OkHttpClient okHttpClient51 = okHttpClient43.copyWithDefaults();
        java.net.ProxySelector proxySelector52 = okHttpClient51.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory53 = okHttpClient51.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient54 = okHttpClient41.setSSLSocketFactory(sSLSocketFactory53);
        java.lang.String[] strArray55 = sSLSocketFactory53.getSupportedCipherSuites();
        java.lang.String[] strArray56 = sSLSocketFactory53.getSupportedCipherSuites();
        okHttpClient11.sslSocketFactory = sSLSocketFactory53;
        java.util.List<java.lang.String> strList58 = okHttpClient11.getTransports();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory59 = okHttpClient11.getSslSocketFactory();
        java.net.InetAddress inetAddress60 = null;
        java.net.InetAddress inetAddress62 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket64 = sSLSocketFactory59.createSocket(inetAddress60, (int) (short) 0, inetAddress62, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: port out of range:-1");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNull(okAuthenticator13);
        org.junit.Assert.assertNull(responseCache18);
        org.junit.Assert.assertNotNull(connectionPool20);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNotNull(connectionPool28);
        org.junit.Assert.assertNotNull(okHttpClient30);
        org.junit.Assert.assertNotNull(connectionPool31);
        org.junit.Assert.assertNull(okAuthenticator32);
        org.junit.Assert.assertNull(responseCache37);
        org.junit.Assert.assertNull(sSLSocketFactory38);
        org.junit.Assert.assertNotNull(proxy39);
        org.junit.Assert.assertNull(socketAddress40);
        org.junit.Assert.assertNotNull(okHttpClient41);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNotNull(connectionPool49);
        org.junit.Assert.assertNotNull(okHttpClient51);
// flaky:         org.junit.Assert.assertNull(proxySelector52);
        org.junit.Assert.assertNotNull(sSLSocketFactory53);
        org.junit.Assert.assertNotNull(okHttpClient54);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNotNull(sSLSocketFactory59);
    }

    @Test
    public void test12151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12151");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.Proxy proxy8 = null;
        okHttpClient0.proxy = proxy8;
        boolean boolean10 = okHttpClient0.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient0.setFollowProtocolRedirects(true);
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = null;
        okHttpClient13.hostnameVerifier = hostnameVerifier14;
        java.net.ResponseCache responseCache16 = null;
        okHttpClient13.responseCache = responseCache16;
        java.util.List<java.lang.String> strList18 = okHttpClient13.transports;
        javax.net.ssl.HostnameVerifier hostnameVerifier19 = null;
        okHttpClient13.hostnameVerifier = hostnameVerifier19;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache21 = okHttpClient13.okResponseCache();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory22 = okHttpClient13.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient23 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier24 = null;
        okHttpClient23.hostnameVerifier = hostnameVerifier24;
        java.net.ResponseCache responseCache26 = null;
        okHttpClient23.responseCache = responseCache26;
        javax.net.ssl.HostnameVerifier hostnameVerifier28 = okHttpClient23.hostnameVerifier;
        java.net.Proxy proxy29 = okHttpClient23.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool32 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient23.connectionPool = connectionPool32;
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient23.copyWithDefaults();
        java.net.Proxy proxy35 = okHttpClient34.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier36 = okHttpClient34.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient13.setHostnameVerifier(hostnameVerifier36);
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient12.setHostnameVerifier(hostnameVerifier36);
        java.net.Proxy proxy39 = okHttpClient12.proxy;
        java.net.ResponseCache responseCache40 = okHttpClient12.responseCache;
        java.net.CookieHandler cookieHandler41 = okHttpClient12.cookieHandler;
        com.squareup.okhttp.OkHttpClient okHttpClient42 = new com.squareup.okhttp.OkHttpClient(okHttpClient12);
        com.squareup.okhttp.OkHttpClient okHttpClient43 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier44 = null;
        okHttpClient43.hostnameVerifier = hostnameVerifier44;
        java.net.ResponseCache responseCache46 = null;
        okHttpClient43.responseCache = responseCache46;
        javax.net.ssl.HostnameVerifier hostnameVerifier48 = okHttpClient43.hostnameVerifier;
        java.net.Proxy proxy49 = okHttpClient43.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient50 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache51 = okHttpClient50.okResponseCache();
        java.net.ResponseCache responseCache52 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient53 = okHttpClient50.setResponseCache(responseCache52);
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList56 = new java.util.ArrayList<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        okHttpClient50.transports = strList56;
        okHttpClient43.transports = strList56;
        com.squareup.okhttp.OkHttpClient.DEFAULT_TRANSPORTS = strList56;
        okHttpClient12.transports = strList56;
        com.squareup.okhttp.OkHttpClient okHttpClient62 = okHttpClient12.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier63 = okHttpClient62.hostnameVerifier;
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(okResponseCache21);
        org.junit.Assert.assertNull(sSLSocketFactory22);
        org.junit.Assert.assertNull(hostnameVerifier28);
        org.junit.Assert.assertNull(proxy29);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertNull(proxy35);
        org.junit.Assert.assertNotNull(hostnameVerifier36);
        org.junit.Assert.assertNotNull(okHttpClient37);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNull(proxy39);
        org.junit.Assert.assertNull(responseCache40);
        org.junit.Assert.assertNull(cookieHandler41);
        org.junit.Assert.assertNull(hostnameVerifier48);
        org.junit.Assert.assertNull(proxy49);
        org.junit.Assert.assertNull(okResponseCache51);
        org.junit.Assert.assertNotNull(okHttpClient53);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(okHttpClient62);
        org.junit.Assert.assertNotNull(hostnameVerifier63);
    }

    @Test
    public void test12152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12152");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory6 = okHttpClient0.sslSocketFactory;
        java.net.CookieHandler cookieHandler7 = okHttpClient0.cookieHandler;
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = okHttpClient0.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool10 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient9.connectionPool = connectionPool10;
        com.squareup.okhttp.OkAuthenticator okAuthenticator12 = null;
        okHttpClient9.authenticator = okAuthenticator12;
        java.util.List<java.lang.String> strList14 = okHttpClient9.transports;
        java.net.ResponseCache responseCache15 = null;
        okHttpClient9.responseCache = responseCache15;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = null;
        okHttpClient17.hostnameVerifier = hostnameVerifier18;
        java.net.ResponseCache responseCache20 = null;
        okHttpClient17.responseCache = responseCache20;
        javax.net.ssl.HostnameVerifier hostnameVerifier22 = okHttpClient17.hostnameVerifier;
        java.net.Proxy proxy23 = okHttpClient17.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool26 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient17.connectionPool = connectionPool26;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient17.copyWithDefaults();
        java.net.Proxy proxy29 = okHttpClient28.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = okHttpClient28.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient9.setHostnameVerifier(hostnameVerifier30);
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient0.setHostnameVerifier(hostnameVerifier30);
        okHttpClient32.followProtocolRedirects = false;
        com.squareup.okhttp.OkAuthenticator okAuthenticator35 = okHttpClient32.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient32.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient37 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool38 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient37.connectionPool = connectionPool38;
        com.squareup.okhttp.OkAuthenticator okAuthenticator40 = null;
        okHttpClient37.authenticator = okAuthenticator40;
        java.util.List<java.lang.String> strList42 = okHttpClient37.transports;
        java.net.ResponseCache responseCache43 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient44 = okHttpClient37.setResponseCache(responseCache43);
        com.squareup.okhttp.OkHttpClient okHttpClient45 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool46 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient45.connectionPool = connectionPool46;
        com.squareup.okhttp.OkHttpClient okHttpClient48 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier49 = null;
        okHttpClient48.hostnameVerifier = hostnameVerifier49;
        java.net.ResponseCache responseCache51 = null;
        okHttpClient48.responseCache = responseCache51;
        java.util.List<java.lang.String> strList53 = okHttpClient48.transports;
        com.squareup.okhttp.ConnectionPool connectionPool54 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient48.connectionPool = connectionPool54;
        com.squareup.okhttp.OkHttpClient okHttpClient56 = okHttpClient45.setConnectionPool(connectionPool54);
        com.squareup.okhttp.OkAuthenticator okAuthenticator57 = okHttpClient56.getAuthenticator();
        java.net.ProxySelector proxySelector58 = okHttpClient56.getProxySelector();
        java.net.ResponseCache responseCache59 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient60 = okHttpClient56.setResponseCache(responseCache59);
        java.net.Proxy proxy61 = java.net.Proxy.NO_PROXY;
        boolean boolean63 = proxy61.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type64 = proxy61.type();
        java.net.SocketAddress socketAddress65 = proxy61.address();
        com.squareup.okhttp.OkHttpClient okHttpClient66 = okHttpClient60.setProxy(proxy61);
        java.net.SocketAddress socketAddress67 = proxy61.address();
        com.squareup.okhttp.OkHttpClient okHttpClient68 = okHttpClient37.setProxy(proxy61);
        java.net.SocketAddress socketAddress69 = proxy61.address();
        com.squareup.okhttp.OkHttpClient okHttpClient70 = okHttpClient36.setProxy(proxy61);
        com.squareup.okhttp.ConnectionPool connectionPool71 = okHttpClient70.getConnectionPool();
        com.squareup.okhttp.ConnectionPool connectionPool74 = new com.squareup.okhttp.ConnectionPool(100, 10L);
        com.squareup.okhttp.OkHttpClient okHttpClient75 = okHttpClient70.setConnectionPool(connectionPool74);
        com.squareup.okhttp.ConnectionPool connectionPool76 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient77 = okHttpClient70.setConnectionPool(connectionPool76);
        java.net.ResponseCache responseCache78 = okHttpClient77.getResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient79 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier80 = null;
        okHttpClient79.hostnameVerifier = hostnameVerifier80;
        java.net.ResponseCache responseCache82 = null;
        okHttpClient79.responseCache = responseCache82;
        java.util.List<java.lang.String> strList84 = okHttpClient79.transports;
        com.squareup.okhttp.ConnectionPool connectionPool85 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient79.connectionPool = connectionPool85;
        com.squareup.okhttp.OkHttpClient okHttpClient87 = okHttpClient79.copyWithDefaults();
        java.net.ProxySelector proxySelector88 = okHttpClient87.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory89 = okHttpClient87.getSslSocketFactory();
        java.net.Socket socket90 = sSLSocketFactory89.createSocket();
        java.net.Socket socket91 = sSLSocketFactory89.createSocket();
        java.lang.String[] strArray92 = sSLSocketFactory89.getDefaultCipherSuites();
        okHttpClient77.sslSocketFactory = sSLSocketFactory89;
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(sSLSocketFactory6);
        org.junit.Assert.assertNull(cookieHandler7);
        org.junit.Assert.assertNull(hostnameVerifier8);
        org.junit.Assert.assertNotNull(connectionPool10);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(hostnameVerifier22);
        org.junit.Assert.assertNull(proxy23);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNull(proxy29);
        org.junit.Assert.assertNotNull(hostnameVerifier30);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertNull(okAuthenticator35);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNotNull(connectionPool38);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNotNull(okHttpClient44);
        org.junit.Assert.assertNotNull(connectionPool46);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNotNull(connectionPool54);
        org.junit.Assert.assertNotNull(okHttpClient56);
        org.junit.Assert.assertNull(okAuthenticator57);
        org.junit.Assert.assertNull(proxySelector58);
        org.junit.Assert.assertNotNull(okHttpClient60);
        org.junit.Assert.assertNotNull(proxy61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + type64 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type64.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress65);
        org.junit.Assert.assertNotNull(okHttpClient66);
        org.junit.Assert.assertNull(socketAddress67);
        org.junit.Assert.assertNotNull(okHttpClient68);
        org.junit.Assert.assertNull(socketAddress69);
        org.junit.Assert.assertNotNull(okHttpClient70);
        org.junit.Assert.assertNotNull(connectionPool71);
        org.junit.Assert.assertNotNull(okHttpClient75);
        org.junit.Assert.assertNotNull(okHttpClient77);
        org.junit.Assert.assertNull(responseCache78);
        org.junit.Assert.assertNull(strList84);
        org.junit.Assert.assertNotNull(connectionPool85);
        org.junit.Assert.assertNotNull(okHttpClient87);
// flaky:         org.junit.Assert.assertNull(proxySelector88);
        org.junit.Assert.assertNotNull(sSLSocketFactory89);
        org.junit.Assert.assertNotNull(socket90);
        org.junit.Assert.assertEquals(socket90.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(socket91);
        org.junit.Assert.assertEquals(socket91.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(strArray92);
    }

    @Test
    public void test12153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12153");
        com.squareup.okhttp.ConnectionPool connectionPool2 = new com.squareup.okhttp.ConnectionPool(1, 100L);
        int int3 = connectionPool2.getSpdyConnectionCount();
        connectionPool2.evictAll();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test12154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12154");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.ConnectionPool connectionPool12 = okHttpClient0.connectionPool;
        java.util.List<java.lang.String> strList13 = okHttpClient0.getTransports();
        java.net.CookieHandler cookieHandler14 = null;
        okHttpClient0.cookieHandler = cookieHandler14;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        java.net.ResponseCache responseCache17 = null;
        okHttpClient0.responseCache = responseCache17;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache19 = okHttpClient0.okResponseCache();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory20 = okHttpClient0.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient0.copyWithDefaults();
        java.util.List<java.lang.String> strList22 = okHttpClient21.getTransports();
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNull(okResponseCache19);
        org.junit.Assert.assertNull(sSLSocketFactory20);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNotNull(strList22);
    }

    @Test
    public void test12155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12155");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.CookieHandler cookieHandler8 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache9 = okHttpClient0.okResponseCache();
        java.net.CookieHandler cookieHandler10 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        java.net.Proxy proxy12 = java.net.Proxy.NO_PROXY;
        boolean boolean14 = proxy12.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type15 = proxy12.type();
        java.net.SocketAddress socketAddress16 = proxy12.address();
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient0.setProxy(proxy12);
        boolean boolean18 = okHttpClient17.followProtocolRedirects;
        java.net.ProxySelector proxySelector19 = okHttpClient17.getProxySelector();
        com.squareup.okhttp.ConnectionPool connectionPool20 = okHttpClient17.connectionPool;
        int int21 = connectionPool20.getConnectionCount();
        int int22 = connectionPool20.getConnectionCount();
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNull(cookieHandler8);
        org.junit.Assert.assertNull(okResponseCache9);
        org.junit.Assert.assertNull(cookieHandler10);
        org.junit.Assert.assertNotNull(proxy12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + type15 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type15.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress16);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(proxySelector19);
        org.junit.Assert.assertNotNull(connectionPool20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
    }

    @Test
    public void test12156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12156");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient0.copyWithDefaults();
        boolean boolean9 = okHttpClient8.getFollowProtocolRedirects();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory10 = okHttpClient8.sslSocketFactory;
        java.lang.String[] strArray11 = sSLSocketFactory10.getDefaultCipherSuites();
        java.net.Socket socket12 = sSLSocketFactory10.createSocket();
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = null;
        okHttpClient13.hostnameVerifier = hostnameVerifier14;
        java.net.ResponseCache responseCache16 = null;
        okHttpClient13.responseCache = responseCache16;
        java.util.List<java.lang.String> strList18 = okHttpClient13.transports;
        com.squareup.okhttp.ConnectionPool connectionPool19 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient13.connectionPool = connectionPool19;
        com.squareup.okhttp.ConnectionPool connectionPool21 = okHttpClient13.connectionPool;
        boolean boolean22 = okHttpClient13.getFollowProtocolRedirects();
        com.squareup.okhttp.ConnectionPool connectionPool23 = okHttpClient13.getConnectionPool();
        java.net.CookieHandler cookieHandler24 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient13.setCookieHandler(cookieHandler24);
        com.squareup.okhttp.OkHttpClient okHttpClient26 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier27 = null;
        okHttpClient26.hostnameVerifier = hostnameVerifier27;
        java.net.ResponseCache responseCache29 = null;
        okHttpClient26.responseCache = responseCache29;
        javax.net.ssl.HostnameVerifier hostnameVerifier31 = okHttpClient26.hostnameVerifier;
        java.net.Proxy proxy32 = okHttpClient26.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool35 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient26.connectionPool = connectionPool35;
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient26.copyWithDefaults();
        java.net.ResponseCache responseCache38 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient37.setResponseCache(responseCache38);
        java.net.ProxySelector proxySelector40 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient41 = okHttpClient37.setProxySelector(proxySelector40);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory42 = okHttpClient41.getSslSocketFactory();
        com.squareup.okhttp.OkAuthenticator okAuthenticator43 = okHttpClient41.getAuthenticator();
        okHttpClient13.authenticator = okAuthenticator43;
        com.squareup.okhttp.OkHttpClient okHttpClient45 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier46 = null;
        okHttpClient45.hostnameVerifier = hostnameVerifier46;
        java.net.ResponseCache responseCache48 = null;
        okHttpClient45.responseCache = responseCache48;
        java.util.List<java.lang.String> strList50 = okHttpClient45.transports;
        com.squareup.okhttp.ConnectionPool connectionPool51 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient45.connectionPool = connectionPool51;
        java.net.CookieHandler cookieHandler53 = okHttpClient45.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache54 = okHttpClient45.okResponseCache();
        java.net.CookieHandler cookieHandler55 = okHttpClient45.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient56 = new com.squareup.okhttp.OkHttpClient(okHttpClient45);
        java.net.Proxy proxy57 = java.net.Proxy.NO_PROXY;
        boolean boolean59 = proxy57.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type60 = proxy57.type();
        java.net.SocketAddress socketAddress61 = proxy57.address();
        com.squareup.okhttp.OkHttpClient okHttpClient62 = okHttpClient45.setProxy(proxy57);
        com.squareup.okhttp.OkHttpClient okHttpClient63 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier64 = null;
        okHttpClient63.hostnameVerifier = hostnameVerifier64;
        java.net.ResponseCache responseCache66 = null;
        okHttpClient63.responseCache = responseCache66;
        java.util.List<java.lang.String> strList68 = okHttpClient63.transports;
        com.squareup.okhttp.ConnectionPool connectionPool69 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient63.connectionPool = connectionPool69;
        com.squareup.okhttp.OkHttpClient okHttpClient71 = okHttpClient63.copyWithDefaults();
        java.net.ProxySelector proxySelector72 = okHttpClient71.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory73 = okHttpClient71.getSslSocketFactory();
        okHttpClient62.sslSocketFactory = sSLSocketFactory73;
        java.lang.String[] strArray75 = sSLSocketFactory73.getDefaultCipherSuites();
        java.lang.String[] strArray76 = sSLSocketFactory73.getSupportedCipherSuites();
        java.lang.String[] strArray77 = sSLSocketFactory73.getDefaultCipherSuites();
        java.net.Socket socket78 = sSLSocketFactory73.createSocket();
        com.squareup.okhttp.OkHttpClient okHttpClient79 = okHttpClient13.setSSLSocketFactory(sSLSocketFactory73);
        java.lang.String[] strArray80 = sSLSocketFactory73.getDefaultCipherSuites();
        java.lang.String[] strArray81 = sSLSocketFactory73.getDefaultCipherSuites();
        java.net.Socket socket82 = sSLSocketFactory73.createSocket();
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket86 = sSLSocketFactory10.createSocket(socket82, "", (int) (byte) 100, true);
            org.junit.Assert.fail("Expected exception of type java.net.SocketException; message: Underlying socket is not connected");
        } catch (java.net.SocketException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(sSLSocketFactory10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(socket12);
        org.junit.Assert.assertEquals(socket12.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(connectionPool19);
        org.junit.Assert.assertNotNull(connectionPool21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(connectionPool23);
        org.junit.Assert.assertNotNull(okHttpClient25);
        org.junit.Assert.assertNull(hostnameVerifier31);
        org.junit.Assert.assertNull(proxy32);
        org.junit.Assert.assertNotNull(okHttpClient37);
        org.junit.Assert.assertNotNull(okHttpClient39);
        org.junit.Assert.assertNotNull(okHttpClient41);
        org.junit.Assert.assertNotNull(sSLSocketFactory42);
        org.junit.Assert.assertNotNull(okAuthenticator43);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNotNull(connectionPool51);
        org.junit.Assert.assertNull(cookieHandler53);
        org.junit.Assert.assertNull(okResponseCache54);
        org.junit.Assert.assertNull(cookieHandler55);
        org.junit.Assert.assertNotNull(proxy57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + type60 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type60.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress61);
        org.junit.Assert.assertNotNull(okHttpClient62);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNotNull(connectionPool69);
        org.junit.Assert.assertNotNull(okHttpClient71);
// flaky:         org.junit.Assert.assertNull(proxySelector72);
        org.junit.Assert.assertNotNull(sSLSocketFactory73);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(socket78);
        org.junit.Assert.assertEquals(socket78.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(okHttpClient79);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertNotNull(socket82);
        org.junit.Assert.assertEquals(socket82.toString(), "Socket[unconnected]");
    }

    @Test
    public void test12157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12157");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        boolean boolean3 = okHttpClient0.getFollowProtocolRedirects();
        java.net.Proxy proxy4 = okHttpClient0.proxy;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = null;
        okHttpClient6.hostnameVerifier = hostnameVerifier7;
        java.net.ResponseCache responseCache9 = null;
        okHttpClient6.responseCache = responseCache9;
        java.util.List<java.lang.String> strList11 = okHttpClient6.transports;
        java.net.Proxy proxy12 = java.net.Proxy.NO_PROXY;
        boolean boolean14 = proxy12.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type15 = proxy12.type();
        java.net.SocketAddress socketAddress16 = proxy12.address();
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient6.setProxy(proxy12);
        java.net.SocketAddress socketAddress18 = proxy12.address();
        java.net.Proxy.Type type19 = proxy12.type();
        java.net.SocketAddress socketAddress20 = proxy12.address();
        com.squareup.okhttp.OkHttpClient okHttpClient21 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier22 = null;
        okHttpClient21.hostnameVerifier = hostnameVerifier22;
        java.net.ResponseCache responseCache24 = null;
        okHttpClient21.responseCache = responseCache24;
        javax.net.ssl.HostnameVerifier hostnameVerifier26 = okHttpClient21.hostnameVerifier;
        java.net.Proxy proxy27 = okHttpClient21.getProxy();
        java.net.CookieHandler cookieHandler28 = null;
        okHttpClient21.cookieHandler = cookieHandler28;
        okHttpClient21.followProtocolRedirects = true;
        java.net.CookieHandler cookieHandler32 = okHttpClient21.getCookieHandler();
        boolean boolean33 = proxy12.equals((java.lang.Object) okHttpClient21);
        java.lang.String str34 = proxy12.toString();
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient0.setProxy(proxy12);
        java.net.ResponseCache responseCache36 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient0.setResponseCache(responseCache36);
        java.net.Proxy proxy38 = okHttpClient37.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient39 = new com.squareup.okhttp.OkHttpClient(okHttpClient37);
        java.net.ProxySelector proxySelector40 = null;
        okHttpClient37.proxySelector = proxySelector40;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(proxy4);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(proxy12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + type15 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type15.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress16);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNull(socketAddress18);
        org.junit.Assert.assertTrue("'" + type19 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type19.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress20);
        org.junit.Assert.assertNull(hostnameVerifier26);
        org.junit.Assert.assertNull(proxy27);
        org.junit.Assert.assertNull(cookieHandler32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "DIRECT" + "'", str34, "DIRECT");
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNotNull(okHttpClient37);
        org.junit.Assert.assertNotNull(proxy38);
    }

    @Test
    public void test12158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12158");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient0.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.copyWithDefaults();
        java.net.ResponseCache responseCache12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setResponseCache(responseCache12);
        com.squareup.okhttp.OkHttpClient okHttpClient14 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool15 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient14.connectionPool = connectionPool15;
        java.net.ResponseCache responseCache17 = null;
        okHttpClient14.responseCache = responseCache17;
        java.net.Proxy proxy19 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress20 = proxy19.address();
        java.net.SocketAddress socketAddress21 = proxy19.address();
        okHttpClient14.proxy = proxy19;
        com.squareup.okhttp.ConnectionPool connectionPool25 = new com.squareup.okhttp.ConnectionPool((-1), (long) '#');
        com.squareup.okhttp.Address address26 = null;
        com.squareup.okhttp.Connection connection27 = connectionPool25.get(address26);
        int int28 = connectionPool25.getSpdyConnectionCount();
        connectionPool25.evictAll();
        com.squareup.okhttp.OkHttpClient okHttpClient30 = okHttpClient14.setConnectionPool(connectionPool25);
        com.squareup.okhttp.OkHttpClient okHttpClient31 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier32 = null;
        okHttpClient31.hostnameVerifier = hostnameVerifier32;
        java.net.ProxySelector proxySelector34 = okHttpClient31.proxySelector;
        java.net.ProxySelector proxySelector35 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient31.setProxySelector(proxySelector35);
        com.squareup.okhttp.OkHttpClient okHttpClient37 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier38 = null;
        okHttpClient37.hostnameVerifier = hostnameVerifier38;
        java.net.ResponseCache responseCache40 = null;
        okHttpClient37.responseCache = responseCache40;
        java.util.List<java.lang.String> strList42 = okHttpClient37.transports;
        com.squareup.okhttp.ConnectionPool connectionPool43 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient37.connectionPool = connectionPool43;
        com.squareup.okhttp.OkHttpClient okHttpClient45 = okHttpClient37.copyWithDefaults();
        java.net.ProxySelector proxySelector46 = okHttpClient45.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory47 = okHttpClient45.getSslSocketFactory();
        okHttpClient31.sslSocketFactory = sSLSocketFactory47;
        okHttpClient14.sslSocketFactory = sSLSocketFactory47;
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient13.setSSLSocketFactory(sSLSocketFactory47);
        com.squareup.okhttp.OkHttpClient okHttpClient51 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool52 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient51.connectionPool = connectionPool52;
        com.squareup.okhttp.OkHttpClient okHttpClient54 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier55 = null;
        okHttpClient54.hostnameVerifier = hostnameVerifier55;
        java.net.ResponseCache responseCache57 = null;
        okHttpClient54.responseCache = responseCache57;
        java.util.List<java.lang.String> strList59 = okHttpClient54.transports;
        com.squareup.okhttp.ConnectionPool connectionPool60 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient54.connectionPool = connectionPool60;
        com.squareup.okhttp.OkHttpClient okHttpClient62 = okHttpClient51.setConnectionPool(connectionPool60);
        com.squareup.okhttp.ConnectionPool connectionPool63 = okHttpClient62.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator64 = okHttpClient62.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool67 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient62.connectionPool = connectionPool67;
        java.net.ResponseCache responseCache69 = okHttpClient62.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory70 = okHttpClient62.sslSocketFactory;
        java.net.Proxy proxy71 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress72 = proxy71.address();
        com.squareup.okhttp.OkHttpClient okHttpClient73 = okHttpClient62.setProxy(proxy71);
        com.squareup.okhttp.OkHttpClient okHttpClient74 = new com.squareup.okhttp.OkHttpClient(okHttpClient73);
        com.squareup.okhttp.OkHttpClient okHttpClient75 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier76 = null;
        okHttpClient75.hostnameVerifier = hostnameVerifier76;
        java.net.ResponseCache responseCache78 = null;
        okHttpClient75.responseCache = responseCache78;
        java.util.List<java.lang.String> strList80 = okHttpClient75.transports;
        com.squareup.okhttp.ConnectionPool connectionPool81 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient75.connectionPool = connectionPool81;
        com.squareup.okhttp.OkHttpClient okHttpClient83 = okHttpClient75.copyWithDefaults();
        java.net.ProxySelector proxySelector84 = okHttpClient83.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory85 = okHttpClient83.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient86 = okHttpClient73.setSSLSocketFactory(sSLSocketFactory85);
        java.lang.String[] strArray87 = sSLSocketFactory85.getSupportedCipherSuites();
        java.lang.String[] strArray88 = sSLSocketFactory85.getSupportedCipherSuites();
        java.lang.String[] strArray89 = sSLSocketFactory85.getSupportedCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient90 = okHttpClient13.setSSLSocketFactory(sSLSocketFactory85);
        java.lang.String[] strArray91 = sSLSocketFactory85.getDefaultCipherSuites();
        java.lang.String[] strArray92 = sSLSocketFactory85.getDefaultCipherSuites();
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket95 = sSLSocketFactory85.createSocket("DIRECT", (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: port out of range:-1");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNotNull(connectionPool15);
        org.junit.Assert.assertNotNull(proxy19);
        org.junit.Assert.assertNull(socketAddress20);
        org.junit.Assert.assertNull(socketAddress21);
        org.junit.Assert.assertNull(connection27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(okHttpClient30);
        org.junit.Assert.assertNull(proxySelector34);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNotNull(connectionPool43);
        org.junit.Assert.assertNotNull(okHttpClient45);
// flaky:         org.junit.Assert.assertNull(proxySelector46);
        org.junit.Assert.assertNotNull(sSLSocketFactory47);
        org.junit.Assert.assertNotNull(okHttpClient50);
        org.junit.Assert.assertNotNull(connectionPool52);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNotNull(connectionPool60);
        org.junit.Assert.assertNotNull(okHttpClient62);
        org.junit.Assert.assertNotNull(connectionPool63);
        org.junit.Assert.assertNull(okAuthenticator64);
        org.junit.Assert.assertNull(responseCache69);
        org.junit.Assert.assertNull(sSLSocketFactory70);
        org.junit.Assert.assertNotNull(proxy71);
        org.junit.Assert.assertNull(socketAddress72);
        org.junit.Assert.assertNotNull(okHttpClient73);
        org.junit.Assert.assertNull(strList80);
        org.junit.Assert.assertNotNull(connectionPool81);
        org.junit.Assert.assertNotNull(okHttpClient83);
// flaky:         org.junit.Assert.assertNull(proxySelector84);
        org.junit.Assert.assertNotNull(sSLSocketFactory85);
        org.junit.Assert.assertNotNull(okHttpClient86);
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertNotNull(strArray88);
        org.junit.Assert.assertNotNull(strArray89);
        org.junit.Assert.assertNotNull(okHttpClient90);
        org.junit.Assert.assertNotNull(strArray91);
        org.junit.Assert.assertNotNull(strArray92);
    }

    @Test
    public void test12159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12159");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.Proxy proxy8 = null;
        okHttpClient0.proxy = proxy8;
        boolean boolean10 = okHttpClient0.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient0.setFollowProtocolRedirects(true);
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = null;
        okHttpClient13.hostnameVerifier = hostnameVerifier14;
        java.net.ResponseCache responseCache16 = null;
        okHttpClient13.responseCache = responseCache16;
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = okHttpClient13.hostnameVerifier;
        java.net.Proxy proxy19 = okHttpClient13.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient20 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache21 = okHttpClient20.okResponseCache();
        java.net.ResponseCache responseCache22 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient20.setResponseCache(responseCache22);
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList26 = new java.util.ArrayList<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        okHttpClient20.transports = strList26;
        okHttpClient13.transports = strList26;
        java.net.Proxy proxy30 = okHttpClient13.getProxy();
        boolean boolean31 = okHttpClient13.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool33 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient32.connectionPool = connectionPool33;
        com.squareup.okhttp.OkHttpClient okHttpClient35 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier36 = null;
        okHttpClient35.hostnameVerifier = hostnameVerifier36;
        java.net.ResponseCache responseCache38 = null;
        okHttpClient35.responseCache = responseCache38;
        java.util.List<java.lang.String> strList40 = okHttpClient35.transports;
        com.squareup.okhttp.ConnectionPool connectionPool41 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient35.connectionPool = connectionPool41;
        com.squareup.okhttp.OkHttpClient okHttpClient43 = okHttpClient32.setConnectionPool(connectionPool41);
        java.net.Proxy proxy44 = okHttpClient43.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient45 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool46 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient45.connectionPool = connectionPool46;
        int int48 = connectionPool46.getSpdyConnectionCount();
        okHttpClient43.connectionPool = connectionPool46;
        com.squareup.okhttp.OkHttpClient okHttpClient50 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier51 = null;
        okHttpClient50.hostnameVerifier = hostnameVerifier51;
        java.net.ResponseCache responseCache53 = null;
        okHttpClient50.responseCache = responseCache53;
        javax.net.ssl.HostnameVerifier hostnameVerifier55 = okHttpClient50.hostnameVerifier;
        java.net.Proxy proxy56 = okHttpClient50.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool59 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient50.connectionPool = connectionPool59;
        com.squareup.okhttp.OkHttpClient okHttpClient61 = okHttpClient50.copyWithDefaults();
        java.net.ResponseCache responseCache62 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient63 = okHttpClient61.setResponseCache(responseCache62);
        com.squareup.okhttp.OkAuthenticator okAuthenticator64 = okHttpClient61.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient65 = okHttpClient43.setAuthenticator(okAuthenticator64);
        okHttpClient13.authenticator = okAuthenticator64;
        com.squareup.okhttp.OkHttpClient okHttpClient67 = okHttpClient12.setAuthenticator(okAuthenticator64);
        com.squareup.okhttp.OkHttpClient okHttpClient68 = okHttpClient67.copyWithDefaults();
        java.net.CookieHandler cookieHandler69 = okHttpClient67.cookieHandler;
        java.util.List<java.lang.String> strList70 = okHttpClient67.transports;
        java.net.ResponseCache responseCache71 = okHttpClient67.getResponseCache();
        javax.net.ssl.HostnameVerifier hostnameVerifier72 = okHttpClient67.hostnameVerifier;
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertNull(hostnameVerifier18);
        org.junit.Assert.assertNull(proxy19);
        org.junit.Assert.assertNull(okResponseCache21);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(proxy30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(connectionPool33);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNotNull(connectionPool41);
        org.junit.Assert.assertNotNull(okHttpClient43);
        org.junit.Assert.assertNull(proxy44);
        org.junit.Assert.assertNotNull(connectionPool46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNull(hostnameVerifier55);
        org.junit.Assert.assertNull(proxy56);
        org.junit.Assert.assertNotNull(okHttpClient61);
        org.junit.Assert.assertNotNull(okHttpClient63);
        org.junit.Assert.assertNotNull(okAuthenticator64);
        org.junit.Assert.assertNotNull(okHttpClient65);
        org.junit.Assert.assertNotNull(okHttpClient67);
        org.junit.Assert.assertNotNull(okHttpClient68);
        org.junit.Assert.assertNull(cookieHandler69);
        org.junit.Assert.assertNull(strList70);
        org.junit.Assert.assertNull(responseCache71);
        org.junit.Assert.assertNull(hostnameVerifier72);
    }

    @Test
    public void test12160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12160");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        com.squareup.okhttp.ConnectionPool connectionPool8 = okHttpClient0.connectionPool;
        boolean boolean9 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.ConnectionPool connectionPool10 = okHttpClient0.getConnectionPool();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory11 = okHttpClient0.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient12 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool13 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient12.connectionPool = connectionPool13;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier16 = null;
        okHttpClient15.hostnameVerifier = hostnameVerifier16;
        java.net.ResponseCache responseCache18 = null;
        okHttpClient15.responseCache = responseCache18;
        java.util.List<java.lang.String> strList20 = okHttpClient15.transports;
        com.squareup.okhttp.ConnectionPool connectionPool21 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient15.connectionPool = connectionPool21;
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient12.setConnectionPool(connectionPool21);
        com.squareup.okhttp.ConnectionPool connectionPool26 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        okHttpClient12.connectionPool = connectionPool26;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory28 = okHttpClient12.sslSocketFactory;
        java.net.CookieHandler cookieHandler29 = okHttpClient12.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient30 = new com.squareup.okhttp.OkHttpClient(okHttpClient12);
        com.squareup.okhttp.OkHttpClient okHttpClient31 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier32 = null;
        okHttpClient31.hostnameVerifier = hostnameVerifier32;
        java.net.ResponseCache responseCache34 = null;
        okHttpClient31.responseCache = responseCache34;
        javax.net.ssl.HostnameVerifier hostnameVerifier36 = okHttpClient31.hostnameVerifier;
        java.net.Proxy proxy37 = okHttpClient31.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient38 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache39 = okHttpClient38.okResponseCache();
        java.net.ResponseCache responseCache40 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient41 = okHttpClient38.setResponseCache(responseCache40);
        java.lang.String[] strArray43 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList44 = new java.util.ArrayList<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        okHttpClient38.transports = strList44;
        okHttpClient31.transports = strList44;
        java.util.Set<com.squareup.okhttp.Route> routeSet48 = okHttpClient31.failedRoutes;
        okHttpClient12.failedRoutes = routeSet48;
        java.util.Set<com.squareup.okhttp.Route> routeSet50 = okHttpClient12.failedRoutes;
        okHttpClient0.failedRoutes = routeSet50;
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNotNull(connectionPool8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(connectionPool10);
        org.junit.Assert.assertNull(sSLSocketFactory11);
        org.junit.Assert.assertNotNull(connectionPool13);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(connectionPool21);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertNull(sSLSocketFactory28);
        org.junit.Assert.assertNull(cookieHandler29);
        org.junit.Assert.assertNull(hostnameVerifier36);
        org.junit.Assert.assertNull(proxy37);
        org.junit.Assert.assertNull(okResponseCache39);
        org.junit.Assert.assertNotNull(okHttpClient41);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(routeSet48);
        org.junit.Assert.assertNotNull(routeSet50);
    }

    @Test
    public void test12161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12161");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        java.util.List<java.lang.String> strList6 = okHttpClient0.getTransports();
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient0.copyWithDefaults();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory8 = okHttpClient7.getSslSocketFactory();
        java.lang.String[] strArray9 = sSLSocketFactory8.getDefaultCipherSuites();
        java.net.Socket socket10 = sSLSocketFactory8.createSocket();
        java.net.InetAddress inetAddress11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket13 = sSLSocketFactory8.createSocket(inetAddress11, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: port out of range:-1");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(okHttpClient7);
        org.junit.Assert.assertNotNull(sSLSocketFactory8);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(socket10);
        org.junit.Assert.assertEquals(socket10.toString(), "Socket[unconnected]");
    }

    @Test
    public void test12162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12162");
        java.net.Proxy proxy0 = java.net.Proxy.NO_PROXY;
        boolean boolean2 = proxy0.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type3 = proxy0.type();
        java.lang.String str4 = proxy0.toString();
        com.squareup.okhttp.OkHttpClient okHttpClient5 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier6 = null;
        okHttpClient5.hostnameVerifier = hostnameVerifier6;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory8 = okHttpClient5.getSslSocketFactory();
        boolean boolean9 = proxy0.equals((java.lang.Object) okHttpClient5);
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient5.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient(okHttpClient10);
        java.net.Proxy proxy12 = okHttpClient10.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient10.setFollowProtocolRedirects(true);
        org.junit.Assert.assertNotNull(proxy0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + type3 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type3.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "DIRECT" + "'", str4, "DIRECT");
        org.junit.Assert.assertNull(sSLSocketFactory8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertNull(proxy12);
        org.junit.Assert.assertNotNull(okHttpClient14);
    }

    @Test
    public void test12163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12163");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.Proxy proxy8 = null;
        okHttpClient0.proxy = proxy8;
        boolean boolean10 = okHttpClient0.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        java.net.ProxySelector proxySelector12 = okHttpClient11.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier13 = okHttpClient11.hostnameVerifier;
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = okHttpClient11.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool16 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient15.connectionPool = connectionPool16;
        com.squareup.okhttp.OkAuthenticator okAuthenticator18 = null;
        okHttpClient15.authenticator = okAuthenticator18;
        java.net.CookieHandler cookieHandler20 = null;
        okHttpClient15.cookieHandler = cookieHandler20;
        java.net.Proxy proxy22 = java.net.Proxy.NO_PROXY;
        boolean boolean24 = proxy22.equals((java.lang.Object) 1L);
        com.squareup.okhttp.OkHttpClient okHttpClient25 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache26 = okHttpClient25.okResponseCache();
        java.net.ResponseCache responseCache27 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient25.setResponseCache(responseCache27);
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        okHttpClient25.transports = strList31;
        boolean boolean34 = proxy22.equals((java.lang.Object) strList31);
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient15.setProxy(proxy22);
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient11.setProxy(proxy22);
        com.squareup.okhttp.OkHttpClient okHttpClient37 = new com.squareup.okhttp.OkHttpClient(okHttpClient36);
        javax.net.ssl.HostnameVerifier hostnameVerifier38 = okHttpClient36.getHostnameVerifier();
        java.net.CookieHandler cookieHandler39 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient40 = okHttpClient36.setCookieHandler(cookieHandler39);
        java.net.ResponseCache responseCache41 = okHttpClient40.getResponseCache();
        okHttpClient40.followProtocolRedirects = true;
        java.net.Proxy proxy44 = okHttpClient40.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient45 = new com.squareup.okhttp.OkHttpClient(okHttpClient40);
        com.squareup.okhttp.OkHttpClient okHttpClient46 = okHttpClient45.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient47 = okHttpClient46.copyWithDefaults();
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(proxySelector12);
        org.junit.Assert.assertNull(hostnameVerifier13);
        org.junit.Assert.assertNull(hostnameVerifier14);
        org.junit.Assert.assertNotNull(connectionPool16);
        org.junit.Assert.assertNotNull(proxy22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(okResponseCache26);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNull(hostnameVerifier38);
        org.junit.Assert.assertNotNull(okHttpClient40);
        org.junit.Assert.assertNull(responseCache41);
        org.junit.Assert.assertNotNull(proxy44);
        org.junit.Assert.assertNotNull(okHttpClient46);
        org.junit.Assert.assertNotNull(okHttpClient47);
    }

    @Test
    public void test12164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12164");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.Proxy proxy8 = null;
        okHttpClient0.proxy = proxy8;
        boolean boolean10 = okHttpClient0.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient0.setFollowProtocolRedirects(true);
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = null;
        okHttpClient13.hostnameVerifier = hostnameVerifier14;
        java.net.ResponseCache responseCache16 = null;
        okHttpClient13.responseCache = responseCache16;
        java.util.List<java.lang.String> strList18 = okHttpClient13.transports;
        javax.net.ssl.HostnameVerifier hostnameVerifier19 = null;
        okHttpClient13.hostnameVerifier = hostnameVerifier19;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache21 = okHttpClient13.okResponseCache();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory22 = okHttpClient13.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient23 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier24 = null;
        okHttpClient23.hostnameVerifier = hostnameVerifier24;
        java.net.ResponseCache responseCache26 = null;
        okHttpClient23.responseCache = responseCache26;
        javax.net.ssl.HostnameVerifier hostnameVerifier28 = okHttpClient23.hostnameVerifier;
        java.net.Proxy proxy29 = okHttpClient23.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool32 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient23.connectionPool = connectionPool32;
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient23.copyWithDefaults();
        java.net.Proxy proxy35 = okHttpClient34.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier36 = okHttpClient34.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient13.setHostnameVerifier(hostnameVerifier36);
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient12.setHostnameVerifier(hostnameVerifier36);
        java.net.Proxy proxy39 = okHttpClient12.proxy;
        java.net.ResponseCache responseCache40 = okHttpClient12.responseCache;
        java.net.CookieHandler cookieHandler41 = okHttpClient12.cookieHandler;
        com.squareup.okhttp.OkHttpClient okHttpClient42 = new com.squareup.okhttp.OkHttpClient(okHttpClient12);
        com.squareup.okhttp.ConnectionPool connectionPool45 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) 0);
        int int46 = connectionPool45.getSpdyConnectionCount();
        int int47 = connectionPool45.getConnectionCount();
        okHttpClient12.connectionPool = connectionPool45;
        com.squareup.okhttp.ConnectionPool connectionPool49 = okHttpClient12.connectionPool;
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(okResponseCache21);
        org.junit.Assert.assertNull(sSLSocketFactory22);
        org.junit.Assert.assertNull(hostnameVerifier28);
        org.junit.Assert.assertNull(proxy29);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertNull(proxy35);
        org.junit.Assert.assertNotNull(hostnameVerifier36);
        org.junit.Assert.assertNotNull(okHttpClient37);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNull(proxy39);
        org.junit.Assert.assertNull(responseCache40);
        org.junit.Assert.assertNull(cookieHandler41);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(connectionPool49);
    }

    @Test
    public void test12165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12165");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.Proxy proxy8 = null;
        okHttpClient0.proxy = proxy8;
        boolean boolean10 = okHttpClient0.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        java.net.ProxySelector proxySelector12 = okHttpClient11.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier13 = okHttpClient11.hostnameVerifier;
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = okHttpClient11.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool16 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient15.connectionPool = connectionPool16;
        com.squareup.okhttp.OkAuthenticator okAuthenticator18 = null;
        okHttpClient15.authenticator = okAuthenticator18;
        java.net.CookieHandler cookieHandler20 = null;
        okHttpClient15.cookieHandler = cookieHandler20;
        java.net.Proxy proxy22 = java.net.Proxy.NO_PROXY;
        boolean boolean24 = proxy22.equals((java.lang.Object) 1L);
        com.squareup.okhttp.OkHttpClient okHttpClient25 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache26 = okHttpClient25.okResponseCache();
        java.net.ResponseCache responseCache27 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient25.setResponseCache(responseCache27);
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        okHttpClient25.transports = strList31;
        boolean boolean34 = proxy22.equals((java.lang.Object) strList31);
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient15.setProxy(proxy22);
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient11.setProxy(proxy22);
        com.squareup.okhttp.OkHttpClient okHttpClient37 = new com.squareup.okhttp.OkHttpClient(okHttpClient36);
        javax.net.ssl.HostnameVerifier hostnameVerifier38 = okHttpClient36.getHostnameVerifier();
        java.net.CookieHandler cookieHandler39 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient40 = okHttpClient36.setCookieHandler(cookieHandler39);
        java.net.ResponseCache responseCache41 = okHttpClient40.getResponseCache();
        okHttpClient40.followProtocolRedirects = true;
        java.net.Proxy proxy44 = okHttpClient40.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient45 = new com.squareup.okhttp.OkHttpClient(okHttpClient40);
        com.squareup.okhttp.OkHttpClient okHttpClient46 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier47 = null;
        okHttpClient46.hostnameVerifier = hostnameVerifier47;
        boolean boolean49 = okHttpClient46.getFollowProtocolRedirects();
        java.util.List<java.lang.String> strList50 = okHttpClient46.transports;
        com.squareup.okhttp.ConnectionPool connectionPool51 = okHttpClient46.getConnectionPool();
        java.net.CookieHandler cookieHandler52 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient53 = okHttpClient46.setCookieHandler(cookieHandler52);
        java.net.Proxy proxy54 = okHttpClient53.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier55 = okHttpClient53.getHostnameVerifier();
        java.util.List<java.lang.String> strList56 = okHttpClient53.getTransports();
        com.squareup.okhttp.OkHttpClient okHttpClient57 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier58 = null;
        okHttpClient57.hostnameVerifier = hostnameVerifier58;
        java.net.ResponseCache responseCache60 = null;
        okHttpClient57.responseCache = responseCache60;
        java.util.List<java.lang.String> strList62 = okHttpClient57.transports;
        com.squareup.okhttp.ConnectionPool connectionPool63 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient57.connectionPool = connectionPool63;
        java.net.CookieHandler cookieHandler65 = okHttpClient57.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache66 = okHttpClient57.okResponseCache();
        java.net.CookieHandler cookieHandler67 = okHttpClient57.getCookieHandler();
        java.net.Proxy proxy68 = okHttpClient57.proxy;
        java.net.CookieHandler cookieHandler69 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient70 = okHttpClient57.setCookieHandler(cookieHandler69);
        com.squareup.okhttp.OkHttpClient okHttpClient71 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier72 = null;
        okHttpClient71.hostnameVerifier = hostnameVerifier72;
        boolean boolean74 = okHttpClient71.getFollowProtocolRedirects();
        java.net.Proxy proxy75 = okHttpClient71.proxy;
        java.util.List<java.lang.String> strList76 = okHttpClient71.transports;
        java.util.List<java.lang.String> strList77 = com.squareup.okhttp.OkHttpClient.DEFAULT_TRANSPORTS;
        okHttpClient71.transports = strList77;
        okHttpClient70.transports = strList77;
        java.net.ResponseCache responseCache80 = null;
        okHttpClient70.responseCache = responseCache80;
        com.squareup.okhttp.OkHttpClient okHttpClient82 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier83 = null;
        okHttpClient82.hostnameVerifier = hostnameVerifier83;
        java.net.ProxySelector proxySelector85 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient86 = okHttpClient82.setProxySelector(proxySelector85);
        com.squareup.okhttp.OkHttpClient okHttpClient87 = okHttpClient86.copyWithDefaults();
        java.net.ProxySelector proxySelector88 = null;
        okHttpClient87.proxySelector = proxySelector88;
        com.squareup.okhttp.OkAuthenticator okAuthenticator90 = okHttpClient87.authenticator;
        okHttpClient70.authenticator = okAuthenticator90;
        com.squareup.okhttp.OkHttpClient okHttpClient92 = okHttpClient53.setAuthenticator(okAuthenticator90);
        com.squareup.okhttp.OkHttpClient okHttpClient93 = okHttpClient40.setAuthenticator(okAuthenticator90);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(proxySelector12);
        org.junit.Assert.assertNull(hostnameVerifier13);
        org.junit.Assert.assertNull(hostnameVerifier14);
        org.junit.Assert.assertNotNull(connectionPool16);
        org.junit.Assert.assertNotNull(proxy22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(okResponseCache26);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNull(hostnameVerifier38);
        org.junit.Assert.assertNotNull(okHttpClient40);
        org.junit.Assert.assertNull(responseCache41);
        org.junit.Assert.assertNotNull(proxy44);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNull(connectionPool51);
        org.junit.Assert.assertNotNull(okHttpClient53);
        org.junit.Assert.assertNull(proxy54);
        org.junit.Assert.assertNull(hostnameVerifier55);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertNotNull(connectionPool63);
        org.junit.Assert.assertNull(cookieHandler65);
        org.junit.Assert.assertNull(okResponseCache66);
        org.junit.Assert.assertNull(cookieHandler67);
        org.junit.Assert.assertNull(proxy68);
        org.junit.Assert.assertNotNull(okHttpClient70);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNull(proxy75);
        org.junit.Assert.assertNull(strList76);
        org.junit.Assert.assertNotNull(strList77);
        org.junit.Assert.assertNotNull(okHttpClient86);
        org.junit.Assert.assertNotNull(okHttpClient87);
        org.junit.Assert.assertNotNull(okAuthenticator90);
        org.junit.Assert.assertNotNull(okHttpClient92);
        org.junit.Assert.assertNotNull(okHttpClient93);
    }

    @Test
    public void test12166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12166");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.CookieHandler cookieHandler8 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache9 = okHttpClient0.okResponseCache();
        java.util.List<java.lang.String> strList10 = okHttpClient0.getTransports();
        java.net.ProxySelector proxySelector11 = okHttpClient0.proxySelector;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier13 = null;
        okHttpClient12.hostnameVerifier = hostnameVerifier13;
        java.net.ProxySelector proxySelector15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient12.setProxySelector(proxySelector15);
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient16.copyWithDefaults();
        com.squareup.okhttp.Route[] routeArray18 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet19 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet19, routeArray18);
        okHttpClient17.failedRoutes = routeSet19;
        java.net.CookieHandler cookieHandler22 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient17.setCookieHandler(cookieHandler22);
        java.net.CookieHandler cookieHandler24 = okHttpClient23.cookieHandler;
        javax.net.ssl.HostnameVerifier hostnameVerifier25 = okHttpClient23.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient0.setHostnameVerifier(hostnameVerifier25);
        com.squareup.okhttp.OkHttpClient okHttpClient27 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier28 = null;
        okHttpClient27.hostnameVerifier = hostnameVerifier28;
        java.net.ProxySelector proxySelector30 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient27.setProxySelector(proxySelector30);
        java.net.CookieHandler cookieHandler32 = okHttpClient27.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient33 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier34 = null;
        okHttpClient33.hostnameVerifier = hostnameVerifier34;
        java.net.ResponseCache responseCache36 = null;
        okHttpClient33.responseCache = responseCache36;
        java.util.List<java.lang.String> strList38 = okHttpClient33.transports;
        com.squareup.okhttp.ConnectionPool connectionPool39 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient33.connectionPool = connectionPool39;
        java.net.Proxy proxy41 = null;
        okHttpClient33.proxy = proxy41;
        java.util.Set<com.squareup.okhttp.Route> routeSet43 = okHttpClient33.failedRoutes;
        okHttpClient27.failedRoutes = routeSet43;
        java.net.ProxySelector proxySelector45 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient46 = okHttpClient27.setProxySelector(proxySelector45);
        com.squareup.okhttp.OkHttpClient okHttpClient47 = new com.squareup.okhttp.OkHttpClient(okHttpClient46);
        com.squareup.okhttp.OkAuthenticator okAuthenticator48 = okHttpClient47.authenticator;
        java.net.ProxySelector proxySelector49 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient47.setProxySelector(proxySelector49);
        com.squareup.okhttp.OkHttpClient okHttpClient51 = okHttpClient50.copyWithDefaults();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory52 = okHttpClient51.sslSocketFactory;
        java.net.CookieHandler cookieHandler53 = okHttpClient51.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient54 = okHttpClient51.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient56 = okHttpClient54.setFollowProtocolRedirects(false);
        java.net.CookieHandler cookieHandler57 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient58 = okHttpClient56.setCookieHandler(cookieHandler57);
        com.squareup.okhttp.OkHttpClient okHttpClient59 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool60 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient59.connectionPool = connectionPool60;
        com.squareup.okhttp.OkHttpClient okHttpClient62 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier63 = null;
        okHttpClient62.hostnameVerifier = hostnameVerifier63;
        java.net.ResponseCache responseCache65 = null;
        okHttpClient62.responseCache = responseCache65;
        java.util.List<java.lang.String> strList67 = okHttpClient62.transports;
        com.squareup.okhttp.ConnectionPool connectionPool68 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient62.connectionPool = connectionPool68;
        com.squareup.okhttp.OkHttpClient okHttpClient70 = okHttpClient59.setConnectionPool(connectionPool68);
        java.net.Proxy proxy71 = okHttpClient70.proxy;
        com.squareup.okhttp.ConnectionPool connectionPool72 = okHttpClient70.getConnectionPool();
        java.util.List<java.lang.String> strList73 = okHttpClient70.transports;
        com.squareup.okhttp.OkHttpClient okHttpClient74 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier75 = null;
        okHttpClient74.hostnameVerifier = hostnameVerifier75;
        java.net.ResponseCache responseCache77 = null;
        okHttpClient74.responseCache = responseCache77;
        javax.net.ssl.HostnameVerifier hostnameVerifier79 = okHttpClient74.hostnameVerifier;
        java.net.Proxy proxy80 = okHttpClient74.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool83 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient74.connectionPool = connectionPool83;
        com.squareup.okhttp.OkHttpClient okHttpClient85 = okHttpClient74.copyWithDefaults();
        java.net.CookieHandler cookieHandler86 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient87 = okHttpClient85.setCookieHandler(cookieHandler86);
        com.squareup.okhttp.OkAuthenticator okAuthenticator88 = okHttpClient87.getAuthenticator();
        okHttpClient70.authenticator = okAuthenticator88;
        okHttpClient56.authenticator = okAuthenticator88;
        okHttpClient0.authenticator = okAuthenticator88;
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNull(cookieHandler8);
        org.junit.Assert.assertNull(okResponseCache9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(proxySelector11);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNotNull(routeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertNull(cookieHandler24);
        org.junit.Assert.assertNotNull(hostnameVerifier25);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNull(cookieHandler32);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNotNull(connectionPool39);
        org.junit.Assert.assertNotNull(routeSet43);
        org.junit.Assert.assertNotNull(okHttpClient46);
        org.junit.Assert.assertNull(okAuthenticator48);
        org.junit.Assert.assertNotNull(okHttpClient50);
        org.junit.Assert.assertNotNull(okHttpClient51);
        org.junit.Assert.assertNotNull(sSLSocketFactory52);
        org.junit.Assert.assertNull(cookieHandler53);
        org.junit.Assert.assertNotNull(okHttpClient54);
        org.junit.Assert.assertNotNull(okHttpClient56);
        org.junit.Assert.assertNotNull(okHttpClient58);
        org.junit.Assert.assertNotNull(connectionPool60);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNotNull(connectionPool68);
        org.junit.Assert.assertNotNull(okHttpClient70);
        org.junit.Assert.assertNull(proxy71);
        org.junit.Assert.assertNotNull(connectionPool72);
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertNull(hostnameVerifier79);
        org.junit.Assert.assertNull(proxy80);
        org.junit.Assert.assertNotNull(okHttpClient85);
        org.junit.Assert.assertNotNull(okHttpClient87);
        org.junit.Assert.assertNotNull(okAuthenticator88);
    }

    @Test
    public void test12167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12167");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.CookieHandler cookieHandler5 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = null;
        okHttpClient6.hostnameVerifier = hostnameVerifier7;
        java.net.ResponseCache responseCache9 = null;
        okHttpClient6.responseCache = responseCache9;
        java.util.List<java.lang.String> strList11 = okHttpClient6.transports;
        com.squareup.okhttp.ConnectionPool connectionPool12 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient6.connectionPool = connectionPool12;
        java.net.Proxy proxy14 = null;
        okHttpClient6.proxy = proxy14;
        java.util.Set<com.squareup.okhttp.Route> routeSet16 = okHttpClient6.failedRoutes;
        okHttpClient0.failedRoutes = routeSet16;
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient0.setHostnameVerifier(hostnameVerifier18);
        java.net.ProxySelector proxySelector20 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient19.setProxySelector(proxySelector20);
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient19.setFollowProtocolRedirects(true);
        com.squareup.okhttp.OkHttpClient okHttpClient24 = new com.squareup.okhttp.OkHttpClient(okHttpClient19);
        com.squareup.okhttp.OkHttpClient okHttpClient25 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier26 = null;
        okHttpClient25.hostnameVerifier = hostnameVerifier26;
        java.net.ResponseCache responseCache28 = null;
        okHttpClient25.responseCache = responseCache28;
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = okHttpClient25.hostnameVerifier;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory31 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient25.setSSLSocketFactory(sSLSocketFactory31);
        java.util.List<java.lang.String> strList33 = okHttpClient25.getTransports();
        com.squareup.okhttp.OkHttpClient okHttpClient34 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier35 = null;
        okHttpClient34.hostnameVerifier = hostnameVerifier35;
        java.net.ResponseCache responseCache37 = null;
        okHttpClient34.responseCache = responseCache37;
        javax.net.ssl.HostnameVerifier hostnameVerifier39 = okHttpClient34.hostnameVerifier;
        java.net.Proxy proxy40 = okHttpClient34.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool43 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient34.connectionPool = connectionPool43;
        boolean boolean45 = okHttpClient34.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient46 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier47 = null;
        okHttpClient46.hostnameVerifier = hostnameVerifier47;
        java.net.ResponseCache responseCache49 = null;
        okHttpClient46.responseCache = responseCache49;
        javax.net.ssl.HostnameVerifier hostnameVerifier51 = okHttpClient46.hostnameVerifier;
        java.net.Proxy proxy52 = okHttpClient46.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool55 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient46.connectionPool = connectionPool55;
        com.squareup.okhttp.OkHttpClient okHttpClient57 = okHttpClient46.copyWithDefaults();
        java.net.Proxy proxy58 = okHttpClient57.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier59 = okHttpClient57.getHostnameVerifier();
        okHttpClient34.hostnameVerifier = hostnameVerifier59;
        com.squareup.okhttp.OkHttpClient okHttpClient61 = okHttpClient25.setHostnameVerifier(hostnameVerifier59);
        okHttpClient24.hostnameVerifier = hostnameVerifier59;
        com.squareup.okhttp.OkHttpClient okHttpClient63 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier64 = null;
        okHttpClient63.hostnameVerifier = hostnameVerifier64;
        java.net.ResponseCache responseCache66 = null;
        okHttpClient63.responseCache = responseCache66;
        javax.net.ssl.HostnameVerifier hostnameVerifier68 = okHttpClient63.hostnameVerifier;
        java.net.Proxy proxy69 = okHttpClient63.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool72 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient63.connectionPool = connectionPool72;
        com.squareup.okhttp.OkHttpClient okHttpClient74 = okHttpClient63.copyWithDefaults();
        java.net.ResponseCache responseCache75 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient76 = okHttpClient74.setResponseCache(responseCache75);
        com.squareup.okhttp.OkAuthenticator okAuthenticator77 = okHttpClient74.authenticator;
        okHttpClient24.authenticator = okAuthenticator77;
        com.squareup.okhttp.ConnectionPool connectionPool81 = new com.squareup.okhttp.ConnectionPool((-1), (long) (short) -1);
        okHttpClient24.connectionPool = connectionPool81;
        com.squareup.okhttp.OkHttpClient okHttpClient83 = new com.squareup.okhttp.OkHttpClient(okHttpClient24);
        com.squareup.okhttp.OkAuthenticator okAuthenticator84 = okHttpClient83.authenticator;
        java.net.ProxySelector proxySelector85 = null;
        okHttpClient83.proxySelector = proxySelector85;
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNotNull(routeSet16);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertNull(hostnameVerifier30);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNull(hostnameVerifier39);
        org.junit.Assert.assertNull(proxy40);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(hostnameVerifier51);
        org.junit.Assert.assertNull(proxy52);
        org.junit.Assert.assertNotNull(okHttpClient57);
        org.junit.Assert.assertNull(proxy58);
        org.junit.Assert.assertNotNull(hostnameVerifier59);
        org.junit.Assert.assertNotNull(okHttpClient61);
        org.junit.Assert.assertNull(hostnameVerifier68);
        org.junit.Assert.assertNull(proxy69);
        org.junit.Assert.assertNotNull(okHttpClient74);
        org.junit.Assert.assertNotNull(okHttpClient76);
        org.junit.Assert.assertNotNull(okAuthenticator77);
        org.junit.Assert.assertNull(okAuthenticator84);
    }

    @Test
    public void test12168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12168");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory6);
        com.squareup.okhttp.ConnectionPool connectionPool8 = okHttpClient7.getConnectionPool();
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient7.setFollowProtocolRedirects(false);
        java.net.CookieHandler cookieHandler11 = okHttpClient10.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient12 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool13 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient12.connectionPool = connectionPool13;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier16 = null;
        okHttpClient15.hostnameVerifier = hostnameVerifier16;
        java.net.ResponseCache responseCache18 = null;
        okHttpClient15.responseCache = responseCache18;
        java.util.List<java.lang.String> strList20 = okHttpClient15.transports;
        com.squareup.okhttp.ConnectionPool connectionPool21 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient15.connectionPool = connectionPool21;
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient12.setConnectionPool(connectionPool21);
        com.squareup.okhttp.OkAuthenticator okAuthenticator24 = okHttpClient23.getAuthenticator();
        java.net.ProxySelector proxySelector25 = okHttpClient23.getProxySelector();
        java.net.ResponseCache responseCache26 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient23.setResponseCache(responseCache26);
        javax.net.ssl.HostnameVerifier hostnameVerifier28 = okHttpClient27.hostnameVerifier;
        java.net.ProxySelector proxySelector29 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient30 = okHttpClient27.setProxySelector(proxySelector29);
        com.squareup.okhttp.ConnectionPool connectionPool33 = new com.squareup.okhttp.ConnectionPool((int) (byte) 0, (long) 1);
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient30.setConnectionPool(connectionPool33);
        com.squareup.okhttp.OkHttpClient okHttpClient35 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier36 = null;
        okHttpClient35.hostnameVerifier = hostnameVerifier36;
        java.net.ResponseCache responseCache38 = null;
        okHttpClient35.responseCache = responseCache38;
        java.util.List<java.lang.String> strList40 = okHttpClient35.transports;
        com.squareup.okhttp.ConnectionPool connectionPool41 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient35.connectionPool = connectionPool41;
        java.net.CookieHandler cookieHandler43 = okHttpClient35.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache44 = okHttpClient35.okResponseCache();
        java.net.CookieHandler cookieHandler45 = okHttpClient35.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient46 = new com.squareup.okhttp.OkHttpClient(okHttpClient35);
        com.squareup.okhttp.OkHttpClient okHttpClient47 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier48 = null;
        okHttpClient47.hostnameVerifier = hostnameVerifier48;
        java.net.ProxySelector proxySelector50 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient51 = okHttpClient47.setProxySelector(proxySelector50);
        java.net.CookieHandler cookieHandler52 = okHttpClient47.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient53 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier54 = null;
        okHttpClient53.hostnameVerifier = hostnameVerifier54;
        java.net.ResponseCache responseCache56 = null;
        okHttpClient53.responseCache = responseCache56;
        java.util.List<java.lang.String> strList58 = okHttpClient53.transports;
        com.squareup.okhttp.ConnectionPool connectionPool59 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient53.connectionPool = connectionPool59;
        java.net.Proxy proxy61 = null;
        okHttpClient53.proxy = proxy61;
        java.util.Set<com.squareup.okhttp.Route> routeSet63 = okHttpClient53.failedRoutes;
        okHttpClient47.failedRoutes = routeSet63;
        okHttpClient46.failedRoutes = routeSet63;
        com.squareup.okhttp.OkHttpClient okHttpClient66 = new com.squareup.okhttp.OkHttpClient(okHttpClient46);
        java.net.ResponseCache responseCache67 = okHttpClient46.getResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient68 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier69 = null;
        okHttpClient68.hostnameVerifier = hostnameVerifier69;
        java.net.ResponseCache responseCache71 = null;
        okHttpClient68.responseCache = responseCache71;
        java.util.List<java.lang.String> strList73 = okHttpClient68.transports;
        javax.net.ssl.HostnameVerifier hostnameVerifier74 = null;
        okHttpClient68.hostnameVerifier = hostnameVerifier74;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache76 = okHttpClient68.okResponseCache();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory77 = okHttpClient68.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient78 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier79 = null;
        okHttpClient78.hostnameVerifier = hostnameVerifier79;
        java.net.ResponseCache responseCache81 = null;
        okHttpClient78.responseCache = responseCache81;
        javax.net.ssl.HostnameVerifier hostnameVerifier83 = okHttpClient78.hostnameVerifier;
        java.net.Proxy proxy84 = okHttpClient78.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool87 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient78.connectionPool = connectionPool87;
        com.squareup.okhttp.OkHttpClient okHttpClient89 = okHttpClient78.copyWithDefaults();
        java.net.Proxy proxy90 = okHttpClient89.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier91 = okHttpClient89.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient92 = okHttpClient68.setHostnameVerifier(hostnameVerifier91);
        okHttpClient46.hostnameVerifier = hostnameVerifier91;
        okHttpClient30.hostnameVerifier = hostnameVerifier91;
        okHttpClient10.hostnameVerifier = hostnameVerifier91;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory96 = okHttpClient10.sslSocketFactory;
        java.net.CookieHandler cookieHandler97 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient98 = okHttpClient10.setCookieHandler(cookieHandler97);
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNotNull(okHttpClient7);
        org.junit.Assert.assertNull(connectionPool8);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertNull(cookieHandler11);
        org.junit.Assert.assertNotNull(connectionPool13);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(connectionPool21);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertNull(okAuthenticator24);
        org.junit.Assert.assertNull(proxySelector25);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNull(hostnameVerifier28);
        org.junit.Assert.assertNotNull(okHttpClient30);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNotNull(connectionPool41);
        org.junit.Assert.assertNull(cookieHandler43);
        org.junit.Assert.assertNull(okResponseCache44);
        org.junit.Assert.assertNull(cookieHandler45);
        org.junit.Assert.assertNotNull(okHttpClient51);
        org.junit.Assert.assertNull(cookieHandler52);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNotNull(connectionPool59);
        org.junit.Assert.assertNotNull(routeSet63);
        org.junit.Assert.assertNull(responseCache67);
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertNull(okResponseCache76);
        org.junit.Assert.assertNull(sSLSocketFactory77);
        org.junit.Assert.assertNull(hostnameVerifier83);
        org.junit.Assert.assertNull(proxy84);
        org.junit.Assert.assertNotNull(okHttpClient89);
        org.junit.Assert.assertNull(proxy90);
        org.junit.Assert.assertNotNull(hostnameVerifier91);
        org.junit.Assert.assertNotNull(okHttpClient92);
        org.junit.Assert.assertNull(sSLSocketFactory96);
        org.junit.Assert.assertNotNull(okHttpClient98);
    }

    @Test
    public void test12169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12169");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.ResponseCache responseCache5 = null;
        okHttpClient4.responseCache = responseCache5;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient4.setSSLSocketFactory(sSLSocketFactory7);
        java.net.ProxySelector proxySelector9 = null;
        okHttpClient4.proxySelector = proxySelector9;
        java.net.CookieHandler cookieHandler11 = null;
        okHttpClient4.cookieHandler = cookieHandler11;
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient8);
    }

    @Test
    public void test12170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12170");
        com.squareup.okhttp.ConnectionPool connectionPool2 = new com.squareup.okhttp.ConnectionPool(0, (long) 0);
        int int3 = connectionPool2.getConnectionCount();
        int int4 = connectionPool2.getSpdyConnectionCount();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    }

    @Test
    public void test12171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12171");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        java.net.Proxy proxy12 = okHttpClient11.proxy;
        com.squareup.okhttp.ConnectionPool connectionPool13 = okHttpClient11.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator14 = okHttpClient11.getAuthenticator();
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(proxy12);
        org.junit.Assert.assertNotNull(connectionPool13);
        org.junit.Assert.assertNull(okAuthenticator14);
    }

    @Test
    public void test12172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12172");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.Proxy proxy8 = null;
        okHttpClient0.proxy = proxy8;
        boolean boolean10 = okHttpClient0.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        java.net.ProxySelector proxySelector12 = okHttpClient11.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier13 = okHttpClient11.hostnameVerifier;
        java.net.CookieHandler cookieHandler14 = null;
        okHttpClient11.cookieHandler = cookieHandler14;
        com.squareup.okhttp.OkAuthenticator okAuthenticator16 = okHttpClient11.authenticator;
        boolean boolean17 = okHttpClient11.followProtocolRedirects;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory18 = okHttpClient11.sslSocketFactory;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = new com.squareup.okhttp.OkHttpClient(okHttpClient11);
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient19.copyWithDefaults();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory21 = okHttpClient19.sslSocketFactory;
        java.net.Proxy proxy22 = java.net.Proxy.NO_PROXY;
        boolean boolean24 = proxy22.equals((java.lang.Object) 1L);
        com.squareup.okhttp.OkHttpClient okHttpClient25 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache26 = okHttpClient25.okResponseCache();
        java.net.ResponseCache responseCache27 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient25.setResponseCache(responseCache27);
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        okHttpClient25.transports = strList31;
        boolean boolean34 = proxy22.equals((java.lang.Object) strList31);
        com.squareup.okhttp.OkHttpClient.DEFAULT_TRANSPORTS = strList31;
        com.squareup.okhttp.OkHttpClient.DEFAULT_TRANSPORTS = strList31;
        com.squareup.okhttp.OkHttpClient.DEFAULT_TRANSPORTS = strList31;
        com.squareup.okhttp.OkHttpClient.DEFAULT_TRANSPORTS = strList31;
        okHttpClient19.transports = strList31;
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(proxySelector12);
        org.junit.Assert.assertNull(hostnameVerifier13);
        org.junit.Assert.assertNull(okAuthenticator16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(sSLSocketFactory18);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNull(sSLSocketFactory21);
        org.junit.Assert.assertNotNull(proxy22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(okResponseCache26);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test12173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12173");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setProxySelector(proxySelector4);
        com.squareup.okhttp.OkAuthenticator okAuthenticator6 = okHttpClient5.authenticator;
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(okAuthenticator6);
    }

    @Test
    public void test12174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12174");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.ResponseCache responseCache5 = null;
        okHttpClient4.responseCache = responseCache5;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient4.setSSLSocketFactory(sSLSocketFactory7);
        com.squareup.okhttp.OkAuthenticator okAuthenticator9 = null;
        okHttpClient4.authenticator = okAuthenticator9;
        java.net.ProxySelector proxySelector11 = okHttpClient4.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = okHttpClient4.getHostnameVerifier();
        java.net.CookieHandler cookieHandler13 = okHttpClient4.cookieHandler;
        com.squareup.okhttp.ConnectionPool connectionPool16 = new com.squareup.okhttp.ConnectionPool(10, (long) 0);
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient4.setConnectionPool(connectionPool16);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertNull(proxySelector11);
        org.junit.Assert.assertNull(hostnameVerifier12);
        org.junit.Assert.assertNull(cookieHandler13);
        org.junit.Assert.assertNotNull(okHttpClient17);
    }

    @Test
    public void test12175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12175");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient4.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool7 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient6.connectionPool = connectionPool7;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier10 = null;
        okHttpClient9.hostnameVerifier = hostnameVerifier10;
        java.net.ResponseCache responseCache12 = null;
        okHttpClient9.responseCache = responseCache12;
        java.util.List<java.lang.String> strList14 = okHttpClient9.transports;
        com.squareup.okhttp.ConnectionPool connectionPool15 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient9.connectionPool = connectionPool15;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient6.setConnectionPool(connectionPool15);
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier19 = null;
        okHttpClient18.hostnameVerifier = hostnameVerifier19;
        java.net.ProxySelector proxySelector21 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient18.setProxySelector(proxySelector21);
        java.net.CookieHandler cookieHandler23 = okHttpClient18.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient24 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier25 = null;
        okHttpClient24.hostnameVerifier = hostnameVerifier25;
        java.net.ResponseCache responseCache27 = null;
        okHttpClient24.responseCache = responseCache27;
        java.util.List<java.lang.String> strList29 = okHttpClient24.transports;
        com.squareup.okhttp.ConnectionPool connectionPool30 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient24.connectionPool = connectionPool30;
        java.net.Proxy proxy32 = null;
        okHttpClient24.proxy = proxy32;
        java.util.Set<com.squareup.okhttp.Route> routeSet34 = okHttpClient24.failedRoutes;
        okHttpClient18.failedRoutes = routeSet34;
        java.net.ProxySelector proxySelector36 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient18.setProxySelector(proxySelector36);
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient18.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient39 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier40 = null;
        okHttpClient39.hostnameVerifier = hostnameVerifier40;
        java.net.ResponseCache responseCache42 = null;
        okHttpClient39.responseCache = responseCache42;
        javax.net.ssl.HostnameVerifier hostnameVerifier44 = okHttpClient39.hostnameVerifier;
        java.net.Proxy proxy45 = okHttpClient39.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool48 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient39.connectionPool = connectionPool48;
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient39.copyWithDefaults();
        java.net.Proxy proxy51 = okHttpClient50.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier52 = okHttpClient50.getHostnameVerifier();
        okHttpClient18.hostnameVerifier = hostnameVerifier52;
        okHttpClient17.hostnameVerifier = hostnameVerifier52;
        okHttpClient5.hostnameVerifier = hostnameVerifier52;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache56 = okHttpClient5.okResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient57 = okHttpClient5.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient58 = new com.squareup.okhttp.OkHttpClient(okHttpClient57);
        java.net.Proxy proxy59 = okHttpClient58.proxy;
        java.net.ProxySelector proxySelector60 = okHttpClient58.proxySelector;
        com.squareup.okhttp.OkHttpClient okHttpClient61 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool62 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient61.connectionPool = connectionPool62;
        com.squareup.okhttp.OkHttpClient okHttpClient64 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier65 = null;
        okHttpClient64.hostnameVerifier = hostnameVerifier65;
        java.net.ResponseCache responseCache67 = null;
        okHttpClient64.responseCache = responseCache67;
        java.util.List<java.lang.String> strList69 = okHttpClient64.transports;
        com.squareup.okhttp.ConnectionPool connectionPool70 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient64.connectionPool = connectionPool70;
        com.squareup.okhttp.OkHttpClient okHttpClient72 = okHttpClient61.setConnectionPool(connectionPool70);
        java.net.ResponseCache responseCache73 = okHttpClient61.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory74 = okHttpClient61.sslSocketFactory;
        java.net.CookieHandler cookieHandler75 = okHttpClient61.getCookieHandler();
        com.squareup.okhttp.OkAuthenticator okAuthenticator76 = okHttpClient61.authenticator;
        java.util.Set<com.squareup.okhttp.Route> routeSet77 = okHttpClient61.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient78 = new com.squareup.okhttp.OkHttpClient(okHttpClient61);
        com.squareup.okhttp.OkHttpClient okHttpClient79 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier80 = null;
        okHttpClient79.hostnameVerifier = hostnameVerifier80;
        java.net.ResponseCache responseCache82 = null;
        okHttpClient79.responseCache = responseCache82;
        javax.net.ssl.HostnameVerifier hostnameVerifier84 = okHttpClient79.hostnameVerifier;
        java.net.Proxy proxy85 = okHttpClient79.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool88 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient79.connectionPool = connectionPool88;
        com.squareup.okhttp.OkHttpClient okHttpClient90 = okHttpClient79.copyWithDefaults();
        java.net.ResponseCache responseCache91 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient92 = okHttpClient90.setResponseCache(responseCache91);
        javax.net.ssl.HostnameVerifier hostnameVerifier93 = okHttpClient92.hostnameVerifier;
        okHttpClient78.hostnameVerifier = hostnameVerifier93;
        okHttpClient58.hostnameVerifier = hostnameVerifier93;
        java.net.ProxySelector proxySelector96 = null;
        okHttpClient58.proxySelector = proxySelector96;
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNotNull(connectionPool7);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNotNull(connectionPool15);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNull(cookieHandler23);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(connectionPool30);
        org.junit.Assert.assertNotNull(routeSet34);
        org.junit.Assert.assertNotNull(okHttpClient37);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNull(hostnameVerifier44);
        org.junit.Assert.assertNull(proxy45);
        org.junit.Assert.assertNotNull(okHttpClient50);
        org.junit.Assert.assertNull(proxy51);
        org.junit.Assert.assertNotNull(hostnameVerifier52);
        org.junit.Assert.assertNull(okResponseCache56);
        org.junit.Assert.assertNotNull(okHttpClient57);
        org.junit.Assert.assertNull(proxy59);
        org.junit.Assert.assertNull(proxySelector60);
        org.junit.Assert.assertNotNull(connectionPool62);
        org.junit.Assert.assertNull(strList69);
        org.junit.Assert.assertNotNull(connectionPool70);
        org.junit.Assert.assertNotNull(okHttpClient72);
        org.junit.Assert.assertNull(responseCache73);
        org.junit.Assert.assertNull(sSLSocketFactory74);
        org.junit.Assert.assertNull(cookieHandler75);
        org.junit.Assert.assertNull(okAuthenticator76);
        org.junit.Assert.assertNotNull(routeSet77);
        org.junit.Assert.assertNull(hostnameVerifier84);
        org.junit.Assert.assertNull(proxy85);
        org.junit.Assert.assertNotNull(okHttpClient90);
        org.junit.Assert.assertNotNull(okHttpClient92);
        org.junit.Assert.assertNotNull(hostnameVerifier93);
    }

    @Test
    public void test12176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12176");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache1 = okHttpClient0.okResponseCache();
        java.net.ResponseCache responseCache2 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.setResponseCache(responseCache2);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory4 = okHttpClient0.sslSocketFactory;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory5 = okHttpClient0.sslSocketFactory;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory6 = okHttpClient0.sslSocketFactory;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = null;
        okHttpClient7.hostnameVerifier = hostnameVerifier8;
        java.net.ResponseCache responseCache10 = null;
        okHttpClient7.responseCache = responseCache10;
        java.util.List<java.lang.String> strList12 = okHttpClient7.transports;
        com.squareup.okhttp.ConnectionPool connectionPool13 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient7.connectionPool = connectionPool13;
        java.net.Proxy proxy15 = null;
        okHttpClient7.proxy = proxy15;
        boolean boolean17 = okHttpClient7.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache19 = okHttpClient18.okResponseCache();
        java.net.ResponseCache responseCache20 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient18.setResponseCache(responseCache20);
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        okHttpClient18.transports = strList24;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory27 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient18.setSSLSocketFactory(sSLSocketFactory27);
        com.squareup.okhttp.OkHttpClient okHttpClient29 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = null;
        okHttpClient29.hostnameVerifier = hostnameVerifier30;
        java.net.ResponseCache responseCache32 = null;
        okHttpClient29.responseCache = responseCache32;
        javax.net.ssl.HostnameVerifier hostnameVerifier34 = okHttpClient29.hostnameVerifier;
        java.net.Proxy proxy35 = okHttpClient29.getProxy();
        java.net.CookieHandler cookieHandler36 = null;
        okHttpClient29.cookieHandler = cookieHandler36;
        okHttpClient29.followProtocolRedirects = true;
        com.squareup.okhttp.OkHttpClient okHttpClient40 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier41 = null;
        okHttpClient40.hostnameVerifier = hostnameVerifier41;
        java.net.ResponseCache responseCache43 = null;
        okHttpClient40.responseCache = responseCache43;
        javax.net.ssl.HostnameVerifier hostnameVerifier45 = okHttpClient40.hostnameVerifier;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory46 = okHttpClient40.sslSocketFactory;
        java.net.CookieHandler cookieHandler47 = okHttpClient40.cookieHandler;
        javax.net.ssl.HostnameVerifier hostnameVerifier48 = okHttpClient40.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient49 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool50 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient49.connectionPool = connectionPool50;
        com.squareup.okhttp.OkAuthenticator okAuthenticator52 = null;
        okHttpClient49.authenticator = okAuthenticator52;
        java.util.List<java.lang.String> strList54 = okHttpClient49.transports;
        java.net.ResponseCache responseCache55 = null;
        okHttpClient49.responseCache = responseCache55;
        com.squareup.okhttp.OkHttpClient okHttpClient57 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier58 = null;
        okHttpClient57.hostnameVerifier = hostnameVerifier58;
        java.net.ResponseCache responseCache60 = null;
        okHttpClient57.responseCache = responseCache60;
        javax.net.ssl.HostnameVerifier hostnameVerifier62 = okHttpClient57.hostnameVerifier;
        java.net.Proxy proxy63 = okHttpClient57.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool66 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient57.connectionPool = connectionPool66;
        com.squareup.okhttp.OkHttpClient okHttpClient68 = okHttpClient57.copyWithDefaults();
        java.net.Proxy proxy69 = okHttpClient68.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier70 = okHttpClient68.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient71 = okHttpClient49.setHostnameVerifier(hostnameVerifier70);
        com.squareup.okhttp.OkHttpClient okHttpClient72 = okHttpClient40.setHostnameVerifier(hostnameVerifier70);
        okHttpClient29.hostnameVerifier = hostnameVerifier70;
        com.squareup.okhttp.OkHttpClient okHttpClient74 = okHttpClient18.setHostnameVerifier(hostnameVerifier70);
        com.squareup.okhttp.OkHttpClient okHttpClient75 = okHttpClient7.setHostnameVerifier(hostnameVerifier70);
        okHttpClient0.hostnameVerifier = hostnameVerifier70;
        com.squareup.okhttp.OkHttpClient okHttpClient77 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient78 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier79 = null;
        okHttpClient78.hostnameVerifier = hostnameVerifier79;
        java.net.ProxySelector proxySelector81 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient82 = okHttpClient78.setProxySelector(proxySelector81);
        java.net.ResponseCache responseCache83 = null;
        okHttpClient82.responseCache = responseCache83;
        javax.net.ssl.HostnameVerifier hostnameVerifier85 = okHttpClient82.getHostnameVerifier();
        java.util.Set<com.squareup.okhttp.Route> routeSet86 = okHttpClient82.failedRoutes;
        okHttpClient0.failedRoutes = routeSet86;
        java.util.Set<com.squareup.okhttp.Route> routeSet88 = okHttpClient0.failedRoutes;
        org.junit.Assert.assertNull(okResponseCache1);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertNull(sSLSocketFactory4);
        org.junit.Assert.assertNull(sSLSocketFactory5);
        org.junit.Assert.assertNull(sSLSocketFactory6);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(connectionPool13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(okResponseCache19);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNull(hostnameVerifier34);
        org.junit.Assert.assertNull(proxy35);
        org.junit.Assert.assertNull(hostnameVerifier45);
        org.junit.Assert.assertNull(sSLSocketFactory46);
        org.junit.Assert.assertNull(cookieHandler47);
        org.junit.Assert.assertNull(hostnameVerifier48);
        org.junit.Assert.assertNotNull(connectionPool50);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNull(hostnameVerifier62);
        org.junit.Assert.assertNull(proxy63);
        org.junit.Assert.assertNotNull(okHttpClient68);
        org.junit.Assert.assertNull(proxy69);
        org.junit.Assert.assertNotNull(hostnameVerifier70);
        org.junit.Assert.assertNotNull(okHttpClient71);
        org.junit.Assert.assertNotNull(okHttpClient72);
        org.junit.Assert.assertNotNull(okHttpClient74);
        org.junit.Assert.assertNotNull(okHttpClient75);
        org.junit.Assert.assertNotNull(okHttpClient77);
        org.junit.Assert.assertNotNull(okHttpClient82);
        org.junit.Assert.assertNull(hostnameVerifier85);
        org.junit.Assert.assertNotNull(routeSet86);
        org.junit.Assert.assertNotNull(routeSet88);
    }

    @Test
    public void test12177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12177");
        com.squareup.okhttp.ConnectionPool connectionPool2 = new com.squareup.okhttp.ConnectionPool((int) ' ', (long) '4');
        int int3 = connectionPool2.getHttpConnectionCount();
        com.squareup.okhttp.Address address4 = null;
        com.squareup.okhttp.Connection connection5 = connectionPool2.get(address4);
        int int6 = connectionPool2.getConnectionCount();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(connection5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }

    @Test
    public void test12178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12178");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache5 = okHttpClient0.okResponseCache();
        java.net.ResponseCache responseCache6 = okHttpClient0.responseCache;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool10 = new com.squareup.okhttp.ConnectionPool((int) (byte) 0, 100L);
        com.squareup.okhttp.Address address11 = null;
        com.squareup.okhttp.Connection connection12 = connectionPool10.get(address11);
        okHttpClient7.connectionPool = connectionPool10;
        java.net.CookieHandler cookieHandler14 = null;
        okHttpClient7.cookieHandler = cookieHandler14;
        java.net.ResponseCache responseCache16 = okHttpClient7.getResponseCache();
        org.junit.Assert.assertNull(okResponseCache5);
        org.junit.Assert.assertNull(responseCache6);
        org.junit.Assert.assertNotNull(okHttpClient7);
        org.junit.Assert.assertNull(connection12);
        org.junit.Assert.assertNull(responseCache16);
    }

    @Test
    public void test12179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12179");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        java.net.ResponseCache responseCache12 = okHttpClient0.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory13 = okHttpClient0.sslSocketFactory;
        java.net.CookieHandler cookieHandler14 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkAuthenticator okAuthenticator15 = okHttpClient0.authenticator;
        java.util.Set<com.squareup.okhttp.Route> routeSet16 = okHttpClient0.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        java.net.CookieHandler cookieHandler18 = null;
        okHttpClient0.cookieHandler = cookieHandler18;
        java.util.List<java.lang.String> strList20 = okHttpClient0.transports;
        java.net.CookieHandler cookieHandler21 = null;
        okHttpClient0.cookieHandler = cookieHandler21;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory23 = okHttpClient0.sslSocketFactory;
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(responseCache12);
        org.junit.Assert.assertNull(sSLSocketFactory13);
        org.junit.Assert.assertNull(cookieHandler14);
        org.junit.Assert.assertNull(okAuthenticator15);
        org.junit.Assert.assertNotNull(routeSet16);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(sSLSocketFactory23);
    }

    @Test
    public void test12180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12180");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.ConnectionPool connectionPool12 = okHttpClient11.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator13 = okHttpClient11.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool16 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient11.connectionPool = connectionPool16;
        java.net.ResponseCache responseCache18 = okHttpClient11.responseCache;
        com.squareup.okhttp.ConnectionPool connectionPool21 = new com.squareup.okhttp.ConnectionPool((int) (byte) 0, 10L);
        okHttpClient11.connectionPool = connectionPool21;
        com.squareup.okhttp.ConnectionPool connectionPool25 = new com.squareup.okhttp.ConnectionPool((int) (byte) 10, 0L);
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient11.setConnectionPool(connectionPool25);
        java.net.ResponseCache responseCache27 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient26.setResponseCache(responseCache27);
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient28.copyWithDefaults();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache30 = okHttpClient29.okResponseCache();
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNull(okAuthenticator13);
        org.junit.Assert.assertNull(responseCache18);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNotNull(okHttpClient29);
        org.junit.Assert.assertNull(okResponseCache30);
    }

    @Test
    public void test12181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12181");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.CookieHandler cookieHandler5 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = null;
        okHttpClient6.hostnameVerifier = hostnameVerifier7;
        java.net.ResponseCache responseCache9 = null;
        okHttpClient6.responseCache = responseCache9;
        java.util.List<java.lang.String> strList11 = okHttpClient6.transports;
        com.squareup.okhttp.ConnectionPool connectionPool12 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient6.connectionPool = connectionPool12;
        java.net.Proxy proxy14 = null;
        okHttpClient6.proxy = proxy14;
        java.util.Set<com.squareup.okhttp.Route> routeSet16 = okHttpClient6.failedRoutes;
        okHttpClient0.failedRoutes = routeSet16;
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient0.setHostnameVerifier(hostnameVerifier18);
        java.net.ProxySelector proxySelector20 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient19.setProxySelector(proxySelector20);
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient19.setFollowProtocolRedirects(true);
        com.squareup.okhttp.OkHttpClient okHttpClient24 = new com.squareup.okhttp.OkHttpClient(okHttpClient19);
        com.squareup.okhttp.OkHttpClient okHttpClient25 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier26 = null;
        okHttpClient25.hostnameVerifier = hostnameVerifier26;
        java.net.ResponseCache responseCache28 = null;
        okHttpClient25.responseCache = responseCache28;
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = okHttpClient25.hostnameVerifier;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory31 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient25.setSSLSocketFactory(sSLSocketFactory31);
        java.util.List<java.lang.String> strList33 = okHttpClient25.getTransports();
        com.squareup.okhttp.OkHttpClient okHttpClient34 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier35 = null;
        okHttpClient34.hostnameVerifier = hostnameVerifier35;
        java.net.ResponseCache responseCache37 = null;
        okHttpClient34.responseCache = responseCache37;
        javax.net.ssl.HostnameVerifier hostnameVerifier39 = okHttpClient34.hostnameVerifier;
        java.net.Proxy proxy40 = okHttpClient34.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool43 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient34.connectionPool = connectionPool43;
        boolean boolean45 = okHttpClient34.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient46 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier47 = null;
        okHttpClient46.hostnameVerifier = hostnameVerifier47;
        java.net.ResponseCache responseCache49 = null;
        okHttpClient46.responseCache = responseCache49;
        javax.net.ssl.HostnameVerifier hostnameVerifier51 = okHttpClient46.hostnameVerifier;
        java.net.Proxy proxy52 = okHttpClient46.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool55 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient46.connectionPool = connectionPool55;
        com.squareup.okhttp.OkHttpClient okHttpClient57 = okHttpClient46.copyWithDefaults();
        java.net.Proxy proxy58 = okHttpClient57.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier59 = okHttpClient57.getHostnameVerifier();
        okHttpClient34.hostnameVerifier = hostnameVerifier59;
        com.squareup.okhttp.OkHttpClient okHttpClient61 = okHttpClient25.setHostnameVerifier(hostnameVerifier59);
        okHttpClient24.hostnameVerifier = hostnameVerifier59;
        com.squareup.okhttp.OkHttpClient okHttpClient64 = okHttpClient24.setFollowProtocolRedirects(false);
        com.squareup.okhttp.OkHttpClient okHttpClient65 = okHttpClient64.copyWithDefaults();
        com.squareup.okhttp.OkAuthenticator okAuthenticator66 = okHttpClient64.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier67 = okHttpClient64.hostnameVerifier;
        java.net.CookieHandler cookieHandler68 = okHttpClient64.cookieHandler;
        com.squareup.okhttp.ConnectionPool connectionPool71 = new com.squareup.okhttp.ConnectionPool((int) (short) -1, 10L);
        com.squareup.okhttp.OkHttpClient okHttpClient72 = okHttpClient64.setConnectionPool(connectionPool71);
        int int73 = connectionPool71.getHttpConnectionCount();
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNotNull(routeSet16);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertNull(hostnameVerifier30);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNull(hostnameVerifier39);
        org.junit.Assert.assertNull(proxy40);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(hostnameVerifier51);
        org.junit.Assert.assertNull(proxy52);
        org.junit.Assert.assertNotNull(okHttpClient57);
        org.junit.Assert.assertNull(proxy58);
        org.junit.Assert.assertNotNull(hostnameVerifier59);
        org.junit.Assert.assertNotNull(okHttpClient61);
        org.junit.Assert.assertNotNull(okHttpClient64);
        org.junit.Assert.assertNotNull(okHttpClient65);
        org.junit.Assert.assertNull(okAuthenticator66);
        org.junit.Assert.assertNotNull(hostnameVerifier67);
        org.junit.Assert.assertNull(cookieHandler68);
        org.junit.Assert.assertNotNull(okHttpClient72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
    }

    @Test
    public void test12182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12182");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.Proxy proxy8 = null;
        okHttpClient0.proxy = proxy8;
        boolean boolean10 = okHttpClient0.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient0.setFollowProtocolRedirects(true);
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = null;
        okHttpClient13.hostnameVerifier = hostnameVerifier14;
        java.net.ResponseCache responseCache16 = null;
        okHttpClient13.responseCache = responseCache16;
        java.util.List<java.lang.String> strList18 = okHttpClient13.transports;
        com.squareup.okhttp.ConnectionPool connectionPool19 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient13.connectionPool = connectionPool19;
        com.squareup.okhttp.ConnectionPool connectionPool21 = okHttpClient13.connectionPool;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient0.setConnectionPool(connectionPool21);
        java.net.ResponseCache responseCache23 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient0.setResponseCache(responseCache23);
        javax.net.ssl.HostnameVerifier hostnameVerifier25 = okHttpClient24.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient26 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier27 = null;
        okHttpClient26.hostnameVerifier = hostnameVerifier27;
        java.net.ResponseCache responseCache29 = null;
        okHttpClient26.responseCache = responseCache29;
        java.util.List<java.lang.String> strList31 = okHttpClient26.transports;
        com.squareup.okhttp.ConnectionPool connectionPool32 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient26.connectionPool = connectionPool32;
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient26.copyWithDefaults();
        boolean boolean35 = okHttpClient34.getFollowProtocolRedirects();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory36 = okHttpClient34.sslSocketFactory;
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient24.setSSLSocketFactory(sSLSocketFactory36);
        java.net.InetAddress inetAddress38 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket40 = sSLSocketFactory36.createSocket(inetAddress38, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.net.ConnectException; message: Connection refused (Connection refused)");
        } catch (java.net.ConnectException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(connectionPool19);
        org.junit.Assert.assertNotNull(connectionPool21);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNull(hostnameVerifier25);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNotNull(connectionPool32);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(sSLSocketFactory36);
        org.junit.Assert.assertNotNull(okHttpClient37);
    }

    @Test
    public void test12183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12183");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.OkAuthenticator okAuthenticator12 = okHttpClient11.getAuthenticator();
        java.net.ProxySelector proxySelector13 = okHttpClient11.getProxySelector();
        java.net.ProxySelector proxySelector14 = null;
        okHttpClient11.proxySelector = proxySelector14;
        java.net.ProxySelector proxySelector16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient11.setProxySelector(proxySelector16);
        java.net.CookieHandler cookieHandler18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient17.setCookieHandler(cookieHandler18);
        java.net.CookieHandler cookieHandler20 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient17.setCookieHandler(cookieHandler20);
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient(okHttpClient17);
        java.net.ProxySelector proxySelector23 = okHttpClient17.getProxySelector();
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(okAuthenticator12);
        org.junit.Assert.assertNull(proxySelector13);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNull(proxySelector23);
    }

    @Test
    public void test12184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12184");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        com.squareup.okhttp.ConnectionPool connectionPool8 = okHttpClient0.connectionPool;
        boolean boolean9 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient10 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier11 = null;
        okHttpClient10.hostnameVerifier = hostnameVerifier11;
        java.net.ResponseCache responseCache13 = null;
        okHttpClient10.responseCache = responseCache13;
        javax.net.ssl.HostnameVerifier hostnameVerifier15 = okHttpClient10.hostnameVerifier;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory16 = okHttpClient10.sslSocketFactory;
        java.net.CookieHandler cookieHandler17 = okHttpClient10.cookieHandler;
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = okHttpClient10.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool20 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient19.connectionPool = connectionPool20;
        com.squareup.okhttp.OkAuthenticator okAuthenticator22 = null;
        okHttpClient19.authenticator = okAuthenticator22;
        java.util.List<java.lang.String> strList24 = okHttpClient19.transports;
        java.net.ResponseCache responseCache25 = null;
        okHttpClient19.responseCache = responseCache25;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier28 = null;
        okHttpClient27.hostnameVerifier = hostnameVerifier28;
        java.net.ResponseCache responseCache30 = null;
        okHttpClient27.responseCache = responseCache30;
        javax.net.ssl.HostnameVerifier hostnameVerifier32 = okHttpClient27.hostnameVerifier;
        java.net.Proxy proxy33 = okHttpClient27.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool36 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient27.connectionPool = connectionPool36;
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient27.copyWithDefaults();
        java.net.Proxy proxy39 = okHttpClient38.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier40 = okHttpClient38.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient41 = okHttpClient19.setHostnameVerifier(hostnameVerifier40);
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient10.setHostnameVerifier(hostnameVerifier40);
        com.squareup.okhttp.OkHttpClient okHttpClient43 = okHttpClient0.setHostnameVerifier(hostnameVerifier40);
        com.squareup.okhttp.OkHttpClient okHttpClient44 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier45 = null;
        okHttpClient44.hostnameVerifier = hostnameVerifier45;
        java.net.ProxySelector proxySelector47 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient48 = okHttpClient44.setProxySelector(proxySelector47);
        com.squareup.okhttp.OkHttpClient okHttpClient49 = okHttpClient48.copyWithDefaults();
        com.squareup.okhttp.Route[] routeArray50 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet51 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet51, routeArray50);
        okHttpClient49.failedRoutes = routeSet51;
        okHttpClient0.failedRoutes = routeSet51;
        java.net.ResponseCache responseCache55 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient56 = okHttpClient0.setResponseCache(responseCache55);
        java.net.CookieHandler cookieHandler57 = okHttpClient0.cookieHandler;
        java.net.ProxySelector proxySelector58 = okHttpClient0.getProxySelector();
        java.net.ProxySelector proxySelector59 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient60 = okHttpClient0.setProxySelector(proxySelector59);
        com.squareup.okhttp.OkHttpClient okHttpClient61 = new com.squareup.okhttp.OkHttpClient(okHttpClient60);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNotNull(connectionPool8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(hostnameVerifier15);
        org.junit.Assert.assertNull(sSLSocketFactory16);
        org.junit.Assert.assertNull(cookieHandler17);
        org.junit.Assert.assertNull(hostnameVerifier18);
        org.junit.Assert.assertNotNull(connectionPool20);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNull(hostnameVerifier32);
        org.junit.Assert.assertNull(proxy33);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNull(proxy39);
        org.junit.Assert.assertNotNull(hostnameVerifier40);
        org.junit.Assert.assertNotNull(okHttpClient41);
        org.junit.Assert.assertNotNull(okHttpClient42);
        org.junit.Assert.assertNotNull(okHttpClient43);
        org.junit.Assert.assertNotNull(okHttpClient48);
        org.junit.Assert.assertNotNull(okHttpClient49);
        org.junit.Assert.assertNotNull(routeArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(okHttpClient56);
        org.junit.Assert.assertNull(cookieHandler57);
        org.junit.Assert.assertNull(proxySelector58);
        org.junit.Assert.assertNotNull(okHttpClient60);
    }

    @Test
    public void test12185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12185");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = null;
        okHttpClient0.proxy = proxy6;
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = okHttpClient0.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient9 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        javax.net.ssl.HostnameVerifier hostnameVerifier10 = okHttpClient0.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = null;
        okHttpClient11.hostnameVerifier = hostnameVerifier12;
        boolean boolean14 = okHttpClient11.getFollowProtocolRedirects();
        java.net.CookieHandler cookieHandler15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient11.setCookieHandler(cookieHandler15);
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache17 = okHttpClient11.okResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet18 = okHttpClient11.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient11.copyWithDefaults();
        java.net.CookieHandler cookieHandler20 = null;
        okHttpClient19.cookieHandler = cookieHandler20;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache23 = okHttpClient22.okResponseCache();
        java.net.ResponseCache responseCache24 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient22.setResponseCache(responseCache24);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory26 = okHttpClient22.sslSocketFactory;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory27 = okHttpClient22.sslSocketFactory;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier29 = null;
        okHttpClient28.hostnameVerifier = hostnameVerifier29;
        boolean boolean31 = okHttpClient28.getFollowProtocolRedirects();
        java.net.CookieHandler cookieHandler32 = okHttpClient28.cookieHandler;
        com.squareup.okhttp.OkHttpClient okHttpClient33 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier34 = null;
        okHttpClient33.hostnameVerifier = hostnameVerifier34;
        java.net.ResponseCache responseCache36 = null;
        okHttpClient33.responseCache = responseCache36;
        javax.net.ssl.HostnameVerifier hostnameVerifier38 = okHttpClient33.hostnameVerifier;
        java.net.Proxy proxy39 = okHttpClient33.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool42 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient33.connectionPool = connectionPool42;
        com.squareup.okhttp.OkHttpClient okHttpClient44 = okHttpClient33.copyWithDefaults();
        java.net.ResponseCache responseCache45 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient46 = okHttpClient44.setResponseCache(responseCache45);
        com.squareup.okhttp.OkAuthenticator okAuthenticator47 = okHttpClient44.authenticator;
        okHttpClient28.authenticator = okAuthenticator47;
        com.squareup.okhttp.OkHttpClient okHttpClient49 = okHttpClient22.setAuthenticator(okAuthenticator47);
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient19.setAuthenticator(okAuthenticator47);
        com.squareup.okhttp.OkHttpClient okHttpClient51 = okHttpClient0.setAuthenticator(okAuthenticator47);
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(hostnameVerifier8);
        org.junit.Assert.assertNull(hostnameVerifier10);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNull(okResponseCache17);
        org.junit.Assert.assertNotNull(routeSet18);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNull(okResponseCache23);
        org.junit.Assert.assertNotNull(okHttpClient25);
        org.junit.Assert.assertNull(sSLSocketFactory26);
        org.junit.Assert.assertNull(sSLSocketFactory27);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(cookieHandler32);
        org.junit.Assert.assertNull(hostnameVerifier38);
        org.junit.Assert.assertNull(proxy39);
        org.junit.Assert.assertNotNull(okHttpClient44);
        org.junit.Assert.assertNotNull(okHttpClient46);
        org.junit.Assert.assertNotNull(okAuthenticator47);
        org.junit.Assert.assertNotNull(okHttpClient49);
        org.junit.Assert.assertNotNull(okHttpClient50);
        org.junit.Assert.assertNotNull(okHttpClient51);
    }

    @Test
    public void test12186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12186");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient0.connectionPool = connectionPool9;
        java.util.List<java.lang.String> strList11 = okHttpClient0.getTransports();
        com.squareup.okhttp.OkHttpClient okHttpClient12 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        java.net.ResponseCache responseCache13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient12.setResponseCache(responseCache13);
        com.squareup.okhttp.ConnectionPool connectionPool15 = okHttpClient14.getConnectionPool();
        com.squareup.okhttp.OkHttpClient okHttpClient16 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier17 = null;
        okHttpClient16.hostnameVerifier = hostnameVerifier17;
        java.net.ProxySelector proxySelector19 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient16.setProxySelector(proxySelector19);
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient20.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient21.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet23 = okHttpClient22.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier25 = null;
        okHttpClient24.hostnameVerifier = hostnameVerifier25;
        java.net.ResponseCache responseCache27 = null;
        okHttpClient24.responseCache = responseCache27;
        javax.net.ssl.HostnameVerifier hostnameVerifier29 = okHttpClient24.hostnameVerifier;
        java.net.Proxy proxy30 = okHttpClient24.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool33 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient24.connectionPool = connectionPool33;
        java.util.List<java.lang.String> strList35 = okHttpClient24.getTransports();
        javax.net.ssl.HostnameVerifier hostnameVerifier36 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient24.setHostnameVerifier(hostnameVerifier36);
        com.squareup.okhttp.OkHttpClient okHttpClient38 = new com.squareup.okhttp.OkHttpClient(okHttpClient24);
        java.util.List<java.lang.String> strList39 = okHttpClient24.getTransports();
        com.squareup.okhttp.OkHttpClient okHttpClient40 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool41 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient40.connectionPool = connectionPool41;
        com.squareup.okhttp.OkHttpClient okHttpClient43 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier44 = null;
        okHttpClient43.hostnameVerifier = hostnameVerifier44;
        java.net.ResponseCache responseCache46 = null;
        okHttpClient43.responseCache = responseCache46;
        java.util.List<java.lang.String> strList48 = okHttpClient43.transports;
        com.squareup.okhttp.ConnectionPool connectionPool49 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient43.connectionPool = connectionPool49;
        com.squareup.okhttp.OkHttpClient okHttpClient51 = okHttpClient40.setConnectionPool(connectionPool49);
        com.squareup.okhttp.ConnectionPool connectionPool52 = okHttpClient51.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator53 = okHttpClient51.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool56 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient51.connectionPool = connectionPool56;
        java.net.ResponseCache responseCache58 = okHttpClient51.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory59 = okHttpClient51.sslSocketFactory;
        java.net.Proxy proxy60 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress61 = proxy60.address();
        com.squareup.okhttp.OkHttpClient okHttpClient62 = okHttpClient51.setProxy(proxy60);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory63 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient64 = okHttpClient51.setSSLSocketFactory(sSLSocketFactory63);
        com.squareup.okhttp.OkHttpClient okHttpClient65 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier66 = null;
        okHttpClient65.hostnameVerifier = hostnameVerifier66;
        java.net.ResponseCache responseCache68 = null;
        okHttpClient65.responseCache = responseCache68;
        javax.net.ssl.HostnameVerifier hostnameVerifier70 = okHttpClient65.hostnameVerifier;
        java.net.Proxy proxy71 = okHttpClient65.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool74 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient65.connectionPool = connectionPool74;
        com.squareup.okhttp.OkHttpClient okHttpClient76 = okHttpClient65.copyWithDefaults();
        java.net.ResponseCache responseCache77 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient78 = okHttpClient76.setResponseCache(responseCache77);
        com.squareup.okhttp.OkAuthenticator okAuthenticator79 = okHttpClient76.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient80 = okHttpClient51.setAuthenticator(okAuthenticator79);
        java.net.Proxy proxy81 = okHttpClient80.getProxy();
        java.net.ResponseCache responseCache82 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient83 = okHttpClient80.setResponseCache(responseCache82);
        com.squareup.okhttp.OkAuthenticator okAuthenticator84 = okHttpClient80.getAuthenticator();
        okHttpClient24.authenticator = okAuthenticator84;
        okHttpClient22.authenticator = okAuthenticator84;
        com.squareup.okhttp.OkHttpClient okHttpClient87 = okHttpClient14.setAuthenticator(okAuthenticator84);
        com.squareup.okhttp.OkHttpClient okHttpClient89 = okHttpClient14.setFollowProtocolRedirects(false);
        com.squareup.okhttp.OkHttpClient okHttpClient91 = okHttpClient89.setFollowProtocolRedirects(true);
        com.squareup.okhttp.OkAuthenticator okAuthenticator92 = okHttpClient89.getAuthenticator();
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(okHttpClient14);
        org.junit.Assert.assertNull(connectionPool15);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNotNull(routeSet23);
        org.junit.Assert.assertNull(hostnameVerifier29);
        org.junit.Assert.assertNull(proxy30);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNotNull(okHttpClient37);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNotNull(connectionPool41);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNotNull(connectionPool49);
        org.junit.Assert.assertNotNull(okHttpClient51);
        org.junit.Assert.assertNotNull(connectionPool52);
        org.junit.Assert.assertNull(okAuthenticator53);
        org.junit.Assert.assertNull(responseCache58);
        org.junit.Assert.assertNull(sSLSocketFactory59);
        org.junit.Assert.assertNotNull(proxy60);
        org.junit.Assert.assertNull(socketAddress61);
        org.junit.Assert.assertNotNull(okHttpClient62);
        org.junit.Assert.assertNotNull(okHttpClient64);
        org.junit.Assert.assertNull(hostnameVerifier70);
        org.junit.Assert.assertNull(proxy71);
        org.junit.Assert.assertNotNull(okHttpClient76);
        org.junit.Assert.assertNotNull(okHttpClient78);
        org.junit.Assert.assertNotNull(okAuthenticator79);
        org.junit.Assert.assertNotNull(okHttpClient80);
        org.junit.Assert.assertNotNull(proxy81);
        org.junit.Assert.assertNotNull(okHttpClient83);
        org.junit.Assert.assertNotNull(okAuthenticator84);
        org.junit.Assert.assertNotNull(okHttpClient87);
        org.junit.Assert.assertNotNull(okHttpClient89);
        org.junit.Assert.assertNotNull(okHttpClient91);
        org.junit.Assert.assertNotNull(okAuthenticator92);
    }

    @Test
    public void test12187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12187");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory6 = okHttpClient0.sslSocketFactory;
        java.net.CookieHandler cookieHandler7 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache8 = okHttpClient0.okResponseCache();
        java.net.Proxy proxy9 = okHttpClient0.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient0.copyWithDefaults();
        java.util.List<java.lang.String> strList11 = okHttpClient0.transports;
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(sSLSocketFactory6);
        org.junit.Assert.assertNull(cookieHandler7);
        org.junit.Assert.assertNull(okResponseCache8);
        org.junit.Assert.assertNull(proxy9);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertNull(strList11);
    }

    @Test
    public void test12188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12188");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache5 = okHttpClient0.okResponseCache();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory6);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory8 = okHttpClient7.sslSocketFactory;
        java.net.ResponseCache responseCache9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient7.setResponseCache(responseCache9);
        com.squareup.okhttp.OkAuthenticator okAuthenticator11 = okHttpClient10.getAuthenticator();
        java.net.ProxySelector proxySelector12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient10.setProxySelector(proxySelector12);
        org.junit.Assert.assertNull(okResponseCache5);
        org.junit.Assert.assertNotNull(okHttpClient7);
        org.junit.Assert.assertNull(sSLSocketFactory8);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertNull(okAuthenticator11);
        org.junit.Assert.assertNotNull(okHttpClient13);
    }

    @Test
    public void test12189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12189");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache8 = okHttpClient7.okResponseCache();
        java.net.ResponseCache responseCache9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient7.setResponseCache(responseCache9);
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        okHttpClient7.transports = strList13;
        okHttpClient0.transports = strList13;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient0.setFollowProtocolRedirects(true);
        com.squareup.okhttp.OkHttpClient okHttpClient19 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier20 = null;
        okHttpClient19.hostnameVerifier = hostnameVerifier20;
        java.net.ResponseCache responseCache22 = null;
        okHttpClient19.responseCache = responseCache22;
        javax.net.ssl.HostnameVerifier hostnameVerifier24 = okHttpClient19.hostnameVerifier;
        java.net.Proxy proxy25 = okHttpClient19.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool28 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient19.connectionPool = connectionPool28;
        com.squareup.okhttp.OkHttpClient okHttpClient30 = okHttpClient19.copyWithDefaults();
        java.net.ResponseCache responseCache31 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient30.setResponseCache(responseCache31);
        com.squareup.okhttp.OkAuthenticator okAuthenticator33 = okHttpClient30.authenticator;
        okHttpClient0.authenticator = okAuthenticator33;
        com.squareup.okhttp.OkHttpClient okHttpClient35 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier36 = null;
        okHttpClient35.hostnameVerifier = hostnameVerifier36;
        java.net.ProxySelector proxySelector38 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient35.setProxySelector(proxySelector38);
        java.net.CookieHandler cookieHandler40 = okHttpClient35.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient41 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier42 = null;
        okHttpClient41.hostnameVerifier = hostnameVerifier42;
        java.net.ResponseCache responseCache44 = null;
        okHttpClient41.responseCache = responseCache44;
        java.util.List<java.lang.String> strList46 = okHttpClient41.transports;
        com.squareup.okhttp.ConnectionPool connectionPool47 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient41.connectionPool = connectionPool47;
        java.net.Proxy proxy49 = null;
        okHttpClient41.proxy = proxy49;
        java.util.Set<com.squareup.okhttp.Route> routeSet51 = okHttpClient41.failedRoutes;
        okHttpClient35.failedRoutes = routeSet51;
        java.net.ProxySelector proxySelector53 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient54 = okHttpClient35.setProxySelector(proxySelector53);
        com.squareup.okhttp.ConnectionPool connectionPool57 = new com.squareup.okhttp.ConnectionPool((int) (short) 10, (long) '4');
        okHttpClient35.connectionPool = connectionPool57;
        boolean boolean59 = okHttpClient35.getFollowProtocolRedirects();
        java.net.ProxySelector proxySelector60 = null;
        okHttpClient35.proxySelector = proxySelector60;
        boolean boolean62 = okHttpClient35.followProtocolRedirects;
        com.squareup.okhttp.ConnectionPool connectionPool65 = new com.squareup.okhttp.ConnectionPool((int) (short) 0, (long) 1);
        okHttpClient35.connectionPool = connectionPool65;
        com.squareup.okhttp.ConnectionPool connectionPool67 = okHttpClient35.getConnectionPool();
        java.util.Set<com.squareup.okhttp.Route> routeSet68 = okHttpClient35.failedRoutes;
        okHttpClient0.failedRoutes = routeSet68;
        com.squareup.okhttp.OkHttpClient okHttpClient70 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier71 = null;
        okHttpClient70.hostnameVerifier = hostnameVerifier71;
        java.net.ResponseCache responseCache73 = null;
        okHttpClient70.responseCache = responseCache73;
        java.util.List<java.lang.String> strList75 = okHttpClient70.transports;
        com.squareup.okhttp.ConnectionPool connectionPool76 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient70.connectionPool = connectionPool76;
        com.squareup.okhttp.OkHttpClient okHttpClient78 = okHttpClient70.copyWithDefaults();
        java.net.ProxySelector proxySelector79 = okHttpClient78.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory80 = okHttpClient78.getSslSocketFactory();
        java.net.Socket socket81 = sSLSocketFactory80.createSocket();
        java.net.Socket socket82 = sSLSocketFactory80.createSocket();
        java.lang.String[] strArray83 = sSLSocketFactory80.getDefaultCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient84 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory80);
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNull(okResponseCache8);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNull(hostnameVerifier24);
        org.junit.Assert.assertNull(proxy25);
        org.junit.Assert.assertNotNull(okHttpClient30);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertNotNull(okAuthenticator33);
        org.junit.Assert.assertNotNull(okHttpClient39);
        org.junit.Assert.assertNull(cookieHandler40);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNotNull(connectionPool47);
        org.junit.Assert.assertNotNull(routeSet51);
        org.junit.Assert.assertNotNull(okHttpClient54);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(connectionPool67);
        org.junit.Assert.assertNotNull(routeSet68);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNotNull(connectionPool76);
        org.junit.Assert.assertNotNull(okHttpClient78);
// flaky:         org.junit.Assert.assertNull(proxySelector79);
        org.junit.Assert.assertNotNull(sSLSocketFactory80);
        org.junit.Assert.assertNotNull(socket81);
        org.junit.Assert.assertEquals(socket81.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(socket82);
        org.junit.Assert.assertEquals(socket82.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertNotNull(okHttpClient84);
    }

    @Test
    public void test12190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12190");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache1 = okHttpClient0.okResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient2 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier3 = null;
        okHttpClient2.hostnameVerifier = hostnameVerifier3;
        java.net.ResponseCache responseCache5 = null;
        okHttpClient2.responseCache = responseCache5;
        java.util.List<java.lang.String> strList7 = okHttpClient2.transports;
        com.squareup.okhttp.ConnectionPool connectionPool8 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient2.connectionPool = connectionPool8;
        java.net.Proxy proxy10 = null;
        okHttpClient2.proxy = proxy10;
        boolean boolean12 = okHttpClient2.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient2.copyWithDefaults();
        java.net.CookieHandler cookieHandler14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient13.setCookieHandler(cookieHandler14);
        java.util.List<java.lang.String> strList16 = okHttpClient15.transports;
        javax.net.ssl.HostnameVerifier hostnameVerifier17 = okHttpClient15.hostnameVerifier;
        okHttpClient0.hostnameVerifier = hostnameVerifier17;
        java.net.ResponseCache responseCache19 = okHttpClient0.responseCache;
        org.junit.Assert.assertNull(okResponseCache1);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNotNull(connectionPool8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNotNull(hostnameVerifier17);
        org.junit.Assert.assertNull(responseCache19);
    }

    @Test
    public void test12191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12191");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.Proxy proxy8 = null;
        okHttpClient0.proxy = proxy8;
        boolean boolean10 = okHttpClient0.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient0.setFollowProtocolRedirects(true);
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = null;
        okHttpClient13.hostnameVerifier = hostnameVerifier14;
        java.net.ResponseCache responseCache16 = null;
        okHttpClient13.responseCache = responseCache16;
        java.util.List<java.lang.String> strList18 = okHttpClient13.transports;
        javax.net.ssl.HostnameVerifier hostnameVerifier19 = null;
        okHttpClient13.hostnameVerifier = hostnameVerifier19;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache21 = okHttpClient13.okResponseCache();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory22 = okHttpClient13.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient23 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier24 = null;
        okHttpClient23.hostnameVerifier = hostnameVerifier24;
        java.net.ResponseCache responseCache26 = null;
        okHttpClient23.responseCache = responseCache26;
        javax.net.ssl.HostnameVerifier hostnameVerifier28 = okHttpClient23.hostnameVerifier;
        java.net.Proxy proxy29 = okHttpClient23.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool32 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient23.connectionPool = connectionPool32;
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient23.copyWithDefaults();
        java.net.Proxy proxy35 = okHttpClient34.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier36 = okHttpClient34.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient13.setHostnameVerifier(hostnameVerifier36);
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient12.setHostnameVerifier(hostnameVerifier36);
        boolean boolean39 = okHttpClient38.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient40 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool41 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient40.connectionPool = connectionPool41;
        com.squareup.okhttp.OkHttpClient okHttpClient43 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier44 = null;
        okHttpClient43.hostnameVerifier = hostnameVerifier44;
        java.net.ResponseCache responseCache46 = null;
        okHttpClient43.responseCache = responseCache46;
        java.util.List<java.lang.String> strList48 = okHttpClient43.transports;
        com.squareup.okhttp.ConnectionPool connectionPool49 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient43.connectionPool = connectionPool49;
        com.squareup.okhttp.OkHttpClient okHttpClient51 = okHttpClient40.setConnectionPool(connectionPool49);
        com.squareup.okhttp.ConnectionPool connectionPool52 = okHttpClient51.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator53 = okHttpClient51.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool56 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient51.connectionPool = connectionPool56;
        java.net.ResponseCache responseCache58 = okHttpClient51.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory59 = okHttpClient51.sslSocketFactory;
        java.net.Proxy proxy60 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress61 = proxy60.address();
        com.squareup.okhttp.OkHttpClient okHttpClient62 = okHttpClient51.setProxy(proxy60);
        com.squareup.okhttp.OkHttpClient okHttpClient63 = okHttpClient38.setProxy(proxy60);
        com.squareup.okhttp.ConnectionPool connectionPool64 = okHttpClient38.getConnectionPool();
        com.squareup.okhttp.OkHttpClient okHttpClient65 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool66 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient65.connectionPool = connectionPool66;
        com.squareup.okhttp.OkHttpClient okHttpClient68 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier69 = null;
        okHttpClient68.hostnameVerifier = hostnameVerifier69;
        java.net.ResponseCache responseCache71 = null;
        okHttpClient68.responseCache = responseCache71;
        java.util.List<java.lang.String> strList73 = okHttpClient68.transports;
        com.squareup.okhttp.ConnectionPool connectionPool74 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient68.connectionPool = connectionPool74;
        com.squareup.okhttp.OkHttpClient okHttpClient76 = okHttpClient65.setConnectionPool(connectionPool74);
        com.squareup.okhttp.ConnectionPool connectionPool77 = okHttpClient76.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator78 = okHttpClient76.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool81 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient76.connectionPool = connectionPool81;
        java.net.ResponseCache responseCache83 = okHttpClient76.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory84 = okHttpClient76.sslSocketFactory;
        java.net.Proxy proxy85 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress86 = proxy85.address();
        com.squareup.okhttp.OkHttpClient okHttpClient87 = okHttpClient76.setProxy(proxy85);
        java.net.SocketAddress socketAddress88 = proxy85.address();
        java.lang.String str89 = proxy85.toString();
        com.squareup.okhttp.OkHttpClient okHttpClient90 = okHttpClient38.setProxy(proxy85);
        java.util.List<java.lang.String> strList91 = okHttpClient38.transports;
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(okResponseCache21);
        org.junit.Assert.assertNull(sSLSocketFactory22);
        org.junit.Assert.assertNull(hostnameVerifier28);
        org.junit.Assert.assertNull(proxy29);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertNull(proxy35);
        org.junit.Assert.assertNotNull(hostnameVerifier36);
        org.junit.Assert.assertNotNull(okHttpClient37);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(connectionPool41);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNotNull(connectionPool49);
        org.junit.Assert.assertNotNull(okHttpClient51);
        org.junit.Assert.assertNotNull(connectionPool52);
        org.junit.Assert.assertNull(okAuthenticator53);
        org.junit.Assert.assertNull(responseCache58);
        org.junit.Assert.assertNull(sSLSocketFactory59);
        org.junit.Assert.assertNotNull(proxy60);
        org.junit.Assert.assertNull(socketAddress61);
        org.junit.Assert.assertNotNull(okHttpClient62);
        org.junit.Assert.assertNotNull(okHttpClient63);
        org.junit.Assert.assertNotNull(connectionPool64);
        org.junit.Assert.assertNotNull(connectionPool66);
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertNotNull(connectionPool74);
        org.junit.Assert.assertNotNull(okHttpClient76);
        org.junit.Assert.assertNotNull(connectionPool77);
        org.junit.Assert.assertNull(okAuthenticator78);
        org.junit.Assert.assertNull(responseCache83);
        org.junit.Assert.assertNull(sSLSocketFactory84);
        org.junit.Assert.assertNotNull(proxy85);
        org.junit.Assert.assertNull(socketAddress86);
        org.junit.Assert.assertNotNull(okHttpClient87);
        org.junit.Assert.assertNull(socketAddress88);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "DIRECT" + "'", str89, "DIRECT");
        org.junit.Assert.assertNotNull(okHttpClient90);
        org.junit.Assert.assertNull(strList91);
    }

    @Test
    public void test12192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12192");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.Proxy proxy8 = null;
        okHttpClient0.proxy = proxy8;
        boolean boolean10 = okHttpClient0.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient0.setFollowProtocolRedirects(true);
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = null;
        okHttpClient13.hostnameVerifier = hostnameVerifier14;
        java.net.ResponseCache responseCache16 = null;
        okHttpClient13.responseCache = responseCache16;
        java.util.List<java.lang.String> strList18 = okHttpClient13.transports;
        javax.net.ssl.HostnameVerifier hostnameVerifier19 = null;
        okHttpClient13.hostnameVerifier = hostnameVerifier19;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache21 = okHttpClient13.okResponseCache();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory22 = okHttpClient13.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient23 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier24 = null;
        okHttpClient23.hostnameVerifier = hostnameVerifier24;
        java.net.ResponseCache responseCache26 = null;
        okHttpClient23.responseCache = responseCache26;
        javax.net.ssl.HostnameVerifier hostnameVerifier28 = okHttpClient23.hostnameVerifier;
        java.net.Proxy proxy29 = okHttpClient23.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool32 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient23.connectionPool = connectionPool32;
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient23.copyWithDefaults();
        java.net.Proxy proxy35 = okHttpClient34.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier36 = okHttpClient34.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient13.setHostnameVerifier(hostnameVerifier36);
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient12.setHostnameVerifier(hostnameVerifier36);
        boolean boolean39 = okHttpClient38.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient40 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool41 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient40.connectionPool = connectionPool41;
        com.squareup.okhttp.OkHttpClient okHttpClient43 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier44 = null;
        okHttpClient43.hostnameVerifier = hostnameVerifier44;
        java.net.ResponseCache responseCache46 = null;
        okHttpClient43.responseCache = responseCache46;
        java.util.List<java.lang.String> strList48 = okHttpClient43.transports;
        com.squareup.okhttp.ConnectionPool connectionPool49 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient43.connectionPool = connectionPool49;
        com.squareup.okhttp.OkHttpClient okHttpClient51 = okHttpClient40.setConnectionPool(connectionPool49);
        com.squareup.okhttp.ConnectionPool connectionPool52 = okHttpClient51.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator53 = okHttpClient51.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool56 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient51.connectionPool = connectionPool56;
        java.net.ResponseCache responseCache58 = okHttpClient51.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory59 = okHttpClient51.sslSocketFactory;
        java.net.Proxy proxy60 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress61 = proxy60.address();
        com.squareup.okhttp.OkHttpClient okHttpClient62 = okHttpClient51.setProxy(proxy60);
        com.squareup.okhttp.OkHttpClient okHttpClient63 = okHttpClient38.setProxy(proxy60);
        java.net.Proxy proxy64 = java.net.Proxy.NO_PROXY;
        boolean boolean66 = proxy64.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type67 = proxy64.type();
        com.squareup.okhttp.OkHttpClient okHttpClient68 = okHttpClient38.setProxy(proxy64);
        com.squareup.okhttp.OkHttpClient okHttpClient69 = new com.squareup.okhttp.OkHttpClient(okHttpClient68);
        java.net.CookieHandler cookieHandler70 = okHttpClient69.cookieHandler;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory71 = okHttpClient69.sslSocketFactory;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory72 = okHttpClient69.sslSocketFactory;
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(okResponseCache21);
        org.junit.Assert.assertNull(sSLSocketFactory22);
        org.junit.Assert.assertNull(hostnameVerifier28);
        org.junit.Assert.assertNull(proxy29);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertNull(proxy35);
        org.junit.Assert.assertNotNull(hostnameVerifier36);
        org.junit.Assert.assertNotNull(okHttpClient37);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(connectionPool41);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNotNull(connectionPool49);
        org.junit.Assert.assertNotNull(okHttpClient51);
        org.junit.Assert.assertNotNull(connectionPool52);
        org.junit.Assert.assertNull(okAuthenticator53);
        org.junit.Assert.assertNull(responseCache58);
        org.junit.Assert.assertNull(sSLSocketFactory59);
        org.junit.Assert.assertNotNull(proxy60);
        org.junit.Assert.assertNull(socketAddress61);
        org.junit.Assert.assertNotNull(okHttpClient62);
        org.junit.Assert.assertNotNull(okHttpClient63);
        org.junit.Assert.assertNotNull(proxy64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + type67 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type67.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNotNull(okHttpClient68);
        org.junit.Assert.assertNull(cookieHandler70);
        org.junit.Assert.assertNull(sSLSocketFactory71);
        org.junit.Assert.assertNull(sSLSocketFactory72);
    }

    @Test
    public void test12193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12193");
        java.net.Proxy proxy0 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient1 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier2 = null;
        okHttpClient1.hostnameVerifier = hostnameVerifier2;
        java.net.ResponseCache responseCache4 = null;
        okHttpClient1.responseCache = responseCache4;
        javax.net.ssl.HostnameVerifier hostnameVerifier6 = okHttpClient1.hostnameVerifier;
        java.net.Proxy proxy7 = okHttpClient1.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool10 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient1.connectionPool = connectionPool10;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient1.copyWithDefaults();
        java.net.CookieHandler cookieHandler13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient12.setCookieHandler(cookieHandler13);
        java.net.CookieHandler cookieHandler15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient14.setCookieHandler(cookieHandler15);
        boolean boolean17 = proxy0.equals((java.lang.Object) okHttpClient14);
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient14.copyWithDefaults();
        java.net.CookieHandler cookieHandler19 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient18.setCookieHandler(cookieHandler19);
        java.net.ResponseCache responseCache21 = null;
        okHttpClient20.responseCache = responseCache21;
        org.junit.Assert.assertNotNull(proxy0);
        org.junit.Assert.assertNull(hostnameVerifier6);
        org.junit.Assert.assertNull(proxy7);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertNotNull(okHttpClient14);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNotNull(okHttpClient20);
    }

    @Test
    public void test12194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12194");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool9 = okHttpClient8.connectionPool;
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertNotNull(connectionPool9);
    }

    @Test
    public void test12195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12195");
        java.net.Proxy proxy0 = java.net.Proxy.NO_PROXY;
        boolean boolean2 = proxy0.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type3 = proxy0.type();
        java.net.SocketAddress socketAddress4 = proxy0.address();
        com.squareup.okhttp.OkHttpClient okHttpClient5 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier6 = null;
        okHttpClient5.hostnameVerifier = hostnameVerifier6;
        java.net.ResponseCache responseCache8 = null;
        okHttpClient5.responseCache = responseCache8;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache10 = okHttpClient5.okResponseCache();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient5.setSSLSocketFactory(sSLSocketFactory11);
        boolean boolean13 = proxy0.equals((java.lang.Object) okHttpClient5);
        com.squareup.okhttp.OkHttpClient okHttpClient14 = new com.squareup.okhttp.OkHttpClient(okHttpClient5);
        java.net.ResponseCache responseCache15 = okHttpClient5.getResponseCache();
        java.net.ResponseCache responseCache16 = okHttpClient5.getResponseCache();
        org.junit.Assert.assertNotNull(proxy0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + type3 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type3.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress4);
        org.junit.Assert.assertNull(okResponseCache10);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(responseCache15);
        org.junit.Assert.assertNull(responseCache16);
    }

    @Test
    public void test12196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12196");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient0.connectionPool = connectionPool9;
        java.util.List<java.lang.String> strList11 = okHttpClient0.getTransports();
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient0.setHostnameVerifier(hostnameVerifier12);
        com.squareup.okhttp.OkHttpClient okHttpClient14 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        java.net.Proxy proxy15 = java.net.Proxy.NO_PROXY;
        boolean boolean17 = proxy15.equals((java.lang.Object) 1L);
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache19 = okHttpClient18.okResponseCache();
        java.net.ResponseCache responseCache20 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient18.setResponseCache(responseCache20);
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        okHttpClient18.transports = strList24;
        boolean boolean27 = proxy15.equals((java.lang.Object) strList24);
        okHttpClient14.transports = strList24;
        com.squareup.okhttp.OkHttpClient okHttpClient29 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = null;
        okHttpClient29.hostnameVerifier = hostnameVerifier30;
        java.net.ProxySelector proxySelector32 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient29.setProxySelector(proxySelector32);
        java.net.ResponseCache responseCache34 = null;
        okHttpClient33.responseCache = responseCache34;
        javax.net.ssl.HostnameVerifier hostnameVerifier36 = okHttpClient33.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient33.setFollowProtocolRedirects(false);
        java.net.ProxySelector proxySelector39 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient40 = okHttpClient38.setProxySelector(proxySelector39);
        java.net.ProxySelector proxySelector41 = okHttpClient40.proxySelector;
        com.squareup.okhttp.OkAuthenticator okAuthenticator42 = okHttpClient40.authenticator;
        java.net.ProxySelector proxySelector43 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient44 = okHttpClient40.setProxySelector(proxySelector43);
        com.squareup.okhttp.OkHttpClient okHttpClient45 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool46 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient45.connectionPool = connectionPool46;
        java.net.ResponseCache responseCache48 = null;
        okHttpClient45.responseCache = responseCache48;
        java.net.Proxy proxy50 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress51 = proxy50.address();
        java.net.SocketAddress socketAddress52 = proxy50.address();
        okHttpClient45.proxy = proxy50;
        com.squareup.okhttp.ConnectionPool connectionPool56 = new com.squareup.okhttp.ConnectionPool((-1), (long) '#');
        com.squareup.okhttp.Address address57 = null;
        com.squareup.okhttp.Connection connection58 = connectionPool56.get(address57);
        int int59 = connectionPool56.getSpdyConnectionCount();
        connectionPool56.evictAll();
        com.squareup.okhttp.OkHttpClient okHttpClient61 = okHttpClient45.setConnectionPool(connectionPool56);
        com.squareup.okhttp.OkHttpClient okHttpClient62 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier63 = null;
        okHttpClient62.hostnameVerifier = hostnameVerifier63;
        java.net.ProxySelector proxySelector65 = okHttpClient62.proxySelector;
        java.net.ProxySelector proxySelector66 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient67 = okHttpClient62.setProxySelector(proxySelector66);
        com.squareup.okhttp.OkHttpClient okHttpClient68 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier69 = null;
        okHttpClient68.hostnameVerifier = hostnameVerifier69;
        java.net.ResponseCache responseCache71 = null;
        okHttpClient68.responseCache = responseCache71;
        java.util.List<java.lang.String> strList73 = okHttpClient68.transports;
        com.squareup.okhttp.ConnectionPool connectionPool74 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient68.connectionPool = connectionPool74;
        com.squareup.okhttp.OkHttpClient okHttpClient76 = okHttpClient68.copyWithDefaults();
        java.net.ProxySelector proxySelector77 = okHttpClient76.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory78 = okHttpClient76.getSslSocketFactory();
        okHttpClient62.sslSocketFactory = sSLSocketFactory78;
        okHttpClient45.sslSocketFactory = sSLSocketFactory78;
        okHttpClient40.sslSocketFactory = sSLSocketFactory78;
        java.lang.String[] strArray82 = sSLSocketFactory78.getSupportedCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient83 = okHttpClient14.setSSLSocketFactory(sSLSocketFactory78);
        java.net.Socket socket84 = sSLSocketFactory78.createSocket();
        java.lang.String[] strArray85 = sSLSocketFactory78.getSupportedCipherSuites();
        java.net.Socket socket86 = sSLSocketFactory78.createSocket();
        java.lang.String[] strArray87 = sSLSocketFactory78.getSupportedCipherSuites();
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNotNull(proxy15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(okResponseCache19);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(okHttpClient33);
        org.junit.Assert.assertNull(hostnameVerifier36);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNotNull(okHttpClient40);
        org.junit.Assert.assertNull(proxySelector41);
        org.junit.Assert.assertNull(okAuthenticator42);
        org.junit.Assert.assertNotNull(okHttpClient44);
        org.junit.Assert.assertNotNull(connectionPool46);
        org.junit.Assert.assertNotNull(proxy50);
        org.junit.Assert.assertNull(socketAddress51);
        org.junit.Assert.assertNull(socketAddress52);
        org.junit.Assert.assertNull(connection58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(okHttpClient61);
        org.junit.Assert.assertNull(proxySelector65);
        org.junit.Assert.assertNotNull(okHttpClient67);
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertNotNull(connectionPool74);
        org.junit.Assert.assertNotNull(okHttpClient76);
// flaky:         org.junit.Assert.assertNull(proxySelector77);
        org.junit.Assert.assertNotNull(sSLSocketFactory78);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertNotNull(okHttpClient83);
        org.junit.Assert.assertNotNull(socket84);
        org.junit.Assert.assertEquals(socket84.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertNotNull(socket86);
        org.junit.Assert.assertEquals(socket86.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(strArray87);
    }

    @Test
    public void test12197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12197");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.OkAuthenticator okAuthenticator12 = okHttpClient11.getAuthenticator();
        java.util.List<java.lang.String> strList13 = okHttpClient11.transports;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient11.copyWithDefaults();
        com.squareup.okhttp.OkAuthenticator okAuthenticator15 = okHttpClient11.getAuthenticator();
        java.net.ResponseCache responseCache16 = okHttpClient11.getResponseCache();
        java.net.ResponseCache responseCache17 = okHttpClient11.responseCache;
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(okAuthenticator12);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNotNull(okHttpClient14);
        org.junit.Assert.assertNull(okAuthenticator15);
        org.junit.Assert.assertNull(responseCache16);
        org.junit.Assert.assertNull(responseCache17);
    }

    @Test
    public void test12198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12198");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.CookieHandler cookieHandler8 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache9 = okHttpClient0.okResponseCache();
        java.net.CookieHandler cookieHandler10 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        java.net.Proxy proxy12 = java.net.Proxy.NO_PROXY;
        boolean boolean14 = proxy12.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type15 = proxy12.type();
        java.net.SocketAddress socketAddress16 = proxy12.address();
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient0.setProxy(proxy12);
        java.net.CookieHandler cookieHandler18 = okHttpClient17.cookieHandler;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient17.setFollowProtocolRedirects(false);
        javax.net.ssl.HostnameVerifier hostnameVerifier21 = okHttpClient20.getHostnameVerifier();
        java.net.ResponseCache responseCache22 = okHttpClient20.getResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient23 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier24 = null;
        okHttpClient23.hostnameVerifier = hostnameVerifier24;
        java.net.ProxySelector proxySelector26 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient23.setProxySelector(proxySelector26);
        java.net.CookieHandler cookieHandler28 = okHttpClient23.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient29 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = null;
        okHttpClient29.hostnameVerifier = hostnameVerifier30;
        java.net.ResponseCache responseCache32 = null;
        okHttpClient29.responseCache = responseCache32;
        java.util.List<java.lang.String> strList34 = okHttpClient29.transports;
        com.squareup.okhttp.ConnectionPool connectionPool35 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient29.connectionPool = connectionPool35;
        java.net.Proxy proxy37 = null;
        okHttpClient29.proxy = proxy37;
        java.util.Set<com.squareup.okhttp.Route> routeSet39 = okHttpClient29.failedRoutes;
        okHttpClient23.failedRoutes = routeSet39;
        javax.net.ssl.HostnameVerifier hostnameVerifier41 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient23.setHostnameVerifier(hostnameVerifier41);
        java.net.ProxySelector proxySelector43 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient44 = okHttpClient42.setProxySelector(proxySelector43);
        java.net.Proxy proxy45 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress46 = proxy45.address();
        com.squareup.okhttp.OkHttpClient okHttpClient47 = okHttpClient42.setProxy(proxy45);
        com.squareup.okhttp.OkHttpClient okHttpClient48 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier49 = null;
        okHttpClient48.hostnameVerifier = hostnameVerifier49;
        java.net.ResponseCache responseCache51 = null;
        okHttpClient48.responseCache = responseCache51;
        javax.net.ssl.HostnameVerifier hostnameVerifier53 = okHttpClient48.hostnameVerifier;
        java.net.Proxy proxy54 = okHttpClient48.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool57 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient48.connectionPool = connectionPool57;
        com.squareup.okhttp.OkHttpClient okHttpClient59 = okHttpClient48.copyWithDefaults();
        java.util.List<java.lang.String> strList60 = okHttpClient48.getTransports();
        com.squareup.okhttp.OkHttpClient okHttpClient61 = okHttpClient48.copyWithDefaults();
        boolean boolean62 = proxy45.equals((java.lang.Object) okHttpClient61);
        java.net.ResponseCache responseCache63 = okHttpClient61.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory64 = okHttpClient61.getSslSocketFactory();
        okHttpClient20.sslSocketFactory = sSLSocketFactory64;
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNull(cookieHandler8);
        org.junit.Assert.assertNull(okResponseCache9);
        org.junit.Assert.assertNull(cookieHandler10);
        org.junit.Assert.assertNotNull(proxy12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + type15 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type15.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress16);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNull(cookieHandler18);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNull(hostnameVerifier21);
        org.junit.Assert.assertNull(responseCache22);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNull(cookieHandler28);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(connectionPool35);
        org.junit.Assert.assertNotNull(routeSet39);
        org.junit.Assert.assertNotNull(okHttpClient42);
        org.junit.Assert.assertNotNull(okHttpClient44);
        org.junit.Assert.assertNotNull(proxy45);
        org.junit.Assert.assertNull(socketAddress46);
        org.junit.Assert.assertNotNull(okHttpClient47);
        org.junit.Assert.assertNull(hostnameVerifier53);
        org.junit.Assert.assertNull(proxy54);
        org.junit.Assert.assertNotNull(okHttpClient59);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNotNull(okHttpClient61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(responseCache63);
        org.junit.Assert.assertNotNull(sSLSocketFactory64);
    }

    @Test
    public void test12199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12199");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        okHttpClient0.authenticator = okAuthenticator3;
        java.net.CookieHandler cookieHandler5 = null;
        okHttpClient0.cookieHandler = cookieHandler5;
        java.net.Proxy proxy7 = java.net.Proxy.NO_PROXY;
        boolean boolean9 = proxy7.equals((java.lang.Object) 1L);
        com.squareup.okhttp.OkHttpClient okHttpClient10 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache11 = okHttpClient10.okResponseCache();
        java.net.ResponseCache responseCache12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient10.setResponseCache(responseCache12);
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        okHttpClient10.transports = strList16;
        boolean boolean19 = proxy7.equals((java.lang.Object) strList16);
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient0.setProxy(proxy7);
        com.squareup.okhttp.OkHttpClient okHttpClient21 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier23 = null;
        okHttpClient22.hostnameVerifier = hostnameVerifier23;
        java.net.ProxySelector proxySelector25 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient22.setProxySelector(proxySelector25);
        java.net.CookieHandler cookieHandler27 = okHttpClient22.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient28 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier29 = null;
        okHttpClient28.hostnameVerifier = hostnameVerifier29;
        java.net.ResponseCache responseCache31 = null;
        okHttpClient28.responseCache = responseCache31;
        java.util.List<java.lang.String> strList33 = okHttpClient28.transports;
        com.squareup.okhttp.ConnectionPool connectionPool34 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient28.connectionPool = connectionPool34;
        java.net.Proxy proxy36 = null;
        okHttpClient28.proxy = proxy36;
        java.util.Set<com.squareup.okhttp.Route> routeSet38 = okHttpClient28.failedRoutes;
        okHttpClient22.failedRoutes = routeSet38;
        java.net.ProxySelector proxySelector40 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient41 = okHttpClient22.setProxySelector(proxySelector40);
        java.net.ResponseCache responseCache42 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient43 = okHttpClient22.setResponseCache(responseCache42);
        java.net.CookieHandler cookieHandler44 = okHttpClient22.getCookieHandler();
        java.util.List<java.lang.String> strList45 = okHttpClient22.getTransports();
        com.squareup.okhttp.ConnectionPool connectionPool48 = new com.squareup.okhttp.ConnectionPool((int) (short) 1, (long) (byte) -1);
        int int49 = connectionPool48.getConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient22.setConnectionPool(connectionPool48);
        com.squareup.okhttp.OkHttpClient okHttpClient52 = okHttpClient22.setFollowProtocolRedirects(true);
        com.squareup.okhttp.OkHttpClient okHttpClient53 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier54 = null;
        okHttpClient53.hostnameVerifier = hostnameVerifier54;
        boolean boolean56 = okHttpClient53.getFollowProtocolRedirects();
        java.net.CookieHandler cookieHandler57 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient58 = okHttpClient53.setCookieHandler(cookieHandler57);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory59 = null;
        okHttpClient58.sslSocketFactory = sSLSocketFactory59;
        java.net.ResponseCache responseCache61 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient62 = okHttpClient58.setResponseCache(responseCache61);
        java.net.ProxySelector proxySelector63 = okHttpClient62.getProxySelector();
        java.net.ProxySelector proxySelector64 = okHttpClient62.proxySelector;
        com.squareup.okhttp.OkHttpClient okHttpClient65 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier66 = null;
        okHttpClient65.hostnameVerifier = hostnameVerifier66;
        java.net.ResponseCache responseCache68 = null;
        okHttpClient65.responseCache = responseCache68;
        java.util.List<java.lang.String> strList70 = okHttpClient65.transports;
        com.squareup.okhttp.ConnectionPool connectionPool71 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient65.connectionPool = connectionPool71;
        java.net.Proxy proxy73 = null;
        okHttpClient65.proxy = proxy73;
        boolean boolean75 = okHttpClient65.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient77 = okHttpClient65.setFollowProtocolRedirects(true);
        javax.net.ssl.HostnameVerifier hostnameVerifier78 = null;
        okHttpClient65.hostnameVerifier = hostnameVerifier78;
        com.squareup.okhttp.OkHttpClient okHttpClient80 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier81 = null;
        okHttpClient80.hostnameVerifier = hostnameVerifier81;
        java.net.ResponseCache responseCache83 = null;
        okHttpClient80.responseCache = responseCache83;
        javax.net.ssl.HostnameVerifier hostnameVerifier85 = okHttpClient80.hostnameVerifier;
        java.net.Proxy proxy86 = okHttpClient80.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool89 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient80.connectionPool = connectionPool89;
        com.squareup.okhttp.OkHttpClient okHttpClient91 = okHttpClient80.copyWithDefaults();
        java.net.Proxy proxy92 = okHttpClient91.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier93 = okHttpClient91.getHostnameVerifier();
        okHttpClient65.hostnameVerifier = hostnameVerifier93;
        okHttpClient62.hostnameVerifier = hostnameVerifier93;
        java.net.Proxy proxy96 = okHttpClient62.proxy;
        javax.net.ssl.HostnameVerifier hostnameVerifier97 = okHttpClient62.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient98 = okHttpClient22.setHostnameVerifier(hostnameVerifier97);
        com.squareup.okhttp.OkHttpClient okHttpClient99 = okHttpClient21.setHostnameVerifier(hostnameVerifier97);
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNotNull(proxy7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(okResponseCache11);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNull(cookieHandler27);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNotNull(connectionPool34);
        org.junit.Assert.assertNotNull(routeSet38);
        org.junit.Assert.assertNotNull(okHttpClient41);
        org.junit.Assert.assertNotNull(okHttpClient43);
        org.junit.Assert.assertNull(cookieHandler44);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(okHttpClient50);
        org.junit.Assert.assertNotNull(okHttpClient52);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(okHttpClient58);
        org.junit.Assert.assertNotNull(okHttpClient62);
        org.junit.Assert.assertNull(proxySelector63);
        org.junit.Assert.assertNull(proxySelector64);
        org.junit.Assert.assertNull(strList70);
        org.junit.Assert.assertNotNull(connectionPool71);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(okHttpClient77);
        org.junit.Assert.assertNull(hostnameVerifier85);
        org.junit.Assert.assertNull(proxy86);
        org.junit.Assert.assertNotNull(okHttpClient91);
        org.junit.Assert.assertNull(proxy92);
        org.junit.Assert.assertNotNull(hostnameVerifier93);
        org.junit.Assert.assertNull(proxy96);
        org.junit.Assert.assertNotNull(hostnameVerifier97);
        org.junit.Assert.assertNotNull(okHttpClient98);
        org.junit.Assert.assertNotNull(okHttpClient99);
    }

    @Test
    public void test12200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12200");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.CookieHandler cookieHandler5 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = null;
        okHttpClient6.hostnameVerifier = hostnameVerifier7;
        java.net.ResponseCache responseCache9 = null;
        okHttpClient6.responseCache = responseCache9;
        java.util.List<java.lang.String> strList11 = okHttpClient6.transports;
        com.squareup.okhttp.ConnectionPool connectionPool12 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient6.connectionPool = connectionPool12;
        java.net.Proxy proxy14 = null;
        okHttpClient6.proxy = proxy14;
        java.util.Set<com.squareup.okhttp.Route> routeSet16 = okHttpClient6.failedRoutes;
        okHttpClient0.failedRoutes = routeSet16;
        java.net.ProxySelector proxySelector18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient0.setProxySelector(proxySelector18);
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient21 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier22 = null;
        okHttpClient21.hostnameVerifier = hostnameVerifier22;
        java.net.ResponseCache responseCache24 = null;
        okHttpClient21.responseCache = responseCache24;
        javax.net.ssl.HostnameVerifier hostnameVerifier26 = okHttpClient21.hostnameVerifier;
        java.net.Proxy proxy27 = okHttpClient21.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool30 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient21.connectionPool = connectionPool30;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient21.copyWithDefaults();
        java.net.ResponseCache responseCache33 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient32.setResponseCache(responseCache33);
        javax.net.ssl.HostnameVerifier hostnameVerifier35 = okHttpClient34.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient34.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient37 = new com.squareup.okhttp.OkHttpClient(okHttpClient36);
        com.squareup.okhttp.ConnectionPool connectionPool40 = new com.squareup.okhttp.ConnectionPool((int) (byte) 0, (long) (short) 0);
        com.squareup.okhttp.OkHttpClient okHttpClient41 = okHttpClient36.setConnectionPool(connectionPool40);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory42 = okHttpClient36.getSslSocketFactory();
        java.net.Socket socket43 = sSLSocketFactory42.createSocket();
        java.lang.String[] strArray44 = sSLSocketFactory42.getSupportedCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient45 = okHttpClient20.setSSLSocketFactory(sSLSocketFactory42);
        java.net.Socket socket46 = sSLSocketFactory42.createSocket();
        java.lang.String[] strArray47 = sSLSocketFactory42.getSupportedCipherSuites();
        java.lang.String[] strArray48 = sSLSocketFactory42.getDefaultCipherSuites();
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNotNull(routeSet16);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNull(hostnameVerifier26);
        org.junit.Assert.assertNull(proxy27);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertNotNull(hostnameVerifier35);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNotNull(okHttpClient41);
        org.junit.Assert.assertNotNull(sSLSocketFactory42);
        org.junit.Assert.assertNotNull(socket43);
        org.junit.Assert.assertEquals(socket43.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(okHttpClient45);
        org.junit.Assert.assertNotNull(socket46);
        org.junit.Assert.assertEquals(socket46.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(strArray48);
    }

    @Test
    public void test12201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12201");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = null;
        okHttpClient0.proxy = proxy6;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier9 = null;
        okHttpClient8.hostnameVerifier = hostnameVerifier9;
        java.net.ResponseCache responseCache11 = null;
        okHttpClient8.responseCache = responseCache11;
        java.util.List<java.lang.String> strList13 = okHttpClient8.transports;
        com.squareup.okhttp.ConnectionPool connectionPool14 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient8.connectionPool = connectionPool14;
        java.net.CookieHandler cookieHandler16 = okHttpClient8.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache17 = okHttpClient8.okResponseCache();
        java.net.CookieHandler cookieHandler18 = okHttpClient8.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient19 = new com.squareup.okhttp.OkHttpClient(okHttpClient8);
        javax.net.ssl.HostnameVerifier hostnameVerifier20 = okHttpClient19.hostnameVerifier;
        java.util.List<java.lang.String> strList21 = okHttpClient19.transports;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory22 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient19.setSSLSocketFactory(sSLSocketFactory22);
        com.squareup.okhttp.OkHttpClient okHttpClient24 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache25 = okHttpClient24.okResponseCache();
        java.net.ResponseCache responseCache26 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient24.setResponseCache(responseCache26);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        okHttpClient24.transports = strList30;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory33 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient24.setSSLSocketFactory(sSLSocketFactory33);
        com.squareup.okhttp.OkHttpClient okHttpClient35 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache36 = okHttpClient35.okResponseCache();
        java.net.ResponseCache responseCache37 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient35.setResponseCache(responseCache37);
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList41 = new java.util.ArrayList<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        okHttpClient35.transports = strList41;
        okHttpClient24.transports = strList41;
        com.squareup.okhttp.OkHttpClient.DEFAULT_TRANSPORTS = strList41;
        okHttpClient19.transports = strList41;
        java.net.CookieHandler cookieHandler47 = okHttpClient19.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient48 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier49 = null;
        okHttpClient48.hostnameVerifier = hostnameVerifier49;
        java.net.ResponseCache responseCache51 = null;
        okHttpClient48.responseCache = responseCache51;
        java.util.List<java.lang.String> strList53 = okHttpClient48.transports;
        com.squareup.okhttp.ConnectionPool connectionPool54 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient48.connectionPool = connectionPool54;
        java.net.Proxy proxy56 = null;
        okHttpClient48.proxy = proxy56;
        boolean boolean58 = okHttpClient48.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient59 = okHttpClient48.copyWithDefaults();
        java.net.ProxySelector proxySelector60 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient61 = okHttpClient59.setProxySelector(proxySelector60);
        javax.net.ssl.HostnameVerifier hostnameVerifier62 = okHttpClient59.getHostnameVerifier();
        okHttpClient19.hostnameVerifier = hostnameVerifier62;
        com.squareup.okhttp.OkHttpClient okHttpClient64 = okHttpClient0.setHostnameVerifier(hostnameVerifier62);
        java.net.Proxy proxy65 = okHttpClient0.proxy;
        java.net.ProxySelector proxySelector66 = okHttpClient0.getProxySelector();
        java.util.List<java.lang.String> strList67 = okHttpClient0.getTransports();
        com.squareup.okhttp.OkHttpClient okHttpClient68 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        com.squareup.okhttp.OkAuthenticator okAuthenticator69 = okHttpClient68.getAuthenticator();
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNotNull(connectionPool14);
        org.junit.Assert.assertNull(cookieHandler16);
        org.junit.Assert.assertNull(okResponseCache17);
        org.junit.Assert.assertNull(cookieHandler18);
        org.junit.Assert.assertNull(hostnameVerifier20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertNull(okResponseCache25);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertNull(okResponseCache36);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(cookieHandler47);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNotNull(connectionPool54);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(okHttpClient59);
        org.junit.Assert.assertNotNull(okHttpClient61);
        org.junit.Assert.assertNotNull(hostnameVerifier62);
        org.junit.Assert.assertNotNull(okHttpClient64);
        org.junit.Assert.assertNull(proxy65);
        org.junit.Assert.assertNull(proxySelector66);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNull(okAuthenticator69);
    }

    @Test
    public void test12202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12202");
        com.squareup.okhttp.ConnectionPool connectionPool2 = new com.squareup.okhttp.ConnectionPool((int) (short) 0, (long) '#');
        com.squareup.okhttp.Address address3 = null;
        com.squareup.okhttp.Connection connection4 = connectionPool2.get(address3);
        org.junit.Assert.assertNull(connection4);
    }

    @Test
    public void test12203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12203");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        java.net.Proxy proxy4 = okHttpClient0.proxy;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        boolean boolean6 = okHttpClient0.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool8 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient7.connectionPool = connectionPool8;
        java.net.ResponseCache responseCache10 = null;
        okHttpClient7.responseCache = responseCache10;
        java.net.Proxy proxy12 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress13 = proxy12.address();
        java.net.SocketAddress socketAddress14 = proxy12.address();
        okHttpClient7.proxy = proxy12;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient0.setProxy(proxy12);
        com.squareup.okhttp.ConnectionPool connectionPool17 = okHttpClient0.getConnectionPool();
        boolean boolean18 = okHttpClient0.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        java.net.ProxySelector proxySelector20 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient0.setProxySelector(proxySelector20);
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient21.setFollowProtocolRedirects(false);
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNull(proxy4);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(connectionPool8);
        org.junit.Assert.assertNotNull(proxy12);
        org.junit.Assert.assertNull(socketAddress13);
        org.junit.Assert.assertNull(socketAddress14);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNull(connectionPool17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNotNull(okHttpClient23);
    }

    @Test
    public void test12204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12204");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        java.net.Proxy proxy12 = okHttpClient11.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool14 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient13.connectionPool = connectionPool14;
        int int16 = connectionPool14.getSpdyConnectionCount();
        okHttpClient11.connectionPool = connectionPool14;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient11.copyWithDefaults();
        java.net.CookieHandler cookieHandler19 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient11.setCookieHandler(cookieHandler19);
        java.util.Set<com.squareup.okhttp.Route> routeSet21 = okHttpClient20.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier23 = null;
        okHttpClient22.hostnameVerifier = hostnameVerifier23;
        java.net.ResponseCache responseCache25 = null;
        okHttpClient22.responseCache = responseCache25;
        javax.net.ssl.HostnameVerifier hostnameVerifier27 = okHttpClient22.hostnameVerifier;
        java.net.Proxy proxy28 = okHttpClient22.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool31 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient22.connectionPool = connectionPool31;
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient22.copyWithDefaults();
        java.net.ResponseCache responseCache34 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient33.setResponseCache(responseCache34);
        java.net.ProxySelector proxySelector36 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient33.setProxySelector(proxySelector36);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory38 = okHttpClient37.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient20.setSSLSocketFactory(sSLSocketFactory38);
        java.util.List<java.lang.String> strList40 = okHttpClient20.getTransports();
        com.squareup.okhttp.OkHttpClient okHttpClient41 = new com.squareup.okhttp.OkHttpClient(okHttpClient20);
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(proxy12);
        org.junit.Assert.assertNotNull(connectionPool14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNotNull(routeSet21);
        org.junit.Assert.assertNull(hostnameVerifier27);
        org.junit.Assert.assertNull(proxy28);
        org.junit.Assert.assertNotNull(okHttpClient33);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNotNull(okHttpClient37);
        org.junit.Assert.assertNotNull(sSLSocketFactory38);
        org.junit.Assert.assertNotNull(okHttpClient39);
        org.junit.Assert.assertNull(strList40);
    }

    @Test
    public void test12205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12205");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient0.copyWithDefaults();
        java.net.ResponseCache responseCache9 = okHttpClient8.getResponseCache();
        javax.net.ssl.HostnameVerifier hostnameVerifier10 = okHttpClient8.getHostnameVerifier();
        java.util.List<java.lang.String> strList11 = okHttpClient8.getTransports();
        com.squareup.okhttp.OkHttpClient okHttpClient12 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier13 = null;
        okHttpClient12.hostnameVerifier = hostnameVerifier13;
        java.net.ResponseCache responseCache15 = null;
        okHttpClient12.responseCache = responseCache15;
        java.util.List<java.lang.String> strList17 = okHttpClient12.transports;
        com.squareup.okhttp.ConnectionPool connectionPool18 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient12.connectionPool = connectionPool18;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient12.copyWithDefaults();
        java.net.ProxySelector proxySelector21 = okHttpClient20.proxySelector;
        com.squareup.okhttp.ConnectionPool connectionPool22 = okHttpClient20.connectionPool;
        java.util.Set<com.squareup.okhttp.Route> routeSet23 = okHttpClient20.failedRoutes;
        java.net.ResponseCache responseCache24 = null;
        okHttpClient20.responseCache = responseCache24;
        java.util.List<java.lang.String> strList26 = okHttpClient20.transports;
        com.squareup.okhttp.OkHttpClient.DEFAULT_TRANSPORTS = strList26;
        com.squareup.okhttp.OkHttpClient.DEFAULT_TRANSPORTS = strList26;
        com.squareup.okhttp.OkHttpClient.DEFAULT_TRANSPORTS = strList26;
        com.squareup.okhttp.OkHttpClient.DEFAULT_TRANSPORTS = strList26;
        // The following exception was thrown during execution in test generation
        try {
            com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient8.setTransports(strList26);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: transports doesn't contain http/1.1: [hi!]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertNull(responseCache9);
        org.junit.Assert.assertNotNull(hostnameVerifier10);
        org.junit.Assert.assertNotNull(strList11);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNotNull(connectionPool18);
        org.junit.Assert.assertNotNull(okHttpClient20);
// flaky:         org.junit.Assert.assertNull(proxySelector21);
        org.junit.Assert.assertNotNull(connectionPool22);
        org.junit.Assert.assertNotNull(routeSet23);
        org.junit.Assert.assertNotNull(strList26);
    }

    @Test
    public void test12206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12206");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient0.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.copyWithDefaults();
        java.net.Proxy proxy12 = okHttpClient11.getProxy();
        java.net.CookieHandler cookieHandler13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient11.setCookieHandler(cookieHandler13);
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient(okHttpClient11);
        com.squareup.okhttp.OkHttpClient okHttpClient16 = new com.squareup.okhttp.OkHttpClient(okHttpClient15);
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient16.copyWithDefaults();
        okHttpClient16.followProtocolRedirects = true;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool21 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient20.connectionPool = connectionPool21;
        java.net.ResponseCache responseCache23 = null;
        okHttpClient20.responseCache = responseCache23;
        com.squareup.okhttp.OkHttpClient okHttpClient25 = new com.squareup.okhttp.OkHttpClient(okHttpClient20);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory26 = null;
        okHttpClient20.sslSocketFactory = sSLSocketFactory26;
        java.net.ProxySelector proxySelector28 = okHttpClient20.proxySelector;
        com.squareup.okhttp.OkHttpClient okHttpClient29 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool30 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient29.connectionPool = connectionPool30;
        com.squareup.okhttp.OkAuthenticator okAuthenticator32 = null;
        okHttpClient29.authenticator = okAuthenticator32;
        java.net.CookieHandler cookieHandler34 = null;
        okHttpClient29.cookieHandler = cookieHandler34;
        java.net.Proxy proxy36 = java.net.Proxy.NO_PROXY;
        boolean boolean38 = proxy36.equals((java.lang.Object) 1L);
        com.squareup.okhttp.OkHttpClient okHttpClient39 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache40 = okHttpClient39.okResponseCache();
        java.net.ResponseCache responseCache41 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient39.setResponseCache(responseCache41);
        java.lang.String[] strArray44 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        okHttpClient39.transports = strList45;
        boolean boolean48 = proxy36.equals((java.lang.Object) strList45);
        com.squareup.okhttp.OkHttpClient okHttpClient49 = okHttpClient29.setProxy(proxy36);
        com.squareup.okhttp.ConnectionPool connectionPool52 = new com.squareup.okhttp.ConnectionPool(0, 100L);
        int int53 = connectionPool52.getHttpConnectionCount();
        okHttpClient29.connectionPool = connectionPool52;
        com.squareup.okhttp.OkHttpClient okHttpClient55 = okHttpClient20.setConnectionPool(connectionPool52);
        com.squareup.okhttp.OkHttpClient okHttpClient56 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier57 = null;
        okHttpClient56.hostnameVerifier = hostnameVerifier57;
        java.net.ResponseCache responseCache59 = null;
        okHttpClient56.responseCache = responseCache59;
        javax.net.ssl.HostnameVerifier hostnameVerifier61 = okHttpClient56.hostnameVerifier;
        java.net.Proxy proxy62 = okHttpClient56.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool65 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient56.connectionPool = connectionPool65;
        java.util.List<java.lang.String> strList67 = okHttpClient56.getTransports();
        javax.net.ssl.HostnameVerifier hostnameVerifier68 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient69 = okHttpClient56.setHostnameVerifier(hostnameVerifier68);
        com.squareup.okhttp.OkHttpClient okHttpClient70 = new com.squareup.okhttp.OkHttpClient(okHttpClient56);
        com.squareup.okhttp.OkHttpClient okHttpClient71 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier72 = null;
        okHttpClient71.hostnameVerifier = hostnameVerifier72;
        java.net.ProxySelector proxySelector74 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient75 = okHttpClient71.setProxySelector(proxySelector74);
        com.squareup.okhttp.OkHttpClient okHttpClient76 = okHttpClient75.copyWithDefaults();
        java.net.ProxySelector proxySelector77 = null;
        okHttpClient76.proxySelector = proxySelector77;
        com.squareup.okhttp.OkAuthenticator okAuthenticator79 = okHttpClient76.authenticator;
        okHttpClient70.authenticator = okAuthenticator79;
        com.squareup.okhttp.OkHttpClient okHttpClient81 = okHttpClient20.setAuthenticator(okAuthenticator79);
        okHttpClient16.authenticator = okAuthenticator79;
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(proxy12);
        org.junit.Assert.assertNotNull(okHttpClient14);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNotNull(connectionPool21);
        org.junit.Assert.assertNull(proxySelector28);
        org.junit.Assert.assertNotNull(connectionPool30);
        org.junit.Assert.assertNotNull(proxy36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(okResponseCache40);
        org.junit.Assert.assertNotNull(okHttpClient42);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(okHttpClient49);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(okHttpClient55);
        org.junit.Assert.assertNull(hostnameVerifier61);
        org.junit.Assert.assertNull(proxy62);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNotNull(okHttpClient69);
        org.junit.Assert.assertNotNull(okHttpClient75);
        org.junit.Assert.assertNotNull(okHttpClient76);
        org.junit.Assert.assertNotNull(okAuthenticator79);
        org.junit.Assert.assertNotNull(okHttpClient81);
    }

    @Test
    public void test12207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12207");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient0.connectionPool = connectionPool9;
        java.util.List<java.lang.String> strList11 = okHttpClient0.getTransports();
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient0.setHostnameVerifier(hostnameVerifier12);
        com.squareup.okhttp.ConnectionPool connectionPool14 = okHttpClient13.connectionPool;
        java.net.ProxySelector proxySelector15 = okHttpClient13.getProxySelector();
        okHttpClient13.followProtocolRedirects = false;
        java.net.CookieHandler cookieHandler18 = null;
        okHttpClient13.cookieHandler = cookieHandler18;
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNotNull(connectionPool14);
        org.junit.Assert.assertNull(proxySelector15);
    }

    @Test
    public void test12208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12208");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.CookieHandler cookieHandler8 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache9 = okHttpClient0.okResponseCache();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory10 = null;
        okHttpClient0.sslSocketFactory = sSLSocketFactory10;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory12);
        java.net.CookieHandler cookieHandler14 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        com.squareup.okhttp.OkHttpClient okHttpClient16 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier17 = null;
        okHttpClient16.hostnameVerifier = hostnameVerifier17;
        java.net.ResponseCache responseCache19 = null;
        okHttpClient16.responseCache = responseCache19;
        javax.net.ssl.HostnameVerifier hostnameVerifier21 = okHttpClient16.hostnameVerifier;
        java.net.Proxy proxy22 = okHttpClient16.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool25 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient16.connectionPool = connectionPool25;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient16.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient27.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient29 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = null;
        okHttpClient29.hostnameVerifier = hostnameVerifier30;
        java.net.ResponseCache responseCache32 = null;
        okHttpClient29.responseCache = responseCache32;
        java.util.List<java.lang.String> strList34 = okHttpClient29.transports;
        com.squareup.okhttp.ConnectionPool connectionPool35 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient29.connectionPool = connectionPool35;
        java.net.Proxy proxy37 = null;
        okHttpClient29.proxy = proxy37;
        boolean boolean39 = okHttpClient29.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient40 = okHttpClient29.copyWithDefaults();
        java.net.CookieHandler cookieHandler41 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient40.setCookieHandler(cookieHandler41);
        java.net.Proxy proxy43 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient44 = okHttpClient40.setProxy(proxy43);
        java.net.Proxy.Type type45 = proxy43.type();
        java.net.SocketAddress socketAddress46 = proxy43.address();
        java.net.SocketAddress socketAddress47 = proxy43.address();
        com.squareup.okhttp.OkHttpClient okHttpClient48 = okHttpClient28.setProxy(proxy43);
        com.squareup.okhttp.OkHttpClient okHttpClient49 = okHttpClient15.setProxy(proxy43);
        java.lang.String str50 = proxy43.toString();
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNull(cookieHandler8);
        org.junit.Assert.assertNull(okResponseCache9);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNull(cookieHandler14);
        org.junit.Assert.assertNull(hostnameVerifier21);
        org.junit.Assert.assertNull(proxy22);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(connectionPool35);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(okHttpClient40);
        org.junit.Assert.assertNotNull(okHttpClient42);
        org.junit.Assert.assertNotNull(proxy43);
        org.junit.Assert.assertNotNull(okHttpClient44);
        org.junit.Assert.assertTrue("'" + type45 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type45.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress46);
        org.junit.Assert.assertNull(socketAddress47);
        org.junit.Assert.assertNotNull(okHttpClient48);
        org.junit.Assert.assertNotNull(okHttpClient49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "DIRECT" + "'", str50, "DIRECT");
    }

    @Test
    public void test12209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12209");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        okHttpClient0.authenticator = okAuthenticator3;
        java.net.CookieHandler cookieHandler5 = null;
        okHttpClient0.cookieHandler = cookieHandler5;
        java.net.Proxy proxy7 = java.net.Proxy.NO_PROXY;
        boolean boolean9 = proxy7.equals((java.lang.Object) 1L);
        com.squareup.okhttp.OkHttpClient okHttpClient10 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache11 = okHttpClient10.okResponseCache();
        java.net.ResponseCache responseCache12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient10.setResponseCache(responseCache12);
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        okHttpClient10.transports = strList16;
        boolean boolean19 = proxy7.equals((java.lang.Object) strList16);
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient0.setProxy(proxy7);
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient0.copyWithDefaults();
        java.net.Proxy proxy22 = okHttpClient21.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient23 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool24 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient23.connectionPool = connectionPool24;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier27 = null;
        okHttpClient26.hostnameVerifier = hostnameVerifier27;
        java.net.ResponseCache responseCache29 = null;
        okHttpClient26.responseCache = responseCache29;
        java.util.List<java.lang.String> strList31 = okHttpClient26.transports;
        com.squareup.okhttp.ConnectionPool connectionPool32 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient26.connectionPool = connectionPool32;
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient23.setConnectionPool(connectionPool32);
        com.squareup.okhttp.ConnectionPool connectionPool35 = okHttpClient34.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator36 = okHttpClient34.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool39 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient34.connectionPool = connectionPool39;
        java.net.ResponseCache responseCache41 = okHttpClient34.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory42 = okHttpClient34.sslSocketFactory;
        java.net.Proxy proxy43 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress44 = proxy43.address();
        com.squareup.okhttp.OkHttpClient okHttpClient45 = okHttpClient34.setProxy(proxy43);
        com.squareup.okhttp.OkHttpClient okHttpClient46 = new com.squareup.okhttp.OkHttpClient(okHttpClient45);
        com.squareup.okhttp.OkHttpClient okHttpClient47 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier48 = null;
        okHttpClient47.hostnameVerifier = hostnameVerifier48;
        boolean boolean50 = okHttpClient47.getFollowProtocolRedirects();
        java.net.CookieHandler cookieHandler51 = okHttpClient47.cookieHandler;
        com.squareup.okhttp.OkHttpClient okHttpClient52 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier53 = null;
        okHttpClient52.hostnameVerifier = hostnameVerifier53;
        java.net.ResponseCache responseCache55 = null;
        okHttpClient52.responseCache = responseCache55;
        javax.net.ssl.HostnameVerifier hostnameVerifier57 = okHttpClient52.hostnameVerifier;
        java.net.Proxy proxy58 = okHttpClient52.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool61 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient52.connectionPool = connectionPool61;
        com.squareup.okhttp.OkHttpClient okHttpClient63 = okHttpClient52.copyWithDefaults();
        java.net.ResponseCache responseCache64 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient65 = okHttpClient63.setResponseCache(responseCache64);
        com.squareup.okhttp.OkAuthenticator okAuthenticator66 = okHttpClient63.authenticator;
        okHttpClient47.authenticator = okAuthenticator66;
        okHttpClient46.authenticator = okAuthenticator66;
        com.squareup.okhttp.ConnectionPool connectionPool69 = okHttpClient46.connectionPool;
        java.net.ResponseCache responseCache70 = okHttpClient46.responseCache;
        boolean boolean71 = proxy22.equals((java.lang.Object) responseCache70);
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNotNull(proxy7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(okResponseCache11);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNotNull(proxy22);
        org.junit.Assert.assertNotNull(connectionPool24);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNotNull(connectionPool32);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertNotNull(connectionPool35);
        org.junit.Assert.assertNull(okAuthenticator36);
        org.junit.Assert.assertNull(responseCache41);
        org.junit.Assert.assertNull(sSLSocketFactory42);
        org.junit.Assert.assertNotNull(proxy43);
        org.junit.Assert.assertNull(socketAddress44);
        org.junit.Assert.assertNotNull(okHttpClient45);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(cookieHandler51);
        org.junit.Assert.assertNull(hostnameVerifier57);
        org.junit.Assert.assertNull(proxy58);
        org.junit.Assert.assertNotNull(okHttpClient63);
        org.junit.Assert.assertNotNull(okHttpClient65);
        org.junit.Assert.assertNotNull(okAuthenticator66);
        org.junit.Assert.assertNull(connectionPool69);
        org.junit.Assert.assertNull(responseCache70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test12210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12210");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory3 = okHttpClient0.getSslSocketFactory();
        java.net.ResponseCache responseCache4 = okHttpClient0.responseCache;
        com.squareup.okhttp.ConnectionPool connectionPool5 = okHttpClient0.getConnectionPool();
        org.junit.Assert.assertNull(sSLSocketFactory3);
        org.junit.Assert.assertNull(responseCache4);
        org.junit.Assert.assertNull(connectionPool5);
    }

    @Test
    public void test12211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12211");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory8 = okHttpClient0.getSslSocketFactory();
        java.net.CookieHandler cookieHandler9 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier11 = null;
        okHttpClient10.hostnameVerifier = hostnameVerifier11;
        java.net.ProxySelector proxySelector13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient10.setProxySelector(proxySelector13);
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient14.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient15.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet17 = okHttpClient16.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier19 = null;
        okHttpClient18.hostnameVerifier = hostnameVerifier19;
        java.net.ResponseCache responseCache21 = null;
        okHttpClient18.responseCache = responseCache21;
        javax.net.ssl.HostnameVerifier hostnameVerifier23 = okHttpClient18.hostnameVerifier;
        java.net.Proxy proxy24 = okHttpClient18.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool27 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient18.connectionPool = connectionPool27;
        java.util.List<java.lang.String> strList29 = okHttpClient18.getTransports();
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient18.setHostnameVerifier(hostnameVerifier30);
        com.squareup.okhttp.OkHttpClient okHttpClient32 = new com.squareup.okhttp.OkHttpClient(okHttpClient18);
        java.util.List<java.lang.String> strList33 = okHttpClient18.getTransports();
        com.squareup.okhttp.OkHttpClient okHttpClient34 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool35 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient34.connectionPool = connectionPool35;
        com.squareup.okhttp.OkHttpClient okHttpClient37 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier38 = null;
        okHttpClient37.hostnameVerifier = hostnameVerifier38;
        java.net.ResponseCache responseCache40 = null;
        okHttpClient37.responseCache = responseCache40;
        java.util.List<java.lang.String> strList42 = okHttpClient37.transports;
        com.squareup.okhttp.ConnectionPool connectionPool43 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient37.connectionPool = connectionPool43;
        com.squareup.okhttp.OkHttpClient okHttpClient45 = okHttpClient34.setConnectionPool(connectionPool43);
        com.squareup.okhttp.ConnectionPool connectionPool46 = okHttpClient45.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator47 = okHttpClient45.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool50 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient45.connectionPool = connectionPool50;
        java.net.ResponseCache responseCache52 = okHttpClient45.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory53 = okHttpClient45.sslSocketFactory;
        java.net.Proxy proxy54 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress55 = proxy54.address();
        com.squareup.okhttp.OkHttpClient okHttpClient56 = okHttpClient45.setProxy(proxy54);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory57 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient58 = okHttpClient45.setSSLSocketFactory(sSLSocketFactory57);
        com.squareup.okhttp.OkHttpClient okHttpClient59 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier60 = null;
        okHttpClient59.hostnameVerifier = hostnameVerifier60;
        java.net.ResponseCache responseCache62 = null;
        okHttpClient59.responseCache = responseCache62;
        javax.net.ssl.HostnameVerifier hostnameVerifier64 = okHttpClient59.hostnameVerifier;
        java.net.Proxy proxy65 = okHttpClient59.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool68 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient59.connectionPool = connectionPool68;
        com.squareup.okhttp.OkHttpClient okHttpClient70 = okHttpClient59.copyWithDefaults();
        java.net.ResponseCache responseCache71 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient72 = okHttpClient70.setResponseCache(responseCache71);
        com.squareup.okhttp.OkAuthenticator okAuthenticator73 = okHttpClient70.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient74 = okHttpClient45.setAuthenticator(okAuthenticator73);
        java.net.Proxy proxy75 = okHttpClient74.getProxy();
        java.net.ResponseCache responseCache76 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient77 = okHttpClient74.setResponseCache(responseCache76);
        com.squareup.okhttp.OkAuthenticator okAuthenticator78 = okHttpClient74.getAuthenticator();
        okHttpClient18.authenticator = okAuthenticator78;
        okHttpClient16.authenticator = okAuthenticator78;
        com.squareup.okhttp.OkHttpClient okHttpClient81 = okHttpClient0.setAuthenticator(okAuthenticator78);
        java.net.ResponseCache responseCache82 = okHttpClient81.responseCache;
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNull(sSLSocketFactory8);
        org.junit.Assert.assertNull(cookieHandler9);
        org.junit.Assert.assertNotNull(okHttpClient14);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNotNull(routeSet17);
        org.junit.Assert.assertNull(hostnameVerifier23);
        org.junit.Assert.assertNull(proxy24);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNotNull(connectionPool35);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNotNull(connectionPool43);
        org.junit.Assert.assertNotNull(okHttpClient45);
        org.junit.Assert.assertNotNull(connectionPool46);
        org.junit.Assert.assertNull(okAuthenticator47);
        org.junit.Assert.assertNull(responseCache52);
        org.junit.Assert.assertNull(sSLSocketFactory53);
        org.junit.Assert.assertNotNull(proxy54);
        org.junit.Assert.assertNull(socketAddress55);
        org.junit.Assert.assertNotNull(okHttpClient56);
        org.junit.Assert.assertNotNull(okHttpClient58);
        org.junit.Assert.assertNull(hostnameVerifier64);
        org.junit.Assert.assertNull(proxy65);
        org.junit.Assert.assertNotNull(okHttpClient70);
        org.junit.Assert.assertNotNull(okHttpClient72);
        org.junit.Assert.assertNotNull(okAuthenticator73);
        org.junit.Assert.assertNotNull(okHttpClient74);
        org.junit.Assert.assertNotNull(proxy75);
        org.junit.Assert.assertNotNull(okHttpClient77);
        org.junit.Assert.assertNotNull(okAuthenticator78);
        org.junit.Assert.assertNotNull(okHttpClient81);
        org.junit.Assert.assertNull(responseCache82);
    }

    @Test
    public void test12212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12212");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.Proxy proxy8 = null;
        okHttpClient0.proxy = proxy8;
        boolean boolean10 = okHttpClient0.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        java.net.ProxySelector proxySelector12 = okHttpClient11.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier13 = okHttpClient11.hostnameVerifier;
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = okHttpClient11.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool16 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient15.connectionPool = connectionPool16;
        com.squareup.okhttp.OkAuthenticator okAuthenticator18 = null;
        okHttpClient15.authenticator = okAuthenticator18;
        java.net.CookieHandler cookieHandler20 = null;
        okHttpClient15.cookieHandler = cookieHandler20;
        java.net.Proxy proxy22 = java.net.Proxy.NO_PROXY;
        boolean boolean24 = proxy22.equals((java.lang.Object) 1L);
        com.squareup.okhttp.OkHttpClient okHttpClient25 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache26 = okHttpClient25.okResponseCache();
        java.net.ResponseCache responseCache27 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient25.setResponseCache(responseCache27);
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        okHttpClient25.transports = strList31;
        boolean boolean34 = proxy22.equals((java.lang.Object) strList31);
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient15.setProxy(proxy22);
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient11.setProxy(proxy22);
        com.squareup.okhttp.OkHttpClient okHttpClient37 = new com.squareup.okhttp.OkHttpClient(okHttpClient36);
        javax.net.ssl.HostnameVerifier hostnameVerifier38 = okHttpClient36.getHostnameVerifier();
        javax.net.ssl.HostnameVerifier hostnameVerifier39 = okHttpClient36.getHostnameVerifier();
        java.net.ProxySelector proxySelector40 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient41 = okHttpClient36.setProxySelector(proxySelector40);
        boolean boolean42 = okHttpClient41.followProtocolRedirects;
        java.net.ResponseCache responseCache43 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient44 = okHttpClient41.setResponseCache(responseCache43);
        java.net.CookieHandler cookieHandler45 = okHttpClient44.cookieHandler;
        okHttpClient44.followProtocolRedirects = true;
        com.squareup.okhttp.OkHttpClient okHttpClient48 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool49 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient48.connectionPool = connectionPool49;
        com.squareup.okhttp.OkHttpClient okHttpClient51 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier52 = null;
        okHttpClient51.hostnameVerifier = hostnameVerifier52;
        java.net.ResponseCache responseCache54 = null;
        okHttpClient51.responseCache = responseCache54;
        java.util.List<java.lang.String> strList56 = okHttpClient51.transports;
        com.squareup.okhttp.ConnectionPool connectionPool57 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient51.connectionPool = connectionPool57;
        com.squareup.okhttp.OkHttpClient okHttpClient59 = okHttpClient48.setConnectionPool(connectionPool57);
        com.squareup.okhttp.ConnectionPool connectionPool60 = okHttpClient59.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator61 = okHttpClient59.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool64 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient59.connectionPool = connectionPool64;
        java.net.ResponseCache responseCache66 = okHttpClient59.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory67 = okHttpClient59.sslSocketFactory;
        java.net.Proxy proxy68 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress69 = proxy68.address();
        com.squareup.okhttp.OkHttpClient okHttpClient70 = okHttpClient59.setProxy(proxy68);
        com.squareup.okhttp.OkHttpClient okHttpClient71 = new com.squareup.okhttp.OkHttpClient(okHttpClient70);
        com.squareup.okhttp.OkHttpClient okHttpClient72 = okHttpClient70.copyWithDefaults();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory73 = null;
        okHttpClient72.sslSocketFactory = sSLSocketFactory73;
        com.squareup.okhttp.OkHttpClient okHttpClient76 = okHttpClient72.setFollowProtocolRedirects(true);
        java.util.List<java.lang.String> strList77 = okHttpClient76.transports;
        com.squareup.okhttp.OkHttpClient.DEFAULT_TRANSPORTS = strList77;
        // The following exception was thrown during execution in test generation
        try {
            com.squareup.okhttp.OkHttpClient okHttpClient79 = okHttpClient44.setTransports(strList77);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: transports doesn't contain http/1.1: [hi!]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(proxySelector12);
        org.junit.Assert.assertNull(hostnameVerifier13);
        org.junit.Assert.assertNull(hostnameVerifier14);
        org.junit.Assert.assertNotNull(connectionPool16);
        org.junit.Assert.assertNotNull(proxy22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(okResponseCache26);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNull(hostnameVerifier38);
        org.junit.Assert.assertNull(hostnameVerifier39);
        org.junit.Assert.assertNotNull(okHttpClient41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(okHttpClient44);
        org.junit.Assert.assertNull(cookieHandler45);
        org.junit.Assert.assertNotNull(connectionPool49);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNotNull(connectionPool57);
        org.junit.Assert.assertNotNull(okHttpClient59);
        org.junit.Assert.assertNotNull(connectionPool60);
        org.junit.Assert.assertNull(okAuthenticator61);
        org.junit.Assert.assertNull(responseCache66);
        org.junit.Assert.assertNull(sSLSocketFactory67);
        org.junit.Assert.assertNotNull(proxy68);
        org.junit.Assert.assertNull(socketAddress69);
        org.junit.Assert.assertNotNull(okHttpClient70);
        org.junit.Assert.assertNotNull(okHttpClient72);
        org.junit.Assert.assertNotNull(okHttpClient76);
        org.junit.Assert.assertNotNull(strList77);
    }

    @Test
    public void test12213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12213");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient0.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.copyWithDefaults();
        java.net.Proxy proxy12 = okHttpClient11.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = null;
        okHttpClient13.hostnameVerifier = hostnameVerifier14;
        java.net.ResponseCache responseCache16 = null;
        okHttpClient13.responseCache = responseCache16;
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = okHttpClient13.hostnameVerifier;
        java.net.Proxy proxy19 = okHttpClient13.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool22 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient13.connectionPool = connectionPool22;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient13.copyWithDefaults();
        java.net.ResponseCache responseCache25 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient24.setResponseCache(responseCache25);
        okHttpClient26.followProtocolRedirects = true;
        java.util.List<java.lang.String> strList29 = okHttpClient26.getTransports();
        okHttpClient11.transports = strList29;
        com.squareup.okhttp.ConnectionPool connectionPool33 = new com.squareup.okhttp.ConnectionPool((int) (byte) 0, (long) (byte) 100);
        okHttpClient11.connectionPool = connectionPool33;
        com.squareup.okhttp.OkHttpClient okHttpClient35 = new com.squareup.okhttp.OkHttpClient(okHttpClient11);
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient35.setFollowProtocolRedirects(true);
        com.squareup.okhttp.OkHttpClient okHttpClient38 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier39 = null;
        okHttpClient38.hostnameVerifier = hostnameVerifier39;
        java.net.ResponseCache responseCache41 = null;
        okHttpClient38.responseCache = responseCache41;
        javax.net.ssl.HostnameVerifier hostnameVerifier43 = okHttpClient38.hostnameVerifier;
        java.net.Proxy proxy44 = okHttpClient38.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient45 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache46 = okHttpClient45.okResponseCache();
        java.net.ResponseCache responseCache47 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient48 = okHttpClient45.setResponseCache(responseCache47);
        java.lang.String[] strArray50 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList51 = new java.util.ArrayList<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        okHttpClient45.transports = strList51;
        okHttpClient38.transports = strList51;
        com.squareup.okhttp.OkHttpClient.DEFAULT_TRANSPORTS = strList51;
        com.squareup.okhttp.OkHttpClient.DEFAULT_TRANSPORTS = strList51;
        // The following exception was thrown during execution in test generation
        try {
            com.squareup.okhttp.OkHttpClient okHttpClient57 = okHttpClient37.setTransports((java.util.List<java.lang.String>) strList51);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: transports doesn't contain http/1.1: [hi!]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(proxy12);
        org.junit.Assert.assertNull(hostnameVerifier18);
        org.junit.Assert.assertNull(proxy19);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNotNull(strList29);
        org.junit.Assert.assertNotNull(okHttpClient37);
        org.junit.Assert.assertNull(hostnameVerifier43);
        org.junit.Assert.assertNull(proxy44);
        org.junit.Assert.assertNull(okResponseCache46);
        org.junit.Assert.assertNotNull(okHttpClient48);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
    }

    @Test
    public void test12214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12214");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.Proxy proxy8 = null;
        okHttpClient0.proxy = proxy8;
        java.util.Set<com.squareup.okhttp.Route> routeSet10 = okHttpClient0.failedRoutes;
        java.util.List<java.lang.String> strList11 = okHttpClient0.getTransports();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache12 = okHttpClient0.okResponseCache();
        com.squareup.okhttp.ConnectionPool connectionPool15 = new com.squareup.okhttp.ConnectionPool((int) ' ', (long) '#');
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient0.setConnectionPool(connectionPool15);
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient(okHttpClient16);
        java.net.CookieHandler cookieHandler18 = okHttpClient16.cookieHandler;
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNotNull(routeSet10);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNull(okResponseCache12);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNull(cookieHandler18);
    }

    @Test
    public void test12215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12215");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.CookieHandler cookieHandler8 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache9 = okHttpClient0.okResponseCache();
        java.net.CookieHandler cookieHandler10 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory12 = okHttpClient11.sslSocketFactory;
        java.net.Proxy proxy13 = okHttpClient11.proxy;
        java.net.Proxy proxy14 = okHttpClient11.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient11.setFollowProtocolRedirects(true);
        java.net.CookieHandler cookieHandler17 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient16.setCookieHandler(cookieHandler17);
        java.net.CookieHandler cookieHandler19 = okHttpClient18.getCookieHandler();
        javax.net.ssl.HostnameVerifier hostnameVerifier20 = okHttpClient18.hostnameVerifier;
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNull(cookieHandler8);
        org.junit.Assert.assertNull(okResponseCache9);
        org.junit.Assert.assertNull(cookieHandler10);
        org.junit.Assert.assertNull(sSLSocketFactory12);
        org.junit.Assert.assertNull(proxy13);
        org.junit.Assert.assertNull(proxy14);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNull(cookieHandler19);
        org.junit.Assert.assertNull(hostnameVerifier20);
    }

    @Test
    public void test12216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12216");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.OkAuthenticator okAuthenticator12 = okHttpClient11.getAuthenticator();
        java.net.ProxySelector proxySelector13 = okHttpClient11.getProxySelector();
        java.net.ProxySelector proxySelector14 = null;
        okHttpClient11.proxySelector = proxySelector14;
        java.net.ProxySelector proxySelector16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient11.setProxySelector(proxySelector16);
        com.squareup.okhttp.ConnectionPool connectionPool20 = new com.squareup.okhttp.ConnectionPool(10, 1L);
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient17.setConnectionPool(connectionPool20);
        java.util.Set<com.squareup.okhttp.Route> routeSet22 = okHttpClient21.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient23 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool24 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient23.connectionPool = connectionPool24;
        java.net.ResponseCache responseCache26 = null;
        okHttpClient23.responseCache = responseCache26;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = new com.squareup.okhttp.OkHttpClient(okHttpClient23);
        boolean boolean29 = okHttpClient23.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient30 = new com.squareup.okhttp.OkHttpClient(okHttpClient23);
        com.squareup.okhttp.OkHttpClient okHttpClient31 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier32 = null;
        okHttpClient31.hostnameVerifier = hostnameVerifier32;
        java.net.ProxySelector proxySelector34 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient31.setProxySelector(proxySelector34);
        java.net.ResponseCache responseCache36 = null;
        okHttpClient35.responseCache = responseCache36;
        javax.net.ssl.HostnameVerifier hostnameVerifier38 = okHttpClient35.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient35.copyWithDefaults();
        java.net.ResponseCache responseCache40 = okHttpClient39.responseCache;
        com.squareup.okhttp.OkHttpClient okHttpClient41 = new com.squareup.okhttp.OkHttpClient(okHttpClient39);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory42 = okHttpClient39.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient43 = okHttpClient23.setSSLSocketFactory(sSLSocketFactory42);
        java.net.Socket socket44 = sSLSocketFactory42.createSocket();
        okHttpClient21.sslSocketFactory = sSLSocketFactory42;
        java.net.ResponseCache responseCache46 = okHttpClient21.responseCache;
        java.net.ResponseCache responseCache47 = okHttpClient21.responseCache;
        java.net.CookieHandler cookieHandler48 = null;
        okHttpClient21.cookieHandler = cookieHandler48;
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(okAuthenticator12);
        org.junit.Assert.assertNull(proxySelector13);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNotNull(routeSet22);
        org.junit.Assert.assertNotNull(connectionPool24);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNull(hostnameVerifier38);
        org.junit.Assert.assertNotNull(okHttpClient39);
        org.junit.Assert.assertNull(responseCache40);
        org.junit.Assert.assertNotNull(sSLSocketFactory42);
        org.junit.Assert.assertNotNull(okHttpClient43);
        org.junit.Assert.assertNotNull(socket44);
        org.junit.Assert.assertEquals(socket44.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNull(responseCache46);
        org.junit.Assert.assertNull(responseCache47);
    }

    @Test
    public void test12217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12217");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory6 = okHttpClient0.sslSocketFactory;
        java.net.CookieHandler cookieHandler7 = okHttpClient0.cookieHandler;
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = okHttpClient0.getHostnameVerifier();
        javax.net.ssl.HostnameVerifier hostnameVerifier9 = okHttpClient0.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool12 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient11.connectionPool = connectionPool12;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier15 = null;
        okHttpClient14.hostnameVerifier = hostnameVerifier15;
        java.net.ResponseCache responseCache17 = null;
        okHttpClient14.responseCache = responseCache17;
        java.util.List<java.lang.String> strList19 = okHttpClient14.transports;
        com.squareup.okhttp.ConnectionPool connectionPool20 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient14.connectionPool = connectionPool20;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient11.setConnectionPool(connectionPool20);
        com.squareup.okhttp.ConnectionPool connectionPool23 = okHttpClient22.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator24 = okHttpClient22.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool27 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient22.connectionPool = connectionPool27;
        java.net.ResponseCache responseCache29 = okHttpClient22.responseCache;
        com.squareup.okhttp.ConnectionPool connectionPool32 = new com.squareup.okhttp.ConnectionPool((int) (byte) 0, 10L);
        okHttpClient22.connectionPool = connectionPool32;
        com.squareup.okhttp.ConnectionPool connectionPool36 = new com.squareup.okhttp.ConnectionPool((int) (byte) 10, 0L);
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient22.setConnectionPool(connectionPool36);
        com.squareup.okhttp.OkHttpClient okHttpClient38 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier39 = null;
        okHttpClient38.hostnameVerifier = hostnameVerifier39;
        java.net.ProxySelector proxySelector41 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient38.setProxySelector(proxySelector41);
        java.net.ResponseCache responseCache43 = null;
        okHttpClient42.responseCache = responseCache43;
        com.squareup.okhttp.OkHttpClient okHttpClient45 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier46 = null;
        okHttpClient45.hostnameVerifier = hostnameVerifier46;
        java.net.ResponseCache responseCache48 = null;
        okHttpClient45.responseCache = responseCache48;
        java.util.List<java.lang.String> strList50 = okHttpClient45.transports;
        com.squareup.okhttp.ConnectionPool connectionPool51 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient45.connectionPool = connectionPool51;
        java.net.CookieHandler cookieHandler53 = okHttpClient45.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache54 = okHttpClient45.okResponseCache();
        java.net.CookieHandler cookieHandler55 = okHttpClient45.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient56 = new com.squareup.okhttp.OkHttpClient(okHttpClient45);
        java.net.Proxy proxy57 = java.net.Proxy.NO_PROXY;
        boolean boolean59 = proxy57.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type60 = proxy57.type();
        java.net.SocketAddress socketAddress61 = proxy57.address();
        com.squareup.okhttp.OkHttpClient okHttpClient62 = okHttpClient45.setProxy(proxy57);
        com.squareup.okhttp.OkHttpClient okHttpClient63 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier64 = null;
        okHttpClient63.hostnameVerifier = hostnameVerifier64;
        java.net.ResponseCache responseCache66 = null;
        okHttpClient63.responseCache = responseCache66;
        java.util.List<java.lang.String> strList68 = okHttpClient63.transports;
        com.squareup.okhttp.ConnectionPool connectionPool69 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient63.connectionPool = connectionPool69;
        com.squareup.okhttp.OkHttpClient okHttpClient71 = okHttpClient63.copyWithDefaults();
        java.net.ProxySelector proxySelector72 = okHttpClient71.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory73 = okHttpClient71.getSslSocketFactory();
        okHttpClient62.sslSocketFactory = sSLSocketFactory73;
        java.lang.String[] strArray75 = sSLSocketFactory73.getDefaultCipherSuites();
        java.lang.String[] strArray76 = sSLSocketFactory73.getSupportedCipherSuites();
        java.net.Socket socket77 = sSLSocketFactory73.createSocket();
        okHttpClient42.sslSocketFactory = sSLSocketFactory73;
        okHttpClient22.sslSocketFactory = sSLSocketFactory73;
        java.lang.String[] strArray80 = sSLSocketFactory73.getDefaultCipherSuites();
        java.lang.String[] strArray81 = sSLSocketFactory73.getSupportedCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient82 = okHttpClient10.setSSLSocketFactory(sSLSocketFactory73);
        com.squareup.okhttp.OkAuthenticator okAuthenticator83 = okHttpClient10.getAuthenticator();
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(sSLSocketFactory6);
        org.junit.Assert.assertNull(cookieHandler7);
        org.junit.Assert.assertNull(hostnameVerifier8);
        org.junit.Assert.assertNull(hostnameVerifier9);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNotNull(connectionPool20);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNotNull(connectionPool23);
        org.junit.Assert.assertNull(okAuthenticator24);
        org.junit.Assert.assertNull(responseCache29);
        org.junit.Assert.assertNotNull(okHttpClient37);
        org.junit.Assert.assertNotNull(okHttpClient42);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNotNull(connectionPool51);
        org.junit.Assert.assertNull(cookieHandler53);
        org.junit.Assert.assertNull(okResponseCache54);
        org.junit.Assert.assertNull(cookieHandler55);
        org.junit.Assert.assertNotNull(proxy57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + type60 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type60.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress61);
        org.junit.Assert.assertNotNull(okHttpClient62);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNotNull(connectionPool69);
        org.junit.Assert.assertNotNull(okHttpClient71);
// flaky:         org.junit.Assert.assertNull(proxySelector72);
        org.junit.Assert.assertNotNull(sSLSocketFactory73);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertNotNull(socket77);
        org.junit.Assert.assertEquals(socket77.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertNotNull(okHttpClient82);
        org.junit.Assert.assertNotNull(okAuthenticator83);
    }

    @Test
    public void test12218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12218");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.CookieHandler cookieHandler5 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = null;
        okHttpClient6.hostnameVerifier = hostnameVerifier7;
        java.net.ResponseCache responseCache9 = null;
        okHttpClient6.responseCache = responseCache9;
        java.util.List<java.lang.String> strList11 = okHttpClient6.transports;
        com.squareup.okhttp.ConnectionPool connectionPool12 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient6.connectionPool = connectionPool12;
        java.net.Proxy proxy14 = null;
        okHttpClient6.proxy = proxy14;
        java.util.Set<com.squareup.okhttp.Route> routeSet16 = okHttpClient6.failedRoutes;
        okHttpClient0.failedRoutes = routeSet16;
        java.net.ProxySelector proxySelector18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient0.setProxySelector(proxySelector18);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory20 = null;
        okHttpClient19.sslSocketFactory = sSLSocketFactory20;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient19.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient23 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier24 = null;
        okHttpClient23.hostnameVerifier = hostnameVerifier24;
        java.net.ResponseCache responseCache26 = null;
        okHttpClient23.responseCache = responseCache26;
        java.util.List<java.lang.String> strList28 = okHttpClient23.transports;
        com.squareup.okhttp.ConnectionPool connectionPool29 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient23.connectionPool = connectionPool29;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient23.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient32 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier33 = null;
        okHttpClient32.hostnameVerifier = hostnameVerifier33;
        java.net.ResponseCache responseCache35 = null;
        okHttpClient32.responseCache = responseCache35;
        java.util.List<java.lang.String> strList37 = okHttpClient32.transports;
        com.squareup.okhttp.ConnectionPool connectionPool38 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient32.connectionPool = connectionPool38;
        com.squareup.okhttp.OkHttpClient okHttpClient40 = okHttpClient32.copyWithDefaults();
        java.net.ProxySelector proxySelector41 = okHttpClient40.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory42 = okHttpClient40.getSslSocketFactory();
        okHttpClient23.sslSocketFactory = sSLSocketFactory42;
        java.net.Socket socket44 = sSLSocketFactory42.createSocket();
        java.net.Socket socket45 = sSLSocketFactory42.createSocket();
        java.lang.String[] strArray46 = sSLSocketFactory42.getSupportedCipherSuites();
        java.net.Socket socket47 = sSLSocketFactory42.createSocket();
        com.squareup.okhttp.OkHttpClient okHttpClient48 = okHttpClient22.setSSLSocketFactory(sSLSocketFactory42);
        java.net.CookieHandler cookieHandler49 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient22.setCookieHandler(cookieHandler49);
        java.net.Proxy proxy51 = okHttpClient22.proxy;
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNotNull(routeSet16);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNotNull(connectionPool29);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(connectionPool38);
        org.junit.Assert.assertNotNull(okHttpClient40);
// flaky:         org.junit.Assert.assertNull(proxySelector41);
        org.junit.Assert.assertNotNull(sSLSocketFactory42);
        org.junit.Assert.assertNotNull(socket44);
        org.junit.Assert.assertEquals(socket44.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(socket45);
        org.junit.Assert.assertEquals(socket45.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(socket47);
        org.junit.Assert.assertEquals(socket47.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(okHttpClient48);
        org.junit.Assert.assertNotNull(okHttpClient50);
        org.junit.Assert.assertNull(proxy51);
    }

    @Test
    public void test12219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12219");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.CookieHandler cookieHandler5 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = null;
        okHttpClient6.hostnameVerifier = hostnameVerifier7;
        java.net.ResponseCache responseCache9 = null;
        okHttpClient6.responseCache = responseCache9;
        java.util.List<java.lang.String> strList11 = okHttpClient6.transports;
        com.squareup.okhttp.ConnectionPool connectionPool12 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient6.connectionPool = connectionPool12;
        java.net.Proxy proxy14 = null;
        okHttpClient6.proxy = proxy14;
        java.util.Set<com.squareup.okhttp.Route> routeSet16 = okHttpClient6.failedRoutes;
        okHttpClient0.failedRoutes = routeSet16;
        java.net.ProxySelector proxySelector18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient0.setProxySelector(proxySelector18);
        com.squareup.okhttp.OkHttpClient okHttpClient20 = new com.squareup.okhttp.OkHttpClient(okHttpClient19);
        com.squareup.okhttp.OkAuthenticator okAuthenticator21 = okHttpClient20.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient20.setFollowProtocolRedirects(false);
        java.net.Proxy proxy24 = okHttpClient20.getProxy();
        boolean boolean25 = okHttpClient20.followProtocolRedirects;
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNotNull(routeSet16);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNull(okAuthenticator21);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertNull(proxy24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test12220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12220");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache8 = okHttpClient7.okResponseCache();
        java.net.ResponseCache responseCache9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient7.setResponseCache(responseCache9);
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        okHttpClient7.transports = strList13;
        okHttpClient0.transports = strList13;
        javax.net.ssl.HostnameVerifier hostnameVerifier17 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier17;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory20 = okHttpClient0.sslSocketFactory;
        java.util.List<java.lang.String> strList21 = okHttpClient0.transports;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache22 = okHttpClient0.okResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator23 = okHttpClient0.getAuthenticator();
        com.squareup.okhttp.OkHttpClient okHttpClient24 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier25 = null;
        okHttpClient24.hostnameVerifier = hostnameVerifier25;
        java.net.ProxySelector proxySelector27 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient24.setProxySelector(proxySelector27);
        java.net.ResponseCache responseCache29 = null;
        okHttpClient28.responseCache = responseCache29;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory31 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient28.setSSLSocketFactory(sSLSocketFactory31);
        java.net.ProxySelector proxySelector33 = null;
        okHttpClient28.proxySelector = proxySelector33;
        javax.net.ssl.HostnameVerifier hostnameVerifier35 = okHttpClient28.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient28.copyWithDefaults();
        java.net.ResponseCache responseCache37 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient28.setResponseCache(responseCache37);
        com.squareup.okhttp.ConnectionPool connectionPool41 = new com.squareup.okhttp.ConnectionPool((int) (short) 1, (long) (short) 100);
        int int42 = connectionPool41.getHttpConnectionCount();
        okHttpClient38.connectionPool = connectionPool41;
        com.squareup.okhttp.OkHttpClient okHttpClient44 = okHttpClient0.setConnectionPool(connectionPool41);
        boolean boolean45 = okHttpClient44.getFollowProtocolRedirects();
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNull(okResponseCache8);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(sSLSocketFactory20);
        org.junit.Assert.assertNotNull(strList21);
        org.junit.Assert.assertNull(okResponseCache22);
        org.junit.Assert.assertNull(okAuthenticator23);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertNull(hostnameVerifier35);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(okHttpClient44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
    }

    @Test
    public void test12221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12221");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.CookieHandler cookieHandler8 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache9 = okHttpClient0.okResponseCache();
        java.net.CookieHandler cookieHandler10 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        java.net.Proxy proxy12 = java.net.Proxy.NO_PROXY;
        boolean boolean14 = proxy12.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type15 = proxy12.type();
        java.net.SocketAddress socketAddress16 = proxy12.address();
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient0.setProxy(proxy12);
        java.net.CookieHandler cookieHandler18 = null;
        okHttpClient17.cookieHandler = cookieHandler18;
        java.net.CookieHandler cookieHandler20 = okHttpClient17.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient21 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier22 = null;
        okHttpClient21.hostnameVerifier = hostnameVerifier22;
        java.net.ResponseCache responseCache24 = null;
        okHttpClient21.responseCache = responseCache24;
        java.util.List<java.lang.String> strList26 = okHttpClient21.transports;
        java.net.Proxy proxy27 = java.net.Proxy.NO_PROXY;
        boolean boolean29 = proxy27.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type30 = proxy27.type();
        java.net.SocketAddress socketAddress31 = proxy27.address();
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient21.setProxy(proxy27);
        java.net.SocketAddress socketAddress33 = proxy27.address();
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient17.setProxy(proxy27);
        com.squareup.okhttp.ConnectionPool connectionPool37 = new com.squareup.okhttp.ConnectionPool((int) '#', (long) '4');
        okHttpClient17.connectionPool = connectionPool37;
        java.util.List<java.lang.String> strList39 = okHttpClient17.transports;
        java.util.List<java.lang.String> strList40 = okHttpClient17.getTransports();
        java.net.URL uRL41 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.HttpURLConnection httpURLConnection42 = okHttpClient17.open(uRL41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNull(cookieHandler8);
        org.junit.Assert.assertNull(okResponseCache9);
        org.junit.Assert.assertNull(cookieHandler10);
        org.junit.Assert.assertNotNull(proxy12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + type15 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type15.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress16);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNull(cookieHandler20);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNotNull(proxy27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + type30 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type30.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress31);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertNull(socketAddress33);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNull(strList40);
    }

    @Test
    public void test12222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12222");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.Proxy proxy5 = okHttpClient4.getProxy();
        com.squareup.okhttp.OkAuthenticator okAuthenticator6 = null;
        okHttpClient4.authenticator = okAuthenticator6;
        com.squareup.okhttp.OkAuthenticator okAuthenticator8 = okHttpClient4.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient4.setFollowProtocolRedirects(false);
        java.net.ProxySelector proxySelector11 = okHttpClient4.getProxySelector();
        com.squareup.okhttp.OkHttpClient okHttpClient12 = new com.squareup.okhttp.OkHttpClient(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(proxy5);
        org.junit.Assert.assertNull(okAuthenticator8);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertNull(proxySelector11);
    }

    @Test
    public void test12223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12223");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        okHttpClient0.authenticator = okAuthenticator3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient0.responseCache = responseCache6;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier9 = null;
        okHttpClient8.hostnameVerifier = hostnameVerifier9;
        java.net.ResponseCache responseCache11 = null;
        okHttpClient8.responseCache = responseCache11;
        javax.net.ssl.HostnameVerifier hostnameVerifier13 = okHttpClient8.hostnameVerifier;
        java.net.Proxy proxy14 = okHttpClient8.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool17 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient8.connectionPool = connectionPool17;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient8.copyWithDefaults();
        java.net.Proxy proxy20 = okHttpClient19.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier21 = okHttpClient19.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient0.setHostnameVerifier(hostnameVerifier21);
        java.net.CookieHandler cookieHandler23 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient22.setCookieHandler(cookieHandler23);
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient22.copyWithDefaults();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory26 = okHttpClient22.sslSocketFactory;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache28 = okHttpClient27.okResponseCache();
        java.net.ResponseCache responseCache29 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient30 = okHttpClient27.setResponseCache(responseCache29);
        java.net.ProxySelector proxySelector31 = okHttpClient27.getProxySelector();
        boolean boolean32 = okHttpClient27.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient33 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool34 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient33.connectionPool = connectionPool34;
        com.squareup.okhttp.OkHttpClient okHttpClient36 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier37 = null;
        okHttpClient36.hostnameVerifier = hostnameVerifier37;
        java.net.ResponseCache responseCache39 = null;
        okHttpClient36.responseCache = responseCache39;
        java.util.List<java.lang.String> strList41 = okHttpClient36.transports;
        com.squareup.okhttp.ConnectionPool connectionPool42 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient36.connectionPool = connectionPool42;
        com.squareup.okhttp.OkHttpClient okHttpClient44 = okHttpClient33.setConnectionPool(connectionPool42);
        java.net.Proxy proxy45 = okHttpClient44.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient46 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool47 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient46.connectionPool = connectionPool47;
        com.squareup.okhttp.OkHttpClient okHttpClient49 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier50 = null;
        okHttpClient49.hostnameVerifier = hostnameVerifier50;
        java.net.ResponseCache responseCache52 = null;
        okHttpClient49.responseCache = responseCache52;
        java.util.List<java.lang.String> strList54 = okHttpClient49.transports;
        com.squareup.okhttp.ConnectionPool connectionPool55 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient49.connectionPool = connectionPool55;
        com.squareup.okhttp.OkHttpClient okHttpClient57 = okHttpClient46.setConnectionPool(connectionPool55);
        com.squareup.okhttp.ConnectionPool connectionPool58 = okHttpClient46.connectionPool;
        com.squareup.okhttp.OkHttpClient okHttpClient59 = okHttpClient44.setConnectionPool(connectionPool58);
        okHttpClient44.followProtocolRedirects = false;
        com.squareup.okhttp.OkHttpClient okHttpClient62 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool63 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient62.connectionPool = connectionPool63;
        com.squareup.okhttp.OkHttpClient okHttpClient65 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier66 = null;
        okHttpClient65.hostnameVerifier = hostnameVerifier66;
        java.net.ResponseCache responseCache68 = null;
        okHttpClient65.responseCache = responseCache68;
        java.util.List<java.lang.String> strList70 = okHttpClient65.transports;
        com.squareup.okhttp.ConnectionPool connectionPool71 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient65.connectionPool = connectionPool71;
        com.squareup.okhttp.OkHttpClient okHttpClient73 = okHttpClient62.setConnectionPool(connectionPool71);
        java.net.ResponseCache responseCache74 = okHttpClient62.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory75 = okHttpClient62.sslSocketFactory;
        java.net.CookieHandler cookieHandler76 = okHttpClient62.getCookieHandler();
        com.squareup.okhttp.OkAuthenticator okAuthenticator77 = okHttpClient62.authenticator;
        java.util.Set<com.squareup.okhttp.Route> routeSet78 = okHttpClient62.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient79 = new com.squareup.okhttp.OkHttpClient(okHttpClient62);
        com.squareup.okhttp.OkHttpClient okHttpClient80 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier81 = null;
        okHttpClient80.hostnameVerifier = hostnameVerifier81;
        java.net.ResponseCache responseCache83 = null;
        okHttpClient80.responseCache = responseCache83;
        javax.net.ssl.HostnameVerifier hostnameVerifier85 = okHttpClient80.hostnameVerifier;
        java.net.Proxy proxy86 = okHttpClient80.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool89 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient80.connectionPool = connectionPool89;
        com.squareup.okhttp.OkHttpClient okHttpClient91 = okHttpClient80.copyWithDefaults();
        java.net.ResponseCache responseCache92 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient93 = okHttpClient91.setResponseCache(responseCache92);
        javax.net.ssl.HostnameVerifier hostnameVerifier94 = okHttpClient93.hostnameVerifier;
        okHttpClient79.hostnameVerifier = hostnameVerifier94;
        com.squareup.okhttp.OkHttpClient okHttpClient96 = okHttpClient44.setHostnameVerifier(hostnameVerifier94);
        okHttpClient27.hostnameVerifier = hostnameVerifier94;
        okHttpClient22.hostnameVerifier = hostnameVerifier94;
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNull(hostnameVerifier13);
        org.junit.Assert.assertNull(proxy14);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNull(proxy20);
        org.junit.Assert.assertNotNull(hostnameVerifier21);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNotNull(okHttpClient25);
        org.junit.Assert.assertNull(sSLSocketFactory26);
        org.junit.Assert.assertNull(okResponseCache28);
        org.junit.Assert.assertNotNull(okHttpClient30);
        org.junit.Assert.assertNull(proxySelector31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(connectionPool34);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(connectionPool42);
        org.junit.Assert.assertNotNull(okHttpClient44);
        org.junit.Assert.assertNull(proxy45);
        org.junit.Assert.assertNotNull(connectionPool47);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNotNull(connectionPool55);
        org.junit.Assert.assertNotNull(okHttpClient57);
        org.junit.Assert.assertNotNull(connectionPool58);
        org.junit.Assert.assertNotNull(okHttpClient59);
        org.junit.Assert.assertNotNull(connectionPool63);
        org.junit.Assert.assertNull(strList70);
        org.junit.Assert.assertNotNull(connectionPool71);
        org.junit.Assert.assertNotNull(okHttpClient73);
        org.junit.Assert.assertNull(responseCache74);
        org.junit.Assert.assertNull(sSLSocketFactory75);
        org.junit.Assert.assertNull(cookieHandler76);
        org.junit.Assert.assertNull(okAuthenticator77);
        org.junit.Assert.assertNotNull(routeSet78);
        org.junit.Assert.assertNull(hostnameVerifier85);
        org.junit.Assert.assertNull(proxy86);
        org.junit.Assert.assertNotNull(okHttpClient91);
        org.junit.Assert.assertNotNull(okHttpClient93);
        org.junit.Assert.assertNotNull(hostnameVerifier94);
        org.junit.Assert.assertNotNull(okHttpClient96);
    }

    @Test
    public void test12224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12224");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.ResponseCache responseCache5 = null;
        okHttpClient4.responseCache = responseCache5;
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = okHttpClient4.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient4.setFollowProtocolRedirects(false);
        java.net.ProxySelector proxySelector10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient9.setProxySelector(proxySelector10);
        java.net.ProxySelector proxySelector12 = okHttpClient11.proxySelector;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool14 = com.squareup.okhttp.ConnectionPool.getDefault();
        com.squareup.okhttp.Address address15 = null;
        com.squareup.okhttp.Connection connection16 = connectionPool14.get(address15);
        okHttpClient13.connectionPool = connectionPool14;
        int int18 = connectionPool14.getConnectionCount();
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(hostnameVerifier7);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(proxySelector12);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNotNull(connectionPool14);
        org.junit.Assert.assertNull(connection16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
    }

    @Test
    public void test12225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12225");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient0.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.copyWithDefaults();
        java.net.Proxy proxy12 = okHttpClient11.getProxy();
        java.net.CookieHandler cookieHandler13 = null;
        okHttpClient11.cookieHandler = cookieHandler13;
        java.util.List<java.lang.String> strList15 = okHttpClient11.transports;
        boolean boolean16 = okHttpClient11.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient(okHttpClient11);
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient(okHttpClient17);
        java.net.ResponseCache responseCache19 = okHttpClient18.getResponseCache();
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(proxy12);
        org.junit.Assert.assertNotNull(strList15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(responseCache19);
    }

    @Test
    public void test12226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12226");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache1 = okHttpClient0.okResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient2 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier3 = null;
        okHttpClient2.hostnameVerifier = hostnameVerifier3;
        java.net.ResponseCache responseCache5 = null;
        okHttpClient2.responseCache = responseCache5;
        java.util.List<java.lang.String> strList7 = okHttpClient2.transports;
        com.squareup.okhttp.ConnectionPool connectionPool8 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient2.connectionPool = connectionPool8;
        java.net.Proxy proxy10 = null;
        okHttpClient2.proxy = proxy10;
        boolean boolean12 = okHttpClient2.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient2.copyWithDefaults();
        java.net.CookieHandler cookieHandler14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient13.setCookieHandler(cookieHandler14);
        java.util.List<java.lang.String> strList16 = okHttpClient15.transports;
        javax.net.ssl.HostnameVerifier hostnameVerifier17 = okHttpClient15.hostnameVerifier;
        okHttpClient0.hostnameVerifier = hostnameVerifier17;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool20 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient19.connectionPool = connectionPool20;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier23 = null;
        okHttpClient22.hostnameVerifier = hostnameVerifier23;
        java.net.ResponseCache responseCache25 = null;
        okHttpClient22.responseCache = responseCache25;
        java.util.List<java.lang.String> strList27 = okHttpClient22.transports;
        com.squareup.okhttp.ConnectionPool connectionPool28 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient22.connectionPool = connectionPool28;
        com.squareup.okhttp.OkHttpClient okHttpClient30 = okHttpClient19.setConnectionPool(connectionPool28);
        java.net.ResponseCache responseCache31 = okHttpClient19.responseCache;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient19.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient33 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier34 = null;
        okHttpClient33.hostnameVerifier = hostnameVerifier34;
        java.net.ResponseCache responseCache36 = null;
        okHttpClient33.responseCache = responseCache36;
        java.util.List<java.lang.String> strList38 = okHttpClient33.transports;
        com.squareup.okhttp.ConnectionPool connectionPool39 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient33.connectionPool = connectionPool39;
        com.squareup.okhttp.OkHttpClient okHttpClient41 = okHttpClient33.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient42 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier43 = null;
        okHttpClient42.hostnameVerifier = hostnameVerifier43;
        java.net.ResponseCache responseCache45 = null;
        okHttpClient42.responseCache = responseCache45;
        java.util.List<java.lang.String> strList47 = okHttpClient42.transports;
        com.squareup.okhttp.ConnectionPool connectionPool48 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient42.connectionPool = connectionPool48;
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient42.copyWithDefaults();
        java.net.ProxySelector proxySelector51 = okHttpClient50.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory52 = okHttpClient50.getSslSocketFactory();
        okHttpClient33.sslSocketFactory = sSLSocketFactory52;
        okHttpClient32.sslSocketFactory = sSLSocketFactory52;
        java.lang.String[] strArray55 = sSLSocketFactory52.getDefaultCipherSuites();
        java.net.Socket socket56 = sSLSocketFactory52.createSocket();
        java.lang.String[] strArray57 = sSLSocketFactory52.getSupportedCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient58 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory52);
        org.junit.Assert.assertNull(okResponseCache1);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNotNull(connectionPool8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNotNull(hostnameVerifier17);
        org.junit.Assert.assertNotNull(connectionPool20);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNotNull(connectionPool28);
        org.junit.Assert.assertNotNull(okHttpClient30);
        org.junit.Assert.assertNull(responseCache31);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNotNull(connectionPool39);
        org.junit.Assert.assertNotNull(okHttpClient41);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNotNull(connectionPool48);
        org.junit.Assert.assertNotNull(okHttpClient50);
// flaky:         org.junit.Assert.assertNull(proxySelector51);
        org.junit.Assert.assertNotNull(sSLSocketFactory52);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(socket56);
        org.junit.Assert.assertEquals(socket56.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(okHttpClient58);
    }

    @Test
    public void test12227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12227");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.CookieHandler cookieHandler8 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache9 = okHttpClient0.okResponseCache();
        java.net.CookieHandler cookieHandler10 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = okHttpClient11.hostnameVerifier;
        java.util.List<java.lang.String> strList13 = okHttpClient11.transports;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient11.setSSLSocketFactory(sSLSocketFactory14);
        com.squareup.okhttp.ConnectionPool connectionPool16 = okHttpClient11.connectionPool;
        java.net.ResponseCache responseCache17 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient11.setResponseCache(responseCache17);
        okHttpClient18.followProtocolRedirects = true;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier22 = null;
        okHttpClient21.hostnameVerifier = hostnameVerifier22;
        java.net.ResponseCache responseCache24 = null;
        okHttpClient21.responseCache = responseCache24;
        javax.net.ssl.HostnameVerifier hostnameVerifier26 = okHttpClient21.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient21.setFollowProtocolRedirects(false);
        java.net.Proxy proxy29 = okHttpClient21.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = okHttpClient21.getHostnameVerifier();
        java.util.Set<com.squareup.okhttp.Route> routeSet31 = okHttpClient21.failedRoutes;
        com.squareup.okhttp.ConnectionPool connectionPool34 = new com.squareup.okhttp.ConnectionPool((int) '4', (long) (short) 10);
        int int35 = connectionPool34.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient21.setConnectionPool(connectionPool34);
        com.squareup.okhttp.OkHttpClient okHttpClient37 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier38 = null;
        okHttpClient37.hostnameVerifier = hostnameVerifier38;
        java.net.ResponseCache responseCache40 = null;
        okHttpClient37.responseCache = responseCache40;
        javax.net.ssl.HostnameVerifier hostnameVerifier42 = okHttpClient37.hostnameVerifier;
        java.net.Proxy proxy43 = okHttpClient37.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool46 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient37.connectionPool = connectionPool46;
        com.squareup.okhttp.OkHttpClient okHttpClient48 = okHttpClient37.copyWithDefaults();
        java.net.CookieHandler cookieHandler49 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient48.setCookieHandler(cookieHandler49);
        java.util.List<java.lang.String> strList51 = okHttpClient48.getTransports();
        okHttpClient21.transports = strList51;
        com.squareup.okhttp.OkHttpClient okHttpClient53 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier54 = null;
        okHttpClient53.hostnameVerifier = hostnameVerifier54;
        java.net.ResponseCache responseCache56 = null;
        okHttpClient53.responseCache = responseCache56;
        javax.net.ssl.HostnameVerifier hostnameVerifier58 = okHttpClient53.hostnameVerifier;
        java.net.Proxy proxy59 = okHttpClient53.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool62 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient53.connectionPool = connectionPool62;
        com.squareup.okhttp.OkHttpClient okHttpClient64 = okHttpClient53.copyWithDefaults();
        java.util.List<java.lang.String> strList65 = okHttpClient53.getTransports();
        com.squareup.okhttp.OkHttpClient okHttpClient66 = okHttpClient53.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient67 = new com.squareup.okhttp.OkHttpClient(okHttpClient53);
        com.squareup.okhttp.OkHttpClient okHttpClient68 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier69 = null;
        okHttpClient68.hostnameVerifier = hostnameVerifier69;
        java.net.ResponseCache responseCache71 = null;
        okHttpClient68.responseCache = responseCache71;
        java.util.List<java.lang.String> strList73 = okHttpClient68.transports;
        java.net.Proxy proxy74 = java.net.Proxy.NO_PROXY;
        boolean boolean76 = proxy74.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type77 = proxy74.type();
        java.net.SocketAddress socketAddress78 = proxy74.address();
        com.squareup.okhttp.OkHttpClient okHttpClient79 = okHttpClient68.setProxy(proxy74);
        javax.net.ssl.HostnameVerifier hostnameVerifier80 = okHttpClient79.hostnameVerifier;
        java.net.Proxy proxy81 = java.net.Proxy.NO_PROXY;
        boolean boolean83 = proxy81.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type84 = proxy81.type();
        java.lang.String str85 = proxy81.toString();
        com.squareup.okhttp.OkHttpClient okHttpClient86 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier87 = null;
        okHttpClient86.hostnameVerifier = hostnameVerifier87;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory89 = okHttpClient86.getSslSocketFactory();
        boolean boolean90 = proxy81.equals((java.lang.Object) okHttpClient86);
        java.lang.String str91 = proxy81.toString();
        java.net.Proxy.Type type92 = proxy81.type();
        com.squareup.okhttp.OkHttpClient okHttpClient93 = okHttpClient79.setProxy(proxy81);
        okHttpClient67.proxy = proxy81;
        com.squareup.okhttp.OkHttpClient okHttpClient95 = okHttpClient21.setProxy(proxy81);
        java.net.Proxy proxy96 = okHttpClient95.proxy;
        java.net.Proxy.Type type97 = proxy96.type();
        com.squareup.okhttp.OkHttpClient okHttpClient98 = okHttpClient18.setProxy(proxy96);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNull(cookieHandler8);
        org.junit.Assert.assertNull(okResponseCache9);
        org.junit.Assert.assertNull(cookieHandler10);
        org.junit.Assert.assertNull(hostnameVerifier12);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNull(connectionPool16);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNull(hostnameVerifier26);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNull(proxy29);
        org.junit.Assert.assertNull(hostnameVerifier30);
        org.junit.Assert.assertNotNull(routeSet31);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNull(hostnameVerifier42);
        org.junit.Assert.assertNull(proxy43);
        org.junit.Assert.assertNotNull(okHttpClient48);
        org.junit.Assert.assertNotNull(okHttpClient50);
        org.junit.Assert.assertNotNull(strList51);
        org.junit.Assert.assertNull(hostnameVerifier58);
        org.junit.Assert.assertNull(proxy59);
        org.junit.Assert.assertNotNull(okHttpClient64);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNotNull(okHttpClient66);
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertNotNull(proxy74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + type77 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type77.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress78);
        org.junit.Assert.assertNotNull(okHttpClient79);
        org.junit.Assert.assertNull(hostnameVerifier80);
        org.junit.Assert.assertNotNull(proxy81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + type84 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type84.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "DIRECT" + "'", str85, "DIRECT");
        org.junit.Assert.assertNull(sSLSocketFactory89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "DIRECT" + "'", str91, "DIRECT");
        org.junit.Assert.assertTrue("'" + type92 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type92.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNotNull(okHttpClient93);
        org.junit.Assert.assertNotNull(okHttpClient95);
        org.junit.Assert.assertNotNull(proxy96);
        org.junit.Assert.assertTrue("'" + type97 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type97.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNotNull(okHttpClient98);
    }

    @Test
    public void test12228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12228");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        java.net.CookieHandler cookieHandler6 = okHttpClient0.getCookieHandler();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory7 = okHttpClient0.getSslSocketFactory();
        java.net.CookieHandler cookieHandler8 = null;
        okHttpClient0.cookieHandler = cookieHandler8;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier11 = null;
        okHttpClient10.hostnameVerifier = hostnameVerifier11;
        java.net.ResponseCache responseCache13 = null;
        okHttpClient10.responseCache = responseCache13;
        java.util.List<java.lang.String> strList15 = okHttpClient10.transports;
        com.squareup.okhttp.ConnectionPool connectionPool16 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient10.connectionPool = connectionPool16;
        java.net.CookieHandler cookieHandler18 = okHttpClient10.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache19 = okHttpClient10.okResponseCache();
        java.net.CookieHandler cookieHandler20 = okHttpClient10.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient21 = new com.squareup.okhttp.OkHttpClient(okHttpClient10);
        java.net.Proxy proxy22 = java.net.Proxy.NO_PROXY;
        boolean boolean24 = proxy22.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type25 = proxy22.type();
        java.net.SocketAddress socketAddress26 = proxy22.address();
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient10.setProxy(proxy22);
        java.net.ResponseCache responseCache28 = null;
        okHttpClient10.responseCache = responseCache28;
        boolean boolean30 = okHttpClient10.getFollowProtocolRedirects();
        java.net.Proxy proxy31 = okHttpClient10.getProxy();
        okHttpClient0.proxy = proxy31;
        com.squareup.okhttp.OkHttpClient okHttpClient33 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier34 = null;
        okHttpClient33.hostnameVerifier = hostnameVerifier34;
        java.net.ProxySelector proxySelector36 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient33.setProxySelector(proxySelector36);
        java.net.CookieHandler cookieHandler38 = okHttpClient33.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient39 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier40 = null;
        okHttpClient39.hostnameVerifier = hostnameVerifier40;
        java.net.ResponseCache responseCache42 = null;
        okHttpClient39.responseCache = responseCache42;
        java.util.List<java.lang.String> strList44 = okHttpClient39.transports;
        com.squareup.okhttp.ConnectionPool connectionPool45 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient39.connectionPool = connectionPool45;
        java.net.Proxy proxy47 = null;
        okHttpClient39.proxy = proxy47;
        java.util.Set<com.squareup.okhttp.Route> routeSet49 = okHttpClient39.failedRoutes;
        okHttpClient33.failedRoutes = routeSet49;
        javax.net.ssl.HostnameVerifier hostnameVerifier51 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient52 = okHttpClient33.setHostnameVerifier(hostnameVerifier51);
        java.net.ProxySelector proxySelector53 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient54 = okHttpClient52.setProxySelector(proxySelector53);
        java.net.ResponseCache responseCache55 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient56 = okHttpClient52.setResponseCache(responseCache55);
        com.squareup.okhttp.Route[] routeArray57 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet58 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet58, routeArray57);
        okHttpClient56.failedRoutes = routeSet58;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory61 = okHttpClient56.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient62 = okHttpClient56.copyWithDefaults();
        java.net.ProxySelector proxySelector63 = okHttpClient62.proxySelector;
        java.util.List<java.lang.String> strList64 = okHttpClient62.transports;
        // The following exception was thrown during execution in test generation
        try {
            com.squareup.okhttp.OkHttpClient okHttpClient65 = okHttpClient0.setTransports(strList64);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: transports doesn't contain http/1.1: [hi!]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNull(cookieHandler6);
        org.junit.Assert.assertNull(sSLSocketFactory7);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(connectionPool16);
        org.junit.Assert.assertNull(cookieHandler18);
        org.junit.Assert.assertNull(okResponseCache19);
        org.junit.Assert.assertNull(cookieHandler20);
        org.junit.Assert.assertNotNull(proxy22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + type25 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type25.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress26);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(proxy31);
        org.junit.Assert.assertNotNull(okHttpClient37);
        org.junit.Assert.assertNull(cookieHandler38);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNotNull(connectionPool45);
        org.junit.Assert.assertNotNull(routeSet49);
        org.junit.Assert.assertNotNull(okHttpClient52);
        org.junit.Assert.assertNotNull(okHttpClient54);
        org.junit.Assert.assertNotNull(okHttpClient56);
        org.junit.Assert.assertNotNull(routeArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(sSLSocketFactory61);
        org.junit.Assert.assertNotNull(okHttpClient62);
// flaky:         org.junit.Assert.assertNull(proxySelector63);
        org.junit.Assert.assertNotNull(strList64);
    }

    @Test
    public void test12229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12229");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.ResponseCache responseCache5 = null;
        okHttpClient4.responseCache = responseCache5;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = null;
        okHttpClient7.hostnameVerifier = hostnameVerifier8;
        java.net.ResponseCache responseCache10 = null;
        okHttpClient7.responseCache = responseCache10;
        java.util.List<java.lang.String> strList12 = okHttpClient7.transports;
        com.squareup.okhttp.ConnectionPool connectionPool13 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient7.connectionPool = connectionPool13;
        java.net.CookieHandler cookieHandler15 = okHttpClient7.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache16 = okHttpClient7.okResponseCache();
        java.net.CookieHandler cookieHandler17 = okHttpClient7.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient(okHttpClient7);
        java.net.Proxy proxy19 = java.net.Proxy.NO_PROXY;
        boolean boolean21 = proxy19.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type22 = proxy19.type();
        java.net.SocketAddress socketAddress23 = proxy19.address();
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient7.setProxy(proxy19);
        com.squareup.okhttp.OkHttpClient okHttpClient25 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier26 = null;
        okHttpClient25.hostnameVerifier = hostnameVerifier26;
        java.net.ResponseCache responseCache28 = null;
        okHttpClient25.responseCache = responseCache28;
        java.util.List<java.lang.String> strList30 = okHttpClient25.transports;
        com.squareup.okhttp.ConnectionPool connectionPool31 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient25.connectionPool = connectionPool31;
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient25.copyWithDefaults();
        java.net.ProxySelector proxySelector34 = okHttpClient33.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory35 = okHttpClient33.getSslSocketFactory();
        okHttpClient24.sslSocketFactory = sSLSocketFactory35;
        java.lang.String[] strArray37 = sSLSocketFactory35.getDefaultCipherSuites();
        java.lang.String[] strArray38 = sSLSocketFactory35.getSupportedCipherSuites();
        java.net.Socket socket39 = sSLSocketFactory35.createSocket();
        okHttpClient4.sslSocketFactory = sSLSocketFactory35;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory41 = okHttpClient4.sslSocketFactory;
        com.squareup.okhttp.OkHttpClient okHttpClient42 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier43 = null;
        okHttpClient42.hostnameVerifier = hostnameVerifier43;
        java.net.ResponseCache responseCache45 = null;
        okHttpClient42.responseCache = responseCache45;
        java.util.List<java.lang.String> strList47 = okHttpClient42.transports;
        java.net.Proxy proxy48 = java.net.Proxy.NO_PROXY;
        boolean boolean50 = proxy48.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type51 = proxy48.type();
        java.net.SocketAddress socketAddress52 = proxy48.address();
        com.squareup.okhttp.OkHttpClient okHttpClient53 = okHttpClient42.setProxy(proxy48);
        java.net.SocketAddress socketAddress54 = proxy48.address();
        java.net.Proxy.Type type55 = proxy48.type();
        com.squareup.okhttp.OkHttpClient okHttpClient56 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier57 = null;
        okHttpClient56.hostnameVerifier = hostnameVerifier57;
        java.net.ProxySelector proxySelector59 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient60 = okHttpClient56.setProxySelector(proxySelector59);
        java.net.Proxy proxy61 = okHttpClient60.getProxy();
        java.util.List<java.lang.String> strList62 = okHttpClient60.getTransports();
        java.net.ResponseCache responseCache63 = null;
        okHttpClient60.responseCache = responseCache63;
        boolean boolean65 = proxy48.equals((java.lang.Object) responseCache63);
        okHttpClient4.proxy = proxy48;
        java.lang.String str67 = proxy48.toString();
        java.lang.Object obj68 = null;
        boolean boolean69 = proxy48.equals(obj68);
        java.net.Proxy.Type type70 = proxy48.type();
        java.net.SocketAddress socketAddress71 = proxy48.address();
        com.squareup.okhttp.OkHttpClient okHttpClient72 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache73 = okHttpClient72.okResponseCache();
        java.net.ResponseCache responseCache74 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient75 = okHttpClient72.setResponseCache(responseCache74);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory76 = okHttpClient72.sslSocketFactory;
        java.util.List<java.lang.String> strList77 = okHttpClient72.transports;
        boolean boolean78 = okHttpClient72.getFollowProtocolRedirects();
        boolean boolean79 = proxy48.equals((java.lang.Object) boolean78);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(connectionPool13);
        org.junit.Assert.assertNull(cookieHandler15);
        org.junit.Assert.assertNull(okResponseCache16);
        org.junit.Assert.assertNull(cookieHandler17);
        org.junit.Assert.assertNotNull(proxy19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + type22 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type22.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress23);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNotNull(connectionPool31);
        org.junit.Assert.assertNotNull(okHttpClient33);
// flaky:         org.junit.Assert.assertNull(proxySelector34);
        org.junit.Assert.assertNotNull(sSLSocketFactory35);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(socket39);
        org.junit.Assert.assertEquals(socket39.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(sSLSocketFactory41);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNotNull(proxy48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + type51 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type51.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress52);
        org.junit.Assert.assertNotNull(okHttpClient53);
        org.junit.Assert.assertNull(socketAddress54);
        org.junit.Assert.assertTrue("'" + type55 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type55.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNotNull(okHttpClient60);
        org.junit.Assert.assertNull(proxy61);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "DIRECT" + "'", str67, "DIRECT");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + type70 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type70.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress71);
        org.junit.Assert.assertNull(okResponseCache73);
        org.junit.Assert.assertNotNull(okHttpClient75);
        org.junit.Assert.assertNull(sSLSocketFactory76);
        org.junit.Assert.assertNull(strList77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test12230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12230");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        java.net.ResponseCache responseCache12 = okHttpClient0.responseCache;
        java.net.ResponseCache responseCache13 = okHttpClient0.getResponseCache();
        java.net.ResponseCache responseCache14 = okHttpClient0.responseCache;
        java.net.ResponseCache responseCache15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient0.setResponseCache(responseCache15);
        com.squareup.okhttp.ConnectionPool connectionPool19 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) '#');
        okHttpClient16.connectionPool = connectionPool19;
        java.net.CookieHandler cookieHandler21 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient16.setCookieHandler(cookieHandler21);
        com.squareup.okhttp.OkHttpClient okHttpClient23 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier24 = null;
        okHttpClient23.hostnameVerifier = hostnameVerifier24;
        java.net.ProxySelector proxySelector26 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient23.setProxySelector(proxySelector26);
        java.net.ResponseCache responseCache28 = null;
        okHttpClient27.responseCache = responseCache28;
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = okHttpClient27.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient27.setFollowProtocolRedirects(false);
        java.net.ResponseCache responseCache33 = okHttpClient32.responseCache;
        com.squareup.okhttp.ConnectionPool connectionPool36 = new com.squareup.okhttp.ConnectionPool(0, (long) (short) 10);
        connectionPool36.evictAll();
        com.squareup.okhttp.Address address38 = null;
        com.squareup.okhttp.Connection connection39 = connectionPool36.get(address38);
        okHttpClient32.connectionPool = connectionPool36;
        com.squareup.okhttp.ConnectionPool connectionPool41 = okHttpClient32.getConnectionPool();
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient32.copyWithDefaults();
        java.net.ResponseCache responseCache43 = null;
        okHttpClient42.responseCache = responseCache43;
        java.util.List<java.lang.String> strList45 = okHttpClient42.transports;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory46 = okHttpClient42.sslSocketFactory;
        okHttpClient22.sslSocketFactory = sSLSocketFactory46;
        java.net.InetAddress inetAddress50 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket52 = sSLSocketFactory46.createSocket("DIRECT", 0, inetAddress50, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.net.BindException; message: Permission denied (Bind failed)");
        } catch (java.net.BindException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(responseCache12);
        org.junit.Assert.assertNull(responseCache13);
        org.junit.Assert.assertNull(responseCache14);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNull(hostnameVerifier30);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertNull(responseCache33);
        org.junit.Assert.assertNull(connection39);
        org.junit.Assert.assertNotNull(connectionPool41);
        org.junit.Assert.assertNotNull(okHttpClient42);
        org.junit.Assert.assertNotNull(strList45);
        org.junit.Assert.assertNotNull(sSLSocketFactory46);
    }

    @Test
    public void test12231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12231");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient0.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.copyWithDefaults();
        java.net.ResponseCache responseCache12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setResponseCache(responseCache12);
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = okHttpClient13.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient13.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient16 = new com.squareup.okhttp.OkHttpClient(okHttpClient15);
        com.squareup.okhttp.OkAuthenticator okAuthenticator17 = okHttpClient16.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool19 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient18.connectionPool = connectionPool19;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier22 = null;
        okHttpClient21.hostnameVerifier = hostnameVerifier22;
        java.net.ResponseCache responseCache24 = null;
        okHttpClient21.responseCache = responseCache24;
        java.util.List<java.lang.String> strList26 = okHttpClient21.transports;
        com.squareup.okhttp.ConnectionPool connectionPool27 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient21.connectionPool = connectionPool27;
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient18.setConnectionPool(connectionPool27);
        java.net.Proxy proxy30 = okHttpClient29.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool32 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient31.connectionPool = connectionPool32;
        int int34 = connectionPool32.getSpdyConnectionCount();
        okHttpClient29.connectionPool = connectionPool32;
        int int36 = connectionPool32.getSpdyConnectionCount();
        int int37 = connectionPool32.getConnectionCount();
        com.squareup.okhttp.Address address38 = null;
        com.squareup.okhttp.Connection connection39 = connectionPool32.get(address38);
        com.squareup.okhttp.OkHttpClient okHttpClient40 = okHttpClient16.setConnectionPool(connectionPool32);
        com.squareup.okhttp.OkAuthenticator okAuthenticator41 = okHttpClient40.getAuthenticator();
        java.net.ProxySelector proxySelector42 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient43 = okHttpClient40.setProxySelector(proxySelector42);
        com.squareup.okhttp.ConnectionPool connectionPool46 = new com.squareup.okhttp.ConnectionPool((int) (short) 1, 10L);
        okHttpClient40.connectionPool = connectionPool46;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory48 = okHttpClient40.getSslSocketFactory();
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNotNull(hostnameVerifier14);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNull(okAuthenticator17);
        org.junit.Assert.assertNotNull(connectionPool19);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNotNull(connectionPool27);
        org.junit.Assert.assertNotNull(okHttpClient29);
        org.junit.Assert.assertNull(proxy30);
        org.junit.Assert.assertNotNull(connectionPool32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNull(connection39);
        org.junit.Assert.assertNotNull(okHttpClient40);
        org.junit.Assert.assertNull(okAuthenticator41);
        org.junit.Assert.assertNotNull(okHttpClient43);
        org.junit.Assert.assertNull(sSLSocketFactory48);
    }

    @Test
    public void test12232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12232");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache1 = okHttpClient0.okResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient2 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache3 = okHttpClient2.okResponseCache();
        java.net.ResponseCache responseCache4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient2.setResponseCache(responseCache4);
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList8 = new java.util.ArrayList<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList8, strArray7);
        okHttpClient2.transports = strList8;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient2.setSSLSocketFactory(sSLSocketFactory11);
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = null;
        okHttpClient13.hostnameVerifier = hostnameVerifier14;
        java.net.ResponseCache responseCache16 = null;
        okHttpClient13.responseCache = responseCache16;
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = okHttpClient13.hostnameVerifier;
        java.net.Proxy proxy19 = okHttpClient13.getProxy();
        java.net.CookieHandler cookieHandler20 = null;
        okHttpClient13.cookieHandler = cookieHandler20;
        okHttpClient13.followProtocolRedirects = true;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier25 = null;
        okHttpClient24.hostnameVerifier = hostnameVerifier25;
        java.net.ResponseCache responseCache27 = null;
        okHttpClient24.responseCache = responseCache27;
        javax.net.ssl.HostnameVerifier hostnameVerifier29 = okHttpClient24.hostnameVerifier;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory30 = okHttpClient24.sslSocketFactory;
        java.net.CookieHandler cookieHandler31 = okHttpClient24.cookieHandler;
        javax.net.ssl.HostnameVerifier hostnameVerifier32 = okHttpClient24.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient33 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool34 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient33.connectionPool = connectionPool34;
        com.squareup.okhttp.OkAuthenticator okAuthenticator36 = null;
        okHttpClient33.authenticator = okAuthenticator36;
        java.util.List<java.lang.String> strList38 = okHttpClient33.transports;
        java.net.ResponseCache responseCache39 = null;
        okHttpClient33.responseCache = responseCache39;
        com.squareup.okhttp.OkHttpClient okHttpClient41 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier42 = null;
        okHttpClient41.hostnameVerifier = hostnameVerifier42;
        java.net.ResponseCache responseCache44 = null;
        okHttpClient41.responseCache = responseCache44;
        javax.net.ssl.HostnameVerifier hostnameVerifier46 = okHttpClient41.hostnameVerifier;
        java.net.Proxy proxy47 = okHttpClient41.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool50 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient41.connectionPool = connectionPool50;
        com.squareup.okhttp.OkHttpClient okHttpClient52 = okHttpClient41.copyWithDefaults();
        java.net.Proxy proxy53 = okHttpClient52.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier54 = okHttpClient52.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient55 = okHttpClient33.setHostnameVerifier(hostnameVerifier54);
        com.squareup.okhttp.OkHttpClient okHttpClient56 = okHttpClient24.setHostnameVerifier(hostnameVerifier54);
        okHttpClient13.hostnameVerifier = hostnameVerifier54;
        com.squareup.okhttp.OkHttpClient okHttpClient58 = okHttpClient2.setHostnameVerifier(hostnameVerifier54);
        com.squareup.okhttp.OkHttpClient okHttpClient59 = okHttpClient0.setHostnameVerifier(hostnameVerifier54);
        java.net.ProxySelector proxySelector60 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient61 = okHttpClient0.setProxySelector(proxySelector60);
        com.squareup.okhttp.ConnectionPool connectionPool62 = okHttpClient61.connectionPool;
        com.squareup.okhttp.OkHttpClient okHttpClient63 = okHttpClient61.copyWithDefaults();
        org.junit.Assert.assertNull(okResponseCache1);
        org.junit.Assert.assertNull(okResponseCache3);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertNull(hostnameVerifier18);
        org.junit.Assert.assertNull(proxy19);
        org.junit.Assert.assertNull(hostnameVerifier29);
        org.junit.Assert.assertNull(sSLSocketFactory30);
        org.junit.Assert.assertNull(cookieHandler31);
        org.junit.Assert.assertNull(hostnameVerifier32);
        org.junit.Assert.assertNotNull(connectionPool34);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNull(hostnameVerifier46);
        org.junit.Assert.assertNull(proxy47);
        org.junit.Assert.assertNotNull(okHttpClient52);
        org.junit.Assert.assertNull(proxy53);
        org.junit.Assert.assertNotNull(hostnameVerifier54);
        org.junit.Assert.assertNotNull(okHttpClient55);
        org.junit.Assert.assertNotNull(okHttpClient56);
        org.junit.Assert.assertNotNull(okHttpClient58);
        org.junit.Assert.assertNotNull(okHttpClient59);
        org.junit.Assert.assertNotNull(okHttpClient61);
        org.junit.Assert.assertNull(connectionPool62);
        org.junit.Assert.assertNotNull(okHttpClient63);
    }

    @Test
    public void test12233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12233");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        java.net.Proxy proxy12 = okHttpClient11.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool14 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient13.connectionPool = connectionPool14;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier17 = null;
        okHttpClient16.hostnameVerifier = hostnameVerifier17;
        java.net.ResponseCache responseCache19 = null;
        okHttpClient16.responseCache = responseCache19;
        java.util.List<java.lang.String> strList21 = okHttpClient16.transports;
        com.squareup.okhttp.ConnectionPool connectionPool22 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient16.connectionPool = connectionPool22;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient13.setConnectionPool(connectionPool22);
        com.squareup.okhttp.ConnectionPool connectionPool25 = okHttpClient13.connectionPool;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient11.setConnectionPool(connectionPool25);
        com.squareup.okhttp.OkHttpClient okHttpClient27 = new com.squareup.okhttp.OkHttpClient(okHttpClient26);
        com.squareup.okhttp.ConnectionPool connectionPool30 = new com.squareup.okhttp.ConnectionPool((int) '#', (long) 100);
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient26.setConnectionPool(connectionPool30);
        java.net.CookieHandler cookieHandler32 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient31.setCookieHandler(cookieHandler32);
        com.squareup.okhttp.ConnectionPool connectionPool34 = okHttpClient33.getConnectionPool();
        int int35 = connectionPool34.getSpdyConnectionCount();
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(proxy12);
        org.junit.Assert.assertNotNull(connectionPool14);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(connectionPool22);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNotNull(connectionPool25);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNotNull(okHttpClient33);
        org.junit.Assert.assertNotNull(connectionPool34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
    }

    @Test
    public void test12234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12234");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient4.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient5.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = null;
        okHttpClient7.hostnameVerifier = hostnameVerifier8;
        java.net.ProxySelector proxySelector10 = okHttpClient7.proxySelector;
        java.net.Proxy proxy11 = okHttpClient7.proxy;
        java.util.List<java.lang.String> strList12 = okHttpClient7.transports;
        boolean boolean13 = okHttpClient7.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool15 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient14.connectionPool = connectionPool15;
        java.net.ResponseCache responseCache17 = null;
        okHttpClient14.responseCache = responseCache17;
        java.net.Proxy proxy19 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress20 = proxy19.address();
        java.net.SocketAddress socketAddress21 = proxy19.address();
        okHttpClient14.proxy = proxy19;
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient7.setProxy(proxy19);
        okHttpClient5.proxy = proxy19;
        java.net.ProxySelector proxySelector25 = okHttpClient5.proxySelector;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier27 = null;
        okHttpClient26.hostnameVerifier = hostnameVerifier27;
        java.net.ResponseCache responseCache29 = null;
        okHttpClient26.responseCache = responseCache29;
        java.util.List<java.lang.String> strList31 = okHttpClient26.transports;
        com.squareup.okhttp.ConnectionPool connectionPool32 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient26.connectionPool = connectionPool32;
        java.net.Proxy proxy34 = null;
        okHttpClient26.proxy = proxy34;
        boolean boolean36 = okHttpClient26.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient37 = new com.squareup.okhttp.OkHttpClient(okHttpClient26);
        java.net.ProxySelector proxySelector38 = okHttpClient37.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier39 = okHttpClient37.hostnameVerifier;
        java.net.Proxy proxy40 = java.net.Proxy.NO_PROXY;
        boolean boolean42 = proxy40.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type43 = proxy40.type();
        java.net.Proxy.Type type44 = proxy40.type();
        okHttpClient37.proxy = proxy40;
        com.squareup.okhttp.OkHttpClient okHttpClient46 = okHttpClient5.setProxy(proxy40);
        com.squareup.okhttp.OkHttpClient okHttpClient47 = okHttpClient46.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient48 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier49 = null;
        okHttpClient48.hostnameVerifier = hostnameVerifier49;
        java.net.ResponseCache responseCache51 = null;
        okHttpClient48.responseCache = responseCache51;
        java.util.List<java.lang.String> strList53 = okHttpClient48.transports;
        com.squareup.okhttp.ConnectionPool connectionPool54 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient48.connectionPool = connectionPool54;
        java.net.Proxy proxy56 = null;
        okHttpClient48.proxy = proxy56;
        boolean boolean58 = okHttpClient48.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient59 = okHttpClient48.copyWithDefaults();
        java.net.CookieHandler cookieHandler60 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient61 = okHttpClient59.setCookieHandler(cookieHandler60);
        java.net.Proxy proxy62 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient63 = okHttpClient59.setProxy(proxy62);
        okHttpClient59.followProtocolRedirects = true;
        com.squareup.okhttp.OkHttpClient okHttpClient66 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier67 = null;
        okHttpClient66.hostnameVerifier = hostnameVerifier67;
        java.net.ResponseCache responseCache69 = null;
        okHttpClient66.responseCache = responseCache69;
        javax.net.ssl.HostnameVerifier hostnameVerifier71 = okHttpClient66.hostnameVerifier;
        java.net.Proxy proxy72 = okHttpClient66.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool75 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient66.connectionPool = connectionPool75;
        com.squareup.okhttp.OkHttpClient okHttpClient77 = okHttpClient66.copyWithDefaults();
        java.net.ResponseCache responseCache78 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient79 = okHttpClient77.setResponseCache(responseCache78);
        com.squareup.okhttp.OkHttpClient okHttpClient81 = okHttpClient79.setFollowProtocolRedirects(false);
        com.squareup.okhttp.ConnectionPool connectionPool82 = okHttpClient79.connectionPool;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory83 = okHttpClient79.getSslSocketFactory();
        okHttpClient59.sslSocketFactory = sSLSocketFactory83;
        com.squareup.okhttp.ConnectionPool connectionPool85 = okHttpClient59.connectionPool;
        java.net.Proxy proxy86 = okHttpClient59.proxy;
        java.net.Proxy.Type type87 = proxy86.type();
        okHttpClient47.proxy = proxy86;
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNotNull(okHttpClient6);
        org.junit.Assert.assertNull(proxySelector10);
        org.junit.Assert.assertNull(proxy11);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(connectionPool15);
        org.junit.Assert.assertNotNull(proxy19);
        org.junit.Assert.assertNull(socketAddress20);
        org.junit.Assert.assertNull(socketAddress21);
        org.junit.Assert.assertNotNull(okHttpClient23);
// flaky:         org.junit.Assert.assertNull(proxySelector25);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNotNull(connectionPool32);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(proxySelector38);
        org.junit.Assert.assertNull(hostnameVerifier39);
        org.junit.Assert.assertNotNull(proxy40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + type43 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type43.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertTrue("'" + type44 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type44.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNotNull(okHttpClient46);
        org.junit.Assert.assertNotNull(okHttpClient47);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNotNull(connectionPool54);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(okHttpClient59);
        org.junit.Assert.assertNotNull(okHttpClient61);
        org.junit.Assert.assertNotNull(proxy62);
        org.junit.Assert.assertNotNull(okHttpClient63);
        org.junit.Assert.assertNull(hostnameVerifier71);
        org.junit.Assert.assertNull(proxy72);
        org.junit.Assert.assertNotNull(okHttpClient77);
        org.junit.Assert.assertNotNull(okHttpClient79);
        org.junit.Assert.assertNotNull(okHttpClient81);
        org.junit.Assert.assertNotNull(connectionPool82);
        org.junit.Assert.assertNotNull(sSLSocketFactory83);
        org.junit.Assert.assertNotNull(connectionPool85);
        org.junit.Assert.assertNotNull(proxy86);
        org.junit.Assert.assertTrue("'" + type87 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type87.equals(java.net.Proxy.Type.DIRECT));
    }

    @Test
    public void test12235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12235");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.ResponseCache responseCache5 = null;
        okHttpClient4.responseCache = responseCache5;
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = okHttpClient4.hostnameVerifier;
        java.util.Set<com.squareup.okhttp.Route> routeSet8 = okHttpClient4.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier10 = null;
        okHttpClient9.hostnameVerifier = hostnameVerifier10;
        java.net.ProxySelector proxySelector12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient9.setProxySelector(proxySelector12);
        java.net.ResponseCache responseCache14 = null;
        okHttpClient13.responseCache = responseCache14;
        javax.net.ssl.HostnameVerifier hostnameVerifier16 = okHttpClient13.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient13.setFollowProtocolRedirects(false);
        java.net.ProxySelector proxySelector19 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient18.setProxySelector(proxySelector19);
        java.net.ProxySelector proxySelector21 = okHttpClient20.proxySelector;
        java.net.ProxySelector proxySelector22 = okHttpClient20.getProxySelector();
        com.squareup.okhttp.ConnectionPool connectionPool23 = okHttpClient20.connectionPool;
        java.net.Proxy proxy24 = java.net.Proxy.NO_PROXY;
        boolean boolean26 = proxy24.equals((java.lang.Object) 1L);
        java.net.SocketAddress socketAddress27 = proxy24.address();
        java.net.SocketAddress socketAddress28 = proxy24.address();
        com.squareup.okhttp.OkHttpClient okHttpClient29 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = null;
        okHttpClient29.hostnameVerifier = hostnameVerifier30;
        java.net.ResponseCache responseCache32 = null;
        okHttpClient29.responseCache = responseCache32;
        javax.net.ssl.HostnameVerifier hostnameVerifier34 = okHttpClient29.hostnameVerifier;
        java.net.Proxy proxy35 = okHttpClient29.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool38 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient29.connectionPool = connectionPool38;
        java.util.List<java.lang.String> strList40 = okHttpClient29.transports;
        boolean boolean41 = proxy24.equals((java.lang.Object) okHttpClient29);
        okHttpClient20.proxy = proxy24;
        com.squareup.okhttp.OkHttpClient okHttpClient43 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier44 = null;
        okHttpClient43.hostnameVerifier = hostnameVerifier44;
        java.net.ResponseCache responseCache46 = null;
        okHttpClient43.responseCache = responseCache46;
        java.util.List<java.lang.String> strList48 = okHttpClient43.transports;
        com.squareup.okhttp.ConnectionPool connectionPool49 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient43.connectionPool = connectionPool49;
        com.squareup.okhttp.ConnectionPool connectionPool51 = okHttpClient43.connectionPool;
        boolean boolean52 = okHttpClient43.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient53 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier54 = null;
        okHttpClient53.hostnameVerifier = hostnameVerifier54;
        java.net.ResponseCache responseCache56 = null;
        okHttpClient53.responseCache = responseCache56;
        javax.net.ssl.HostnameVerifier hostnameVerifier58 = okHttpClient53.hostnameVerifier;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory59 = okHttpClient53.sslSocketFactory;
        java.net.CookieHandler cookieHandler60 = okHttpClient53.cookieHandler;
        javax.net.ssl.HostnameVerifier hostnameVerifier61 = okHttpClient53.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient62 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool63 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient62.connectionPool = connectionPool63;
        com.squareup.okhttp.OkAuthenticator okAuthenticator65 = null;
        okHttpClient62.authenticator = okAuthenticator65;
        java.util.List<java.lang.String> strList67 = okHttpClient62.transports;
        java.net.ResponseCache responseCache68 = null;
        okHttpClient62.responseCache = responseCache68;
        com.squareup.okhttp.OkHttpClient okHttpClient70 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier71 = null;
        okHttpClient70.hostnameVerifier = hostnameVerifier71;
        java.net.ResponseCache responseCache73 = null;
        okHttpClient70.responseCache = responseCache73;
        javax.net.ssl.HostnameVerifier hostnameVerifier75 = okHttpClient70.hostnameVerifier;
        java.net.Proxy proxy76 = okHttpClient70.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool79 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient70.connectionPool = connectionPool79;
        com.squareup.okhttp.OkHttpClient okHttpClient81 = okHttpClient70.copyWithDefaults();
        java.net.Proxy proxy82 = okHttpClient81.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier83 = okHttpClient81.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient84 = okHttpClient62.setHostnameVerifier(hostnameVerifier83);
        com.squareup.okhttp.OkHttpClient okHttpClient85 = okHttpClient53.setHostnameVerifier(hostnameVerifier83);
        com.squareup.okhttp.OkHttpClient okHttpClient86 = okHttpClient43.setHostnameVerifier(hostnameVerifier83);
        com.squareup.okhttp.ConnectionPool connectionPool87 = okHttpClient43.getConnectionPool();
        javax.net.ssl.HostnameVerifier hostnameVerifier88 = okHttpClient43.hostnameVerifier;
        okHttpClient20.hostnameVerifier = hostnameVerifier88;
        com.squareup.okhttp.OkHttpClient okHttpClient90 = okHttpClient4.setHostnameVerifier(hostnameVerifier88);
        okHttpClient90.followProtocolRedirects = false;
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(hostnameVerifier7);
        org.junit.Assert.assertNotNull(routeSet8);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNull(hostnameVerifier16);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNull(proxySelector21);
        org.junit.Assert.assertNull(proxySelector22);
        org.junit.Assert.assertNull(connectionPool23);
        org.junit.Assert.assertNotNull(proxy24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(socketAddress27);
        org.junit.Assert.assertNull(socketAddress28);
        org.junit.Assert.assertNull(hostnameVerifier34);
        org.junit.Assert.assertNull(proxy35);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNotNull(connectionPool49);
        org.junit.Assert.assertNotNull(connectionPool51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(hostnameVerifier58);
        org.junit.Assert.assertNull(sSLSocketFactory59);
        org.junit.Assert.assertNull(cookieHandler60);
        org.junit.Assert.assertNull(hostnameVerifier61);
        org.junit.Assert.assertNotNull(connectionPool63);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNull(hostnameVerifier75);
        org.junit.Assert.assertNull(proxy76);
        org.junit.Assert.assertNotNull(okHttpClient81);
        org.junit.Assert.assertNull(proxy82);
        org.junit.Assert.assertNotNull(hostnameVerifier83);
        org.junit.Assert.assertNotNull(okHttpClient84);
        org.junit.Assert.assertNotNull(okHttpClient85);
        org.junit.Assert.assertNotNull(okHttpClient86);
        org.junit.Assert.assertNotNull(connectionPool87);
        org.junit.Assert.assertNotNull(hostnameVerifier88);
        org.junit.Assert.assertNotNull(okHttpClient90);
    }

    @Test
    public void test12236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12236");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.ResponseCache responseCache5 = null;
        okHttpClient4.responseCache = responseCache5;
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = okHttpClient4.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient4.copyWithDefaults();
        java.net.ResponseCache responseCache9 = okHttpClient8.responseCache;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = new com.squareup.okhttp.OkHttpClient(okHttpClient8);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory11 = okHttpClient8.getSslSocketFactory();
        boolean boolean12 = okHttpClient8.followProtocolRedirects;
        java.net.ProxySelector proxySelector13 = okHttpClient8.proxySelector;
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(hostnameVerifier7);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertNull(responseCache9);
        org.junit.Assert.assertNotNull(sSLSocketFactory11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
// flaky:         org.junit.Assert.assertNull(proxySelector13);
    }

    @Test
    public void test12237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12237");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        java.net.Proxy proxy12 = okHttpClient11.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool14 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient13.connectionPool = connectionPool14;
        int int16 = connectionPool14.getSpdyConnectionCount();
        okHttpClient11.connectionPool = connectionPool14;
        java.net.Proxy proxy18 = okHttpClient11.proxy;
        java.net.ResponseCache responseCache19 = okHttpClient11.getResponseCache();
        okHttpClient11.followProtocolRedirects = false;
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(proxy12);
        org.junit.Assert.assertNotNull(connectionPool14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNull(proxy18);
        org.junit.Assert.assertNull(responseCache19);
    }

    @Test
    public void test12238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12238");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        okHttpClient0.authenticator = okAuthenticator3;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache7 = okHttpClient6.okResponseCache();
        java.net.ResponseCache responseCache8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient6.setResponseCache(responseCache8);
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        okHttpClient6.transports = strList12;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient6.setSSLSocketFactory(sSLSocketFactory15);
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = null;
        okHttpClient17.hostnameVerifier = hostnameVerifier18;
        java.net.ResponseCache responseCache20 = null;
        okHttpClient17.responseCache = responseCache20;
        javax.net.ssl.HostnameVerifier hostnameVerifier22 = okHttpClient17.hostnameVerifier;
        java.net.Proxy proxy23 = okHttpClient17.getProxy();
        java.net.CookieHandler cookieHandler24 = null;
        okHttpClient17.cookieHandler = cookieHandler24;
        okHttpClient17.followProtocolRedirects = true;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier29 = null;
        okHttpClient28.hostnameVerifier = hostnameVerifier29;
        java.net.ResponseCache responseCache31 = null;
        okHttpClient28.responseCache = responseCache31;
        javax.net.ssl.HostnameVerifier hostnameVerifier33 = okHttpClient28.hostnameVerifier;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory34 = okHttpClient28.sslSocketFactory;
        java.net.CookieHandler cookieHandler35 = okHttpClient28.cookieHandler;
        javax.net.ssl.HostnameVerifier hostnameVerifier36 = okHttpClient28.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient37 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool38 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient37.connectionPool = connectionPool38;
        com.squareup.okhttp.OkAuthenticator okAuthenticator40 = null;
        okHttpClient37.authenticator = okAuthenticator40;
        java.util.List<java.lang.String> strList42 = okHttpClient37.transports;
        java.net.ResponseCache responseCache43 = null;
        okHttpClient37.responseCache = responseCache43;
        com.squareup.okhttp.OkHttpClient okHttpClient45 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier46 = null;
        okHttpClient45.hostnameVerifier = hostnameVerifier46;
        java.net.ResponseCache responseCache48 = null;
        okHttpClient45.responseCache = responseCache48;
        javax.net.ssl.HostnameVerifier hostnameVerifier50 = okHttpClient45.hostnameVerifier;
        java.net.Proxy proxy51 = okHttpClient45.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool54 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient45.connectionPool = connectionPool54;
        com.squareup.okhttp.OkHttpClient okHttpClient56 = okHttpClient45.copyWithDefaults();
        java.net.Proxy proxy57 = okHttpClient56.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier58 = okHttpClient56.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient59 = okHttpClient37.setHostnameVerifier(hostnameVerifier58);
        com.squareup.okhttp.OkHttpClient okHttpClient60 = okHttpClient28.setHostnameVerifier(hostnameVerifier58);
        okHttpClient17.hostnameVerifier = hostnameVerifier58;
        com.squareup.okhttp.OkHttpClient okHttpClient62 = okHttpClient6.setHostnameVerifier(hostnameVerifier58);
        com.squareup.okhttp.OkHttpClient okHttpClient63 = okHttpClient5.setHostnameVerifier(hostnameVerifier58);
        java.util.Set<com.squareup.okhttp.Route> routeSet64 = okHttpClient63.failedRoutes;
        java.lang.Class<?> wildcardClass65 = routeSet64.getClass();
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(okResponseCache7);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNull(hostnameVerifier22);
        org.junit.Assert.assertNull(proxy23);
        org.junit.Assert.assertNull(hostnameVerifier33);
        org.junit.Assert.assertNull(sSLSocketFactory34);
        org.junit.Assert.assertNull(cookieHandler35);
        org.junit.Assert.assertNull(hostnameVerifier36);
        org.junit.Assert.assertNotNull(connectionPool38);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNull(hostnameVerifier50);
        org.junit.Assert.assertNull(proxy51);
        org.junit.Assert.assertNotNull(okHttpClient56);
        org.junit.Assert.assertNull(proxy57);
        org.junit.Assert.assertNotNull(hostnameVerifier58);
        org.junit.Assert.assertNotNull(okHttpClient59);
        org.junit.Assert.assertNotNull(okHttpClient60);
        org.junit.Assert.assertNotNull(okHttpClient62);
        org.junit.Assert.assertNotNull(okHttpClient63);
        org.junit.Assert.assertNotNull(routeSet64);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test12239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12239");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        java.net.ResponseCache responseCache12 = okHttpClient0.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory13 = okHttpClient0.sslSocketFactory;
        java.net.CookieHandler cookieHandler14 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        java.net.CookieHandler cookieHandler16 = okHttpClient15.cookieHandler;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = null;
        okHttpClient17.hostnameVerifier = hostnameVerifier18;
        java.net.ResponseCache responseCache20 = null;
        okHttpClient17.responseCache = responseCache20;
        java.util.List<java.lang.String> strList22 = okHttpClient17.transports;
        com.squareup.okhttp.ConnectionPool connectionPool23 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient17.connectionPool = connectionPool23;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory25 = okHttpClient17.getSslSocketFactory();
        java.net.CookieHandler cookieHandler26 = okHttpClient17.cookieHandler;
        com.squareup.okhttp.ConnectionPool connectionPool27 = com.squareup.okhttp.ConnectionPool.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient17.setConnectionPool(connectionPool27);
        java.net.ProxySelector proxySelector29 = null;
        okHttpClient17.proxySelector = proxySelector29;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier32 = null;
        okHttpClient31.hostnameVerifier = hostnameVerifier32;
        java.net.ResponseCache responseCache34 = null;
        okHttpClient31.responseCache = responseCache34;
        javax.net.ssl.HostnameVerifier hostnameVerifier36 = okHttpClient31.hostnameVerifier;
        java.net.Proxy proxy37 = okHttpClient31.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool40 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient31.connectionPool = connectionPool40;
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient31.copyWithDefaults();
        java.net.ResponseCache responseCache43 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient44 = okHttpClient42.setResponseCache(responseCache43);
        com.squareup.okhttp.OkHttpClient okHttpClient45 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool46 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient45.connectionPool = connectionPool46;
        java.net.ResponseCache responseCache48 = null;
        okHttpClient45.responseCache = responseCache48;
        java.net.Proxy proxy50 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress51 = proxy50.address();
        java.net.SocketAddress socketAddress52 = proxy50.address();
        okHttpClient45.proxy = proxy50;
        com.squareup.okhttp.ConnectionPool connectionPool56 = new com.squareup.okhttp.ConnectionPool((-1), (long) '#');
        com.squareup.okhttp.Address address57 = null;
        com.squareup.okhttp.Connection connection58 = connectionPool56.get(address57);
        int int59 = connectionPool56.getSpdyConnectionCount();
        connectionPool56.evictAll();
        com.squareup.okhttp.OkHttpClient okHttpClient61 = okHttpClient45.setConnectionPool(connectionPool56);
        com.squareup.okhttp.OkHttpClient okHttpClient62 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier63 = null;
        okHttpClient62.hostnameVerifier = hostnameVerifier63;
        java.net.ProxySelector proxySelector65 = okHttpClient62.proxySelector;
        java.net.ProxySelector proxySelector66 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient67 = okHttpClient62.setProxySelector(proxySelector66);
        com.squareup.okhttp.OkHttpClient okHttpClient68 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier69 = null;
        okHttpClient68.hostnameVerifier = hostnameVerifier69;
        java.net.ResponseCache responseCache71 = null;
        okHttpClient68.responseCache = responseCache71;
        java.util.List<java.lang.String> strList73 = okHttpClient68.transports;
        com.squareup.okhttp.ConnectionPool connectionPool74 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient68.connectionPool = connectionPool74;
        com.squareup.okhttp.OkHttpClient okHttpClient76 = okHttpClient68.copyWithDefaults();
        java.net.ProxySelector proxySelector77 = okHttpClient76.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory78 = okHttpClient76.getSslSocketFactory();
        okHttpClient62.sslSocketFactory = sSLSocketFactory78;
        okHttpClient45.sslSocketFactory = sSLSocketFactory78;
        com.squareup.okhttp.OkHttpClient okHttpClient81 = okHttpClient44.setSSLSocketFactory(sSLSocketFactory78);
        java.net.Socket socket82 = sSLSocketFactory78.createSocket();
        okHttpClient17.sslSocketFactory = sSLSocketFactory78;
        com.squareup.okhttp.OkHttpClient okHttpClient84 = okHttpClient15.setSSLSocketFactory(sSLSocketFactory78);
        java.net.Socket socket85 = sSLSocketFactory78.createSocket();
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(responseCache12);
        org.junit.Assert.assertNull(sSLSocketFactory13);
        org.junit.Assert.assertNull(cookieHandler14);
        org.junit.Assert.assertNull(cookieHandler16);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNotNull(connectionPool23);
        org.junit.Assert.assertNull(sSLSocketFactory25);
        org.junit.Assert.assertNull(cookieHandler26);
        org.junit.Assert.assertNotNull(connectionPool27);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNull(hostnameVerifier36);
        org.junit.Assert.assertNull(proxy37);
        org.junit.Assert.assertNotNull(okHttpClient42);
        org.junit.Assert.assertNotNull(okHttpClient44);
        org.junit.Assert.assertNotNull(connectionPool46);
        org.junit.Assert.assertNotNull(proxy50);
        org.junit.Assert.assertNull(socketAddress51);
        org.junit.Assert.assertNull(socketAddress52);
        org.junit.Assert.assertNull(connection58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(okHttpClient61);
        org.junit.Assert.assertNull(proxySelector65);
        org.junit.Assert.assertNotNull(okHttpClient67);
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertNotNull(connectionPool74);
        org.junit.Assert.assertNotNull(okHttpClient76);
// flaky:         org.junit.Assert.assertNull(proxySelector77);
        org.junit.Assert.assertNotNull(sSLSocketFactory78);
        org.junit.Assert.assertNotNull(okHttpClient81);
        org.junit.Assert.assertNotNull(socket82);
        org.junit.Assert.assertEquals(socket82.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(okHttpClient84);
        org.junit.Assert.assertNotNull(socket85);
        org.junit.Assert.assertEquals(socket85.toString(), "Socket[unconnected]");
    }

    @Test
    public void test12240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12240");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient0.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.copyWithDefaults();
        java.net.ProxySelector proxySelector12 = okHttpClient0.getProxySelector();
        okHttpClient0.followProtocolRedirects = false;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient0.copyWithDefaults();
        boolean boolean16 = okHttpClient15.followProtocolRedirects;
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(proxySelector12);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test12241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12241");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        java.net.Proxy proxy12 = okHttpClient11.proxy;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory13 = null;
        okHttpClient11.sslSocketFactory = sSLSocketFactory13;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier16 = null;
        okHttpClient15.hostnameVerifier = hostnameVerifier16;
        java.net.ResponseCache responseCache18 = null;
        okHttpClient15.responseCache = responseCache18;
        java.util.List<java.lang.String> strList20 = okHttpClient15.transports;
        com.squareup.okhttp.ConnectionPool connectionPool21 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient15.connectionPool = connectionPool21;
        com.squareup.okhttp.ConnectionPool connectionPool23 = okHttpClient15.connectionPool;
        int int24 = connectionPool23.getHttpConnectionCount();
        com.squareup.okhttp.Address address25 = null;
        com.squareup.okhttp.Connection connection26 = connectionPool23.get(address25);
        okHttpClient11.connectionPool = connectionPool23;
        java.net.ProxySelector proxySelector28 = okHttpClient11.proxySelector;
        java.net.Proxy proxy29 = java.net.Proxy.NO_PROXY;
        boolean boolean31 = proxy29.equals((java.lang.Object) 1L);
        com.squareup.okhttp.OkHttpClient okHttpClient32 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache33 = okHttpClient32.okResponseCache();
        java.net.ResponseCache responseCache34 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient32.setResponseCache(responseCache34);
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList38 = new java.util.ArrayList<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        okHttpClient32.transports = strList38;
        boolean boolean41 = proxy29.equals((java.lang.Object) strList38);
        okHttpClient11.proxy = proxy29;
        java.net.SocketAddress socketAddress43 = proxy29.address();
        java.net.SocketAddress socketAddress44 = proxy29.address();
        java.lang.String str45 = proxy29.toString();
        com.squareup.okhttp.OkHttpClient okHttpClient46 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool47 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient46.connectionPool = connectionPool47;
        com.squareup.okhttp.OkHttpClient okHttpClient49 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier50 = null;
        okHttpClient49.hostnameVerifier = hostnameVerifier50;
        java.net.ResponseCache responseCache52 = null;
        okHttpClient49.responseCache = responseCache52;
        java.util.List<java.lang.String> strList54 = okHttpClient49.transports;
        com.squareup.okhttp.ConnectionPool connectionPool55 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient49.connectionPool = connectionPool55;
        com.squareup.okhttp.OkHttpClient okHttpClient57 = okHttpClient46.setConnectionPool(connectionPool55);
        java.net.Proxy proxy58 = okHttpClient57.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient59 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool60 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient59.connectionPool = connectionPool60;
        com.squareup.okhttp.OkHttpClient okHttpClient62 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier63 = null;
        okHttpClient62.hostnameVerifier = hostnameVerifier63;
        java.net.ResponseCache responseCache65 = null;
        okHttpClient62.responseCache = responseCache65;
        java.util.List<java.lang.String> strList67 = okHttpClient62.transports;
        com.squareup.okhttp.ConnectionPool connectionPool68 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient62.connectionPool = connectionPool68;
        com.squareup.okhttp.OkHttpClient okHttpClient70 = okHttpClient59.setConnectionPool(connectionPool68);
        com.squareup.okhttp.ConnectionPool connectionPool71 = okHttpClient59.connectionPool;
        com.squareup.okhttp.OkHttpClient okHttpClient72 = okHttpClient57.setConnectionPool(connectionPool71);
        javax.net.ssl.HostnameVerifier hostnameVerifier73 = okHttpClient72.hostnameVerifier;
        java.net.Proxy proxy74 = okHttpClient72.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient75 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier76 = null;
        okHttpClient75.hostnameVerifier = hostnameVerifier76;
        java.net.ResponseCache responseCache78 = null;
        okHttpClient75.responseCache = responseCache78;
        java.util.List<java.lang.String> strList80 = okHttpClient75.transports;
        com.squareup.okhttp.ConnectionPool connectionPool81 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient75.connectionPool = connectionPool81;
        com.squareup.okhttp.OkHttpClient okHttpClient83 = okHttpClient75.copyWithDefaults();
        java.net.ProxySelector proxySelector84 = okHttpClient83.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory85 = okHttpClient83.getSslSocketFactory();
        java.lang.String[] strArray86 = sSLSocketFactory85.getSupportedCipherSuites();
        java.net.Socket socket87 = sSLSocketFactory85.createSocket();
        java.net.Socket socket88 = sSLSocketFactory85.createSocket();
        java.net.Socket socket89 = sSLSocketFactory85.createSocket();
        com.squareup.okhttp.OkHttpClient okHttpClient90 = okHttpClient72.setSSLSocketFactory(sSLSocketFactory85);
        com.squareup.okhttp.ConnectionPool connectionPool91 = okHttpClient72.getConnectionPool();
        boolean boolean92 = proxy29.equals((java.lang.Object) okHttpClient72);
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(proxy12);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(connectionPool21);
        org.junit.Assert.assertNotNull(connectionPool23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNull(connection26);
        org.junit.Assert.assertNull(proxySelector28);
        org.junit.Assert.assertNotNull(proxy29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(okResponseCache33);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(socketAddress43);
        org.junit.Assert.assertNull(socketAddress44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "DIRECT" + "'", str45, "DIRECT");
        org.junit.Assert.assertNotNull(connectionPool47);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNotNull(connectionPool55);
        org.junit.Assert.assertNotNull(okHttpClient57);
        org.junit.Assert.assertNull(proxy58);
        org.junit.Assert.assertNotNull(connectionPool60);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNotNull(connectionPool68);
        org.junit.Assert.assertNotNull(okHttpClient70);
        org.junit.Assert.assertNotNull(connectionPool71);
        org.junit.Assert.assertNotNull(okHttpClient72);
        org.junit.Assert.assertNull(hostnameVerifier73);
        org.junit.Assert.assertNull(proxy74);
        org.junit.Assert.assertNull(strList80);
        org.junit.Assert.assertNotNull(connectionPool81);
        org.junit.Assert.assertNotNull(okHttpClient83);
// flaky:         org.junit.Assert.assertNull(proxySelector84);
        org.junit.Assert.assertNotNull(sSLSocketFactory85);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertNotNull(socket87);
        org.junit.Assert.assertEquals(socket87.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(socket88);
        org.junit.Assert.assertEquals(socket88.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(socket89);
        org.junit.Assert.assertEquals(socket89.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(okHttpClient90);
        org.junit.Assert.assertNotNull(connectionPool91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test12242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12242");
        com.squareup.okhttp.ConnectionPool connectionPool2 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        int int3 = connectionPool2.getSpdyConnectionCount();
        connectionPool2.evictAll();
        int int5 = connectionPool2.getConnectionCount();
        int int6 = connectionPool2.getHttpConnectionCount();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }

    @Test
    public void test12243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12243");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache1 = okHttpClient0.okResponseCache();
        java.net.ResponseCache responseCache2 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.setResponseCache(responseCache2);
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = okHttpClient3.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = new com.squareup.okhttp.OkHttpClient(okHttpClient3);
        java.net.CookieHandler cookieHandler6 = null;
        okHttpClient5.cookieHandler = cookieHandler6;
        com.squareup.okhttp.ConnectionPool connectionPool10 = new com.squareup.okhttp.ConnectionPool((int) (short) 10, 1L);
        connectionPool10.evictAll();
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient5.setConnectionPool(connectionPool10);
        org.junit.Assert.assertNull(okResponseCache1);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertNull(hostnameVerifier4);
        org.junit.Assert.assertNotNull(okHttpClient12);
    }

    @Test
    public void test12244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12244");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.CookieHandler cookieHandler8 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache9 = okHttpClient0.okResponseCache();
        java.net.CookieHandler cookieHandler10 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory12 = okHttpClient11.sslSocketFactory;
        java.net.Proxy proxy13 = okHttpClient11.proxy;
        java.net.Proxy proxy14 = okHttpClient11.getProxy();
        java.net.ResponseCache responseCache15 = null;
        okHttpClient11.responseCache = responseCache15;
        java.net.ResponseCache responseCache17 = okHttpClient11.getResponseCache();
        java.net.ProxySelector proxySelector18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient11.setProxySelector(proxySelector18);
        com.squareup.okhttp.OkHttpClient okHttpClient20 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache21 = okHttpClient20.okResponseCache();
        java.net.ResponseCache responseCache22 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient20.setResponseCache(responseCache22);
        com.squareup.okhttp.OkHttpClient okHttpClient24 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool25 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient24.connectionPool = connectionPool25;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier28 = null;
        okHttpClient27.hostnameVerifier = hostnameVerifier28;
        java.net.ResponseCache responseCache30 = null;
        okHttpClient27.responseCache = responseCache30;
        java.util.List<java.lang.String> strList32 = okHttpClient27.transports;
        com.squareup.okhttp.ConnectionPool connectionPool33 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient27.connectionPool = connectionPool33;
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient24.setConnectionPool(connectionPool33);
        com.squareup.okhttp.OkAuthenticator okAuthenticator36 = okHttpClient35.getAuthenticator();
        java.net.ProxySelector proxySelector37 = okHttpClient35.getProxySelector();
        java.net.ResponseCache responseCache38 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient35.setResponseCache(responseCache38);
        java.net.Proxy proxy40 = java.net.Proxy.NO_PROXY;
        boolean boolean42 = proxy40.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type43 = proxy40.type();
        java.net.SocketAddress socketAddress44 = proxy40.address();
        com.squareup.okhttp.OkHttpClient okHttpClient45 = okHttpClient39.setProxy(proxy40);
        java.net.Proxy proxy46 = java.net.Proxy.NO_PROXY;
        boolean boolean48 = proxy46.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type49 = proxy46.type();
        java.net.Proxy.Type type50 = proxy46.type();
        boolean boolean51 = proxy40.equals((java.lang.Object) proxy46);
        okHttpClient20.proxy = proxy40;
        okHttpClient11.proxy = proxy40;
        com.squareup.okhttp.OkHttpClient okHttpClient54 = new com.squareup.okhttp.OkHttpClient(okHttpClient11);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNull(cookieHandler8);
        org.junit.Assert.assertNull(okResponseCache9);
        org.junit.Assert.assertNull(cookieHandler10);
        org.junit.Assert.assertNull(sSLSocketFactory12);
        org.junit.Assert.assertNull(proxy13);
        org.junit.Assert.assertNull(proxy14);
        org.junit.Assert.assertNull(responseCache17);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNull(okResponseCache21);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertNotNull(connectionPool25);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNotNull(connectionPool33);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNull(okAuthenticator36);
        org.junit.Assert.assertNull(proxySelector37);
        org.junit.Assert.assertNotNull(okHttpClient39);
        org.junit.Assert.assertNotNull(proxy40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + type43 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type43.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress44);
        org.junit.Assert.assertNotNull(okHttpClient45);
        org.junit.Assert.assertNotNull(proxy46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + type49 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type49.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertTrue("'" + type50 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type50.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
    }

    @Test
    public void test12245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12245");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache8 = okHttpClient7.okResponseCache();
        java.net.ResponseCache responseCache9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient7.setResponseCache(responseCache9);
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        okHttpClient7.transports = strList13;
        okHttpClient0.transports = strList13;
        java.util.Set<com.squareup.okhttp.Route> routeSet17 = okHttpClient0.failedRoutes;
        java.net.CookieHandler cookieHandler18 = null;
        okHttpClient0.cookieHandler = cookieHandler18;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache21 = okHttpClient20.okResponseCache();
        java.net.ResponseCache responseCache22 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient20.setResponseCache(responseCache22);
        java.net.CookieHandler cookieHandler24 = okHttpClient20.cookieHandler;
        com.squareup.okhttp.OkHttpClient okHttpClient25 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier26 = null;
        okHttpClient25.hostnameVerifier = hostnameVerifier26;
        java.net.ResponseCache responseCache28 = null;
        okHttpClient25.responseCache = responseCache28;
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = okHttpClient25.hostnameVerifier;
        java.net.Proxy proxy31 = okHttpClient25.getProxy();
        java.net.CookieHandler cookieHandler32 = null;
        okHttpClient25.cookieHandler = cookieHandler32;
        okHttpClient25.followProtocolRedirects = true;
        com.squareup.okhttp.OkHttpClient okHttpClient36 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier37 = null;
        okHttpClient36.hostnameVerifier = hostnameVerifier37;
        java.net.ResponseCache responseCache39 = null;
        okHttpClient36.responseCache = responseCache39;
        javax.net.ssl.HostnameVerifier hostnameVerifier41 = okHttpClient36.hostnameVerifier;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory42 = okHttpClient36.sslSocketFactory;
        java.net.CookieHandler cookieHandler43 = okHttpClient36.cookieHandler;
        javax.net.ssl.HostnameVerifier hostnameVerifier44 = okHttpClient36.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient45 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool46 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient45.connectionPool = connectionPool46;
        com.squareup.okhttp.OkAuthenticator okAuthenticator48 = null;
        okHttpClient45.authenticator = okAuthenticator48;
        java.util.List<java.lang.String> strList50 = okHttpClient45.transports;
        java.net.ResponseCache responseCache51 = null;
        okHttpClient45.responseCache = responseCache51;
        com.squareup.okhttp.OkHttpClient okHttpClient53 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier54 = null;
        okHttpClient53.hostnameVerifier = hostnameVerifier54;
        java.net.ResponseCache responseCache56 = null;
        okHttpClient53.responseCache = responseCache56;
        javax.net.ssl.HostnameVerifier hostnameVerifier58 = okHttpClient53.hostnameVerifier;
        java.net.Proxy proxy59 = okHttpClient53.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool62 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient53.connectionPool = connectionPool62;
        com.squareup.okhttp.OkHttpClient okHttpClient64 = okHttpClient53.copyWithDefaults();
        java.net.Proxy proxy65 = okHttpClient64.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier66 = okHttpClient64.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient67 = okHttpClient45.setHostnameVerifier(hostnameVerifier66);
        com.squareup.okhttp.OkHttpClient okHttpClient68 = okHttpClient36.setHostnameVerifier(hostnameVerifier66);
        okHttpClient25.hostnameVerifier = hostnameVerifier66;
        com.squareup.okhttp.OkHttpClient okHttpClient70 = okHttpClient20.setHostnameVerifier(hostnameVerifier66);
        okHttpClient0.hostnameVerifier = hostnameVerifier66;
        java.net.Proxy proxy72 = okHttpClient0.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient73 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache74 = okHttpClient73.okResponseCache();
        java.net.ResponseCache responseCache75 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient76 = okHttpClient73.setResponseCache(responseCache75);
        java.lang.String[] strArray78 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList79 = new java.util.ArrayList<java.lang.String>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList79, strArray78);
        okHttpClient73.transports = strList79;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory82 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient83 = okHttpClient73.setSSLSocketFactory(sSLSocketFactory82);
        java.net.Proxy proxy84 = okHttpClient83.proxy;
        java.util.List<java.lang.String> strList85 = okHttpClient83.transports;
        okHttpClient0.transports = strList85;
        java.net.CookieHandler cookieHandler87 = okHttpClient0.cookieHandler;
        java.net.ProxySelector proxySelector88 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient89 = okHttpClient0.setProxySelector(proxySelector88);
        com.squareup.okhttp.OkHttpClient okHttpClient91 = okHttpClient89.setFollowProtocolRedirects(false);
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNull(okResponseCache8);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(routeSet17);
        org.junit.Assert.assertNull(okResponseCache21);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertNull(cookieHandler24);
        org.junit.Assert.assertNull(hostnameVerifier30);
        org.junit.Assert.assertNull(proxy31);
        org.junit.Assert.assertNull(hostnameVerifier41);
        org.junit.Assert.assertNull(sSLSocketFactory42);
        org.junit.Assert.assertNull(cookieHandler43);
        org.junit.Assert.assertNull(hostnameVerifier44);
        org.junit.Assert.assertNotNull(connectionPool46);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNull(hostnameVerifier58);
        org.junit.Assert.assertNull(proxy59);
        org.junit.Assert.assertNotNull(okHttpClient64);
        org.junit.Assert.assertNull(proxy65);
        org.junit.Assert.assertNotNull(hostnameVerifier66);
        org.junit.Assert.assertNotNull(okHttpClient67);
        org.junit.Assert.assertNotNull(okHttpClient68);
        org.junit.Assert.assertNotNull(okHttpClient70);
        org.junit.Assert.assertNull(proxy72);
        org.junit.Assert.assertNull(okResponseCache74);
        org.junit.Assert.assertNotNull(okHttpClient76);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(okHttpClient83);
        org.junit.Assert.assertNull(proxy84);
        org.junit.Assert.assertNotNull(strList85);
        org.junit.Assert.assertNull(cookieHandler87);
        org.junit.Assert.assertNotNull(okHttpClient89);
        org.junit.Assert.assertNotNull(okHttpClient91);
    }

    @Test
    public void test12246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12246");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.ConnectionPool connectionPool12 = okHttpClient11.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator13 = okHttpClient11.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool16 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient11.connectionPool = connectionPool16;
        java.net.ResponseCache responseCache18 = okHttpClient11.responseCache;
        java.util.List<java.lang.String> strList19 = okHttpClient11.getTransports();
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient11.copyWithDefaults();
        java.net.ResponseCache responseCache21 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient20.setResponseCache(responseCache21);
        java.net.ProxySelector proxySelector23 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient20.setProxySelector(proxySelector23);
        java.net.ResponseCache responseCache25 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient24.setResponseCache(responseCache25);
        com.squareup.okhttp.OkHttpClient okHttpClient27 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier28 = null;
        okHttpClient27.hostnameVerifier = hostnameVerifier28;
        java.net.ResponseCache responseCache30 = null;
        okHttpClient27.responseCache = responseCache30;
        javax.net.ssl.HostnameVerifier hostnameVerifier32 = okHttpClient27.hostnameVerifier;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory33 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient27.setSSLSocketFactory(sSLSocketFactory33);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory35 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient34.setSSLSocketFactory(sSLSocketFactory35);
        java.net.Proxy proxy37 = okHttpClient34.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier38 = okHttpClient34.getHostnameVerifier();
        java.net.Proxy proxy39 = java.net.Proxy.NO_PROXY;
        boolean boolean41 = proxy39.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type42 = proxy39.type();
        java.lang.String str43 = proxy39.toString();
        com.squareup.okhttp.OkHttpClient okHttpClient44 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier45 = null;
        okHttpClient44.hostnameVerifier = hostnameVerifier45;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory47 = okHttpClient44.getSslSocketFactory();
        boolean boolean48 = proxy39.equals((java.lang.Object) okHttpClient44);
        com.squareup.okhttp.OkHttpClient okHttpClient49 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier50 = null;
        okHttpClient49.hostnameVerifier = hostnameVerifier50;
        java.net.ResponseCache responseCache52 = null;
        okHttpClient49.responseCache = responseCache52;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache54 = okHttpClient49.okResponseCache();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory55 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient56 = okHttpClient49.setSSLSocketFactory(sSLSocketFactory55);
        java.net.ProxySelector proxySelector57 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient58 = okHttpClient49.setProxySelector(proxySelector57);
        boolean boolean59 = proxy39.equals((java.lang.Object) okHttpClient58);
        com.squareup.okhttp.OkHttpClient okHttpClient60 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier61 = null;
        okHttpClient60.hostnameVerifier = hostnameVerifier61;
        java.net.ResponseCache responseCache63 = null;
        okHttpClient60.responseCache = responseCache63;
        java.util.List<java.lang.String> strList65 = okHttpClient60.transports;
        com.squareup.okhttp.ConnectionPool connectionPool66 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient60.connectionPool = connectionPool66;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory68 = okHttpClient60.getSslSocketFactory();
        java.net.CookieHandler cookieHandler69 = okHttpClient60.cookieHandler;
        java.net.ResponseCache responseCache70 = okHttpClient60.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory71 = okHttpClient60.sslSocketFactory;
        boolean boolean72 = proxy39.equals((java.lang.Object) okHttpClient60);
        java.net.SocketAddress socketAddress73 = proxy39.address();
        java.net.Proxy.Type type74 = proxy39.type();
        okHttpClient34.proxy = proxy39;
        okHttpClient24.proxy = proxy39;
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNull(okAuthenticator13);
        org.junit.Assert.assertNull(responseCache18);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNull(hostnameVerifier32);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNull(proxy37);
        org.junit.Assert.assertNull(hostnameVerifier38);
        org.junit.Assert.assertNotNull(proxy39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + type42 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type42.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "DIRECT" + "'", str43, "DIRECT");
        org.junit.Assert.assertNull(sSLSocketFactory47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(okResponseCache54);
        org.junit.Assert.assertNotNull(okHttpClient56);
        org.junit.Assert.assertNotNull(okHttpClient58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNotNull(connectionPool66);
        org.junit.Assert.assertNull(sSLSocketFactory68);
        org.junit.Assert.assertNull(cookieHandler69);
        org.junit.Assert.assertNull(responseCache70);
        org.junit.Assert.assertNull(sSLSocketFactory71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNull(socketAddress73);
        org.junit.Assert.assertTrue("'" + type74 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type74.equals(java.net.Proxy.Type.DIRECT));
    }

    @Test
    public void test12247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12247");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.CookieHandler cookieHandler5 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = null;
        okHttpClient6.hostnameVerifier = hostnameVerifier7;
        java.net.ResponseCache responseCache9 = null;
        okHttpClient6.responseCache = responseCache9;
        java.util.List<java.lang.String> strList11 = okHttpClient6.transports;
        com.squareup.okhttp.ConnectionPool connectionPool12 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient6.connectionPool = connectionPool12;
        java.net.Proxy proxy14 = null;
        okHttpClient6.proxy = proxy14;
        java.util.Set<com.squareup.okhttp.Route> routeSet16 = okHttpClient6.failedRoutes;
        okHttpClient0.failedRoutes = routeSet16;
        java.net.ProxySelector proxySelector18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient0.setProxySelector(proxySelector18);
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient21 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier22 = null;
        okHttpClient21.hostnameVerifier = hostnameVerifier22;
        java.net.ResponseCache responseCache24 = null;
        okHttpClient21.responseCache = responseCache24;
        javax.net.ssl.HostnameVerifier hostnameVerifier26 = okHttpClient21.hostnameVerifier;
        java.net.Proxy proxy27 = okHttpClient21.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool30 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient21.connectionPool = connectionPool30;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient21.copyWithDefaults();
        java.net.Proxy proxy33 = okHttpClient32.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier34 = okHttpClient32.getHostnameVerifier();
        okHttpClient0.hostnameVerifier = hostnameVerifier34;
        java.net.CookieHandler cookieHandler36 = okHttpClient0.getCookieHandler();
        java.net.CookieHandler cookieHandler37 = null;
        okHttpClient0.cookieHandler = cookieHandler37;
        boolean boolean39 = okHttpClient0.followProtocolRedirects;
        com.squareup.okhttp.ConnectionPool connectionPool40 = okHttpClient0.connectionPool;
        com.squareup.okhttp.OkHttpClient okHttpClient41 = okHttpClient0.copyWithDefaults();
        boolean boolean42 = okHttpClient41.getFollowProtocolRedirects();
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNotNull(routeSet16);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNull(hostnameVerifier26);
        org.junit.Assert.assertNull(proxy27);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertNull(proxy33);
        org.junit.Assert.assertNotNull(hostnameVerifier34);
        org.junit.Assert.assertNull(cookieHandler36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(connectionPool40);
        org.junit.Assert.assertNotNull(okHttpClient41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
    }

    @Test
    public void test12248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12248");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.Proxy proxy8 = null;
        okHttpClient0.proxy = proxy8;
        boolean boolean10 = okHttpClient0.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        java.net.ProxySelector proxySelector12 = okHttpClient11.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier13 = okHttpClient11.hostnameVerifier;
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = okHttpClient11.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool16 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient15.connectionPool = connectionPool16;
        com.squareup.okhttp.OkAuthenticator okAuthenticator18 = null;
        okHttpClient15.authenticator = okAuthenticator18;
        java.net.CookieHandler cookieHandler20 = null;
        okHttpClient15.cookieHandler = cookieHandler20;
        java.net.Proxy proxy22 = java.net.Proxy.NO_PROXY;
        boolean boolean24 = proxy22.equals((java.lang.Object) 1L);
        com.squareup.okhttp.OkHttpClient okHttpClient25 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache26 = okHttpClient25.okResponseCache();
        java.net.ResponseCache responseCache27 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient25.setResponseCache(responseCache27);
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        okHttpClient25.transports = strList31;
        boolean boolean34 = proxy22.equals((java.lang.Object) strList31);
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient15.setProxy(proxy22);
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient11.setProxy(proxy22);
        com.squareup.okhttp.OkHttpClient okHttpClient37 = new com.squareup.okhttp.OkHttpClient(okHttpClient36);
        javax.net.ssl.HostnameVerifier hostnameVerifier38 = okHttpClient36.getHostnameVerifier();
        javax.net.ssl.HostnameVerifier hostnameVerifier39 = okHttpClient36.getHostnameVerifier();
        java.net.ProxySelector proxySelector40 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient41 = okHttpClient36.setProxySelector(proxySelector40);
        boolean boolean42 = okHttpClient41.followProtocolRedirects;
        java.net.Proxy proxy43 = java.net.Proxy.NO_PROXY;
        boolean boolean45 = proxy43.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type46 = proxy43.type();
        java.lang.String str47 = proxy43.toString();
        com.squareup.okhttp.OkHttpClient okHttpClient48 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier49 = null;
        okHttpClient48.hostnameVerifier = hostnameVerifier49;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory51 = okHttpClient48.getSslSocketFactory();
        boolean boolean52 = proxy43.equals((java.lang.Object) okHttpClient48);
        java.lang.String str53 = proxy43.toString();
        java.net.Proxy.Type type54 = proxy43.type();
        com.squareup.okhttp.OkHttpClient okHttpClient55 = okHttpClient41.setProxy(proxy43);
        javax.net.ssl.HostnameVerifier hostnameVerifier56 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient57 = okHttpClient41.setHostnameVerifier(hostnameVerifier56);
        com.squareup.okhttp.OkAuthenticator okAuthenticator58 = okHttpClient41.getAuthenticator();
        com.squareup.okhttp.OkHttpClient okHttpClient59 = new com.squareup.okhttp.OkHttpClient(okHttpClient41);
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache60 = okHttpClient59.okResponseCache();
        okHttpClient59.followProtocolRedirects = false;
        com.squareup.okhttp.ConnectionPool connectionPool65 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 10);
        okHttpClient59.connectionPool = connectionPool65;
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(proxySelector12);
        org.junit.Assert.assertNull(hostnameVerifier13);
        org.junit.Assert.assertNull(hostnameVerifier14);
        org.junit.Assert.assertNotNull(connectionPool16);
        org.junit.Assert.assertNotNull(proxy22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(okResponseCache26);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNull(hostnameVerifier38);
        org.junit.Assert.assertNull(hostnameVerifier39);
        org.junit.Assert.assertNotNull(okHttpClient41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(proxy43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + type46 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type46.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "DIRECT" + "'", str47, "DIRECT");
        org.junit.Assert.assertNull(sSLSocketFactory51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "DIRECT" + "'", str53, "DIRECT");
        org.junit.Assert.assertTrue("'" + type54 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type54.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNotNull(okHttpClient55);
        org.junit.Assert.assertNotNull(okHttpClient57);
        org.junit.Assert.assertNull(okAuthenticator58);
        org.junit.Assert.assertNull(okResponseCache60);
    }

    @Test
    public void test12249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12249");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.CookieHandler cookieHandler5 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = null;
        okHttpClient6.hostnameVerifier = hostnameVerifier7;
        java.net.ResponseCache responseCache9 = null;
        okHttpClient6.responseCache = responseCache9;
        java.util.List<java.lang.String> strList11 = okHttpClient6.transports;
        com.squareup.okhttp.ConnectionPool connectionPool12 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient6.connectionPool = connectionPool12;
        java.net.Proxy proxy14 = null;
        okHttpClient6.proxy = proxy14;
        java.util.Set<com.squareup.okhttp.Route> routeSet16 = okHttpClient6.failedRoutes;
        okHttpClient0.failedRoutes = routeSet16;
        java.net.ProxySelector proxySelector18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient0.setProxySelector(proxySelector18);
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient21 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier22 = null;
        okHttpClient21.hostnameVerifier = hostnameVerifier22;
        java.net.ResponseCache responseCache24 = null;
        okHttpClient21.responseCache = responseCache24;
        javax.net.ssl.HostnameVerifier hostnameVerifier26 = okHttpClient21.hostnameVerifier;
        java.net.Proxy proxy27 = okHttpClient21.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool30 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient21.connectionPool = connectionPool30;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient21.copyWithDefaults();
        java.net.ResponseCache responseCache33 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient32.setResponseCache(responseCache33);
        java.net.ProxySelector proxySelector35 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient32.setProxySelector(proxySelector35);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory37 = okHttpClient36.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient38 = new com.squareup.okhttp.OkHttpClient(okHttpClient36);
        com.squareup.okhttp.ConnectionPool connectionPool39 = okHttpClient36.getConnectionPool();
        com.squareup.okhttp.OkHttpClient okHttpClient40 = new com.squareup.okhttp.OkHttpClient(okHttpClient36);
        com.squareup.okhttp.OkHttpClient okHttpClient41 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool42 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient41.connectionPool = connectionPool42;
        com.squareup.okhttp.OkHttpClient okHttpClient44 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier45 = null;
        okHttpClient44.hostnameVerifier = hostnameVerifier45;
        java.net.ResponseCache responseCache47 = null;
        okHttpClient44.responseCache = responseCache47;
        java.util.List<java.lang.String> strList49 = okHttpClient44.transports;
        com.squareup.okhttp.ConnectionPool connectionPool50 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient44.connectionPool = connectionPool50;
        com.squareup.okhttp.OkHttpClient okHttpClient52 = okHttpClient41.setConnectionPool(connectionPool50);
        com.squareup.okhttp.ConnectionPool connectionPool55 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        okHttpClient41.connectionPool = connectionPool55;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory57 = okHttpClient41.sslSocketFactory;
        java.net.CookieHandler cookieHandler58 = okHttpClient41.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient59 = new com.squareup.okhttp.OkHttpClient(okHttpClient41);
        java.net.Proxy proxy60 = okHttpClient41.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient61 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier62 = null;
        okHttpClient61.hostnameVerifier = hostnameVerifier62;
        java.net.ResponseCache responseCache64 = null;
        okHttpClient61.responseCache = responseCache64;
        java.util.List<java.lang.String> strList66 = okHttpClient61.transports;
        java.net.Proxy proxy67 = java.net.Proxy.NO_PROXY;
        boolean boolean69 = proxy67.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type70 = proxy67.type();
        java.net.SocketAddress socketAddress71 = proxy67.address();
        com.squareup.okhttp.OkHttpClient okHttpClient72 = okHttpClient61.setProxy(proxy67);
        java.net.SocketAddress socketAddress73 = proxy67.address();
        java.net.Proxy.Type type74 = proxy67.type();
        java.net.SocketAddress socketAddress75 = proxy67.address();
        java.net.SocketAddress socketAddress76 = proxy67.address();
        java.lang.String str77 = proxy67.toString();
        com.squareup.okhttp.OkHttpClient okHttpClient78 = okHttpClient41.setProxy(proxy67);
        java.net.Proxy.Type type79 = proxy67.type();
        com.squareup.okhttp.OkHttpClient okHttpClient80 = okHttpClient36.setProxy(proxy67);
        com.squareup.okhttp.OkHttpClient okHttpClient81 = okHttpClient20.setProxy(proxy67);
        javax.net.ssl.HostnameVerifier hostnameVerifier82 = okHttpClient81.getHostnameVerifier();
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNotNull(routeSet16);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNull(hostnameVerifier26);
        org.junit.Assert.assertNull(proxy27);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNotNull(sSLSocketFactory37);
        org.junit.Assert.assertNotNull(connectionPool39);
        org.junit.Assert.assertNotNull(connectionPool42);
        org.junit.Assert.assertNull(strList49);
        org.junit.Assert.assertNotNull(connectionPool50);
        org.junit.Assert.assertNotNull(okHttpClient52);
        org.junit.Assert.assertNull(sSLSocketFactory57);
        org.junit.Assert.assertNull(cookieHandler58);
        org.junit.Assert.assertNull(proxy60);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNotNull(proxy67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + type70 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type70.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress71);
        org.junit.Assert.assertNotNull(okHttpClient72);
        org.junit.Assert.assertNull(socketAddress73);
        org.junit.Assert.assertTrue("'" + type74 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type74.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress75);
        org.junit.Assert.assertNull(socketAddress76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "DIRECT" + "'", str77, "DIRECT");
        org.junit.Assert.assertNotNull(okHttpClient78);
        org.junit.Assert.assertTrue("'" + type79 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type79.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNotNull(okHttpClient80);
        org.junit.Assert.assertNotNull(okHttpClient81);
        org.junit.Assert.assertNotNull(hostnameVerifier82);
    }

    @Test
    public void test12250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12250");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient0.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.copyWithDefaults();
        java.net.Proxy proxy12 = okHttpClient11.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier13 = okHttpClient11.getHostnameVerifier();
        com.squareup.okhttp.ConnectionPool connectionPool14 = null;
        okHttpClient11.connectionPool = connectionPool14;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier17 = null;
        okHttpClient16.hostnameVerifier = hostnameVerifier17;
        java.net.ResponseCache responseCache19 = null;
        okHttpClient16.responseCache = responseCache19;
        java.util.List<java.lang.String> strList21 = okHttpClient16.transports;
        com.squareup.okhttp.ConnectionPool connectionPool22 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient16.connectionPool = connectionPool22;
        java.net.CookieHandler cookieHandler24 = okHttpClient16.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache25 = okHttpClient16.okResponseCache();
        java.net.CookieHandler cookieHandler26 = okHttpClient16.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient27 = new com.squareup.okhttp.OkHttpClient(okHttpClient16);
        com.squareup.okhttp.OkHttpClient okHttpClient28 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier29 = null;
        okHttpClient28.hostnameVerifier = hostnameVerifier29;
        java.net.ProxySelector proxySelector31 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient28.setProxySelector(proxySelector31);
        java.net.CookieHandler cookieHandler33 = okHttpClient28.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient34 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier35 = null;
        okHttpClient34.hostnameVerifier = hostnameVerifier35;
        java.net.ResponseCache responseCache37 = null;
        okHttpClient34.responseCache = responseCache37;
        java.util.List<java.lang.String> strList39 = okHttpClient34.transports;
        com.squareup.okhttp.ConnectionPool connectionPool40 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient34.connectionPool = connectionPool40;
        java.net.Proxy proxy42 = null;
        okHttpClient34.proxy = proxy42;
        java.util.Set<com.squareup.okhttp.Route> routeSet44 = okHttpClient34.failedRoutes;
        okHttpClient28.failedRoutes = routeSet44;
        okHttpClient27.failedRoutes = routeSet44;
        java.util.List<java.lang.String> strList47 = okHttpClient27.getTransports();
        java.net.ResponseCache responseCache48 = null;
        okHttpClient27.responseCache = responseCache48;
        java.net.Proxy proxy50 = java.net.Proxy.NO_PROXY;
        boolean boolean52 = proxy50.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type53 = proxy50.type();
        java.net.Proxy.Type type54 = proxy50.type();
        okHttpClient27.proxy = proxy50;
        okHttpClient11.proxy = proxy50;
        java.net.CookieHandler cookieHandler57 = null;
        okHttpClient11.cookieHandler = cookieHandler57;
        com.squareup.okhttp.OkHttpClient okHttpClient59 = new com.squareup.okhttp.OkHttpClient(okHttpClient11);
        java.net.CookieHandler cookieHandler60 = okHttpClient11.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient61 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache62 = okHttpClient61.okResponseCache();
        java.net.ResponseCache responseCache63 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient64 = okHttpClient61.setResponseCache(responseCache63);
        java.lang.String[] strArray66 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList67 = new java.util.ArrayList<java.lang.String>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList67, strArray66);
        okHttpClient61.transports = strList67;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory70 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient71 = okHttpClient61.setSSLSocketFactory(sSLSocketFactory70);
        com.squareup.okhttp.OkHttpClient okHttpClient72 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache73 = okHttpClient72.okResponseCache();
        java.net.ResponseCache responseCache74 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient75 = okHttpClient72.setResponseCache(responseCache74);
        java.lang.String[] strArray77 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList78 = new java.util.ArrayList<java.lang.String>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList78, strArray77);
        okHttpClient72.transports = strList78;
        okHttpClient61.transports = strList78;
        com.squareup.okhttp.OkHttpClient.DEFAULT_TRANSPORTS = strList78;
        com.squareup.okhttp.OkHttpClient.DEFAULT_TRANSPORTS = strList78;
        okHttpClient11.transports = strList78;
        boolean boolean85 = okHttpClient11.getFollowProtocolRedirects();
        java.util.List<java.lang.String> strList86 = okHttpClient11.getTransports();
        java.net.ResponseCache responseCache87 = null;
        okHttpClient11.responseCache = responseCache87;
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(proxy12);
        org.junit.Assert.assertNotNull(hostnameVerifier13);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(connectionPool22);
        org.junit.Assert.assertNull(cookieHandler24);
        org.junit.Assert.assertNull(okResponseCache25);
        org.junit.Assert.assertNull(cookieHandler26);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertNull(cookieHandler33);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNotNull(connectionPool40);
        org.junit.Assert.assertNotNull(routeSet44);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNotNull(proxy50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + type53 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type53.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertTrue("'" + type54 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type54.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(cookieHandler60);
        org.junit.Assert.assertNull(okResponseCache62);
        org.junit.Assert.assertNotNull(okHttpClient64);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(okHttpClient71);
        org.junit.Assert.assertNull(okResponseCache73);
        org.junit.Assert.assertNotNull(okHttpClient75);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(strList86);
    }

    @Test
    public void test12251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12251");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.Proxy proxy8 = null;
        okHttpClient0.proxy = proxy8;
        boolean boolean10 = okHttpClient0.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient0.setFollowProtocolRedirects(true);
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = null;
        okHttpClient13.hostnameVerifier = hostnameVerifier14;
        java.net.ResponseCache responseCache16 = null;
        okHttpClient13.responseCache = responseCache16;
        java.util.List<java.lang.String> strList18 = okHttpClient13.transports;
        javax.net.ssl.HostnameVerifier hostnameVerifier19 = null;
        okHttpClient13.hostnameVerifier = hostnameVerifier19;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache21 = okHttpClient13.okResponseCache();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory22 = okHttpClient13.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient23 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier24 = null;
        okHttpClient23.hostnameVerifier = hostnameVerifier24;
        java.net.ResponseCache responseCache26 = null;
        okHttpClient23.responseCache = responseCache26;
        javax.net.ssl.HostnameVerifier hostnameVerifier28 = okHttpClient23.hostnameVerifier;
        java.net.Proxy proxy29 = okHttpClient23.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool32 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient23.connectionPool = connectionPool32;
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient23.copyWithDefaults();
        java.net.Proxy proxy35 = okHttpClient34.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier36 = okHttpClient34.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient13.setHostnameVerifier(hostnameVerifier36);
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient12.setHostnameVerifier(hostnameVerifier36);
        boolean boolean39 = okHttpClient38.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient40 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool41 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient40.connectionPool = connectionPool41;
        com.squareup.okhttp.OkHttpClient okHttpClient43 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier44 = null;
        okHttpClient43.hostnameVerifier = hostnameVerifier44;
        java.net.ResponseCache responseCache46 = null;
        okHttpClient43.responseCache = responseCache46;
        java.util.List<java.lang.String> strList48 = okHttpClient43.transports;
        com.squareup.okhttp.ConnectionPool connectionPool49 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient43.connectionPool = connectionPool49;
        com.squareup.okhttp.OkHttpClient okHttpClient51 = okHttpClient40.setConnectionPool(connectionPool49);
        com.squareup.okhttp.ConnectionPool connectionPool52 = okHttpClient51.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator53 = okHttpClient51.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool56 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient51.connectionPool = connectionPool56;
        java.net.ResponseCache responseCache58 = okHttpClient51.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory59 = okHttpClient51.sslSocketFactory;
        java.net.Proxy proxy60 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress61 = proxy60.address();
        com.squareup.okhttp.OkHttpClient okHttpClient62 = okHttpClient51.setProxy(proxy60);
        com.squareup.okhttp.OkHttpClient okHttpClient63 = okHttpClient38.setProxy(proxy60);
        java.net.Proxy proxy64 = java.net.Proxy.NO_PROXY;
        boolean boolean66 = proxy64.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type67 = proxy64.type();
        com.squareup.okhttp.OkHttpClient okHttpClient68 = okHttpClient38.setProxy(proxy64);
        com.squareup.okhttp.OkHttpClient okHttpClient69 = new com.squareup.okhttp.OkHttpClient(okHttpClient68);
        com.squareup.okhttp.OkAuthenticator okAuthenticator70 = okHttpClient69.getAuthenticator();
        javax.net.ssl.HostnameVerifier hostnameVerifier71 = okHttpClient69.hostnameVerifier;
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(okResponseCache21);
        org.junit.Assert.assertNull(sSLSocketFactory22);
        org.junit.Assert.assertNull(hostnameVerifier28);
        org.junit.Assert.assertNull(proxy29);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertNull(proxy35);
        org.junit.Assert.assertNotNull(hostnameVerifier36);
        org.junit.Assert.assertNotNull(okHttpClient37);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(connectionPool41);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNotNull(connectionPool49);
        org.junit.Assert.assertNotNull(okHttpClient51);
        org.junit.Assert.assertNotNull(connectionPool52);
        org.junit.Assert.assertNull(okAuthenticator53);
        org.junit.Assert.assertNull(responseCache58);
        org.junit.Assert.assertNull(sSLSocketFactory59);
        org.junit.Assert.assertNotNull(proxy60);
        org.junit.Assert.assertNull(socketAddress61);
        org.junit.Assert.assertNotNull(okHttpClient62);
        org.junit.Assert.assertNotNull(okHttpClient63);
        org.junit.Assert.assertNotNull(proxy64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + type67 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type67.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNotNull(okHttpClient68);
        org.junit.Assert.assertNull(okAuthenticator70);
        org.junit.Assert.assertNull(hostnameVerifier71);
    }

    @Test
    public void test12252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12252");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        java.net.CookieHandler cookieHandler7 = null;
        okHttpClient0.cookieHandler = cookieHandler7;
        okHttpClient0.followProtocolRedirects = true;
        java.net.CookieHandler cookieHandler11 = okHttpClient0.getCookieHandler();
        java.net.CookieHandler cookieHandler12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient0.setCookieHandler(cookieHandler12);
        java.net.ProxySelector proxySelector14 = okHttpClient13.getProxySelector();
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient(okHttpClient13);
        javax.net.ssl.HostnameVerifier hostnameVerifier16 = okHttpClient15.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = null;
        okHttpClient17.hostnameVerifier = hostnameVerifier18;
        java.net.ResponseCache responseCache20 = null;
        okHttpClient17.responseCache = responseCache20;
        javax.net.ssl.HostnameVerifier hostnameVerifier22 = okHttpClient17.hostnameVerifier;
        java.net.Proxy proxy23 = okHttpClient17.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool26 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient17.connectionPool = connectionPool26;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient17.copyWithDefaults();
        java.util.List<java.lang.String> strList29 = okHttpClient17.getTransports();
        com.squareup.okhttp.OkHttpClient okHttpClient30 = okHttpClient17.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient31 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool32 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient31.connectionPool = connectionPool32;
        com.squareup.okhttp.OkHttpClient okHttpClient34 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier35 = null;
        okHttpClient34.hostnameVerifier = hostnameVerifier35;
        java.net.ResponseCache responseCache37 = null;
        okHttpClient34.responseCache = responseCache37;
        java.util.List<java.lang.String> strList39 = okHttpClient34.transports;
        com.squareup.okhttp.ConnectionPool connectionPool40 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient34.connectionPool = connectionPool40;
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient31.setConnectionPool(connectionPool40);
        com.squareup.okhttp.ConnectionPool connectionPool43 = okHttpClient42.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator44 = okHttpClient42.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool47 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient42.connectionPool = connectionPool47;
        com.squareup.okhttp.OkHttpClient okHttpClient49 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier50 = null;
        okHttpClient49.hostnameVerifier = hostnameVerifier50;
        java.net.ResponseCache responseCache52 = null;
        okHttpClient49.responseCache = responseCache52;
        java.util.List<java.lang.String> strList54 = okHttpClient49.transports;
        com.squareup.okhttp.ConnectionPool connectionPool55 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient49.connectionPool = connectionPool55;
        java.net.CookieHandler cookieHandler57 = okHttpClient49.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache58 = okHttpClient49.okResponseCache();
        java.net.CookieHandler cookieHandler59 = okHttpClient49.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient60 = new com.squareup.okhttp.OkHttpClient(okHttpClient49);
        java.net.Proxy proxy61 = java.net.Proxy.NO_PROXY;
        boolean boolean63 = proxy61.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type64 = proxy61.type();
        java.net.SocketAddress socketAddress65 = proxy61.address();
        com.squareup.okhttp.OkHttpClient okHttpClient66 = okHttpClient49.setProxy(proxy61);
        com.squareup.okhttp.OkHttpClient okHttpClient67 = okHttpClient42.setProxy(proxy61);
        com.squareup.okhttp.OkHttpClient okHttpClient68 = okHttpClient17.setProxy(proxy61);
        java.net.SocketAddress socketAddress69 = proxy61.address();
        com.squareup.okhttp.OkHttpClient okHttpClient70 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier71 = null;
        okHttpClient70.hostnameVerifier = hostnameVerifier71;
        java.net.ResponseCache responseCache73 = null;
        okHttpClient70.responseCache = responseCache73;
        javax.net.ssl.HostnameVerifier hostnameVerifier75 = okHttpClient70.hostnameVerifier;
        java.net.Proxy proxy76 = okHttpClient70.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool79 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient70.connectionPool = connectionPool79;
        com.squareup.okhttp.OkHttpClient okHttpClient81 = okHttpClient70.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient82 = okHttpClient70.copyWithDefaults();
        java.net.ResponseCache responseCache83 = okHttpClient82.responseCache;
        boolean boolean84 = proxy61.equals((java.lang.Object) responseCache83);
        com.squareup.okhttp.OkHttpClient okHttpClient85 = okHttpClient15.setProxy(proxy61);
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache86 = okHttpClient85.okResponseCache();
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNull(cookieHandler11);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNull(proxySelector14);
        org.junit.Assert.assertNull(hostnameVerifier16);
        org.junit.Assert.assertNull(hostnameVerifier22);
        org.junit.Assert.assertNull(proxy23);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(okHttpClient30);
        org.junit.Assert.assertNotNull(connectionPool32);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNotNull(connectionPool40);
        org.junit.Assert.assertNotNull(okHttpClient42);
        org.junit.Assert.assertNotNull(connectionPool43);
        org.junit.Assert.assertNull(okAuthenticator44);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNotNull(connectionPool55);
        org.junit.Assert.assertNull(cookieHandler57);
        org.junit.Assert.assertNull(okResponseCache58);
        org.junit.Assert.assertNull(cookieHandler59);
        org.junit.Assert.assertNotNull(proxy61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + type64 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type64.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress65);
        org.junit.Assert.assertNotNull(okHttpClient66);
        org.junit.Assert.assertNotNull(okHttpClient67);
        org.junit.Assert.assertNotNull(okHttpClient68);
        org.junit.Assert.assertNull(socketAddress69);
        org.junit.Assert.assertNull(hostnameVerifier75);
        org.junit.Assert.assertNull(proxy76);
        org.junit.Assert.assertNotNull(okHttpClient81);
        org.junit.Assert.assertNotNull(okHttpClient82);
        org.junit.Assert.assertNull(responseCache83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(okHttpClient85);
        org.junit.Assert.assertNull(okResponseCache86);
    }

    @Test
    public void test12253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12253");
        java.net.Proxy proxy0 = java.net.Proxy.NO_PROXY;
        boolean boolean2 = proxy0.equals((java.lang.Object) 1L);
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ProxySelector proxySelector6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient3.setProxySelector(proxySelector6);
        java.net.ResponseCache responseCache8 = null;
        okHttpClient7.responseCache = responseCache8;
        javax.net.ssl.HostnameVerifier hostnameVerifier10 = okHttpClient7.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient7.setFollowProtocolRedirects(false);
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = null;
        okHttpClient13.hostnameVerifier = hostnameVerifier14;
        java.net.ResponseCache responseCache16 = null;
        okHttpClient13.responseCache = responseCache16;
        java.util.List<java.lang.String> strList18 = okHttpClient13.transports;
        com.squareup.okhttp.ConnectionPool connectionPool19 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient13.connectionPool = connectionPool19;
        com.squareup.okhttp.ConnectionPool connectionPool21 = okHttpClient13.connectionPool;
        int int22 = connectionPool21.getHttpConnectionCount();
        okHttpClient7.connectionPool = connectionPool21;
        boolean boolean24 = proxy0.equals((java.lang.Object) okHttpClient7);
        com.squareup.okhttp.ConnectionPool connectionPool25 = okHttpClient7.connectionPool;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient7.setFollowProtocolRedirects(true);
        java.net.ResponseCache responseCache28 = null;
        okHttpClient27.responseCache = responseCache28;
        java.net.ResponseCache responseCache30 = okHttpClient27.responseCache;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier32 = null;
        okHttpClient31.hostnameVerifier = hostnameVerifier32;
        java.net.ResponseCache responseCache34 = null;
        okHttpClient31.responseCache = responseCache34;
        java.util.List<java.lang.String> strList36 = okHttpClient31.transports;
        com.squareup.okhttp.ConnectionPool connectionPool37 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient31.connectionPool = connectionPool37;
        java.net.Proxy proxy39 = null;
        okHttpClient31.proxy = proxy39;
        boolean boolean41 = okHttpClient31.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient31.copyWithDefaults();
        java.net.Proxy proxy43 = java.net.Proxy.NO_PROXY;
        boolean boolean45 = proxy43.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type46 = proxy43.type();
        java.lang.String str47 = proxy43.toString();
        java.net.Proxy.Type type48 = proxy43.type();
        okHttpClient31.proxy = proxy43;
        com.squareup.okhttp.OkAuthenticator okAuthenticator50 = okHttpClient31.getAuthenticator();
        java.net.ProxySelector proxySelector51 = okHttpClient31.getProxySelector();
        com.squareup.okhttp.OkHttpClient okHttpClient52 = new com.squareup.okhttp.OkHttpClient(okHttpClient31);
        com.squareup.okhttp.OkHttpClient okHttpClient53 = new com.squareup.okhttp.OkHttpClient(okHttpClient31);
        com.squareup.okhttp.ConnectionPool connectionPool54 = okHttpClient31.connectionPool;
        int int55 = connectionPool54.getHttpConnectionCount();
        okHttpClient27.connectionPool = connectionPool54;
        org.junit.Assert.assertNotNull(proxy0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(okHttpClient7);
        org.junit.Assert.assertNull(hostnameVerifier10);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(connectionPool19);
        org.junit.Assert.assertNotNull(connectionPool21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(connectionPool25);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNull(responseCache30);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNotNull(connectionPool37);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(okHttpClient42);
        org.junit.Assert.assertNotNull(proxy43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + type46 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type46.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "DIRECT" + "'", str47, "DIRECT");
        org.junit.Assert.assertTrue("'" + type48 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type48.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(okAuthenticator50);
        org.junit.Assert.assertNull(proxySelector51);
        org.junit.Assert.assertNotNull(connectionPool54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
    }

    @Test
    public void test12254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12254");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.ConnectionPool connectionPool14 = new com.squareup.okhttp.ConnectionPool(0, 0L);
        okHttpClient0.connectionPool = connectionPool14;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory16 = okHttpClient0.getSslSocketFactory();
        java.net.CookieHandler cookieHandler17 = null;
        okHttpClient0.cookieHandler = cookieHandler17;
        java.net.ProxySelector proxySelector19 = okHttpClient0.proxySelector;
        java.net.ResponseCache responseCache20 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient0.setResponseCache(responseCache20);
        java.net.CookieHandler cookieHandler22 = null;
        okHttpClient21.cookieHandler = cookieHandler22;
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient21.setFollowProtocolRedirects(false);
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(sSLSocketFactory16);
        org.junit.Assert.assertNull(proxySelector19);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNotNull(okHttpClient25);
    }

    @Test
    public void test12255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12255");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.ResponseCache responseCache5 = null;
        okHttpClient4.responseCache = responseCache5;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient4.setSSLSocketFactory(sSLSocketFactory7);
        java.net.CookieHandler cookieHandler9 = okHttpClient8.cookieHandler;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory10 = okHttpClient8.sslSocketFactory;
        com.squareup.okhttp.ConnectionPool connectionPool13 = new com.squareup.okhttp.ConnectionPool((int) '4', (long) (byte) 100);
        com.squareup.okhttp.Address address14 = null;
        com.squareup.okhttp.Connection connection15 = connectionPool13.get(address14);
        int int16 = connectionPool13.getSpdyConnectionCount();
        okHttpClient8.connectionPool = connectionPool13;
        java.util.Set<com.squareup.okhttp.Route> routeSet18 = okHttpClient8.failedRoutes;
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertNull(cookieHandler9);
        org.junit.Assert.assertNull(sSLSocketFactory10);
        org.junit.Assert.assertNull(connection15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(routeSet18);
    }

    @Test
    public void test12256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12256");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        boolean boolean3 = okHttpClient0.getFollowProtocolRedirects();
        java.net.CookieHandler cookieHandler4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setCookieHandler(cookieHandler4);
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache6 = okHttpClient0.okResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        java.net.ResponseCache responseCache8 = okHttpClient7.getResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient9 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier10 = null;
        okHttpClient9.hostnameVerifier = hostnameVerifier10;
        java.net.ResponseCache responseCache12 = null;
        okHttpClient9.responseCache = responseCache12;
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = okHttpClient9.hostnameVerifier;
        java.net.Proxy proxy15 = okHttpClient9.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool18 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient9.connectionPool = connectionPool18;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient9.copyWithDefaults();
        java.net.ResponseCache responseCache21 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient20.setResponseCache(responseCache21);
        java.net.ProxySelector proxySelector23 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient20.setProxySelector(proxySelector23);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory25 = okHttpClient24.getSslSocketFactory();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory26 = okHttpClient24.getSslSocketFactory();
        java.lang.String[] strArray27 = sSLSocketFactory26.getSupportedCipherSuites();
        okHttpClient7.sslSocketFactory = sSLSocketFactory26;
        com.squareup.okhttp.OkHttpClient okHttpClient30 = okHttpClient7.setFollowProtocolRedirects(true);
        javax.net.ssl.HostnameVerifier hostnameVerifier31 = okHttpClient7.hostnameVerifier;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(okResponseCache6);
        org.junit.Assert.assertNull(responseCache8);
        org.junit.Assert.assertNull(hostnameVerifier14);
        org.junit.Assert.assertNull(proxy15);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNotNull(sSLSocketFactory25);
        org.junit.Assert.assertNotNull(sSLSocketFactory26);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(okHttpClient30);
        org.junit.Assert.assertNull(hostnameVerifier31);
    }

    @Test
    public void test12257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12257");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.CookieHandler cookieHandler8 = okHttpClient0.cookieHandler;
        java.net.ProxySelector proxySelector9 = null;
        okHttpClient0.proxySelector = proxySelector9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = null;
        okHttpClient11.hostnameVerifier = hostnameVerifier12;
        java.net.ResponseCache responseCache14 = null;
        okHttpClient11.responseCache = responseCache14;
        javax.net.ssl.HostnameVerifier hostnameVerifier16 = okHttpClient11.hostnameVerifier;
        java.net.Proxy proxy17 = okHttpClient11.getProxy();
        java.net.CookieHandler cookieHandler18 = null;
        okHttpClient11.cookieHandler = cookieHandler18;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier21 = null;
        okHttpClient20.hostnameVerifier = hostnameVerifier21;
        java.net.ResponseCache responseCache23 = null;
        okHttpClient20.responseCache = responseCache23;
        java.util.List<java.lang.String> strList25 = okHttpClient20.transports;
        com.squareup.okhttp.ConnectionPool connectionPool26 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient20.connectionPool = connectionPool26;
        java.net.CookieHandler cookieHandler28 = okHttpClient20.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache29 = okHttpClient20.okResponseCache();
        java.net.CookieHandler cookieHandler30 = okHttpClient20.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient31 = new com.squareup.okhttp.OkHttpClient(okHttpClient20);
        com.squareup.okhttp.OkHttpClient okHttpClient32 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier33 = null;
        okHttpClient32.hostnameVerifier = hostnameVerifier33;
        java.net.ProxySelector proxySelector35 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient32.setProxySelector(proxySelector35);
        java.net.CookieHandler cookieHandler37 = okHttpClient32.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient38 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier39 = null;
        okHttpClient38.hostnameVerifier = hostnameVerifier39;
        java.net.ResponseCache responseCache41 = null;
        okHttpClient38.responseCache = responseCache41;
        java.util.List<java.lang.String> strList43 = okHttpClient38.transports;
        com.squareup.okhttp.ConnectionPool connectionPool44 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient38.connectionPool = connectionPool44;
        java.net.Proxy proxy46 = null;
        okHttpClient38.proxy = proxy46;
        java.util.Set<com.squareup.okhttp.Route> routeSet48 = okHttpClient38.failedRoutes;
        okHttpClient32.failedRoutes = routeSet48;
        okHttpClient31.failedRoutes = routeSet48;
        okHttpClient11.failedRoutes = routeSet48;
        com.squareup.okhttp.OkHttpClient okHttpClient52 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier53 = null;
        okHttpClient52.hostnameVerifier = hostnameVerifier53;
        java.net.ProxySelector proxySelector55 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient56 = okHttpClient52.setProxySelector(proxySelector55);
        java.net.CookieHandler cookieHandler57 = okHttpClient52.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient58 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier59 = null;
        okHttpClient58.hostnameVerifier = hostnameVerifier59;
        java.net.ResponseCache responseCache61 = null;
        okHttpClient58.responseCache = responseCache61;
        java.util.List<java.lang.String> strList63 = okHttpClient58.transports;
        com.squareup.okhttp.ConnectionPool connectionPool64 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient58.connectionPool = connectionPool64;
        java.net.Proxy proxy66 = null;
        okHttpClient58.proxy = proxy66;
        java.util.Set<com.squareup.okhttp.Route> routeSet68 = okHttpClient58.failedRoutes;
        okHttpClient52.failedRoutes = routeSet68;
        java.net.ProxySelector proxySelector70 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient71 = okHttpClient52.setProxySelector(proxySelector70);
        com.squareup.okhttp.ConnectionPool connectionPool74 = new com.squareup.okhttp.ConnectionPool((int) (short) 10, (long) '4');
        okHttpClient52.connectionPool = connectionPool74;
        connectionPool74.evictAll();
        okHttpClient11.connectionPool = connectionPool74;
        com.squareup.okhttp.OkHttpClient okHttpClient78 = okHttpClient0.setConnectionPool(connectionPool74);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNull(cookieHandler8);
        org.junit.Assert.assertNull(hostnameVerifier16);
        org.junit.Assert.assertNull(proxy17);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNotNull(connectionPool26);
        org.junit.Assert.assertNull(cookieHandler28);
        org.junit.Assert.assertNull(okResponseCache29);
        org.junit.Assert.assertNull(cookieHandler30);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNull(cookieHandler37);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNotNull(connectionPool44);
        org.junit.Assert.assertNotNull(routeSet48);
        org.junit.Assert.assertNotNull(okHttpClient56);
        org.junit.Assert.assertNull(cookieHandler57);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNotNull(connectionPool64);
        org.junit.Assert.assertNotNull(routeSet68);
        org.junit.Assert.assertNotNull(okHttpClient71);
        org.junit.Assert.assertNotNull(okHttpClient78);
    }

    @Test
    public void test12258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12258");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient0.connectionPool = connectionPool9;
        java.util.List<java.lang.String> strList11 = okHttpClient0.getTransports();
        com.squareup.okhttp.OkHttpClient okHttpClient12 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        java.net.ResponseCache responseCache13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient12.setResponseCache(responseCache13);
        com.squareup.okhttp.ConnectionPool connectionPool15 = okHttpClient14.getConnectionPool();
        com.squareup.okhttp.OkHttpClient okHttpClient16 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier17 = null;
        okHttpClient16.hostnameVerifier = hostnameVerifier17;
        java.net.ProxySelector proxySelector19 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient16.setProxySelector(proxySelector19);
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient20.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient21.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet23 = okHttpClient22.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier25 = null;
        okHttpClient24.hostnameVerifier = hostnameVerifier25;
        java.net.ResponseCache responseCache27 = null;
        okHttpClient24.responseCache = responseCache27;
        javax.net.ssl.HostnameVerifier hostnameVerifier29 = okHttpClient24.hostnameVerifier;
        java.net.Proxy proxy30 = okHttpClient24.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool33 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient24.connectionPool = connectionPool33;
        java.util.List<java.lang.String> strList35 = okHttpClient24.getTransports();
        javax.net.ssl.HostnameVerifier hostnameVerifier36 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient24.setHostnameVerifier(hostnameVerifier36);
        com.squareup.okhttp.OkHttpClient okHttpClient38 = new com.squareup.okhttp.OkHttpClient(okHttpClient24);
        java.util.List<java.lang.String> strList39 = okHttpClient24.getTransports();
        com.squareup.okhttp.OkHttpClient okHttpClient40 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool41 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient40.connectionPool = connectionPool41;
        com.squareup.okhttp.OkHttpClient okHttpClient43 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier44 = null;
        okHttpClient43.hostnameVerifier = hostnameVerifier44;
        java.net.ResponseCache responseCache46 = null;
        okHttpClient43.responseCache = responseCache46;
        java.util.List<java.lang.String> strList48 = okHttpClient43.transports;
        com.squareup.okhttp.ConnectionPool connectionPool49 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient43.connectionPool = connectionPool49;
        com.squareup.okhttp.OkHttpClient okHttpClient51 = okHttpClient40.setConnectionPool(connectionPool49);
        com.squareup.okhttp.ConnectionPool connectionPool52 = okHttpClient51.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator53 = okHttpClient51.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool56 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient51.connectionPool = connectionPool56;
        java.net.ResponseCache responseCache58 = okHttpClient51.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory59 = okHttpClient51.sslSocketFactory;
        java.net.Proxy proxy60 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress61 = proxy60.address();
        com.squareup.okhttp.OkHttpClient okHttpClient62 = okHttpClient51.setProxy(proxy60);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory63 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient64 = okHttpClient51.setSSLSocketFactory(sSLSocketFactory63);
        com.squareup.okhttp.OkHttpClient okHttpClient65 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier66 = null;
        okHttpClient65.hostnameVerifier = hostnameVerifier66;
        java.net.ResponseCache responseCache68 = null;
        okHttpClient65.responseCache = responseCache68;
        javax.net.ssl.HostnameVerifier hostnameVerifier70 = okHttpClient65.hostnameVerifier;
        java.net.Proxy proxy71 = okHttpClient65.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool74 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient65.connectionPool = connectionPool74;
        com.squareup.okhttp.OkHttpClient okHttpClient76 = okHttpClient65.copyWithDefaults();
        java.net.ResponseCache responseCache77 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient78 = okHttpClient76.setResponseCache(responseCache77);
        com.squareup.okhttp.OkAuthenticator okAuthenticator79 = okHttpClient76.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient80 = okHttpClient51.setAuthenticator(okAuthenticator79);
        java.net.Proxy proxy81 = okHttpClient80.getProxy();
        java.net.ResponseCache responseCache82 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient83 = okHttpClient80.setResponseCache(responseCache82);
        com.squareup.okhttp.OkAuthenticator okAuthenticator84 = okHttpClient80.getAuthenticator();
        okHttpClient24.authenticator = okAuthenticator84;
        okHttpClient22.authenticator = okAuthenticator84;
        com.squareup.okhttp.OkHttpClient okHttpClient87 = okHttpClient14.setAuthenticator(okAuthenticator84);
        com.squareup.okhttp.OkHttpClient okHttpClient89 = okHttpClient14.setFollowProtocolRedirects(false);
        com.squareup.okhttp.OkHttpClient okHttpClient90 = new com.squareup.okhttp.OkHttpClient(okHttpClient89);
        okHttpClient90.followProtocolRedirects = false;
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(okHttpClient14);
        org.junit.Assert.assertNull(connectionPool15);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNotNull(routeSet23);
        org.junit.Assert.assertNull(hostnameVerifier29);
        org.junit.Assert.assertNull(proxy30);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNotNull(okHttpClient37);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNotNull(connectionPool41);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNotNull(connectionPool49);
        org.junit.Assert.assertNotNull(okHttpClient51);
        org.junit.Assert.assertNotNull(connectionPool52);
        org.junit.Assert.assertNull(okAuthenticator53);
        org.junit.Assert.assertNull(responseCache58);
        org.junit.Assert.assertNull(sSLSocketFactory59);
        org.junit.Assert.assertNotNull(proxy60);
        org.junit.Assert.assertNull(socketAddress61);
        org.junit.Assert.assertNotNull(okHttpClient62);
        org.junit.Assert.assertNotNull(okHttpClient64);
        org.junit.Assert.assertNull(hostnameVerifier70);
        org.junit.Assert.assertNull(proxy71);
        org.junit.Assert.assertNotNull(okHttpClient76);
        org.junit.Assert.assertNotNull(okHttpClient78);
        org.junit.Assert.assertNotNull(okAuthenticator79);
        org.junit.Assert.assertNotNull(okHttpClient80);
        org.junit.Assert.assertNotNull(proxy81);
        org.junit.Assert.assertNotNull(okHttpClient83);
        org.junit.Assert.assertNotNull(okAuthenticator84);
        org.junit.Assert.assertNotNull(okHttpClient87);
        org.junit.Assert.assertNotNull(okHttpClient89);
    }

    @Test
    public void test12259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12259");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient0.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.copyWithDefaults();
        java.net.ProxySelector proxySelector12 = okHttpClient0.getProxySelector();
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient14 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool15 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient14.connectionPool = connectionPool15;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = null;
        okHttpClient17.hostnameVerifier = hostnameVerifier18;
        java.net.ResponseCache responseCache20 = null;
        okHttpClient17.responseCache = responseCache20;
        java.util.List<java.lang.String> strList22 = okHttpClient17.transports;
        com.squareup.okhttp.ConnectionPool connectionPool23 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient17.connectionPool = connectionPool23;
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient14.setConnectionPool(connectionPool23);
        java.net.Proxy proxy26 = okHttpClient25.proxy;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory27 = null;
        okHttpClient25.sslSocketFactory = sSLSocketFactory27;
        com.squareup.okhttp.OkHttpClient okHttpClient29 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = null;
        okHttpClient29.hostnameVerifier = hostnameVerifier30;
        java.net.ResponseCache responseCache32 = null;
        okHttpClient29.responseCache = responseCache32;
        java.util.List<java.lang.String> strList34 = okHttpClient29.transports;
        com.squareup.okhttp.ConnectionPool connectionPool35 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient29.connectionPool = connectionPool35;
        com.squareup.okhttp.ConnectionPool connectionPool37 = okHttpClient29.connectionPool;
        int int38 = connectionPool37.getHttpConnectionCount();
        com.squareup.okhttp.Address address39 = null;
        com.squareup.okhttp.Connection connection40 = connectionPool37.get(address39);
        okHttpClient25.connectionPool = connectionPool37;
        java.net.ProxySelector proxySelector42 = okHttpClient25.proxySelector;
        java.net.Proxy proxy43 = java.net.Proxy.NO_PROXY;
        boolean boolean45 = proxy43.equals((java.lang.Object) 1L);
        com.squareup.okhttp.OkHttpClient okHttpClient46 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache47 = okHttpClient46.okResponseCache();
        java.net.ResponseCache responseCache48 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient49 = okHttpClient46.setResponseCache(responseCache48);
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList52 = new java.util.ArrayList<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        okHttpClient46.transports = strList52;
        boolean boolean55 = proxy43.equals((java.lang.Object) strList52);
        okHttpClient25.proxy = proxy43;
        java.lang.String str57 = proxy43.toString();
        com.squareup.okhttp.OkHttpClient okHttpClient58 = okHttpClient0.setProxy(proxy43);
        com.squareup.okhttp.OkHttpClient okHttpClient59 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        java.net.ResponseCache responseCache60 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient61 = okHttpClient59.setResponseCache(responseCache60);
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(proxySelector12);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNotNull(connectionPool15);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNotNull(connectionPool23);
        org.junit.Assert.assertNotNull(okHttpClient25);
        org.junit.Assert.assertNull(proxy26);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(connectionPool35);
        org.junit.Assert.assertNotNull(connectionPool37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNull(connection40);
        org.junit.Assert.assertNull(proxySelector42);
        org.junit.Assert.assertNotNull(proxy43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(okResponseCache47);
        org.junit.Assert.assertNotNull(okHttpClient49);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "DIRECT" + "'", str57, "DIRECT");
        org.junit.Assert.assertNotNull(okHttpClient58);
        org.junit.Assert.assertNotNull(okHttpClient61);
    }

    @Test
    public void test12260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12260");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        okHttpClient0.authenticator = okAuthenticator3;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = okHttpClient5.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = null;
        okHttpClient7.hostnameVerifier = hostnameVerifier8;
        java.net.ResponseCache responseCache10 = null;
        okHttpClient7.responseCache = responseCache10;
        java.util.List<java.lang.String> strList12 = okHttpClient7.transports;
        com.squareup.okhttp.ConnectionPool connectionPool13 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient7.connectionPool = connectionPool13;
        java.net.CookieHandler cookieHandler15 = okHttpClient7.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache16 = okHttpClient7.okResponseCache();
        java.net.CookieHandler cookieHandler17 = okHttpClient7.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient(okHttpClient7);
        java.net.Proxy proxy19 = java.net.Proxy.NO_PROXY;
        boolean boolean21 = proxy19.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type22 = proxy19.type();
        java.net.SocketAddress socketAddress23 = proxy19.address();
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient7.setProxy(proxy19);
        com.squareup.okhttp.OkHttpClient okHttpClient25 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier26 = null;
        okHttpClient25.hostnameVerifier = hostnameVerifier26;
        java.net.ResponseCache responseCache28 = null;
        okHttpClient25.responseCache = responseCache28;
        java.util.List<java.lang.String> strList30 = okHttpClient25.transports;
        com.squareup.okhttp.ConnectionPool connectionPool31 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient25.connectionPool = connectionPool31;
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient25.copyWithDefaults();
        java.net.ProxySelector proxySelector34 = okHttpClient33.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory35 = okHttpClient33.getSslSocketFactory();
        okHttpClient24.sslSocketFactory = sSLSocketFactory35;
        java.lang.String[] strArray37 = sSLSocketFactory35.getDefaultCipherSuites();
        java.lang.String[] strArray38 = sSLSocketFactory35.getSupportedCipherSuites();
        java.lang.String[] strArray39 = sSLSocketFactory35.getDefaultCipherSuites();
        java.net.Socket socket40 = sSLSocketFactory35.createSocket();
        com.squareup.okhttp.OkHttpClient okHttpClient41 = okHttpClient5.setSSLSocketFactory(sSLSocketFactory35);
        java.net.InetAddress inetAddress44 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket46 = sSLSocketFactory35.createSocket("", (int) (short) 10, inetAddress44, 0);
            org.junit.Assert.fail("Expected exception of type java.net.ConnectException; message: Connection refused (Connection refused)");
        } catch (java.net.ConnectException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNotNull(okHttpClient6);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(connectionPool13);
        org.junit.Assert.assertNull(cookieHandler15);
        org.junit.Assert.assertNull(okResponseCache16);
        org.junit.Assert.assertNull(cookieHandler17);
        org.junit.Assert.assertNotNull(proxy19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + type22 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type22.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress23);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNotNull(connectionPool31);
        org.junit.Assert.assertNotNull(okHttpClient33);
// flaky:         org.junit.Assert.assertNull(proxySelector34);
        org.junit.Assert.assertNotNull(sSLSocketFactory35);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(socket40);
        org.junit.Assert.assertEquals(socket40.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(okHttpClient41);
    }

    @Test
    public void test12261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12261");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.CookieHandler cookieHandler5 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = null;
        okHttpClient6.hostnameVerifier = hostnameVerifier7;
        java.net.ResponseCache responseCache9 = null;
        okHttpClient6.responseCache = responseCache9;
        java.util.List<java.lang.String> strList11 = okHttpClient6.transports;
        com.squareup.okhttp.ConnectionPool connectionPool12 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient6.connectionPool = connectionPool12;
        java.net.Proxy proxy14 = null;
        okHttpClient6.proxy = proxy14;
        java.util.Set<com.squareup.okhttp.Route> routeSet16 = okHttpClient6.failedRoutes;
        okHttpClient0.failedRoutes = routeSet16;
        java.net.ProxySelector proxySelector18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient0.setProxySelector(proxySelector18);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory20 = null;
        okHttpClient19.sslSocketFactory = sSLSocketFactory20;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient19.copyWithDefaults();
        java.net.CookieHandler cookieHandler23 = okHttpClient22.getCookieHandler();
        boolean boolean24 = okHttpClient22.getFollowProtocolRedirects();
        java.net.CookieHandler cookieHandler25 = null;
        okHttpClient22.cookieHandler = cookieHandler25;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier28 = null;
        okHttpClient27.hostnameVerifier = hostnameVerifier28;
        java.net.ResponseCache responseCache30 = null;
        okHttpClient27.responseCache = responseCache30;
        java.util.List<java.lang.String> strList32 = okHttpClient27.transports;
        com.squareup.okhttp.ConnectionPool connectionPool33 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient27.connectionPool = connectionPool33;
        java.net.CookieHandler cookieHandler35 = okHttpClient27.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache36 = okHttpClient27.okResponseCache();
        java.net.CookieHandler cookieHandler37 = okHttpClient27.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient38 = new com.squareup.okhttp.OkHttpClient(okHttpClient27);
        java.net.Proxy proxy39 = java.net.Proxy.NO_PROXY;
        boolean boolean41 = proxy39.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type42 = proxy39.type();
        java.net.SocketAddress socketAddress43 = proxy39.address();
        com.squareup.okhttp.OkHttpClient okHttpClient44 = okHttpClient27.setProxy(proxy39);
        java.lang.String[] strArray46 = new java.lang.String[] { "DIRECT" };
        java.util.ArrayList<java.lang.String> strList47 = new java.util.ArrayList<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        okHttpClient27.transports = strList47;
        com.squareup.okhttp.OkHttpClient okHttpClient51 = okHttpClient27.setFollowProtocolRedirects(false);
        com.squareup.okhttp.ConnectionPool connectionPool54 = new com.squareup.okhttp.ConnectionPool((int) '#', (long) (short) 100);
        com.squareup.okhttp.OkHttpClient okHttpClient55 = okHttpClient51.setConnectionPool(connectionPool54);
        java.net.CookieHandler cookieHandler56 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient57 = okHttpClient55.setCookieHandler(cookieHandler56);
        java.net.ResponseCache responseCache58 = okHttpClient57.responseCache;
        java.net.Proxy proxy59 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress60 = proxy59.address();
        com.squareup.okhttp.OkHttpClient okHttpClient61 = okHttpClient57.setProxy(proxy59);
        java.util.List<java.lang.String> strList62 = okHttpClient61.transports;
        java.util.List<java.lang.String> strList63 = okHttpClient61.getTransports();
        java.util.Set<com.squareup.okhttp.Route> routeSet64 = okHttpClient61.failedRoutes;
        okHttpClient22.failedRoutes = routeSet64;
        com.squareup.okhttp.OkHttpClient okHttpClient66 = new com.squareup.okhttp.OkHttpClient(okHttpClient22);
        com.squareup.okhttp.OkHttpClient okHttpClient67 = new com.squareup.okhttp.OkHttpClient(okHttpClient22);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNotNull(routeSet16);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNull(cookieHandler23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNotNull(connectionPool33);
        org.junit.Assert.assertNull(cookieHandler35);
        org.junit.Assert.assertNull(okResponseCache36);
        org.junit.Assert.assertNull(cookieHandler37);
        org.junit.Assert.assertNotNull(proxy39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + type42 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type42.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress43);
        org.junit.Assert.assertNotNull(okHttpClient44);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(okHttpClient51);
        org.junit.Assert.assertNotNull(okHttpClient55);
        org.junit.Assert.assertNotNull(okHttpClient57);
        org.junit.Assert.assertNull(responseCache58);
        org.junit.Assert.assertNotNull(proxy59);
        org.junit.Assert.assertNull(socketAddress60);
        org.junit.Assert.assertNotNull(okHttpClient61);
        org.junit.Assert.assertNotNull(strList62);
        org.junit.Assert.assertNotNull(strList63);
        org.junit.Assert.assertNotNull(routeSet64);
    }

    @Test
    public void test12262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12262");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory6 = okHttpClient0.sslSocketFactory;
        java.net.CookieHandler cookieHandler7 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache8 = okHttpClient0.okResponseCache();
        java.net.Proxy proxy9 = okHttpClient0.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier11 = null;
        okHttpClient10.hostnameVerifier = hostnameVerifier11;
        java.net.ProxySelector proxySelector13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient10.setProxySelector(proxySelector13);
        javax.net.ssl.HostnameVerifier hostnameVerifier15 = okHttpClient10.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier17 = null;
        okHttpClient16.hostnameVerifier = hostnameVerifier17;
        java.net.ResponseCache responseCache19 = null;
        okHttpClient16.responseCache = responseCache19;
        java.util.List<java.lang.String> strList21 = okHttpClient16.transports;
        com.squareup.okhttp.ConnectionPool connectionPool22 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient16.connectionPool = connectionPool22;
        java.net.Proxy proxy24 = null;
        okHttpClient16.proxy = proxy24;
        boolean boolean26 = okHttpClient16.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = new com.squareup.okhttp.OkHttpClient(okHttpClient16);
        java.net.ProxySelector proxySelector28 = okHttpClient27.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier29 = okHttpClient27.hostnameVerifier;
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = okHttpClient27.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient31 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool32 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient31.connectionPool = connectionPool32;
        com.squareup.okhttp.OkAuthenticator okAuthenticator34 = null;
        okHttpClient31.authenticator = okAuthenticator34;
        java.net.CookieHandler cookieHandler36 = null;
        okHttpClient31.cookieHandler = cookieHandler36;
        java.net.Proxy proxy38 = java.net.Proxy.NO_PROXY;
        boolean boolean40 = proxy38.equals((java.lang.Object) 1L);
        com.squareup.okhttp.OkHttpClient okHttpClient41 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache42 = okHttpClient41.okResponseCache();
        java.net.ResponseCache responseCache43 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient44 = okHttpClient41.setResponseCache(responseCache43);
        java.lang.String[] strArray46 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList47 = new java.util.ArrayList<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        okHttpClient41.transports = strList47;
        boolean boolean50 = proxy38.equals((java.lang.Object) strList47);
        com.squareup.okhttp.OkHttpClient okHttpClient51 = okHttpClient31.setProxy(proxy38);
        com.squareup.okhttp.OkHttpClient okHttpClient52 = okHttpClient27.setProxy(proxy38);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory53 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient54 = okHttpClient27.setSSLSocketFactory(sSLSocketFactory53);
        java.net.Proxy proxy55 = java.net.Proxy.NO_PROXY;
        boolean boolean57 = proxy55.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type58 = proxy55.type();
        java.net.SocketAddress socketAddress59 = proxy55.address();
        com.squareup.okhttp.OkHttpClient okHttpClient60 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier61 = null;
        okHttpClient60.hostnameVerifier = hostnameVerifier61;
        java.net.ResponseCache responseCache63 = null;
        okHttpClient60.responseCache = responseCache63;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache65 = okHttpClient60.okResponseCache();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory66 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient67 = okHttpClient60.setSSLSocketFactory(sSLSocketFactory66);
        boolean boolean68 = proxy55.equals((java.lang.Object) okHttpClient60);
        com.squareup.okhttp.OkHttpClient okHttpClient69 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool70 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient69.connectionPool = connectionPool70;
        com.squareup.okhttp.OkHttpClient okHttpClient72 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier73 = null;
        okHttpClient72.hostnameVerifier = hostnameVerifier73;
        java.net.ResponseCache responseCache75 = null;
        okHttpClient72.responseCache = responseCache75;
        java.util.List<java.lang.String> strList77 = okHttpClient72.transports;
        com.squareup.okhttp.ConnectionPool connectionPool78 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient72.connectionPool = connectionPool78;
        com.squareup.okhttp.OkHttpClient okHttpClient80 = okHttpClient69.setConnectionPool(connectionPool78);
        java.net.ResponseCache responseCache81 = okHttpClient69.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory82 = okHttpClient69.sslSocketFactory;
        java.net.ResponseCache responseCache83 = okHttpClient69.getResponseCache();
        com.squareup.okhttp.ConnectionPool connectionPool84 = okHttpClient69.connectionPool;
        boolean boolean85 = proxy55.equals((java.lang.Object) connectionPool84);
        com.squareup.okhttp.OkHttpClient okHttpClient86 = okHttpClient54.setProxy(proxy55);
        com.squareup.okhttp.OkHttpClient okHttpClient87 = okHttpClient10.setProxy(proxy55);
        java.net.Proxy.Type type88 = proxy55.type();
        okHttpClient0.proxy = proxy55;
        java.net.SocketAddress socketAddress90 = proxy55.address();
        java.net.Proxy.Type type91 = proxy55.type();
        java.net.SocketAddress socketAddress92 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Proxy proxy93 = new java.net.Proxy(type91, socketAddress92);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: type DIRECT is not compatible with address null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(sSLSocketFactory6);
        org.junit.Assert.assertNull(cookieHandler7);
        org.junit.Assert.assertNull(okResponseCache8);
        org.junit.Assert.assertNull(proxy9);
        org.junit.Assert.assertNotNull(okHttpClient14);
        org.junit.Assert.assertNull(hostnameVerifier15);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(connectionPool22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(proxySelector28);
        org.junit.Assert.assertNull(hostnameVerifier29);
        org.junit.Assert.assertNull(hostnameVerifier30);
        org.junit.Assert.assertNotNull(connectionPool32);
        org.junit.Assert.assertNotNull(proxy38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(okResponseCache42);
        org.junit.Assert.assertNotNull(okHttpClient44);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(okHttpClient51);
        org.junit.Assert.assertNotNull(okHttpClient52);
        org.junit.Assert.assertNotNull(okHttpClient54);
        org.junit.Assert.assertNotNull(proxy55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + type58 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type58.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress59);
        org.junit.Assert.assertNull(okResponseCache65);
        org.junit.Assert.assertNotNull(okHttpClient67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(connectionPool70);
        org.junit.Assert.assertNull(strList77);
        org.junit.Assert.assertNotNull(connectionPool78);
        org.junit.Assert.assertNotNull(okHttpClient80);
        org.junit.Assert.assertNull(responseCache81);
        org.junit.Assert.assertNull(sSLSocketFactory82);
        org.junit.Assert.assertNull(responseCache83);
        org.junit.Assert.assertNotNull(connectionPool84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(okHttpClient86);
        org.junit.Assert.assertNotNull(okHttpClient87);
        org.junit.Assert.assertTrue("'" + type88 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type88.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress90);
        org.junit.Assert.assertTrue("'" + type91 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type91.equals(java.net.Proxy.Type.DIRECT));
    }

    @Test
    public void test12263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12263");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.Proxy proxy8 = null;
        okHttpClient0.proxy = proxy8;
        java.net.Proxy proxy10 = okHttpClient0.getProxy();
        java.net.ProxySelector proxySelector11 = null;
        okHttpClient0.proxySelector = proxySelector11;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache13 = okHttpClient0.okResponseCache();
        java.net.CookieHandler cookieHandler14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient0.setCookieHandler(cookieHandler14);
        java.net.CookieHandler cookieHandler16 = null;
        okHttpClient0.cookieHandler = cookieHandler16;
        java.util.List<java.lang.String> strList18 = okHttpClient0.getTransports();
        com.squareup.okhttp.OkHttpClient okHttpClient19 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier20 = null;
        okHttpClient19.hostnameVerifier = hostnameVerifier20;
        java.net.ResponseCache responseCache22 = null;
        okHttpClient19.responseCache = responseCache22;
        java.util.List<java.lang.String> strList24 = okHttpClient19.transports;
        com.squareup.okhttp.ConnectionPool connectionPool25 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient19.connectionPool = connectionPool25;
        java.net.Proxy proxy27 = null;
        okHttpClient19.proxy = proxy27;
        boolean boolean29 = okHttpClient19.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient30 = new com.squareup.okhttp.OkHttpClient(okHttpClient19);
        java.util.Set<com.squareup.okhttp.Route> routeSet31 = okHttpClient19.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = new com.squareup.okhttp.OkHttpClient(okHttpClient19);
        javax.net.ssl.HostnameVerifier hostnameVerifier33 = null;
        okHttpClient32.hostnameVerifier = hostnameVerifier33;
        java.util.Set<com.squareup.okhttp.Route> routeSet35 = okHttpClient32.failedRoutes;
        okHttpClient0.failedRoutes = routeSet35;
        java.net.ResponseCache responseCache37 = null;
        okHttpClient0.responseCache = responseCache37;
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNull(proxy10);
        org.junit.Assert.assertNull(okResponseCache13);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNotNull(connectionPool25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(routeSet31);
        org.junit.Assert.assertNotNull(routeSet35);
    }

    @Test
    public void test12264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12264");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache1 = okHttpClient0.okResponseCache();
        java.net.ResponseCache responseCache2 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.setResponseCache(responseCache2);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        okHttpClient0.transports = strList6;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory9);
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = null;
        okHttpClient11.hostnameVerifier = hostnameVerifier12;
        java.net.ResponseCache responseCache14 = null;
        okHttpClient11.responseCache = responseCache14;
        javax.net.ssl.HostnameVerifier hostnameVerifier16 = okHttpClient11.hostnameVerifier;
        java.net.Proxy proxy17 = okHttpClient11.getProxy();
        java.net.CookieHandler cookieHandler18 = null;
        okHttpClient11.cookieHandler = cookieHandler18;
        okHttpClient11.followProtocolRedirects = true;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier23 = null;
        okHttpClient22.hostnameVerifier = hostnameVerifier23;
        java.net.ResponseCache responseCache25 = null;
        okHttpClient22.responseCache = responseCache25;
        javax.net.ssl.HostnameVerifier hostnameVerifier27 = okHttpClient22.hostnameVerifier;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory28 = okHttpClient22.sslSocketFactory;
        java.net.CookieHandler cookieHandler29 = okHttpClient22.cookieHandler;
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = okHttpClient22.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool32 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient31.connectionPool = connectionPool32;
        com.squareup.okhttp.OkAuthenticator okAuthenticator34 = null;
        okHttpClient31.authenticator = okAuthenticator34;
        java.util.List<java.lang.String> strList36 = okHttpClient31.transports;
        java.net.ResponseCache responseCache37 = null;
        okHttpClient31.responseCache = responseCache37;
        com.squareup.okhttp.OkHttpClient okHttpClient39 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier40 = null;
        okHttpClient39.hostnameVerifier = hostnameVerifier40;
        java.net.ResponseCache responseCache42 = null;
        okHttpClient39.responseCache = responseCache42;
        javax.net.ssl.HostnameVerifier hostnameVerifier44 = okHttpClient39.hostnameVerifier;
        java.net.Proxy proxy45 = okHttpClient39.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool48 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient39.connectionPool = connectionPool48;
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient39.copyWithDefaults();
        java.net.Proxy proxy51 = okHttpClient50.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier52 = okHttpClient50.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient53 = okHttpClient31.setHostnameVerifier(hostnameVerifier52);
        com.squareup.okhttp.OkHttpClient okHttpClient54 = okHttpClient22.setHostnameVerifier(hostnameVerifier52);
        okHttpClient11.hostnameVerifier = hostnameVerifier52;
        com.squareup.okhttp.OkHttpClient okHttpClient56 = okHttpClient0.setHostnameVerifier(hostnameVerifier52);
        javax.net.ssl.HostnameVerifier hostnameVerifier57 = okHttpClient0.getHostnameVerifier();
        java.net.ProxySelector proxySelector58 = okHttpClient0.proxySelector;
        org.junit.Assert.assertNull(okResponseCache1);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertNull(hostnameVerifier16);
        org.junit.Assert.assertNull(proxy17);
        org.junit.Assert.assertNull(hostnameVerifier27);
        org.junit.Assert.assertNull(sSLSocketFactory28);
        org.junit.Assert.assertNull(cookieHandler29);
        org.junit.Assert.assertNull(hostnameVerifier30);
        org.junit.Assert.assertNotNull(connectionPool32);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNull(hostnameVerifier44);
        org.junit.Assert.assertNull(proxy45);
        org.junit.Assert.assertNotNull(okHttpClient50);
        org.junit.Assert.assertNull(proxy51);
        org.junit.Assert.assertNotNull(hostnameVerifier52);
        org.junit.Assert.assertNotNull(okHttpClient53);
        org.junit.Assert.assertNotNull(okHttpClient54);
        org.junit.Assert.assertNotNull(okHttpClient56);
        org.junit.Assert.assertNotNull(hostnameVerifier57);
        org.junit.Assert.assertNull(proxySelector58);
    }

    @Test
    public void test12265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12265");
        com.squareup.okhttp.ConnectionPool connectionPool2 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) 1);
        com.squareup.okhttp.Connection connection3 = null;
        // The following exception was thrown during execution in test generation
        try {
            connectionPool2.recycle(connection3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test12266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12266");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.OkAuthenticator okAuthenticator12 = okHttpClient11.getAuthenticator();
        java.net.ProxySelector proxySelector13 = okHttpClient11.getProxySelector();
        java.net.ResponseCache responseCache14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient11.setResponseCache(responseCache14);
        java.net.CookieHandler cookieHandler16 = null;
        okHttpClient15.cookieHandler = cookieHandler16;
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = okHttpClient15.getHostnameVerifier();
        java.net.ResponseCache responseCache19 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient15.setResponseCache(responseCache19);
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache21 = okHttpClient20.okResponseCache();
        com.squareup.okhttp.ConnectionPool connectionPool22 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient20.setConnectionPool(connectionPool22);
        java.net.Proxy proxy24 = okHttpClient23.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient25 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier26 = null;
        okHttpClient25.hostnameVerifier = hostnameVerifier26;
        java.net.ResponseCache responseCache28 = null;
        okHttpClient25.responseCache = responseCache28;
        java.util.List<java.lang.String> strList30 = okHttpClient25.transports;
        com.squareup.okhttp.ConnectionPool connectionPool31 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient25.connectionPool = connectionPool31;
        java.net.Proxy proxy33 = null;
        okHttpClient25.proxy = proxy33;
        boolean boolean35 = okHttpClient25.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient36 = new com.squareup.okhttp.OkHttpClient(okHttpClient25);
        java.net.ProxySelector proxySelector37 = okHttpClient36.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier38 = okHttpClient36.hostnameVerifier;
        javax.net.ssl.HostnameVerifier hostnameVerifier39 = okHttpClient36.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient40 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool41 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient40.connectionPool = connectionPool41;
        com.squareup.okhttp.OkAuthenticator okAuthenticator43 = null;
        okHttpClient40.authenticator = okAuthenticator43;
        java.net.CookieHandler cookieHandler45 = null;
        okHttpClient40.cookieHandler = cookieHandler45;
        java.net.Proxy proxy47 = java.net.Proxy.NO_PROXY;
        boolean boolean49 = proxy47.equals((java.lang.Object) 1L);
        com.squareup.okhttp.OkHttpClient okHttpClient50 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache51 = okHttpClient50.okResponseCache();
        java.net.ResponseCache responseCache52 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient53 = okHttpClient50.setResponseCache(responseCache52);
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList56 = new java.util.ArrayList<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        okHttpClient50.transports = strList56;
        boolean boolean59 = proxy47.equals((java.lang.Object) strList56);
        com.squareup.okhttp.OkHttpClient okHttpClient60 = okHttpClient40.setProxy(proxy47);
        com.squareup.okhttp.OkHttpClient okHttpClient61 = okHttpClient36.setProxy(proxy47);
        java.net.SocketAddress socketAddress62 = proxy47.address();
        com.squareup.okhttp.OkHttpClient okHttpClient63 = okHttpClient23.setProxy(proxy47);
        java.net.ProxySelector proxySelector64 = okHttpClient23.proxySelector;
        com.squareup.okhttp.OkHttpClient okHttpClient65 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier66 = null;
        okHttpClient65.hostnameVerifier = hostnameVerifier66;
        java.net.ProxySelector proxySelector68 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient69 = okHttpClient65.setProxySelector(proxySelector68);
        java.net.ResponseCache responseCache70 = null;
        okHttpClient69.responseCache = responseCache70;
        javax.net.ssl.HostnameVerifier hostnameVerifier72 = okHttpClient69.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient74 = okHttpClient69.setFollowProtocolRedirects(false);
        java.net.ProxySelector proxySelector75 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient76 = okHttpClient74.setProxySelector(proxySelector75);
        com.squareup.okhttp.OkHttpClient okHttpClient77 = okHttpClient76.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool80 = new com.squareup.okhttp.ConnectionPool(10, 0L);
        int int81 = connectionPool80.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient82 = okHttpClient77.setConnectionPool(connectionPool80);
        com.squareup.okhttp.ConnectionPool connectionPool83 = okHttpClient77.connectionPool;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory84 = okHttpClient77.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient85 = new com.squareup.okhttp.OkHttpClient(okHttpClient77);
        javax.net.ssl.HostnameVerifier hostnameVerifier86 = okHttpClient77.hostnameVerifier;
        okHttpClient23.hostnameVerifier = hostnameVerifier86;
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(okAuthenticator12);
        org.junit.Assert.assertNull(proxySelector13);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNull(hostnameVerifier18);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNull(okResponseCache21);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertNull(proxy24);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNotNull(connectionPool31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(proxySelector37);
        org.junit.Assert.assertNull(hostnameVerifier38);
        org.junit.Assert.assertNull(hostnameVerifier39);
        org.junit.Assert.assertNotNull(connectionPool41);
        org.junit.Assert.assertNotNull(proxy47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(okResponseCache51);
        org.junit.Assert.assertNotNull(okHttpClient53);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(okHttpClient60);
        org.junit.Assert.assertNotNull(okHttpClient61);
        org.junit.Assert.assertNull(socketAddress62);
        org.junit.Assert.assertNotNull(okHttpClient63);
        org.junit.Assert.assertNull(proxySelector64);
        org.junit.Assert.assertNotNull(okHttpClient69);
        org.junit.Assert.assertNull(hostnameVerifier72);
        org.junit.Assert.assertNotNull(okHttpClient74);
        org.junit.Assert.assertNotNull(okHttpClient76);
        org.junit.Assert.assertNotNull(okHttpClient77);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertNotNull(okHttpClient82);
        org.junit.Assert.assertNotNull(connectionPool83);
        org.junit.Assert.assertNotNull(sSLSocketFactory84);
        org.junit.Assert.assertNotNull(hostnameVerifier86);
    }

    @Test
    public void test12267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12267");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.CookieHandler cookieHandler6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient0.setCookieHandler(cookieHandler6);
        java.net.ResponseCache responseCache8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient7.setResponseCache(responseCache8);
        com.squareup.okhttp.OkHttpClient okHttpClient10 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier11 = null;
        okHttpClient10.hostnameVerifier = hostnameVerifier11;
        java.net.ResponseCache responseCache13 = null;
        okHttpClient10.responseCache = responseCache13;
        java.util.List<java.lang.String> strList15 = okHttpClient10.transports;
        com.squareup.okhttp.ConnectionPool connectionPool16 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient10.connectionPool = connectionPool16;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient10.copyWithDefaults();
        java.net.ProxySelector proxySelector19 = okHttpClient18.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory20 = okHttpClient18.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient7.setSSLSocketFactory(sSLSocketFactory20);
        boolean boolean22 = okHttpClient21.followProtocolRedirects;
        java.util.List<java.lang.String> strList23 = okHttpClient21.transports;
        java.net.ResponseCache responseCache24 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient21.setResponseCache(responseCache24);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNotNull(okHttpClient7);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(connectionPool16);
        org.junit.Assert.assertNotNull(okHttpClient18);
// flaky:         org.junit.Assert.assertNull(proxySelector19);
        org.junit.Assert.assertNotNull(sSLSocketFactory20);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNotNull(okHttpClient25);
    }

    @Test
    public void test12268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12268");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.OkAuthenticator okAuthenticator12 = okHttpClient11.getAuthenticator();
        java.net.ProxySelector proxySelector13 = okHttpClient11.getProxySelector();
        java.net.ResponseCache responseCache14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient11.setResponseCache(responseCache14);
        java.net.ResponseCache responseCache16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient15.setResponseCache(responseCache16);
        com.squareup.okhttp.ConnectionPool connectionPool18 = okHttpClient15.connectionPool;
        boolean boolean19 = okHttpClient15.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient15.copyWithDefaults();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory21 = okHttpClient20.getSslSocketFactory();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory22 = okHttpClient20.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient23 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier24 = null;
        okHttpClient23.hostnameVerifier = hostnameVerifier24;
        java.net.ProxySelector proxySelector26 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient23.setProxySelector(proxySelector26);
        java.net.CookieHandler cookieHandler28 = okHttpClient23.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient29 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = null;
        okHttpClient29.hostnameVerifier = hostnameVerifier30;
        java.net.ResponseCache responseCache32 = null;
        okHttpClient29.responseCache = responseCache32;
        java.util.List<java.lang.String> strList34 = okHttpClient29.transports;
        com.squareup.okhttp.ConnectionPool connectionPool35 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient29.connectionPool = connectionPool35;
        java.net.Proxy proxy37 = null;
        okHttpClient29.proxy = proxy37;
        java.util.Set<com.squareup.okhttp.Route> routeSet39 = okHttpClient29.failedRoutes;
        okHttpClient23.failedRoutes = routeSet39;
        java.net.ProxySelector proxySelector41 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient23.setProxySelector(proxySelector41);
        com.squareup.okhttp.OkHttpClient okHttpClient43 = okHttpClient23.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient44 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier45 = null;
        okHttpClient44.hostnameVerifier = hostnameVerifier45;
        java.net.ResponseCache responseCache47 = null;
        okHttpClient44.responseCache = responseCache47;
        javax.net.ssl.HostnameVerifier hostnameVerifier49 = okHttpClient44.hostnameVerifier;
        java.net.Proxy proxy50 = okHttpClient44.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool53 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient44.connectionPool = connectionPool53;
        com.squareup.okhttp.OkHttpClient okHttpClient55 = okHttpClient44.copyWithDefaults();
        java.net.ResponseCache responseCache56 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient57 = okHttpClient55.setResponseCache(responseCache56);
        javax.net.ssl.HostnameVerifier hostnameVerifier58 = okHttpClient57.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient59 = okHttpClient57.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient60 = new com.squareup.okhttp.OkHttpClient(okHttpClient59);
        com.squareup.okhttp.ConnectionPool connectionPool63 = new com.squareup.okhttp.ConnectionPool((int) (byte) 0, (long) (short) 0);
        com.squareup.okhttp.OkHttpClient okHttpClient64 = okHttpClient59.setConnectionPool(connectionPool63);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory65 = okHttpClient59.getSslSocketFactory();
        java.net.Socket socket66 = sSLSocketFactory65.createSocket();
        java.lang.String[] strArray67 = sSLSocketFactory65.getSupportedCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient68 = okHttpClient43.setSSLSocketFactory(sSLSocketFactory65);
        java.net.Socket socket69 = sSLSocketFactory65.createSocket();
        java.lang.String[] strArray70 = sSLSocketFactory65.getSupportedCipherSuites();
        java.net.Socket socket71 = sSLSocketFactory65.createSocket();
        java.io.InputStream inputStream72 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket74 = sSLSocketFactory22.createSocket(socket71, inputStream72, false);
            org.junit.Assert.fail("Expected exception of type java.net.SocketException; message: Underlying socket is not connected");
        } catch (java.net.SocketException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(okAuthenticator12);
        org.junit.Assert.assertNull(proxySelector13);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNotNull(connectionPool18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNotNull(sSLSocketFactory21);
        org.junit.Assert.assertNotNull(sSLSocketFactory22);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNull(cookieHandler28);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(connectionPool35);
        org.junit.Assert.assertNotNull(routeSet39);
        org.junit.Assert.assertNotNull(okHttpClient42);
        org.junit.Assert.assertNotNull(okHttpClient43);
        org.junit.Assert.assertNull(hostnameVerifier49);
        org.junit.Assert.assertNull(proxy50);
        org.junit.Assert.assertNotNull(okHttpClient55);
        org.junit.Assert.assertNotNull(okHttpClient57);
        org.junit.Assert.assertNotNull(hostnameVerifier58);
        org.junit.Assert.assertNotNull(okHttpClient59);
        org.junit.Assert.assertNotNull(okHttpClient64);
        org.junit.Assert.assertNotNull(sSLSocketFactory65);
        org.junit.Assert.assertNotNull(socket66);
        org.junit.Assert.assertEquals(socket66.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(okHttpClient68);
        org.junit.Assert.assertNotNull(socket69);
        org.junit.Assert.assertEquals(socket69.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertNotNull(socket71);
        org.junit.Assert.assertEquals(socket71.toString(), "Socket[unconnected]");
    }

    @Test
    public void test12269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12269");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.ResponseCache responseCache5 = null;
        okHttpClient4.responseCache = responseCache5;
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = okHttpClient4.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient4.setFollowProtocolRedirects(false);
        java.net.ResponseCache responseCache10 = okHttpClient9.responseCache;
        com.squareup.okhttp.ConnectionPool connectionPool13 = new com.squareup.okhttp.ConnectionPool(0, (long) (short) 10);
        connectionPool13.evictAll();
        com.squareup.okhttp.Address address15 = null;
        com.squareup.okhttp.Connection connection16 = connectionPool13.get(address15);
        okHttpClient9.connectionPool = connectionPool13;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache18 = okHttpClient9.okResponseCache();
        java.net.CookieHandler cookieHandler19 = null;
        okHttpClient9.cookieHandler = cookieHandler19;
        java.net.CookieHandler cookieHandler21 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient9.setCookieHandler(cookieHandler21);
        com.squareup.okhttp.OkHttpClient okHttpClient23 = new com.squareup.okhttp.OkHttpClient(okHttpClient9);
        java.util.List<java.lang.String> strList24 = okHttpClient23.transports;
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(hostnameVerifier7);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNull(responseCache10);
        org.junit.Assert.assertNull(connection16);
        org.junit.Assert.assertNull(okResponseCache18);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNull(strList24);
    }

    @Test
    public void test12270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12270");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.ConnectionPool connectionPool12 = okHttpClient11.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator13 = okHttpClient11.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool16 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient11.connectionPool = connectionPool16;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier19 = null;
        okHttpClient18.hostnameVerifier = hostnameVerifier19;
        java.net.ResponseCache responseCache21 = null;
        okHttpClient18.responseCache = responseCache21;
        java.util.List<java.lang.String> strList23 = okHttpClient18.transports;
        com.squareup.okhttp.ConnectionPool connectionPool24 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient18.connectionPool = connectionPool24;
        java.net.CookieHandler cookieHandler26 = okHttpClient18.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache27 = okHttpClient18.okResponseCache();
        java.net.CookieHandler cookieHandler28 = okHttpClient18.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient29 = new com.squareup.okhttp.OkHttpClient(okHttpClient18);
        java.net.Proxy proxy30 = java.net.Proxy.NO_PROXY;
        boolean boolean32 = proxy30.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type33 = proxy30.type();
        java.net.SocketAddress socketAddress34 = proxy30.address();
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient18.setProxy(proxy30);
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient11.setProxy(proxy30);
        java.net.ResponseCache responseCache37 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient36.setResponseCache(responseCache37);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory39 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient40 = okHttpClient36.setSSLSocketFactory(sSLSocketFactory39);
        java.net.ProxySelector proxySelector41 = okHttpClient40.proxySelector;
        com.squareup.okhttp.OkHttpClient okHttpClient43 = okHttpClient40.setFollowProtocolRedirects(true);
        java.net.URL uRL44 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.HttpURLConnection httpURLConnection45 = okHttpClient40.open(uRL44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNull(okAuthenticator13);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNotNull(connectionPool24);
        org.junit.Assert.assertNull(cookieHandler26);
        org.junit.Assert.assertNull(okResponseCache27);
        org.junit.Assert.assertNull(cookieHandler28);
        org.junit.Assert.assertNotNull(proxy30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + type33 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type33.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress34);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNotNull(okHttpClient40);
        org.junit.Assert.assertNull(proxySelector41);
        org.junit.Assert.assertNotNull(okHttpClient43);
    }

    @Test
    public void test12271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12271");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory8 = okHttpClient0.getSslSocketFactory();
        java.net.CookieHandler cookieHandler9 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.ConnectionPool connectionPool12 = new com.squareup.okhttp.ConnectionPool(10, 1L);
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient0.setConnectionPool(connectionPool12);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory14 = okHttpClient0.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient0.copyWithDefaults();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory16 = okHttpClient15.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool18 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient17.connectionPool = connectionPool18;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier21 = null;
        okHttpClient20.hostnameVerifier = hostnameVerifier21;
        java.net.ResponseCache responseCache23 = null;
        okHttpClient20.responseCache = responseCache23;
        java.util.List<java.lang.String> strList25 = okHttpClient20.transports;
        com.squareup.okhttp.ConnectionPool connectionPool26 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient20.connectionPool = connectionPool26;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient17.setConnectionPool(connectionPool26);
        com.squareup.okhttp.OkAuthenticator okAuthenticator29 = okHttpClient28.getAuthenticator();
        java.net.ProxySelector proxySelector30 = okHttpClient28.getProxySelector();
        java.net.ProxySelector proxySelector31 = null;
        okHttpClient28.proxySelector = proxySelector31;
        java.net.ProxySelector proxySelector33 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient28.setProxySelector(proxySelector33);
        com.squareup.okhttp.ConnectionPool connectionPool37 = new com.squareup.okhttp.ConnectionPool(10, 1L);
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient34.setConnectionPool(connectionPool37);
        com.squareup.okhttp.OkHttpClient okHttpClient39 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier40 = null;
        okHttpClient39.hostnameVerifier = hostnameVerifier40;
        java.net.ResponseCache responseCache42 = null;
        okHttpClient39.responseCache = responseCache42;
        java.util.List<java.lang.String> strList44 = okHttpClient39.transports;
        com.squareup.okhttp.ConnectionPool connectionPool45 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient39.connectionPool = connectionPool45;
        java.net.CookieHandler cookieHandler47 = okHttpClient39.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache48 = okHttpClient39.okResponseCache();
        java.net.CookieHandler cookieHandler49 = okHttpClient39.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient50 = new com.squareup.okhttp.OkHttpClient(okHttpClient39);
        java.net.Proxy proxy51 = java.net.Proxy.NO_PROXY;
        boolean boolean53 = proxy51.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type54 = proxy51.type();
        java.net.SocketAddress socketAddress55 = proxy51.address();
        com.squareup.okhttp.OkHttpClient okHttpClient56 = okHttpClient39.setProxy(proxy51);
        com.squareup.okhttp.OkHttpClient okHttpClient57 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier58 = null;
        okHttpClient57.hostnameVerifier = hostnameVerifier58;
        java.net.ResponseCache responseCache60 = null;
        okHttpClient57.responseCache = responseCache60;
        java.util.List<java.lang.String> strList62 = okHttpClient57.transports;
        com.squareup.okhttp.ConnectionPool connectionPool63 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient57.connectionPool = connectionPool63;
        com.squareup.okhttp.OkHttpClient okHttpClient65 = okHttpClient57.copyWithDefaults();
        java.net.ProxySelector proxySelector66 = okHttpClient65.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory67 = okHttpClient65.getSslSocketFactory();
        okHttpClient56.sslSocketFactory = sSLSocketFactory67;
        java.lang.String[] strArray69 = sSLSocketFactory67.getDefaultCipherSuites();
        java.lang.String[] strArray70 = sSLSocketFactory67.getSupportedCipherSuites();
        java.net.Socket socket71 = sSLSocketFactory67.createSocket();
        com.squareup.okhttp.OkHttpClient okHttpClient72 = okHttpClient38.setSSLSocketFactory(sSLSocketFactory67);
        java.lang.String[] strArray73 = sSLSocketFactory67.getDefaultCipherSuites();
        okHttpClient15.sslSocketFactory = sSLSocketFactory67;
        com.squareup.okhttp.OkAuthenticator okAuthenticator75 = okHttpClient15.getAuthenticator();
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNull(sSLSocketFactory8);
        org.junit.Assert.assertNull(cookieHandler9);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNull(sSLSocketFactory14);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNotNull(sSLSocketFactory16);
        org.junit.Assert.assertNotNull(connectionPool18);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNotNull(connectionPool26);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNull(okAuthenticator29);
        org.junit.Assert.assertNull(proxySelector30);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNotNull(connectionPool45);
        org.junit.Assert.assertNull(cookieHandler47);
        org.junit.Assert.assertNull(okResponseCache48);
        org.junit.Assert.assertNull(cookieHandler49);
        org.junit.Assert.assertNotNull(proxy51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + type54 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type54.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress55);
        org.junit.Assert.assertNotNull(okHttpClient56);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertNotNull(connectionPool63);
        org.junit.Assert.assertNotNull(okHttpClient65);
// flaky:         org.junit.Assert.assertNull(proxySelector66);
        org.junit.Assert.assertNotNull(sSLSocketFactory67);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertNotNull(socket71);
        org.junit.Assert.assertEquals(socket71.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(okHttpClient72);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertNotNull(okAuthenticator75);
    }

    @Test
    public void test12272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12272");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.CookieHandler cookieHandler8 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache9 = okHttpClient0.okResponseCache();
        java.net.CookieHandler cookieHandler10 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = okHttpClient11.hostnameVerifier;
        java.util.List<java.lang.String> strList13 = okHttpClient11.transports;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient11.setSSLSocketFactory(sSLSocketFactory14);
        com.squareup.okhttp.OkHttpClient okHttpClient16 = new com.squareup.okhttp.OkHttpClient(okHttpClient11);
        java.net.CookieHandler cookieHandler17 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient11.setCookieHandler(cookieHandler17);
        com.squareup.okhttp.OkAuthenticator okAuthenticator19 = okHttpClient18.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient18.setFollowProtocolRedirects(false);
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient(okHttpClient18);
        com.squareup.okhttp.OkAuthenticator okAuthenticator23 = okHttpClient22.getAuthenticator();
        java.net.URL uRL24 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.HttpURLConnection httpURLConnection25 = okHttpClient22.open(uRL24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNull(cookieHandler8);
        org.junit.Assert.assertNull(okResponseCache9);
        org.junit.Assert.assertNull(cookieHandler10);
        org.junit.Assert.assertNull(hostnameVerifier12);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNull(okAuthenticator19);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNull(okAuthenticator23);
    }

    @Test
    public void test12273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12273");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.OkAuthenticator okAuthenticator12 = okHttpClient11.getAuthenticator();
        java.net.ProxySelector proxySelector13 = okHttpClient11.getProxySelector();
        java.net.ResponseCache responseCache14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient11.setResponseCache(responseCache14);
        java.net.ResponseCache responseCache16 = okHttpClient11.responseCache;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient11.copyWithDefaults();
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(okAuthenticator12);
        org.junit.Assert.assertNull(proxySelector13);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNull(responseCache16);
        org.junit.Assert.assertNotNull(okHttpClient17);
    }

    @Test
    public void test12274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12274");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache5 = okHttpClient0.okResponseCache();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory6);
        com.squareup.okhttp.OkHttpClient okHttpClient8 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier9 = null;
        okHttpClient8.hostnameVerifier = hostnameVerifier9;
        java.net.ResponseCache responseCache11 = null;
        okHttpClient8.responseCache = responseCache11;
        javax.net.ssl.HostnameVerifier hostnameVerifier13 = okHttpClient8.hostnameVerifier;
        java.net.Proxy proxy14 = okHttpClient8.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache16 = okHttpClient15.okResponseCache();
        java.net.ResponseCache responseCache17 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient15.setResponseCache(responseCache17);
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        okHttpClient15.transports = strList21;
        okHttpClient8.transports = strList21;
        java.net.Proxy proxy25 = okHttpClient8.getProxy();
        java.util.Set<com.squareup.okhttp.Route> routeSet26 = okHttpClient8.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier28 = null;
        okHttpClient27.hostnameVerifier = hostnameVerifier28;
        boolean boolean30 = okHttpClient27.getFollowProtocolRedirects();
        java.net.Proxy proxy31 = okHttpClient27.proxy;
        java.util.List<java.lang.String> strList32 = okHttpClient27.transports;
        java.util.List<java.lang.String> strList33 = com.squareup.okhttp.OkHttpClient.DEFAULT_TRANSPORTS;
        okHttpClient27.transports = strList33;
        okHttpClient8.transports = strList33;
        okHttpClient0.transports = strList33;
        com.squareup.okhttp.OkHttpClient okHttpClient37 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier38 = null;
        okHttpClient37.hostnameVerifier = hostnameVerifier38;
        java.net.ResponseCache responseCache40 = null;
        okHttpClient37.responseCache = responseCache40;
        javax.net.ssl.HostnameVerifier hostnameVerifier42 = okHttpClient37.hostnameVerifier;
        java.net.Proxy proxy43 = okHttpClient37.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool46 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient37.connectionPool = connectionPool46;
        com.squareup.okhttp.OkHttpClient okHttpClient48 = okHttpClient37.copyWithDefaults();
        java.net.ResponseCache responseCache49 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient48.setResponseCache(responseCache49);
        com.squareup.okhttp.OkHttpClient okHttpClient52 = okHttpClient50.setFollowProtocolRedirects(false);
        java.net.ResponseCache responseCache53 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient54 = okHttpClient50.setResponseCache(responseCache53);
        com.squareup.okhttp.OkHttpClient okHttpClient55 = new com.squareup.okhttp.OkHttpClient(okHttpClient50);
        java.util.List<java.lang.String> strList56 = okHttpClient50.getTransports();
        okHttpClient0.transports = strList56;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache58 = okHttpClient0.okResponseCache();
        java.net.ProxySelector proxySelector59 = okHttpClient0.proxySelector;
        java.net.CookieHandler cookieHandler60 = okHttpClient0.getCookieHandler();
        java.net.ResponseCache responseCache61 = okHttpClient0.responseCache;
        boolean boolean62 = okHttpClient0.followProtocolRedirects;
        org.junit.Assert.assertNull(okResponseCache5);
        org.junit.Assert.assertNotNull(okHttpClient7);
        org.junit.Assert.assertNull(hostnameVerifier13);
        org.junit.Assert.assertNull(proxy14);
        org.junit.Assert.assertNull(okResponseCache16);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(proxy25);
        org.junit.Assert.assertNotNull(routeSet26);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(proxy31);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNull(hostnameVerifier42);
        org.junit.Assert.assertNull(proxy43);
        org.junit.Assert.assertNotNull(okHttpClient48);
        org.junit.Assert.assertNotNull(okHttpClient50);
        org.junit.Assert.assertNotNull(okHttpClient52);
        org.junit.Assert.assertNotNull(okHttpClient54);
        org.junit.Assert.assertNotNull(strList56);
        org.junit.Assert.assertNull(okResponseCache58);
        org.junit.Assert.assertNull(proxySelector59);
        org.junit.Assert.assertNull(cookieHandler60);
        org.junit.Assert.assertNull(responseCache61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
    }

    @Test
    public void test12275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12275");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.ConnectionPool connectionPool12 = okHttpClient11.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator13 = okHttpClient11.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool16 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient11.connectionPool = connectionPool16;
        java.net.ResponseCache responseCache18 = okHttpClient11.responseCache;
        java.util.List<java.lang.String> strList19 = okHttpClient11.getTransports();
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient11.copyWithDefaults();
        java.net.ResponseCache responseCache21 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient20.setResponseCache(responseCache21);
        java.net.ProxySelector proxySelector23 = okHttpClient20.getProxySelector();
        java.net.Proxy proxy24 = okHttpClient20.getProxy();
        java.net.URL uRL25 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.HttpURLConnection httpURLConnection26 = okHttpClient20.open(uRL25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNull(okAuthenticator13);
        org.junit.Assert.assertNull(responseCache18);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNotNull(okHttpClient22);
// flaky:         org.junit.Assert.assertNull(proxySelector23);
        org.junit.Assert.assertNull(proxy24);
    }

    @Test
    public void test12276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12276");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory6 = okHttpClient0.sslSocketFactory;
        java.net.CookieHandler cookieHandler7 = okHttpClient0.cookieHandler;
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = okHttpClient0.hostnameVerifier;
        java.net.ProxySelector proxySelector9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient0.setProxySelector(proxySelector9);
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient(okHttpClient10);
        java.net.CookieHandler cookieHandler12 = okHttpClient11.cookieHandler;
        java.net.ProxySelector proxySelector13 = okHttpClient11.proxySelector;
        java.net.ProxySelector proxySelector14 = okHttpClient11.proxySelector;
        java.net.Proxy proxy15 = okHttpClient11.getProxy();
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(sSLSocketFactory6);
        org.junit.Assert.assertNull(cookieHandler7);
        org.junit.Assert.assertNull(hostnameVerifier8);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertNull(cookieHandler12);
        org.junit.Assert.assertNull(proxySelector13);
        org.junit.Assert.assertNull(proxySelector14);
        org.junit.Assert.assertNull(proxy15);
    }

    @Test
    public void test12277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12277");
        com.squareup.okhttp.ConnectionPool connectionPool2 = new com.squareup.okhttp.ConnectionPool((-1), (long) '#');
        com.squareup.okhttp.Address address3 = null;
        com.squareup.okhttp.Connection connection4 = connectionPool2.get(address3);
        int int5 = connectionPool2.getSpdyConnectionCount();
        com.squareup.okhttp.Address address6 = null;
        com.squareup.okhttp.Connection connection7 = connectionPool2.get(address6);
        int int8 = connectionPool2.getSpdyConnectionCount();
        connectionPool2.evictAll();
        org.junit.Assert.assertNull(connection4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(connection7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test12278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12278");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        boolean boolean5 = okHttpClient0.getFollowProtocolRedirects();
        java.util.Set<com.squareup.okhttp.Route> routeSet6 = okHttpClient0.failedRoutes;
        com.squareup.okhttp.ConnectionPool connectionPool7 = okHttpClient0.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator8 = okHttpClient0.authenticator;
        boolean boolean9 = okHttpClient0.followProtocolRedirects;
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(routeSet6);
        org.junit.Assert.assertNull(connectionPool7);
        org.junit.Assert.assertNull(okAuthenticator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test12279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12279");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache1 = okHttpClient0.okResponseCache();
        java.net.ResponseCache responseCache2 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.setResponseCache(responseCache2);
        java.net.CookieHandler cookieHandler4 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier6 = null;
        okHttpClient5.hostnameVerifier = hostnameVerifier6;
        java.net.ResponseCache responseCache8 = null;
        okHttpClient5.responseCache = responseCache8;
        javax.net.ssl.HostnameVerifier hostnameVerifier10 = okHttpClient5.hostnameVerifier;
        java.net.Proxy proxy11 = okHttpClient5.getProxy();
        java.net.CookieHandler cookieHandler12 = null;
        okHttpClient5.cookieHandler = cookieHandler12;
        okHttpClient5.followProtocolRedirects = true;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier17 = null;
        okHttpClient16.hostnameVerifier = hostnameVerifier17;
        java.net.ResponseCache responseCache19 = null;
        okHttpClient16.responseCache = responseCache19;
        javax.net.ssl.HostnameVerifier hostnameVerifier21 = okHttpClient16.hostnameVerifier;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory22 = okHttpClient16.sslSocketFactory;
        java.net.CookieHandler cookieHandler23 = okHttpClient16.cookieHandler;
        javax.net.ssl.HostnameVerifier hostnameVerifier24 = okHttpClient16.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient25 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool26 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient25.connectionPool = connectionPool26;
        com.squareup.okhttp.OkAuthenticator okAuthenticator28 = null;
        okHttpClient25.authenticator = okAuthenticator28;
        java.util.List<java.lang.String> strList30 = okHttpClient25.transports;
        java.net.ResponseCache responseCache31 = null;
        okHttpClient25.responseCache = responseCache31;
        com.squareup.okhttp.OkHttpClient okHttpClient33 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier34 = null;
        okHttpClient33.hostnameVerifier = hostnameVerifier34;
        java.net.ResponseCache responseCache36 = null;
        okHttpClient33.responseCache = responseCache36;
        javax.net.ssl.HostnameVerifier hostnameVerifier38 = okHttpClient33.hostnameVerifier;
        java.net.Proxy proxy39 = okHttpClient33.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool42 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient33.connectionPool = connectionPool42;
        com.squareup.okhttp.OkHttpClient okHttpClient44 = okHttpClient33.copyWithDefaults();
        java.net.Proxy proxy45 = okHttpClient44.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier46 = okHttpClient44.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient47 = okHttpClient25.setHostnameVerifier(hostnameVerifier46);
        com.squareup.okhttp.OkHttpClient okHttpClient48 = okHttpClient16.setHostnameVerifier(hostnameVerifier46);
        okHttpClient5.hostnameVerifier = hostnameVerifier46;
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient0.setHostnameVerifier(hostnameVerifier46);
        java.net.Proxy proxy51 = okHttpClient50.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient52 = new com.squareup.okhttp.OkHttpClient(okHttpClient50);
        java.util.Set<com.squareup.okhttp.Route> routeSet53 = okHttpClient52.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient54 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier55 = null;
        okHttpClient54.hostnameVerifier = hostnameVerifier55;
        java.net.ResponseCache responseCache57 = null;
        okHttpClient54.responseCache = responseCache57;
        java.util.List<java.lang.String> strList59 = okHttpClient54.transports;
        com.squareup.okhttp.ConnectionPool connectionPool60 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient54.connectionPool = connectionPool60;
        java.net.Proxy proxy62 = null;
        okHttpClient54.proxy = proxy62;
        boolean boolean64 = okHttpClient54.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient65 = okHttpClient54.copyWithDefaults();
        java.net.CookieHandler cookieHandler66 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient67 = okHttpClient65.setCookieHandler(cookieHandler66);
        java.net.Proxy proxy68 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient69 = okHttpClient65.setProxy(proxy68);
        java.net.Proxy proxy70 = okHttpClient65.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient71 = okHttpClient52.setProxy(proxy70);
        com.squareup.okhttp.OkAuthenticator okAuthenticator72 = okHttpClient52.authenticator;
        com.squareup.okhttp.ConnectionPool connectionPool73 = okHttpClient52.getConnectionPool();
        org.junit.Assert.assertNull(okResponseCache1);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertNull(cookieHandler4);
        org.junit.Assert.assertNull(hostnameVerifier10);
        org.junit.Assert.assertNull(proxy11);
        org.junit.Assert.assertNull(hostnameVerifier21);
        org.junit.Assert.assertNull(sSLSocketFactory22);
        org.junit.Assert.assertNull(cookieHandler23);
        org.junit.Assert.assertNull(hostnameVerifier24);
        org.junit.Assert.assertNotNull(connectionPool26);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNull(hostnameVerifier38);
        org.junit.Assert.assertNull(proxy39);
        org.junit.Assert.assertNotNull(okHttpClient44);
        org.junit.Assert.assertNull(proxy45);
        org.junit.Assert.assertNotNull(hostnameVerifier46);
        org.junit.Assert.assertNotNull(okHttpClient47);
        org.junit.Assert.assertNotNull(okHttpClient48);
        org.junit.Assert.assertNotNull(okHttpClient50);
        org.junit.Assert.assertNull(proxy51);
        org.junit.Assert.assertNotNull(routeSet53);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNotNull(connectionPool60);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(okHttpClient65);
        org.junit.Assert.assertNotNull(okHttpClient67);
        org.junit.Assert.assertNotNull(proxy68);
        org.junit.Assert.assertNotNull(okHttpClient69);
        org.junit.Assert.assertNotNull(proxy70);
        org.junit.Assert.assertNotNull(okHttpClient71);
        org.junit.Assert.assertNull(okAuthenticator72);
        org.junit.Assert.assertNull(connectionPool73);
    }

    @Test
    public void test12280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12280");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.CookieHandler cookieHandler6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient0.setCookieHandler(cookieHandler6);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory8 = null;
        okHttpClient7.sslSocketFactory = sSLSocketFactory8;
        com.squareup.okhttp.OkAuthenticator okAuthenticator10 = okHttpClient7.authenticator;
        java.net.ResponseCache responseCache11 = okHttpClient7.responseCache;
        java.net.ResponseCache responseCache12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient7.setResponseCache(responseCache12);
        java.net.ProxySelector proxySelector14 = okHttpClient7.proxySelector;
        okHttpClient7.followProtocolRedirects = true;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = null;
        okHttpClient17.hostnameVerifier = hostnameVerifier18;
        java.net.ProxySelector proxySelector20 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient17.setProxySelector(proxySelector20);
        java.net.ResponseCache responseCache22 = null;
        okHttpClient21.responseCache = responseCache22;
        javax.net.ssl.HostnameVerifier hostnameVerifier24 = okHttpClient21.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient21.setFollowProtocolRedirects(false);
        java.net.ResponseCache responseCache27 = okHttpClient26.responseCache;
        com.squareup.okhttp.ConnectionPool connectionPool30 = new com.squareup.okhttp.ConnectionPool(0, (long) (short) 10);
        connectionPool30.evictAll();
        com.squareup.okhttp.Address address32 = null;
        com.squareup.okhttp.Connection connection33 = connectionPool30.get(address32);
        okHttpClient26.connectionPool = connectionPool30;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache35 = okHttpClient26.okResponseCache();
        java.net.CookieHandler cookieHandler36 = null;
        okHttpClient26.cookieHandler = cookieHandler36;
        com.squareup.okhttp.OkHttpClient okHttpClient38 = new com.squareup.okhttp.OkHttpClient(okHttpClient26);
        java.util.List<java.lang.String> strList39 = okHttpClient26.getTransports();
        com.squareup.okhttp.OkHttpClient okHttpClient40 = new com.squareup.okhttp.OkHttpClient(okHttpClient26);
        java.util.List<java.lang.String> strList41 = okHttpClient40.transports;
        com.squareup.okhttp.OkHttpClient okHttpClient42 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier43 = null;
        okHttpClient42.hostnameVerifier = hostnameVerifier43;
        java.net.ResponseCache responseCache45 = null;
        okHttpClient42.responseCache = responseCache45;
        java.util.List<java.lang.String> strList47 = okHttpClient42.transports;
        com.squareup.okhttp.ConnectionPool connectionPool48 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient42.connectionPool = connectionPool48;
        com.squareup.okhttp.ConnectionPool connectionPool50 = okHttpClient42.connectionPool;
        int int51 = connectionPool50.getHttpConnectionCount();
        int int52 = connectionPool50.getSpdyConnectionCount();
        okHttpClient40.connectionPool = connectionPool50;
        com.squareup.okhttp.OkHttpClient okHttpClient54 = okHttpClient7.setConnectionPool(connectionPool50);
        int int55 = connectionPool50.getSpdyConnectionCount();
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNotNull(okHttpClient7);
        org.junit.Assert.assertNull(okAuthenticator10);
        org.junit.Assert.assertNull(responseCache11);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNull(proxySelector14);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNull(hostnameVerifier24);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNull(responseCache27);
        org.junit.Assert.assertNull(connection33);
        org.junit.Assert.assertNull(okResponseCache35);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNotNull(connectionPool48);
        org.junit.Assert.assertNotNull(connectionPool50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(okHttpClient54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
    }

    @Test
    public void test12281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12281");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient0.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient11.copyWithDefaults();
        java.net.CookieHandler cookieHandler13 = okHttpClient11.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient14 = new com.squareup.okhttp.OkHttpClient(okHttpClient11);
        java.net.Proxy proxy15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient11.setProxy(proxy15);
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient(okHttpClient11);
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertNull(cookieHandler13);
        org.junit.Assert.assertNotNull(okHttpClient16);
    }

    @Test
    public void test12282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12282");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient0.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.copyWithDefaults();
        java.util.List<java.lang.String> strList12 = okHttpClient0.getTransports();
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient14 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool15 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient14.connectionPool = connectionPool15;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = null;
        okHttpClient17.hostnameVerifier = hostnameVerifier18;
        java.net.ResponseCache responseCache20 = null;
        okHttpClient17.responseCache = responseCache20;
        java.util.List<java.lang.String> strList22 = okHttpClient17.transports;
        com.squareup.okhttp.ConnectionPool connectionPool23 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient17.connectionPool = connectionPool23;
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient14.setConnectionPool(connectionPool23);
        com.squareup.okhttp.ConnectionPool connectionPool26 = okHttpClient25.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator27 = okHttpClient25.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool30 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient25.connectionPool = connectionPool30;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier33 = null;
        okHttpClient32.hostnameVerifier = hostnameVerifier33;
        java.net.ResponseCache responseCache35 = null;
        okHttpClient32.responseCache = responseCache35;
        java.util.List<java.lang.String> strList37 = okHttpClient32.transports;
        com.squareup.okhttp.ConnectionPool connectionPool38 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient32.connectionPool = connectionPool38;
        java.net.CookieHandler cookieHandler40 = okHttpClient32.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache41 = okHttpClient32.okResponseCache();
        java.net.CookieHandler cookieHandler42 = okHttpClient32.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient43 = new com.squareup.okhttp.OkHttpClient(okHttpClient32);
        java.net.Proxy proxy44 = java.net.Proxy.NO_PROXY;
        boolean boolean46 = proxy44.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type47 = proxy44.type();
        java.net.SocketAddress socketAddress48 = proxy44.address();
        com.squareup.okhttp.OkHttpClient okHttpClient49 = okHttpClient32.setProxy(proxy44);
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient25.setProxy(proxy44);
        com.squareup.okhttp.OkHttpClient okHttpClient51 = okHttpClient0.setProxy(proxy44);
        java.net.SocketAddress socketAddress52 = proxy44.address();
        java.net.SocketAddress socketAddress53 = proxy44.address();
        java.net.Proxy.Type type54 = proxy44.type();
        java.net.SocketAddress socketAddress55 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Proxy proxy56 = new java.net.Proxy(type54, socketAddress55);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: type DIRECT is not compatible with address null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNotNull(connectionPool15);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNotNull(connectionPool23);
        org.junit.Assert.assertNotNull(okHttpClient25);
        org.junit.Assert.assertNotNull(connectionPool26);
        org.junit.Assert.assertNull(okAuthenticator27);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(connectionPool38);
        org.junit.Assert.assertNull(cookieHandler40);
        org.junit.Assert.assertNull(okResponseCache41);
        org.junit.Assert.assertNull(cookieHandler42);
        org.junit.Assert.assertNotNull(proxy44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + type47 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type47.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress48);
        org.junit.Assert.assertNotNull(okHttpClient49);
        org.junit.Assert.assertNotNull(okHttpClient50);
        org.junit.Assert.assertNotNull(okHttpClient51);
        org.junit.Assert.assertNull(socketAddress52);
        org.junit.Assert.assertNull(socketAddress53);
        org.junit.Assert.assertTrue("'" + type54 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type54.equals(java.net.Proxy.Type.DIRECT));
    }

    @Test
    public void test12283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12283");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.CookieHandler cookieHandler5 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = null;
        okHttpClient6.hostnameVerifier = hostnameVerifier7;
        java.net.ResponseCache responseCache9 = null;
        okHttpClient6.responseCache = responseCache9;
        java.util.List<java.lang.String> strList11 = okHttpClient6.transports;
        com.squareup.okhttp.ConnectionPool connectionPool12 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient6.connectionPool = connectionPool12;
        java.net.Proxy proxy14 = null;
        okHttpClient6.proxy = proxy14;
        java.util.Set<com.squareup.okhttp.Route> routeSet16 = okHttpClient6.failedRoutes;
        okHttpClient0.failedRoutes = routeSet16;
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient0.setHostnameVerifier(hostnameVerifier18);
        java.net.ProxySelector proxySelector20 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient19.setProxySelector(proxySelector20);
        com.squareup.okhttp.ConnectionPool connectionPool24 = new com.squareup.okhttp.ConnectionPool((int) (byte) 10, (long) (byte) 0);
        okHttpClient19.connectionPool = connectionPool24;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient19.copyWithDefaults();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory27 = okHttpClient26.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient28 = new com.squareup.okhttp.OkHttpClient(okHttpClient26);
        com.squareup.okhttp.OkHttpClient okHttpClient29 = new com.squareup.okhttp.OkHttpClient(okHttpClient28);
        java.net.CookieHandler cookieHandler30 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient29.setCookieHandler(cookieHandler30);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNotNull(routeSet16);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNotNull(sSLSocketFactory27);
        org.junit.Assert.assertNotNull(okHttpClient31);
    }

    @Test
    public void test12284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12284");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.CookieHandler cookieHandler8 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache9 = okHttpClient0.okResponseCache();
        java.net.CookieHandler cookieHandler10 = okHttpClient0.getCookieHandler();
        java.net.Proxy proxy11 = okHttpClient0.proxy;
        java.net.CookieHandler cookieHandler12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient0.setCookieHandler(cookieHandler12);
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient0.copyWithDefaults();
        java.net.ProxySelector proxySelector15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient14.setProxySelector(proxySelector15);
        java.net.CookieHandler cookieHandler17 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient16.setCookieHandler(cookieHandler17);
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient18.setFollowProtocolRedirects(false);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNull(cookieHandler8);
        org.junit.Assert.assertNull(okResponseCache9);
        org.junit.Assert.assertNull(cookieHandler10);
        org.junit.Assert.assertNull(proxy11);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNotNull(okHttpClient14);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNotNull(okHttpClient20);
    }

    @Test
    public void test12285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12285");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.ConnectionPool connectionPool12 = okHttpClient11.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator13 = okHttpClient11.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool16 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient11.connectionPool = connectionPool16;
        java.net.ResponseCache responseCache18 = okHttpClient11.responseCache;
        java.util.List<java.lang.String> strList19 = okHttpClient11.getTransports();
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient11.copyWithDefaults();
        java.net.ResponseCache responseCache21 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient20.setResponseCache(responseCache21);
        java.net.ProxySelector proxySelector23 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient20.setProxySelector(proxySelector23);
        com.squareup.okhttp.OkHttpClient okHttpClient25 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool26 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient25.connectionPool = connectionPool26;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier29 = null;
        okHttpClient28.hostnameVerifier = hostnameVerifier29;
        java.net.ResponseCache responseCache31 = null;
        okHttpClient28.responseCache = responseCache31;
        java.util.List<java.lang.String> strList33 = okHttpClient28.transports;
        com.squareup.okhttp.ConnectionPool connectionPool34 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient28.connectionPool = connectionPool34;
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient25.setConnectionPool(connectionPool34);
        java.net.Proxy proxy37 = okHttpClient36.proxy;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory38 = null;
        okHttpClient36.sslSocketFactory = sSLSocketFactory38;
        com.squareup.okhttp.OkHttpClient okHttpClient40 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier41 = null;
        okHttpClient40.hostnameVerifier = hostnameVerifier41;
        java.net.ResponseCache responseCache43 = null;
        okHttpClient40.responseCache = responseCache43;
        java.util.List<java.lang.String> strList45 = okHttpClient40.transports;
        com.squareup.okhttp.ConnectionPool connectionPool46 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient40.connectionPool = connectionPool46;
        java.net.Proxy proxy48 = null;
        okHttpClient40.proxy = proxy48;
        boolean boolean50 = okHttpClient40.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient51 = okHttpClient40.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient52 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool53 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient52.connectionPool = connectionPool53;
        com.squareup.okhttp.OkHttpClient okHttpClient55 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier56 = null;
        okHttpClient55.hostnameVerifier = hostnameVerifier56;
        java.net.ResponseCache responseCache58 = null;
        okHttpClient55.responseCache = responseCache58;
        java.util.List<java.lang.String> strList60 = okHttpClient55.transports;
        com.squareup.okhttp.ConnectionPool connectionPool61 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient55.connectionPool = connectionPool61;
        com.squareup.okhttp.OkHttpClient okHttpClient63 = okHttpClient52.setConnectionPool(connectionPool61);
        java.net.ResponseCache responseCache64 = okHttpClient52.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory65 = okHttpClient52.sslSocketFactory;
        java.net.CookieHandler cookieHandler66 = okHttpClient52.getCookieHandler();
        com.squareup.okhttp.OkAuthenticator okAuthenticator67 = okHttpClient52.authenticator;
        java.util.Set<com.squareup.okhttp.Route> routeSet68 = okHttpClient52.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient69 = new com.squareup.okhttp.OkHttpClient(okHttpClient52);
        com.squareup.okhttp.OkHttpClient okHttpClient70 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier71 = null;
        okHttpClient70.hostnameVerifier = hostnameVerifier71;
        java.net.ResponseCache responseCache73 = null;
        okHttpClient70.responseCache = responseCache73;
        javax.net.ssl.HostnameVerifier hostnameVerifier75 = okHttpClient70.hostnameVerifier;
        java.net.Proxy proxy76 = okHttpClient70.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool79 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient70.connectionPool = connectionPool79;
        com.squareup.okhttp.OkHttpClient okHttpClient81 = okHttpClient70.copyWithDefaults();
        java.net.ResponseCache responseCache82 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient83 = okHttpClient81.setResponseCache(responseCache82);
        javax.net.ssl.HostnameVerifier hostnameVerifier84 = okHttpClient83.hostnameVerifier;
        okHttpClient69.hostnameVerifier = hostnameVerifier84;
        okHttpClient40.hostnameVerifier = hostnameVerifier84;
        com.squareup.okhttp.OkHttpClient okHttpClient87 = okHttpClient36.setHostnameVerifier(hostnameVerifier84);
        okHttpClient20.hostnameVerifier = hostnameVerifier84;
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNull(okAuthenticator13);
        org.junit.Assert.assertNull(responseCache18);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNotNull(connectionPool26);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNotNull(connectionPool34);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNull(proxy37);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNotNull(connectionPool46);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(okHttpClient51);
        org.junit.Assert.assertNotNull(connectionPool53);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNotNull(connectionPool61);
        org.junit.Assert.assertNotNull(okHttpClient63);
        org.junit.Assert.assertNull(responseCache64);
        org.junit.Assert.assertNull(sSLSocketFactory65);
        org.junit.Assert.assertNull(cookieHandler66);
        org.junit.Assert.assertNull(okAuthenticator67);
        org.junit.Assert.assertNotNull(routeSet68);
        org.junit.Assert.assertNull(hostnameVerifier75);
        org.junit.Assert.assertNull(proxy76);
        org.junit.Assert.assertNotNull(okHttpClient81);
        org.junit.Assert.assertNotNull(okHttpClient83);
        org.junit.Assert.assertNotNull(hostnameVerifier84);
        org.junit.Assert.assertNotNull(okHttpClient87);
    }

    @Test
    public void test12286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12286");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        java.net.Proxy proxy12 = okHttpClient11.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool14 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient13.connectionPool = connectionPool14;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier17 = null;
        okHttpClient16.hostnameVerifier = hostnameVerifier17;
        java.net.ResponseCache responseCache19 = null;
        okHttpClient16.responseCache = responseCache19;
        java.util.List<java.lang.String> strList21 = okHttpClient16.transports;
        com.squareup.okhttp.ConnectionPool connectionPool22 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient16.connectionPool = connectionPool22;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient13.setConnectionPool(connectionPool22);
        com.squareup.okhttp.ConnectionPool connectionPool25 = okHttpClient13.connectionPool;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient11.setConnectionPool(connectionPool25);
        okHttpClient11.followProtocolRedirects = false;
        com.squareup.okhttp.OkHttpClient okHttpClient29 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool30 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient29.connectionPool = connectionPool30;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier33 = null;
        okHttpClient32.hostnameVerifier = hostnameVerifier33;
        java.net.ResponseCache responseCache35 = null;
        okHttpClient32.responseCache = responseCache35;
        java.util.List<java.lang.String> strList37 = okHttpClient32.transports;
        com.squareup.okhttp.ConnectionPool connectionPool38 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient32.connectionPool = connectionPool38;
        com.squareup.okhttp.OkHttpClient okHttpClient40 = okHttpClient29.setConnectionPool(connectionPool38);
        java.net.ResponseCache responseCache41 = okHttpClient29.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory42 = okHttpClient29.sslSocketFactory;
        java.net.CookieHandler cookieHandler43 = okHttpClient29.getCookieHandler();
        com.squareup.okhttp.OkAuthenticator okAuthenticator44 = okHttpClient29.authenticator;
        java.util.Set<com.squareup.okhttp.Route> routeSet45 = okHttpClient29.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient46 = new com.squareup.okhttp.OkHttpClient(okHttpClient29);
        com.squareup.okhttp.OkHttpClient okHttpClient47 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier48 = null;
        okHttpClient47.hostnameVerifier = hostnameVerifier48;
        java.net.ResponseCache responseCache50 = null;
        okHttpClient47.responseCache = responseCache50;
        javax.net.ssl.HostnameVerifier hostnameVerifier52 = okHttpClient47.hostnameVerifier;
        java.net.Proxy proxy53 = okHttpClient47.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool56 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient47.connectionPool = connectionPool56;
        com.squareup.okhttp.OkHttpClient okHttpClient58 = okHttpClient47.copyWithDefaults();
        java.net.ResponseCache responseCache59 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient60 = okHttpClient58.setResponseCache(responseCache59);
        javax.net.ssl.HostnameVerifier hostnameVerifier61 = okHttpClient60.hostnameVerifier;
        okHttpClient46.hostnameVerifier = hostnameVerifier61;
        com.squareup.okhttp.OkHttpClient okHttpClient63 = okHttpClient11.setHostnameVerifier(hostnameVerifier61);
        java.net.Proxy proxy64 = okHttpClient63.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient66 = okHttpClient63.setFollowProtocolRedirects(true);
        com.squareup.okhttp.OkHttpClient okHttpClient67 = new com.squareup.okhttp.OkHttpClient(okHttpClient63);
        java.util.Set<com.squareup.okhttp.Route> routeSet68 = okHttpClient63.failedRoutes;
        java.net.ResponseCache responseCache69 = okHttpClient63.getResponseCache();
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(proxy12);
        org.junit.Assert.assertNotNull(connectionPool14);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(connectionPool22);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNotNull(connectionPool25);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNotNull(connectionPool30);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(connectionPool38);
        org.junit.Assert.assertNotNull(okHttpClient40);
        org.junit.Assert.assertNull(responseCache41);
        org.junit.Assert.assertNull(sSLSocketFactory42);
        org.junit.Assert.assertNull(cookieHandler43);
        org.junit.Assert.assertNull(okAuthenticator44);
        org.junit.Assert.assertNotNull(routeSet45);
        org.junit.Assert.assertNull(hostnameVerifier52);
        org.junit.Assert.assertNull(proxy53);
        org.junit.Assert.assertNotNull(okHttpClient58);
        org.junit.Assert.assertNotNull(okHttpClient60);
        org.junit.Assert.assertNotNull(hostnameVerifier61);
        org.junit.Assert.assertNotNull(okHttpClient63);
        org.junit.Assert.assertNull(proxy64);
        org.junit.Assert.assertNotNull(okHttpClient66);
        org.junit.Assert.assertNotNull(routeSet68);
        org.junit.Assert.assertNull(responseCache69);
    }

    @Test
    public void test12287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12287");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory6 = okHttpClient0.sslSocketFactory;
        java.net.CookieHandler cookieHandler7 = okHttpClient0.cookieHandler;
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = okHttpClient0.getHostnameVerifier();
        javax.net.ssl.HostnameVerifier hostnameVerifier9 = okHttpClient0.hostnameVerifier;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory10 = okHttpClient0.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = null;
        okHttpClient11.hostnameVerifier = hostnameVerifier12;
        java.net.ResponseCache responseCache14 = null;
        okHttpClient11.responseCache = responseCache14;
        javax.net.ssl.HostnameVerifier hostnameVerifier16 = okHttpClient11.hostnameVerifier;
        java.net.Proxy proxy17 = okHttpClient11.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache19 = okHttpClient18.okResponseCache();
        java.net.ResponseCache responseCache20 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient18.setResponseCache(responseCache20);
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        okHttpClient18.transports = strList24;
        okHttpClient11.transports = strList24;
        javax.net.ssl.HostnameVerifier hostnameVerifier28 = null;
        okHttpClient11.hostnameVerifier = hostnameVerifier28;
        com.squareup.okhttp.OkHttpClient okHttpClient30 = new com.squareup.okhttp.OkHttpClient(okHttpClient11);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory31 = null;
        okHttpClient11.sslSocketFactory = sSLSocketFactory31;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache33 = okHttpClient11.okResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient34 = new com.squareup.okhttp.OkHttpClient(okHttpClient11);
        java.net.CookieHandler cookieHandler35 = okHttpClient11.getCookieHandler();
        java.util.List<java.lang.String> strList36 = okHttpClient11.getTransports();
        okHttpClient0.transports = strList36;
        com.squareup.okhttp.OkAuthenticator okAuthenticator38 = okHttpClient0.getAuthenticator();
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(sSLSocketFactory6);
        org.junit.Assert.assertNull(cookieHandler7);
        org.junit.Assert.assertNull(hostnameVerifier8);
        org.junit.Assert.assertNull(hostnameVerifier9);
        org.junit.Assert.assertNull(sSLSocketFactory10);
        org.junit.Assert.assertNull(hostnameVerifier16);
        org.junit.Assert.assertNull(proxy17);
        org.junit.Assert.assertNull(okResponseCache19);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(okResponseCache33);
        org.junit.Assert.assertNull(cookieHandler35);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNull(okAuthenticator38);
    }

    @Test
    public void test12288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12288");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.Proxy proxy8 = null;
        okHttpClient0.proxy = proxy8;
        java.net.Proxy proxy10 = okHttpClient0.getProxy();
        java.net.ProxySelector proxySelector11 = null;
        okHttpClient0.proxySelector = proxySelector11;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache13 = okHttpClient0.okResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet14 = okHttpClient0.failedRoutes;
        java.net.ResponseCache responseCache15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient0.setResponseCache(responseCache15);
        java.net.ProxySelector proxySelector17 = okHttpClient0.proxySelector;
        java.net.ResponseCache responseCache18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient0.setResponseCache(responseCache18);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNull(proxy10);
        org.junit.Assert.assertNull(okResponseCache13);
        org.junit.Assert.assertNotNull(routeSet14);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNull(proxySelector17);
        org.junit.Assert.assertNotNull(okHttpClient19);
    }

    @Test
    public void test12289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12289");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.CookieHandler cookieHandler5 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = null;
        okHttpClient6.hostnameVerifier = hostnameVerifier7;
        java.net.ResponseCache responseCache9 = null;
        okHttpClient6.responseCache = responseCache9;
        java.util.List<java.lang.String> strList11 = okHttpClient6.transports;
        com.squareup.okhttp.ConnectionPool connectionPool12 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient6.connectionPool = connectionPool12;
        java.net.Proxy proxy14 = null;
        okHttpClient6.proxy = proxy14;
        java.util.Set<com.squareup.okhttp.Route> routeSet16 = okHttpClient6.failedRoutes;
        okHttpClient0.failedRoutes = routeSet16;
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient0.setHostnameVerifier(hostnameVerifier18);
        java.net.ProxySelector proxySelector20 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient19.setProxySelector(proxySelector20);
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient19.setFollowProtocolRedirects(true);
        com.squareup.okhttp.OkHttpClient okHttpClient24 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool25 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient24.connectionPool = connectionPool25;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier28 = null;
        okHttpClient27.hostnameVerifier = hostnameVerifier28;
        java.net.ResponseCache responseCache30 = null;
        okHttpClient27.responseCache = responseCache30;
        java.util.List<java.lang.String> strList32 = okHttpClient27.transports;
        com.squareup.okhttp.ConnectionPool connectionPool33 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient27.connectionPool = connectionPool33;
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient24.setConnectionPool(connectionPool33);
        java.net.Proxy proxy36 = okHttpClient35.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient37 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool38 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient37.connectionPool = connectionPool38;
        int int40 = connectionPool38.getSpdyConnectionCount();
        okHttpClient35.connectionPool = connectionPool38;
        com.squareup.okhttp.OkHttpClient okHttpClient42 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier43 = null;
        okHttpClient42.hostnameVerifier = hostnameVerifier43;
        java.net.ResponseCache responseCache45 = null;
        okHttpClient42.responseCache = responseCache45;
        javax.net.ssl.HostnameVerifier hostnameVerifier47 = okHttpClient42.hostnameVerifier;
        java.net.Proxy proxy48 = okHttpClient42.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool51 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient42.connectionPool = connectionPool51;
        com.squareup.okhttp.OkHttpClient okHttpClient53 = okHttpClient42.copyWithDefaults();
        java.net.ResponseCache responseCache54 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient55 = okHttpClient53.setResponseCache(responseCache54);
        com.squareup.okhttp.OkAuthenticator okAuthenticator56 = okHttpClient53.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient57 = okHttpClient35.setAuthenticator(okAuthenticator56);
        com.squareup.okhttp.OkHttpClient okHttpClient58 = okHttpClient19.setAuthenticator(okAuthenticator56);
        javax.net.ssl.HostnameVerifier hostnameVerifier59 = okHttpClient19.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient60 = new com.squareup.okhttp.OkHttpClient(okHttpClient19);
        java.net.ResponseCache responseCache61 = okHttpClient60.getResponseCache();
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNotNull(routeSet16);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertNotNull(connectionPool25);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNotNull(connectionPool33);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNull(proxy36);
        org.junit.Assert.assertNotNull(connectionPool38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNull(hostnameVerifier47);
        org.junit.Assert.assertNull(proxy48);
        org.junit.Assert.assertNotNull(okHttpClient53);
        org.junit.Assert.assertNotNull(okHttpClient55);
        org.junit.Assert.assertNotNull(okAuthenticator56);
        org.junit.Assert.assertNotNull(okHttpClient57);
        org.junit.Assert.assertNotNull(okHttpClient58);
        org.junit.Assert.assertNull(hostnameVerifier59);
        org.junit.Assert.assertNull(responseCache61);
    }

    @Test
    public void test12290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12290");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.CookieHandler cookieHandler5 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = null;
        okHttpClient6.hostnameVerifier = hostnameVerifier7;
        java.net.ResponseCache responseCache9 = null;
        okHttpClient6.responseCache = responseCache9;
        java.util.List<java.lang.String> strList11 = okHttpClient6.transports;
        com.squareup.okhttp.ConnectionPool connectionPool12 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient6.connectionPool = connectionPool12;
        java.net.Proxy proxy14 = null;
        okHttpClient6.proxy = proxy14;
        java.util.Set<com.squareup.okhttp.Route> routeSet16 = okHttpClient6.failedRoutes;
        okHttpClient0.failedRoutes = routeSet16;
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient0.setHostnameVerifier(hostnameVerifier18);
        java.net.ProxySelector proxySelector20 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient19.setProxySelector(proxySelector20);
        java.net.ResponseCache responseCache22 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient19.setResponseCache(responseCache22);
        com.squareup.okhttp.Route[] routeArray24 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet25 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet25, routeArray24);
        okHttpClient23.failedRoutes = routeSet25;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory28 = okHttpClient23.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient23.copyWithDefaults();
        boolean boolean30 = okHttpClient23.followProtocolRedirects;
        java.net.Proxy proxy31 = okHttpClient23.getProxy();
        java.net.Proxy proxy32 = okHttpClient23.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier33 = okHttpClient23.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient34 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier35 = null;
        okHttpClient34.hostnameVerifier = hostnameVerifier35;
        java.net.ResponseCache responseCache37 = null;
        okHttpClient34.responseCache = responseCache37;
        javax.net.ssl.HostnameVerifier hostnameVerifier39 = okHttpClient34.hostnameVerifier;
        java.net.Proxy proxy40 = null;
        okHttpClient34.proxy = proxy40;
        com.squareup.okhttp.ConnectionPool connectionPool42 = null;
        okHttpClient34.connectionPool = connectionPool42;
        com.squareup.okhttp.OkAuthenticator okAuthenticator44 = okHttpClient34.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient45 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool46 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient45.connectionPool = connectionPool46;
        com.squareup.okhttp.OkHttpClient okHttpClient48 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier49 = null;
        okHttpClient48.hostnameVerifier = hostnameVerifier49;
        java.net.ResponseCache responseCache51 = null;
        okHttpClient48.responseCache = responseCache51;
        java.util.List<java.lang.String> strList53 = okHttpClient48.transports;
        com.squareup.okhttp.ConnectionPool connectionPool54 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient48.connectionPool = connectionPool54;
        com.squareup.okhttp.OkHttpClient okHttpClient56 = okHttpClient45.setConnectionPool(connectionPool54);
        java.net.ResponseCache responseCache57 = okHttpClient45.responseCache;
        com.squareup.okhttp.OkHttpClient okHttpClient58 = okHttpClient45.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient59 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier60 = null;
        okHttpClient59.hostnameVerifier = hostnameVerifier60;
        java.net.ResponseCache responseCache62 = null;
        okHttpClient59.responseCache = responseCache62;
        java.util.List<java.lang.String> strList64 = okHttpClient59.transports;
        com.squareup.okhttp.ConnectionPool connectionPool65 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient59.connectionPool = connectionPool65;
        com.squareup.okhttp.OkHttpClient okHttpClient67 = okHttpClient59.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient68 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier69 = null;
        okHttpClient68.hostnameVerifier = hostnameVerifier69;
        java.net.ResponseCache responseCache71 = null;
        okHttpClient68.responseCache = responseCache71;
        java.util.List<java.lang.String> strList73 = okHttpClient68.transports;
        com.squareup.okhttp.ConnectionPool connectionPool74 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient68.connectionPool = connectionPool74;
        com.squareup.okhttp.OkHttpClient okHttpClient76 = okHttpClient68.copyWithDefaults();
        java.net.ProxySelector proxySelector77 = okHttpClient76.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory78 = okHttpClient76.getSslSocketFactory();
        okHttpClient59.sslSocketFactory = sSLSocketFactory78;
        okHttpClient58.sslSocketFactory = sSLSocketFactory78;
        java.net.ProxySelector proxySelector81 = okHttpClient58.getProxySelector();
        javax.net.ssl.HostnameVerifier hostnameVerifier82 = okHttpClient58.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient83 = okHttpClient34.setHostnameVerifier(hostnameVerifier82);
        com.squareup.okhttp.OkHttpClient okHttpClient84 = okHttpClient23.setHostnameVerifier(hostnameVerifier82);
        java.net.ProxySelector proxySelector85 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient86 = okHttpClient23.setProxySelector(proxySelector85);
        com.squareup.okhttp.OkHttpClient okHttpClient87 = new com.squareup.okhttp.OkHttpClient(okHttpClient86);
        java.net.CookieHandler cookieHandler88 = null;
        okHttpClient87.cookieHandler = cookieHandler88;
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNotNull(routeSet16);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertNotNull(routeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(sSLSocketFactory28);
        org.junit.Assert.assertNotNull(okHttpClient29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(proxy31);
        org.junit.Assert.assertNull(proxy32);
        org.junit.Assert.assertNull(hostnameVerifier33);
        org.junit.Assert.assertNull(hostnameVerifier39);
        org.junit.Assert.assertNull(okAuthenticator44);
        org.junit.Assert.assertNotNull(connectionPool46);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNotNull(connectionPool54);
        org.junit.Assert.assertNotNull(okHttpClient56);
        org.junit.Assert.assertNull(responseCache57);
        org.junit.Assert.assertNotNull(okHttpClient58);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNotNull(connectionPool65);
        org.junit.Assert.assertNotNull(okHttpClient67);
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertNotNull(connectionPool74);
        org.junit.Assert.assertNotNull(okHttpClient76);
// flaky:         org.junit.Assert.assertNull(proxySelector77);
        org.junit.Assert.assertNotNull(sSLSocketFactory78);
// flaky:         org.junit.Assert.assertNull(proxySelector81);
        org.junit.Assert.assertNotNull(hostnameVerifier82);
        org.junit.Assert.assertNotNull(okHttpClient83);
        org.junit.Assert.assertNotNull(okHttpClient84);
        org.junit.Assert.assertNotNull(okHttpClient86);
    }

    @Test
    public void test12291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12291");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        java.net.Proxy proxy12 = okHttpClient11.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool14 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient13.connectionPool = connectionPool14;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier17 = null;
        okHttpClient16.hostnameVerifier = hostnameVerifier17;
        java.net.ResponseCache responseCache19 = null;
        okHttpClient16.responseCache = responseCache19;
        java.util.List<java.lang.String> strList21 = okHttpClient16.transports;
        com.squareup.okhttp.ConnectionPool connectionPool22 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient16.connectionPool = connectionPool22;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient13.setConnectionPool(connectionPool22);
        com.squareup.okhttp.ConnectionPool connectionPool25 = okHttpClient13.connectionPool;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient11.setConnectionPool(connectionPool25);
        okHttpClient11.followProtocolRedirects = false;
        com.squareup.okhttp.OkHttpClient okHttpClient29 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool30 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient29.connectionPool = connectionPool30;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier33 = null;
        okHttpClient32.hostnameVerifier = hostnameVerifier33;
        java.net.ResponseCache responseCache35 = null;
        okHttpClient32.responseCache = responseCache35;
        java.util.List<java.lang.String> strList37 = okHttpClient32.transports;
        com.squareup.okhttp.ConnectionPool connectionPool38 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient32.connectionPool = connectionPool38;
        com.squareup.okhttp.OkHttpClient okHttpClient40 = okHttpClient29.setConnectionPool(connectionPool38);
        java.net.ResponseCache responseCache41 = okHttpClient29.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory42 = okHttpClient29.sslSocketFactory;
        java.net.CookieHandler cookieHandler43 = okHttpClient29.getCookieHandler();
        com.squareup.okhttp.OkAuthenticator okAuthenticator44 = okHttpClient29.authenticator;
        java.util.Set<com.squareup.okhttp.Route> routeSet45 = okHttpClient29.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient46 = new com.squareup.okhttp.OkHttpClient(okHttpClient29);
        com.squareup.okhttp.OkHttpClient okHttpClient47 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier48 = null;
        okHttpClient47.hostnameVerifier = hostnameVerifier48;
        java.net.ResponseCache responseCache50 = null;
        okHttpClient47.responseCache = responseCache50;
        javax.net.ssl.HostnameVerifier hostnameVerifier52 = okHttpClient47.hostnameVerifier;
        java.net.Proxy proxy53 = okHttpClient47.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool56 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient47.connectionPool = connectionPool56;
        com.squareup.okhttp.OkHttpClient okHttpClient58 = okHttpClient47.copyWithDefaults();
        java.net.ResponseCache responseCache59 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient60 = okHttpClient58.setResponseCache(responseCache59);
        javax.net.ssl.HostnameVerifier hostnameVerifier61 = okHttpClient60.hostnameVerifier;
        okHttpClient46.hostnameVerifier = hostnameVerifier61;
        com.squareup.okhttp.OkHttpClient okHttpClient63 = okHttpClient11.setHostnameVerifier(hostnameVerifier61);
        java.net.Proxy proxy64 = okHttpClient63.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient66 = okHttpClient63.setFollowProtocolRedirects(true);
        com.squareup.okhttp.OkHttpClient okHttpClient67 = new com.squareup.okhttp.OkHttpClient(okHttpClient63);
        java.util.Set<com.squareup.okhttp.Route> routeSet68 = okHttpClient63.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient69 = new com.squareup.okhttp.OkHttpClient(okHttpClient63);
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(proxy12);
        org.junit.Assert.assertNotNull(connectionPool14);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(connectionPool22);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNotNull(connectionPool25);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNotNull(connectionPool30);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(connectionPool38);
        org.junit.Assert.assertNotNull(okHttpClient40);
        org.junit.Assert.assertNull(responseCache41);
        org.junit.Assert.assertNull(sSLSocketFactory42);
        org.junit.Assert.assertNull(cookieHandler43);
        org.junit.Assert.assertNull(okAuthenticator44);
        org.junit.Assert.assertNotNull(routeSet45);
        org.junit.Assert.assertNull(hostnameVerifier52);
        org.junit.Assert.assertNull(proxy53);
        org.junit.Assert.assertNotNull(okHttpClient58);
        org.junit.Assert.assertNotNull(okHttpClient60);
        org.junit.Assert.assertNotNull(hostnameVerifier61);
        org.junit.Assert.assertNotNull(okHttpClient63);
        org.junit.Assert.assertNull(proxy64);
        org.junit.Assert.assertNotNull(okHttpClient66);
        org.junit.Assert.assertNotNull(routeSet68);
    }

    @Test
    public void test12292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12292");
        com.squareup.okhttp.ConnectionPool connectionPool2 = new com.squareup.okhttp.ConnectionPool((int) (byte) 0, 1L);
        com.squareup.okhttp.Connection connection3 = null;
        // The following exception was thrown during execution in test generation
        try {
            connectionPool2.maybeShare(connection3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test12293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12293");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        com.squareup.okhttp.OkHttpClient okHttpClient5 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient5.connectionPool = connectionPool6;
        com.squareup.okhttp.OkAuthenticator okAuthenticator8 = null;
        okHttpClient5.authenticator = okAuthenticator8;
        java.net.CookieHandler cookieHandler10 = null;
        okHttpClient5.cookieHandler = cookieHandler10;
        java.net.Proxy proxy12 = java.net.Proxy.NO_PROXY;
        boolean boolean14 = proxy12.equals((java.lang.Object) 1L);
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache16 = okHttpClient15.okResponseCache();
        java.net.ResponseCache responseCache17 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient15.setResponseCache(responseCache17);
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        okHttpClient15.transports = strList21;
        boolean boolean24 = proxy12.equals((java.lang.Object) strList21);
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient5.setProxy(proxy12);
        com.squareup.okhttp.OkHttpClient okHttpClient26 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier27 = null;
        okHttpClient26.hostnameVerifier = hostnameVerifier27;
        java.net.ProxySelector proxySelector29 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient30 = okHttpClient26.setProxySelector(proxySelector29);
        java.net.CookieHandler cookieHandler31 = okHttpClient26.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient32 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier33 = null;
        okHttpClient32.hostnameVerifier = hostnameVerifier33;
        java.net.ResponseCache responseCache35 = null;
        okHttpClient32.responseCache = responseCache35;
        java.util.List<java.lang.String> strList37 = okHttpClient32.transports;
        com.squareup.okhttp.ConnectionPool connectionPool38 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient32.connectionPool = connectionPool38;
        java.net.Proxy proxy40 = null;
        okHttpClient32.proxy = proxy40;
        java.util.Set<com.squareup.okhttp.Route> routeSet42 = okHttpClient32.failedRoutes;
        okHttpClient26.failedRoutes = routeSet42;
        javax.net.ssl.HostnameVerifier hostnameVerifier44 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient45 = okHttpClient26.setHostnameVerifier(hostnameVerifier44);
        boolean boolean46 = proxy12.equals((java.lang.Object) okHttpClient45);
        java.net.SocketAddress socketAddress47 = proxy12.address();
        com.squareup.okhttp.OkHttpClient okHttpClient48 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier49 = null;
        okHttpClient48.hostnameVerifier = hostnameVerifier49;
        java.net.ResponseCache responseCache51 = null;
        okHttpClient48.responseCache = responseCache51;
        java.util.List<java.lang.String> strList53 = okHttpClient48.transports;
        com.squareup.okhttp.ConnectionPool connectionPool54 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient48.connectionPool = connectionPool54;
        java.net.Proxy proxy56 = null;
        okHttpClient48.proxy = proxy56;
        boolean boolean58 = okHttpClient48.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient59 = new com.squareup.okhttp.OkHttpClient(okHttpClient48);
        java.util.Set<com.squareup.okhttp.Route> routeSet60 = okHttpClient48.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient61 = new com.squareup.okhttp.OkHttpClient(okHttpClient48);
        boolean boolean62 = proxy12.equals((java.lang.Object) okHttpClient61);
        java.lang.String str63 = proxy12.toString();
        java.net.SocketAddress socketAddress64 = proxy12.address();
        okHttpClient0.proxy = proxy12;
        java.util.Set<com.squareup.okhttp.Route> routeSet66 = okHttpClient0.failedRoutes;
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNotNull(proxy12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(okResponseCache16);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(okHttpClient25);
        org.junit.Assert.assertNotNull(okHttpClient30);
        org.junit.Assert.assertNull(cookieHandler31);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(connectionPool38);
        org.junit.Assert.assertNotNull(routeSet42);
        org.junit.Assert.assertNotNull(okHttpClient45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(socketAddress47);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNotNull(connectionPool54);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(routeSet60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "DIRECT" + "'", str63, "DIRECT");
        org.junit.Assert.assertNull(socketAddress64);
        org.junit.Assert.assertNotNull(routeSet66);
    }

    @Test
    public void test12294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12294");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache8 = okHttpClient7.okResponseCache();
        java.net.ResponseCache responseCache9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient7.setResponseCache(responseCache9);
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        okHttpClient7.transports = strList13;
        okHttpClient0.transports = strList13;
        javax.net.ssl.HostnameVerifier hostnameVerifier17 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier17;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory20 = null;
        okHttpClient0.sslSocketFactory = sSLSocketFactory20;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache22 = okHttpClient0.okResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient23 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        java.net.CookieHandler cookieHandler24 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient0.setCookieHandler(cookieHandler24);
        com.squareup.okhttp.OkHttpClient okHttpClient26 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier27 = null;
        okHttpClient26.hostnameVerifier = hostnameVerifier27;
        java.net.ProxySelector proxySelector29 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient30 = okHttpClient26.setProxySelector(proxySelector29);
        javax.net.ssl.HostnameVerifier hostnameVerifier31 = okHttpClient26.hostnameVerifier;
        java.net.CookieHandler cookieHandler32 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient26.setCookieHandler(cookieHandler32);
        java.net.ResponseCache responseCache34 = null;
        okHttpClient33.responseCache = responseCache34;
        com.squareup.okhttp.OkHttpClient okHttpClient36 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache37 = okHttpClient36.okResponseCache();
        java.net.ResponseCache responseCache38 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient36.setResponseCache(responseCache38);
        javax.net.ssl.HostnameVerifier hostnameVerifier40 = okHttpClient39.hostnameVerifier;
        java.net.ResponseCache responseCache41 = null;
        okHttpClient39.responseCache = responseCache41;
        java.net.CookieHandler cookieHandler43 = null;
        okHttpClient39.cookieHandler = cookieHandler43;
        com.squareup.okhttp.OkHttpClient okHttpClient45 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier46 = null;
        okHttpClient45.hostnameVerifier = hostnameVerifier46;
        java.net.ResponseCache responseCache48 = null;
        okHttpClient45.responseCache = responseCache48;
        java.util.List<java.lang.String> strList50 = okHttpClient45.transports;
        com.squareup.okhttp.ConnectionPool connectionPool51 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient45.connectionPool = connectionPool51;
        java.net.CookieHandler cookieHandler53 = okHttpClient45.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache54 = okHttpClient45.okResponseCache();
        java.net.CookieHandler cookieHandler55 = okHttpClient45.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient56 = new com.squareup.okhttp.OkHttpClient(okHttpClient45);
        javax.net.ssl.HostnameVerifier hostnameVerifier57 = okHttpClient56.hostnameVerifier;
        java.util.List<java.lang.String> strList58 = okHttpClient56.transports;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory59 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient60 = okHttpClient56.setSSLSocketFactory(sSLSocketFactory59);
        java.net.ResponseCache responseCache61 = okHttpClient60.responseCache;
        com.squareup.okhttp.OkHttpClient okHttpClient62 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier63 = null;
        okHttpClient62.hostnameVerifier = hostnameVerifier63;
        java.net.ResponseCache responseCache65 = null;
        okHttpClient62.responseCache = responseCache65;
        java.util.List<java.lang.String> strList67 = okHttpClient62.transports;
        com.squareup.okhttp.ConnectionPool connectionPool68 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient62.connectionPool = connectionPool68;
        java.net.CookieHandler cookieHandler70 = okHttpClient62.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache71 = okHttpClient62.okResponseCache();
        java.net.CookieHandler cookieHandler72 = okHttpClient62.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient73 = new com.squareup.okhttp.OkHttpClient(okHttpClient62);
        java.net.Proxy proxy74 = java.net.Proxy.NO_PROXY;
        boolean boolean76 = proxy74.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type77 = proxy74.type();
        java.net.SocketAddress socketAddress78 = proxy74.address();
        com.squareup.okhttp.OkHttpClient okHttpClient79 = okHttpClient62.setProxy(proxy74);
        java.lang.String[] strArray81 = new java.lang.String[] { "DIRECT" };
        java.util.ArrayList<java.lang.String> strList82 = new java.util.ArrayList<java.lang.String>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList82, strArray81);
        okHttpClient62.transports = strList82;
        com.squareup.okhttp.OkHttpClient okHttpClient86 = okHttpClient62.setFollowProtocolRedirects(false);
        com.squareup.okhttp.ConnectionPool connectionPool89 = new com.squareup.okhttp.ConnectionPool((int) '#', (long) (short) 100);
        com.squareup.okhttp.OkHttpClient okHttpClient90 = okHttpClient86.setConnectionPool(connectionPool89);
        java.net.CookieHandler cookieHandler91 = okHttpClient86.cookieHandler;
        java.util.Set<com.squareup.okhttp.Route> routeSet92 = okHttpClient86.failedRoutes;
        okHttpClient60.failedRoutes = routeSet92;
        okHttpClient39.failedRoutes = routeSet92;
        okHttpClient33.failedRoutes = routeSet92;
        okHttpClient0.failedRoutes = routeSet92;
        com.squareup.okhttp.OkHttpClient okHttpClient97 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNull(okResponseCache8);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(okResponseCache22);
        org.junit.Assert.assertNotNull(okHttpClient25);
        org.junit.Assert.assertNotNull(okHttpClient30);
        org.junit.Assert.assertNull(hostnameVerifier31);
        org.junit.Assert.assertNotNull(okHttpClient33);
        org.junit.Assert.assertNull(okResponseCache37);
        org.junit.Assert.assertNotNull(okHttpClient39);
        org.junit.Assert.assertNull(hostnameVerifier40);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNotNull(connectionPool51);
        org.junit.Assert.assertNull(cookieHandler53);
        org.junit.Assert.assertNull(okResponseCache54);
        org.junit.Assert.assertNull(cookieHandler55);
        org.junit.Assert.assertNull(hostnameVerifier57);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNotNull(okHttpClient60);
        org.junit.Assert.assertNull(responseCache61);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNotNull(connectionPool68);
        org.junit.Assert.assertNull(cookieHandler70);
        org.junit.Assert.assertNull(okResponseCache71);
        org.junit.Assert.assertNull(cookieHandler72);
        org.junit.Assert.assertNotNull(proxy74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + type77 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type77.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress78);
        org.junit.Assert.assertNotNull(okHttpClient79);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(okHttpClient86);
        org.junit.Assert.assertNotNull(okHttpClient90);
        org.junit.Assert.assertNull(cookieHandler91);
        org.junit.Assert.assertNotNull(routeSet92);
    }

    @Test
    public void test12295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12295");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.CookieHandler cookieHandler5 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = null;
        okHttpClient6.hostnameVerifier = hostnameVerifier7;
        java.net.ResponseCache responseCache9 = null;
        okHttpClient6.responseCache = responseCache9;
        java.util.List<java.lang.String> strList11 = okHttpClient6.transports;
        com.squareup.okhttp.ConnectionPool connectionPool12 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient6.connectionPool = connectionPool12;
        java.net.Proxy proxy14 = null;
        okHttpClient6.proxy = proxy14;
        java.util.Set<com.squareup.okhttp.Route> routeSet16 = okHttpClient6.failedRoutes;
        okHttpClient0.failedRoutes = routeSet16;
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient0.setHostnameVerifier(hostnameVerifier18);
        java.net.ResponseCache responseCache20 = okHttpClient0.responseCache;
        com.squareup.okhttp.OkAuthenticator okAuthenticator21 = okHttpClient0.authenticator;
        java.net.ProxySelector proxySelector22 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient0.setProxySelector(proxySelector22);
        java.net.CookieHandler cookieHandler24 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache25 = okHttpClient0.okResponseCache();
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNotNull(routeSet16);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNull(responseCache20);
        org.junit.Assert.assertNull(okAuthenticator21);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertNull(cookieHandler24);
        org.junit.Assert.assertNull(okResponseCache25);
    }

    @Test
    public void test12296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12296");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache1 = okHttpClient0.okResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient2 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool4 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool4;
        com.squareup.okhttp.Address address6 = null;
        com.squareup.okhttp.Connection connection7 = connectionPool4.get(address6);
        int int8 = connectionPool4.getSpdyConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient2.setConnectionPool(connectionPool4);
        java.net.Proxy proxy10 = java.net.Proxy.NO_PROXY;
        boolean boolean12 = proxy10.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type13 = proxy10.type();
        java.net.SocketAddress socketAddress14 = proxy10.address();
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier16 = null;
        okHttpClient15.hostnameVerifier = hostnameVerifier16;
        java.net.ResponseCache responseCache18 = null;
        okHttpClient15.responseCache = responseCache18;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache20 = okHttpClient15.okResponseCache();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory21 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient15.setSSLSocketFactory(sSLSocketFactory21);
        boolean boolean23 = proxy10.equals((java.lang.Object) okHttpClient15);
        com.squareup.okhttp.OkHttpClient okHttpClient24 = new com.squareup.okhttp.OkHttpClient(okHttpClient15);
        javax.net.ssl.HostnameVerifier hostnameVerifier25 = okHttpClient15.hostnameVerifier;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory26 = okHttpClient15.sslSocketFactory;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier28 = null;
        okHttpClient27.hostnameVerifier = hostnameVerifier28;
        java.net.ResponseCache responseCache30 = null;
        okHttpClient27.responseCache = responseCache30;
        javax.net.ssl.HostnameVerifier hostnameVerifier32 = okHttpClient27.hostnameVerifier;
        java.net.Proxy proxy33 = okHttpClient27.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool36 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient27.connectionPool = connectionPool36;
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient27.copyWithDefaults();
        java.net.ResponseCache responseCache39 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient40 = okHttpClient38.setResponseCache(responseCache39);
        javax.net.ssl.HostnameVerifier hostnameVerifier41 = okHttpClient40.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient40.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient43 = new com.squareup.okhttp.OkHttpClient(okHttpClient42);
        com.squareup.okhttp.ConnectionPool connectionPool46 = new com.squareup.okhttp.ConnectionPool((int) (byte) 0, (long) (short) 0);
        com.squareup.okhttp.OkHttpClient okHttpClient47 = okHttpClient42.setConnectionPool(connectionPool46);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory48 = okHttpClient42.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient49 = okHttpClient15.setSSLSocketFactory(sSLSocketFactory48);
        java.lang.String[] strArray50 = sSLSocketFactory48.getDefaultCipherSuites();
        okHttpClient9.sslSocketFactory = sSLSocketFactory48;
        java.net.Socket socket52 = sSLSocketFactory48.createSocket();
        java.lang.String[] strArray53 = sSLSocketFactory48.getSupportedCipherSuites();
        java.net.Socket socket54 = sSLSocketFactory48.createSocket();
        java.net.InetAddress inetAddress55 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket57 = sSLSocketFactory48.createSocket(inetAddress55, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.net.ConnectException; message: Connection refused (Connection refused)");
        } catch (java.net.ConnectException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(okResponseCache1);
        org.junit.Assert.assertNotNull(connectionPool4);
        org.junit.Assert.assertNull(connection7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNotNull(proxy10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + type13 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type13.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress14);
        org.junit.Assert.assertNull(okResponseCache20);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(hostnameVerifier25);
        org.junit.Assert.assertNull(sSLSocketFactory26);
        org.junit.Assert.assertNull(hostnameVerifier32);
        org.junit.Assert.assertNull(proxy33);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNotNull(okHttpClient40);
        org.junit.Assert.assertNotNull(hostnameVerifier41);
        org.junit.Assert.assertNotNull(okHttpClient42);
        org.junit.Assert.assertNotNull(okHttpClient47);
        org.junit.Assert.assertNotNull(sSLSocketFactory48);
        org.junit.Assert.assertNotNull(okHttpClient49);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(socket52);
        org.junit.Assert.assertEquals(socket52.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(socket54);
        org.junit.Assert.assertEquals(socket54.toString(), "Socket[unconnected]");
    }

    @Test
    public void test12297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12297");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        java.net.Proxy proxy6 = java.net.Proxy.NO_PROXY;
        boolean boolean8 = proxy6.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type9 = proxy6.type();
        java.net.SocketAddress socketAddress10 = proxy6.address();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setProxy(proxy6);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setSSLSocketFactory(sSLSocketFactory12);
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = okHttpClient11.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool16 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient15.connectionPool = connectionPool16;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier19 = null;
        okHttpClient18.hostnameVerifier = hostnameVerifier19;
        java.net.ResponseCache responseCache21 = null;
        okHttpClient18.responseCache = responseCache21;
        java.util.List<java.lang.String> strList23 = okHttpClient18.transports;
        com.squareup.okhttp.ConnectionPool connectionPool24 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient18.connectionPool = connectionPool24;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient15.setConnectionPool(connectionPool24);
        com.squareup.okhttp.ConnectionPool connectionPool27 = okHttpClient15.connectionPool;
        int int28 = connectionPool27.getHttpConnectionCount();
        int int29 = connectionPool27.getHttpConnectionCount();
        okHttpClient11.connectionPool = connectionPool27;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool32 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient31.connectionPool = connectionPool32;
        com.squareup.okhttp.OkHttpClient okHttpClient34 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier35 = null;
        okHttpClient34.hostnameVerifier = hostnameVerifier35;
        java.net.ResponseCache responseCache37 = null;
        okHttpClient34.responseCache = responseCache37;
        java.util.List<java.lang.String> strList39 = okHttpClient34.transports;
        com.squareup.okhttp.ConnectionPool connectionPool40 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient34.connectionPool = connectionPool40;
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient31.setConnectionPool(connectionPool40);
        com.squareup.okhttp.ConnectionPool connectionPool43 = okHttpClient42.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator44 = okHttpClient42.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool47 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient42.connectionPool = connectionPool47;
        java.net.ResponseCache responseCache49 = okHttpClient42.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory50 = okHttpClient42.sslSocketFactory;
        java.net.Proxy proxy51 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress52 = proxy51.address();
        com.squareup.okhttp.OkHttpClient okHttpClient53 = okHttpClient42.setProxy(proxy51);
        com.squareup.okhttp.ConnectionPool connectionPool56 = new com.squareup.okhttp.ConnectionPool((int) (byte) 100, (long) '4');
        okHttpClient53.connectionPool = connectionPool56;
        boolean boolean58 = okHttpClient53.followProtocolRedirects;
        java.net.Proxy proxy59 = okHttpClient53.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient60 = okHttpClient11.setProxy(proxy59);
        java.net.ProxySelector proxySelector61 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient62 = okHttpClient60.setProxySelector(proxySelector61);
        java.net.CookieHandler cookieHandler63 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient64 = okHttpClient60.setCookieHandler(cookieHandler63);
        com.squareup.okhttp.OkAuthenticator okAuthenticator65 = okHttpClient60.authenticator;
        java.net.ProxySelector proxySelector66 = okHttpClient60.proxySelector;
        com.squareup.okhttp.OkAuthenticator okAuthenticator67 = okHttpClient60.getAuthenticator();
        com.squareup.okhttp.OkHttpClient okHttpClient68 = okHttpClient60.copyWithDefaults();
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(proxy6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + type9 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type9.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress10);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNull(hostnameVerifier14);
        org.junit.Assert.assertNotNull(connectionPool16);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNotNull(connectionPool24);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNotNull(connectionPool27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(connectionPool32);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNotNull(connectionPool40);
        org.junit.Assert.assertNotNull(okHttpClient42);
        org.junit.Assert.assertNotNull(connectionPool43);
        org.junit.Assert.assertNull(okAuthenticator44);
        org.junit.Assert.assertNull(responseCache49);
        org.junit.Assert.assertNull(sSLSocketFactory50);
        org.junit.Assert.assertNotNull(proxy51);
        org.junit.Assert.assertNull(socketAddress52);
        org.junit.Assert.assertNotNull(okHttpClient53);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(proxy59);
        org.junit.Assert.assertNotNull(okHttpClient60);
        org.junit.Assert.assertNotNull(okHttpClient62);
        org.junit.Assert.assertNotNull(okHttpClient64);
        org.junit.Assert.assertNull(okAuthenticator65);
        org.junit.Assert.assertNull(proxySelector66);
        org.junit.Assert.assertNull(okAuthenticator67);
        org.junit.Assert.assertNotNull(okHttpClient68);
    }

    @Test
    public void test12298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12298");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        javax.net.ssl.HostnameVerifier hostnameVerifier6 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier6;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache8 = okHttpClient0.okResponseCache();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory9 = okHttpClient0.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient10 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier11 = null;
        okHttpClient10.hostnameVerifier = hostnameVerifier11;
        java.net.ResponseCache responseCache13 = null;
        okHttpClient10.responseCache = responseCache13;
        javax.net.ssl.HostnameVerifier hostnameVerifier15 = okHttpClient10.hostnameVerifier;
        java.net.Proxy proxy16 = okHttpClient10.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool19 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient10.connectionPool = connectionPool19;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient10.copyWithDefaults();
        java.net.Proxy proxy22 = okHttpClient21.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier23 = okHttpClient21.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient0.setHostnameVerifier(hostnameVerifier23);
        java.net.ProxySelector proxySelector25 = okHttpClient0.proxySelector;
        java.net.CookieHandler cookieHandler26 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient0.setCookieHandler(cookieHandler26);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory28 = okHttpClient0.sslSocketFactory;
        com.squareup.okhttp.OkAuthenticator okAuthenticator29 = okHttpClient0.authenticator;
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNull(okResponseCache8);
        org.junit.Assert.assertNull(sSLSocketFactory9);
        org.junit.Assert.assertNull(hostnameVerifier15);
        org.junit.Assert.assertNull(proxy16);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNull(proxy22);
        org.junit.Assert.assertNotNull(hostnameVerifier23);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNull(proxySelector25);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNull(sSLSocketFactory28);
        org.junit.Assert.assertNull(okAuthenticator29);
    }

    @Test
    public void test12299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12299");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.CookieHandler cookieHandler8 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache9 = okHttpClient0.okResponseCache();
        java.net.CookieHandler cookieHandler10 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory12 = okHttpClient11.sslSocketFactory;
        com.squareup.okhttp.OkAuthenticator okAuthenticator13 = okHttpClient11.authenticator;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache14 = okHttpClient11.okResponseCache();
        java.net.Proxy proxy15 = okHttpClient11.getProxy();
        java.net.ResponseCache responseCache16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient11.setResponseCache(responseCache16);
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier19 = null;
        okHttpClient18.hostnameVerifier = hostnameVerifier19;
        java.net.ResponseCache responseCache21 = null;
        okHttpClient18.responseCache = responseCache21;
        java.util.List<java.lang.String> strList23 = okHttpClient18.transports;
        javax.net.ssl.HostnameVerifier hostnameVerifier24 = null;
        okHttpClient18.hostnameVerifier = hostnameVerifier24;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache26 = okHttpClient18.okResponseCache();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory27 = okHttpClient18.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient28 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier29 = null;
        okHttpClient28.hostnameVerifier = hostnameVerifier29;
        java.net.ResponseCache responseCache31 = null;
        okHttpClient28.responseCache = responseCache31;
        javax.net.ssl.HostnameVerifier hostnameVerifier33 = okHttpClient28.hostnameVerifier;
        java.net.Proxy proxy34 = okHttpClient28.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool37 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient28.connectionPool = connectionPool37;
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient28.copyWithDefaults();
        java.net.Proxy proxy40 = okHttpClient39.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier41 = okHttpClient39.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient18.setHostnameVerifier(hostnameVerifier41);
        okHttpClient17.hostnameVerifier = hostnameVerifier41;
        com.squareup.okhttp.OkHttpClient okHttpClient44 = new com.squareup.okhttp.OkHttpClient(okHttpClient17);
        com.squareup.okhttp.OkHttpClient okHttpClient45 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier46 = null;
        okHttpClient45.hostnameVerifier = hostnameVerifier46;
        java.net.ResponseCache responseCache48 = null;
        okHttpClient45.responseCache = responseCache48;
        java.util.List<java.lang.String> strList50 = okHttpClient45.transports;
        com.squareup.okhttp.ConnectionPool connectionPool51 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient45.connectionPool = connectionPool51;
        java.net.CookieHandler cookieHandler53 = okHttpClient45.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache54 = okHttpClient45.okResponseCache();
        java.net.CookieHandler cookieHandler55 = okHttpClient45.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient56 = new com.squareup.okhttp.OkHttpClient(okHttpClient45);
        javax.net.ssl.HostnameVerifier hostnameVerifier57 = okHttpClient56.hostnameVerifier;
        java.util.List<java.lang.String> strList58 = okHttpClient56.transports;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory59 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient60 = okHttpClient56.setSSLSocketFactory(sSLSocketFactory59);
        com.squareup.okhttp.OkHttpClient okHttpClient61 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier62 = null;
        okHttpClient61.hostnameVerifier = hostnameVerifier62;
        java.util.Set<com.squareup.okhttp.Route> routeSet64 = okHttpClient61.failedRoutes;
        okHttpClient60.failedRoutes = routeSet64;
        okHttpClient44.failedRoutes = routeSet64;
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNull(cookieHandler8);
        org.junit.Assert.assertNull(okResponseCache9);
        org.junit.Assert.assertNull(cookieHandler10);
        org.junit.Assert.assertNull(sSLSocketFactory12);
        org.junit.Assert.assertNull(okAuthenticator13);
        org.junit.Assert.assertNull(okResponseCache14);
        org.junit.Assert.assertNull(proxy15);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNull(okResponseCache26);
        org.junit.Assert.assertNull(sSLSocketFactory27);
        org.junit.Assert.assertNull(hostnameVerifier33);
        org.junit.Assert.assertNull(proxy34);
        org.junit.Assert.assertNotNull(okHttpClient39);
        org.junit.Assert.assertNull(proxy40);
        org.junit.Assert.assertNotNull(hostnameVerifier41);
        org.junit.Assert.assertNotNull(okHttpClient42);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNotNull(connectionPool51);
        org.junit.Assert.assertNull(cookieHandler53);
        org.junit.Assert.assertNull(okResponseCache54);
        org.junit.Assert.assertNull(cookieHandler55);
        org.junit.Assert.assertNull(hostnameVerifier57);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNotNull(okHttpClient60);
        org.junit.Assert.assertNotNull(routeSet64);
    }

    @Test
    public void test12300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12300");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.Proxy proxy8 = null;
        okHttpClient0.proxy = proxy8;
        java.net.Proxy proxy10 = okHttpClient0.getProxy();
        java.net.ProxySelector proxySelector11 = null;
        okHttpClient0.proxySelector = proxySelector11;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache13 = okHttpClient0.okResponseCache();
        java.net.CookieHandler cookieHandler14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient0.setCookieHandler(cookieHandler14);
        java.net.CookieHandler cookieHandler16 = null;
        okHttpClient0.cookieHandler = cookieHandler16;
        java.util.List<java.lang.String> strList18 = okHttpClient0.getTransports();
        java.net.ResponseCache responseCache19 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient0.setResponseCache(responseCache19);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNull(proxy10);
        org.junit.Assert.assertNull(okResponseCache13);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(okHttpClient20);
    }

    @Test
    public void test12301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12301");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.ResponseCache responseCache5 = null;
        okHttpClient4.responseCache = responseCache5;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient4.setSSLSocketFactory(sSLSocketFactory7);
        com.squareup.okhttp.OkHttpClient okHttpClient9 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool10 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient9.connectionPool = connectionPool10;
        com.squareup.okhttp.OkAuthenticator okAuthenticator12 = null;
        okHttpClient9.authenticator = okAuthenticator12;
        java.util.List<java.lang.String> strList14 = okHttpClient9.transports;
        java.net.ResponseCache responseCache15 = null;
        okHttpClient9.responseCache = responseCache15;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = null;
        okHttpClient17.hostnameVerifier = hostnameVerifier18;
        java.net.ResponseCache responseCache20 = null;
        okHttpClient17.responseCache = responseCache20;
        javax.net.ssl.HostnameVerifier hostnameVerifier22 = okHttpClient17.hostnameVerifier;
        java.net.Proxy proxy23 = okHttpClient17.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool26 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient17.connectionPool = connectionPool26;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient17.copyWithDefaults();
        java.net.Proxy proxy29 = okHttpClient28.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = okHttpClient28.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient9.setHostnameVerifier(hostnameVerifier30);
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient8.setHostnameVerifier(hostnameVerifier30);
        java.net.CookieHandler cookieHandler33 = okHttpClient8.cookieHandler;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory34 = okHttpClient8.sslSocketFactory;
        com.squareup.okhttp.OkHttpClient okHttpClient35 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier36 = null;
        okHttpClient35.hostnameVerifier = hostnameVerifier36;
        java.net.ResponseCache responseCache38 = null;
        okHttpClient35.responseCache = responseCache38;
        java.util.List<java.lang.String> strList40 = okHttpClient35.transports;
        com.squareup.okhttp.ConnectionPool connectionPool41 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient35.connectionPool = connectionPool41;
        java.net.CookieHandler cookieHandler43 = okHttpClient35.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache44 = okHttpClient35.okResponseCache();
        java.net.CookieHandler cookieHandler45 = okHttpClient35.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient46 = new com.squareup.okhttp.OkHttpClient(okHttpClient35);
        java.net.Proxy proxy47 = java.net.Proxy.NO_PROXY;
        boolean boolean49 = proxy47.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type50 = proxy47.type();
        java.net.SocketAddress socketAddress51 = proxy47.address();
        com.squareup.okhttp.OkHttpClient okHttpClient52 = okHttpClient35.setProxy(proxy47);
        boolean boolean53 = okHttpClient52.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient55 = okHttpClient52.setFollowProtocolRedirects(false);
        com.squareup.okhttp.OkHttpClient okHttpClient56 = okHttpClient55.copyWithDefaults();
        com.squareup.okhttp.OkAuthenticator okAuthenticator57 = okHttpClient56.getAuthenticator();
        okHttpClient8.authenticator = okAuthenticator57;
        java.net.ResponseCache responseCache59 = okHttpClient8.responseCache;
        java.net.ResponseCache responseCache60 = null;
        okHttpClient8.responseCache = responseCache60;
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertNotNull(connectionPool10);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(hostnameVerifier22);
        org.junit.Assert.assertNull(proxy23);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNull(proxy29);
        org.junit.Assert.assertNotNull(hostnameVerifier30);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertNull(cookieHandler33);
        org.junit.Assert.assertNull(sSLSocketFactory34);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNotNull(connectionPool41);
        org.junit.Assert.assertNull(cookieHandler43);
        org.junit.Assert.assertNull(okResponseCache44);
        org.junit.Assert.assertNull(cookieHandler45);
        org.junit.Assert.assertNotNull(proxy47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + type50 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type50.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress51);
        org.junit.Assert.assertNotNull(okHttpClient52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(okHttpClient55);
        org.junit.Assert.assertNotNull(okHttpClient56);
        org.junit.Assert.assertNotNull(okAuthenticator57);
        org.junit.Assert.assertNull(responseCache59);
    }

    @Test
    public void test12302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12302");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache1 = okHttpClient0.okResponseCache();
        java.net.ResponseCache responseCache2 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.setResponseCache(responseCache2);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory4 = okHttpClient0.sslSocketFactory;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory5 = okHttpClient0.sslSocketFactory;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory6);
        com.squareup.okhttp.OkHttpClient okHttpClient8 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier9 = null;
        okHttpClient8.hostnameVerifier = hostnameVerifier9;
        java.net.ResponseCache responseCache11 = null;
        okHttpClient8.responseCache = responseCache11;
        java.util.List<java.lang.String> strList13 = okHttpClient8.transports;
        com.squareup.okhttp.ConnectionPool connectionPool14 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient8.connectionPool = connectionPool14;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient0.setConnectionPool(connectionPool14);
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient(okHttpClient17);
        java.net.ProxySelector proxySelector19 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient17.setProxySelector(proxySelector19);
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient17.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient(okHttpClient21);
        com.squareup.okhttp.OkHttpClient okHttpClient23 = new com.squareup.okhttp.OkHttpClient(okHttpClient22);
        org.junit.Assert.assertNull(okResponseCache1);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertNull(sSLSocketFactory4);
        org.junit.Assert.assertNull(sSLSocketFactory5);
        org.junit.Assert.assertNotNull(okHttpClient7);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNotNull(connectionPool14);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNotNull(okHttpClient21);
    }

    @Test
    public void test12303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12303");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.CookieHandler cookieHandler5 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = null;
        okHttpClient6.hostnameVerifier = hostnameVerifier7;
        java.net.ResponseCache responseCache9 = null;
        okHttpClient6.responseCache = responseCache9;
        java.util.List<java.lang.String> strList11 = okHttpClient6.transports;
        com.squareup.okhttp.ConnectionPool connectionPool12 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient6.connectionPool = connectionPool12;
        java.net.Proxy proxy14 = null;
        okHttpClient6.proxy = proxy14;
        java.util.Set<com.squareup.okhttp.Route> routeSet16 = okHttpClient6.failedRoutes;
        okHttpClient0.failedRoutes = routeSet16;
        java.net.ProxySelector proxySelector18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient0.setProxySelector(proxySelector18);
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient21 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        com.squareup.okhttp.ConnectionPool connectionPool22 = null;
        okHttpClient21.connectionPool = connectionPool22;
        com.squareup.okhttp.OkAuthenticator okAuthenticator24 = okHttpClient21.getAuthenticator();
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient21.setFollowProtocolRedirects(true);
        java.util.List<java.lang.String> strList27 = okHttpClient21.transports;
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNotNull(routeSet16);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNull(okAuthenticator24);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNull(strList27);
    }

    @Test
    public void test12304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12304");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.Proxy proxy8 = null;
        okHttpClient0.proxy = proxy8;
        boolean boolean10 = okHttpClient0.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.copyWithDefaults();
        java.net.CookieHandler cookieHandler12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setCookieHandler(cookieHandler12);
        com.squareup.okhttp.ConnectionPool connectionPool14 = okHttpClient11.getConnectionPool();
        com.squareup.okhttp.Address address15 = null;
        com.squareup.okhttp.Connection connection16 = connectionPool14.get(address15);
        com.squareup.okhttp.Connection connection17 = null;
        // The following exception was thrown during execution in test generation
        try {
            connectionPool14.maybeShare(connection17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNotNull(connectionPool14);
        org.junit.Assert.assertNull(connection16);
    }

    @Test
    public void test12305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12305");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache1 = okHttpClient0.okResponseCache();
        java.net.ResponseCache responseCache2 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.setResponseCache(responseCache2);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory4 = okHttpClient0.sslSocketFactory;
        java.net.CookieHandler cookieHandler5 = okHttpClient0.getCookieHandler();
        java.net.Proxy proxy6 = okHttpClient0.proxy;
        org.junit.Assert.assertNull(okResponseCache1);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertNull(sSLSocketFactory4);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertNull(proxy6);
    }

    @Test
    public void test12306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12306");
        com.squareup.okhttp.ConnectionPool connectionPool2 = new com.squareup.okhttp.ConnectionPool((-1), (long) 'a');
        connectionPool2.evictAll();
        com.squareup.okhttp.Address address4 = null;
        com.squareup.okhttp.Connection connection5 = connectionPool2.get(address4);
        com.squareup.okhttp.Address address6 = null;
        com.squareup.okhttp.Connection connection7 = connectionPool2.get(address6);
        org.junit.Assert.assertNull(connection5);
        org.junit.Assert.assertNull(connection7);
    }

    @Test
    public void test12307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12307");
        java.net.Proxy proxy0 = java.net.Proxy.NO_PROXY;
        boolean boolean2 = proxy0.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type3 = proxy0.type();
        java.lang.String str4 = proxy0.toString();
        java.net.Proxy.Type type5 = proxy0.type();
        java.net.Proxy.Type type6 = proxy0.type();
        java.net.SocketAddress socketAddress7 = proxy0.address();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier9 = null;
        okHttpClient8.hostnameVerifier = hostnameVerifier9;
        java.net.ProxySelector proxySelector11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient8.setProxySelector(proxySelector11);
        java.net.ResponseCache responseCache13 = null;
        okHttpClient12.responseCache = responseCache13;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient12.setSSLSocketFactory(sSLSocketFactory15);
        java.net.CookieHandler cookieHandler17 = okHttpClient16.cookieHandler;
        boolean boolean18 = proxy0.equals((java.lang.Object) okHttpClient16);
        com.squareup.okhttp.OkHttpClient okHttpClient19 = new com.squareup.okhttp.OkHttpClient(okHttpClient16);
        java.net.ResponseCache responseCache20 = null;
        okHttpClient19.responseCache = responseCache20;
        org.junit.Assert.assertNotNull(proxy0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + type3 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type3.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "DIRECT" + "'", str4, "DIRECT");
        org.junit.Assert.assertTrue("'" + type5 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type5.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertTrue("'" + type6 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type6.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress7);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNull(cookieHandler17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test12308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12308");
        java.net.Proxy proxy0 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress1 = proxy0.address();
        java.net.SocketAddress socketAddress2 = proxy0.address();
        java.lang.Object obj3 = null;
        boolean boolean4 = proxy0.equals(obj3);
        java.net.Proxy.Type type5 = proxy0.type();
        java.net.SocketAddress socketAddress6 = proxy0.address();
        java.lang.String str7 = proxy0.toString();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier9 = null;
        okHttpClient8.hostnameVerifier = hostnameVerifier9;
        java.net.ProxySelector proxySelector11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient8.setProxySelector(proxySelector11);
        java.net.ResponseCache responseCache13 = null;
        okHttpClient12.responseCache = responseCache13;
        javax.net.ssl.HostnameVerifier hostnameVerifier15 = okHttpClient12.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient12.setFollowProtocolRedirects(false);
        java.net.ProxySelector proxySelector18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient17.setProxySelector(proxySelector18);
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient19.copyWithDefaults();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory21 = okHttpClient20.sslSocketFactory;
        java.lang.String[] strArray22 = sSLSocketFactory21.getSupportedCipherSuites();
        java.net.Socket socket23 = sSLSocketFactory21.createSocket();
        java.net.Socket socket24 = sSLSocketFactory21.createSocket();
        boolean boolean25 = proxy0.equals((java.lang.Object) sSLSocketFactory21);
        com.squareup.okhttp.OkHttpClient okHttpClient26 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier27 = null;
        okHttpClient26.hostnameVerifier = hostnameVerifier27;
        java.net.ResponseCache responseCache29 = null;
        okHttpClient26.responseCache = responseCache29;
        java.util.List<java.lang.String> strList31 = okHttpClient26.transports;
        com.squareup.okhttp.ConnectionPool connectionPool32 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient26.connectionPool = connectionPool32;
        java.net.CookieHandler cookieHandler34 = okHttpClient26.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache35 = okHttpClient26.okResponseCache();
        java.net.CookieHandler cookieHandler36 = okHttpClient26.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient37 = new com.squareup.okhttp.OkHttpClient(okHttpClient26);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory38 = okHttpClient37.sslSocketFactory;
        java.net.Proxy proxy39 = okHttpClient37.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient41 = okHttpClient37.setFollowProtocolRedirects(true);
        com.squareup.okhttp.OkHttpClient okHttpClient42 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool43 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient42.connectionPool = connectionPool43;
        com.squareup.okhttp.OkHttpClient okHttpClient45 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier46 = null;
        okHttpClient45.hostnameVerifier = hostnameVerifier46;
        java.net.ResponseCache responseCache48 = null;
        okHttpClient45.responseCache = responseCache48;
        java.util.List<java.lang.String> strList50 = okHttpClient45.transports;
        com.squareup.okhttp.ConnectionPool connectionPool51 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient45.connectionPool = connectionPool51;
        com.squareup.okhttp.OkHttpClient okHttpClient53 = okHttpClient42.setConnectionPool(connectionPool51);
        int int54 = connectionPool51.getConnectionCount();
        int int55 = connectionPool51.getSpdyConnectionCount();
        int int56 = connectionPool51.getSpdyConnectionCount();
        com.squareup.okhttp.Address address57 = null;
        com.squareup.okhttp.Connection connection58 = connectionPool51.get(address57);
        int int59 = connectionPool51.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient60 = okHttpClient41.setConnectionPool(connectionPool51);
        com.squareup.okhttp.OkHttpClient okHttpClient61 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier62 = null;
        okHttpClient61.hostnameVerifier = hostnameVerifier62;
        java.net.ResponseCache responseCache64 = null;
        okHttpClient61.responseCache = responseCache64;
        javax.net.ssl.HostnameVerifier hostnameVerifier66 = okHttpClient61.hostnameVerifier;
        java.net.Proxy proxy67 = okHttpClient61.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool70 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient61.connectionPool = connectionPool70;
        com.squareup.okhttp.OkHttpClient okHttpClient72 = okHttpClient61.copyWithDefaults();
        java.net.ResponseCache responseCache73 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient74 = okHttpClient72.setResponseCache(responseCache73);
        java.net.ProxySelector proxySelector75 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient76 = okHttpClient72.setProxySelector(proxySelector75);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory77 = okHttpClient76.getSslSocketFactory();
        com.squareup.okhttp.OkAuthenticator okAuthenticator78 = okHttpClient76.getAuthenticator();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory79 = okHttpClient76.sslSocketFactory;
        okHttpClient60.sslSocketFactory = sSLSocketFactory79;
        boolean boolean81 = proxy0.equals((java.lang.Object) sSLSocketFactory79);
        java.net.InetAddress inetAddress82 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket84 = sSLSocketFactory79.createSocket(inetAddress82, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.net.ConnectException; message: Connection refused (Connection refused)");
        } catch (java.net.ConnectException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(proxy0);
        org.junit.Assert.assertNull(socketAddress1);
        org.junit.Assert.assertNull(socketAddress2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + type5 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type5.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "DIRECT" + "'", str7, "DIRECT");
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertNull(hostnameVerifier15);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNotNull(sSLSocketFactory21);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(socket23);
        org.junit.Assert.assertEquals(socket23.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(socket24);
        org.junit.Assert.assertEquals(socket24.toString(), "Socket[unconnected]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNotNull(connectionPool32);
        org.junit.Assert.assertNull(cookieHandler34);
        org.junit.Assert.assertNull(okResponseCache35);
        org.junit.Assert.assertNull(cookieHandler36);
        org.junit.Assert.assertNull(sSLSocketFactory38);
        org.junit.Assert.assertNull(proxy39);
        org.junit.Assert.assertNotNull(okHttpClient41);
        org.junit.Assert.assertNotNull(connectionPool43);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNotNull(connectionPool51);
        org.junit.Assert.assertNotNull(okHttpClient53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNull(connection58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(okHttpClient60);
        org.junit.Assert.assertNull(hostnameVerifier66);
        org.junit.Assert.assertNull(proxy67);
        org.junit.Assert.assertNotNull(okHttpClient72);
        org.junit.Assert.assertNotNull(okHttpClient74);
        org.junit.Assert.assertNotNull(okHttpClient76);
        org.junit.Assert.assertNotNull(sSLSocketFactory77);
        org.junit.Assert.assertNotNull(okAuthenticator78);
        org.junit.Assert.assertNotNull(sSLSocketFactory79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test12309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12309");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.CookieHandler cookieHandler8 = okHttpClient0.cookieHandler;
        java.net.ResponseCache responseCache9 = okHttpClient0.responseCache;
        javax.net.ssl.HostnameVerifier hostnameVerifier10 = okHttpClient0.hostnameVerifier;
        com.squareup.okhttp.ConnectionPool connectionPool11 = okHttpClient0.connectionPool;
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNull(cookieHandler8);
        org.junit.Assert.assertNull(responseCache9);
        org.junit.Assert.assertNull(hostnameVerifier10);
        org.junit.Assert.assertNotNull(connectionPool11);
    }

    @Test
    public void test12310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12310");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.ConnectionPool connectionPool12 = okHttpClient11.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator13 = okHttpClient11.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool16 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient11.connectionPool = connectionPool16;
        java.net.ResponseCache responseCache18 = okHttpClient11.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory19 = okHttpClient11.sslSocketFactory;
        java.net.Proxy proxy20 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress21 = proxy20.address();
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient11.setProxy(proxy20);
        com.squareup.okhttp.OkHttpClient okHttpClient23 = new com.squareup.okhttp.OkHttpClient(okHttpClient22);
        com.squareup.okhttp.OkHttpClient okHttpClient24 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier25 = null;
        okHttpClient24.hostnameVerifier = hostnameVerifier25;
        java.net.ResponseCache responseCache27 = null;
        okHttpClient24.responseCache = responseCache27;
        java.util.List<java.lang.String> strList29 = okHttpClient24.transports;
        com.squareup.okhttp.ConnectionPool connectionPool30 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient24.connectionPool = connectionPool30;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient24.copyWithDefaults();
        java.net.ProxySelector proxySelector33 = okHttpClient32.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory34 = okHttpClient32.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient22.setSSLSocketFactory(sSLSocketFactory34);
        com.squareup.okhttp.OkHttpClient okHttpClient36 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier37 = null;
        okHttpClient36.hostnameVerifier = hostnameVerifier37;
        java.net.ResponseCache responseCache39 = null;
        okHttpClient36.responseCache = responseCache39;
        javax.net.ssl.HostnameVerifier hostnameVerifier41 = okHttpClient36.hostnameVerifier;
        java.net.Proxy proxy42 = okHttpClient36.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool45 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient36.connectionPool = connectionPool45;
        java.util.List<java.lang.String> strList47 = okHttpClient36.getTransports();
        javax.net.ssl.HostnameVerifier hostnameVerifier48 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient49 = okHttpClient36.setHostnameVerifier(hostnameVerifier48);
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient49.copyWithDefaults();
        okHttpClient50.followProtocolRedirects = false;
        com.squareup.okhttp.OkHttpClient okHttpClient53 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier54 = null;
        okHttpClient53.hostnameVerifier = hostnameVerifier54;
        java.net.ResponseCache responseCache56 = null;
        okHttpClient53.responseCache = responseCache56;
        java.util.List<java.lang.String> strList58 = okHttpClient53.transports;
        com.squareup.okhttp.ConnectionPool connectionPool59 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient53.connectionPool = connectionPool59;
        java.net.Proxy proxy61 = null;
        okHttpClient53.proxy = proxy61;
        boolean boolean63 = okHttpClient53.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient65 = okHttpClient53.setFollowProtocolRedirects(true);
        com.squareup.okhttp.OkHttpClient okHttpClient66 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier67 = null;
        okHttpClient66.hostnameVerifier = hostnameVerifier67;
        java.net.ResponseCache responseCache69 = null;
        okHttpClient66.responseCache = responseCache69;
        java.util.List<java.lang.String> strList71 = okHttpClient66.transports;
        javax.net.ssl.HostnameVerifier hostnameVerifier72 = null;
        okHttpClient66.hostnameVerifier = hostnameVerifier72;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache74 = okHttpClient66.okResponseCache();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory75 = okHttpClient66.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient76 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier77 = null;
        okHttpClient76.hostnameVerifier = hostnameVerifier77;
        java.net.ResponseCache responseCache79 = null;
        okHttpClient76.responseCache = responseCache79;
        javax.net.ssl.HostnameVerifier hostnameVerifier81 = okHttpClient76.hostnameVerifier;
        java.net.Proxy proxy82 = okHttpClient76.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool85 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient76.connectionPool = connectionPool85;
        com.squareup.okhttp.OkHttpClient okHttpClient87 = okHttpClient76.copyWithDefaults();
        java.net.Proxy proxy88 = okHttpClient87.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier89 = okHttpClient87.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient90 = okHttpClient66.setHostnameVerifier(hostnameVerifier89);
        com.squareup.okhttp.OkHttpClient okHttpClient91 = okHttpClient65.setHostnameVerifier(hostnameVerifier89);
        com.squareup.okhttp.OkHttpClient okHttpClient92 = okHttpClient50.setHostnameVerifier(hostnameVerifier89);
        okHttpClient22.hostnameVerifier = hostnameVerifier89;
        com.squareup.okhttp.ConnectionPool connectionPool94 = okHttpClient22.connectionPool;
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNull(okAuthenticator13);
        org.junit.Assert.assertNull(responseCache18);
        org.junit.Assert.assertNull(sSLSocketFactory19);
        org.junit.Assert.assertNotNull(proxy20);
        org.junit.Assert.assertNull(socketAddress21);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(connectionPool30);
        org.junit.Assert.assertNotNull(okHttpClient32);
// flaky:         org.junit.Assert.assertNull(proxySelector33);
        org.junit.Assert.assertNotNull(sSLSocketFactory34);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNull(hostnameVerifier41);
        org.junit.Assert.assertNull(proxy42);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNotNull(okHttpClient49);
        org.junit.Assert.assertNotNull(okHttpClient50);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNotNull(connectionPool59);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(okHttpClient65);
        org.junit.Assert.assertNull(strList71);
        org.junit.Assert.assertNull(okResponseCache74);
        org.junit.Assert.assertNull(sSLSocketFactory75);
        org.junit.Assert.assertNull(hostnameVerifier81);
        org.junit.Assert.assertNull(proxy82);
        org.junit.Assert.assertNotNull(okHttpClient87);
        org.junit.Assert.assertNull(proxy88);
        org.junit.Assert.assertNotNull(hostnameVerifier89);
        org.junit.Assert.assertNotNull(okHttpClient90);
        org.junit.Assert.assertNotNull(okHttpClient91);
        org.junit.Assert.assertNotNull(okHttpClient92);
        org.junit.Assert.assertNotNull(connectionPool94);
    }

    @Test
    public void test12311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12311");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.Proxy proxy8 = null;
        okHttpClient0.proxy = proxy8;
        boolean boolean10 = okHttpClient0.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.copyWithDefaults();
        java.net.Proxy proxy12 = java.net.Proxy.NO_PROXY;
        boolean boolean14 = proxy12.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type15 = proxy12.type();
        java.lang.String str16 = proxy12.toString();
        java.net.Proxy.Type type17 = proxy12.type();
        okHttpClient0.proxy = proxy12;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache20 = okHttpClient19.okResponseCache();
        java.net.ResponseCache responseCache21 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient19.setResponseCache(responseCache21);
        java.net.ProxySelector proxySelector23 = okHttpClient19.getProxySelector();
        com.squareup.okhttp.OkAuthenticator okAuthenticator24 = okHttpClient19.getAuthenticator();
        boolean boolean25 = proxy12.equals((java.lang.Object) okHttpClient19);
        java.net.SocketAddress socketAddress26 = proxy12.address();
        java.net.SocketAddress socketAddress27 = proxy12.address();
        java.net.SocketAddress socketAddress28 = proxy12.address();
        com.squareup.okhttp.OkHttpClient okHttpClient29 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = null;
        okHttpClient29.hostnameVerifier = hostnameVerifier30;
        java.net.ResponseCache responseCache32 = null;
        okHttpClient29.responseCache = responseCache32;
        java.util.List<java.lang.String> strList34 = okHttpClient29.transports;
        java.net.CookieHandler cookieHandler35 = okHttpClient29.getCookieHandler();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory36 = okHttpClient29.getSslSocketFactory();
        com.squareup.okhttp.OkAuthenticator okAuthenticator37 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient29.setAuthenticator(okAuthenticator37);
        java.net.ResponseCache responseCache39 = okHttpClient38.getResponseCache();
        java.net.CookieHandler cookieHandler40 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient41 = okHttpClient38.setCookieHandler(cookieHandler40);
        boolean boolean42 = proxy12.equals((java.lang.Object) okHttpClient38);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(proxy12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + type15 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type15.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "DIRECT" + "'", str16, "DIRECT");
        org.junit.Assert.assertTrue("'" + type17 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type17.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(okResponseCache20);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNull(proxySelector23);
        org.junit.Assert.assertNull(okAuthenticator24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(socketAddress26);
        org.junit.Assert.assertNull(socketAddress27);
        org.junit.Assert.assertNull(socketAddress28);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNull(cookieHandler35);
        org.junit.Assert.assertNull(sSLSocketFactory36);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNull(responseCache39);
        org.junit.Assert.assertNotNull(okHttpClient41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test12312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12312");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.CookieHandler cookieHandler5 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = null;
        okHttpClient6.hostnameVerifier = hostnameVerifier7;
        java.net.ResponseCache responseCache9 = null;
        okHttpClient6.responseCache = responseCache9;
        java.util.List<java.lang.String> strList11 = okHttpClient6.transports;
        com.squareup.okhttp.ConnectionPool connectionPool12 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient6.connectionPool = connectionPool12;
        java.net.Proxy proxy14 = null;
        okHttpClient6.proxy = proxy14;
        java.util.Set<com.squareup.okhttp.Route> routeSet16 = okHttpClient6.failedRoutes;
        okHttpClient0.failedRoutes = routeSet16;
        java.net.ProxySelector proxySelector18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient0.setProxySelector(proxySelector18);
        com.squareup.okhttp.OkHttpClient okHttpClient20 = new com.squareup.okhttp.OkHttpClient(okHttpClient19);
        javax.net.ssl.HostnameVerifier hostnameVerifier21 = okHttpClient19.hostnameVerifier;
        java.net.ProxySelector proxySelector22 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient19.setProxySelector(proxySelector22);
        java.net.CookieHandler cookieHandler24 = okHttpClient23.getCookieHandler();
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNotNull(routeSet16);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNull(hostnameVerifier21);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertNull(cookieHandler24);
    }

    @Test
    public void test12313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12313");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.OkAuthenticator okAuthenticator12 = okHttpClient11.getAuthenticator();
        java.net.ProxySelector proxySelector13 = okHttpClient11.getProxySelector();
        java.net.ResponseCache responseCache14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient11.setResponseCache(responseCache14);
        java.net.CookieHandler cookieHandler16 = null;
        okHttpClient15.cookieHandler = cookieHandler16;
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = okHttpClient15.getHostnameVerifier();
        com.squareup.okhttp.ConnectionPool connectionPool19 = okHttpClient15.connectionPool;
        java.util.List<java.lang.String> strList20 = okHttpClient15.transports;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory21 = okHttpClient15.getSslSocketFactory();
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(okAuthenticator12);
        org.junit.Assert.assertNull(proxySelector13);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNull(hostnameVerifier18);
        org.junit.Assert.assertNotNull(connectionPool19);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(sSLSocketFactory21);
    }

    @Test
    public void test12314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12314");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.ConnectionPool connectionPool12 = okHttpClient11.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator13 = okHttpClient11.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool16 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient11.connectionPool = connectionPool16;
        java.net.ResponseCache responseCache18 = okHttpClient11.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory19 = okHttpClient11.sslSocketFactory;
        java.net.Proxy proxy20 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress21 = proxy20.address();
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient11.setProxy(proxy20);
        com.squareup.okhttp.OkHttpClient okHttpClient23 = new com.squareup.okhttp.OkHttpClient(okHttpClient22);
        com.squareup.okhttp.OkHttpClient okHttpClient24 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier25 = null;
        okHttpClient24.hostnameVerifier = hostnameVerifier25;
        boolean boolean27 = okHttpClient24.getFollowProtocolRedirects();
        java.net.CookieHandler cookieHandler28 = okHttpClient24.cookieHandler;
        com.squareup.okhttp.OkHttpClient okHttpClient29 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = null;
        okHttpClient29.hostnameVerifier = hostnameVerifier30;
        java.net.ResponseCache responseCache32 = null;
        okHttpClient29.responseCache = responseCache32;
        javax.net.ssl.HostnameVerifier hostnameVerifier34 = okHttpClient29.hostnameVerifier;
        java.net.Proxy proxy35 = okHttpClient29.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool38 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient29.connectionPool = connectionPool38;
        com.squareup.okhttp.OkHttpClient okHttpClient40 = okHttpClient29.copyWithDefaults();
        java.net.ResponseCache responseCache41 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient40.setResponseCache(responseCache41);
        com.squareup.okhttp.OkAuthenticator okAuthenticator43 = okHttpClient40.authenticator;
        okHttpClient24.authenticator = okAuthenticator43;
        okHttpClient23.authenticator = okAuthenticator43;
        com.squareup.okhttp.ConnectionPool connectionPool46 = okHttpClient23.getConnectionPool();
        java.net.Proxy proxy47 = okHttpClient23.getProxy();
        java.net.ProxySelector proxySelector48 = okHttpClient23.getProxySelector();
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNull(okAuthenticator13);
        org.junit.Assert.assertNull(responseCache18);
        org.junit.Assert.assertNull(sSLSocketFactory19);
        org.junit.Assert.assertNotNull(proxy20);
        org.junit.Assert.assertNull(socketAddress21);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(cookieHandler28);
        org.junit.Assert.assertNull(hostnameVerifier34);
        org.junit.Assert.assertNull(proxy35);
        org.junit.Assert.assertNotNull(okHttpClient40);
        org.junit.Assert.assertNotNull(okHttpClient42);
        org.junit.Assert.assertNotNull(okAuthenticator43);
        org.junit.Assert.assertNull(connectionPool46);
        org.junit.Assert.assertNull(proxy47);
        org.junit.Assert.assertNull(proxySelector48);
    }

    @Test
    public void test12315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12315");
        java.net.Proxy proxy0 = java.net.Proxy.NO_PROXY;
        boolean boolean2 = proxy0.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type3 = proxy0.type();
        java.lang.String str4 = proxy0.toString();
        com.squareup.okhttp.OkHttpClient okHttpClient5 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier6 = null;
        okHttpClient5.hostnameVerifier = hostnameVerifier6;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory8 = okHttpClient5.getSslSocketFactory();
        boolean boolean9 = proxy0.equals((java.lang.Object) okHttpClient5);
        java.lang.String str10 = proxy0.toString();
        java.lang.String str11 = proxy0.toString();
        java.lang.String str12 = proxy0.toString();
        org.junit.Assert.assertNotNull(proxy0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + type3 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type3.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "DIRECT" + "'", str4, "DIRECT");
        org.junit.Assert.assertNull(sSLSocketFactory8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "DIRECT" + "'", str10, "DIRECT");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "DIRECT" + "'", str11, "DIRECT");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "DIRECT" + "'", str12, "DIRECT");
    }

    @Test
    public void test12316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12316");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.ResponseCache responseCache5 = null;
        okHttpClient4.responseCache = responseCache5;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient4.setSSLSocketFactory(sSLSocketFactory7);
        com.squareup.okhttp.OkAuthenticator okAuthenticator9 = null;
        okHttpClient4.authenticator = okAuthenticator9;
        java.net.ProxySelector proxySelector11 = okHttpClient4.proxySelector;
        java.util.List<java.lang.String> strList12 = okHttpClient4.getTransports();
        java.util.List<java.lang.String> strList13 = okHttpClient4.getTransports();
        com.squareup.okhttp.OkHttpClient okHttpClient14 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier15 = null;
        okHttpClient14.hostnameVerifier = hostnameVerifier15;
        java.net.ResponseCache responseCache17 = null;
        okHttpClient14.responseCache = responseCache17;
        java.util.List<java.lang.String> strList19 = okHttpClient14.transports;
        com.squareup.okhttp.ConnectionPool connectionPool20 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient14.connectionPool = connectionPool20;
        java.net.Proxy proxy22 = null;
        okHttpClient14.proxy = proxy22;
        boolean boolean24 = okHttpClient14.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient25 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache26 = okHttpClient25.okResponseCache();
        java.net.ResponseCache responseCache27 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient25.setResponseCache(responseCache27);
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        okHttpClient25.transports = strList31;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory34 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient25.setSSLSocketFactory(sSLSocketFactory34);
        com.squareup.okhttp.OkHttpClient okHttpClient36 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier37 = null;
        okHttpClient36.hostnameVerifier = hostnameVerifier37;
        java.net.ResponseCache responseCache39 = null;
        okHttpClient36.responseCache = responseCache39;
        javax.net.ssl.HostnameVerifier hostnameVerifier41 = okHttpClient36.hostnameVerifier;
        java.net.Proxy proxy42 = okHttpClient36.getProxy();
        java.net.CookieHandler cookieHandler43 = null;
        okHttpClient36.cookieHandler = cookieHandler43;
        okHttpClient36.followProtocolRedirects = true;
        com.squareup.okhttp.OkHttpClient okHttpClient47 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier48 = null;
        okHttpClient47.hostnameVerifier = hostnameVerifier48;
        java.net.ResponseCache responseCache50 = null;
        okHttpClient47.responseCache = responseCache50;
        javax.net.ssl.HostnameVerifier hostnameVerifier52 = okHttpClient47.hostnameVerifier;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory53 = okHttpClient47.sslSocketFactory;
        java.net.CookieHandler cookieHandler54 = okHttpClient47.cookieHandler;
        javax.net.ssl.HostnameVerifier hostnameVerifier55 = okHttpClient47.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient56 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool57 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient56.connectionPool = connectionPool57;
        com.squareup.okhttp.OkAuthenticator okAuthenticator59 = null;
        okHttpClient56.authenticator = okAuthenticator59;
        java.util.List<java.lang.String> strList61 = okHttpClient56.transports;
        java.net.ResponseCache responseCache62 = null;
        okHttpClient56.responseCache = responseCache62;
        com.squareup.okhttp.OkHttpClient okHttpClient64 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier65 = null;
        okHttpClient64.hostnameVerifier = hostnameVerifier65;
        java.net.ResponseCache responseCache67 = null;
        okHttpClient64.responseCache = responseCache67;
        javax.net.ssl.HostnameVerifier hostnameVerifier69 = okHttpClient64.hostnameVerifier;
        java.net.Proxy proxy70 = okHttpClient64.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool73 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient64.connectionPool = connectionPool73;
        com.squareup.okhttp.OkHttpClient okHttpClient75 = okHttpClient64.copyWithDefaults();
        java.net.Proxy proxy76 = okHttpClient75.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier77 = okHttpClient75.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient78 = okHttpClient56.setHostnameVerifier(hostnameVerifier77);
        com.squareup.okhttp.OkHttpClient okHttpClient79 = okHttpClient47.setHostnameVerifier(hostnameVerifier77);
        okHttpClient36.hostnameVerifier = hostnameVerifier77;
        com.squareup.okhttp.OkHttpClient okHttpClient81 = okHttpClient25.setHostnameVerifier(hostnameVerifier77);
        com.squareup.okhttp.OkHttpClient okHttpClient82 = okHttpClient14.setHostnameVerifier(hostnameVerifier77);
        com.squareup.okhttp.OkHttpClient okHttpClient83 = okHttpClient4.setHostnameVerifier(hostnameVerifier77);
        javax.net.ssl.HostnameVerifier hostnameVerifier84 = okHttpClient83.getHostnameVerifier();
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertNull(proxySelector11);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNotNull(connectionPool20);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(okResponseCache26);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNull(hostnameVerifier41);
        org.junit.Assert.assertNull(proxy42);
        org.junit.Assert.assertNull(hostnameVerifier52);
        org.junit.Assert.assertNull(sSLSocketFactory53);
        org.junit.Assert.assertNull(cookieHandler54);
        org.junit.Assert.assertNull(hostnameVerifier55);
        org.junit.Assert.assertNotNull(connectionPool57);
        org.junit.Assert.assertNull(strList61);
        org.junit.Assert.assertNull(hostnameVerifier69);
        org.junit.Assert.assertNull(proxy70);
        org.junit.Assert.assertNotNull(okHttpClient75);
        org.junit.Assert.assertNull(proxy76);
        org.junit.Assert.assertNotNull(hostnameVerifier77);
        org.junit.Assert.assertNotNull(okHttpClient78);
        org.junit.Assert.assertNotNull(okHttpClient79);
        org.junit.Assert.assertNotNull(okHttpClient81);
        org.junit.Assert.assertNotNull(okHttpClient82);
        org.junit.Assert.assertNotNull(okHttpClient83);
        org.junit.Assert.assertNotNull(hostnameVerifier84);
    }

    @Test
    public void test12317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12317");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient4.copyWithDefaults();
        java.net.ResponseCache responseCache6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient4.setResponseCache(responseCache6);
        com.squareup.okhttp.ConnectionPool connectionPool8 = okHttpClient7.connectionPool;
        java.net.CookieHandler cookieHandler9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient7.setCookieHandler(cookieHandler9);
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache12 = okHttpClient11.okResponseCache();
        java.net.ResponseCache responseCache13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient11.setResponseCache(responseCache13);
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        okHttpClient11.transports = strList17;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory20 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient11.setSSLSocketFactory(sSLSocketFactory20);
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier23 = null;
        okHttpClient22.hostnameVerifier = hostnameVerifier23;
        java.net.ResponseCache responseCache25 = null;
        okHttpClient22.responseCache = responseCache25;
        javax.net.ssl.HostnameVerifier hostnameVerifier27 = okHttpClient22.hostnameVerifier;
        java.net.Proxy proxy28 = okHttpClient22.getProxy();
        java.net.CookieHandler cookieHandler29 = null;
        okHttpClient22.cookieHandler = cookieHandler29;
        okHttpClient22.followProtocolRedirects = true;
        com.squareup.okhttp.OkHttpClient okHttpClient33 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier34 = null;
        okHttpClient33.hostnameVerifier = hostnameVerifier34;
        java.net.ResponseCache responseCache36 = null;
        okHttpClient33.responseCache = responseCache36;
        javax.net.ssl.HostnameVerifier hostnameVerifier38 = okHttpClient33.hostnameVerifier;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory39 = okHttpClient33.sslSocketFactory;
        java.net.CookieHandler cookieHandler40 = okHttpClient33.cookieHandler;
        javax.net.ssl.HostnameVerifier hostnameVerifier41 = okHttpClient33.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient42 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool43 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient42.connectionPool = connectionPool43;
        com.squareup.okhttp.OkAuthenticator okAuthenticator45 = null;
        okHttpClient42.authenticator = okAuthenticator45;
        java.util.List<java.lang.String> strList47 = okHttpClient42.transports;
        java.net.ResponseCache responseCache48 = null;
        okHttpClient42.responseCache = responseCache48;
        com.squareup.okhttp.OkHttpClient okHttpClient50 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier51 = null;
        okHttpClient50.hostnameVerifier = hostnameVerifier51;
        java.net.ResponseCache responseCache53 = null;
        okHttpClient50.responseCache = responseCache53;
        javax.net.ssl.HostnameVerifier hostnameVerifier55 = okHttpClient50.hostnameVerifier;
        java.net.Proxy proxy56 = okHttpClient50.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool59 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient50.connectionPool = connectionPool59;
        com.squareup.okhttp.OkHttpClient okHttpClient61 = okHttpClient50.copyWithDefaults();
        java.net.Proxy proxy62 = okHttpClient61.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier63 = okHttpClient61.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient64 = okHttpClient42.setHostnameVerifier(hostnameVerifier63);
        com.squareup.okhttp.OkHttpClient okHttpClient65 = okHttpClient33.setHostnameVerifier(hostnameVerifier63);
        okHttpClient22.hostnameVerifier = hostnameVerifier63;
        com.squareup.okhttp.OkHttpClient okHttpClient67 = okHttpClient11.setHostnameVerifier(hostnameVerifier63);
        javax.net.ssl.HostnameVerifier hostnameVerifier68 = okHttpClient11.getHostnameVerifier();
        java.util.List<java.lang.String> strList69 = okHttpClient11.getTransports();
        // The following exception was thrown during execution in test generation
        try {
            com.squareup.okhttp.OkHttpClient okHttpClient70 = okHttpClient10.setTransports(strList69);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: transports doesn't contain http/1.1: [hi!]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNotNull(okHttpClient7);
        org.junit.Assert.assertNull(connectionPool8);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertNull(okResponseCache12);
        org.junit.Assert.assertNotNull(okHttpClient14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNull(hostnameVerifier27);
        org.junit.Assert.assertNull(proxy28);
        org.junit.Assert.assertNull(hostnameVerifier38);
        org.junit.Assert.assertNull(sSLSocketFactory39);
        org.junit.Assert.assertNull(cookieHandler40);
        org.junit.Assert.assertNull(hostnameVerifier41);
        org.junit.Assert.assertNotNull(connectionPool43);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNull(hostnameVerifier55);
        org.junit.Assert.assertNull(proxy56);
        org.junit.Assert.assertNotNull(okHttpClient61);
        org.junit.Assert.assertNull(proxy62);
        org.junit.Assert.assertNotNull(hostnameVerifier63);
        org.junit.Assert.assertNotNull(okHttpClient64);
        org.junit.Assert.assertNotNull(okHttpClient65);
        org.junit.Assert.assertNotNull(okHttpClient67);
        org.junit.Assert.assertNotNull(hostnameVerifier68);
        org.junit.Assert.assertNotNull(strList69);
    }

    @Test
    public void test12318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12318");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient9 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier10 = null;
        okHttpClient9.hostnameVerifier = hostnameVerifier10;
        java.net.ResponseCache responseCache12 = null;
        okHttpClient9.responseCache = responseCache12;
        java.util.List<java.lang.String> strList14 = okHttpClient9.transports;
        com.squareup.okhttp.ConnectionPool connectionPool15 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient9.connectionPool = connectionPool15;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient9.copyWithDefaults();
        java.net.ProxySelector proxySelector18 = okHttpClient17.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory19 = okHttpClient17.getSslSocketFactory();
        okHttpClient0.sslSocketFactory = sSLSocketFactory19;
        java.lang.String[] strArray21 = sSLSocketFactory19.getSupportedCipherSuites();
        java.net.InetAddress inetAddress24 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket26 = sSLSocketFactory19.createSocket("hi!", (int) (short) 10, inetAddress24, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: port out of range:-1");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNotNull(connectionPool15);
        org.junit.Assert.assertNotNull(okHttpClient17);
// flaky:         org.junit.Assert.assertNull(proxySelector18);
        org.junit.Assert.assertNotNull(sSLSocketFactory19);
        org.junit.Assert.assertNotNull(strArray21);
    }

    @Test
    public void test12319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12319");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.ConnectionPool connectionPool12 = okHttpClient11.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator13 = okHttpClient11.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool16 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient11.connectionPool = connectionPool16;
        java.net.ResponseCache responseCache18 = okHttpClient11.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory19 = okHttpClient11.sslSocketFactory;
        java.net.Proxy proxy20 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress21 = proxy20.address();
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient11.setProxy(proxy20);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory23 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient11.setSSLSocketFactory(sSLSocketFactory23);
        com.squareup.okhttp.OkHttpClient okHttpClient25 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier26 = null;
        okHttpClient25.hostnameVerifier = hostnameVerifier26;
        java.net.ResponseCache responseCache28 = null;
        okHttpClient25.responseCache = responseCache28;
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = okHttpClient25.hostnameVerifier;
        java.net.Proxy proxy31 = okHttpClient25.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool34 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient25.connectionPool = connectionPool34;
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient25.copyWithDefaults();
        java.net.ResponseCache responseCache37 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient36.setResponseCache(responseCache37);
        com.squareup.okhttp.OkAuthenticator okAuthenticator39 = okHttpClient36.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient40 = okHttpClient11.setAuthenticator(okAuthenticator39);
        java.net.ProxySelector proxySelector41 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient40.setProxySelector(proxySelector41);
        com.squareup.okhttp.ConnectionPool connectionPool45 = new com.squareup.okhttp.ConnectionPool((int) (short) 1, (long) (byte) -1);
        int int46 = connectionPool45.getHttpConnectionCount();
        okHttpClient40.connectionPool = connectionPool45;
        int int48 = connectionPool45.getHttpConnectionCount();
        com.squareup.okhttp.Address address49 = null;
        com.squareup.okhttp.Connection connection50 = connectionPool45.get(address49);
        int int51 = connectionPool45.getSpdyConnectionCount();
        int int52 = connectionPool45.getHttpConnectionCount();
        com.squareup.okhttp.Connection connection53 = null;
        // The following exception was thrown during execution in test generation
        try {
            connectionPool45.maybeShare(connection53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNull(okAuthenticator13);
        org.junit.Assert.assertNull(responseCache18);
        org.junit.Assert.assertNull(sSLSocketFactory19);
        org.junit.Assert.assertNotNull(proxy20);
        org.junit.Assert.assertNull(socketAddress21);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNull(hostnameVerifier30);
        org.junit.Assert.assertNull(proxy31);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNotNull(okAuthenticator39);
        org.junit.Assert.assertNotNull(okHttpClient40);
        org.junit.Assert.assertNotNull(okHttpClient42);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNull(connection50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
    }

    @Test
    public void test12320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12320");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.ConnectionPool connectionPool12 = okHttpClient11.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator13 = okHttpClient11.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool16 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient11.connectionPool = connectionPool16;
        java.net.ResponseCache responseCache18 = okHttpClient11.responseCache;
        com.squareup.okhttp.ConnectionPool connectionPool21 = new com.squareup.okhttp.ConnectionPool((int) (byte) 0, 10L);
        okHttpClient11.connectionPool = connectionPool21;
        java.util.List<java.lang.String> strList23 = okHttpClient11.transports;
        java.util.List<java.lang.String> strList24 = okHttpClient11.transports;
        okHttpClient11.followProtocolRedirects = false;
        java.net.CookieHandler cookieHandler27 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient11.setCookieHandler(cookieHandler27);
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNull(okAuthenticator13);
        org.junit.Assert.assertNull(responseCache18);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNotNull(okHttpClient28);
    }

    @Test
    public void test12321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12321");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.CookieHandler cookieHandler5 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = null;
        okHttpClient6.hostnameVerifier = hostnameVerifier7;
        java.net.ResponseCache responseCache9 = null;
        okHttpClient6.responseCache = responseCache9;
        java.util.List<java.lang.String> strList11 = okHttpClient6.transports;
        com.squareup.okhttp.ConnectionPool connectionPool12 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient6.connectionPool = connectionPool12;
        java.net.Proxy proxy14 = null;
        okHttpClient6.proxy = proxy14;
        java.util.Set<com.squareup.okhttp.Route> routeSet16 = okHttpClient6.failedRoutes;
        okHttpClient0.failedRoutes = routeSet16;
        java.net.ProxySelector proxySelector18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient0.setProxySelector(proxySelector18);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory20 = null;
        okHttpClient19.sslSocketFactory = sSLSocketFactory20;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient19.copyWithDefaults();
        java.net.CookieHandler cookieHandler23 = okHttpClient22.getCookieHandler();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache24 = okHttpClient22.okResponseCache();
        boolean boolean25 = okHttpClient22.getFollowProtocolRedirects();
        java.util.Set<com.squareup.okhttp.Route> routeSet26 = okHttpClient22.failedRoutes;
        javax.net.ssl.HostnameVerifier hostnameVerifier27 = okHttpClient22.getHostnameVerifier();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache28 = okHttpClient22.okResponseCache();
        boolean boolean29 = okHttpClient22.getFollowProtocolRedirects();
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNotNull(routeSet16);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNull(cookieHandler23);
        org.junit.Assert.assertNull(okResponseCache24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(routeSet26);
        org.junit.Assert.assertNotNull(hostnameVerifier27);
        org.junit.Assert.assertNull(okResponseCache28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    }

    @Test
    public void test12322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12322");
        com.squareup.okhttp.ConnectionPool connectionPool2 = new com.squareup.okhttp.ConnectionPool((int) (short) 1, (long) (byte) 10);
        connectionPool2.evictAll();
        connectionPool2.evictAll();
        int int5 = connectionPool2.getConnectionCount();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test12323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12323");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache8 = okHttpClient7.okResponseCache();
        java.net.ResponseCache responseCache9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient7.setResponseCache(responseCache9);
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        okHttpClient7.transports = strList13;
        okHttpClient0.transports = strList13;
        java.util.Set<com.squareup.okhttp.Route> routeSet17 = okHttpClient0.failedRoutes;
        java.net.CookieHandler cookieHandler18 = null;
        okHttpClient0.cookieHandler = cookieHandler18;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        com.squareup.okhttp.OkHttpClient okHttpClient21 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool22 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient21.connectionPool = connectionPool22;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier25 = null;
        okHttpClient24.hostnameVerifier = hostnameVerifier25;
        java.net.ResponseCache responseCache27 = null;
        okHttpClient24.responseCache = responseCache27;
        java.util.List<java.lang.String> strList29 = okHttpClient24.transports;
        com.squareup.okhttp.ConnectionPool connectionPool30 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient24.connectionPool = connectionPool30;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient21.setConnectionPool(connectionPool30);
        com.squareup.okhttp.ConnectionPool connectionPool33 = okHttpClient32.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator34 = okHttpClient32.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool37 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient32.connectionPool = connectionPool37;
        java.net.ResponseCache responseCache39 = okHttpClient32.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory40 = okHttpClient32.sslSocketFactory;
        java.net.Proxy proxy41 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress42 = proxy41.address();
        com.squareup.okhttp.OkHttpClient okHttpClient43 = okHttpClient32.setProxy(proxy41);
        com.squareup.okhttp.OkHttpClient okHttpClient44 = new com.squareup.okhttp.OkHttpClient(okHttpClient43);
        com.squareup.okhttp.OkHttpClient okHttpClient45 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier46 = null;
        okHttpClient45.hostnameVerifier = hostnameVerifier46;
        java.net.ResponseCache responseCache48 = null;
        okHttpClient45.responseCache = responseCache48;
        java.util.List<java.lang.String> strList50 = okHttpClient45.transports;
        com.squareup.okhttp.ConnectionPool connectionPool51 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient45.connectionPool = connectionPool51;
        com.squareup.okhttp.OkHttpClient okHttpClient53 = okHttpClient45.copyWithDefaults();
        java.net.ProxySelector proxySelector54 = okHttpClient53.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory55 = okHttpClient53.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient56 = okHttpClient43.setSSLSocketFactory(sSLSocketFactory55);
        java.lang.String[] strArray57 = sSLSocketFactory55.getSupportedCipherSuites();
        java.lang.String[] strArray58 = sSLSocketFactory55.getSupportedCipherSuites();
        java.lang.String[] strArray59 = sSLSocketFactory55.getSupportedCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient60 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory55);
        com.squareup.okhttp.OkHttpClient okHttpClient61 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNull(okResponseCache8);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(routeSet17);
        org.junit.Assert.assertNotNull(connectionPool22);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(connectionPool30);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertNotNull(connectionPool33);
        org.junit.Assert.assertNull(okAuthenticator34);
        org.junit.Assert.assertNull(responseCache39);
        org.junit.Assert.assertNull(sSLSocketFactory40);
        org.junit.Assert.assertNotNull(proxy41);
        org.junit.Assert.assertNull(socketAddress42);
        org.junit.Assert.assertNotNull(okHttpClient43);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNotNull(connectionPool51);
        org.junit.Assert.assertNotNull(okHttpClient53);
// flaky:         org.junit.Assert.assertNull(proxySelector54);
        org.junit.Assert.assertNotNull(sSLSocketFactory55);
        org.junit.Assert.assertNotNull(okHttpClient56);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(okHttpClient60);
    }

    @Test
    public void test12324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12324");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        java.net.ProxySelector proxySelector12 = null;
        okHttpClient0.proxySelector = proxySelector12;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool15 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient14.connectionPool = connectionPool15;
        com.squareup.okhttp.OkAuthenticator okAuthenticator17 = null;
        okHttpClient14.authenticator = okAuthenticator17;
        java.net.CookieHandler cookieHandler19 = null;
        okHttpClient14.cookieHandler = cookieHandler19;
        java.net.Proxy proxy21 = java.net.Proxy.NO_PROXY;
        boolean boolean23 = proxy21.equals((java.lang.Object) 1L);
        com.squareup.okhttp.OkHttpClient okHttpClient24 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache25 = okHttpClient24.okResponseCache();
        java.net.ResponseCache responseCache26 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient24.setResponseCache(responseCache26);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        okHttpClient24.transports = strList30;
        boolean boolean33 = proxy21.equals((java.lang.Object) strList30);
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient14.setProxy(proxy21);
        com.squareup.okhttp.OkHttpClient okHttpClient35 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier36 = null;
        okHttpClient35.hostnameVerifier = hostnameVerifier36;
        java.net.ProxySelector proxySelector38 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient35.setProxySelector(proxySelector38);
        java.net.CookieHandler cookieHandler40 = okHttpClient35.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient41 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier42 = null;
        okHttpClient41.hostnameVerifier = hostnameVerifier42;
        java.net.ResponseCache responseCache44 = null;
        okHttpClient41.responseCache = responseCache44;
        java.util.List<java.lang.String> strList46 = okHttpClient41.transports;
        com.squareup.okhttp.ConnectionPool connectionPool47 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient41.connectionPool = connectionPool47;
        java.net.Proxy proxy49 = null;
        okHttpClient41.proxy = proxy49;
        java.util.Set<com.squareup.okhttp.Route> routeSet51 = okHttpClient41.failedRoutes;
        okHttpClient35.failedRoutes = routeSet51;
        javax.net.ssl.HostnameVerifier hostnameVerifier53 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient54 = okHttpClient35.setHostnameVerifier(hostnameVerifier53);
        boolean boolean55 = proxy21.equals((java.lang.Object) okHttpClient54);
        okHttpClient0.proxy = proxy21;
        java.net.Proxy proxy57 = java.net.Proxy.NO_PROXY;
        boolean boolean59 = proxy57.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type60 = proxy57.type();
        java.lang.String str61 = proxy57.toString();
        com.squareup.okhttp.OkHttpClient okHttpClient62 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier63 = null;
        okHttpClient62.hostnameVerifier = hostnameVerifier63;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory65 = okHttpClient62.getSslSocketFactory();
        boolean boolean66 = proxy57.equals((java.lang.Object) okHttpClient62);
        java.lang.String str67 = proxy57.toString();
        java.net.Proxy.Type type68 = proxy57.type();
        okHttpClient0.proxy = proxy57;
        com.squareup.okhttp.OkHttpClient okHttpClient70 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier71 = null;
        okHttpClient70.hostnameVerifier = hostnameVerifier71;
        java.net.ResponseCache responseCache73 = null;
        okHttpClient70.responseCache = responseCache73;
        java.util.List<java.lang.String> strList75 = okHttpClient70.transports;
        java.net.Proxy proxy76 = java.net.Proxy.NO_PROXY;
        boolean boolean78 = proxy76.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type79 = proxy76.type();
        java.net.SocketAddress socketAddress80 = proxy76.address();
        com.squareup.okhttp.OkHttpClient okHttpClient81 = okHttpClient70.setProxy(proxy76);
        com.squareup.okhttp.OkHttpClient okHttpClient82 = okHttpClient0.setProxy(proxy76);
        java.net.Proxy.Type type83 = proxy76.type();
        java.net.SocketAddress socketAddress84 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Proxy proxy85 = new java.net.Proxy(type83, socketAddress84);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: type DIRECT is not compatible with address null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(connectionPool15);
        org.junit.Assert.assertNotNull(proxy21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(okResponseCache25);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertNotNull(okHttpClient39);
        org.junit.Assert.assertNull(cookieHandler40);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNotNull(connectionPool47);
        org.junit.Assert.assertNotNull(routeSet51);
        org.junit.Assert.assertNotNull(okHttpClient54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(proxy57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + type60 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type60.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "DIRECT" + "'", str61, "DIRECT");
        org.junit.Assert.assertNull(sSLSocketFactory65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "DIRECT" + "'", str67, "DIRECT");
        org.junit.Assert.assertTrue("'" + type68 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type68.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNotNull(proxy76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + type79 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type79.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress80);
        org.junit.Assert.assertNotNull(okHttpClient81);
        org.junit.Assert.assertNotNull(okHttpClient82);
        org.junit.Assert.assertTrue("'" + type83 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type83.equals(java.net.Proxy.Type.DIRECT));
    }

    @Test
    public void test12325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12325");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory6);
        com.squareup.okhttp.ConnectionPool connectionPool8 = okHttpClient7.getConnectionPool();
        java.net.ResponseCache responseCache9 = null;
        okHttpClient7.responseCache = responseCache9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient(okHttpClient7);
        java.net.Proxy proxy12 = okHttpClient7.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient(okHttpClient7);
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNotNull(okHttpClient7);
        org.junit.Assert.assertNull(connectionPool8);
        org.junit.Assert.assertNull(proxy12);
    }

    @Test
    public void test12326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12326");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.CookieHandler cookieHandler8 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache9 = okHttpClient0.okResponseCache();
        java.net.CookieHandler cookieHandler10 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = okHttpClient11.hostnameVerifier;
        java.util.List<java.lang.String> strList13 = okHttpClient11.transports;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient11.setSSLSocketFactory(sSLSocketFactory14);
        com.squareup.okhttp.OkHttpClient okHttpClient16 = new com.squareup.okhttp.OkHttpClient(okHttpClient11);
        com.squareup.okhttp.ConnectionPool connectionPool19 = new com.squareup.okhttp.ConnectionPool((int) '#', (long) 10);
        okHttpClient11.connectionPool = connectionPool19;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient11.copyWithDefaults();
        java.net.Proxy proxy22 = okHttpClient11.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient11.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet24 = okHttpClient23.failedRoutes;
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNull(cookieHandler8);
        org.junit.Assert.assertNull(okResponseCache9);
        org.junit.Assert.assertNull(cookieHandler10);
        org.junit.Assert.assertNull(hostnameVerifier12);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNull(proxy22);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertNotNull(routeSet24);
    }

    @Test
    public void test12327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12327");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.CookieHandler cookieHandler8 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache9 = okHttpClient0.okResponseCache();
        java.net.CookieHandler cookieHandler10 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        com.squareup.okhttp.OkHttpClient okHttpClient12 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier13 = null;
        okHttpClient12.hostnameVerifier = hostnameVerifier13;
        java.net.ProxySelector proxySelector15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient12.setProxySelector(proxySelector15);
        java.net.CookieHandler cookieHandler17 = okHttpClient12.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier19 = null;
        okHttpClient18.hostnameVerifier = hostnameVerifier19;
        java.net.ResponseCache responseCache21 = null;
        okHttpClient18.responseCache = responseCache21;
        java.util.List<java.lang.String> strList23 = okHttpClient18.transports;
        com.squareup.okhttp.ConnectionPool connectionPool24 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient18.connectionPool = connectionPool24;
        java.net.Proxy proxy26 = null;
        okHttpClient18.proxy = proxy26;
        java.util.Set<com.squareup.okhttp.Route> routeSet28 = okHttpClient18.failedRoutes;
        okHttpClient12.failedRoutes = routeSet28;
        okHttpClient11.failedRoutes = routeSet28;
        java.util.List<java.lang.String> strList31 = okHttpClient11.getTransports();
        com.squareup.okhttp.OkHttpClient okHttpClient32 = new com.squareup.okhttp.OkHttpClient(okHttpClient11);
        com.squareup.okhttp.OkHttpClient okHttpClient33 = new com.squareup.okhttp.OkHttpClient(okHttpClient11);
        com.squareup.okhttp.OkHttpClient okHttpClient34 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier35 = null;
        okHttpClient34.hostnameVerifier = hostnameVerifier35;
        java.net.ResponseCache responseCache37 = null;
        okHttpClient34.responseCache = responseCache37;
        javax.net.ssl.HostnameVerifier hostnameVerifier39 = okHttpClient34.hostnameVerifier;
        java.net.Proxy proxy40 = okHttpClient34.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool43 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient34.connectionPool = connectionPool43;
        com.squareup.okhttp.OkHttpClient okHttpClient45 = okHttpClient34.copyWithDefaults();
        java.net.Proxy proxy46 = okHttpClient45.getProxy();
        java.net.CookieHandler cookieHandler47 = null;
        okHttpClient45.cookieHandler = cookieHandler47;
        java.util.List<java.lang.String> strList49 = okHttpClient45.transports;
        com.squareup.okhttp.OkHttpClient okHttpClient50 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool51 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient50.connectionPool = connectionPool51;
        com.squareup.okhttp.OkAuthenticator okAuthenticator53 = null;
        okHttpClient50.authenticator = okAuthenticator53;
        java.net.CookieHandler cookieHandler55 = null;
        okHttpClient50.cookieHandler = cookieHandler55;
        java.net.Proxy proxy57 = java.net.Proxy.NO_PROXY;
        boolean boolean59 = proxy57.equals((java.lang.Object) 1L);
        com.squareup.okhttp.OkHttpClient okHttpClient60 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache61 = okHttpClient60.okResponseCache();
        java.net.ResponseCache responseCache62 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient63 = okHttpClient60.setResponseCache(responseCache62);
        java.lang.String[] strArray65 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList66 = new java.util.ArrayList<java.lang.String>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList66, strArray65);
        okHttpClient60.transports = strList66;
        boolean boolean69 = proxy57.equals((java.lang.Object) strList66);
        com.squareup.okhttp.OkHttpClient okHttpClient70 = okHttpClient50.setProxy(proxy57);
        com.squareup.okhttp.OkHttpClient okHttpClient71 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier72 = null;
        okHttpClient71.hostnameVerifier = hostnameVerifier72;
        java.net.ProxySelector proxySelector74 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient75 = okHttpClient71.setProxySelector(proxySelector74);
        java.net.CookieHandler cookieHandler76 = okHttpClient71.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient77 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier78 = null;
        okHttpClient77.hostnameVerifier = hostnameVerifier78;
        java.net.ResponseCache responseCache80 = null;
        okHttpClient77.responseCache = responseCache80;
        java.util.List<java.lang.String> strList82 = okHttpClient77.transports;
        com.squareup.okhttp.ConnectionPool connectionPool83 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient77.connectionPool = connectionPool83;
        java.net.Proxy proxy85 = null;
        okHttpClient77.proxy = proxy85;
        java.util.Set<com.squareup.okhttp.Route> routeSet87 = okHttpClient77.failedRoutes;
        okHttpClient71.failedRoutes = routeSet87;
        javax.net.ssl.HostnameVerifier hostnameVerifier89 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient90 = okHttpClient71.setHostnameVerifier(hostnameVerifier89);
        boolean boolean91 = proxy57.equals((java.lang.Object) okHttpClient90);
        java.net.SocketAddress socketAddress92 = proxy57.address();
        com.squareup.okhttp.OkHttpClient okHttpClient93 = okHttpClient45.setProxy(proxy57);
        java.net.Proxy.Type type94 = proxy57.type();
        com.squareup.okhttp.OkHttpClient okHttpClient95 = okHttpClient11.setProxy(proxy57);
        com.squareup.okhttp.OkHttpClient okHttpClient96 = new com.squareup.okhttp.OkHttpClient(okHttpClient95);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNull(cookieHandler8);
        org.junit.Assert.assertNull(okResponseCache9);
        org.junit.Assert.assertNull(cookieHandler10);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNull(cookieHandler17);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNotNull(connectionPool24);
        org.junit.Assert.assertNotNull(routeSet28);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(hostnameVerifier39);
        org.junit.Assert.assertNull(proxy40);
        org.junit.Assert.assertNotNull(okHttpClient45);
        org.junit.Assert.assertNull(proxy46);
        org.junit.Assert.assertNotNull(strList49);
        org.junit.Assert.assertNotNull(connectionPool51);
        org.junit.Assert.assertNotNull(proxy57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(okResponseCache61);
        org.junit.Assert.assertNotNull(okHttpClient63);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(okHttpClient70);
        org.junit.Assert.assertNotNull(okHttpClient75);
        org.junit.Assert.assertNull(cookieHandler76);
        org.junit.Assert.assertNull(strList82);
        org.junit.Assert.assertNotNull(connectionPool83);
        org.junit.Assert.assertNotNull(routeSet87);
        org.junit.Assert.assertNotNull(okHttpClient90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNull(socketAddress92);
        org.junit.Assert.assertNotNull(okHttpClient93);
        org.junit.Assert.assertTrue("'" + type94 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type94.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNotNull(okHttpClient95);
    }

    @Test
    public void test12328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12328");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient0.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.copyWithDefaults();
        java.net.Proxy proxy12 = okHttpClient11.getProxy();
        java.util.Set<com.squareup.okhttp.Route> routeSet13 = okHttpClient11.failedRoutes;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache14 = okHttpClient11.okResponseCache();
        java.net.ProxySelector proxySelector15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient11.setProxySelector(proxySelector15);
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient11.setFollowProtocolRedirects(false);
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(proxy12);
        org.junit.Assert.assertNotNull(routeSet13);
        org.junit.Assert.assertNull(okResponseCache14);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNotNull(okHttpClient18);
    }

    @Test
    public void test12329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12329");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient0.setFollowProtocolRedirects(false);
        java.net.Proxy proxy8 = okHttpClient0.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier9 = okHttpClient0.getHostnameVerifier();
        java.util.Set<com.squareup.okhttp.Route> routeSet10 = okHttpClient0.failedRoutes;
        com.squareup.okhttp.ConnectionPool connectionPool13 = new com.squareup.okhttp.ConnectionPool((int) '4', (long) (short) 10);
        int int14 = connectionPool13.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient0.setConnectionPool(connectionPool13);
        java.net.ResponseCache responseCache16 = null;
        okHttpClient15.responseCache = responseCache16;
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNotNull(okHttpClient7);
        org.junit.Assert.assertNull(proxy8);
        org.junit.Assert.assertNull(hostnameVerifier9);
        org.junit.Assert.assertNotNull(routeSet10);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(okHttpClient15);
    }

    @Test
    public void test12330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12330");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        java.net.ResponseCache responseCache12 = okHttpClient0.responseCache;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient14 = new com.squareup.okhttp.OkHttpClient(okHttpClient13);
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache15 = okHttpClient14.okResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient16 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier17 = null;
        okHttpClient16.hostnameVerifier = hostnameVerifier17;
        java.net.ResponseCache responseCache19 = null;
        okHttpClient16.responseCache = responseCache19;
        java.util.List<java.lang.String> strList21 = okHttpClient16.transports;
        java.util.List<java.lang.String> strList22 = okHttpClient16.getTransports();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache23 = okHttpClient16.okResponseCache();
        java.net.ResponseCache responseCache24 = okHttpClient16.responseCache;
        java.net.ProxySelector proxySelector25 = null;
        okHttpClient16.proxySelector = proxySelector25;
        java.net.ResponseCache responseCache27 = okHttpClient16.responseCache;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool29 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient28.connectionPool = connectionPool29;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier32 = null;
        okHttpClient31.hostnameVerifier = hostnameVerifier32;
        java.net.ResponseCache responseCache34 = null;
        okHttpClient31.responseCache = responseCache34;
        java.util.List<java.lang.String> strList36 = okHttpClient31.transports;
        com.squareup.okhttp.ConnectionPool connectionPool37 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient31.connectionPool = connectionPool37;
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient28.setConnectionPool(connectionPool37);
        java.net.Proxy proxy40 = okHttpClient39.proxy;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory41 = null;
        okHttpClient39.sslSocketFactory = sSLSocketFactory41;
        com.squareup.okhttp.OkHttpClient okHttpClient43 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier44 = null;
        okHttpClient43.hostnameVerifier = hostnameVerifier44;
        java.net.ResponseCache responseCache46 = null;
        okHttpClient43.responseCache = responseCache46;
        java.util.List<java.lang.String> strList48 = okHttpClient43.transports;
        com.squareup.okhttp.ConnectionPool connectionPool49 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient43.connectionPool = connectionPool49;
        com.squareup.okhttp.ConnectionPool connectionPool51 = okHttpClient43.connectionPool;
        int int52 = connectionPool51.getHttpConnectionCount();
        com.squareup.okhttp.Address address53 = null;
        com.squareup.okhttp.Connection connection54 = connectionPool51.get(address53);
        okHttpClient39.connectionPool = connectionPool51;
        java.net.ProxySelector proxySelector56 = okHttpClient39.proxySelector;
        java.net.Proxy proxy57 = java.net.Proxy.NO_PROXY;
        boolean boolean59 = proxy57.equals((java.lang.Object) 1L);
        com.squareup.okhttp.OkHttpClient okHttpClient60 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache61 = okHttpClient60.okResponseCache();
        java.net.ResponseCache responseCache62 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient63 = okHttpClient60.setResponseCache(responseCache62);
        java.lang.String[] strArray65 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList66 = new java.util.ArrayList<java.lang.String>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList66, strArray65);
        okHttpClient60.transports = strList66;
        boolean boolean69 = proxy57.equals((java.lang.Object) strList66);
        okHttpClient39.proxy = proxy57;
        java.lang.String str71 = proxy57.toString();
        java.lang.String str72 = proxy57.toString();
        com.squareup.okhttp.OkHttpClient okHttpClient73 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier74 = null;
        okHttpClient73.hostnameVerifier = hostnameVerifier74;
        java.net.ResponseCache responseCache76 = null;
        okHttpClient73.responseCache = responseCache76;
        javax.net.ssl.HostnameVerifier hostnameVerifier78 = okHttpClient73.hostnameVerifier;
        java.net.Proxy proxy79 = okHttpClient73.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool82 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient73.connectionPool = connectionPool82;
        com.squareup.okhttp.OkHttpClient okHttpClient84 = okHttpClient73.copyWithDefaults();
        java.net.ResponseCache responseCache85 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient86 = okHttpClient84.setResponseCache(responseCache85);
        java.net.ProxySelector proxySelector87 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient88 = okHttpClient84.setProxySelector(proxySelector87);
        com.squareup.okhttp.OkAuthenticator okAuthenticator89 = okHttpClient88.getAuthenticator();
        com.squareup.okhttp.OkAuthenticator okAuthenticator90 = okHttpClient88.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient91 = okHttpClient88.copyWithDefaults();
        boolean boolean92 = proxy57.equals((java.lang.Object) okHttpClient91);
        com.squareup.okhttp.OkHttpClient okHttpClient93 = okHttpClient16.setProxy(proxy57);
        com.squareup.okhttp.OkHttpClient okHttpClient94 = okHttpClient14.setProxy(proxy57);
        com.squareup.okhttp.OkHttpClient okHttpClient95 = okHttpClient14.copyWithDefaults();
        java.net.ResponseCache responseCache96 = null;
        okHttpClient14.responseCache = responseCache96;
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(responseCache12);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNull(okResponseCache15);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNull(okResponseCache23);
        org.junit.Assert.assertNull(responseCache24);
        org.junit.Assert.assertNull(responseCache27);
        org.junit.Assert.assertNotNull(connectionPool29);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNotNull(connectionPool37);
        org.junit.Assert.assertNotNull(okHttpClient39);
        org.junit.Assert.assertNull(proxy40);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNotNull(connectionPool49);
        org.junit.Assert.assertNotNull(connectionPool51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNull(connection54);
        org.junit.Assert.assertNull(proxySelector56);
        org.junit.Assert.assertNotNull(proxy57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(okResponseCache61);
        org.junit.Assert.assertNotNull(okHttpClient63);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "DIRECT" + "'", str71, "DIRECT");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "DIRECT" + "'", str72, "DIRECT");
        org.junit.Assert.assertNull(hostnameVerifier78);
        org.junit.Assert.assertNull(proxy79);
        org.junit.Assert.assertNotNull(okHttpClient84);
        org.junit.Assert.assertNotNull(okHttpClient86);
        org.junit.Assert.assertNotNull(okHttpClient88);
        org.junit.Assert.assertNotNull(okAuthenticator89);
        org.junit.Assert.assertNotNull(okAuthenticator90);
        org.junit.Assert.assertNotNull(okHttpClient91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(okHttpClient93);
        org.junit.Assert.assertNotNull(okHttpClient94);
        org.junit.Assert.assertNotNull(okHttpClient95);
    }

    @Test
    public void test12331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12331");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.CookieHandler cookieHandler5 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = null;
        okHttpClient6.hostnameVerifier = hostnameVerifier7;
        java.net.ResponseCache responseCache9 = null;
        okHttpClient6.responseCache = responseCache9;
        java.util.List<java.lang.String> strList11 = okHttpClient6.transports;
        com.squareup.okhttp.ConnectionPool connectionPool12 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient6.connectionPool = connectionPool12;
        java.net.Proxy proxy14 = null;
        okHttpClient6.proxy = proxy14;
        java.util.Set<com.squareup.okhttp.Route> routeSet16 = okHttpClient6.failedRoutes;
        okHttpClient0.failedRoutes = routeSet16;
        java.net.ProxySelector proxySelector18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient0.setProxySelector(proxySelector18);
        com.squareup.okhttp.OkHttpClient okHttpClient20 = new com.squareup.okhttp.OkHttpClient(okHttpClient19);
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient20.setFollowProtocolRedirects(false);
        java.net.ResponseCache responseCache23 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient22.setResponseCache(responseCache23);
        boolean boolean25 = okHttpClient22.getFollowProtocolRedirects();
        java.net.ProxySelector proxySelector26 = okHttpClient22.getProxySelector();
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient22.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient28 = new com.squareup.okhttp.OkHttpClient(okHttpClient22);
        javax.net.ssl.HostnameVerifier hostnameVerifier29 = okHttpClient28.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient30 = new com.squareup.okhttp.OkHttpClient(okHttpClient28);
        com.squareup.okhttp.OkHttpClient okHttpClient31 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier32 = null;
        okHttpClient31.hostnameVerifier = hostnameVerifier32;
        java.net.ResponseCache responseCache34 = null;
        okHttpClient31.responseCache = responseCache34;
        java.util.List<java.lang.String> strList36 = okHttpClient31.transports;
        com.squareup.okhttp.ConnectionPool connectionPool37 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient31.connectionPool = connectionPool37;
        java.net.CookieHandler cookieHandler39 = okHttpClient31.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache40 = okHttpClient31.okResponseCache();
        java.net.CookieHandler cookieHandler41 = okHttpClient31.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient42 = new com.squareup.okhttp.OkHttpClient(okHttpClient31);
        java.net.Proxy proxy43 = java.net.Proxy.NO_PROXY;
        boolean boolean45 = proxy43.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type46 = proxy43.type();
        java.net.SocketAddress socketAddress47 = proxy43.address();
        com.squareup.okhttp.OkHttpClient okHttpClient48 = okHttpClient31.setProxy(proxy43);
        boolean boolean49 = okHttpClient48.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient51 = okHttpClient48.setFollowProtocolRedirects(false);
        com.squareup.okhttp.OkHttpClient okHttpClient52 = okHttpClient51.copyWithDefaults();
        java.net.Proxy proxy53 = okHttpClient51.getProxy();
        java.net.Proxy.Type type54 = proxy53.type();
        com.squareup.okhttp.OkHttpClient okHttpClient55 = okHttpClient30.setProxy(proxy53);
        com.squareup.okhttp.OkHttpClient okHttpClient56 = new com.squareup.okhttp.OkHttpClient(okHttpClient55);
        com.squareup.okhttp.OkAuthenticator okAuthenticator57 = okHttpClient56.authenticator;
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNotNull(routeSet16);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(proxySelector26);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNull(hostnameVerifier29);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNotNull(connectionPool37);
        org.junit.Assert.assertNull(cookieHandler39);
        org.junit.Assert.assertNull(okResponseCache40);
        org.junit.Assert.assertNull(cookieHandler41);
        org.junit.Assert.assertNotNull(proxy43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + type46 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type46.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress47);
        org.junit.Assert.assertNotNull(okHttpClient48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(okHttpClient51);
        org.junit.Assert.assertNotNull(okHttpClient52);
        org.junit.Assert.assertNotNull(proxy53);
        org.junit.Assert.assertTrue("'" + type54 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type54.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNotNull(okHttpClient55);
        org.junit.Assert.assertNull(okAuthenticator57);
    }

    @Test
    public void test12332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12332");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.CookieHandler cookieHandler5 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = null;
        okHttpClient6.hostnameVerifier = hostnameVerifier7;
        java.net.ResponseCache responseCache9 = null;
        okHttpClient6.responseCache = responseCache9;
        java.util.List<java.lang.String> strList11 = okHttpClient6.transports;
        com.squareup.okhttp.ConnectionPool connectionPool12 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient6.connectionPool = connectionPool12;
        java.net.Proxy proxy14 = null;
        okHttpClient6.proxy = proxy14;
        java.util.Set<com.squareup.okhttp.Route> routeSet16 = okHttpClient6.failedRoutes;
        okHttpClient0.failedRoutes = routeSet16;
        java.net.ProxySelector proxySelector18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient0.setProxySelector(proxySelector18);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory20 = null;
        okHttpClient19.sslSocketFactory = sSLSocketFactory20;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient19.copyWithDefaults();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache23 = okHttpClient22.okResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient22.setFollowProtocolRedirects(true);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNotNull(routeSet16);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNull(okResponseCache23);
        org.junit.Assert.assertNotNull(okHttpClient25);
    }

    @Test
    public void test12333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12333");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.ConnectionPool connectionPool12 = okHttpClient0.connectionPool;
        java.util.List<java.lang.String> strList13 = okHttpClient0.getTransports();
        java.net.CookieHandler cookieHandler14 = null;
        okHttpClient0.cookieHandler = cookieHandler14;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        java.net.ResponseCache responseCache17 = null;
        okHttpClient0.responseCache = responseCache17;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory19 = okHttpClient0.getSslSocketFactory();
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNull(sSLSocketFactory19);
    }

    @Test
    public void test12334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12334");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient0.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.copyWithDefaults();
        java.net.Proxy proxy12 = okHttpClient11.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier13 = okHttpClient11.getHostnameVerifier();
        com.squareup.okhttp.ConnectionPool connectionPool14 = null;
        okHttpClient11.connectionPool = connectionPool14;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier17 = null;
        okHttpClient16.hostnameVerifier = hostnameVerifier17;
        java.net.ResponseCache responseCache19 = null;
        okHttpClient16.responseCache = responseCache19;
        java.util.List<java.lang.String> strList21 = okHttpClient16.transports;
        com.squareup.okhttp.ConnectionPool connectionPool22 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient16.connectionPool = connectionPool22;
        java.net.CookieHandler cookieHandler24 = okHttpClient16.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache25 = okHttpClient16.okResponseCache();
        java.net.CookieHandler cookieHandler26 = okHttpClient16.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient27 = new com.squareup.okhttp.OkHttpClient(okHttpClient16);
        com.squareup.okhttp.OkHttpClient okHttpClient28 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier29 = null;
        okHttpClient28.hostnameVerifier = hostnameVerifier29;
        java.net.ProxySelector proxySelector31 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient28.setProxySelector(proxySelector31);
        java.net.CookieHandler cookieHandler33 = okHttpClient28.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient34 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier35 = null;
        okHttpClient34.hostnameVerifier = hostnameVerifier35;
        java.net.ResponseCache responseCache37 = null;
        okHttpClient34.responseCache = responseCache37;
        java.util.List<java.lang.String> strList39 = okHttpClient34.transports;
        com.squareup.okhttp.ConnectionPool connectionPool40 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient34.connectionPool = connectionPool40;
        java.net.Proxy proxy42 = null;
        okHttpClient34.proxy = proxy42;
        java.util.Set<com.squareup.okhttp.Route> routeSet44 = okHttpClient34.failedRoutes;
        okHttpClient28.failedRoutes = routeSet44;
        okHttpClient27.failedRoutes = routeSet44;
        java.util.List<java.lang.String> strList47 = okHttpClient27.getTransports();
        java.net.ResponseCache responseCache48 = null;
        okHttpClient27.responseCache = responseCache48;
        java.net.Proxy proxy50 = java.net.Proxy.NO_PROXY;
        boolean boolean52 = proxy50.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type53 = proxy50.type();
        java.net.Proxy.Type type54 = proxy50.type();
        okHttpClient27.proxy = proxy50;
        okHttpClient11.proxy = proxy50;
        java.net.CookieHandler cookieHandler57 = null;
        okHttpClient11.cookieHandler = cookieHandler57;
        com.squareup.okhttp.OkHttpClient okHttpClient59 = new com.squareup.okhttp.OkHttpClient(okHttpClient11);
        com.squareup.okhttp.OkHttpClient okHttpClient60 = new com.squareup.okhttp.OkHttpClient(okHttpClient11);
        java.net.ResponseCache responseCache61 = okHttpClient11.getResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient63 = okHttpClient11.setFollowProtocolRedirects(false);
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(proxy12);
        org.junit.Assert.assertNotNull(hostnameVerifier13);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(connectionPool22);
        org.junit.Assert.assertNull(cookieHandler24);
        org.junit.Assert.assertNull(okResponseCache25);
        org.junit.Assert.assertNull(cookieHandler26);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertNull(cookieHandler33);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNotNull(connectionPool40);
        org.junit.Assert.assertNotNull(routeSet44);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNotNull(proxy50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + type53 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type53.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertTrue("'" + type54 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type54.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(responseCache61);
        org.junit.Assert.assertNotNull(okHttpClient63);
    }

    @Test
    public void test12335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12335");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.ResponseCache responseCache5 = null;
        okHttpClient4.responseCache = responseCache5;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient4.setSSLSocketFactory(sSLSocketFactory7);
        java.net.ProxySelector proxySelector9 = null;
        okHttpClient4.proxySelector = proxySelector9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient(okHttpClient4);
        java.net.Proxy proxy12 = java.net.Proxy.NO_PROXY;
        boolean boolean14 = proxy12.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type15 = proxy12.type();
        java.lang.String str16 = proxy12.toString();
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = null;
        okHttpClient17.hostnameVerifier = hostnameVerifier18;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory20 = okHttpClient17.getSslSocketFactory();
        boolean boolean21 = proxy12.equals((java.lang.Object) okHttpClient17);
        java.lang.String str22 = proxy12.toString();
        java.lang.String str23 = proxy12.toString();
        okHttpClient4.proxy = proxy12;
        java.net.Proxy proxy25 = okHttpClient4.proxy;
        java.net.SocketAddress socketAddress26 = proxy25.address();
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertNotNull(proxy12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + type15 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type15.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "DIRECT" + "'", str16, "DIRECT");
        org.junit.Assert.assertNull(sSLSocketFactory20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "DIRECT" + "'", str22, "DIRECT");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "DIRECT" + "'", str23, "DIRECT");
        org.junit.Assert.assertNotNull(proxy25);
        org.junit.Assert.assertNull(socketAddress26);
    }

    @Test
    public void test12336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12336");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        com.squareup.okhttp.ConnectionPool connectionPool8 = okHttpClient0.connectionPool;
        boolean boolean9 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient10 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier11 = null;
        okHttpClient10.hostnameVerifier = hostnameVerifier11;
        java.net.ResponseCache responseCache13 = null;
        okHttpClient10.responseCache = responseCache13;
        javax.net.ssl.HostnameVerifier hostnameVerifier15 = okHttpClient10.hostnameVerifier;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory16 = okHttpClient10.sslSocketFactory;
        java.net.CookieHandler cookieHandler17 = okHttpClient10.cookieHandler;
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = okHttpClient10.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool20 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient19.connectionPool = connectionPool20;
        com.squareup.okhttp.OkAuthenticator okAuthenticator22 = null;
        okHttpClient19.authenticator = okAuthenticator22;
        java.util.List<java.lang.String> strList24 = okHttpClient19.transports;
        java.net.ResponseCache responseCache25 = null;
        okHttpClient19.responseCache = responseCache25;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier28 = null;
        okHttpClient27.hostnameVerifier = hostnameVerifier28;
        java.net.ResponseCache responseCache30 = null;
        okHttpClient27.responseCache = responseCache30;
        javax.net.ssl.HostnameVerifier hostnameVerifier32 = okHttpClient27.hostnameVerifier;
        java.net.Proxy proxy33 = okHttpClient27.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool36 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient27.connectionPool = connectionPool36;
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient27.copyWithDefaults();
        java.net.Proxy proxy39 = okHttpClient38.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier40 = okHttpClient38.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient41 = okHttpClient19.setHostnameVerifier(hostnameVerifier40);
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient10.setHostnameVerifier(hostnameVerifier40);
        com.squareup.okhttp.OkHttpClient okHttpClient43 = okHttpClient0.setHostnameVerifier(hostnameVerifier40);
        com.squareup.okhttp.OkHttpClient okHttpClient44 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier45 = null;
        okHttpClient44.hostnameVerifier = hostnameVerifier45;
        java.net.ProxySelector proxySelector47 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient48 = okHttpClient44.setProxySelector(proxySelector47);
        com.squareup.okhttp.OkHttpClient okHttpClient49 = okHttpClient48.copyWithDefaults();
        com.squareup.okhttp.Route[] routeArray50 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet51 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet51, routeArray50);
        okHttpClient49.failedRoutes = routeSet51;
        okHttpClient0.failedRoutes = routeSet51;
        java.util.List<java.lang.String> strList55 = okHttpClient0.transports;
        com.squareup.okhttp.OkHttpClient okHttpClient56 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        com.squareup.okhttp.OkHttpClient okHttpClient57 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier58 = null;
        okHttpClient57.hostnameVerifier = hostnameVerifier58;
        java.net.ResponseCache responseCache60 = null;
        okHttpClient57.responseCache = responseCache60;
        javax.net.ssl.HostnameVerifier hostnameVerifier62 = okHttpClient57.hostnameVerifier;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory63 = okHttpClient57.sslSocketFactory;
        java.net.CookieHandler cookieHandler64 = okHttpClient57.cookieHandler;
        javax.net.ssl.HostnameVerifier hostnameVerifier65 = okHttpClient57.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient66 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool67 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient66.connectionPool = connectionPool67;
        com.squareup.okhttp.OkAuthenticator okAuthenticator69 = null;
        okHttpClient66.authenticator = okAuthenticator69;
        java.util.List<java.lang.String> strList71 = okHttpClient66.transports;
        java.net.ResponseCache responseCache72 = null;
        okHttpClient66.responseCache = responseCache72;
        com.squareup.okhttp.OkHttpClient okHttpClient74 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier75 = null;
        okHttpClient74.hostnameVerifier = hostnameVerifier75;
        java.net.ResponseCache responseCache77 = null;
        okHttpClient74.responseCache = responseCache77;
        javax.net.ssl.HostnameVerifier hostnameVerifier79 = okHttpClient74.hostnameVerifier;
        java.net.Proxy proxy80 = okHttpClient74.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool83 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient74.connectionPool = connectionPool83;
        com.squareup.okhttp.OkHttpClient okHttpClient85 = okHttpClient74.copyWithDefaults();
        java.net.Proxy proxy86 = okHttpClient85.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier87 = okHttpClient85.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient88 = okHttpClient66.setHostnameVerifier(hostnameVerifier87);
        com.squareup.okhttp.OkHttpClient okHttpClient89 = okHttpClient57.setHostnameVerifier(hostnameVerifier87);
        java.net.Proxy proxy90 = okHttpClient89.proxy;
        java.util.Set<com.squareup.okhttp.Route> routeSet91 = okHttpClient89.failedRoutes;
        okHttpClient56.failedRoutes = routeSet91;
        java.net.Proxy proxy93 = okHttpClient56.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient94 = okHttpClient56.copyWithDefaults();
        java.net.CookieHandler cookieHandler95 = null;
        okHttpClient56.cookieHandler = cookieHandler95;
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNotNull(connectionPool8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(hostnameVerifier15);
        org.junit.Assert.assertNull(sSLSocketFactory16);
        org.junit.Assert.assertNull(cookieHandler17);
        org.junit.Assert.assertNull(hostnameVerifier18);
        org.junit.Assert.assertNotNull(connectionPool20);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNull(hostnameVerifier32);
        org.junit.Assert.assertNull(proxy33);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNull(proxy39);
        org.junit.Assert.assertNotNull(hostnameVerifier40);
        org.junit.Assert.assertNotNull(okHttpClient41);
        org.junit.Assert.assertNotNull(okHttpClient42);
        org.junit.Assert.assertNotNull(okHttpClient43);
        org.junit.Assert.assertNotNull(okHttpClient48);
        org.junit.Assert.assertNotNull(okHttpClient49);
        org.junit.Assert.assertNotNull(routeArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertNull(hostnameVerifier62);
        org.junit.Assert.assertNull(sSLSocketFactory63);
        org.junit.Assert.assertNull(cookieHandler64);
        org.junit.Assert.assertNull(hostnameVerifier65);
        org.junit.Assert.assertNotNull(connectionPool67);
        org.junit.Assert.assertNull(strList71);
        org.junit.Assert.assertNull(hostnameVerifier79);
        org.junit.Assert.assertNull(proxy80);
        org.junit.Assert.assertNotNull(okHttpClient85);
        org.junit.Assert.assertNull(proxy86);
        org.junit.Assert.assertNotNull(hostnameVerifier87);
        org.junit.Assert.assertNotNull(okHttpClient88);
        org.junit.Assert.assertNotNull(okHttpClient89);
        org.junit.Assert.assertNull(proxy90);
        org.junit.Assert.assertNotNull(routeSet91);
        org.junit.Assert.assertNull(proxy93);
        org.junit.Assert.assertNotNull(okHttpClient94);
    }

    @Test
    public void test12337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12337");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient0.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.copyWithDefaults();
        java.net.ResponseCache responseCache12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setResponseCache(responseCache12);
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = okHttpClient13.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient13.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient16 = new com.squareup.okhttp.OkHttpClient(okHttpClient15);
        com.squareup.okhttp.ConnectionPool connectionPool19 = new com.squareup.okhttp.ConnectionPool((int) (byte) 0, (long) (short) 0);
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient15.setConnectionPool(connectionPool19);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory21 = okHttpClient15.getSslSocketFactory();
        java.net.InetAddress inetAddress22 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket24 = sSLSocketFactory21.createSocket(inetAddress22, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.net.ConnectException; message: Connection refused (Connection refused)");
        } catch (java.net.ConnectException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNotNull(hostnameVerifier14);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNotNull(sSLSocketFactory21);
    }

    @Test
    public void test12338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12338");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        int int12 = connectionPool9.getSpdyConnectionCount();
        int int13 = connectionPool9.getSpdyConnectionCount();
        int int14 = connectionPool9.getSpdyConnectionCount();
        com.squareup.okhttp.Address address15 = null;
        com.squareup.okhttp.Connection connection16 = connectionPool9.get(address15);
        int int17 = connectionPool9.getHttpConnectionCount();
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(connection16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
    }

    @Test
    public void test12339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12339");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient0.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.copyWithDefaults();
        java.util.List<java.lang.String> strList12 = okHttpClient0.getTransports();
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient14 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool15 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient14.connectionPool = connectionPool15;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = null;
        okHttpClient17.hostnameVerifier = hostnameVerifier18;
        java.net.ResponseCache responseCache20 = null;
        okHttpClient17.responseCache = responseCache20;
        java.util.List<java.lang.String> strList22 = okHttpClient17.transports;
        com.squareup.okhttp.ConnectionPool connectionPool23 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient17.connectionPool = connectionPool23;
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient14.setConnectionPool(connectionPool23);
        com.squareup.okhttp.ConnectionPool connectionPool26 = okHttpClient25.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator27 = okHttpClient25.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool30 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient25.connectionPool = connectionPool30;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier33 = null;
        okHttpClient32.hostnameVerifier = hostnameVerifier33;
        java.net.ResponseCache responseCache35 = null;
        okHttpClient32.responseCache = responseCache35;
        java.util.List<java.lang.String> strList37 = okHttpClient32.transports;
        com.squareup.okhttp.ConnectionPool connectionPool38 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient32.connectionPool = connectionPool38;
        java.net.CookieHandler cookieHandler40 = okHttpClient32.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache41 = okHttpClient32.okResponseCache();
        java.net.CookieHandler cookieHandler42 = okHttpClient32.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient43 = new com.squareup.okhttp.OkHttpClient(okHttpClient32);
        java.net.Proxy proxy44 = java.net.Proxy.NO_PROXY;
        boolean boolean46 = proxy44.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type47 = proxy44.type();
        java.net.SocketAddress socketAddress48 = proxy44.address();
        com.squareup.okhttp.OkHttpClient okHttpClient49 = okHttpClient32.setProxy(proxy44);
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient25.setProxy(proxy44);
        com.squareup.okhttp.OkHttpClient okHttpClient51 = okHttpClient0.setProxy(proxy44);
        java.net.Proxy proxy52 = okHttpClient51.proxy;
        java.net.CookieHandler cookieHandler53 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient54 = okHttpClient51.setCookieHandler(cookieHandler53);
        java.net.ResponseCache responseCache55 = okHttpClient51.responseCache;
        java.net.ProxySelector proxySelector56 = null;
        okHttpClient51.proxySelector = proxySelector56;
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNotNull(connectionPool15);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNotNull(connectionPool23);
        org.junit.Assert.assertNotNull(okHttpClient25);
        org.junit.Assert.assertNotNull(connectionPool26);
        org.junit.Assert.assertNull(okAuthenticator27);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(connectionPool38);
        org.junit.Assert.assertNull(cookieHandler40);
        org.junit.Assert.assertNull(okResponseCache41);
        org.junit.Assert.assertNull(cookieHandler42);
        org.junit.Assert.assertNotNull(proxy44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + type47 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type47.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress48);
        org.junit.Assert.assertNotNull(okHttpClient49);
        org.junit.Assert.assertNotNull(okHttpClient50);
        org.junit.Assert.assertNotNull(okHttpClient51);
        org.junit.Assert.assertNotNull(proxy52);
        org.junit.Assert.assertNotNull(okHttpClient54);
        org.junit.Assert.assertNull(responseCache55);
    }

    @Test
    public void test12340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12340");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.Proxy proxy8 = null;
        okHttpClient0.proxy = proxy8;
        boolean boolean10 = okHttpClient0.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient0.setFollowProtocolRedirects(true);
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = null;
        okHttpClient13.hostnameVerifier = hostnameVerifier14;
        java.net.ResponseCache responseCache16 = null;
        okHttpClient13.responseCache = responseCache16;
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = okHttpClient13.hostnameVerifier;
        java.net.Proxy proxy19 = okHttpClient13.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient20 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache21 = okHttpClient20.okResponseCache();
        java.net.ResponseCache responseCache22 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient20.setResponseCache(responseCache22);
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList26 = new java.util.ArrayList<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        okHttpClient20.transports = strList26;
        okHttpClient13.transports = strList26;
        java.net.Proxy proxy30 = okHttpClient13.getProxy();
        boolean boolean31 = okHttpClient13.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool33 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient32.connectionPool = connectionPool33;
        com.squareup.okhttp.OkHttpClient okHttpClient35 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier36 = null;
        okHttpClient35.hostnameVerifier = hostnameVerifier36;
        java.net.ResponseCache responseCache38 = null;
        okHttpClient35.responseCache = responseCache38;
        java.util.List<java.lang.String> strList40 = okHttpClient35.transports;
        com.squareup.okhttp.ConnectionPool connectionPool41 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient35.connectionPool = connectionPool41;
        com.squareup.okhttp.OkHttpClient okHttpClient43 = okHttpClient32.setConnectionPool(connectionPool41);
        java.net.Proxy proxy44 = okHttpClient43.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient45 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool46 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient45.connectionPool = connectionPool46;
        int int48 = connectionPool46.getSpdyConnectionCount();
        okHttpClient43.connectionPool = connectionPool46;
        com.squareup.okhttp.OkHttpClient okHttpClient50 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier51 = null;
        okHttpClient50.hostnameVerifier = hostnameVerifier51;
        java.net.ResponseCache responseCache53 = null;
        okHttpClient50.responseCache = responseCache53;
        javax.net.ssl.HostnameVerifier hostnameVerifier55 = okHttpClient50.hostnameVerifier;
        java.net.Proxy proxy56 = okHttpClient50.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool59 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient50.connectionPool = connectionPool59;
        com.squareup.okhttp.OkHttpClient okHttpClient61 = okHttpClient50.copyWithDefaults();
        java.net.ResponseCache responseCache62 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient63 = okHttpClient61.setResponseCache(responseCache62);
        com.squareup.okhttp.OkAuthenticator okAuthenticator64 = okHttpClient61.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient65 = okHttpClient43.setAuthenticator(okAuthenticator64);
        okHttpClient13.authenticator = okAuthenticator64;
        com.squareup.okhttp.OkHttpClient okHttpClient67 = okHttpClient12.setAuthenticator(okAuthenticator64);
        com.squareup.okhttp.OkHttpClient okHttpClient68 = okHttpClient67.copyWithDefaults();
        java.net.CookieHandler cookieHandler69 = okHttpClient67.cookieHandler;
        java.net.Proxy proxy70 = okHttpClient67.getProxy();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory71 = okHttpClient67.getSslSocketFactory();
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertNull(hostnameVerifier18);
        org.junit.Assert.assertNull(proxy19);
        org.junit.Assert.assertNull(okResponseCache21);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(proxy30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(connectionPool33);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNotNull(connectionPool41);
        org.junit.Assert.assertNotNull(okHttpClient43);
        org.junit.Assert.assertNull(proxy44);
        org.junit.Assert.assertNotNull(connectionPool46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNull(hostnameVerifier55);
        org.junit.Assert.assertNull(proxy56);
        org.junit.Assert.assertNotNull(okHttpClient61);
        org.junit.Assert.assertNotNull(okHttpClient63);
        org.junit.Assert.assertNotNull(okAuthenticator64);
        org.junit.Assert.assertNotNull(okHttpClient65);
        org.junit.Assert.assertNotNull(okHttpClient67);
        org.junit.Assert.assertNotNull(okHttpClient68);
        org.junit.Assert.assertNull(cookieHandler69);
        org.junit.Assert.assertNull(proxy70);
        org.junit.Assert.assertNull(sSLSocketFactory71);
    }

    @Test
    public void test12341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12341");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        javax.net.ssl.HostnameVerifier hostnameVerifier6 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier6;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache8 = okHttpClient0.okResponseCache();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory9 = okHttpClient0.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient10 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier11 = null;
        okHttpClient10.hostnameVerifier = hostnameVerifier11;
        java.net.ResponseCache responseCache13 = null;
        okHttpClient10.responseCache = responseCache13;
        javax.net.ssl.HostnameVerifier hostnameVerifier15 = okHttpClient10.hostnameVerifier;
        java.net.Proxy proxy16 = okHttpClient10.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool19 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient10.connectionPool = connectionPool19;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient10.copyWithDefaults();
        java.net.Proxy proxy22 = okHttpClient21.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier23 = okHttpClient21.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient0.setHostnameVerifier(hostnameVerifier23);
        java.util.Set<com.squareup.okhttp.Route> routeSet25 = okHttpClient24.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient24.copyWithDefaults();
        java.net.CookieHandler cookieHandler27 = null;
        okHttpClient24.cookieHandler = cookieHandler27;
        com.squareup.okhttp.OkHttpClient okHttpClient29 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache30 = okHttpClient29.okResponseCache();
        java.net.ResponseCache responseCache31 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient29.setResponseCache(responseCache31);
        com.squareup.okhttp.OkHttpClient okHttpClient33 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache34 = okHttpClient33.okResponseCache();
        java.net.ResponseCache responseCache35 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient33.setResponseCache(responseCache35);
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        okHttpClient33.transports = strList39;
        okHttpClient29.transports = strList39;
        com.squareup.okhttp.OkHttpClient okHttpClient43 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier44 = null;
        okHttpClient43.hostnameVerifier = hostnameVerifier44;
        java.net.ResponseCache responseCache46 = null;
        okHttpClient43.responseCache = responseCache46;
        java.util.List<java.lang.String> strList48 = okHttpClient43.transports;
        com.squareup.okhttp.ConnectionPool connectionPool49 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient43.connectionPool = connectionPool49;
        java.net.CookieHandler cookieHandler51 = okHttpClient43.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache52 = okHttpClient43.okResponseCache();
        java.net.CookieHandler cookieHandler53 = okHttpClient43.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient54 = new com.squareup.okhttp.OkHttpClient(okHttpClient43);
        java.net.ResponseCache responseCache55 = okHttpClient43.responseCache;
        java.net.CookieHandler cookieHandler56 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient57 = okHttpClient43.setCookieHandler(cookieHandler56);
        java.net.Proxy proxy58 = java.net.Proxy.NO_PROXY;
        boolean boolean60 = proxy58.equals((java.lang.Object) 1L);
        com.squareup.okhttp.OkHttpClient okHttpClient61 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache62 = okHttpClient61.okResponseCache();
        java.net.ResponseCache responseCache63 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient64 = okHttpClient61.setResponseCache(responseCache63);
        java.lang.String[] strArray66 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList67 = new java.util.ArrayList<java.lang.String>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList67, strArray66);
        okHttpClient61.transports = strList67;
        boolean boolean70 = proxy58.equals((java.lang.Object) strList67);
        com.squareup.okhttp.OkHttpClient.DEFAULT_TRANSPORTS = strList67;
        okHttpClient57.transports = strList67;
        okHttpClient29.transports = strList67;
        java.util.List<java.lang.String> strList74 = okHttpClient29.transports;
        // The following exception was thrown during execution in test generation
        try {
            com.squareup.okhttp.OkHttpClient okHttpClient75 = okHttpClient24.setTransports(strList74);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: transports doesn't contain http/1.1: [hi!]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNull(okResponseCache8);
        org.junit.Assert.assertNull(sSLSocketFactory9);
        org.junit.Assert.assertNull(hostnameVerifier15);
        org.junit.Assert.assertNull(proxy16);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNull(proxy22);
        org.junit.Assert.assertNotNull(hostnameVerifier23);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNotNull(routeSet25);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNull(okResponseCache30);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertNull(okResponseCache34);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNotNull(connectionPool49);
        org.junit.Assert.assertNull(cookieHandler51);
        org.junit.Assert.assertNull(okResponseCache52);
        org.junit.Assert.assertNull(cookieHandler53);
        org.junit.Assert.assertNull(responseCache55);
        org.junit.Assert.assertNotNull(okHttpClient57);
        org.junit.Assert.assertNotNull(proxy58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(okResponseCache62);
        org.junit.Assert.assertNotNull(okHttpClient64);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(strList74);
    }

    @Test
    public void test12342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12342");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.Proxy proxy8 = null;
        okHttpClient0.proxy = proxy8;
        boolean boolean10 = okHttpClient0.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient0.setFollowProtocolRedirects(true);
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = null;
        okHttpClient13.hostnameVerifier = hostnameVerifier14;
        java.net.ResponseCache responseCache16 = null;
        okHttpClient13.responseCache = responseCache16;
        java.util.List<java.lang.String> strList18 = okHttpClient13.transports;
        com.squareup.okhttp.ConnectionPool connectionPool19 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient13.connectionPool = connectionPool19;
        com.squareup.okhttp.ConnectionPool connectionPool21 = okHttpClient13.connectionPool;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient0.setConnectionPool(connectionPool21);
        com.squareup.okhttp.ConnectionPool connectionPool23 = okHttpClient22.connectionPool;
        com.squareup.okhttp.OkAuthenticator okAuthenticator24 = okHttpClient22.getAuthenticator();
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(connectionPool19);
        org.junit.Assert.assertNotNull(connectionPool21);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNotNull(connectionPool23);
        org.junit.Assert.assertNull(okAuthenticator24);
    }

    @Test
    public void test12343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12343");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.CookieHandler cookieHandler8 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache9 = okHttpClient0.okResponseCache();
        java.net.CookieHandler cookieHandler10 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = okHttpClient11.hostnameVerifier;
        java.util.List<java.lang.String> strList13 = okHttpClient11.transports;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier15 = null;
        okHttpClient14.hostnameVerifier = hostnameVerifier15;
        java.net.ResponseCache responseCache17 = null;
        okHttpClient14.responseCache = responseCache17;
        java.util.List<java.lang.String> strList19 = okHttpClient14.transports;
        com.squareup.okhttp.ConnectionPool connectionPool20 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient14.connectionPool = connectionPool20;
        java.net.CookieHandler cookieHandler22 = okHttpClient14.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache23 = okHttpClient14.okResponseCache();
        java.net.CookieHandler cookieHandler24 = okHttpClient14.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient25 = new com.squareup.okhttp.OkHttpClient(okHttpClient14);
        com.squareup.okhttp.OkHttpClient okHttpClient26 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier27 = null;
        okHttpClient26.hostnameVerifier = hostnameVerifier27;
        java.net.ProxySelector proxySelector29 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient30 = okHttpClient26.setProxySelector(proxySelector29);
        java.net.CookieHandler cookieHandler31 = okHttpClient26.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient32 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier33 = null;
        okHttpClient32.hostnameVerifier = hostnameVerifier33;
        java.net.ResponseCache responseCache35 = null;
        okHttpClient32.responseCache = responseCache35;
        java.util.List<java.lang.String> strList37 = okHttpClient32.transports;
        com.squareup.okhttp.ConnectionPool connectionPool38 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient32.connectionPool = connectionPool38;
        java.net.Proxy proxy40 = null;
        okHttpClient32.proxy = proxy40;
        java.util.Set<com.squareup.okhttp.Route> routeSet42 = okHttpClient32.failedRoutes;
        okHttpClient26.failedRoutes = routeSet42;
        okHttpClient25.failedRoutes = routeSet42;
        com.squareup.okhttp.OkHttpClient okHttpClient45 = new com.squareup.okhttp.OkHttpClient(okHttpClient25);
        com.squareup.okhttp.OkHttpClient okHttpClient46 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier47 = null;
        okHttpClient46.hostnameVerifier = hostnameVerifier47;
        boolean boolean49 = okHttpClient46.getFollowProtocolRedirects();
        java.net.CookieHandler cookieHandler50 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient51 = okHttpClient46.setCookieHandler(cookieHandler50);
        com.squareup.okhttp.OkHttpClient okHttpClient52 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier53 = null;
        okHttpClient52.hostnameVerifier = hostnameVerifier53;
        java.net.ResponseCache responseCache55 = null;
        okHttpClient52.responseCache = responseCache55;
        java.util.List<java.lang.String> strList57 = okHttpClient52.transports;
        com.squareup.okhttp.ConnectionPool connectionPool58 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient52.connectionPool = connectionPool58;
        com.squareup.okhttp.Address address60 = null;
        com.squareup.okhttp.Connection connection61 = connectionPool58.get(address60);
        com.squareup.okhttp.OkHttpClient okHttpClient62 = okHttpClient51.setConnectionPool(connectionPool58);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory63 = okHttpClient51.sslSocketFactory;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory64 = okHttpClient51.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient65 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier66 = null;
        okHttpClient65.hostnameVerifier = hostnameVerifier66;
        java.net.ResponseCache responseCache68 = null;
        okHttpClient65.responseCache = responseCache68;
        javax.net.ssl.HostnameVerifier hostnameVerifier70 = okHttpClient65.hostnameVerifier;
        java.net.Proxy proxy71 = okHttpClient65.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool74 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient65.connectionPool = connectionPool74;
        com.squareup.okhttp.OkHttpClient okHttpClient76 = okHttpClient65.copyWithDefaults();
        java.net.Proxy proxy77 = okHttpClient76.getProxy();
        java.net.CookieHandler cookieHandler78 = null;
        okHttpClient76.cookieHandler = cookieHandler78;
        com.squareup.okhttp.OkAuthenticator okAuthenticator80 = okHttpClient76.getAuthenticator();
        com.squareup.okhttp.OkHttpClient okHttpClient81 = okHttpClient51.setAuthenticator(okAuthenticator80);
        com.squareup.okhttp.OkHttpClient okHttpClient82 = okHttpClient45.setAuthenticator(okAuthenticator80);
        okHttpClient11.authenticator = okAuthenticator80;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory84 = okHttpClient11.getSslSocketFactory();
        java.net.ProxySelector proxySelector85 = okHttpClient11.proxySelector;
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNull(cookieHandler8);
        org.junit.Assert.assertNull(okResponseCache9);
        org.junit.Assert.assertNull(cookieHandler10);
        org.junit.Assert.assertNull(hostnameVerifier12);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNotNull(connectionPool20);
        org.junit.Assert.assertNull(cookieHandler22);
        org.junit.Assert.assertNull(okResponseCache23);
        org.junit.Assert.assertNull(cookieHandler24);
        org.junit.Assert.assertNotNull(okHttpClient30);
        org.junit.Assert.assertNull(cookieHandler31);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(connectionPool38);
        org.junit.Assert.assertNotNull(routeSet42);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(okHttpClient51);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNotNull(connectionPool58);
        org.junit.Assert.assertNull(connection61);
        org.junit.Assert.assertNotNull(okHttpClient62);
        org.junit.Assert.assertNull(sSLSocketFactory63);
        org.junit.Assert.assertNull(sSLSocketFactory64);
        org.junit.Assert.assertNull(hostnameVerifier70);
        org.junit.Assert.assertNull(proxy71);
        org.junit.Assert.assertNotNull(okHttpClient76);
        org.junit.Assert.assertNull(proxy77);
        org.junit.Assert.assertNotNull(okAuthenticator80);
        org.junit.Assert.assertNotNull(okHttpClient81);
        org.junit.Assert.assertNotNull(okHttpClient82);
        org.junit.Assert.assertNull(sSLSocketFactory84);
        org.junit.Assert.assertNull(proxySelector85);
    }

    @Test
    public void test12344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12344");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        java.net.Proxy proxy6 = java.net.Proxy.NO_PROXY;
        boolean boolean8 = proxy6.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type9 = proxy6.type();
        java.net.SocketAddress socketAddress10 = proxy6.address();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setProxy(proxy6);
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = okHttpClient11.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient(okHttpClient11);
        java.net.CookieHandler cookieHandler14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient13.setCookieHandler(cookieHandler14);
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient13.copyWithDefaults();
        java.net.ProxySelector proxySelector17 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient16.setProxySelector(proxySelector17);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory19 = okHttpClient18.sslSocketFactory;
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(proxy6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + type9 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type9.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress10);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(hostnameVerifier12);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNotNull(sSLSocketFactory19);
    }

    @Test
    public void test12345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12345");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.OkAuthenticator okAuthenticator12 = okHttpClient11.getAuthenticator();
        java.net.ProxySelector proxySelector13 = okHttpClient11.getProxySelector();
        java.net.ResponseCache responseCache14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient11.setResponseCache(responseCache14);
        java.net.Proxy proxy16 = java.net.Proxy.NO_PROXY;
        boolean boolean18 = proxy16.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type19 = proxy16.type();
        java.net.SocketAddress socketAddress20 = proxy16.address();
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient15.setProxy(proxy16);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory22 = okHttpClient15.getSslSocketFactory();
        java.net.Proxy proxy23 = okHttpClient15.proxy;
        java.net.Proxy proxy24 = okHttpClient15.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient25 = new com.squareup.okhttp.OkHttpClient(okHttpClient15);
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(okAuthenticator12);
        org.junit.Assert.assertNull(proxySelector13);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNotNull(proxy16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + type19 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type19.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress20);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNull(sSLSocketFactory22);
        org.junit.Assert.assertNotNull(proxy23);
        org.junit.Assert.assertNotNull(proxy24);
    }

    @Test
    public void test12346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12346");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient0.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.copyWithDefaults();
        java.net.Proxy proxy12 = okHttpClient11.getProxy();
        java.util.Set<com.squareup.okhttp.Route> routeSet13 = okHttpClient11.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient11.copyWithDefaults();
        java.net.CookieHandler cookieHandler15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient14.setCookieHandler(cookieHandler15);
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient(okHttpClient16);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory18 = okHttpClient17.getSslSocketFactory();
        java.net.CookieHandler cookieHandler19 = okHttpClient17.getCookieHandler();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory20 = okHttpClient17.sslSocketFactory;
        java.net.CookieHandler cookieHandler21 = okHttpClient17.getCookieHandler();
        javax.net.ssl.HostnameVerifier hostnameVerifier22 = okHttpClient17.hostnameVerifier;
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(proxy12);
        org.junit.Assert.assertNotNull(routeSet13);
        org.junit.Assert.assertNotNull(okHttpClient14);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNull(sSLSocketFactory18);
        org.junit.Assert.assertNull(cookieHandler19);
        org.junit.Assert.assertNull(sSLSocketFactory20);
        org.junit.Assert.assertNull(cookieHandler21);
        org.junit.Assert.assertNull(hostnameVerifier22);
    }

    @Test
    public void test12347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12347");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache1 = okHttpClient0.okResponseCache();
        java.net.ResponseCache responseCache2 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.setResponseCache(responseCache2);
        java.net.CookieHandler cookieHandler4 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier6 = null;
        okHttpClient5.hostnameVerifier = hostnameVerifier6;
        java.net.ResponseCache responseCache8 = null;
        okHttpClient5.responseCache = responseCache8;
        javax.net.ssl.HostnameVerifier hostnameVerifier10 = okHttpClient5.hostnameVerifier;
        java.net.Proxy proxy11 = okHttpClient5.getProxy();
        java.net.CookieHandler cookieHandler12 = null;
        okHttpClient5.cookieHandler = cookieHandler12;
        okHttpClient5.followProtocolRedirects = true;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier17 = null;
        okHttpClient16.hostnameVerifier = hostnameVerifier17;
        java.net.ResponseCache responseCache19 = null;
        okHttpClient16.responseCache = responseCache19;
        javax.net.ssl.HostnameVerifier hostnameVerifier21 = okHttpClient16.hostnameVerifier;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory22 = okHttpClient16.sslSocketFactory;
        java.net.CookieHandler cookieHandler23 = okHttpClient16.cookieHandler;
        javax.net.ssl.HostnameVerifier hostnameVerifier24 = okHttpClient16.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient25 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool26 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient25.connectionPool = connectionPool26;
        com.squareup.okhttp.OkAuthenticator okAuthenticator28 = null;
        okHttpClient25.authenticator = okAuthenticator28;
        java.util.List<java.lang.String> strList30 = okHttpClient25.transports;
        java.net.ResponseCache responseCache31 = null;
        okHttpClient25.responseCache = responseCache31;
        com.squareup.okhttp.OkHttpClient okHttpClient33 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier34 = null;
        okHttpClient33.hostnameVerifier = hostnameVerifier34;
        java.net.ResponseCache responseCache36 = null;
        okHttpClient33.responseCache = responseCache36;
        javax.net.ssl.HostnameVerifier hostnameVerifier38 = okHttpClient33.hostnameVerifier;
        java.net.Proxy proxy39 = okHttpClient33.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool42 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient33.connectionPool = connectionPool42;
        com.squareup.okhttp.OkHttpClient okHttpClient44 = okHttpClient33.copyWithDefaults();
        java.net.Proxy proxy45 = okHttpClient44.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier46 = okHttpClient44.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient47 = okHttpClient25.setHostnameVerifier(hostnameVerifier46);
        com.squareup.okhttp.OkHttpClient okHttpClient48 = okHttpClient16.setHostnameVerifier(hostnameVerifier46);
        okHttpClient5.hostnameVerifier = hostnameVerifier46;
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient0.setHostnameVerifier(hostnameVerifier46);
        java.net.Proxy proxy51 = okHttpClient50.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient52 = new com.squareup.okhttp.OkHttpClient(okHttpClient50);
        okHttpClient52.followProtocolRedirects = false;
        com.squareup.okhttp.OkHttpClient okHttpClient55 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier56 = null;
        okHttpClient55.hostnameVerifier = hostnameVerifier56;
        java.net.ResponseCache responseCache58 = null;
        okHttpClient55.responseCache = responseCache58;
        javax.net.ssl.HostnameVerifier hostnameVerifier60 = okHttpClient55.hostnameVerifier;
        java.net.Proxy proxy61 = okHttpClient55.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool64 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient55.connectionPool = connectionPool64;
        com.squareup.okhttp.OkHttpClient okHttpClient66 = okHttpClient55.copyWithDefaults();
        java.net.ResponseCache responseCache67 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient68 = okHttpClient66.setResponseCache(responseCache67);
        javax.net.ssl.HostnameVerifier hostnameVerifier69 = okHttpClient68.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient70 = okHttpClient68.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient71 = new com.squareup.okhttp.OkHttpClient(okHttpClient70);
        com.squareup.okhttp.ConnectionPool connectionPool74 = new com.squareup.okhttp.ConnectionPool((int) (byte) 0, (long) (short) 0);
        com.squareup.okhttp.OkHttpClient okHttpClient75 = okHttpClient70.setConnectionPool(connectionPool74);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory76 = okHttpClient70.getSslSocketFactory();
        java.net.Socket socket77 = sSLSocketFactory76.createSocket();
        java.lang.String[] strArray78 = sSLSocketFactory76.getSupportedCipherSuites();
        okHttpClient52.sslSocketFactory = sSLSocketFactory76;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory80 = okHttpClient52.sslSocketFactory;
        java.net.InetAddress inetAddress83 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket85 = sSLSocketFactory80.createSocket("hi!", (int) (byte) 10, inetAddress83, 10);
            org.junit.Assert.fail("Expected exception of type java.net.BindException; message: Permission denied (Bind failed)");
        } catch (java.net.BindException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(okResponseCache1);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertNull(cookieHandler4);
        org.junit.Assert.assertNull(hostnameVerifier10);
        org.junit.Assert.assertNull(proxy11);
        org.junit.Assert.assertNull(hostnameVerifier21);
        org.junit.Assert.assertNull(sSLSocketFactory22);
        org.junit.Assert.assertNull(cookieHandler23);
        org.junit.Assert.assertNull(hostnameVerifier24);
        org.junit.Assert.assertNotNull(connectionPool26);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNull(hostnameVerifier38);
        org.junit.Assert.assertNull(proxy39);
        org.junit.Assert.assertNotNull(okHttpClient44);
        org.junit.Assert.assertNull(proxy45);
        org.junit.Assert.assertNotNull(hostnameVerifier46);
        org.junit.Assert.assertNotNull(okHttpClient47);
        org.junit.Assert.assertNotNull(okHttpClient48);
        org.junit.Assert.assertNotNull(okHttpClient50);
        org.junit.Assert.assertNull(proxy51);
        org.junit.Assert.assertNull(hostnameVerifier60);
        org.junit.Assert.assertNull(proxy61);
        org.junit.Assert.assertNotNull(okHttpClient66);
        org.junit.Assert.assertNotNull(okHttpClient68);
        org.junit.Assert.assertNotNull(hostnameVerifier69);
        org.junit.Assert.assertNotNull(okHttpClient70);
        org.junit.Assert.assertNotNull(okHttpClient75);
        org.junit.Assert.assertNotNull(sSLSocketFactory76);
        org.junit.Assert.assertNotNull(socket77);
        org.junit.Assert.assertEquals(socket77.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertNotNull(sSLSocketFactory80);
    }

    @Test
    public void test12348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12348");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.Proxy proxy8 = null;
        okHttpClient0.proxy = proxy8;
        boolean boolean10 = okHttpClient0.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        java.net.ProxySelector proxySelector12 = okHttpClient11.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier13 = okHttpClient11.hostnameVerifier;
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = okHttpClient11.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool16 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient15.connectionPool = connectionPool16;
        com.squareup.okhttp.OkAuthenticator okAuthenticator18 = null;
        okHttpClient15.authenticator = okAuthenticator18;
        java.net.CookieHandler cookieHandler20 = null;
        okHttpClient15.cookieHandler = cookieHandler20;
        java.net.Proxy proxy22 = java.net.Proxy.NO_PROXY;
        boolean boolean24 = proxy22.equals((java.lang.Object) 1L);
        com.squareup.okhttp.OkHttpClient okHttpClient25 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache26 = okHttpClient25.okResponseCache();
        java.net.ResponseCache responseCache27 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient25.setResponseCache(responseCache27);
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        okHttpClient25.transports = strList31;
        boolean boolean34 = proxy22.equals((java.lang.Object) strList31);
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient15.setProxy(proxy22);
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient11.setProxy(proxy22);
        com.squareup.okhttp.OkHttpClient okHttpClient37 = new com.squareup.okhttp.OkHttpClient(okHttpClient36);
        javax.net.ssl.HostnameVerifier hostnameVerifier38 = okHttpClient36.getHostnameVerifier();
        javax.net.ssl.HostnameVerifier hostnameVerifier39 = okHttpClient36.getHostnameVerifier();
        java.net.ProxySelector proxySelector40 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient41 = okHttpClient36.setProxySelector(proxySelector40);
        boolean boolean42 = okHttpClient41.followProtocolRedirects;
        java.net.Proxy proxy43 = java.net.Proxy.NO_PROXY;
        boolean boolean45 = proxy43.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type46 = proxy43.type();
        java.lang.String str47 = proxy43.toString();
        com.squareup.okhttp.OkHttpClient okHttpClient48 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier49 = null;
        okHttpClient48.hostnameVerifier = hostnameVerifier49;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory51 = okHttpClient48.getSslSocketFactory();
        boolean boolean52 = proxy43.equals((java.lang.Object) okHttpClient48);
        java.lang.String str53 = proxy43.toString();
        java.net.Proxy.Type type54 = proxy43.type();
        com.squareup.okhttp.OkHttpClient okHttpClient55 = okHttpClient41.setProxy(proxy43);
        javax.net.ssl.HostnameVerifier hostnameVerifier56 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient57 = okHttpClient41.setHostnameVerifier(hostnameVerifier56);
        java.net.ProxySelector proxySelector58 = null;
        okHttpClient57.proxySelector = proxySelector58;
        com.squareup.okhttp.OkHttpClient okHttpClient60 = okHttpClient57.copyWithDefaults();
        java.net.ResponseCache responseCache61 = null;
        okHttpClient57.responseCache = responseCache61;
        javax.net.ssl.HostnameVerifier hostnameVerifier63 = okHttpClient57.hostnameVerifier;
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(proxySelector12);
        org.junit.Assert.assertNull(hostnameVerifier13);
        org.junit.Assert.assertNull(hostnameVerifier14);
        org.junit.Assert.assertNotNull(connectionPool16);
        org.junit.Assert.assertNotNull(proxy22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(okResponseCache26);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNull(hostnameVerifier38);
        org.junit.Assert.assertNull(hostnameVerifier39);
        org.junit.Assert.assertNotNull(okHttpClient41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(proxy43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + type46 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type46.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "DIRECT" + "'", str47, "DIRECT");
        org.junit.Assert.assertNull(sSLSocketFactory51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "DIRECT" + "'", str53, "DIRECT");
        org.junit.Assert.assertTrue("'" + type54 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type54.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNotNull(okHttpClient55);
        org.junit.Assert.assertNotNull(okHttpClient57);
        org.junit.Assert.assertNotNull(okHttpClient60);
        org.junit.Assert.assertNull(hostnameVerifier63);
    }

    @Test
    public void test12349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12349");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        okHttpClient0.authenticator = okAuthenticator3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient0.responseCache = responseCache6;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier9 = null;
        okHttpClient8.hostnameVerifier = hostnameVerifier9;
        java.net.ResponseCache responseCache11 = null;
        okHttpClient8.responseCache = responseCache11;
        javax.net.ssl.HostnameVerifier hostnameVerifier13 = okHttpClient8.hostnameVerifier;
        java.net.Proxy proxy14 = okHttpClient8.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool17 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient8.connectionPool = connectionPool17;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient8.copyWithDefaults();
        java.net.Proxy proxy20 = okHttpClient19.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier21 = okHttpClient19.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient0.setHostnameVerifier(hostnameVerifier21);
        java.net.CookieHandler cookieHandler23 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient22.setCookieHandler(cookieHandler23);
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient22.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient26 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache27 = okHttpClient26.okResponseCache();
        java.net.ResponseCache responseCache28 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient26.setResponseCache(responseCache28);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory30 = okHttpClient26.sslSocketFactory;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory31 = okHttpClient26.sslSocketFactory;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory32 = okHttpClient26.sslSocketFactory;
        com.squareup.okhttp.OkHttpClient okHttpClient33 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier34 = null;
        okHttpClient33.hostnameVerifier = hostnameVerifier34;
        java.net.ResponseCache responseCache36 = null;
        okHttpClient33.responseCache = responseCache36;
        java.util.List<java.lang.String> strList38 = okHttpClient33.transports;
        com.squareup.okhttp.ConnectionPool connectionPool39 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient33.connectionPool = connectionPool39;
        java.net.Proxy proxy41 = null;
        okHttpClient33.proxy = proxy41;
        boolean boolean43 = okHttpClient33.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient44 = new com.squareup.okhttp.OkHttpClient(okHttpClient33);
        java.net.ProxySelector proxySelector45 = okHttpClient44.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier46 = okHttpClient44.hostnameVerifier;
        java.net.Proxy proxy47 = java.net.Proxy.NO_PROXY;
        boolean boolean49 = proxy47.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type50 = proxy47.type();
        java.net.Proxy.Type type51 = proxy47.type();
        okHttpClient44.proxy = proxy47;
        com.squareup.okhttp.OkHttpClient okHttpClient53 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier54 = null;
        okHttpClient53.hostnameVerifier = hostnameVerifier54;
        java.net.ResponseCache responseCache56 = null;
        okHttpClient53.responseCache = responseCache56;
        java.util.List<java.lang.String> strList58 = okHttpClient53.transports;
        com.squareup.okhttp.ConnectionPool connectionPool59 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient53.connectionPool = connectionPool59;
        com.squareup.okhttp.OkHttpClient okHttpClient61 = okHttpClient53.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient62 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier63 = null;
        okHttpClient62.hostnameVerifier = hostnameVerifier63;
        java.net.ResponseCache responseCache65 = null;
        okHttpClient62.responseCache = responseCache65;
        java.util.List<java.lang.String> strList67 = okHttpClient62.transports;
        com.squareup.okhttp.ConnectionPool connectionPool68 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient62.connectionPool = connectionPool68;
        com.squareup.okhttp.OkHttpClient okHttpClient70 = okHttpClient62.copyWithDefaults();
        java.net.ProxySelector proxySelector71 = okHttpClient70.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory72 = okHttpClient70.getSslSocketFactory();
        okHttpClient53.sslSocketFactory = sSLSocketFactory72;
        okHttpClient44.sslSocketFactory = sSLSocketFactory72;
        com.squareup.okhttp.OkHttpClient okHttpClient75 = okHttpClient26.setSSLSocketFactory(sSLSocketFactory72);
        com.squareup.okhttp.OkHttpClient okHttpClient76 = okHttpClient25.setSSLSocketFactory(sSLSocketFactory72);
        boolean boolean77 = okHttpClient25.getFollowProtocolRedirects();
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNull(hostnameVerifier13);
        org.junit.Assert.assertNull(proxy14);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNull(proxy20);
        org.junit.Assert.assertNotNull(hostnameVerifier21);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNotNull(okHttpClient25);
        org.junit.Assert.assertNull(okResponseCache27);
        org.junit.Assert.assertNotNull(okHttpClient29);
        org.junit.Assert.assertNull(sSLSocketFactory30);
        org.junit.Assert.assertNull(sSLSocketFactory31);
        org.junit.Assert.assertNull(sSLSocketFactory32);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNotNull(connectionPool39);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(proxySelector45);
        org.junit.Assert.assertNull(hostnameVerifier46);
        org.junit.Assert.assertNotNull(proxy47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + type50 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type50.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertTrue("'" + type51 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type51.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNotNull(connectionPool59);
        org.junit.Assert.assertNotNull(okHttpClient61);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNotNull(connectionPool68);
        org.junit.Assert.assertNotNull(okHttpClient70);
// flaky:         org.junit.Assert.assertNull(proxySelector71);
        org.junit.Assert.assertNotNull(sSLSocketFactory72);
        org.junit.Assert.assertNotNull(okHttpClient75);
        org.junit.Assert.assertNotNull(okHttpClient76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
    }

    @Test
    public void test12350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12350");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.ConnectionPool connectionPool12 = okHttpClient11.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator13 = okHttpClient11.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool16 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient11.connectionPool = connectionPool16;
        java.net.ResponseCache responseCache18 = okHttpClient11.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory19 = okHttpClient11.sslSocketFactory;
        java.net.Proxy proxy20 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress21 = proxy20.address();
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient11.setProxy(proxy20);
        com.squareup.okhttp.OkHttpClient okHttpClient23 = new com.squareup.okhttp.OkHttpClient(okHttpClient22);
        com.squareup.okhttp.OkHttpClient okHttpClient24 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier25 = null;
        okHttpClient24.hostnameVerifier = hostnameVerifier25;
        java.net.ResponseCache responseCache27 = null;
        okHttpClient24.responseCache = responseCache27;
        java.util.List<java.lang.String> strList29 = okHttpClient24.transports;
        com.squareup.okhttp.ConnectionPool connectionPool30 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient24.connectionPool = connectionPool30;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient24.copyWithDefaults();
        java.net.ProxySelector proxySelector33 = okHttpClient32.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory34 = okHttpClient32.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient22.setSSLSocketFactory(sSLSocketFactory34);
        java.lang.String[] strArray36 = sSLSocketFactory34.getSupportedCipherSuites();
        java.lang.String[] strArray37 = sSLSocketFactory34.getSupportedCipherSuites();
        java.lang.String[] strArray38 = sSLSocketFactory34.getDefaultCipherSuites();
        java.net.Socket socket39 = sSLSocketFactory34.createSocket();
        java.net.Socket socket40 = sSLSocketFactory34.createSocket();
        java.net.InetAddress inetAddress43 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket45 = sSLSocketFactory34.createSocket("DIRECT", 1, inetAddress43, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.net.BindException; message: Permission denied (Bind failed)");
        } catch (java.net.BindException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNull(okAuthenticator13);
        org.junit.Assert.assertNull(responseCache18);
        org.junit.Assert.assertNull(sSLSocketFactory19);
        org.junit.Assert.assertNotNull(proxy20);
        org.junit.Assert.assertNull(socketAddress21);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(connectionPool30);
        org.junit.Assert.assertNotNull(okHttpClient32);
// flaky:         org.junit.Assert.assertNull(proxySelector33);
        org.junit.Assert.assertNotNull(sSLSocketFactory34);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(socket39);
        org.junit.Assert.assertEquals(socket39.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(socket40);
        org.junit.Assert.assertEquals(socket40.toString(), "Socket[unconnected]");
    }

    @Test
    public void test12351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12351");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.CookieHandler cookieHandler5 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = null;
        okHttpClient6.hostnameVerifier = hostnameVerifier7;
        java.net.ResponseCache responseCache9 = null;
        okHttpClient6.responseCache = responseCache9;
        java.util.List<java.lang.String> strList11 = okHttpClient6.transports;
        com.squareup.okhttp.ConnectionPool connectionPool12 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient6.connectionPool = connectionPool12;
        java.net.Proxy proxy14 = null;
        okHttpClient6.proxy = proxy14;
        java.util.Set<com.squareup.okhttp.Route> routeSet16 = okHttpClient6.failedRoutes;
        okHttpClient0.failedRoutes = routeSet16;
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient0.setHostnameVerifier(hostnameVerifier18);
        java.net.CookieHandler cookieHandler20 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient0.setFollowProtocolRedirects(true);
        java.net.ResponseCache responseCache23 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient22.setResponseCache(responseCache23);
        javax.net.ssl.HostnameVerifier hostnameVerifier25 = okHttpClient22.getHostnameVerifier();
        com.squareup.okhttp.ConnectionPool connectionPool26 = okHttpClient22.getConnectionPool();
        com.squareup.okhttp.OkHttpClient okHttpClient27 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier28 = null;
        okHttpClient27.hostnameVerifier = hostnameVerifier28;
        java.net.ResponseCache responseCache30 = null;
        okHttpClient27.responseCache = responseCache30;
        javax.net.ssl.HostnameVerifier hostnameVerifier32 = okHttpClient27.hostnameVerifier;
        java.net.Proxy proxy33 = okHttpClient27.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool36 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient27.connectionPool = connectionPool36;
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient27.copyWithDefaults();
        java.net.Proxy proxy39 = okHttpClient38.getProxy();
        java.net.CookieHandler cookieHandler40 = null;
        okHttpClient38.cookieHandler = cookieHandler40;
        java.util.List<java.lang.String> strList42 = okHttpClient38.transports;
        boolean boolean43 = okHttpClient38.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient45 = okHttpClient38.setFollowProtocolRedirects(false);
        com.squareup.okhttp.OkHttpClient okHttpClient46 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier47 = null;
        okHttpClient46.hostnameVerifier = hostnameVerifier47;
        java.net.ResponseCache responseCache49 = null;
        okHttpClient46.responseCache = responseCache49;
        javax.net.ssl.HostnameVerifier hostnameVerifier51 = okHttpClient46.hostnameVerifier;
        java.net.Proxy proxy52 = okHttpClient46.getProxy();
        java.net.CookieHandler cookieHandler53 = null;
        okHttpClient46.cookieHandler = cookieHandler53;
        okHttpClient46.followProtocolRedirects = true;
        com.squareup.okhttp.OkHttpClient okHttpClient57 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier58 = null;
        okHttpClient57.hostnameVerifier = hostnameVerifier58;
        java.net.ResponseCache responseCache60 = null;
        okHttpClient57.responseCache = responseCache60;
        javax.net.ssl.HostnameVerifier hostnameVerifier62 = okHttpClient57.hostnameVerifier;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory63 = okHttpClient57.sslSocketFactory;
        java.net.CookieHandler cookieHandler64 = okHttpClient57.cookieHandler;
        javax.net.ssl.HostnameVerifier hostnameVerifier65 = okHttpClient57.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient66 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool67 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient66.connectionPool = connectionPool67;
        com.squareup.okhttp.OkAuthenticator okAuthenticator69 = null;
        okHttpClient66.authenticator = okAuthenticator69;
        java.util.List<java.lang.String> strList71 = okHttpClient66.transports;
        java.net.ResponseCache responseCache72 = null;
        okHttpClient66.responseCache = responseCache72;
        com.squareup.okhttp.OkHttpClient okHttpClient74 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier75 = null;
        okHttpClient74.hostnameVerifier = hostnameVerifier75;
        java.net.ResponseCache responseCache77 = null;
        okHttpClient74.responseCache = responseCache77;
        javax.net.ssl.HostnameVerifier hostnameVerifier79 = okHttpClient74.hostnameVerifier;
        java.net.Proxy proxy80 = okHttpClient74.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool83 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient74.connectionPool = connectionPool83;
        com.squareup.okhttp.OkHttpClient okHttpClient85 = okHttpClient74.copyWithDefaults();
        java.net.Proxy proxy86 = okHttpClient85.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier87 = okHttpClient85.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient88 = okHttpClient66.setHostnameVerifier(hostnameVerifier87);
        com.squareup.okhttp.OkHttpClient okHttpClient89 = okHttpClient57.setHostnameVerifier(hostnameVerifier87);
        okHttpClient46.hostnameVerifier = hostnameVerifier87;
        javax.net.ssl.HostnameVerifier hostnameVerifier91 = okHttpClient46.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient92 = okHttpClient45.setHostnameVerifier(hostnameVerifier91);
        okHttpClient22.hostnameVerifier = hostnameVerifier91;
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNotNull(routeSet16);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNull(cookieHandler20);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNull(hostnameVerifier25);
        org.junit.Assert.assertNull(connectionPool26);
        org.junit.Assert.assertNull(hostnameVerifier32);
        org.junit.Assert.assertNull(proxy33);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNull(proxy39);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(okHttpClient45);
        org.junit.Assert.assertNull(hostnameVerifier51);
        org.junit.Assert.assertNull(proxy52);
        org.junit.Assert.assertNull(hostnameVerifier62);
        org.junit.Assert.assertNull(sSLSocketFactory63);
        org.junit.Assert.assertNull(cookieHandler64);
        org.junit.Assert.assertNull(hostnameVerifier65);
        org.junit.Assert.assertNotNull(connectionPool67);
        org.junit.Assert.assertNull(strList71);
        org.junit.Assert.assertNull(hostnameVerifier79);
        org.junit.Assert.assertNull(proxy80);
        org.junit.Assert.assertNotNull(okHttpClient85);
        org.junit.Assert.assertNull(proxy86);
        org.junit.Assert.assertNotNull(hostnameVerifier87);
        org.junit.Assert.assertNotNull(okHttpClient88);
        org.junit.Assert.assertNotNull(okHttpClient89);
        org.junit.Assert.assertNotNull(hostnameVerifier91);
        org.junit.Assert.assertNotNull(okHttpClient92);
    }

    @Test
    public void test12352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12352");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.ResponseCache responseCache5 = null;
        okHttpClient4.responseCache = responseCache5;
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = okHttpClient4.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient4.setFollowProtocolRedirects(false);
        java.net.ProxySelector proxySelector10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient9.setProxySelector(proxySelector10);
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient11.copyWithDefaults();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory13 = okHttpClient12.sslSocketFactory;
        com.squareup.okhttp.ConnectionPool connectionPool16 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) 0);
        int int17 = connectionPool16.getConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient12.setConnectionPool(connectionPool16);
        com.squareup.okhttp.OkHttpClient okHttpClient19 = new com.squareup.okhttp.OkHttpClient(okHttpClient12);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(hostnameVerifier7);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertNotNull(sSLSocketFactory13);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(okHttpClient18);
    }

    @Test
    public void test12353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12353");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache8 = okHttpClient7.okResponseCache();
        java.net.ResponseCache responseCache9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient7.setResponseCache(responseCache9);
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        okHttpClient7.transports = strList13;
        okHttpClient0.transports = strList13;
        javax.net.ssl.HostnameVerifier hostnameVerifier17 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier17;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory20 = null;
        okHttpClient0.sslSocketFactory = sSLSocketFactory20;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache22 = okHttpClient0.okResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient23 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        java.net.CookieHandler cookieHandler24 = okHttpClient0.getCookieHandler();
        java.net.ResponseCache responseCache25 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient0.setResponseCache(responseCache25);
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient26.copyWithDefaults();
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNull(okResponseCache8);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(okResponseCache22);
        org.junit.Assert.assertNull(cookieHandler24);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNotNull(okHttpClient27);
    }

    @Test
    public void test12354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12354");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.OkHttpClient okHttpClient1 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        com.squareup.okhttp.ConnectionPool connectionPool4 = new com.squareup.okhttp.ConnectionPool((int) (short) -1, (long) '#');
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient1.setConnectionPool(connectionPool4);
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = null;
        okHttpClient6.hostnameVerifier = hostnameVerifier7;
        java.net.ProxySelector proxySelector9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient6.setProxySelector(proxySelector9);
        java.net.ResponseCache responseCache11 = null;
        okHttpClient10.responseCache = responseCache11;
        javax.net.ssl.HostnameVerifier hostnameVerifier13 = okHttpClient10.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient10.setFollowProtocolRedirects(false);
        java.net.ProxySelector proxySelector16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient15.setProxySelector(proxySelector16);
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient17.copyWithDefaults();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory19 = okHttpClient18.sslSocketFactory;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient1.setSSLSocketFactory(sSLSocketFactory19);
        java.lang.String[] strArray21 = sSLSocketFactory19.getSupportedCipherSuites();
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertNull(hostnameVerifier13);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNotNull(sSLSocketFactory19);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNotNull(strArray21);
    }

    @Test
    public void test12355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12355");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory6 = okHttpClient0.sslSocketFactory;
        java.net.CookieHandler cookieHandler7 = okHttpClient0.cookieHandler;
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = okHttpClient0.hostnameVerifier;
        java.net.ProxySelector proxySelector9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient0.setProxySelector(proxySelector9);
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient(okHttpClient10);
        java.net.ProxySelector proxySelector12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setProxySelector(proxySelector12);
        java.net.ResponseCache responseCache14 = okHttpClient13.getResponseCache();
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(sSLSocketFactory6);
        org.junit.Assert.assertNull(cookieHandler7);
        org.junit.Assert.assertNull(hostnameVerifier8);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNull(responseCache14);
    }

    @Test
    public void test12356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12356");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        boolean boolean3 = okHttpClient0.getFollowProtocolRedirects();
        java.util.List<java.lang.String> strList4 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool5 = okHttpClient0.getConnectionPool();
        java.net.CookieHandler cookieHandler6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient0.setCookieHandler(cookieHandler6);
        com.squareup.okhttp.OkHttpClient okHttpClient8 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache9 = okHttpClient8.okResponseCache();
        java.net.ResponseCache responseCache10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient8.setResponseCache(responseCache10);
        java.net.ProxySelector proxySelector12 = okHttpClient8.getProxySelector();
        com.squareup.okhttp.OkAuthenticator okAuthenticator13 = okHttpClient8.getAuthenticator();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory14 = okHttpClient8.sslSocketFactory;
        java.util.Set<com.squareup.okhttp.Route> routeSet15 = okHttpClient8.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier17 = null;
        okHttpClient16.hostnameVerifier = hostnameVerifier17;
        java.net.ProxySelector proxySelector19 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient16.setProxySelector(proxySelector19);
        java.net.CookieHandler cookieHandler21 = okHttpClient16.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier23 = null;
        okHttpClient22.hostnameVerifier = hostnameVerifier23;
        java.net.ResponseCache responseCache25 = null;
        okHttpClient22.responseCache = responseCache25;
        java.util.List<java.lang.String> strList27 = okHttpClient22.transports;
        com.squareup.okhttp.ConnectionPool connectionPool28 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient22.connectionPool = connectionPool28;
        java.net.Proxy proxy30 = null;
        okHttpClient22.proxy = proxy30;
        java.util.Set<com.squareup.okhttp.Route> routeSet32 = okHttpClient22.failedRoutes;
        okHttpClient16.failedRoutes = routeSet32;
        javax.net.ssl.HostnameVerifier hostnameVerifier34 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient16.setHostnameVerifier(hostnameVerifier34);
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache36 = okHttpClient16.okResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator37 = okHttpClient16.getAuthenticator();
        com.squareup.okhttp.OkHttpClient okHttpClient38 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier39 = null;
        okHttpClient38.hostnameVerifier = hostnameVerifier39;
        java.net.ResponseCache responseCache41 = null;
        okHttpClient38.responseCache = responseCache41;
        javax.net.ssl.HostnameVerifier hostnameVerifier43 = okHttpClient38.hostnameVerifier;
        java.net.Proxy proxy44 = okHttpClient38.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool47 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient38.connectionPool = connectionPool47;
        com.squareup.okhttp.OkHttpClient okHttpClient49 = okHttpClient38.copyWithDefaults();
        java.net.ResponseCache responseCache50 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient51 = okHttpClient49.setResponseCache(responseCache50);
        com.squareup.okhttp.OkHttpClient okHttpClient53 = okHttpClient51.setFollowProtocolRedirects(false);
        java.util.List<java.lang.String> strList54 = okHttpClient51.transports;
        com.squareup.okhttp.OkHttpClient okHttpClient56 = okHttpClient51.setFollowProtocolRedirects(false);
        com.squareup.okhttp.OkHttpClient okHttpClient57 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool58 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient57.connectionPool = connectionPool58;
        com.squareup.okhttp.OkHttpClient okHttpClient60 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier61 = null;
        okHttpClient60.hostnameVerifier = hostnameVerifier61;
        java.net.ResponseCache responseCache63 = null;
        okHttpClient60.responseCache = responseCache63;
        java.util.List<java.lang.String> strList65 = okHttpClient60.transports;
        com.squareup.okhttp.ConnectionPool connectionPool66 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient60.connectionPool = connectionPool66;
        com.squareup.okhttp.OkHttpClient okHttpClient68 = okHttpClient57.setConnectionPool(connectionPool66);
        java.net.Proxy proxy69 = okHttpClient68.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient70 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool71 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient70.connectionPool = connectionPool71;
        int int73 = connectionPool71.getSpdyConnectionCount();
        okHttpClient68.connectionPool = connectionPool71;
        com.squareup.okhttp.OkHttpClient okHttpClient75 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier76 = null;
        okHttpClient75.hostnameVerifier = hostnameVerifier76;
        java.net.ResponseCache responseCache78 = null;
        okHttpClient75.responseCache = responseCache78;
        javax.net.ssl.HostnameVerifier hostnameVerifier80 = okHttpClient75.hostnameVerifier;
        java.net.Proxy proxy81 = okHttpClient75.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool84 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient75.connectionPool = connectionPool84;
        com.squareup.okhttp.OkHttpClient okHttpClient86 = okHttpClient75.copyWithDefaults();
        java.net.ResponseCache responseCache87 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient88 = okHttpClient86.setResponseCache(responseCache87);
        com.squareup.okhttp.OkAuthenticator okAuthenticator89 = okHttpClient86.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient90 = okHttpClient68.setAuthenticator(okAuthenticator89);
        okHttpClient51.authenticator = okAuthenticator89;
        com.squareup.okhttp.OkHttpClient okHttpClient92 = okHttpClient16.setAuthenticator(okAuthenticator89);
        com.squareup.okhttp.OkHttpClient okHttpClient93 = okHttpClient8.setAuthenticator(okAuthenticator89);
        okHttpClient7.authenticator = okAuthenticator89;
        java.net.ResponseCache responseCache95 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient96 = okHttpClient7.setResponseCache(responseCache95);
        javax.net.ssl.HostnameVerifier hostnameVerifier97 = okHttpClient96.getHostnameVerifier();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(connectionPool5);
        org.junit.Assert.assertNotNull(okHttpClient7);
        org.junit.Assert.assertNull(okResponseCache9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(proxySelector12);
        org.junit.Assert.assertNull(okAuthenticator13);
        org.junit.Assert.assertNull(sSLSocketFactory14);
        org.junit.Assert.assertNotNull(routeSet15);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNull(cookieHandler21);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNotNull(connectionPool28);
        org.junit.Assert.assertNotNull(routeSet32);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNull(okResponseCache36);
        org.junit.Assert.assertNull(okAuthenticator37);
        org.junit.Assert.assertNull(hostnameVerifier43);
        org.junit.Assert.assertNull(proxy44);
        org.junit.Assert.assertNotNull(okHttpClient49);
        org.junit.Assert.assertNotNull(okHttpClient51);
        org.junit.Assert.assertNotNull(okHttpClient53);
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNotNull(okHttpClient56);
        org.junit.Assert.assertNotNull(connectionPool58);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNotNull(connectionPool66);
        org.junit.Assert.assertNotNull(okHttpClient68);
        org.junit.Assert.assertNull(proxy69);
        org.junit.Assert.assertNotNull(connectionPool71);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertNull(hostnameVerifier80);
        org.junit.Assert.assertNull(proxy81);
        org.junit.Assert.assertNotNull(okHttpClient86);
        org.junit.Assert.assertNotNull(okHttpClient88);
        org.junit.Assert.assertNotNull(okAuthenticator89);
        org.junit.Assert.assertNotNull(okHttpClient90);
        org.junit.Assert.assertNotNull(okHttpClient92);
        org.junit.Assert.assertNotNull(okHttpClient93);
        org.junit.Assert.assertNotNull(okHttpClient96);
        org.junit.Assert.assertNull(hostnameVerifier97);
    }

    @Test
    public void test12357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12357");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        com.squareup.okhttp.OkAuthenticator okAuthenticator5 = null;
        okHttpClient0.authenticator = okAuthenticator5;
        okHttpClient0.followProtocolRedirects = false;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool10 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient9.connectionPool = connectionPool10;
        com.squareup.okhttp.OkAuthenticator okAuthenticator12 = null;
        okHttpClient9.authenticator = okAuthenticator12;
        java.util.List<java.lang.String> strList14 = okHttpClient9.transports;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier16 = null;
        okHttpClient15.hostnameVerifier = hostnameVerifier16;
        java.net.ResponseCache responseCache18 = null;
        okHttpClient15.responseCache = responseCache18;
        java.util.List<java.lang.String> strList20 = okHttpClient15.transports;
        com.squareup.okhttp.ConnectionPool connectionPool21 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient15.connectionPool = connectionPool21;
        java.net.CookieHandler cookieHandler23 = okHttpClient15.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache24 = okHttpClient15.okResponseCache();
        java.net.CookieHandler cookieHandler25 = okHttpClient15.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient26 = new com.squareup.okhttp.OkHttpClient(okHttpClient15);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory27 = okHttpClient26.sslSocketFactory;
        com.squareup.okhttp.OkAuthenticator okAuthenticator28 = okHttpClient26.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient29 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = null;
        okHttpClient29.hostnameVerifier = hostnameVerifier30;
        java.net.ResponseCache responseCache32 = null;
        okHttpClient29.responseCache = responseCache32;
        java.util.List<java.lang.String> strList34 = okHttpClient29.transports;
        com.squareup.okhttp.ConnectionPool connectionPool35 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient29.connectionPool = connectionPool35;
        java.net.CookieHandler cookieHandler37 = okHttpClient29.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache38 = okHttpClient29.okResponseCache();
        java.net.CookieHandler cookieHandler39 = okHttpClient29.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient40 = new com.squareup.okhttp.OkHttpClient(okHttpClient29);
        com.squareup.okhttp.OkHttpClient okHttpClient41 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier42 = null;
        okHttpClient41.hostnameVerifier = hostnameVerifier42;
        java.net.ProxySelector proxySelector44 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient45 = okHttpClient41.setProxySelector(proxySelector44);
        java.net.CookieHandler cookieHandler46 = okHttpClient41.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient47 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier48 = null;
        okHttpClient47.hostnameVerifier = hostnameVerifier48;
        java.net.ResponseCache responseCache50 = null;
        okHttpClient47.responseCache = responseCache50;
        java.util.List<java.lang.String> strList52 = okHttpClient47.transports;
        com.squareup.okhttp.ConnectionPool connectionPool53 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient47.connectionPool = connectionPool53;
        java.net.Proxy proxy55 = null;
        okHttpClient47.proxy = proxy55;
        java.util.Set<com.squareup.okhttp.Route> routeSet57 = okHttpClient47.failedRoutes;
        okHttpClient41.failedRoutes = routeSet57;
        okHttpClient40.failedRoutes = routeSet57;
        okHttpClient26.failedRoutes = routeSet57;
        okHttpClient9.failedRoutes = routeSet57;
        okHttpClient0.failedRoutes = routeSet57;
        java.net.CookieHandler cookieHandler63 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient64 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier65 = null;
        okHttpClient64.hostnameVerifier = hostnameVerifier65;
        java.net.ResponseCache responseCache67 = null;
        okHttpClient64.responseCache = responseCache67;
        java.util.List<java.lang.String> strList69 = okHttpClient64.transports;
        com.squareup.okhttp.ConnectionPool connectionPool70 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient64.connectionPool = connectionPool70;
        java.net.Proxy proxy72 = null;
        okHttpClient64.proxy = proxy72;
        boolean boolean74 = okHttpClient64.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient75 = new com.squareup.okhttp.OkHttpClient(okHttpClient64);
        java.util.Set<com.squareup.okhttp.Route> routeSet76 = okHttpClient64.failedRoutes;
        okHttpClient0.failedRoutes = routeSet76;
        com.squareup.okhttp.OkHttpClient okHttpClient78 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        java.util.List<java.lang.String> strList79 = okHttpClient0.getTransports();
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNotNull(connectionPool10);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(connectionPool21);
        org.junit.Assert.assertNull(cookieHandler23);
        org.junit.Assert.assertNull(okResponseCache24);
        org.junit.Assert.assertNull(cookieHandler25);
        org.junit.Assert.assertNull(sSLSocketFactory27);
        org.junit.Assert.assertNull(okAuthenticator28);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(connectionPool35);
        org.junit.Assert.assertNull(cookieHandler37);
        org.junit.Assert.assertNull(okResponseCache38);
        org.junit.Assert.assertNull(cookieHandler39);
        org.junit.Assert.assertNotNull(okHttpClient45);
        org.junit.Assert.assertNull(cookieHandler46);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNotNull(connectionPool53);
        org.junit.Assert.assertNotNull(routeSet57);
        org.junit.Assert.assertNull(cookieHandler63);
        org.junit.Assert.assertNull(strList69);
        org.junit.Assert.assertNotNull(connectionPool70);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(routeSet76);
        org.junit.Assert.assertNull(strList79);
    }

    @Test
    public void test12358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12358");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache1 = okHttpClient0.okResponseCache();
        java.net.ResponseCache responseCache2 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.setResponseCache(responseCache2);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory4 = okHttpClient0.sslSocketFactory;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory5 = okHttpClient0.sslSocketFactory;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory6);
        com.squareup.okhttp.OkHttpClient okHttpClient8 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier9 = null;
        okHttpClient8.hostnameVerifier = hostnameVerifier9;
        java.net.ResponseCache responseCache11 = null;
        okHttpClient8.responseCache = responseCache11;
        java.util.List<java.lang.String> strList13 = okHttpClient8.transports;
        com.squareup.okhttp.ConnectionPool connectionPool14 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient8.connectionPool = connectionPool14;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient0.setConnectionPool(connectionPool14);
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        java.util.List<java.lang.String> strList19 = okHttpClient0.transports;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier21 = null;
        okHttpClient20.hostnameVerifier = hostnameVerifier21;
        java.net.ResponseCache responseCache23 = null;
        okHttpClient20.responseCache = responseCache23;
        java.util.List<java.lang.String> strList25 = okHttpClient20.transports;
        com.squareup.okhttp.ConnectionPool connectionPool26 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient20.connectionPool = connectionPool26;
        java.net.Proxy proxy28 = null;
        okHttpClient20.proxy = proxy28;
        boolean boolean30 = okHttpClient20.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = new com.squareup.okhttp.OkHttpClient(okHttpClient20);
        java.net.ProxySelector proxySelector32 = okHttpClient31.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier33 = okHttpClient31.hostnameVerifier;
        java.net.Proxy proxy34 = java.net.Proxy.NO_PROXY;
        boolean boolean36 = proxy34.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type37 = proxy34.type();
        java.net.Proxy.Type type38 = proxy34.type();
        okHttpClient31.proxy = proxy34;
        com.squareup.okhttp.OkHttpClient okHttpClient40 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier41 = null;
        okHttpClient40.hostnameVerifier = hostnameVerifier41;
        java.net.ResponseCache responseCache43 = null;
        okHttpClient40.responseCache = responseCache43;
        java.util.List<java.lang.String> strList45 = okHttpClient40.transports;
        com.squareup.okhttp.ConnectionPool connectionPool46 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient40.connectionPool = connectionPool46;
        com.squareup.okhttp.OkHttpClient okHttpClient48 = okHttpClient40.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient49 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier50 = null;
        okHttpClient49.hostnameVerifier = hostnameVerifier50;
        java.net.ResponseCache responseCache52 = null;
        okHttpClient49.responseCache = responseCache52;
        java.util.List<java.lang.String> strList54 = okHttpClient49.transports;
        com.squareup.okhttp.ConnectionPool connectionPool55 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient49.connectionPool = connectionPool55;
        com.squareup.okhttp.OkHttpClient okHttpClient57 = okHttpClient49.copyWithDefaults();
        java.net.ProxySelector proxySelector58 = okHttpClient57.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory59 = okHttpClient57.getSslSocketFactory();
        okHttpClient40.sslSocketFactory = sSLSocketFactory59;
        okHttpClient31.sslSocketFactory = sSLSocketFactory59;
        com.squareup.okhttp.OkHttpClient okHttpClient62 = new com.squareup.okhttp.OkHttpClient(okHttpClient31);
        java.net.Proxy proxy63 = java.net.Proxy.NO_PROXY;
        boolean boolean65 = proxy63.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type66 = proxy63.type();
        java.lang.String str67 = proxy63.toString();
        java.net.Proxy.Type type68 = proxy63.type();
        java.net.Proxy.Type type69 = proxy63.type();
        java.net.SocketAddress socketAddress70 = proxy63.address();
        okHttpClient62.proxy = proxy63;
        java.lang.String str72 = proxy63.toString();
        okHttpClient0.proxy = proxy63;
        okHttpClient0.followProtocolRedirects = false;
        com.squareup.okhttp.OkHttpClient okHttpClient76 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        java.net.CookieHandler cookieHandler77 = null;
        okHttpClient0.cookieHandler = cookieHandler77;
        java.net.CookieHandler cookieHandler79 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient80 = okHttpClient0.setCookieHandler(cookieHandler79);
        java.net.ResponseCache responseCache81 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient82 = okHttpClient80.setResponseCache(responseCache81);
        org.junit.Assert.assertNull(okResponseCache1);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertNull(sSLSocketFactory4);
        org.junit.Assert.assertNull(sSLSocketFactory5);
        org.junit.Assert.assertNotNull(okHttpClient7);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNotNull(connectionPool14);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNotNull(connectionPool26);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(proxySelector32);
        org.junit.Assert.assertNull(hostnameVerifier33);
        org.junit.Assert.assertNotNull(proxy34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + type37 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type37.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertTrue("'" + type38 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type38.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNotNull(connectionPool46);
        org.junit.Assert.assertNotNull(okHttpClient48);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNotNull(connectionPool55);
        org.junit.Assert.assertNotNull(okHttpClient57);
// flaky:         org.junit.Assert.assertNull(proxySelector58);
        org.junit.Assert.assertNotNull(sSLSocketFactory59);
        org.junit.Assert.assertNotNull(proxy63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + type66 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type66.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "DIRECT" + "'", str67, "DIRECT");
        org.junit.Assert.assertTrue("'" + type68 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type68.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertTrue("'" + type69 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type69.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress70);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "DIRECT" + "'", str72, "DIRECT");
        org.junit.Assert.assertNotNull(okHttpClient80);
        org.junit.Assert.assertNotNull(okHttpClient82);
    }

    @Test
    public void test12359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12359");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient4.copyWithDefaults();
        com.squareup.okhttp.Route[] routeArray6 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet7 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet7, routeArray6);
        okHttpClient5.failedRoutes = routeSet7;
        java.net.CookieHandler cookieHandler10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient5.setCookieHandler(cookieHandler10);
        java.net.CookieHandler cookieHandler12 = null;
        okHttpClient11.cookieHandler = cookieHandler12;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory14 = okHttpClient11.getSslSocketFactory();
        java.net.ResponseCache responseCache15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient11.setResponseCache(responseCache15);
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool18 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient17.connectionPool = connectionPool18;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier21 = null;
        okHttpClient20.hostnameVerifier = hostnameVerifier21;
        java.net.ResponseCache responseCache23 = null;
        okHttpClient20.responseCache = responseCache23;
        java.util.List<java.lang.String> strList25 = okHttpClient20.transports;
        com.squareup.okhttp.ConnectionPool connectionPool26 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient20.connectionPool = connectionPool26;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient17.setConnectionPool(connectionPool26);
        com.squareup.okhttp.ConnectionPool connectionPool29 = okHttpClient28.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator30 = okHttpClient28.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool33 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient28.connectionPool = connectionPool33;
        java.net.ResponseCache responseCache35 = okHttpClient28.responseCache;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache36 = okHttpClient28.okResponseCache();
        java.net.Proxy proxy37 = okHttpClient28.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient38 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier39 = null;
        okHttpClient38.hostnameVerifier = hostnameVerifier39;
        java.net.ResponseCache responseCache41 = null;
        okHttpClient38.responseCache = responseCache41;
        javax.net.ssl.HostnameVerifier hostnameVerifier43 = okHttpClient38.hostnameVerifier;
        java.net.Proxy proxy44 = okHttpClient38.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool47 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient38.connectionPool = connectionPool47;
        com.squareup.okhttp.OkHttpClient okHttpClient49 = okHttpClient38.copyWithDefaults();
        java.net.ResponseCache responseCache50 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient51 = okHttpClient49.setResponseCache(responseCache50);
        okHttpClient51.followProtocolRedirects = true;
        java.util.List<java.lang.String> strList54 = okHttpClient51.getTransports();
        com.squareup.okhttp.OkHttpClient.DEFAULT_TRANSPORTS = strList54;
        okHttpClient28.transports = strList54;
        // The following exception was thrown during execution in test generation
        try {
            com.squareup.okhttp.OkHttpClient okHttpClient57 = okHttpClient11.setTransports(strList54);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: transports doesn't contain http/1.1: [hi!]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNotNull(routeArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(sSLSocketFactory14);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNotNull(connectionPool18);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNotNull(connectionPool26);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNotNull(connectionPool29);
        org.junit.Assert.assertNull(okAuthenticator30);
        org.junit.Assert.assertNull(responseCache35);
        org.junit.Assert.assertNull(okResponseCache36);
        org.junit.Assert.assertNull(proxy37);
        org.junit.Assert.assertNull(hostnameVerifier43);
        org.junit.Assert.assertNull(proxy44);
        org.junit.Assert.assertNotNull(okHttpClient49);
        org.junit.Assert.assertNotNull(okHttpClient51);
        org.junit.Assert.assertNotNull(strList54);
    }

    @Test
    public void test12360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12360");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory6);
        com.squareup.okhttp.ConnectionPool connectionPool8 = okHttpClient7.getConnectionPool();
        java.net.ResponseCache responseCache9 = null;
        okHttpClient7.responseCache = responseCache9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient(okHttpClient7);
        java.net.ProxySelector proxySelector12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient7.setProxySelector(proxySelector12);
        java.net.ProxySelector proxySelector14 = okHttpClient13.getProxySelector();
        javax.net.ssl.HostnameVerifier hostnameVerifier15 = okHttpClient13.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient13.copyWithDefaults();
        java.net.CookieHandler cookieHandler17 = okHttpClient13.cookieHandler;
        com.squareup.okhttp.OkAuthenticator okAuthenticator18 = okHttpClient13.getAuthenticator();
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNotNull(okHttpClient7);
        org.junit.Assert.assertNull(connectionPool8);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNull(proxySelector14);
        org.junit.Assert.assertNull(hostnameVerifier15);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNull(cookieHandler17);
        org.junit.Assert.assertNull(okAuthenticator18);
    }

    @Test
    public void test12361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12361");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.Proxy proxy8 = null;
        okHttpClient0.proxy = proxy8;
        boolean boolean10 = okHttpClient0.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache12 = okHttpClient11.okResponseCache();
        java.net.ResponseCache responseCache13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient11.setResponseCache(responseCache13);
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        okHttpClient11.transports = strList17;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory20 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient11.setSSLSocketFactory(sSLSocketFactory20);
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier23 = null;
        okHttpClient22.hostnameVerifier = hostnameVerifier23;
        java.net.ResponseCache responseCache25 = null;
        okHttpClient22.responseCache = responseCache25;
        javax.net.ssl.HostnameVerifier hostnameVerifier27 = okHttpClient22.hostnameVerifier;
        java.net.Proxy proxy28 = okHttpClient22.getProxy();
        java.net.CookieHandler cookieHandler29 = null;
        okHttpClient22.cookieHandler = cookieHandler29;
        okHttpClient22.followProtocolRedirects = true;
        com.squareup.okhttp.OkHttpClient okHttpClient33 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier34 = null;
        okHttpClient33.hostnameVerifier = hostnameVerifier34;
        java.net.ResponseCache responseCache36 = null;
        okHttpClient33.responseCache = responseCache36;
        javax.net.ssl.HostnameVerifier hostnameVerifier38 = okHttpClient33.hostnameVerifier;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory39 = okHttpClient33.sslSocketFactory;
        java.net.CookieHandler cookieHandler40 = okHttpClient33.cookieHandler;
        javax.net.ssl.HostnameVerifier hostnameVerifier41 = okHttpClient33.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient42 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool43 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient42.connectionPool = connectionPool43;
        com.squareup.okhttp.OkAuthenticator okAuthenticator45 = null;
        okHttpClient42.authenticator = okAuthenticator45;
        java.util.List<java.lang.String> strList47 = okHttpClient42.transports;
        java.net.ResponseCache responseCache48 = null;
        okHttpClient42.responseCache = responseCache48;
        com.squareup.okhttp.OkHttpClient okHttpClient50 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier51 = null;
        okHttpClient50.hostnameVerifier = hostnameVerifier51;
        java.net.ResponseCache responseCache53 = null;
        okHttpClient50.responseCache = responseCache53;
        javax.net.ssl.HostnameVerifier hostnameVerifier55 = okHttpClient50.hostnameVerifier;
        java.net.Proxy proxy56 = okHttpClient50.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool59 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient50.connectionPool = connectionPool59;
        com.squareup.okhttp.OkHttpClient okHttpClient61 = okHttpClient50.copyWithDefaults();
        java.net.Proxy proxy62 = okHttpClient61.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier63 = okHttpClient61.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient64 = okHttpClient42.setHostnameVerifier(hostnameVerifier63);
        com.squareup.okhttp.OkHttpClient okHttpClient65 = okHttpClient33.setHostnameVerifier(hostnameVerifier63);
        okHttpClient22.hostnameVerifier = hostnameVerifier63;
        com.squareup.okhttp.OkHttpClient okHttpClient67 = okHttpClient11.setHostnameVerifier(hostnameVerifier63);
        com.squareup.okhttp.OkHttpClient okHttpClient68 = okHttpClient0.setHostnameVerifier(hostnameVerifier63);
        javax.net.ssl.HostnameVerifier hostnameVerifier69 = okHttpClient0.getHostnameVerifier();
        java.net.ResponseCache responseCache70 = okHttpClient0.responseCache;
        java.net.ProxySelector proxySelector71 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient72 = okHttpClient0.setProxySelector(proxySelector71);
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache73 = okHttpClient72.okResponseCache();
        com.squareup.okhttp.ConnectionPool connectionPool74 = okHttpClient72.getConnectionPool();
        java.net.ResponseCache responseCache75 = okHttpClient72.getResponseCache();
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(okResponseCache12);
        org.junit.Assert.assertNotNull(okHttpClient14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNull(hostnameVerifier27);
        org.junit.Assert.assertNull(proxy28);
        org.junit.Assert.assertNull(hostnameVerifier38);
        org.junit.Assert.assertNull(sSLSocketFactory39);
        org.junit.Assert.assertNull(cookieHandler40);
        org.junit.Assert.assertNull(hostnameVerifier41);
        org.junit.Assert.assertNotNull(connectionPool43);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNull(hostnameVerifier55);
        org.junit.Assert.assertNull(proxy56);
        org.junit.Assert.assertNotNull(okHttpClient61);
        org.junit.Assert.assertNull(proxy62);
        org.junit.Assert.assertNotNull(hostnameVerifier63);
        org.junit.Assert.assertNotNull(okHttpClient64);
        org.junit.Assert.assertNotNull(okHttpClient65);
        org.junit.Assert.assertNotNull(okHttpClient67);
        org.junit.Assert.assertNotNull(okHttpClient68);
        org.junit.Assert.assertNotNull(hostnameVerifier69);
        org.junit.Assert.assertNull(responseCache70);
        org.junit.Assert.assertNotNull(okHttpClient72);
        org.junit.Assert.assertNull(okResponseCache73);
        org.junit.Assert.assertNotNull(connectionPool74);
        org.junit.Assert.assertNull(responseCache75);
    }

    @Test
    public void test12362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12362");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.CookieHandler cookieHandler8 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache9 = okHttpClient0.okResponseCache();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory10 = null;
        okHttpClient0.sslSocketFactory = sSLSocketFactory10;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        java.net.ProxySelector proxySelector13 = null;
        okHttpClient0.proxySelector = proxySelector13;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient0.copyWithDefaults();
        java.net.Proxy proxy16 = java.net.Proxy.NO_PROXY;
        boolean boolean18 = proxy16.equals((java.lang.Object) 1L);
        java.net.SocketAddress socketAddress19 = proxy16.address();
        java.net.SocketAddress socketAddress20 = proxy16.address();
        java.lang.String str21 = proxy16.toString();
        java.lang.String str22 = proxy16.toString();
        com.squareup.okhttp.OkHttpClient okHttpClient23 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool24 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient23.connectionPool = connectionPool24;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier27 = null;
        okHttpClient26.hostnameVerifier = hostnameVerifier27;
        java.net.ResponseCache responseCache29 = null;
        okHttpClient26.responseCache = responseCache29;
        java.util.List<java.lang.String> strList31 = okHttpClient26.transports;
        com.squareup.okhttp.ConnectionPool connectionPool32 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient26.connectionPool = connectionPool32;
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient23.setConnectionPool(connectionPool32);
        com.squareup.okhttp.ConnectionPool connectionPool35 = okHttpClient34.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator36 = okHttpClient34.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool39 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient34.connectionPool = connectionPool39;
        java.net.ResponseCache responseCache41 = okHttpClient34.responseCache;
        com.squareup.okhttp.ConnectionPool connectionPool44 = new com.squareup.okhttp.ConnectionPool((int) (byte) 0, 10L);
        okHttpClient34.connectionPool = connectionPool44;
        java.util.List<java.lang.String> strList46 = okHttpClient34.transports;
        java.util.List<java.lang.String> strList47 = okHttpClient34.transports;
        boolean boolean48 = proxy16.equals((java.lang.Object) okHttpClient34);
        java.net.CookieHandler cookieHandler49 = okHttpClient34.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient50 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier51 = null;
        okHttpClient50.hostnameVerifier = hostnameVerifier51;
        java.net.ProxySelector proxySelector53 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient54 = okHttpClient50.setProxySelector(proxySelector53);
        java.net.ResponseCache responseCache55 = null;
        okHttpClient54.responseCache = responseCache55;
        javax.net.ssl.HostnameVerifier hostnameVerifier57 = okHttpClient54.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient59 = okHttpClient54.setFollowProtocolRedirects(false);
        java.net.ProxySelector proxySelector60 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient61 = okHttpClient59.setProxySelector(proxySelector60);
        com.squareup.okhttp.OkHttpClient okHttpClient62 = okHttpClient61.copyWithDefaults();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory63 = okHttpClient62.sslSocketFactory;
        com.squareup.okhttp.OkHttpClient okHttpClient64 = okHttpClient34.setSSLSocketFactory(sSLSocketFactory63);
        com.squareup.okhttp.OkHttpClient okHttpClient65 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier66 = null;
        okHttpClient65.hostnameVerifier = hostnameVerifier66;
        java.net.ResponseCache responseCache68 = null;
        okHttpClient65.responseCache = responseCache68;
        java.util.List<java.lang.String> strList70 = okHttpClient65.transports;
        com.squareup.okhttp.ConnectionPool connectionPool71 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient65.connectionPool = connectionPool71;
        java.net.CookieHandler cookieHandler73 = okHttpClient65.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache74 = okHttpClient65.okResponseCache();
        java.net.CookieHandler cookieHandler75 = okHttpClient65.getCookieHandler();
        java.net.Proxy proxy76 = okHttpClient65.proxy;
        java.net.CookieHandler cookieHandler77 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient78 = okHttpClient65.setCookieHandler(cookieHandler77);
        com.squareup.okhttp.OkHttpClient okHttpClient79 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier80 = null;
        okHttpClient79.hostnameVerifier = hostnameVerifier80;
        boolean boolean82 = okHttpClient79.getFollowProtocolRedirects();
        java.net.Proxy proxy83 = okHttpClient79.proxy;
        java.util.List<java.lang.String> strList84 = okHttpClient79.transports;
        java.util.List<java.lang.String> strList85 = com.squareup.okhttp.OkHttpClient.DEFAULT_TRANSPORTS;
        okHttpClient79.transports = strList85;
        okHttpClient78.transports = strList85;
        okHttpClient64.transports = strList85;
        // The following exception was thrown during execution in test generation
        try {
            com.squareup.okhttp.OkHttpClient okHttpClient89 = okHttpClient15.setTransports(strList85);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: transports doesn't contain http/1.1: [hi!]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNull(cookieHandler8);
        org.junit.Assert.assertNull(okResponseCache9);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNotNull(proxy16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(socketAddress19);
        org.junit.Assert.assertNull(socketAddress20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "DIRECT" + "'", str21, "DIRECT");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "DIRECT" + "'", str22, "DIRECT");
        org.junit.Assert.assertNotNull(connectionPool24);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNotNull(connectionPool32);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertNotNull(connectionPool35);
        org.junit.Assert.assertNull(okAuthenticator36);
        org.junit.Assert.assertNull(responseCache41);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(cookieHandler49);
        org.junit.Assert.assertNotNull(okHttpClient54);
        org.junit.Assert.assertNull(hostnameVerifier57);
        org.junit.Assert.assertNotNull(okHttpClient59);
        org.junit.Assert.assertNotNull(okHttpClient61);
        org.junit.Assert.assertNotNull(okHttpClient62);
        org.junit.Assert.assertNotNull(sSLSocketFactory63);
        org.junit.Assert.assertNotNull(okHttpClient64);
        org.junit.Assert.assertNull(strList70);
        org.junit.Assert.assertNotNull(connectionPool71);
        org.junit.Assert.assertNull(cookieHandler73);
        org.junit.Assert.assertNull(okResponseCache74);
        org.junit.Assert.assertNull(cookieHandler75);
        org.junit.Assert.assertNull(proxy76);
        org.junit.Assert.assertNotNull(okHttpClient78);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNull(proxy83);
        org.junit.Assert.assertNull(strList84);
        org.junit.Assert.assertNotNull(strList85);
    }

    @Test
    public void test12363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12363");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache1 = okHttpClient0.okResponseCache();
        java.net.ResponseCache responseCache2 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.setResponseCache(responseCache2);
        com.squareup.okhttp.OkHttpClient okHttpClient4 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache5 = okHttpClient4.okResponseCache();
        java.net.ResponseCache responseCache6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient4.setResponseCache(responseCache6);
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList10 = new java.util.ArrayList<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        okHttpClient4.transports = strList10;
        okHttpClient0.transports = strList10;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier15 = null;
        okHttpClient14.hostnameVerifier = hostnameVerifier15;
        java.net.ResponseCache responseCache17 = null;
        okHttpClient14.responseCache = responseCache17;
        java.util.List<java.lang.String> strList19 = okHttpClient14.transports;
        com.squareup.okhttp.ConnectionPool connectionPool20 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient14.connectionPool = connectionPool20;
        java.net.CookieHandler cookieHandler22 = okHttpClient14.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache23 = okHttpClient14.okResponseCache();
        java.net.CookieHandler cookieHandler24 = okHttpClient14.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient25 = new com.squareup.okhttp.OkHttpClient(okHttpClient14);
        java.net.ResponseCache responseCache26 = okHttpClient14.responseCache;
        java.net.CookieHandler cookieHandler27 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient14.setCookieHandler(cookieHandler27);
        java.net.Proxy proxy29 = java.net.Proxy.NO_PROXY;
        boolean boolean31 = proxy29.equals((java.lang.Object) 1L);
        com.squareup.okhttp.OkHttpClient okHttpClient32 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache33 = okHttpClient32.okResponseCache();
        java.net.ResponseCache responseCache34 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient32.setResponseCache(responseCache34);
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList38 = new java.util.ArrayList<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        okHttpClient32.transports = strList38;
        boolean boolean41 = proxy29.equals((java.lang.Object) strList38);
        com.squareup.okhttp.OkHttpClient.DEFAULT_TRANSPORTS = strList38;
        okHttpClient28.transports = strList38;
        okHttpClient0.transports = strList38;
        com.squareup.okhttp.OkAuthenticator okAuthenticator45 = okHttpClient0.getAuthenticator();
        boolean boolean46 = okHttpClient0.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient47 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier48 = null;
        okHttpClient47.hostnameVerifier = hostnameVerifier48;
        java.net.ResponseCache responseCache50 = null;
        okHttpClient47.responseCache = responseCache50;
        java.util.List<java.lang.String> strList52 = okHttpClient47.transports;
        com.squareup.okhttp.ConnectionPool connectionPool53 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient47.connectionPool = connectionPool53;
        java.net.Proxy proxy55 = null;
        okHttpClient47.proxy = proxy55;
        java.util.Set<com.squareup.okhttp.Route> routeSet57 = okHttpClient47.failedRoutes;
        javax.net.ssl.HostnameVerifier hostnameVerifier58 = okHttpClient47.getHostnameVerifier();
        java.net.ProxySelector proxySelector59 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient60 = okHttpClient47.setProxySelector(proxySelector59);
        com.squareup.okhttp.OkHttpClient okHttpClient61 = okHttpClient60.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient62 = new com.squareup.okhttp.OkHttpClient(okHttpClient61);
        java.util.List<java.lang.String> strList63 = okHttpClient61.transports;
        com.squareup.okhttp.OkHttpClient.DEFAULT_TRANSPORTS = strList63;
        // The following exception was thrown during execution in test generation
        try {
            com.squareup.okhttp.OkHttpClient okHttpClient65 = okHttpClient0.setTransports(strList63);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: transports doesn't contain http/1.1: [hi!]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(okResponseCache1);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertNull(okResponseCache5);
        org.junit.Assert.assertNotNull(okHttpClient7);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNotNull(connectionPool20);
        org.junit.Assert.assertNull(cookieHandler22);
        org.junit.Assert.assertNull(okResponseCache23);
        org.junit.Assert.assertNull(cookieHandler24);
        org.junit.Assert.assertNull(responseCache26);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNotNull(proxy29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(okResponseCache33);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(okAuthenticator45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNotNull(connectionPool53);
        org.junit.Assert.assertNotNull(routeSet57);
        org.junit.Assert.assertNull(hostnameVerifier58);
        org.junit.Assert.assertNotNull(okHttpClient60);
        org.junit.Assert.assertNotNull(okHttpClient61);
        org.junit.Assert.assertNotNull(strList63);
    }

    @Test
    public void test12364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12364");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        javax.net.ssl.HostnameVerifier hostnameVerifier6 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier6;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache8 = okHttpClient0.okResponseCache();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory9 = okHttpClient0.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient10 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier11 = null;
        okHttpClient10.hostnameVerifier = hostnameVerifier11;
        java.net.ResponseCache responseCache13 = null;
        okHttpClient10.responseCache = responseCache13;
        javax.net.ssl.HostnameVerifier hostnameVerifier15 = okHttpClient10.hostnameVerifier;
        java.net.Proxy proxy16 = okHttpClient10.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool19 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient10.connectionPool = connectionPool19;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient10.copyWithDefaults();
        java.net.Proxy proxy22 = okHttpClient21.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier23 = okHttpClient21.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient0.setHostnameVerifier(hostnameVerifier23);
        java.util.Set<com.squareup.okhttp.Route> routeSet25 = okHttpClient24.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient24.copyWithDefaults();
        java.net.CookieHandler cookieHandler27 = null;
        okHttpClient24.cookieHandler = cookieHandler27;
        com.squareup.okhttp.OkHttpClient okHttpClient29 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool30 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient29.connectionPool = connectionPool30;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier33 = null;
        okHttpClient32.hostnameVerifier = hostnameVerifier33;
        java.net.ResponseCache responseCache35 = null;
        okHttpClient32.responseCache = responseCache35;
        java.util.List<java.lang.String> strList37 = okHttpClient32.transports;
        com.squareup.okhttp.ConnectionPool connectionPool38 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient32.connectionPool = connectionPool38;
        com.squareup.okhttp.OkHttpClient okHttpClient40 = okHttpClient29.setConnectionPool(connectionPool38);
        java.net.ResponseCache responseCache41 = okHttpClient29.getResponseCache();
        boolean boolean42 = okHttpClient29.followProtocolRedirects;
        com.squareup.okhttp.ConnectionPool connectionPool45 = new com.squareup.okhttp.ConnectionPool(1, (long) 'a');
        com.squareup.okhttp.OkHttpClient okHttpClient46 = okHttpClient29.setConnectionPool(connectionPool45);
        com.squareup.okhttp.OkHttpClient okHttpClient47 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool48 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient47.connectionPool = connectionPool48;
        com.squareup.okhttp.OkHttpClient okHttpClient50 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier51 = null;
        okHttpClient50.hostnameVerifier = hostnameVerifier51;
        java.net.ResponseCache responseCache53 = null;
        okHttpClient50.responseCache = responseCache53;
        java.util.List<java.lang.String> strList55 = okHttpClient50.transports;
        com.squareup.okhttp.ConnectionPool connectionPool56 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient50.connectionPool = connectionPool56;
        com.squareup.okhttp.OkHttpClient okHttpClient58 = okHttpClient47.setConnectionPool(connectionPool56);
        com.squareup.okhttp.OkAuthenticator okAuthenticator59 = okHttpClient58.getAuthenticator();
        java.net.ProxySelector proxySelector60 = okHttpClient58.getProxySelector();
        java.net.ProxySelector proxySelector61 = null;
        okHttpClient58.proxySelector = proxySelector61;
        java.net.ProxySelector proxySelector63 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient64 = okHttpClient58.setProxySelector(proxySelector63);
        java.net.CookieHandler cookieHandler65 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient66 = okHttpClient64.setCookieHandler(cookieHandler65);
        com.squareup.okhttp.OkHttpClient okHttpClient67 = okHttpClient64.copyWithDefaults();
        java.util.List<java.lang.String> strList68 = okHttpClient67.getTransports();
        okHttpClient46.transports = strList68;
        okHttpClient24.transports = strList68;
        java.net.ResponseCache responseCache71 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient72 = okHttpClient24.setResponseCache(responseCache71);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNull(okResponseCache8);
        org.junit.Assert.assertNull(sSLSocketFactory9);
        org.junit.Assert.assertNull(hostnameVerifier15);
        org.junit.Assert.assertNull(proxy16);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNull(proxy22);
        org.junit.Assert.assertNotNull(hostnameVerifier23);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNotNull(routeSet25);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNotNull(connectionPool30);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(connectionPool38);
        org.junit.Assert.assertNotNull(okHttpClient40);
        org.junit.Assert.assertNull(responseCache41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(okHttpClient46);
        org.junit.Assert.assertNotNull(connectionPool48);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertNotNull(connectionPool56);
        org.junit.Assert.assertNotNull(okHttpClient58);
        org.junit.Assert.assertNull(okAuthenticator59);
        org.junit.Assert.assertNull(proxySelector60);
        org.junit.Assert.assertNotNull(okHttpClient64);
        org.junit.Assert.assertNotNull(okHttpClient66);
        org.junit.Assert.assertNotNull(okHttpClient67);
        org.junit.Assert.assertNotNull(strList68);
        org.junit.Assert.assertNotNull(okHttpClient72);
    }

    @Test
    public void test12365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12365");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.ResponseCache responseCache5 = null;
        okHttpClient4.responseCache = responseCache5;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient4.setSSLSocketFactory(sSLSocketFactory7);
        com.squareup.okhttp.OkHttpClient okHttpClient9 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool10 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient9.connectionPool = connectionPool10;
        com.squareup.okhttp.OkAuthenticator okAuthenticator12 = null;
        okHttpClient9.authenticator = okAuthenticator12;
        java.util.List<java.lang.String> strList14 = okHttpClient9.transports;
        java.net.ResponseCache responseCache15 = null;
        okHttpClient9.responseCache = responseCache15;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = null;
        okHttpClient17.hostnameVerifier = hostnameVerifier18;
        java.net.ResponseCache responseCache20 = null;
        okHttpClient17.responseCache = responseCache20;
        javax.net.ssl.HostnameVerifier hostnameVerifier22 = okHttpClient17.hostnameVerifier;
        java.net.Proxy proxy23 = okHttpClient17.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool26 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient17.connectionPool = connectionPool26;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient17.copyWithDefaults();
        java.net.Proxy proxy29 = okHttpClient28.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = okHttpClient28.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient9.setHostnameVerifier(hostnameVerifier30);
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient8.setHostnameVerifier(hostnameVerifier30);
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient8.copyWithDefaults();
        java.lang.Class<?> wildcardClass34 = okHttpClient33.getClass();
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertNotNull(connectionPool10);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(hostnameVerifier22);
        org.junit.Assert.assertNull(proxy23);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNull(proxy29);
        org.junit.Assert.assertNotNull(hostnameVerifier30);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertNotNull(okHttpClient33);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test12366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12366");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.CookieHandler cookieHandler5 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = null;
        okHttpClient6.hostnameVerifier = hostnameVerifier7;
        java.net.ResponseCache responseCache9 = null;
        okHttpClient6.responseCache = responseCache9;
        java.util.List<java.lang.String> strList11 = okHttpClient6.transports;
        com.squareup.okhttp.ConnectionPool connectionPool12 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient6.connectionPool = connectionPool12;
        java.net.Proxy proxy14 = null;
        okHttpClient6.proxy = proxy14;
        java.util.Set<com.squareup.okhttp.Route> routeSet16 = okHttpClient6.failedRoutes;
        okHttpClient0.failedRoutes = routeSet16;
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient0.setHostnameVerifier(hostnameVerifier18);
        java.net.ProxySelector proxySelector20 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient19.setProxySelector(proxySelector20);
        java.net.Proxy proxy22 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress23 = proxy22.address();
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient19.setProxy(proxy22);
        java.net.ProxySelector proxySelector25 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient24.setProxySelector(proxySelector25);
        com.squareup.okhttp.ConnectionPool connectionPool27 = okHttpClient24.connectionPool;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = new com.squareup.okhttp.OkHttpClient(okHttpClient24);
        java.net.ResponseCache responseCache29 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient30 = okHttpClient24.setResponseCache(responseCache29);
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache31 = okHttpClient24.okResponseCache();
        java.net.ResponseCache responseCache32 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient24.setResponseCache(responseCache32);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNotNull(routeSet16);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNotNull(proxy22);
        org.junit.Assert.assertNull(socketAddress23);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNull(connectionPool27);
        org.junit.Assert.assertNotNull(okHttpClient30);
        org.junit.Assert.assertNull(okResponseCache31);
        org.junit.Assert.assertNotNull(okHttpClient33);
    }

    @Test
    public void test12367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12367");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        boolean boolean3 = okHttpClient0.getFollowProtocolRedirects();
        java.net.CookieHandler cookieHandler4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setCookieHandler(cookieHandler4);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory6 = okHttpClient5.sslSocketFactory;
        java.net.ProxySelector proxySelector7 = okHttpClient5.proxySelector;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = new com.squareup.okhttp.OkHttpClient(okHttpClient5);
        com.squareup.okhttp.OkHttpClient okHttpClient9 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool10 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient9.connectionPool = connectionPool10;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier13 = null;
        okHttpClient12.hostnameVerifier = hostnameVerifier13;
        java.net.ResponseCache responseCache15 = null;
        okHttpClient12.responseCache = responseCache15;
        java.util.List<java.lang.String> strList17 = okHttpClient12.transports;
        com.squareup.okhttp.ConnectionPool connectionPool18 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient12.connectionPool = connectionPool18;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient9.setConnectionPool(connectionPool18);
        java.net.Proxy proxy21 = okHttpClient20.proxy;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory22 = null;
        okHttpClient20.sslSocketFactory = sSLSocketFactory22;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier25 = null;
        okHttpClient24.hostnameVerifier = hostnameVerifier25;
        java.net.ResponseCache responseCache27 = null;
        okHttpClient24.responseCache = responseCache27;
        java.util.List<java.lang.String> strList29 = okHttpClient24.transports;
        com.squareup.okhttp.ConnectionPool connectionPool30 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient24.connectionPool = connectionPool30;
        com.squareup.okhttp.ConnectionPool connectionPool32 = okHttpClient24.connectionPool;
        int int33 = connectionPool32.getHttpConnectionCount();
        com.squareup.okhttp.Address address34 = null;
        com.squareup.okhttp.Connection connection35 = connectionPool32.get(address34);
        okHttpClient20.connectionPool = connectionPool32;
        java.net.ProxySelector proxySelector37 = okHttpClient20.proxySelector;
        java.net.Proxy proxy38 = java.net.Proxy.NO_PROXY;
        boolean boolean40 = proxy38.equals((java.lang.Object) 1L);
        com.squareup.okhttp.OkHttpClient okHttpClient41 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache42 = okHttpClient41.okResponseCache();
        java.net.ResponseCache responseCache43 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient44 = okHttpClient41.setResponseCache(responseCache43);
        java.lang.String[] strArray46 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList47 = new java.util.ArrayList<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        okHttpClient41.transports = strList47;
        boolean boolean50 = proxy38.equals((java.lang.Object) strList47);
        okHttpClient20.proxy = proxy38;
        java.lang.String str52 = proxy38.toString();
        java.lang.String str53 = proxy38.toString();
        com.squareup.okhttp.OkHttpClient okHttpClient54 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier55 = null;
        okHttpClient54.hostnameVerifier = hostnameVerifier55;
        java.net.ResponseCache responseCache57 = null;
        okHttpClient54.responseCache = responseCache57;
        javax.net.ssl.HostnameVerifier hostnameVerifier59 = okHttpClient54.hostnameVerifier;
        java.net.Proxy proxy60 = okHttpClient54.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool63 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient54.connectionPool = connectionPool63;
        com.squareup.okhttp.OkHttpClient okHttpClient65 = okHttpClient54.copyWithDefaults();
        java.net.ResponseCache responseCache66 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient67 = okHttpClient65.setResponseCache(responseCache66);
        java.net.ProxySelector proxySelector68 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient69 = okHttpClient65.setProxySelector(proxySelector68);
        com.squareup.okhttp.OkAuthenticator okAuthenticator70 = okHttpClient69.getAuthenticator();
        com.squareup.okhttp.OkAuthenticator okAuthenticator71 = okHttpClient69.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient72 = okHttpClient69.copyWithDefaults();
        boolean boolean73 = proxy38.equals((java.lang.Object) okHttpClient72);
        java.net.Proxy.Type type74 = proxy38.type();
        java.lang.String str75 = proxy38.toString();
        com.squareup.okhttp.OkHttpClient okHttpClient76 = okHttpClient8.setProxy(proxy38);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(sSLSocketFactory6);
        org.junit.Assert.assertNull(proxySelector7);
        org.junit.Assert.assertNotNull(connectionPool10);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNotNull(connectionPool18);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNull(proxy21);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(connectionPool30);
        org.junit.Assert.assertNotNull(connectionPool32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNull(connection35);
        org.junit.Assert.assertNull(proxySelector37);
        org.junit.Assert.assertNotNull(proxy38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(okResponseCache42);
        org.junit.Assert.assertNotNull(okHttpClient44);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "DIRECT" + "'", str52, "DIRECT");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "DIRECT" + "'", str53, "DIRECT");
        org.junit.Assert.assertNull(hostnameVerifier59);
        org.junit.Assert.assertNull(proxy60);
        org.junit.Assert.assertNotNull(okHttpClient65);
        org.junit.Assert.assertNotNull(okHttpClient67);
        org.junit.Assert.assertNotNull(okHttpClient69);
        org.junit.Assert.assertNotNull(okAuthenticator70);
        org.junit.Assert.assertNotNull(okAuthenticator71);
        org.junit.Assert.assertNotNull(okHttpClient72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + type74 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type74.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "DIRECT" + "'", str75, "DIRECT");
        org.junit.Assert.assertNotNull(okHttpClient76);
    }

    @Test
    public void test12368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12368");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache5 = okHttpClient0.okResponseCache();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory6);
        java.net.ProxySelector proxySelector8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient0.setProxySelector(proxySelector8);
        java.net.ResponseCache responseCache10 = okHttpClient0.getResponseCache();
        com.squareup.okhttp.ConnectionPool connectionPool11 = okHttpClient0.getConnectionPool();
        com.squareup.okhttp.OkHttpClient okHttpClient12 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier13 = null;
        okHttpClient12.hostnameVerifier = hostnameVerifier13;
        java.net.ResponseCache responseCache15 = null;
        okHttpClient12.responseCache = responseCache15;
        java.util.List<java.lang.String> strList17 = okHttpClient12.transports;
        com.squareup.okhttp.ConnectionPool connectionPool18 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient12.connectionPool = connectionPool18;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient12.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient21 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier22 = null;
        okHttpClient21.hostnameVerifier = hostnameVerifier22;
        java.net.ResponseCache responseCache24 = null;
        okHttpClient21.responseCache = responseCache24;
        java.util.List<java.lang.String> strList26 = okHttpClient21.transports;
        com.squareup.okhttp.ConnectionPool connectionPool27 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient21.connectionPool = connectionPool27;
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient21.copyWithDefaults();
        java.net.ProxySelector proxySelector30 = okHttpClient29.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory31 = okHttpClient29.getSslSocketFactory();
        okHttpClient12.sslSocketFactory = sSLSocketFactory31;
        java.net.Socket socket33 = sSLSocketFactory31.createSocket();
        java.net.Socket socket34 = sSLSocketFactory31.createSocket();
        okHttpClient0.sslSocketFactory = sSLSocketFactory31;
        java.lang.String[] strArray36 = sSLSocketFactory31.getSupportedCipherSuites();
        java.lang.String[] strArray37 = sSLSocketFactory31.getSupportedCipherSuites();
        java.net.InetAddress inetAddress38 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket40 = sSLSocketFactory31.createSocket(inetAddress38, 0);
            org.junit.Assert.fail("Expected exception of type java.net.ConnectException; message: Connection refused (Connection refused)");
        } catch (java.net.ConnectException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(okResponseCache5);
        org.junit.Assert.assertNotNull(okHttpClient7);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNull(responseCache10);
        org.junit.Assert.assertNull(connectionPool11);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNotNull(connectionPool18);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNotNull(connectionPool27);
        org.junit.Assert.assertNotNull(okHttpClient29);
// flaky:         org.junit.Assert.assertNull(proxySelector30);
        org.junit.Assert.assertNotNull(sSLSocketFactory31);
        org.junit.Assert.assertNotNull(socket33);
        org.junit.Assert.assertEquals(socket33.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(socket34);
        org.junit.Assert.assertEquals(socket34.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(strArray37);
    }

    @Test
    public void test12369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12369");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.Proxy proxy8 = null;
        okHttpClient0.proxy = proxy8;
        java.util.Set<com.squareup.okhttp.Route> routeSet10 = okHttpClient0.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = null;
        okHttpClient11.hostnameVerifier = hostnameVerifier12;
        java.net.ResponseCache responseCache14 = null;
        okHttpClient11.responseCache = responseCache14;
        javax.net.ssl.HostnameVerifier hostnameVerifier16 = okHttpClient11.hostnameVerifier;
        java.net.Proxy proxy17 = okHttpClient11.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool20 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient11.connectionPool = connectionPool20;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient11.copyWithDefaults();
        java.net.ResponseCache responseCache23 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient22.setResponseCache(responseCache23);
        com.squareup.okhttp.OkAuthenticator okAuthenticator25 = okHttpClient22.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier27 = null;
        okHttpClient26.hostnameVerifier = hostnameVerifier27;
        java.net.ProxySelector proxySelector29 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient30 = okHttpClient26.setProxySelector(proxySelector29);
        java.net.CookieHandler cookieHandler31 = okHttpClient26.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient32 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier33 = null;
        okHttpClient32.hostnameVerifier = hostnameVerifier33;
        java.net.ResponseCache responseCache35 = null;
        okHttpClient32.responseCache = responseCache35;
        java.util.List<java.lang.String> strList37 = okHttpClient32.transports;
        com.squareup.okhttp.ConnectionPool connectionPool38 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient32.connectionPool = connectionPool38;
        java.net.Proxy proxy40 = null;
        okHttpClient32.proxy = proxy40;
        java.util.Set<com.squareup.okhttp.Route> routeSet42 = okHttpClient32.failedRoutes;
        okHttpClient26.failedRoutes = routeSet42;
        javax.net.ssl.HostnameVerifier hostnameVerifier44 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient45 = okHttpClient26.setHostnameVerifier(hostnameVerifier44);
        java.net.ProxySelector proxySelector46 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient47 = okHttpClient45.setProxySelector(proxySelector46);
        com.squareup.okhttp.OkHttpClient okHttpClient49 = okHttpClient45.setFollowProtocolRedirects(true);
        com.squareup.okhttp.OkHttpClient okHttpClient50 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool51 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient50.connectionPool = connectionPool51;
        com.squareup.okhttp.OkHttpClient okHttpClient53 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier54 = null;
        okHttpClient53.hostnameVerifier = hostnameVerifier54;
        java.net.ResponseCache responseCache56 = null;
        okHttpClient53.responseCache = responseCache56;
        java.util.List<java.lang.String> strList58 = okHttpClient53.transports;
        com.squareup.okhttp.ConnectionPool connectionPool59 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient53.connectionPool = connectionPool59;
        com.squareup.okhttp.OkHttpClient okHttpClient61 = okHttpClient50.setConnectionPool(connectionPool59);
        java.net.Proxy proxy62 = okHttpClient61.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient63 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool64 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient63.connectionPool = connectionPool64;
        int int66 = connectionPool64.getSpdyConnectionCount();
        okHttpClient61.connectionPool = connectionPool64;
        com.squareup.okhttp.OkHttpClient okHttpClient68 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier69 = null;
        okHttpClient68.hostnameVerifier = hostnameVerifier69;
        java.net.ResponseCache responseCache71 = null;
        okHttpClient68.responseCache = responseCache71;
        javax.net.ssl.HostnameVerifier hostnameVerifier73 = okHttpClient68.hostnameVerifier;
        java.net.Proxy proxy74 = okHttpClient68.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool77 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient68.connectionPool = connectionPool77;
        com.squareup.okhttp.OkHttpClient okHttpClient79 = okHttpClient68.copyWithDefaults();
        java.net.ResponseCache responseCache80 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient81 = okHttpClient79.setResponseCache(responseCache80);
        com.squareup.okhttp.OkAuthenticator okAuthenticator82 = okHttpClient79.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient83 = okHttpClient61.setAuthenticator(okAuthenticator82);
        com.squareup.okhttp.OkHttpClient okHttpClient84 = okHttpClient45.setAuthenticator(okAuthenticator82);
        com.squareup.okhttp.OkHttpClient okHttpClient85 = okHttpClient22.setAuthenticator(okAuthenticator82);
        com.squareup.okhttp.OkHttpClient okHttpClient86 = okHttpClient0.setAuthenticator(okAuthenticator82);
        com.squareup.okhttp.ConnectionPool connectionPool87 = okHttpClient0.getConnectionPool();
        com.squareup.okhttp.ConnectionPool connectionPool88 = null;
        okHttpClient0.connectionPool = connectionPool88;
        com.squareup.okhttp.OkHttpClient okHttpClient90 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        java.net.ProxySelector proxySelector91 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient92 = okHttpClient90.setProxySelector(proxySelector91);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNotNull(routeSet10);
        org.junit.Assert.assertNull(hostnameVerifier16);
        org.junit.Assert.assertNull(proxy17);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNotNull(okAuthenticator25);
        org.junit.Assert.assertNotNull(okHttpClient30);
        org.junit.Assert.assertNull(cookieHandler31);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(connectionPool38);
        org.junit.Assert.assertNotNull(routeSet42);
        org.junit.Assert.assertNotNull(okHttpClient45);
        org.junit.Assert.assertNotNull(okHttpClient47);
        org.junit.Assert.assertNotNull(okHttpClient49);
        org.junit.Assert.assertNotNull(connectionPool51);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNotNull(connectionPool59);
        org.junit.Assert.assertNotNull(okHttpClient61);
        org.junit.Assert.assertNull(proxy62);
        org.junit.Assert.assertNotNull(connectionPool64);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNull(hostnameVerifier73);
        org.junit.Assert.assertNull(proxy74);
        org.junit.Assert.assertNotNull(okHttpClient79);
        org.junit.Assert.assertNotNull(okHttpClient81);
        org.junit.Assert.assertNotNull(okAuthenticator82);
        org.junit.Assert.assertNotNull(okHttpClient83);
        org.junit.Assert.assertNotNull(okHttpClient84);
        org.junit.Assert.assertNotNull(okHttpClient85);
        org.junit.Assert.assertNotNull(okHttpClient86);
        org.junit.Assert.assertNotNull(connectionPool87);
        org.junit.Assert.assertNotNull(okHttpClient92);
    }

    @Test
    public void test12370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12370");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.Proxy proxy8 = null;
        okHttpClient0.proxy = proxy8;
        boolean boolean10 = okHttpClient0.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient0.setFollowProtocolRedirects(true);
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = null;
        okHttpClient13.hostnameVerifier = hostnameVerifier14;
        java.net.ResponseCache responseCache16 = null;
        okHttpClient13.responseCache = responseCache16;
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = okHttpClient13.hostnameVerifier;
        java.net.Proxy proxy19 = okHttpClient13.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient20 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache21 = okHttpClient20.okResponseCache();
        java.net.ResponseCache responseCache22 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient20.setResponseCache(responseCache22);
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList26 = new java.util.ArrayList<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        okHttpClient20.transports = strList26;
        okHttpClient13.transports = strList26;
        java.net.Proxy proxy30 = okHttpClient13.getProxy();
        boolean boolean31 = okHttpClient13.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool33 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient32.connectionPool = connectionPool33;
        com.squareup.okhttp.OkHttpClient okHttpClient35 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier36 = null;
        okHttpClient35.hostnameVerifier = hostnameVerifier36;
        java.net.ResponseCache responseCache38 = null;
        okHttpClient35.responseCache = responseCache38;
        java.util.List<java.lang.String> strList40 = okHttpClient35.transports;
        com.squareup.okhttp.ConnectionPool connectionPool41 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient35.connectionPool = connectionPool41;
        com.squareup.okhttp.OkHttpClient okHttpClient43 = okHttpClient32.setConnectionPool(connectionPool41);
        java.net.Proxy proxy44 = okHttpClient43.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient45 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool46 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient45.connectionPool = connectionPool46;
        int int48 = connectionPool46.getSpdyConnectionCount();
        okHttpClient43.connectionPool = connectionPool46;
        com.squareup.okhttp.OkHttpClient okHttpClient50 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier51 = null;
        okHttpClient50.hostnameVerifier = hostnameVerifier51;
        java.net.ResponseCache responseCache53 = null;
        okHttpClient50.responseCache = responseCache53;
        javax.net.ssl.HostnameVerifier hostnameVerifier55 = okHttpClient50.hostnameVerifier;
        java.net.Proxy proxy56 = okHttpClient50.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool59 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient50.connectionPool = connectionPool59;
        com.squareup.okhttp.OkHttpClient okHttpClient61 = okHttpClient50.copyWithDefaults();
        java.net.ResponseCache responseCache62 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient63 = okHttpClient61.setResponseCache(responseCache62);
        com.squareup.okhttp.OkAuthenticator okAuthenticator64 = okHttpClient61.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient65 = okHttpClient43.setAuthenticator(okAuthenticator64);
        okHttpClient13.authenticator = okAuthenticator64;
        com.squareup.okhttp.OkHttpClient okHttpClient67 = okHttpClient12.setAuthenticator(okAuthenticator64);
        com.squareup.okhttp.OkHttpClient okHttpClient68 = okHttpClient67.copyWithDefaults();
        java.net.ProxySelector proxySelector69 = okHttpClient68.proxySelector;
        java.net.Proxy proxy70 = okHttpClient68.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool73 = new com.squareup.okhttp.ConnectionPool((-1), (long) (short) 100);
        com.squareup.okhttp.OkHttpClient okHttpClient74 = okHttpClient68.setConnectionPool(connectionPool73);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertNull(hostnameVerifier18);
        org.junit.Assert.assertNull(proxy19);
        org.junit.Assert.assertNull(okResponseCache21);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(proxy30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(connectionPool33);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNotNull(connectionPool41);
        org.junit.Assert.assertNotNull(okHttpClient43);
        org.junit.Assert.assertNull(proxy44);
        org.junit.Assert.assertNotNull(connectionPool46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNull(hostnameVerifier55);
        org.junit.Assert.assertNull(proxy56);
        org.junit.Assert.assertNotNull(okHttpClient61);
        org.junit.Assert.assertNotNull(okHttpClient63);
        org.junit.Assert.assertNotNull(okAuthenticator64);
        org.junit.Assert.assertNotNull(okHttpClient65);
        org.junit.Assert.assertNotNull(okHttpClient67);
        org.junit.Assert.assertNotNull(okHttpClient68);
// flaky:         org.junit.Assert.assertNull(proxySelector69);
        org.junit.Assert.assertNull(proxy70);
        org.junit.Assert.assertNotNull(okHttpClient74);
    }

    @Test
    public void test12371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12371");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.CookieHandler cookieHandler5 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = null;
        okHttpClient6.hostnameVerifier = hostnameVerifier7;
        java.net.ResponseCache responseCache9 = null;
        okHttpClient6.responseCache = responseCache9;
        java.util.List<java.lang.String> strList11 = okHttpClient6.transports;
        com.squareup.okhttp.ConnectionPool connectionPool12 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient6.connectionPool = connectionPool12;
        java.net.Proxy proxy14 = null;
        okHttpClient6.proxy = proxy14;
        java.util.Set<com.squareup.okhttp.Route> routeSet16 = okHttpClient6.failedRoutes;
        okHttpClient0.failedRoutes = routeSet16;
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient0.setHostnameVerifier(hostnameVerifier18);
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache20 = okHttpClient0.okResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator21 = okHttpClient0.getAuthenticator();
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient0.setFollowProtocolRedirects(true);
        java.net.ResponseCache responseCache24 = null;
        okHttpClient0.responseCache = responseCache24;
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNotNull(routeSet16);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNull(okResponseCache20);
        org.junit.Assert.assertNull(okAuthenticator21);
        org.junit.Assert.assertNotNull(okHttpClient23);
    }

    @Test
    public void test12372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12372");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.ConnectionPool connectionPool12 = okHttpClient11.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator13 = okHttpClient11.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool14 = okHttpClient11.getConnectionPool();
        java.net.ResponseCache responseCache15 = okHttpClient11.getResponseCache();
        java.util.List<java.lang.String> strList16 = okHttpClient11.transports;
        java.net.CookieHandler cookieHandler17 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient11.setCookieHandler(cookieHandler17);
        com.squareup.okhttp.OkHttpClient okHttpClient19 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool20 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient19.connectionPool = connectionPool20;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier23 = null;
        okHttpClient22.hostnameVerifier = hostnameVerifier23;
        java.net.ResponseCache responseCache25 = null;
        okHttpClient22.responseCache = responseCache25;
        java.util.List<java.lang.String> strList27 = okHttpClient22.transports;
        com.squareup.okhttp.ConnectionPool connectionPool28 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient22.connectionPool = connectionPool28;
        com.squareup.okhttp.OkHttpClient okHttpClient30 = okHttpClient19.setConnectionPool(connectionPool28);
        java.net.ResponseCache responseCache31 = okHttpClient19.responseCache;
        java.net.ResponseCache responseCache32 = okHttpClient19.getResponseCache();
        java.net.ResponseCache responseCache33 = okHttpClient19.responseCache;
        java.net.ResponseCache responseCache34 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient19.setResponseCache(responseCache34);
        com.squareup.okhttp.OkHttpClient okHttpClient36 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier37 = null;
        okHttpClient36.hostnameVerifier = hostnameVerifier37;
        boolean boolean39 = okHttpClient36.getFollowProtocolRedirects();
        java.net.CookieHandler cookieHandler40 = okHttpClient36.cookieHandler;
        com.squareup.okhttp.OkHttpClient okHttpClient41 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier42 = null;
        okHttpClient41.hostnameVerifier = hostnameVerifier42;
        java.net.ResponseCache responseCache44 = null;
        okHttpClient41.responseCache = responseCache44;
        javax.net.ssl.HostnameVerifier hostnameVerifier46 = okHttpClient41.hostnameVerifier;
        java.net.Proxy proxy47 = okHttpClient41.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool50 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient41.connectionPool = connectionPool50;
        com.squareup.okhttp.OkHttpClient okHttpClient52 = okHttpClient41.copyWithDefaults();
        java.net.ResponseCache responseCache53 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient54 = okHttpClient52.setResponseCache(responseCache53);
        com.squareup.okhttp.OkAuthenticator okAuthenticator55 = okHttpClient52.authenticator;
        okHttpClient36.authenticator = okAuthenticator55;
        com.squareup.okhttp.OkHttpClient okHttpClient57 = okHttpClient19.setAuthenticator(okAuthenticator55);
        java.net.Proxy proxy58 = okHttpClient19.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient59 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier60 = null;
        okHttpClient59.hostnameVerifier = hostnameVerifier60;
        java.net.ResponseCache responseCache62 = null;
        okHttpClient59.responseCache = responseCache62;
        java.util.List<java.lang.String> strList64 = okHttpClient59.transports;
        com.squareup.okhttp.ConnectionPool connectionPool65 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient59.connectionPool = connectionPool65;
        java.net.CookieHandler cookieHandler67 = okHttpClient59.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache68 = okHttpClient59.okResponseCache();
        java.net.CookieHandler cookieHandler69 = okHttpClient59.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient70 = new com.squareup.okhttp.OkHttpClient(okHttpClient59);
        java.net.Proxy proxy71 = java.net.Proxy.NO_PROXY;
        boolean boolean73 = proxy71.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type74 = proxy71.type();
        java.net.SocketAddress socketAddress75 = proxy71.address();
        com.squareup.okhttp.OkHttpClient okHttpClient76 = okHttpClient59.setProxy(proxy71);
        java.lang.String str77 = proxy71.toString();
        java.net.Proxy.Type type78 = proxy71.type();
        okHttpClient19.proxy = proxy71;
        java.net.Proxy.Type type80 = proxy71.type();
        okHttpClient18.proxy = proxy71;
        com.squareup.okhttp.OkHttpClient okHttpClient82 = new com.squareup.okhttp.OkHttpClient(okHttpClient18);
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNull(okAuthenticator13);
        org.junit.Assert.assertNotNull(connectionPool14);
        org.junit.Assert.assertNull(responseCache15);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNotNull(connectionPool20);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNotNull(connectionPool28);
        org.junit.Assert.assertNotNull(okHttpClient30);
        org.junit.Assert.assertNull(responseCache31);
        org.junit.Assert.assertNull(responseCache32);
        org.junit.Assert.assertNull(responseCache33);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(cookieHandler40);
        org.junit.Assert.assertNull(hostnameVerifier46);
        org.junit.Assert.assertNull(proxy47);
        org.junit.Assert.assertNotNull(okHttpClient52);
        org.junit.Assert.assertNotNull(okHttpClient54);
        org.junit.Assert.assertNotNull(okAuthenticator55);
        org.junit.Assert.assertNotNull(okHttpClient57);
        org.junit.Assert.assertNull(proxy58);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNotNull(connectionPool65);
        org.junit.Assert.assertNull(cookieHandler67);
        org.junit.Assert.assertNull(okResponseCache68);
        org.junit.Assert.assertNull(cookieHandler69);
        org.junit.Assert.assertNotNull(proxy71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + type74 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type74.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress75);
        org.junit.Assert.assertNotNull(okHttpClient76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "DIRECT" + "'", str77, "DIRECT");
        org.junit.Assert.assertTrue("'" + type78 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type78.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertTrue("'" + type80 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type80.equals(java.net.Proxy.Type.DIRECT));
    }

    @Test
    public void test12373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12373");
        com.squareup.okhttp.ConnectionPool connectionPool2 = new com.squareup.okhttp.ConnectionPool((int) (short) 10, (long) (-1));
        com.squareup.okhttp.Connection connection3 = null;
        // The following exception was thrown during execution in test generation
        try {
            connectionPool2.recycle(connection3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test12374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12374");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.CookieHandler cookieHandler8 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache9 = okHttpClient0.okResponseCache();
        java.net.CookieHandler cookieHandler10 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory12 = okHttpClient11.sslSocketFactory;
        java.net.Proxy proxy13 = okHttpClient11.proxy;
        java.net.Proxy proxy14 = okHttpClient11.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier16 = null;
        okHttpClient15.hostnameVerifier = hostnameVerifier16;
        java.net.ResponseCache responseCache18 = null;
        okHttpClient15.responseCache = responseCache18;
        java.util.List<java.lang.String> strList20 = okHttpClient15.transports;
        com.squareup.okhttp.ConnectionPool connectionPool21 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient15.connectionPool = connectionPool21;
        java.net.CookieHandler cookieHandler23 = okHttpClient15.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache24 = okHttpClient15.okResponseCache();
        java.net.CookieHandler cookieHandler25 = okHttpClient15.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient26 = new com.squareup.okhttp.OkHttpClient(okHttpClient15);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory27 = okHttpClient26.sslSocketFactory;
        com.squareup.okhttp.OkAuthenticator okAuthenticator28 = okHttpClient26.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient29 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = null;
        okHttpClient29.hostnameVerifier = hostnameVerifier30;
        java.net.ResponseCache responseCache32 = null;
        okHttpClient29.responseCache = responseCache32;
        java.util.List<java.lang.String> strList34 = okHttpClient29.transports;
        com.squareup.okhttp.ConnectionPool connectionPool35 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient29.connectionPool = connectionPool35;
        java.net.CookieHandler cookieHandler37 = okHttpClient29.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache38 = okHttpClient29.okResponseCache();
        java.net.CookieHandler cookieHandler39 = okHttpClient29.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient40 = new com.squareup.okhttp.OkHttpClient(okHttpClient29);
        com.squareup.okhttp.OkHttpClient okHttpClient41 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier42 = null;
        okHttpClient41.hostnameVerifier = hostnameVerifier42;
        java.net.ProxySelector proxySelector44 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient45 = okHttpClient41.setProxySelector(proxySelector44);
        java.net.CookieHandler cookieHandler46 = okHttpClient41.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient47 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier48 = null;
        okHttpClient47.hostnameVerifier = hostnameVerifier48;
        java.net.ResponseCache responseCache50 = null;
        okHttpClient47.responseCache = responseCache50;
        java.util.List<java.lang.String> strList52 = okHttpClient47.transports;
        com.squareup.okhttp.ConnectionPool connectionPool53 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient47.connectionPool = connectionPool53;
        java.net.Proxy proxy55 = null;
        okHttpClient47.proxy = proxy55;
        java.util.Set<com.squareup.okhttp.Route> routeSet57 = okHttpClient47.failedRoutes;
        okHttpClient41.failedRoutes = routeSet57;
        okHttpClient40.failedRoutes = routeSet57;
        okHttpClient26.failedRoutes = routeSet57;
        okHttpClient11.failedRoutes = routeSet57;
        com.squareup.okhttp.OkAuthenticator okAuthenticator62 = null;
        okHttpClient11.authenticator = okAuthenticator62;
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNull(cookieHandler8);
        org.junit.Assert.assertNull(okResponseCache9);
        org.junit.Assert.assertNull(cookieHandler10);
        org.junit.Assert.assertNull(sSLSocketFactory12);
        org.junit.Assert.assertNull(proxy13);
        org.junit.Assert.assertNull(proxy14);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(connectionPool21);
        org.junit.Assert.assertNull(cookieHandler23);
        org.junit.Assert.assertNull(okResponseCache24);
        org.junit.Assert.assertNull(cookieHandler25);
        org.junit.Assert.assertNull(sSLSocketFactory27);
        org.junit.Assert.assertNull(okAuthenticator28);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(connectionPool35);
        org.junit.Assert.assertNull(cookieHandler37);
        org.junit.Assert.assertNull(okResponseCache38);
        org.junit.Assert.assertNull(cookieHandler39);
        org.junit.Assert.assertNotNull(okHttpClient45);
        org.junit.Assert.assertNull(cookieHandler46);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNotNull(connectionPool53);
        org.junit.Assert.assertNotNull(routeSet57);
    }

    @Test
    public void test12375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12375");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory8 = okHttpClient0.getSslSocketFactory();
        java.net.CookieHandler cookieHandler9 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.ConnectionPool connectionPool10 = okHttpClient0.connectionPool;
        com.squareup.okhttp.Address address11 = null;
        com.squareup.okhttp.Connection connection12 = connectionPool10.get(address11);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNull(sSLSocketFactory8);
        org.junit.Assert.assertNull(cookieHandler9);
        org.junit.Assert.assertNotNull(connectionPool10);
        org.junit.Assert.assertNull(connection12);
    }

    @Test
    public void test12376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12376");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache1 = okHttpClient0.okResponseCache();
        java.net.ProxySelector proxySelector2 = okHttpClient0.proxySelector;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        com.squareup.okhttp.OkAuthenticator okAuthenticator4 = okHttpClient3.authenticator;
        java.util.List<java.lang.String> strList5 = okHttpClient3.getTransports();
        com.squareup.okhttp.OkAuthenticator okAuthenticator6 = okHttpClient3.getAuthenticator();
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool8 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient7.connectionPool = connectionPool8;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier11 = null;
        okHttpClient10.hostnameVerifier = hostnameVerifier11;
        java.net.ResponseCache responseCache13 = null;
        okHttpClient10.responseCache = responseCache13;
        java.util.List<java.lang.String> strList15 = okHttpClient10.transports;
        com.squareup.okhttp.ConnectionPool connectionPool16 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient10.connectionPool = connectionPool16;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient7.setConnectionPool(connectionPool16);
        java.net.ResponseCache responseCache19 = okHttpClient7.responseCache;
        java.net.ResponseCache responseCache20 = okHttpClient7.getResponseCache();
        java.net.ResponseCache responseCache21 = okHttpClient7.responseCache;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache23 = okHttpClient22.okResponseCache();
        java.net.ResponseCache responseCache24 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient22.setResponseCache(responseCache24);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory26 = okHttpClient22.sslSocketFactory;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory27 = okHttpClient22.sslSocketFactory;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier29 = null;
        okHttpClient28.hostnameVerifier = hostnameVerifier29;
        boolean boolean31 = okHttpClient28.getFollowProtocolRedirects();
        java.net.CookieHandler cookieHandler32 = okHttpClient28.cookieHandler;
        com.squareup.okhttp.OkHttpClient okHttpClient33 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier34 = null;
        okHttpClient33.hostnameVerifier = hostnameVerifier34;
        java.net.ResponseCache responseCache36 = null;
        okHttpClient33.responseCache = responseCache36;
        javax.net.ssl.HostnameVerifier hostnameVerifier38 = okHttpClient33.hostnameVerifier;
        java.net.Proxy proxy39 = okHttpClient33.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool42 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient33.connectionPool = connectionPool42;
        com.squareup.okhttp.OkHttpClient okHttpClient44 = okHttpClient33.copyWithDefaults();
        java.net.ResponseCache responseCache45 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient46 = okHttpClient44.setResponseCache(responseCache45);
        com.squareup.okhttp.OkAuthenticator okAuthenticator47 = okHttpClient44.authenticator;
        okHttpClient28.authenticator = okAuthenticator47;
        com.squareup.okhttp.OkHttpClient okHttpClient49 = okHttpClient22.setAuthenticator(okAuthenticator47);
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient7.setAuthenticator(okAuthenticator47);
        javax.net.ssl.HostnameVerifier hostnameVerifier51 = okHttpClient7.getHostnameVerifier();
        com.squareup.okhttp.OkAuthenticator okAuthenticator52 = okHttpClient7.getAuthenticator();
        com.squareup.okhttp.OkAuthenticator okAuthenticator53 = okHttpClient7.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient54 = okHttpClient3.setAuthenticator(okAuthenticator53);
        org.junit.Assert.assertNull(okResponseCache1);
        org.junit.Assert.assertNull(proxySelector2);
        org.junit.Assert.assertNull(okAuthenticator4);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNull(okAuthenticator6);
        org.junit.Assert.assertNotNull(connectionPool8);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(connectionPool16);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNull(responseCache19);
        org.junit.Assert.assertNull(responseCache20);
        org.junit.Assert.assertNull(responseCache21);
        org.junit.Assert.assertNull(okResponseCache23);
        org.junit.Assert.assertNotNull(okHttpClient25);
        org.junit.Assert.assertNull(sSLSocketFactory26);
        org.junit.Assert.assertNull(sSLSocketFactory27);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(cookieHandler32);
        org.junit.Assert.assertNull(hostnameVerifier38);
        org.junit.Assert.assertNull(proxy39);
        org.junit.Assert.assertNotNull(okHttpClient44);
        org.junit.Assert.assertNotNull(okHttpClient46);
        org.junit.Assert.assertNotNull(okAuthenticator47);
        org.junit.Assert.assertNotNull(okHttpClient49);
        org.junit.Assert.assertNotNull(okHttpClient50);
        org.junit.Assert.assertNull(hostnameVerifier51);
        org.junit.Assert.assertNotNull(okAuthenticator52);
        org.junit.Assert.assertNotNull(okAuthenticator53);
        org.junit.Assert.assertNotNull(okHttpClient54);
    }

    @Test
    public void test12377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12377");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        okHttpClient0.authenticator = okAuthenticator3;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.copyWithDefaults();
        java.net.ResponseCache responseCache6 = okHttpClient0.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator7 = okHttpClient0.getAuthenticator();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier9 = null;
        okHttpClient8.hostnameVerifier = hostnameVerifier9;
        java.net.ResponseCache responseCache11 = null;
        okHttpClient8.responseCache = responseCache11;
        javax.net.ssl.HostnameVerifier hostnameVerifier13 = okHttpClient8.hostnameVerifier;
        java.net.Proxy proxy14 = okHttpClient8.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool17 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient8.connectionPool = connectionPool17;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient8.copyWithDefaults();
        java.net.Proxy proxy20 = okHttpClient19.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient21 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier22 = null;
        okHttpClient21.hostnameVerifier = hostnameVerifier22;
        java.net.ResponseCache responseCache24 = null;
        okHttpClient21.responseCache = responseCache24;
        javax.net.ssl.HostnameVerifier hostnameVerifier26 = okHttpClient21.hostnameVerifier;
        java.net.Proxy proxy27 = okHttpClient21.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool30 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient21.connectionPool = connectionPool30;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient21.copyWithDefaults();
        java.net.ResponseCache responseCache33 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient32.setResponseCache(responseCache33);
        okHttpClient34.followProtocolRedirects = true;
        java.util.List<java.lang.String> strList37 = okHttpClient34.getTransports();
        okHttpClient19.transports = strList37;
        com.squareup.okhttp.ConnectionPool connectionPool41 = new com.squareup.okhttp.ConnectionPool((int) (byte) 0, (long) (byte) 100);
        okHttpClient19.connectionPool = connectionPool41;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory43 = okHttpClient19.sslSocketFactory;
        java.net.Socket socket44 = sSLSocketFactory43.createSocket();
        com.squareup.okhttp.OkHttpClient okHttpClient45 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory43);
        java.net.Proxy proxy46 = null;
        okHttpClient0.proxy = proxy46;
        com.squareup.okhttp.OkHttpClient okHttpClient48 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier49 = null;
        okHttpClient48.hostnameVerifier = hostnameVerifier49;
        java.net.ResponseCache responseCache51 = null;
        okHttpClient48.responseCache = responseCache51;
        java.util.List<java.lang.String> strList53 = okHttpClient48.transports;
        java.net.Proxy proxy54 = java.net.Proxy.NO_PROXY;
        boolean boolean56 = proxy54.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type57 = proxy54.type();
        java.net.SocketAddress socketAddress58 = proxy54.address();
        com.squareup.okhttp.OkHttpClient okHttpClient59 = okHttpClient48.setProxy(proxy54);
        javax.net.ssl.HostnameVerifier hostnameVerifier60 = okHttpClient59.hostnameVerifier;
        java.net.Proxy proxy61 = java.net.Proxy.NO_PROXY;
        boolean boolean63 = proxy61.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type64 = proxy61.type();
        java.lang.String str65 = proxy61.toString();
        com.squareup.okhttp.OkHttpClient okHttpClient66 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier67 = null;
        okHttpClient66.hostnameVerifier = hostnameVerifier67;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory69 = okHttpClient66.getSslSocketFactory();
        boolean boolean70 = proxy61.equals((java.lang.Object) okHttpClient66);
        java.lang.String str71 = proxy61.toString();
        java.net.Proxy.Type type72 = proxy61.type();
        com.squareup.okhttp.OkHttpClient okHttpClient73 = okHttpClient59.setProxy(proxy61);
        com.squareup.okhttp.OkHttpClient okHttpClient74 = okHttpClient0.setProxy(proxy61);
        java.net.ResponseCache responseCache75 = null;
        okHttpClient0.responseCache = responseCache75;
        com.squareup.okhttp.OkHttpClient okHttpClient77 = okHttpClient0.copyWithDefaults();
        java.net.CookieHandler cookieHandler78 = null;
        okHttpClient0.cookieHandler = cookieHandler78;
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(responseCache6);
        org.junit.Assert.assertNull(okAuthenticator7);
        org.junit.Assert.assertNull(hostnameVerifier13);
        org.junit.Assert.assertNull(proxy14);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNull(proxy20);
        org.junit.Assert.assertNull(hostnameVerifier26);
        org.junit.Assert.assertNull(proxy27);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertNotNull(strList37);
        org.junit.Assert.assertNotNull(sSLSocketFactory43);
        org.junit.Assert.assertNotNull(socket44);
        org.junit.Assert.assertEquals(socket44.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(okHttpClient45);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNotNull(proxy54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + type57 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type57.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress58);
        org.junit.Assert.assertNotNull(okHttpClient59);
        org.junit.Assert.assertNull(hostnameVerifier60);
        org.junit.Assert.assertNotNull(proxy61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + type64 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type64.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "DIRECT" + "'", str65, "DIRECT");
        org.junit.Assert.assertNull(sSLSocketFactory69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "DIRECT" + "'", str71, "DIRECT");
        org.junit.Assert.assertTrue("'" + type72 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type72.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNotNull(okHttpClient73);
        org.junit.Assert.assertNotNull(okHttpClient74);
        org.junit.Assert.assertNotNull(okHttpClient77);
    }

    @Test
    public void test12378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12378");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.CookieHandler cookieHandler8 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache9 = okHttpClient0.okResponseCache();
        java.net.CookieHandler cookieHandler10 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        java.net.Proxy proxy12 = java.net.Proxy.NO_PROXY;
        boolean boolean14 = proxy12.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type15 = proxy12.type();
        java.net.SocketAddress socketAddress16 = proxy12.address();
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient0.setProxy(proxy12);
        com.squareup.okhttp.ConnectionPool connectionPool18 = okHttpClient0.connectionPool;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        com.squareup.okhttp.ConnectionPool connectionPool22 = new com.squareup.okhttp.ConnectionPool((int) (byte) 10, (long) '4');
        int int23 = connectionPool22.getConnectionCount();
        connectionPool22.evictAll();
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient0.setConnectionPool(connectionPool22);
        com.squareup.okhttp.OkHttpClient okHttpClient26 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache27 = okHttpClient26.okResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient28 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier29 = null;
        okHttpClient28.hostnameVerifier = hostnameVerifier29;
        java.net.ProxySelector proxySelector31 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient28.setProxySelector(proxySelector31);
        java.net.CookieHandler cookieHandler33 = okHttpClient28.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient34 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier35 = null;
        okHttpClient34.hostnameVerifier = hostnameVerifier35;
        java.net.ResponseCache responseCache37 = null;
        okHttpClient34.responseCache = responseCache37;
        java.util.List<java.lang.String> strList39 = okHttpClient34.transports;
        com.squareup.okhttp.ConnectionPool connectionPool40 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient34.connectionPool = connectionPool40;
        java.net.Proxy proxy42 = null;
        okHttpClient34.proxy = proxy42;
        java.util.Set<com.squareup.okhttp.Route> routeSet44 = okHttpClient34.failedRoutes;
        okHttpClient28.failedRoutes = routeSet44;
        java.net.ProxySelector proxySelector46 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient47 = okHttpClient28.setProxySelector(proxySelector46);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory48 = null;
        okHttpClient47.sslSocketFactory = sSLSocketFactory48;
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient47.copyWithDefaults();
        java.net.CookieHandler cookieHandler51 = okHttpClient50.getCookieHandler();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache52 = okHttpClient50.okResponseCache();
        boolean boolean53 = okHttpClient50.getFollowProtocolRedirects();
        java.util.Set<com.squareup.okhttp.Route> routeSet54 = okHttpClient50.failedRoutes;
        okHttpClient26.failedRoutes = routeSet54;
        okHttpClient0.failedRoutes = routeSet54;
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNull(cookieHandler8);
        org.junit.Assert.assertNull(okResponseCache9);
        org.junit.Assert.assertNull(cookieHandler10);
        org.junit.Assert.assertNotNull(proxy12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + type15 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type15.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress16);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNotNull(connectionPool18);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(okHttpClient25);
        org.junit.Assert.assertNull(okResponseCache27);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertNull(cookieHandler33);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNotNull(connectionPool40);
        org.junit.Assert.assertNotNull(routeSet44);
        org.junit.Assert.assertNotNull(okHttpClient47);
        org.junit.Assert.assertNotNull(okHttpClient50);
        org.junit.Assert.assertNull(cookieHandler51);
        org.junit.Assert.assertNull(okResponseCache52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(routeSet54);
    }

    @Test
    public void test12379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12379");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.ResponseCache responseCache5 = null;
        okHttpClient4.responseCache = responseCache5;
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = okHttpClient4.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient4.setFollowProtocolRedirects(false);
        java.net.ResponseCache responseCache10 = okHttpClient9.responseCache;
        com.squareup.okhttp.ConnectionPool connectionPool13 = new com.squareup.okhttp.ConnectionPool(0, (long) (short) 10);
        connectionPool13.evictAll();
        com.squareup.okhttp.Address address15 = null;
        com.squareup.okhttp.Connection connection16 = connectionPool13.get(address15);
        okHttpClient9.connectionPool = connectionPool13;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache18 = okHttpClient9.okResponseCache();
        java.net.CookieHandler cookieHandler19 = null;
        okHttpClient9.cookieHandler = cookieHandler19;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = new com.squareup.okhttp.OkHttpClient(okHttpClient9);
        java.util.List<java.lang.String> strList22 = okHttpClient9.getTransports();
        java.net.CookieHandler cookieHandler23 = okHttpClient9.getCookieHandler();
        java.lang.Class<?> wildcardClass24 = okHttpClient9.getClass();
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(hostnameVerifier7);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNull(responseCache10);
        org.junit.Assert.assertNull(connection16);
        org.junit.Assert.assertNull(okResponseCache18);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNull(cookieHandler23);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test12380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12380");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier7;
        java.net.ProxySelector proxySelector9 = okHttpClient0.proxySelector;
        java.net.ProxySelector proxySelector10 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setProxySelector(proxySelector10);
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setFollowProtocolRedirects(false);
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNull(proxySelector9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(okHttpClient13);
    }

    @Test
    public void test12381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12381");
        com.squareup.okhttp.ConnectionPool connectionPool2 = new com.squareup.okhttp.ConnectionPool((int) (short) 1, (long) (short) 100);
        com.squareup.okhttp.Address address3 = null;
        com.squareup.okhttp.Connection connection4 = connectionPool2.get(address3);
        connectionPool2.evictAll();
        int int6 = connectionPool2.getHttpConnectionCount();
        org.junit.Assert.assertNull(connection4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }

    @Test
    public void test12382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12382");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.CookieHandler cookieHandler8 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache9 = okHttpClient0.okResponseCache();
        java.net.CookieHandler cookieHandler10 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        java.net.Proxy proxy12 = java.net.Proxy.NO_PROXY;
        boolean boolean14 = proxy12.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type15 = proxy12.type();
        java.net.SocketAddress socketAddress16 = proxy12.address();
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient0.setProxy(proxy12);
        java.lang.String[] strArray19 = new java.lang.String[] { "DIRECT" };
        java.util.ArrayList<java.lang.String> strList20 = new java.util.ArrayList<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList20, strArray19);
        okHttpClient0.transports = strList20;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient0.setFollowProtocolRedirects(false);
        com.squareup.okhttp.ConnectionPool connectionPool27 = new com.squareup.okhttp.ConnectionPool((int) '#', (long) (short) 100);
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient24.setConnectionPool(connectionPool27);
        com.squareup.okhttp.OkHttpClient okHttpClient29 = new com.squareup.okhttp.OkHttpClient(okHttpClient24);
        com.squareup.okhttp.OkHttpClient okHttpClient30 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier31 = null;
        okHttpClient30.hostnameVerifier = hostnameVerifier31;
        java.net.ProxySelector proxySelector33 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient30.setProxySelector(proxySelector33);
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient34.copyWithDefaults();
        com.squareup.okhttp.Route[] routeArray36 = new com.squareup.okhttp.Route[] {};
        java.util.LinkedHashSet<com.squareup.okhttp.Route> routeSet37 = new java.util.LinkedHashSet<com.squareup.okhttp.Route>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<com.squareup.okhttp.Route>) routeSet37, routeArray36);
        okHttpClient35.failedRoutes = routeSet37;
        java.net.CookieHandler cookieHandler40 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient41 = okHttpClient35.setCookieHandler(cookieHandler40);
        java.util.List<java.lang.String> strList42 = okHttpClient35.getTransports();
        com.squareup.okhttp.OkHttpClient.DEFAULT_TRANSPORTS = strList42;
        okHttpClient29.transports = strList42;
        okHttpClient29.followProtocolRedirects = true;
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNull(cookieHandler8);
        org.junit.Assert.assertNull(okResponseCache9);
        org.junit.Assert.assertNull(cookieHandler10);
        org.junit.Assert.assertNotNull(proxy12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + type15 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type15.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress16);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNotNull(routeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(okHttpClient41);
        org.junit.Assert.assertNotNull(strList42);
    }

    @Test
    public void test12383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12383");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache1 = okHttpClient0.okResponseCache();
        java.net.ResponseCache responseCache2 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.setResponseCache(responseCache2);
        java.net.ProxySelector proxySelector4 = okHttpClient0.getProxySelector();
        com.squareup.okhttp.OkHttpClient okHttpClient5 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient5.connectionPool = connectionPool6;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier9 = null;
        okHttpClient8.hostnameVerifier = hostnameVerifier9;
        java.net.ResponseCache responseCache11 = null;
        okHttpClient8.responseCache = responseCache11;
        java.util.List<java.lang.String> strList13 = okHttpClient8.transports;
        com.squareup.okhttp.ConnectionPool connectionPool14 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient8.connectionPool = connectionPool14;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient5.setConnectionPool(connectionPool14);
        connectionPool14.evictAll();
        okHttpClient0.connectionPool = connectionPool14;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory19 = okHttpClient0.getSslSocketFactory();
        com.squareup.okhttp.ConnectionPool connectionPool20 = okHttpClient0.connectionPool;
        org.junit.Assert.assertNull(okResponseCache1);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertNull(proxySelector4);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNotNull(connectionPool14);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNull(sSLSocketFactory19);
        org.junit.Assert.assertNotNull(connectionPool20);
    }

    @Test
    public void test12384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12384");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache8 = okHttpClient7.okResponseCache();
        java.net.ResponseCache responseCache9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient7.setResponseCache(responseCache9);
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache12 = okHttpClient11.okResponseCache();
        java.net.ResponseCache responseCache13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient11.setResponseCache(responseCache13);
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        okHttpClient11.transports = strList17;
        okHttpClient7.transports = strList17;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier22 = null;
        okHttpClient21.hostnameVerifier = hostnameVerifier22;
        java.net.ResponseCache responseCache24 = null;
        okHttpClient21.responseCache = responseCache24;
        java.util.List<java.lang.String> strList26 = okHttpClient21.transports;
        com.squareup.okhttp.ConnectionPool connectionPool27 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient21.connectionPool = connectionPool27;
        java.net.CookieHandler cookieHandler29 = okHttpClient21.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache30 = okHttpClient21.okResponseCache();
        java.net.CookieHandler cookieHandler31 = okHttpClient21.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient32 = new com.squareup.okhttp.OkHttpClient(okHttpClient21);
        java.net.ResponseCache responseCache33 = okHttpClient21.responseCache;
        java.net.CookieHandler cookieHandler34 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient21.setCookieHandler(cookieHandler34);
        java.net.Proxy proxy36 = java.net.Proxy.NO_PROXY;
        boolean boolean38 = proxy36.equals((java.lang.Object) 1L);
        com.squareup.okhttp.OkHttpClient okHttpClient39 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache40 = okHttpClient39.okResponseCache();
        java.net.ResponseCache responseCache41 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient39.setResponseCache(responseCache41);
        java.lang.String[] strArray44 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        okHttpClient39.transports = strList45;
        boolean boolean48 = proxy36.equals((java.lang.Object) strList45);
        com.squareup.okhttp.OkHttpClient.DEFAULT_TRANSPORTS = strList45;
        okHttpClient35.transports = strList45;
        okHttpClient7.transports = strList45;
        okHttpClient0.transports = strList45;
        com.squareup.okhttp.ConnectionPool connectionPool53 = okHttpClient0.getConnectionPool();
        java.net.CookieHandler cookieHandler54 = null;
        okHttpClient0.cookieHandler = cookieHandler54;
        java.net.Proxy proxy56 = okHttpClient0.getProxy();
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNull(okResponseCache8);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertNull(okResponseCache12);
        org.junit.Assert.assertNotNull(okHttpClient14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNotNull(connectionPool27);
        org.junit.Assert.assertNull(cookieHandler29);
        org.junit.Assert.assertNull(okResponseCache30);
        org.junit.Assert.assertNull(cookieHandler31);
        org.junit.Assert.assertNull(responseCache33);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNotNull(proxy36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(okResponseCache40);
        org.junit.Assert.assertNotNull(okHttpClient42);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(connectionPool53);
        org.junit.Assert.assertNull(proxy56);
    }

    @Test
    public void test12385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12385");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.CookieHandler cookieHandler6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient0.setCookieHandler(cookieHandler6);
        com.squareup.okhttp.OkHttpClient okHttpClient8 = new com.squareup.okhttp.OkHttpClient(okHttpClient7);
        java.net.ResponseCache responseCache9 = okHttpClient8.getResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient10 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier11 = null;
        okHttpClient10.hostnameVerifier = hostnameVerifier11;
        java.net.ResponseCache responseCache13 = null;
        okHttpClient10.responseCache = responseCache13;
        java.util.List<java.lang.String> strList15 = okHttpClient10.transports;
        com.squareup.okhttp.ConnectionPool connectionPool16 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient10.connectionPool = connectionPool16;
        java.net.CookieHandler cookieHandler18 = okHttpClient10.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache19 = okHttpClient10.okResponseCache();
        java.net.CookieHandler cookieHandler20 = okHttpClient10.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient21 = new com.squareup.okhttp.OkHttpClient(okHttpClient10);
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier23 = null;
        okHttpClient22.hostnameVerifier = hostnameVerifier23;
        java.net.ProxySelector proxySelector25 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient22.setProxySelector(proxySelector25);
        java.net.CookieHandler cookieHandler27 = okHttpClient22.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient28 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier29 = null;
        okHttpClient28.hostnameVerifier = hostnameVerifier29;
        java.net.ResponseCache responseCache31 = null;
        okHttpClient28.responseCache = responseCache31;
        java.util.List<java.lang.String> strList33 = okHttpClient28.transports;
        com.squareup.okhttp.ConnectionPool connectionPool34 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient28.connectionPool = connectionPool34;
        java.net.Proxy proxy36 = null;
        okHttpClient28.proxy = proxy36;
        java.util.Set<com.squareup.okhttp.Route> routeSet38 = okHttpClient28.failedRoutes;
        okHttpClient22.failedRoutes = routeSet38;
        okHttpClient21.failedRoutes = routeSet38;
        java.util.List<java.lang.String> strList41 = okHttpClient21.getTransports();
        java.net.ResponseCache responseCache42 = null;
        okHttpClient21.responseCache = responseCache42;
        java.net.Proxy proxy44 = java.net.Proxy.NO_PROXY;
        boolean boolean46 = proxy44.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type47 = proxy44.type();
        java.net.Proxy.Type type48 = proxy44.type();
        okHttpClient21.proxy = proxy44;
        java.lang.Object obj50 = null;
        boolean boolean51 = proxy44.equals(obj50);
        okHttpClient8.proxy = proxy44;
        java.net.Proxy.Type type53 = proxy44.type();
        java.net.SocketAddress socketAddress54 = proxy44.address();
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNotNull(okHttpClient7);
        org.junit.Assert.assertNull(responseCache9);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(connectionPool16);
        org.junit.Assert.assertNull(cookieHandler18);
        org.junit.Assert.assertNull(okResponseCache19);
        org.junit.Assert.assertNull(cookieHandler20);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNull(cookieHandler27);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNotNull(connectionPool34);
        org.junit.Assert.assertNotNull(routeSet38);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(proxy44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + type47 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type47.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertTrue("'" + type48 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type48.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + type53 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type53.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress54);
    }

    @Test
    public void test12386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12386");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        java.net.CookieHandler cookieHandler7 = null;
        okHttpClient0.cookieHandler = cookieHandler7;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory9 = null;
        okHttpClient0.sslSocketFactory = sSLSocketFactory9;
        java.net.CookieHandler cookieHandler11 = okHttpClient0.cookieHandler;
        java.net.ResponseCache responseCache12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient0.setResponseCache(responseCache12);
        com.squareup.okhttp.OkHttpClient okHttpClient14 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory15 = okHttpClient14.sslSocketFactory;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient14.copyWithDefaults();
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNull(cookieHandler11);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNull(sSLSocketFactory15);
        org.junit.Assert.assertNotNull(okHttpClient16);
    }

    @Test
    public void test12387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12387");
        com.squareup.okhttp.ConnectionPool connectionPool2 = new com.squareup.okhttp.ConnectionPool((int) (byte) 100, (long) 100);
        int int3 = connectionPool2.getSpdyConnectionCount();
        connectionPool2.evictAll();
        int int5 = connectionPool2.getSpdyConnectionCount();
        int int6 = connectionPool2.getHttpConnectionCount();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }

    @Test
    public void test12388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12388");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient0.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.copyWithDefaults();
        java.util.List<java.lang.String> strList12 = okHttpClient0.getTransports();
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient14 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool15 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient14.connectionPool = connectionPool15;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = null;
        okHttpClient17.hostnameVerifier = hostnameVerifier18;
        java.net.ResponseCache responseCache20 = null;
        okHttpClient17.responseCache = responseCache20;
        java.util.List<java.lang.String> strList22 = okHttpClient17.transports;
        com.squareup.okhttp.ConnectionPool connectionPool23 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient17.connectionPool = connectionPool23;
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient14.setConnectionPool(connectionPool23);
        com.squareup.okhttp.ConnectionPool connectionPool26 = okHttpClient25.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator27 = okHttpClient25.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool30 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient25.connectionPool = connectionPool30;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier33 = null;
        okHttpClient32.hostnameVerifier = hostnameVerifier33;
        java.net.ResponseCache responseCache35 = null;
        okHttpClient32.responseCache = responseCache35;
        java.util.List<java.lang.String> strList37 = okHttpClient32.transports;
        com.squareup.okhttp.ConnectionPool connectionPool38 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient32.connectionPool = connectionPool38;
        java.net.CookieHandler cookieHandler40 = okHttpClient32.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache41 = okHttpClient32.okResponseCache();
        java.net.CookieHandler cookieHandler42 = okHttpClient32.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient43 = new com.squareup.okhttp.OkHttpClient(okHttpClient32);
        java.net.Proxy proxy44 = java.net.Proxy.NO_PROXY;
        boolean boolean46 = proxy44.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type47 = proxy44.type();
        java.net.SocketAddress socketAddress48 = proxy44.address();
        com.squareup.okhttp.OkHttpClient okHttpClient49 = okHttpClient32.setProxy(proxy44);
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient25.setProxy(proxy44);
        com.squareup.okhttp.OkHttpClient okHttpClient51 = okHttpClient0.setProxy(proxy44);
        java.net.SocketAddress socketAddress52 = proxy44.address();
        com.squareup.okhttp.OkHttpClient okHttpClient53 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier54 = null;
        okHttpClient53.hostnameVerifier = hostnameVerifier54;
        java.net.ResponseCache responseCache56 = null;
        okHttpClient53.responseCache = responseCache56;
        javax.net.ssl.HostnameVerifier hostnameVerifier58 = okHttpClient53.hostnameVerifier;
        java.net.Proxy proxy59 = okHttpClient53.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient60 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache61 = okHttpClient60.okResponseCache();
        java.net.ResponseCache responseCache62 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient63 = okHttpClient60.setResponseCache(responseCache62);
        java.lang.String[] strArray65 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList66 = new java.util.ArrayList<java.lang.String>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList66, strArray65);
        okHttpClient60.transports = strList66;
        okHttpClient53.transports = strList66;
        java.util.Set<com.squareup.okhttp.Route> routeSet70 = okHttpClient53.failedRoutes;
        java.net.CookieHandler cookieHandler71 = null;
        okHttpClient53.cookieHandler = cookieHandler71;
        com.squareup.okhttp.OkAuthenticator okAuthenticator73 = okHttpClient53.getAuthenticator();
        com.squareup.okhttp.OkHttpClient okHttpClient74 = okHttpClient53.copyWithDefaults();
        com.squareup.okhttp.OkAuthenticator okAuthenticator75 = okHttpClient74.getAuthenticator();
        boolean boolean76 = proxy44.equals((java.lang.Object) okAuthenticator75);
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNotNull(connectionPool15);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNotNull(connectionPool23);
        org.junit.Assert.assertNotNull(okHttpClient25);
        org.junit.Assert.assertNotNull(connectionPool26);
        org.junit.Assert.assertNull(okAuthenticator27);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(connectionPool38);
        org.junit.Assert.assertNull(cookieHandler40);
        org.junit.Assert.assertNull(okResponseCache41);
        org.junit.Assert.assertNull(cookieHandler42);
        org.junit.Assert.assertNotNull(proxy44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + type47 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type47.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress48);
        org.junit.Assert.assertNotNull(okHttpClient49);
        org.junit.Assert.assertNotNull(okHttpClient50);
        org.junit.Assert.assertNotNull(okHttpClient51);
        org.junit.Assert.assertNull(socketAddress52);
        org.junit.Assert.assertNull(hostnameVerifier58);
        org.junit.Assert.assertNull(proxy59);
        org.junit.Assert.assertNull(okResponseCache61);
        org.junit.Assert.assertNotNull(okHttpClient63);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(routeSet70);
        org.junit.Assert.assertNull(okAuthenticator73);
        org.junit.Assert.assertNotNull(okHttpClient74);
        org.junit.Assert.assertNotNull(okAuthenticator75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test12389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12389");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.Proxy proxy8 = null;
        okHttpClient0.proxy = proxy8;
        boolean boolean10 = okHttpClient0.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        java.net.ProxySelector proxySelector12 = okHttpClient11.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier13 = okHttpClient11.hostnameVerifier;
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = okHttpClient11.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool16 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient15.connectionPool = connectionPool16;
        com.squareup.okhttp.OkAuthenticator okAuthenticator18 = null;
        okHttpClient15.authenticator = okAuthenticator18;
        java.net.CookieHandler cookieHandler20 = null;
        okHttpClient15.cookieHandler = cookieHandler20;
        java.net.Proxy proxy22 = java.net.Proxy.NO_PROXY;
        boolean boolean24 = proxy22.equals((java.lang.Object) 1L);
        com.squareup.okhttp.OkHttpClient okHttpClient25 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache26 = okHttpClient25.okResponseCache();
        java.net.ResponseCache responseCache27 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient25.setResponseCache(responseCache27);
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        okHttpClient25.transports = strList31;
        boolean boolean34 = proxy22.equals((java.lang.Object) strList31);
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient15.setProxy(proxy22);
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient11.setProxy(proxy22);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory37 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient11.setSSLSocketFactory(sSLSocketFactory37);
        com.squareup.okhttp.OkAuthenticator okAuthenticator39 = okHttpClient38.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier40 = okHttpClient38.getHostnameVerifier();
        java.net.ResponseCache responseCache41 = null;
        okHttpClient38.responseCache = responseCache41;
        com.squareup.okhttp.ConnectionPool connectionPool45 = new com.squareup.okhttp.ConnectionPool((int) (byte) 10, 100L);
        com.squareup.okhttp.OkHttpClient okHttpClient46 = okHttpClient38.setConnectionPool(connectionPool45);
        com.squareup.okhttp.Address address47 = null;
        com.squareup.okhttp.Connection connection48 = connectionPool45.get(address47);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(proxySelector12);
        org.junit.Assert.assertNull(hostnameVerifier13);
        org.junit.Assert.assertNull(hostnameVerifier14);
        org.junit.Assert.assertNotNull(connectionPool16);
        org.junit.Assert.assertNotNull(proxy22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(okResponseCache26);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNull(okAuthenticator39);
        org.junit.Assert.assertNull(hostnameVerifier40);
        org.junit.Assert.assertNotNull(okHttpClient46);
        org.junit.Assert.assertNull(connection48);
    }

    @Test
    public void test12390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12390");
        java.net.Proxy proxy0 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress1 = proxy0.address();
        java.net.SocketAddress socketAddress2 = proxy0.address();
        java.lang.Object obj3 = null;
        boolean boolean4 = proxy0.equals(obj3);
        java.net.Proxy.Type type5 = proxy0.type();
        java.lang.String str6 = proxy0.toString();
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = null;
        okHttpClient7.hostnameVerifier = hostnameVerifier8;
        java.net.ResponseCache responseCache10 = null;
        okHttpClient7.responseCache = responseCache10;
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = okHttpClient7.hostnameVerifier;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient7.setSSLSocketFactory(sSLSocketFactory13);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory15 = okHttpClient14.sslSocketFactory;
        java.net.CookieHandler cookieHandler16 = null;
        okHttpClient14.cookieHandler = cookieHandler16;
        boolean boolean18 = proxy0.equals((java.lang.Object) okHttpClient14);
        com.squareup.okhttp.OkHttpClient okHttpClient19 = new com.squareup.okhttp.OkHttpClient(okHttpClient14);
        org.junit.Assert.assertNotNull(proxy0);
        org.junit.Assert.assertNull(socketAddress1);
        org.junit.Assert.assertNull(socketAddress2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + type5 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type5.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "DIRECT" + "'", str6, "DIRECT");
        org.junit.Assert.assertNull(hostnameVerifier12);
        org.junit.Assert.assertNotNull(okHttpClient14);
        org.junit.Assert.assertNull(sSLSocketFactory15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test12391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12391");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.OkAuthenticator okAuthenticator12 = okHttpClient11.getAuthenticator();
        java.net.ProxySelector proxySelector13 = okHttpClient11.getProxySelector();
        java.net.ResponseCache responseCache14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient11.setResponseCache(responseCache14);
        java.net.Proxy proxy16 = java.net.Proxy.NO_PROXY;
        boolean boolean18 = proxy16.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type19 = proxy16.type();
        java.net.SocketAddress socketAddress20 = proxy16.address();
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient15.setProxy(proxy16);
        java.net.Proxy proxy22 = java.net.Proxy.NO_PROXY;
        boolean boolean24 = proxy22.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type25 = proxy22.type();
        java.net.Proxy.Type type26 = proxy22.type();
        boolean boolean27 = proxy16.equals((java.lang.Object) proxy22);
        com.squareup.okhttp.OkHttpClient okHttpClient28 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool29 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient28.connectionPool = connectionPool29;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier32 = null;
        okHttpClient31.hostnameVerifier = hostnameVerifier32;
        java.net.ResponseCache responseCache34 = null;
        okHttpClient31.responseCache = responseCache34;
        java.util.List<java.lang.String> strList36 = okHttpClient31.transports;
        com.squareup.okhttp.ConnectionPool connectionPool37 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient31.connectionPool = connectionPool37;
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient28.setConnectionPool(connectionPool37);
        com.squareup.okhttp.ConnectionPool connectionPool40 = okHttpClient39.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator41 = okHttpClient39.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool44 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient39.connectionPool = connectionPool44;
        java.net.ResponseCache responseCache46 = okHttpClient39.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory47 = okHttpClient39.sslSocketFactory;
        com.squareup.okhttp.ConnectionPool connectionPool50 = new com.squareup.okhttp.ConnectionPool((int) 'a', (long) (byte) -1);
        okHttpClient39.connectionPool = connectionPool50;
        boolean boolean52 = proxy16.equals((java.lang.Object) okHttpClient39);
        javax.net.ssl.HostnameVerifier hostnameVerifier53 = okHttpClient39.getHostnameVerifier();
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(okAuthenticator12);
        org.junit.Assert.assertNull(proxySelector13);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNotNull(proxy16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + type19 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type19.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress20);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNotNull(proxy22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + type25 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type25.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertTrue("'" + type26 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type26.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(connectionPool29);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNotNull(connectionPool37);
        org.junit.Assert.assertNotNull(okHttpClient39);
        org.junit.Assert.assertNotNull(connectionPool40);
        org.junit.Assert.assertNull(okAuthenticator41);
        org.junit.Assert.assertNull(responseCache46);
        org.junit.Assert.assertNull(sSLSocketFactory47);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(hostnameVerifier53);
    }

    @Test
    public void test12392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12392");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.CookieHandler cookieHandler6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient0.setCookieHandler(cookieHandler6);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory8 = null;
        okHttpClient7.sslSocketFactory = sSLSocketFactory8;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool11 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient10.connectionPool = connectionPool11;
        com.squareup.okhttp.OkAuthenticator okAuthenticator13 = null;
        okHttpClient10.authenticator = okAuthenticator13;
        java.net.CookieHandler cookieHandler15 = null;
        okHttpClient10.cookieHandler = cookieHandler15;
        java.net.Proxy proxy17 = java.net.Proxy.NO_PROXY;
        boolean boolean19 = proxy17.equals((java.lang.Object) 1L);
        com.squareup.okhttp.OkHttpClient okHttpClient20 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache21 = okHttpClient20.okResponseCache();
        java.net.ResponseCache responseCache22 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient20.setResponseCache(responseCache22);
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList26 = new java.util.ArrayList<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        okHttpClient20.transports = strList26;
        boolean boolean29 = proxy17.equals((java.lang.Object) strList26);
        com.squareup.okhttp.OkHttpClient okHttpClient30 = okHttpClient10.setProxy(proxy17);
        com.squareup.okhttp.OkHttpClient okHttpClient31 = new com.squareup.okhttp.OkHttpClient(okHttpClient10);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory32 = okHttpClient10.sslSocketFactory;
        com.squareup.okhttp.OkHttpClient okHttpClient33 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache34 = okHttpClient33.okResponseCache();
        java.net.ResponseCache responseCache35 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient33.setResponseCache(responseCache35);
        java.net.CookieHandler cookieHandler37 = okHttpClient33.cookieHandler;
        com.squareup.okhttp.OkHttpClient okHttpClient38 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier39 = null;
        okHttpClient38.hostnameVerifier = hostnameVerifier39;
        java.net.ResponseCache responseCache41 = null;
        okHttpClient38.responseCache = responseCache41;
        javax.net.ssl.HostnameVerifier hostnameVerifier43 = okHttpClient38.hostnameVerifier;
        java.net.Proxy proxy44 = okHttpClient38.getProxy();
        java.net.CookieHandler cookieHandler45 = null;
        okHttpClient38.cookieHandler = cookieHandler45;
        okHttpClient38.followProtocolRedirects = true;
        com.squareup.okhttp.OkHttpClient okHttpClient49 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier50 = null;
        okHttpClient49.hostnameVerifier = hostnameVerifier50;
        java.net.ResponseCache responseCache52 = null;
        okHttpClient49.responseCache = responseCache52;
        javax.net.ssl.HostnameVerifier hostnameVerifier54 = okHttpClient49.hostnameVerifier;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory55 = okHttpClient49.sslSocketFactory;
        java.net.CookieHandler cookieHandler56 = okHttpClient49.cookieHandler;
        javax.net.ssl.HostnameVerifier hostnameVerifier57 = okHttpClient49.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient58 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool59 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient58.connectionPool = connectionPool59;
        com.squareup.okhttp.OkAuthenticator okAuthenticator61 = null;
        okHttpClient58.authenticator = okAuthenticator61;
        java.util.List<java.lang.String> strList63 = okHttpClient58.transports;
        java.net.ResponseCache responseCache64 = null;
        okHttpClient58.responseCache = responseCache64;
        com.squareup.okhttp.OkHttpClient okHttpClient66 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier67 = null;
        okHttpClient66.hostnameVerifier = hostnameVerifier67;
        java.net.ResponseCache responseCache69 = null;
        okHttpClient66.responseCache = responseCache69;
        javax.net.ssl.HostnameVerifier hostnameVerifier71 = okHttpClient66.hostnameVerifier;
        java.net.Proxy proxy72 = okHttpClient66.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool75 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient66.connectionPool = connectionPool75;
        com.squareup.okhttp.OkHttpClient okHttpClient77 = okHttpClient66.copyWithDefaults();
        java.net.Proxy proxy78 = okHttpClient77.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier79 = okHttpClient77.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient80 = okHttpClient58.setHostnameVerifier(hostnameVerifier79);
        com.squareup.okhttp.OkHttpClient okHttpClient81 = okHttpClient49.setHostnameVerifier(hostnameVerifier79);
        okHttpClient38.hostnameVerifier = hostnameVerifier79;
        com.squareup.okhttp.OkHttpClient okHttpClient83 = okHttpClient33.setHostnameVerifier(hostnameVerifier79);
        okHttpClient10.hostnameVerifier = hostnameVerifier79;
        okHttpClient7.hostnameVerifier = hostnameVerifier79;
        java.net.ProxySelector proxySelector86 = okHttpClient7.proxySelector;
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNotNull(okHttpClient7);
        org.junit.Assert.assertNotNull(connectionPool11);
        org.junit.Assert.assertNotNull(proxy17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(okResponseCache21);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(okHttpClient30);
        org.junit.Assert.assertNull(sSLSocketFactory32);
        org.junit.Assert.assertNull(okResponseCache34);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNull(cookieHandler37);
        org.junit.Assert.assertNull(hostnameVerifier43);
        org.junit.Assert.assertNull(proxy44);
        org.junit.Assert.assertNull(hostnameVerifier54);
        org.junit.Assert.assertNull(sSLSocketFactory55);
        org.junit.Assert.assertNull(cookieHandler56);
        org.junit.Assert.assertNull(hostnameVerifier57);
        org.junit.Assert.assertNotNull(connectionPool59);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNull(hostnameVerifier71);
        org.junit.Assert.assertNull(proxy72);
        org.junit.Assert.assertNotNull(okHttpClient77);
        org.junit.Assert.assertNull(proxy78);
        org.junit.Assert.assertNotNull(hostnameVerifier79);
        org.junit.Assert.assertNotNull(okHttpClient80);
        org.junit.Assert.assertNotNull(okHttpClient81);
        org.junit.Assert.assertNotNull(okHttpClient83);
        org.junit.Assert.assertNull(proxySelector86);
    }

    @Test
    public void test12393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12393");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.Proxy proxy8 = null;
        okHttpClient0.proxy = proxy8;
        boolean boolean10 = okHttpClient0.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.copyWithDefaults();
        java.net.CookieHandler cookieHandler12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient0.setCookieHandler(cookieHandler12);
        com.squareup.okhttp.OkHttpClient okHttpClient14 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache15 = okHttpClient14.okResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient16 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier17 = null;
        okHttpClient16.hostnameVerifier = hostnameVerifier17;
        java.net.ResponseCache responseCache19 = null;
        okHttpClient16.responseCache = responseCache19;
        java.util.List<java.lang.String> strList21 = okHttpClient16.transports;
        com.squareup.okhttp.ConnectionPool connectionPool22 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient16.connectionPool = connectionPool22;
        java.net.Proxy proxy24 = null;
        okHttpClient16.proxy = proxy24;
        boolean boolean26 = okHttpClient16.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient16.copyWithDefaults();
        java.net.CookieHandler cookieHandler28 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient27.setCookieHandler(cookieHandler28);
        java.util.List<java.lang.String> strList30 = okHttpClient29.transports;
        javax.net.ssl.HostnameVerifier hostnameVerifier31 = okHttpClient29.hostnameVerifier;
        okHttpClient14.hostnameVerifier = hostnameVerifier31;
        okHttpClient13.hostnameVerifier = hostnameVerifier31;
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient13.copyWithDefaults();
        java.net.ResponseCache responseCache35 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient13.setResponseCache(responseCache35);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNull(okResponseCache15);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(connectionPool22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNotNull(okHttpClient29);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNotNull(hostnameVerifier31);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertNotNull(okHttpClient36);
    }

    @Test
    public void test12394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12394");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient0.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.copyWithDefaults();
        java.util.List<java.lang.String> strList12 = okHttpClient0.getTransports();
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient13.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient14.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient16 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier17 = null;
        okHttpClient16.hostnameVerifier = hostnameVerifier17;
        java.net.ProxySelector proxySelector19 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient16.setProxySelector(proxySelector19);
        java.net.ResponseCache responseCache21 = null;
        okHttpClient20.responseCache = responseCache21;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory23 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient20.setSSLSocketFactory(sSLSocketFactory23);
        java.net.ProxySelector proxySelector25 = null;
        okHttpClient20.proxySelector = proxySelector25;
        javax.net.ssl.HostnameVerifier hostnameVerifier27 = okHttpClient20.getHostnameVerifier();
        java.net.ProxySelector proxySelector28 = okHttpClient20.getProxySelector();
        com.squareup.okhttp.OkHttpClient okHttpClient29 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = null;
        okHttpClient29.hostnameVerifier = hostnameVerifier30;
        java.net.ProxySelector proxySelector32 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient29.setProxySelector(proxySelector32);
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient33.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient35 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool36 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient35.connectionPool = connectionPool36;
        com.squareup.okhttp.OkHttpClient okHttpClient38 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier39 = null;
        okHttpClient38.hostnameVerifier = hostnameVerifier39;
        java.net.ResponseCache responseCache41 = null;
        okHttpClient38.responseCache = responseCache41;
        java.util.List<java.lang.String> strList43 = okHttpClient38.transports;
        com.squareup.okhttp.ConnectionPool connectionPool44 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient38.connectionPool = connectionPool44;
        com.squareup.okhttp.OkHttpClient okHttpClient46 = okHttpClient35.setConnectionPool(connectionPool44);
        com.squareup.okhttp.OkHttpClient okHttpClient47 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier48 = null;
        okHttpClient47.hostnameVerifier = hostnameVerifier48;
        java.net.ProxySelector proxySelector50 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient51 = okHttpClient47.setProxySelector(proxySelector50);
        java.net.CookieHandler cookieHandler52 = okHttpClient47.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient53 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier54 = null;
        okHttpClient53.hostnameVerifier = hostnameVerifier54;
        java.net.ResponseCache responseCache56 = null;
        okHttpClient53.responseCache = responseCache56;
        java.util.List<java.lang.String> strList58 = okHttpClient53.transports;
        com.squareup.okhttp.ConnectionPool connectionPool59 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient53.connectionPool = connectionPool59;
        java.net.Proxy proxy61 = null;
        okHttpClient53.proxy = proxy61;
        java.util.Set<com.squareup.okhttp.Route> routeSet63 = okHttpClient53.failedRoutes;
        okHttpClient47.failedRoutes = routeSet63;
        java.net.ProxySelector proxySelector65 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient66 = okHttpClient47.setProxySelector(proxySelector65);
        com.squareup.okhttp.OkHttpClient okHttpClient67 = okHttpClient47.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient68 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier69 = null;
        okHttpClient68.hostnameVerifier = hostnameVerifier69;
        java.net.ResponseCache responseCache71 = null;
        okHttpClient68.responseCache = responseCache71;
        javax.net.ssl.HostnameVerifier hostnameVerifier73 = okHttpClient68.hostnameVerifier;
        java.net.Proxy proxy74 = okHttpClient68.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool77 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient68.connectionPool = connectionPool77;
        com.squareup.okhttp.OkHttpClient okHttpClient79 = okHttpClient68.copyWithDefaults();
        java.net.Proxy proxy80 = okHttpClient79.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier81 = okHttpClient79.getHostnameVerifier();
        okHttpClient47.hostnameVerifier = hostnameVerifier81;
        okHttpClient46.hostnameVerifier = hostnameVerifier81;
        okHttpClient34.hostnameVerifier = hostnameVerifier81;
        okHttpClient20.hostnameVerifier = hostnameVerifier81;
        okHttpClient14.hostnameVerifier = hostnameVerifier81;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache87 = okHttpClient14.okResponseCache();
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNotNull(okHttpClient14);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNull(hostnameVerifier27);
        org.junit.Assert.assertNull(proxySelector28);
        org.junit.Assert.assertNotNull(okHttpClient33);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertNotNull(connectionPool36);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNotNull(connectionPool44);
        org.junit.Assert.assertNotNull(okHttpClient46);
        org.junit.Assert.assertNotNull(okHttpClient51);
        org.junit.Assert.assertNull(cookieHandler52);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNotNull(connectionPool59);
        org.junit.Assert.assertNotNull(routeSet63);
        org.junit.Assert.assertNotNull(okHttpClient66);
        org.junit.Assert.assertNotNull(okHttpClient67);
        org.junit.Assert.assertNull(hostnameVerifier73);
        org.junit.Assert.assertNull(proxy74);
        org.junit.Assert.assertNotNull(okHttpClient79);
        org.junit.Assert.assertNull(proxy80);
        org.junit.Assert.assertNotNull(hostnameVerifier81);
        org.junit.Assert.assertNull(okResponseCache87);
    }

    @Test
    public void test12395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12395");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache1 = okHttpClient0.okResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet2 = okHttpClient0.failedRoutes;
        org.junit.Assert.assertNull(okResponseCache1);
        org.junit.Assert.assertNotNull(routeSet2);
    }

    @Test
    public void test12396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12396");
        com.squareup.okhttp.ConnectionPool connectionPool2 = new com.squareup.okhttp.ConnectionPool((int) 'a', (long) ' ');
        int int3 = connectionPool2.getHttpConnectionCount();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test12397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12397");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool8 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient7.connectionPool = connectionPool8;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier11 = null;
        okHttpClient10.hostnameVerifier = hostnameVerifier11;
        java.net.ResponseCache responseCache13 = null;
        okHttpClient10.responseCache = responseCache13;
        java.util.List<java.lang.String> strList15 = okHttpClient10.transports;
        com.squareup.okhttp.ConnectionPool connectionPool16 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient10.connectionPool = connectionPool16;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient7.setConnectionPool(connectionPool16);
        com.squareup.okhttp.ConnectionPool connectionPool19 = okHttpClient18.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator20 = okHttpClient18.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool23 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient18.connectionPool = connectionPool23;
        java.net.ResponseCache responseCache25 = okHttpClient18.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory26 = okHttpClient18.sslSocketFactory;
        java.net.Proxy proxy27 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress28 = proxy27.address();
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient18.setProxy(proxy27);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory30 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient18.setSSLSocketFactory(sSLSocketFactory30);
        com.squareup.okhttp.OkHttpClient okHttpClient32 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier33 = null;
        okHttpClient32.hostnameVerifier = hostnameVerifier33;
        java.net.ResponseCache responseCache35 = null;
        okHttpClient32.responseCache = responseCache35;
        javax.net.ssl.HostnameVerifier hostnameVerifier37 = okHttpClient32.hostnameVerifier;
        java.net.Proxy proxy38 = okHttpClient32.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool41 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient32.connectionPool = connectionPool41;
        com.squareup.okhttp.OkHttpClient okHttpClient43 = okHttpClient32.copyWithDefaults();
        java.net.ResponseCache responseCache44 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient45 = okHttpClient43.setResponseCache(responseCache44);
        com.squareup.okhttp.OkAuthenticator okAuthenticator46 = okHttpClient43.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient47 = okHttpClient18.setAuthenticator(okAuthenticator46);
        com.squareup.okhttp.OkHttpClient okHttpClient48 = okHttpClient0.setAuthenticator(okAuthenticator46);
        java.net.ProxySelector proxySelector49 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient48.setProxySelector(proxySelector49);
        com.squareup.okhttp.OkHttpClient okHttpClient51 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier52 = null;
        okHttpClient51.hostnameVerifier = hostnameVerifier52;
        java.net.ResponseCache responseCache54 = null;
        okHttpClient51.responseCache = responseCache54;
        java.util.List<java.lang.String> strList56 = okHttpClient51.transports;
        com.squareup.okhttp.ConnectionPool connectionPool57 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient51.connectionPool = connectionPool57;
        java.net.Proxy proxy59 = null;
        okHttpClient51.proxy = proxy59;
        boolean boolean61 = okHttpClient51.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient62 = okHttpClient51.copyWithDefaults();
        java.net.ProxySelector proxySelector63 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient64 = okHttpClient62.setProxySelector(proxySelector63);
        com.squareup.okhttp.OkAuthenticator okAuthenticator65 = okHttpClient62.getAuthenticator();
        com.squareup.okhttp.OkHttpClient okHttpClient66 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier67 = null;
        okHttpClient66.hostnameVerifier = hostnameVerifier67;
        java.net.ResponseCache responseCache69 = null;
        okHttpClient66.responseCache = responseCache69;
        javax.net.ssl.HostnameVerifier hostnameVerifier71 = okHttpClient66.hostnameVerifier;
        java.net.Proxy proxy72 = okHttpClient66.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool75 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient66.connectionPool = connectionPool75;
        java.util.List<java.lang.String> strList77 = okHttpClient66.getTransports();
        javax.net.ssl.HostnameVerifier hostnameVerifier78 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient79 = okHttpClient66.setHostnameVerifier(hostnameVerifier78);
        com.squareup.okhttp.OkHttpClient okHttpClient80 = new com.squareup.okhttp.OkHttpClient(okHttpClient66);
        java.net.Proxy proxy81 = java.net.Proxy.NO_PROXY;
        boolean boolean83 = proxy81.equals((java.lang.Object) 1L);
        com.squareup.okhttp.OkHttpClient okHttpClient84 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache85 = okHttpClient84.okResponseCache();
        java.net.ResponseCache responseCache86 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient87 = okHttpClient84.setResponseCache(responseCache86);
        java.lang.String[] strArray89 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList90 = new java.util.ArrayList<java.lang.String>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList90, strArray89);
        okHttpClient84.transports = strList90;
        boolean boolean93 = proxy81.equals((java.lang.Object) strList90);
        okHttpClient80.transports = strList90;
        com.squareup.okhttp.OkHttpClient.DEFAULT_TRANSPORTS = strList90;
        okHttpClient62.transports = strList90;
        com.squareup.okhttp.OkAuthenticator okAuthenticator97 = okHttpClient62.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient98 = okHttpClient48.setAuthenticator(okAuthenticator97);
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNotNull(connectionPool8);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(connectionPool16);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNotNull(connectionPool19);
        org.junit.Assert.assertNull(okAuthenticator20);
        org.junit.Assert.assertNull(responseCache25);
        org.junit.Assert.assertNull(sSLSocketFactory26);
        org.junit.Assert.assertNotNull(proxy27);
        org.junit.Assert.assertNull(socketAddress28);
        org.junit.Assert.assertNotNull(okHttpClient29);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNull(hostnameVerifier37);
        org.junit.Assert.assertNull(proxy38);
        org.junit.Assert.assertNotNull(okHttpClient43);
        org.junit.Assert.assertNotNull(okHttpClient45);
        org.junit.Assert.assertNotNull(okAuthenticator46);
        org.junit.Assert.assertNotNull(okHttpClient47);
        org.junit.Assert.assertNotNull(okHttpClient48);
        org.junit.Assert.assertNotNull(okHttpClient50);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNotNull(connectionPool57);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(okHttpClient62);
        org.junit.Assert.assertNotNull(okHttpClient64);
        org.junit.Assert.assertNotNull(okAuthenticator65);
        org.junit.Assert.assertNull(hostnameVerifier71);
        org.junit.Assert.assertNull(proxy72);
        org.junit.Assert.assertNull(strList77);
        org.junit.Assert.assertNotNull(okHttpClient79);
        org.junit.Assert.assertNotNull(proxy81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNull(okResponseCache85);
        org.junit.Assert.assertNotNull(okHttpClient87);
        org.junit.Assert.assertNotNull(strArray89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(okAuthenticator97);
        org.junit.Assert.assertNotNull(okHttpClient98);
    }

    @Test
    public void test12398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12398");
        java.net.Proxy proxy0 = java.net.Proxy.NO_PROXY;
        boolean boolean2 = proxy0.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type3 = proxy0.type();
        java.lang.String str4 = proxy0.toString();
        com.squareup.okhttp.OkHttpClient okHttpClient5 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier6 = null;
        okHttpClient5.hostnameVerifier = hostnameVerifier6;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory8 = okHttpClient5.getSslSocketFactory();
        boolean boolean9 = proxy0.equals((java.lang.Object) okHttpClient5);
        java.lang.String str10 = proxy0.toString();
        java.net.Proxy.Type type11 = proxy0.type();
        com.squareup.okhttp.OkHttpClient okHttpClient12 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier13 = null;
        okHttpClient12.hostnameVerifier = hostnameVerifier13;
        java.net.ResponseCache responseCache15 = null;
        okHttpClient12.responseCache = responseCache15;
        java.util.List<java.lang.String> strList17 = okHttpClient12.transports;
        com.squareup.okhttp.ConnectionPool connectionPool18 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient12.connectionPool = connectionPool18;
        java.net.CookieHandler cookieHandler20 = okHttpClient12.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache21 = okHttpClient12.okResponseCache();
        java.net.CookieHandler cookieHandler22 = okHttpClient12.getCookieHandler();
        java.net.Proxy proxy23 = okHttpClient12.proxy;
        boolean boolean24 = proxy0.equals((java.lang.Object) okHttpClient12);
        okHttpClient12.followProtocolRedirects = true;
        java.net.Proxy proxy27 = okHttpClient12.proxy;
        javax.net.ssl.HostnameVerifier hostnameVerifier28 = okHttpClient12.hostnameVerifier;
        java.net.ProxySelector proxySelector29 = okHttpClient12.proxySelector;
        org.junit.Assert.assertNotNull(proxy0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + type3 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type3.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "DIRECT" + "'", str4, "DIRECT");
        org.junit.Assert.assertNull(sSLSocketFactory8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "DIRECT" + "'", str10, "DIRECT");
        org.junit.Assert.assertTrue("'" + type11 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type11.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNotNull(connectionPool18);
        org.junit.Assert.assertNull(cookieHandler20);
        org.junit.Assert.assertNull(okResponseCache21);
        org.junit.Assert.assertNull(cookieHandler22);
        org.junit.Assert.assertNull(proxy23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(proxy27);
        org.junit.Assert.assertNull(hostnameVerifier28);
        org.junit.Assert.assertNull(proxySelector29);
    }

    @Test
    public void test12399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12399");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.Proxy proxy8 = null;
        okHttpClient0.proxy = proxy8;
        boolean boolean10 = okHttpClient0.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        java.net.ProxySelector proxySelector12 = okHttpClient11.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier13 = okHttpClient11.hostnameVerifier;
        java.net.Proxy proxy14 = java.net.Proxy.NO_PROXY;
        boolean boolean16 = proxy14.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type17 = proxy14.type();
        java.net.Proxy.Type type18 = proxy14.type();
        okHttpClient11.proxy = proxy14;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient11.copyWithDefaults();
        com.squareup.okhttp.OkAuthenticator okAuthenticator21 = okHttpClient20.authenticator;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory22 = okHttpClient20.sslSocketFactory;
        java.net.InetAddress inetAddress23 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket25 = sSLSocketFactory22.createSocket(inetAddress23, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.net.ConnectException; message: Connection refused (Connection refused)");
        } catch (java.net.ConnectException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(proxySelector12);
        org.junit.Assert.assertNull(hostnameVerifier13);
        org.junit.Assert.assertNotNull(proxy14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + type17 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type17.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertTrue("'" + type18 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type18.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNotNull(okAuthenticator21);
        org.junit.Assert.assertNotNull(sSLSocketFactory22);
    }

    @Test
    public void test12400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12400");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory8 = okHttpClient0.getSslSocketFactory();
        java.net.CookieHandler cookieHandler9 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.ConnectionPool connectionPool10 = com.squareup.okhttp.ConnectionPool.getDefault();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool10);
        com.squareup.okhttp.OkHttpClient okHttpClient12 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier13 = null;
        okHttpClient12.hostnameVerifier = hostnameVerifier13;
        java.net.ProxySelector proxySelector15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient12.setProxySelector(proxySelector15);
        java.net.CookieHandler cookieHandler17 = okHttpClient12.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier19 = null;
        okHttpClient18.hostnameVerifier = hostnameVerifier19;
        java.net.ResponseCache responseCache21 = null;
        okHttpClient18.responseCache = responseCache21;
        java.util.List<java.lang.String> strList23 = okHttpClient18.transports;
        com.squareup.okhttp.ConnectionPool connectionPool24 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient18.connectionPool = connectionPool24;
        java.net.Proxy proxy26 = null;
        okHttpClient18.proxy = proxy26;
        java.util.Set<com.squareup.okhttp.Route> routeSet28 = okHttpClient18.failedRoutes;
        okHttpClient12.failedRoutes = routeSet28;
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient12.setHostnameVerifier(hostnameVerifier30);
        java.net.ProxySelector proxySelector32 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient31.setProxySelector(proxySelector32);
        com.squareup.okhttp.ConnectionPool connectionPool36 = new com.squareup.okhttp.ConnectionPool((int) (byte) 10, (long) (byte) 0);
        okHttpClient31.connectionPool = connectionPool36;
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient31.copyWithDefaults();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory39 = okHttpClient38.getSslSocketFactory();
        javax.net.ssl.HostnameVerifier hostnameVerifier40 = okHttpClient38.hostnameVerifier;
        javax.net.ssl.HostnameVerifier hostnameVerifier41 = okHttpClient38.hostnameVerifier;
        okHttpClient11.hostnameVerifier = hostnameVerifier41;
        java.net.Proxy proxy43 = okHttpClient11.proxy;
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNull(sSLSocketFactory8);
        org.junit.Assert.assertNull(cookieHandler9);
        org.junit.Assert.assertNotNull(connectionPool10);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNull(cookieHandler17);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNotNull(connectionPool24);
        org.junit.Assert.assertNotNull(routeSet28);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNotNull(okHttpClient33);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNotNull(sSLSocketFactory39);
        org.junit.Assert.assertNotNull(hostnameVerifier40);
        org.junit.Assert.assertNotNull(hostnameVerifier41);
        org.junit.Assert.assertNull(proxy43);
    }

    @Test
    public void test12401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12401");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient0.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.copyWithDefaults();
        java.util.List<java.lang.String> strList12 = okHttpClient0.getTransports();
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient14 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool15 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient14.connectionPool = connectionPool15;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = null;
        okHttpClient17.hostnameVerifier = hostnameVerifier18;
        java.net.ResponseCache responseCache20 = null;
        okHttpClient17.responseCache = responseCache20;
        java.util.List<java.lang.String> strList22 = okHttpClient17.transports;
        com.squareup.okhttp.ConnectionPool connectionPool23 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient17.connectionPool = connectionPool23;
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient14.setConnectionPool(connectionPool23);
        com.squareup.okhttp.ConnectionPool connectionPool26 = okHttpClient25.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator27 = okHttpClient25.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool30 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient25.connectionPool = connectionPool30;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier33 = null;
        okHttpClient32.hostnameVerifier = hostnameVerifier33;
        java.net.ResponseCache responseCache35 = null;
        okHttpClient32.responseCache = responseCache35;
        java.util.List<java.lang.String> strList37 = okHttpClient32.transports;
        com.squareup.okhttp.ConnectionPool connectionPool38 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient32.connectionPool = connectionPool38;
        java.net.CookieHandler cookieHandler40 = okHttpClient32.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache41 = okHttpClient32.okResponseCache();
        java.net.CookieHandler cookieHandler42 = okHttpClient32.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient43 = new com.squareup.okhttp.OkHttpClient(okHttpClient32);
        java.net.Proxy proxy44 = java.net.Proxy.NO_PROXY;
        boolean boolean46 = proxy44.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type47 = proxy44.type();
        java.net.SocketAddress socketAddress48 = proxy44.address();
        com.squareup.okhttp.OkHttpClient okHttpClient49 = okHttpClient32.setProxy(proxy44);
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient25.setProxy(proxy44);
        com.squareup.okhttp.OkHttpClient okHttpClient51 = okHttpClient0.setProxy(proxy44);
        com.squareup.okhttp.OkHttpClient okHttpClient52 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier53 = null;
        okHttpClient52.hostnameVerifier = hostnameVerifier53;
        java.net.ResponseCache responseCache55 = null;
        okHttpClient52.responseCache = responseCache55;
        javax.net.ssl.HostnameVerifier hostnameVerifier57 = okHttpClient52.hostnameVerifier;
        java.net.Proxy proxy58 = okHttpClient52.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool61 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient52.connectionPool = connectionPool61;
        com.squareup.okhttp.OkHttpClient okHttpClient63 = okHttpClient52.copyWithDefaults();
        java.net.ResponseCache responseCache64 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient65 = okHttpClient63.setResponseCache(responseCache64);
        javax.net.ssl.HostnameVerifier hostnameVerifier66 = okHttpClient65.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient67 = okHttpClient51.setHostnameVerifier(hostnameVerifier66);
        com.squareup.okhttp.OkHttpClient okHttpClient68 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier69 = null;
        okHttpClient68.hostnameVerifier = hostnameVerifier69;
        java.net.ResponseCache responseCache71 = null;
        okHttpClient68.responseCache = responseCache71;
        javax.net.ssl.HostnameVerifier hostnameVerifier73 = okHttpClient68.hostnameVerifier;
        java.net.Proxy proxy74 = okHttpClient68.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool77 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient68.connectionPool = connectionPool77;
        com.squareup.okhttp.OkHttpClient okHttpClient79 = okHttpClient68.copyWithDefaults();
        java.net.Proxy proxy80 = okHttpClient79.getProxy();
        java.net.CookieHandler cookieHandler81 = null;
        okHttpClient79.cookieHandler = cookieHandler81;
        com.squareup.okhttp.OkAuthenticator okAuthenticator83 = okHttpClient79.getAuthenticator();
        okHttpClient51.authenticator = okAuthenticator83;
        java.net.ResponseCache responseCache85 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient86 = okHttpClient51.setResponseCache(responseCache85);
        boolean boolean87 = okHttpClient51.followProtocolRedirects;
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNotNull(connectionPool15);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNotNull(connectionPool23);
        org.junit.Assert.assertNotNull(okHttpClient25);
        org.junit.Assert.assertNotNull(connectionPool26);
        org.junit.Assert.assertNull(okAuthenticator27);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(connectionPool38);
        org.junit.Assert.assertNull(cookieHandler40);
        org.junit.Assert.assertNull(okResponseCache41);
        org.junit.Assert.assertNull(cookieHandler42);
        org.junit.Assert.assertNotNull(proxy44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + type47 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type47.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress48);
        org.junit.Assert.assertNotNull(okHttpClient49);
        org.junit.Assert.assertNotNull(okHttpClient50);
        org.junit.Assert.assertNotNull(okHttpClient51);
        org.junit.Assert.assertNull(hostnameVerifier57);
        org.junit.Assert.assertNull(proxy58);
        org.junit.Assert.assertNotNull(okHttpClient63);
        org.junit.Assert.assertNotNull(okHttpClient65);
        org.junit.Assert.assertNotNull(hostnameVerifier66);
        org.junit.Assert.assertNotNull(okHttpClient67);
        org.junit.Assert.assertNull(hostnameVerifier73);
        org.junit.Assert.assertNull(proxy74);
        org.junit.Assert.assertNotNull(okHttpClient79);
        org.junit.Assert.assertNull(proxy80);
        org.junit.Assert.assertNotNull(okAuthenticator83);
        org.junit.Assert.assertNotNull(okHttpClient86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
    }

    @Test
    public void test12402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12402");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.ConnectionPool connectionPool12 = okHttpClient11.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator13 = okHttpClient11.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool16 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient11.connectionPool = connectionPool16;
        java.net.ResponseCache responseCache18 = okHttpClient11.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory19 = okHttpClient11.sslSocketFactory;
        java.net.Proxy proxy20 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress21 = proxy20.address();
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient11.setProxy(proxy20);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory23 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient11.setSSLSocketFactory(sSLSocketFactory23);
        java.net.ResponseCache responseCache25 = okHttpClient11.getResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator26 = okHttpClient11.getAuthenticator();
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNull(okAuthenticator13);
        org.junit.Assert.assertNull(responseCache18);
        org.junit.Assert.assertNull(sSLSocketFactory19);
        org.junit.Assert.assertNotNull(proxy20);
        org.junit.Assert.assertNull(socketAddress21);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNull(responseCache25);
        org.junit.Assert.assertNull(okAuthenticator26);
    }

    @Test
    public void test12403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12403");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient0.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.copyWithDefaults();
        java.net.ResponseCache responseCache12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setResponseCache(responseCache12);
        java.net.ProxySelector proxySelector14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient11.setProxySelector(proxySelector14);
        java.net.ProxySelector proxySelector16 = okHttpClient15.proxySelector;
        java.net.ResponseCache responseCache17 = okHttpClient15.responseCache;
        java.net.ResponseCache responseCache18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient15.setResponseCache(responseCache18);
        com.squareup.okhttp.OkHttpClient okHttpClient20 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier21 = null;
        okHttpClient20.hostnameVerifier = hostnameVerifier21;
        java.net.ResponseCache responseCache23 = null;
        okHttpClient20.responseCache = responseCache23;
        java.util.List<java.lang.String> strList25 = okHttpClient20.transports;
        java.net.Proxy proxy26 = java.net.Proxy.NO_PROXY;
        boolean boolean28 = proxy26.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type29 = proxy26.type();
        java.net.SocketAddress socketAddress30 = proxy26.address();
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient20.setProxy(proxy26);
        java.net.SocketAddress socketAddress32 = proxy26.address();
        java.net.Proxy.Type type33 = proxy26.type();
        java.net.SocketAddress socketAddress34 = proxy26.address();
        java.net.SocketAddress socketAddress35 = proxy26.address();
        java.lang.String str36 = proxy26.toString();
        java.net.Proxy.Type type37 = proxy26.type();
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient19.setProxy(proxy26);
        java.net.CookieHandler cookieHandler39 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient40 = okHttpClient38.setCookieHandler(cookieHandler39);
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNull(proxySelector16);
        org.junit.Assert.assertNull(responseCache17);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNotNull(proxy26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + type29 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type29.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress30);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNull(socketAddress32);
        org.junit.Assert.assertTrue("'" + type33 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type33.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress34);
        org.junit.Assert.assertNull(socketAddress35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "DIRECT" + "'", str36, "DIRECT");
        org.junit.Assert.assertTrue("'" + type37 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type37.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNotNull(okHttpClient40);
    }

    @Test
    public void test12404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12404");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache8 = okHttpClient7.okResponseCache();
        java.net.ResponseCache responseCache9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient7.setResponseCache(responseCache9);
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        okHttpClient7.transports = strList13;
        okHttpClient0.transports = strList13;
        javax.net.ssl.HostnameVerifier hostnameVerifier17 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier17;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory20 = okHttpClient0.sslSocketFactory;
        java.net.CookieHandler cookieHandler21 = okHttpClient0.cookieHandler;
        java.net.CookieHandler cookieHandler22 = null;
        okHttpClient0.cookieHandler = cookieHandler22;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        boolean boolean25 = okHttpClient0.getFollowProtocolRedirects();
        java.net.ResponseCache responseCache26 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient0.setResponseCache(responseCache26);
        com.squareup.okhttp.ConnectionPool connectionPool28 = okHttpClient27.getConnectionPool();
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNull(okResponseCache8);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(sSLSocketFactory20);
        org.junit.Assert.assertNull(cookieHandler21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNull(connectionPool28);
    }

    @Test
    public void test12405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12405");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.CookieHandler cookieHandler5 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = null;
        okHttpClient6.hostnameVerifier = hostnameVerifier7;
        java.net.ResponseCache responseCache9 = null;
        okHttpClient6.responseCache = responseCache9;
        java.util.List<java.lang.String> strList11 = okHttpClient6.transports;
        com.squareup.okhttp.ConnectionPool connectionPool12 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient6.connectionPool = connectionPool12;
        java.net.Proxy proxy14 = null;
        okHttpClient6.proxy = proxy14;
        java.util.Set<com.squareup.okhttp.Route> routeSet16 = okHttpClient6.failedRoutes;
        okHttpClient0.failedRoutes = routeSet16;
        java.net.ProxySelector proxySelector18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient0.setProxySelector(proxySelector18);
        java.net.CookieHandler cookieHandler20 = okHttpClient0.cookieHandler;
        java.net.ResponseCache responseCache21 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient0.setResponseCache(responseCache21);
        java.net.ProxySelector proxySelector23 = null;
        okHttpClient0.proxySelector = proxySelector23;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory25 = okHttpClient0.sslSocketFactory;
        java.net.CookieHandler cookieHandler26 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient0.setCookieHandler(cookieHandler26);
        com.squareup.okhttp.OkHttpClient okHttpClient28 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier29 = null;
        okHttpClient28.hostnameVerifier = hostnameVerifier29;
        java.net.ResponseCache responseCache31 = null;
        okHttpClient28.responseCache = responseCache31;
        javax.net.ssl.HostnameVerifier hostnameVerifier33 = okHttpClient28.hostnameVerifier;
        java.net.Proxy proxy34 = okHttpClient28.getProxy();
        java.net.CookieHandler cookieHandler35 = null;
        okHttpClient28.cookieHandler = cookieHandler35;
        okHttpClient28.followProtocolRedirects = true;
        java.net.CookieHandler cookieHandler39 = okHttpClient28.getCookieHandler();
        java.net.Proxy proxy40 = okHttpClient28.proxy;
        java.net.ProxySelector proxySelector41 = okHttpClient28.getProxySelector();
        java.net.CookieHandler cookieHandler42 = okHttpClient28.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient43 = okHttpClient28.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient44 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier45 = null;
        okHttpClient44.hostnameVerifier = hostnameVerifier45;
        java.net.ProxySelector proxySelector47 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient48 = okHttpClient44.setProxySelector(proxySelector47);
        javax.net.ssl.HostnameVerifier hostnameVerifier49 = okHttpClient44.hostnameVerifier;
        java.net.CookieHandler cookieHandler50 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient51 = okHttpClient44.setCookieHandler(cookieHandler50);
        com.squareup.okhttp.OkHttpClient okHttpClient52 = new com.squareup.okhttp.OkHttpClient(okHttpClient51);
        java.net.Proxy proxy53 = okHttpClient52.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient54 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier55 = null;
        okHttpClient54.hostnameVerifier = hostnameVerifier55;
        java.net.ResponseCache responseCache57 = null;
        okHttpClient54.responseCache = responseCache57;
        java.util.List<java.lang.String> strList59 = okHttpClient54.transports;
        com.squareup.okhttp.ConnectionPool connectionPool60 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient54.connectionPool = connectionPool60;
        java.net.CookieHandler cookieHandler62 = okHttpClient54.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache63 = okHttpClient54.okResponseCache();
        java.net.CookieHandler cookieHandler64 = okHttpClient54.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient65 = new com.squareup.okhttp.OkHttpClient(okHttpClient54);
        java.net.Proxy proxy66 = java.net.Proxy.NO_PROXY;
        boolean boolean68 = proxy66.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type69 = proxy66.type();
        java.net.SocketAddress socketAddress70 = proxy66.address();
        com.squareup.okhttp.OkHttpClient okHttpClient71 = okHttpClient54.setProxy(proxy66);
        com.squareup.okhttp.OkHttpClient okHttpClient72 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier73 = null;
        okHttpClient72.hostnameVerifier = hostnameVerifier73;
        java.net.ResponseCache responseCache75 = null;
        okHttpClient72.responseCache = responseCache75;
        java.util.List<java.lang.String> strList77 = okHttpClient72.transports;
        com.squareup.okhttp.ConnectionPool connectionPool78 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient72.connectionPool = connectionPool78;
        com.squareup.okhttp.OkHttpClient okHttpClient80 = okHttpClient72.copyWithDefaults();
        java.net.ProxySelector proxySelector81 = okHttpClient80.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory82 = okHttpClient80.getSslSocketFactory();
        okHttpClient71.sslSocketFactory = sSLSocketFactory82;
        java.lang.String[] strArray84 = sSLSocketFactory82.getDefaultCipherSuites();
        java.lang.String[] strArray85 = sSLSocketFactory82.getSupportedCipherSuites();
        okHttpClient52.sslSocketFactory = sSLSocketFactory82;
        okHttpClient28.sslSocketFactory = sSLSocketFactory82;
        com.squareup.okhttp.OkHttpClient okHttpClient88 = okHttpClient27.setSSLSocketFactory(sSLSocketFactory82);
        java.lang.String[] strArray89 = sSLSocketFactory82.getDefaultCipherSuites();
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNotNull(routeSet16);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNull(cookieHandler20);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNull(sSLSocketFactory25);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNull(hostnameVerifier33);
        org.junit.Assert.assertNull(proxy34);
        org.junit.Assert.assertNull(cookieHandler39);
        org.junit.Assert.assertNull(proxy40);
        org.junit.Assert.assertNull(proxySelector41);
        org.junit.Assert.assertNull(cookieHandler42);
        org.junit.Assert.assertNotNull(okHttpClient43);
        org.junit.Assert.assertNotNull(okHttpClient48);
        org.junit.Assert.assertNull(hostnameVerifier49);
        org.junit.Assert.assertNotNull(okHttpClient51);
        org.junit.Assert.assertNull(proxy53);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNotNull(connectionPool60);
        org.junit.Assert.assertNull(cookieHandler62);
        org.junit.Assert.assertNull(okResponseCache63);
        org.junit.Assert.assertNull(cookieHandler64);
        org.junit.Assert.assertNotNull(proxy66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + type69 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type69.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress70);
        org.junit.Assert.assertNotNull(okHttpClient71);
        org.junit.Assert.assertNull(strList77);
        org.junit.Assert.assertNotNull(connectionPool78);
        org.junit.Assert.assertNotNull(okHttpClient80);
// flaky:         org.junit.Assert.assertNull(proxySelector81);
        org.junit.Assert.assertNotNull(sSLSocketFactory82);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertNotNull(okHttpClient88);
        org.junit.Assert.assertNotNull(strArray89);
    }

    @Test
    public void test12406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12406");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.OkAuthenticator okAuthenticator7 = okHttpClient0.authenticator;
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNull(okAuthenticator7);
    }

    @Test
    public void test12407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12407");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.Proxy proxy8 = null;
        okHttpClient0.proxy = proxy8;
        boolean boolean10 = okHttpClient0.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        java.net.ProxySelector proxySelector12 = okHttpClient11.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier13 = okHttpClient11.hostnameVerifier;
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = okHttpClient11.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool16 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient15.connectionPool = connectionPool16;
        com.squareup.okhttp.OkAuthenticator okAuthenticator18 = null;
        okHttpClient15.authenticator = okAuthenticator18;
        java.net.CookieHandler cookieHandler20 = null;
        okHttpClient15.cookieHandler = cookieHandler20;
        java.net.Proxy proxy22 = java.net.Proxy.NO_PROXY;
        boolean boolean24 = proxy22.equals((java.lang.Object) 1L);
        com.squareup.okhttp.OkHttpClient okHttpClient25 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache26 = okHttpClient25.okResponseCache();
        java.net.ResponseCache responseCache27 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient25.setResponseCache(responseCache27);
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        okHttpClient25.transports = strList31;
        boolean boolean34 = proxy22.equals((java.lang.Object) strList31);
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient15.setProxy(proxy22);
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient11.setProxy(proxy22);
        com.squareup.okhttp.OkHttpClient okHttpClient37 = new com.squareup.okhttp.OkHttpClient(okHttpClient36);
        javax.net.ssl.HostnameVerifier hostnameVerifier38 = okHttpClient36.getHostnameVerifier();
        javax.net.ssl.HostnameVerifier hostnameVerifier39 = okHttpClient36.getHostnameVerifier();
        java.net.ProxySelector proxySelector40 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient41 = okHttpClient36.setProxySelector(proxySelector40);
        java.util.List<java.lang.String> strList42 = null;
        okHttpClient36.transports = strList42;
        okHttpClient36.followProtocolRedirects = true;
        java.net.CookieHandler cookieHandler46 = okHttpClient36.getCookieHandler();
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(proxySelector12);
        org.junit.Assert.assertNull(hostnameVerifier13);
        org.junit.Assert.assertNull(hostnameVerifier14);
        org.junit.Assert.assertNotNull(connectionPool16);
        org.junit.Assert.assertNotNull(proxy22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(okResponseCache26);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNull(hostnameVerifier38);
        org.junit.Assert.assertNull(hostnameVerifier39);
        org.junit.Assert.assertNotNull(okHttpClient41);
        org.junit.Assert.assertNull(cookieHandler46);
    }

    @Test
    public void test12408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12408");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        boolean boolean3 = okHttpClient0.getFollowProtocolRedirects();
        java.net.CookieHandler cookieHandler4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setCookieHandler(cookieHandler4);
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache6 = okHttpClient0.okResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        boolean boolean8 = okHttpClient7.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient9 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier10 = null;
        okHttpClient9.hostnameVerifier = hostnameVerifier10;
        java.net.ProxySelector proxySelector12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient9.setProxySelector(proxySelector12);
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient13.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool17 = new com.squareup.okhttp.ConnectionPool(10, (long) 10);
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient14.setConnectionPool(connectionPool17);
        java.net.CookieHandler cookieHandler19 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient18.setCookieHandler(cookieHandler19);
        com.squareup.okhttp.OkHttpClient okHttpClient21 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool22 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient21.connectionPool = connectionPool22;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier25 = null;
        okHttpClient24.hostnameVerifier = hostnameVerifier25;
        java.net.ResponseCache responseCache27 = null;
        okHttpClient24.responseCache = responseCache27;
        java.util.List<java.lang.String> strList29 = okHttpClient24.transports;
        com.squareup.okhttp.ConnectionPool connectionPool30 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient24.connectionPool = connectionPool30;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient21.setConnectionPool(connectionPool30);
        com.squareup.okhttp.ConnectionPool connectionPool33 = okHttpClient32.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator34 = okHttpClient32.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool37 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient32.connectionPool = connectionPool37;
        java.net.ResponseCache responseCache39 = okHttpClient32.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory40 = okHttpClient32.sslSocketFactory;
        java.net.Proxy proxy41 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress42 = proxy41.address();
        com.squareup.okhttp.OkHttpClient okHttpClient43 = okHttpClient32.setProxy(proxy41);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory44 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient45 = okHttpClient32.setSSLSocketFactory(sSLSocketFactory44);
        com.squareup.okhttp.OkHttpClient okHttpClient46 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier47 = null;
        okHttpClient46.hostnameVerifier = hostnameVerifier47;
        java.net.ResponseCache responseCache49 = null;
        okHttpClient46.responseCache = responseCache49;
        javax.net.ssl.HostnameVerifier hostnameVerifier51 = okHttpClient46.hostnameVerifier;
        java.net.Proxy proxy52 = okHttpClient46.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool55 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient46.connectionPool = connectionPool55;
        com.squareup.okhttp.OkHttpClient okHttpClient57 = okHttpClient46.copyWithDefaults();
        java.net.ResponseCache responseCache58 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient59 = okHttpClient57.setResponseCache(responseCache58);
        com.squareup.okhttp.OkAuthenticator okAuthenticator60 = okHttpClient57.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient61 = okHttpClient32.setAuthenticator(okAuthenticator60);
        java.net.ProxySelector proxySelector62 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient63 = okHttpClient61.setProxySelector(proxySelector62);
        com.squareup.okhttp.OkHttpClient okHttpClient64 = new com.squareup.okhttp.OkHttpClient(okHttpClient61);
        java.util.Set<com.squareup.okhttp.Route> routeSet65 = okHttpClient61.failedRoutes;
        okHttpClient18.failedRoutes = routeSet65;
        okHttpClient7.failedRoutes = routeSet65;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(okResponseCache6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNotNull(okHttpClient14);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNotNull(connectionPool22);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(connectionPool30);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertNotNull(connectionPool33);
        org.junit.Assert.assertNull(okAuthenticator34);
        org.junit.Assert.assertNull(responseCache39);
        org.junit.Assert.assertNull(sSLSocketFactory40);
        org.junit.Assert.assertNotNull(proxy41);
        org.junit.Assert.assertNull(socketAddress42);
        org.junit.Assert.assertNotNull(okHttpClient43);
        org.junit.Assert.assertNotNull(okHttpClient45);
        org.junit.Assert.assertNull(hostnameVerifier51);
        org.junit.Assert.assertNull(proxy52);
        org.junit.Assert.assertNotNull(okHttpClient57);
        org.junit.Assert.assertNotNull(okHttpClient59);
        org.junit.Assert.assertNotNull(okAuthenticator60);
        org.junit.Assert.assertNotNull(okHttpClient61);
        org.junit.Assert.assertNotNull(okHttpClient63);
        org.junit.Assert.assertNotNull(routeSet65);
    }

    @Test
    public void test12409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12409");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache1 = okHttpClient0.okResponseCache();
        java.net.ResponseCache responseCache2 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.setResponseCache(responseCache2);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        okHttpClient0.transports = strList6;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory9);
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = null;
        okHttpClient11.hostnameVerifier = hostnameVerifier12;
        java.net.ResponseCache responseCache14 = null;
        okHttpClient11.responseCache = responseCache14;
        javax.net.ssl.HostnameVerifier hostnameVerifier16 = okHttpClient11.hostnameVerifier;
        java.net.Proxy proxy17 = okHttpClient11.getProxy();
        java.net.CookieHandler cookieHandler18 = null;
        okHttpClient11.cookieHandler = cookieHandler18;
        okHttpClient11.followProtocolRedirects = true;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier23 = null;
        okHttpClient22.hostnameVerifier = hostnameVerifier23;
        java.net.ResponseCache responseCache25 = null;
        okHttpClient22.responseCache = responseCache25;
        javax.net.ssl.HostnameVerifier hostnameVerifier27 = okHttpClient22.hostnameVerifier;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory28 = okHttpClient22.sslSocketFactory;
        java.net.CookieHandler cookieHandler29 = okHttpClient22.cookieHandler;
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = okHttpClient22.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool32 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient31.connectionPool = connectionPool32;
        com.squareup.okhttp.OkAuthenticator okAuthenticator34 = null;
        okHttpClient31.authenticator = okAuthenticator34;
        java.util.List<java.lang.String> strList36 = okHttpClient31.transports;
        java.net.ResponseCache responseCache37 = null;
        okHttpClient31.responseCache = responseCache37;
        com.squareup.okhttp.OkHttpClient okHttpClient39 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier40 = null;
        okHttpClient39.hostnameVerifier = hostnameVerifier40;
        java.net.ResponseCache responseCache42 = null;
        okHttpClient39.responseCache = responseCache42;
        javax.net.ssl.HostnameVerifier hostnameVerifier44 = okHttpClient39.hostnameVerifier;
        java.net.Proxy proxy45 = okHttpClient39.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool48 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient39.connectionPool = connectionPool48;
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient39.copyWithDefaults();
        java.net.Proxy proxy51 = okHttpClient50.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier52 = okHttpClient50.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient53 = okHttpClient31.setHostnameVerifier(hostnameVerifier52);
        com.squareup.okhttp.OkHttpClient okHttpClient54 = okHttpClient22.setHostnameVerifier(hostnameVerifier52);
        okHttpClient11.hostnameVerifier = hostnameVerifier52;
        com.squareup.okhttp.OkHttpClient okHttpClient56 = okHttpClient0.setHostnameVerifier(hostnameVerifier52);
        com.squareup.okhttp.OkHttpClient okHttpClient57 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        java.lang.Class<?> wildcardClass58 = okHttpClient0.getClass();
        org.junit.Assert.assertNull(okResponseCache1);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertNull(hostnameVerifier16);
        org.junit.Assert.assertNull(proxy17);
        org.junit.Assert.assertNull(hostnameVerifier27);
        org.junit.Assert.assertNull(sSLSocketFactory28);
        org.junit.Assert.assertNull(cookieHandler29);
        org.junit.Assert.assertNull(hostnameVerifier30);
        org.junit.Assert.assertNotNull(connectionPool32);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNull(hostnameVerifier44);
        org.junit.Assert.assertNull(proxy45);
        org.junit.Assert.assertNotNull(okHttpClient50);
        org.junit.Assert.assertNull(proxy51);
        org.junit.Assert.assertNotNull(hostnameVerifier52);
        org.junit.Assert.assertNotNull(okHttpClient53);
        org.junit.Assert.assertNotNull(okHttpClient54);
        org.junit.Assert.assertNotNull(okHttpClient56);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test12410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12410");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.Proxy proxy8 = null;
        okHttpClient0.proxy = proxy8;
        boolean boolean10 = okHttpClient0.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        java.net.ProxySelector proxySelector12 = okHttpClient11.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier13 = okHttpClient11.hostnameVerifier;
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = okHttpClient11.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool16 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient15.connectionPool = connectionPool16;
        com.squareup.okhttp.OkAuthenticator okAuthenticator18 = null;
        okHttpClient15.authenticator = okAuthenticator18;
        java.net.CookieHandler cookieHandler20 = null;
        okHttpClient15.cookieHandler = cookieHandler20;
        java.net.Proxy proxy22 = java.net.Proxy.NO_PROXY;
        boolean boolean24 = proxy22.equals((java.lang.Object) 1L);
        com.squareup.okhttp.OkHttpClient okHttpClient25 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache26 = okHttpClient25.okResponseCache();
        java.net.ResponseCache responseCache27 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient25.setResponseCache(responseCache27);
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        okHttpClient25.transports = strList31;
        boolean boolean34 = proxy22.equals((java.lang.Object) strList31);
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient15.setProxy(proxy22);
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient11.setProxy(proxy22);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory37 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient11.setSSLSocketFactory(sSLSocketFactory37);
        java.net.Proxy proxy39 = okHttpClient38.getProxy();
        java.net.SocketAddress socketAddress40 = proxy39.address();
        java.net.Proxy.Type type41 = proxy39.type();
        java.net.SocketAddress socketAddress42 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Proxy proxy43 = new java.net.Proxy(type41, socketAddress42);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: type DIRECT is not compatible with address null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(proxySelector12);
        org.junit.Assert.assertNull(hostnameVerifier13);
        org.junit.Assert.assertNull(hostnameVerifier14);
        org.junit.Assert.assertNotNull(connectionPool16);
        org.junit.Assert.assertNotNull(proxy22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(okResponseCache26);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNotNull(proxy39);
        org.junit.Assert.assertNull(socketAddress40);
        org.junit.Assert.assertTrue("'" + type41 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type41.equals(java.net.Proxy.Type.DIRECT));
    }

    @Test
    public void test12411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12411");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.ResponseCache responseCache5 = null;
        okHttpClient4.responseCache = responseCache5;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient4.setSSLSocketFactory(sSLSocketFactory7);
        com.squareup.okhttp.OkHttpClient okHttpClient9 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool10 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient9.connectionPool = connectionPool10;
        com.squareup.okhttp.OkAuthenticator okAuthenticator12 = null;
        okHttpClient9.authenticator = okAuthenticator12;
        java.util.List<java.lang.String> strList14 = okHttpClient9.transports;
        java.net.ResponseCache responseCache15 = null;
        okHttpClient9.responseCache = responseCache15;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = null;
        okHttpClient17.hostnameVerifier = hostnameVerifier18;
        java.net.ResponseCache responseCache20 = null;
        okHttpClient17.responseCache = responseCache20;
        javax.net.ssl.HostnameVerifier hostnameVerifier22 = okHttpClient17.hostnameVerifier;
        java.net.Proxy proxy23 = okHttpClient17.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool26 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient17.connectionPool = connectionPool26;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient17.copyWithDefaults();
        java.net.Proxy proxy29 = okHttpClient28.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = okHttpClient28.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient9.setHostnameVerifier(hostnameVerifier30);
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient8.setHostnameVerifier(hostnameVerifier30);
        java.net.ProxySelector proxySelector33 = okHttpClient32.proxySelector;
        com.squareup.okhttp.OkHttpClient okHttpClient34 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier35 = null;
        okHttpClient34.hostnameVerifier = hostnameVerifier35;
        java.net.ProxySelector proxySelector37 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient34.setProxySelector(proxySelector37);
        java.net.CookieHandler cookieHandler39 = okHttpClient34.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient40 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier41 = null;
        okHttpClient40.hostnameVerifier = hostnameVerifier41;
        java.net.ResponseCache responseCache43 = null;
        okHttpClient40.responseCache = responseCache43;
        java.util.List<java.lang.String> strList45 = okHttpClient40.transports;
        com.squareup.okhttp.ConnectionPool connectionPool46 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient40.connectionPool = connectionPool46;
        java.net.Proxy proxy48 = null;
        okHttpClient40.proxy = proxy48;
        java.util.Set<com.squareup.okhttp.Route> routeSet50 = okHttpClient40.failedRoutes;
        okHttpClient34.failedRoutes = routeSet50;
        java.net.ProxySelector proxySelector52 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient53 = okHttpClient34.setProxySelector(proxySelector52);
        java.net.CookieHandler cookieHandler54 = okHttpClient34.cookieHandler;
        com.squareup.okhttp.OkHttpClient okHttpClient55 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool56 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient55.connectionPool = connectionPool56;
        com.squareup.okhttp.OkHttpClient okHttpClient58 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier59 = null;
        okHttpClient58.hostnameVerifier = hostnameVerifier59;
        java.net.ResponseCache responseCache61 = null;
        okHttpClient58.responseCache = responseCache61;
        java.util.List<java.lang.String> strList63 = okHttpClient58.transports;
        com.squareup.okhttp.ConnectionPool connectionPool64 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient58.connectionPool = connectionPool64;
        com.squareup.okhttp.OkHttpClient okHttpClient66 = okHttpClient55.setConnectionPool(connectionPool64);
        java.net.Proxy proxy67 = okHttpClient66.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient68 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool69 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient68.connectionPool = connectionPool69;
        int int71 = connectionPool69.getSpdyConnectionCount();
        okHttpClient66.connectionPool = connectionPool69;
        int int73 = connectionPool69.getSpdyConnectionCount();
        int int74 = connectionPool69.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient75 = okHttpClient34.setConnectionPool(connectionPool69);
        com.squareup.okhttp.OkHttpClient okHttpClient76 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier77 = null;
        okHttpClient76.hostnameVerifier = hostnameVerifier77;
        java.net.ResponseCache responseCache79 = null;
        okHttpClient76.responseCache = responseCache79;
        java.util.List<java.lang.String> strList81 = okHttpClient76.transports;
        com.squareup.okhttp.ConnectionPool connectionPool82 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient76.connectionPool = connectionPool82;
        com.squareup.okhttp.OkHttpClient okHttpClient84 = okHttpClient76.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient85 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier86 = null;
        okHttpClient85.hostnameVerifier = hostnameVerifier86;
        java.net.ResponseCache responseCache88 = null;
        okHttpClient85.responseCache = responseCache88;
        java.util.List<java.lang.String> strList90 = okHttpClient85.transports;
        com.squareup.okhttp.ConnectionPool connectionPool91 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient85.connectionPool = connectionPool91;
        com.squareup.okhttp.OkHttpClient okHttpClient93 = okHttpClient85.copyWithDefaults();
        java.net.ProxySelector proxySelector94 = okHttpClient93.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory95 = okHttpClient93.getSslSocketFactory();
        okHttpClient76.sslSocketFactory = sSLSocketFactory95;
        okHttpClient34.sslSocketFactory = sSLSocketFactory95;
        java.lang.String[] strArray98 = sSLSocketFactory95.getDefaultCipherSuites();
        okHttpClient32.sslSocketFactory = sSLSocketFactory95;
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertNotNull(connectionPool10);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(hostnameVerifier22);
        org.junit.Assert.assertNull(proxy23);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNull(proxy29);
        org.junit.Assert.assertNotNull(hostnameVerifier30);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertNull(proxySelector33);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNull(cookieHandler39);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNotNull(connectionPool46);
        org.junit.Assert.assertNotNull(routeSet50);
        org.junit.Assert.assertNotNull(okHttpClient53);
        org.junit.Assert.assertNull(cookieHandler54);
        org.junit.Assert.assertNotNull(connectionPool56);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNotNull(connectionPool64);
        org.junit.Assert.assertNotNull(okHttpClient66);
        org.junit.Assert.assertNull(proxy67);
        org.junit.Assert.assertNotNull(connectionPool69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNotNull(okHttpClient75);
        org.junit.Assert.assertNull(strList81);
        org.junit.Assert.assertNotNull(connectionPool82);
        org.junit.Assert.assertNotNull(okHttpClient84);
        org.junit.Assert.assertNull(strList90);
        org.junit.Assert.assertNotNull(connectionPool91);
        org.junit.Assert.assertNotNull(okHttpClient93);
// flaky:         org.junit.Assert.assertNull(proxySelector94);
        org.junit.Assert.assertNotNull(sSLSocketFactory95);
        org.junit.Assert.assertNotNull(strArray98);
    }

    @Test
    public void test12412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12412");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache1 = okHttpClient0.okResponseCache();
        java.net.ResponseCache responseCache2 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.setResponseCache(responseCache2);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        okHttpClient0.transports = strList6;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory9);
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = null;
        okHttpClient11.hostnameVerifier = hostnameVerifier12;
        java.net.ResponseCache responseCache14 = null;
        okHttpClient11.responseCache = responseCache14;
        javax.net.ssl.HostnameVerifier hostnameVerifier16 = okHttpClient11.hostnameVerifier;
        java.net.Proxy proxy17 = okHttpClient11.getProxy();
        java.net.CookieHandler cookieHandler18 = null;
        okHttpClient11.cookieHandler = cookieHandler18;
        okHttpClient11.followProtocolRedirects = true;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier23 = null;
        okHttpClient22.hostnameVerifier = hostnameVerifier23;
        java.net.ResponseCache responseCache25 = null;
        okHttpClient22.responseCache = responseCache25;
        javax.net.ssl.HostnameVerifier hostnameVerifier27 = okHttpClient22.hostnameVerifier;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory28 = okHttpClient22.sslSocketFactory;
        java.net.CookieHandler cookieHandler29 = okHttpClient22.cookieHandler;
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = okHttpClient22.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool32 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient31.connectionPool = connectionPool32;
        com.squareup.okhttp.OkAuthenticator okAuthenticator34 = null;
        okHttpClient31.authenticator = okAuthenticator34;
        java.util.List<java.lang.String> strList36 = okHttpClient31.transports;
        java.net.ResponseCache responseCache37 = null;
        okHttpClient31.responseCache = responseCache37;
        com.squareup.okhttp.OkHttpClient okHttpClient39 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier40 = null;
        okHttpClient39.hostnameVerifier = hostnameVerifier40;
        java.net.ResponseCache responseCache42 = null;
        okHttpClient39.responseCache = responseCache42;
        javax.net.ssl.HostnameVerifier hostnameVerifier44 = okHttpClient39.hostnameVerifier;
        java.net.Proxy proxy45 = okHttpClient39.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool48 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient39.connectionPool = connectionPool48;
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient39.copyWithDefaults();
        java.net.Proxy proxy51 = okHttpClient50.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier52 = okHttpClient50.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient53 = okHttpClient31.setHostnameVerifier(hostnameVerifier52);
        com.squareup.okhttp.OkHttpClient okHttpClient54 = okHttpClient22.setHostnameVerifier(hostnameVerifier52);
        okHttpClient11.hostnameVerifier = hostnameVerifier52;
        com.squareup.okhttp.OkHttpClient okHttpClient56 = okHttpClient0.setHostnameVerifier(hostnameVerifier52);
        java.net.ProxySelector proxySelector57 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient58 = okHttpClient56.setProxySelector(proxySelector57);
        javax.net.ssl.HostnameVerifier hostnameVerifier59 = okHttpClient58.hostnameVerifier;
        org.junit.Assert.assertNull(okResponseCache1);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertNull(hostnameVerifier16);
        org.junit.Assert.assertNull(proxy17);
        org.junit.Assert.assertNull(hostnameVerifier27);
        org.junit.Assert.assertNull(sSLSocketFactory28);
        org.junit.Assert.assertNull(cookieHandler29);
        org.junit.Assert.assertNull(hostnameVerifier30);
        org.junit.Assert.assertNotNull(connectionPool32);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNull(hostnameVerifier44);
        org.junit.Assert.assertNull(proxy45);
        org.junit.Assert.assertNotNull(okHttpClient50);
        org.junit.Assert.assertNull(proxy51);
        org.junit.Assert.assertNotNull(hostnameVerifier52);
        org.junit.Assert.assertNotNull(okHttpClient53);
        org.junit.Assert.assertNotNull(okHttpClient54);
        org.junit.Assert.assertNotNull(okHttpClient56);
        org.junit.Assert.assertNotNull(okHttpClient58);
        org.junit.Assert.assertNotNull(hostnameVerifier59);
    }

    @Test
    public void test12413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12413");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.OkAuthenticator okAuthenticator12 = okHttpClient11.getAuthenticator();
        java.net.ProxySelector proxySelector13 = okHttpClient11.getProxySelector();
        com.squareup.okhttp.OkHttpClient okHttpClient14 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool15 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient14.connectionPool = connectionPool15;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = null;
        okHttpClient17.hostnameVerifier = hostnameVerifier18;
        java.net.ResponseCache responseCache20 = null;
        okHttpClient17.responseCache = responseCache20;
        java.util.List<java.lang.String> strList22 = okHttpClient17.transports;
        com.squareup.okhttp.ConnectionPool connectionPool23 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient17.connectionPool = connectionPool23;
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient14.setConnectionPool(connectionPool23);
        java.net.ResponseCache responseCache26 = okHttpClient14.responseCache;
        java.net.ResponseCache responseCache27 = okHttpClient14.getResponseCache();
        java.net.ResponseCache responseCache28 = okHttpClient14.responseCache;
        com.squareup.okhttp.OkHttpClient okHttpClient29 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache30 = okHttpClient29.okResponseCache();
        java.net.ResponseCache responseCache31 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient29.setResponseCache(responseCache31);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory33 = okHttpClient29.sslSocketFactory;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory34 = okHttpClient29.sslSocketFactory;
        com.squareup.okhttp.OkHttpClient okHttpClient35 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier36 = null;
        okHttpClient35.hostnameVerifier = hostnameVerifier36;
        boolean boolean38 = okHttpClient35.getFollowProtocolRedirects();
        java.net.CookieHandler cookieHandler39 = okHttpClient35.cookieHandler;
        com.squareup.okhttp.OkHttpClient okHttpClient40 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier41 = null;
        okHttpClient40.hostnameVerifier = hostnameVerifier41;
        java.net.ResponseCache responseCache43 = null;
        okHttpClient40.responseCache = responseCache43;
        javax.net.ssl.HostnameVerifier hostnameVerifier45 = okHttpClient40.hostnameVerifier;
        java.net.Proxy proxy46 = okHttpClient40.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool49 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient40.connectionPool = connectionPool49;
        com.squareup.okhttp.OkHttpClient okHttpClient51 = okHttpClient40.copyWithDefaults();
        java.net.ResponseCache responseCache52 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient53 = okHttpClient51.setResponseCache(responseCache52);
        com.squareup.okhttp.OkAuthenticator okAuthenticator54 = okHttpClient51.authenticator;
        okHttpClient35.authenticator = okAuthenticator54;
        com.squareup.okhttp.OkHttpClient okHttpClient56 = okHttpClient29.setAuthenticator(okAuthenticator54);
        com.squareup.okhttp.OkHttpClient okHttpClient57 = okHttpClient14.setAuthenticator(okAuthenticator54);
        okHttpClient11.authenticator = okAuthenticator54;
        java.net.CookieHandler cookieHandler59 = null;
        okHttpClient11.cookieHandler = cookieHandler59;
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(okAuthenticator12);
        org.junit.Assert.assertNull(proxySelector13);
        org.junit.Assert.assertNotNull(connectionPool15);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNotNull(connectionPool23);
        org.junit.Assert.assertNotNull(okHttpClient25);
        org.junit.Assert.assertNull(responseCache26);
        org.junit.Assert.assertNull(responseCache27);
        org.junit.Assert.assertNull(responseCache28);
        org.junit.Assert.assertNull(okResponseCache30);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertNull(sSLSocketFactory33);
        org.junit.Assert.assertNull(sSLSocketFactory34);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(cookieHandler39);
        org.junit.Assert.assertNull(hostnameVerifier45);
        org.junit.Assert.assertNull(proxy46);
        org.junit.Assert.assertNotNull(okHttpClient51);
        org.junit.Assert.assertNotNull(okHttpClient53);
        org.junit.Assert.assertNotNull(okAuthenticator54);
        org.junit.Assert.assertNotNull(okHttpClient56);
        org.junit.Assert.assertNotNull(okHttpClient57);
    }

    @Test
    public void test12414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12414");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.CookieHandler cookieHandler5 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = null;
        okHttpClient6.hostnameVerifier = hostnameVerifier7;
        java.net.ResponseCache responseCache9 = null;
        okHttpClient6.responseCache = responseCache9;
        java.util.List<java.lang.String> strList11 = okHttpClient6.transports;
        com.squareup.okhttp.ConnectionPool connectionPool12 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient6.connectionPool = connectionPool12;
        java.net.Proxy proxy14 = null;
        okHttpClient6.proxy = proxy14;
        java.util.Set<com.squareup.okhttp.Route> routeSet16 = okHttpClient6.failedRoutes;
        okHttpClient0.failedRoutes = routeSet16;
        java.net.ProxySelector proxySelector18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient0.setProxySelector(proxySelector18);
        com.squareup.okhttp.OkHttpClient okHttpClient20 = new com.squareup.okhttp.OkHttpClient(okHttpClient19);
        com.squareup.okhttp.OkAuthenticator okAuthenticator21 = okHttpClient20.authenticator;
        java.net.ProxySelector proxySelector22 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient20.setProxySelector(proxySelector22);
        java.net.Proxy proxy24 = okHttpClient20.getProxy();
        java.net.CookieHandler cookieHandler25 = okHttpClient20.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient20.copyWithDefaults();
        java.net.ResponseCache responseCache27 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient26.setResponseCache(responseCache27);
        com.squareup.okhttp.OkHttpClient okHttpClient29 = new com.squareup.okhttp.OkHttpClient(okHttpClient26);
        com.squareup.okhttp.OkHttpClient okHttpClient30 = new com.squareup.okhttp.OkHttpClient(okHttpClient26);
        com.squareup.okhttp.OkHttpClient okHttpClient31 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier32 = null;
        okHttpClient31.hostnameVerifier = hostnameVerifier32;
        java.net.ResponseCache responseCache34 = null;
        okHttpClient31.responseCache = responseCache34;
        java.util.List<java.lang.String> strList36 = okHttpClient31.transports;
        com.squareup.okhttp.ConnectionPool connectionPool37 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient31.connectionPool = connectionPool37;
        java.net.CookieHandler cookieHandler39 = okHttpClient31.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache40 = okHttpClient31.okResponseCache();
        java.net.CookieHandler cookieHandler41 = okHttpClient31.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient42 = new com.squareup.okhttp.OkHttpClient(okHttpClient31);
        java.net.Proxy proxy43 = java.net.Proxy.NO_PROXY;
        boolean boolean45 = proxy43.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type46 = proxy43.type();
        java.net.SocketAddress socketAddress47 = proxy43.address();
        com.squareup.okhttp.OkHttpClient okHttpClient48 = okHttpClient31.setProxy(proxy43);
        java.lang.String[] strArray50 = new java.lang.String[] { "DIRECT" };
        java.util.ArrayList<java.lang.String> strList51 = new java.util.ArrayList<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        okHttpClient31.transports = strList51;
        com.squareup.okhttp.OkHttpClient okHttpClient55 = okHttpClient31.setFollowProtocolRedirects(false);
        com.squareup.okhttp.ConnectionPool connectionPool58 = new com.squareup.okhttp.ConnectionPool((int) '#', (long) (short) 100);
        com.squareup.okhttp.OkHttpClient okHttpClient59 = okHttpClient55.setConnectionPool(connectionPool58);
        java.net.CookieHandler cookieHandler60 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient61 = okHttpClient59.setCookieHandler(cookieHandler60);
        java.net.ResponseCache responseCache62 = okHttpClient61.responseCache;
        java.net.Proxy proxy63 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress64 = proxy63.address();
        com.squareup.okhttp.OkHttpClient okHttpClient65 = okHttpClient61.setProxy(proxy63);
        java.util.List<java.lang.String> strList66 = okHttpClient65.transports;
        com.squareup.okhttp.OkHttpClient.DEFAULT_TRANSPORTS = strList66;
        // The following exception was thrown during execution in test generation
        try {
            com.squareup.okhttp.OkHttpClient okHttpClient68 = okHttpClient30.setTransports(strList66);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: transports doesn't contain http/1.1: [DIRECT]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNotNull(routeSet16);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNull(okAuthenticator21);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertNull(proxy24);
        org.junit.Assert.assertNull(cookieHandler25);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNotNull(connectionPool37);
        org.junit.Assert.assertNull(cookieHandler39);
        org.junit.Assert.assertNull(okResponseCache40);
        org.junit.Assert.assertNull(cookieHandler41);
        org.junit.Assert.assertNotNull(proxy43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + type46 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type46.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress47);
        org.junit.Assert.assertNotNull(okHttpClient48);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(okHttpClient55);
        org.junit.Assert.assertNotNull(okHttpClient59);
        org.junit.Assert.assertNotNull(okHttpClient61);
        org.junit.Assert.assertNull(responseCache62);
        org.junit.Assert.assertNotNull(proxy63);
        org.junit.Assert.assertNull(socketAddress64);
        org.junit.Assert.assertNotNull(okHttpClient65);
        org.junit.Assert.assertNotNull(strList66);
    }

    @Test
    public void test12415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12415");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient0.connectionPool = connectionPool9;
        java.util.List<java.lang.String> strList11 = okHttpClient0.getTransports();
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient0.setHostnameVerifier(hostnameVerifier12);
        com.squareup.okhttp.OkHttpClient okHttpClient14 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        java.util.List<java.lang.String> strList15 = okHttpClient14.transports;
        com.squareup.okhttp.ConnectionPool connectionPool16 = okHttpClient14.connectionPool;
        java.net.ResponseCache responseCache17 = okHttpClient14.getResponseCache();
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNull(connectionPool16);
        org.junit.Assert.assertNull(responseCache17);
    }

    @Test
    public void test12416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12416");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient0.copyWithDefaults();
        java.net.ProxySelector proxySelector9 = okHttpClient8.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory10 = okHttpClient8.getSslSocketFactory();
        java.lang.String[] strArray11 = sSLSocketFactory10.getSupportedCipherSuites();
        java.net.Socket socket12 = sSLSocketFactory10.createSocket();
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket15 = sSLSocketFactory10.createSocket("DIRECT", (int) '#');
            org.junit.Assert.fail("Expected exception of type java.net.UnknownHostException; message: DIRECT");
        } catch (java.net.UnknownHostException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNotNull(okHttpClient8);
// flaky:         org.junit.Assert.assertNull(proxySelector9);
        org.junit.Assert.assertNotNull(sSLSocketFactory10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(socket12);
        org.junit.Assert.assertEquals(socket12.toString(), "Socket[unconnected]");
    }

    @Test
    public void test12417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12417");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache1 = okHttpClient0.okResponseCache();
        java.net.ResponseCache responseCache2 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.setResponseCache(responseCache2);
        java.net.CookieHandler cookieHandler4 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier6 = null;
        okHttpClient5.hostnameVerifier = hostnameVerifier6;
        java.net.ResponseCache responseCache8 = null;
        okHttpClient5.responseCache = responseCache8;
        javax.net.ssl.HostnameVerifier hostnameVerifier10 = okHttpClient5.hostnameVerifier;
        java.net.Proxy proxy11 = okHttpClient5.getProxy();
        java.net.CookieHandler cookieHandler12 = null;
        okHttpClient5.cookieHandler = cookieHandler12;
        okHttpClient5.followProtocolRedirects = true;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier17 = null;
        okHttpClient16.hostnameVerifier = hostnameVerifier17;
        java.net.ResponseCache responseCache19 = null;
        okHttpClient16.responseCache = responseCache19;
        javax.net.ssl.HostnameVerifier hostnameVerifier21 = okHttpClient16.hostnameVerifier;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory22 = okHttpClient16.sslSocketFactory;
        java.net.CookieHandler cookieHandler23 = okHttpClient16.cookieHandler;
        javax.net.ssl.HostnameVerifier hostnameVerifier24 = okHttpClient16.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient25 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool26 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient25.connectionPool = connectionPool26;
        com.squareup.okhttp.OkAuthenticator okAuthenticator28 = null;
        okHttpClient25.authenticator = okAuthenticator28;
        java.util.List<java.lang.String> strList30 = okHttpClient25.transports;
        java.net.ResponseCache responseCache31 = null;
        okHttpClient25.responseCache = responseCache31;
        com.squareup.okhttp.OkHttpClient okHttpClient33 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier34 = null;
        okHttpClient33.hostnameVerifier = hostnameVerifier34;
        java.net.ResponseCache responseCache36 = null;
        okHttpClient33.responseCache = responseCache36;
        javax.net.ssl.HostnameVerifier hostnameVerifier38 = okHttpClient33.hostnameVerifier;
        java.net.Proxy proxy39 = okHttpClient33.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool42 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient33.connectionPool = connectionPool42;
        com.squareup.okhttp.OkHttpClient okHttpClient44 = okHttpClient33.copyWithDefaults();
        java.net.Proxy proxy45 = okHttpClient44.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier46 = okHttpClient44.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient47 = okHttpClient25.setHostnameVerifier(hostnameVerifier46);
        com.squareup.okhttp.OkHttpClient okHttpClient48 = okHttpClient16.setHostnameVerifier(hostnameVerifier46);
        okHttpClient5.hostnameVerifier = hostnameVerifier46;
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient0.setHostnameVerifier(hostnameVerifier46);
        java.net.Proxy proxy51 = okHttpClient50.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient52 = new com.squareup.okhttp.OkHttpClient(okHttpClient50);
        java.net.CookieHandler cookieHandler53 = null;
        okHttpClient50.cookieHandler = cookieHandler53;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache55 = okHttpClient50.okResponseCache();
        java.net.Proxy proxy56 = java.net.Proxy.NO_PROXY;
        boolean boolean58 = proxy56.equals((java.lang.Object) 1L);
        java.net.SocketAddress socketAddress59 = proxy56.address();
        java.net.SocketAddress socketAddress60 = proxy56.address();
        java.lang.String str61 = proxy56.toString();
        java.lang.String str62 = proxy56.toString();
        java.lang.String str63 = proxy56.toString();
        java.net.SocketAddress socketAddress64 = proxy56.address();
        java.net.Proxy.Type type65 = proxy56.type();
        okHttpClient50.proxy = proxy56;
        com.squareup.okhttp.ConnectionPool connectionPool67 = okHttpClient50.getConnectionPool();
        java.net.CookieHandler cookieHandler68 = okHttpClient50.getCookieHandler();
        org.junit.Assert.assertNull(okResponseCache1);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertNull(cookieHandler4);
        org.junit.Assert.assertNull(hostnameVerifier10);
        org.junit.Assert.assertNull(proxy11);
        org.junit.Assert.assertNull(hostnameVerifier21);
        org.junit.Assert.assertNull(sSLSocketFactory22);
        org.junit.Assert.assertNull(cookieHandler23);
        org.junit.Assert.assertNull(hostnameVerifier24);
        org.junit.Assert.assertNotNull(connectionPool26);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNull(hostnameVerifier38);
        org.junit.Assert.assertNull(proxy39);
        org.junit.Assert.assertNotNull(okHttpClient44);
        org.junit.Assert.assertNull(proxy45);
        org.junit.Assert.assertNotNull(hostnameVerifier46);
        org.junit.Assert.assertNotNull(okHttpClient47);
        org.junit.Assert.assertNotNull(okHttpClient48);
        org.junit.Assert.assertNotNull(okHttpClient50);
        org.junit.Assert.assertNull(proxy51);
        org.junit.Assert.assertNull(okResponseCache55);
        org.junit.Assert.assertNotNull(proxy56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(socketAddress59);
        org.junit.Assert.assertNull(socketAddress60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "DIRECT" + "'", str61, "DIRECT");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "DIRECT" + "'", str62, "DIRECT");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "DIRECT" + "'", str63, "DIRECT");
        org.junit.Assert.assertNull(socketAddress64);
        org.junit.Assert.assertTrue("'" + type65 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type65.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(connectionPool67);
        org.junit.Assert.assertNull(cookieHandler68);
    }

    @Test
    public void test12418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12418");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient4.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool7 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient6.connectionPool = connectionPool7;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier10 = null;
        okHttpClient9.hostnameVerifier = hostnameVerifier10;
        java.net.ResponseCache responseCache12 = null;
        okHttpClient9.responseCache = responseCache12;
        java.util.List<java.lang.String> strList14 = okHttpClient9.transports;
        com.squareup.okhttp.ConnectionPool connectionPool15 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient9.connectionPool = connectionPool15;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient6.setConnectionPool(connectionPool15);
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier19 = null;
        okHttpClient18.hostnameVerifier = hostnameVerifier19;
        java.net.ProxySelector proxySelector21 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient18.setProxySelector(proxySelector21);
        java.net.CookieHandler cookieHandler23 = okHttpClient18.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient24 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier25 = null;
        okHttpClient24.hostnameVerifier = hostnameVerifier25;
        java.net.ResponseCache responseCache27 = null;
        okHttpClient24.responseCache = responseCache27;
        java.util.List<java.lang.String> strList29 = okHttpClient24.transports;
        com.squareup.okhttp.ConnectionPool connectionPool30 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient24.connectionPool = connectionPool30;
        java.net.Proxy proxy32 = null;
        okHttpClient24.proxy = proxy32;
        java.util.Set<com.squareup.okhttp.Route> routeSet34 = okHttpClient24.failedRoutes;
        okHttpClient18.failedRoutes = routeSet34;
        java.net.ProxySelector proxySelector36 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient18.setProxySelector(proxySelector36);
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient18.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient39 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier40 = null;
        okHttpClient39.hostnameVerifier = hostnameVerifier40;
        java.net.ResponseCache responseCache42 = null;
        okHttpClient39.responseCache = responseCache42;
        javax.net.ssl.HostnameVerifier hostnameVerifier44 = okHttpClient39.hostnameVerifier;
        java.net.Proxy proxy45 = okHttpClient39.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool48 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient39.connectionPool = connectionPool48;
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient39.copyWithDefaults();
        java.net.Proxy proxy51 = okHttpClient50.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier52 = okHttpClient50.getHostnameVerifier();
        okHttpClient18.hostnameVerifier = hostnameVerifier52;
        okHttpClient17.hostnameVerifier = hostnameVerifier52;
        okHttpClient5.hostnameVerifier = hostnameVerifier52;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache56 = okHttpClient5.okResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient57 = okHttpClient5.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient58 = new com.squareup.okhttp.OkHttpClient(okHttpClient57);
        java.net.ResponseCache responseCache59 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient60 = okHttpClient58.setResponseCache(responseCache59);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory61 = null;
        okHttpClient60.sslSocketFactory = sSLSocketFactory61;
        java.net.ResponseCache responseCache63 = okHttpClient60.responseCache;
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNotNull(connectionPool7);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNotNull(connectionPool15);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNull(cookieHandler23);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(connectionPool30);
        org.junit.Assert.assertNotNull(routeSet34);
        org.junit.Assert.assertNotNull(okHttpClient37);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNull(hostnameVerifier44);
        org.junit.Assert.assertNull(proxy45);
        org.junit.Assert.assertNotNull(okHttpClient50);
        org.junit.Assert.assertNull(proxy51);
        org.junit.Assert.assertNotNull(hostnameVerifier52);
        org.junit.Assert.assertNull(okResponseCache56);
        org.junit.Assert.assertNotNull(okHttpClient57);
        org.junit.Assert.assertNotNull(okHttpClient60);
        org.junit.Assert.assertNull(responseCache63);
    }

    @Test
    public void test12419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12419");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.OkAuthenticator okAuthenticator12 = okHttpClient11.getAuthenticator();
        java.net.ProxySelector proxySelector13 = okHttpClient11.getProxySelector();
        java.net.ResponseCache responseCache14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient11.setResponseCache(responseCache14);
        java.net.Proxy proxy16 = java.net.Proxy.NO_PROXY;
        boolean boolean18 = proxy16.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type19 = proxy16.type();
        java.net.SocketAddress socketAddress20 = proxy16.address();
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient15.setProxy(proxy16);
        java.net.Proxy proxy22 = java.net.Proxy.NO_PROXY;
        boolean boolean24 = proxy22.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type25 = proxy22.type();
        java.net.Proxy.Type type26 = proxy22.type();
        boolean boolean27 = proxy16.equals((java.lang.Object) proxy22);
        java.lang.String str28 = proxy22.toString();
        java.net.Proxy.Type type29 = proxy22.type();
        com.squareup.okhttp.OkHttpClient okHttpClient30 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier31 = null;
        okHttpClient30.hostnameVerifier = hostnameVerifier31;
        java.net.ResponseCache responseCache33 = null;
        okHttpClient30.responseCache = responseCache33;
        javax.net.ssl.HostnameVerifier hostnameVerifier35 = okHttpClient30.hostnameVerifier;
        java.net.Proxy proxy36 = okHttpClient30.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool39 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient30.connectionPool = connectionPool39;
        com.squareup.okhttp.OkHttpClient okHttpClient41 = okHttpClient30.copyWithDefaults();
        java.net.ProxySelector proxySelector42 = okHttpClient30.getProxySelector();
        java.net.CookieHandler cookieHandler43 = null;
        okHttpClient30.cookieHandler = cookieHandler43;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory45 = okHttpClient30.sslSocketFactory;
        boolean boolean46 = proxy22.equals((java.lang.Object) okHttpClient30);
        java.lang.String str47 = proxy22.toString();
        java.net.Proxy.Type type48 = proxy22.type();
        com.squareup.okhttp.OkHttpClient okHttpClient49 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool50 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient49.connectionPool = connectionPool50;
        com.squareup.okhttp.OkAuthenticator okAuthenticator52 = null;
        okHttpClient49.authenticator = okAuthenticator52;
        com.squareup.okhttp.OkHttpClient okHttpClient54 = okHttpClient49.copyWithDefaults();
        java.net.ResponseCache responseCache55 = okHttpClient49.getResponseCache();
        java.net.ProxySelector proxySelector56 = null;
        okHttpClient49.proxySelector = proxySelector56;
        com.squareup.okhttp.OkHttpClient okHttpClient58 = new com.squareup.okhttp.OkHttpClient(okHttpClient49);
        com.squareup.okhttp.ConnectionPool connectionPool59 = okHttpClient49.getConnectionPool();
        com.squareup.okhttp.OkHttpClient okHttpClient60 = new com.squareup.okhttp.OkHttpClient(okHttpClient49);
        okHttpClient49.followProtocolRedirects = false;
        boolean boolean63 = proxy22.equals((java.lang.Object) okHttpClient49);
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(okAuthenticator12);
        org.junit.Assert.assertNull(proxySelector13);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNotNull(proxy16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + type19 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type19.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress20);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNotNull(proxy22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + type25 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type25.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertTrue("'" + type26 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type26.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "DIRECT" + "'", str28, "DIRECT");
        org.junit.Assert.assertTrue("'" + type29 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type29.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(hostnameVerifier35);
        org.junit.Assert.assertNull(proxy36);
        org.junit.Assert.assertNotNull(okHttpClient41);
        org.junit.Assert.assertNull(proxySelector42);
        org.junit.Assert.assertNull(sSLSocketFactory45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "DIRECT" + "'", str47, "DIRECT");
        org.junit.Assert.assertTrue("'" + type48 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type48.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNotNull(connectionPool50);
        org.junit.Assert.assertNotNull(okHttpClient54);
        org.junit.Assert.assertNull(responseCache55);
        org.junit.Assert.assertNotNull(connectionPool59);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test12420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12420");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.CookieHandler cookieHandler5 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = null;
        okHttpClient6.hostnameVerifier = hostnameVerifier7;
        java.net.ResponseCache responseCache9 = null;
        okHttpClient6.responseCache = responseCache9;
        java.util.List<java.lang.String> strList11 = okHttpClient6.transports;
        com.squareup.okhttp.ConnectionPool connectionPool12 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient6.connectionPool = connectionPool12;
        java.net.Proxy proxy14 = null;
        okHttpClient6.proxy = proxy14;
        java.util.Set<com.squareup.okhttp.Route> routeSet16 = okHttpClient6.failedRoutes;
        okHttpClient0.failedRoutes = routeSet16;
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient0.setHostnameVerifier(hostnameVerifier18);
        java.net.ProxySelector proxySelector20 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient19.setProxySelector(proxySelector20);
        com.squareup.okhttp.ConnectionPool connectionPool24 = new com.squareup.okhttp.ConnectionPool((int) (byte) 10, (long) (byte) 0);
        okHttpClient19.connectionPool = connectionPool24;
        java.net.ResponseCache responseCache26 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient19.setResponseCache(responseCache26);
        java.net.CookieHandler cookieHandler28 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient19.setCookieHandler(cookieHandler28);
        com.squareup.okhttp.OkHttpClient okHttpClient30 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier31 = null;
        okHttpClient30.hostnameVerifier = hostnameVerifier31;
        java.net.ProxySelector proxySelector33 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient30.setProxySelector(proxySelector33);
        java.net.CookieHandler cookieHandler35 = okHttpClient30.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient36 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier37 = null;
        okHttpClient36.hostnameVerifier = hostnameVerifier37;
        java.net.ResponseCache responseCache39 = null;
        okHttpClient36.responseCache = responseCache39;
        java.util.List<java.lang.String> strList41 = okHttpClient36.transports;
        com.squareup.okhttp.ConnectionPool connectionPool42 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient36.connectionPool = connectionPool42;
        java.net.Proxy proxy44 = null;
        okHttpClient36.proxy = proxy44;
        java.util.Set<com.squareup.okhttp.Route> routeSet46 = okHttpClient36.failedRoutes;
        okHttpClient30.failedRoutes = routeSet46;
        javax.net.ssl.HostnameVerifier hostnameVerifier48 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient49 = okHttpClient30.setHostnameVerifier(hostnameVerifier48);
        java.net.ProxySelector proxySelector50 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient51 = okHttpClient49.setProxySelector(proxySelector50);
        com.squareup.okhttp.OkHttpClient okHttpClient53 = okHttpClient49.setFollowProtocolRedirects(true);
        com.squareup.okhttp.OkHttpClient okHttpClient54 = new com.squareup.okhttp.OkHttpClient(okHttpClient49);
        com.squareup.okhttp.OkHttpClient okHttpClient55 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier56 = null;
        okHttpClient55.hostnameVerifier = hostnameVerifier56;
        java.net.ResponseCache responseCache58 = null;
        okHttpClient55.responseCache = responseCache58;
        javax.net.ssl.HostnameVerifier hostnameVerifier60 = okHttpClient55.hostnameVerifier;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory61 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient62 = okHttpClient55.setSSLSocketFactory(sSLSocketFactory61);
        java.util.List<java.lang.String> strList63 = okHttpClient55.getTransports();
        com.squareup.okhttp.OkHttpClient okHttpClient64 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier65 = null;
        okHttpClient64.hostnameVerifier = hostnameVerifier65;
        java.net.ResponseCache responseCache67 = null;
        okHttpClient64.responseCache = responseCache67;
        javax.net.ssl.HostnameVerifier hostnameVerifier69 = okHttpClient64.hostnameVerifier;
        java.net.Proxy proxy70 = okHttpClient64.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool73 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient64.connectionPool = connectionPool73;
        boolean boolean75 = okHttpClient64.getFollowProtocolRedirects();
        com.squareup.okhttp.OkHttpClient okHttpClient76 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier77 = null;
        okHttpClient76.hostnameVerifier = hostnameVerifier77;
        java.net.ResponseCache responseCache79 = null;
        okHttpClient76.responseCache = responseCache79;
        javax.net.ssl.HostnameVerifier hostnameVerifier81 = okHttpClient76.hostnameVerifier;
        java.net.Proxy proxy82 = okHttpClient76.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool85 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient76.connectionPool = connectionPool85;
        com.squareup.okhttp.OkHttpClient okHttpClient87 = okHttpClient76.copyWithDefaults();
        java.net.Proxy proxy88 = okHttpClient87.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier89 = okHttpClient87.getHostnameVerifier();
        okHttpClient64.hostnameVerifier = hostnameVerifier89;
        com.squareup.okhttp.OkHttpClient okHttpClient91 = okHttpClient55.setHostnameVerifier(hostnameVerifier89);
        okHttpClient54.hostnameVerifier = hostnameVerifier89;
        com.squareup.okhttp.OkHttpClient okHttpClient94 = okHttpClient54.setFollowProtocolRedirects(false);
        com.squareup.okhttp.OkHttpClient okHttpClient95 = okHttpClient94.copyWithDefaults();
        com.squareup.okhttp.OkAuthenticator okAuthenticator96 = okHttpClient94.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier97 = okHttpClient94.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient98 = okHttpClient19.setHostnameVerifier(hostnameVerifier97);
        java.net.CookieHandler cookieHandler99 = okHttpClient19.cookieHandler;
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNotNull(routeSet16);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNotNull(okHttpClient29);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertNull(cookieHandler35);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(connectionPool42);
        org.junit.Assert.assertNotNull(routeSet46);
        org.junit.Assert.assertNotNull(okHttpClient49);
        org.junit.Assert.assertNotNull(okHttpClient51);
        org.junit.Assert.assertNotNull(okHttpClient53);
        org.junit.Assert.assertNull(hostnameVerifier60);
        org.junit.Assert.assertNotNull(okHttpClient62);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNull(hostnameVerifier69);
        org.junit.Assert.assertNull(proxy70);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNull(hostnameVerifier81);
        org.junit.Assert.assertNull(proxy82);
        org.junit.Assert.assertNotNull(okHttpClient87);
        org.junit.Assert.assertNull(proxy88);
        org.junit.Assert.assertNotNull(hostnameVerifier89);
        org.junit.Assert.assertNotNull(okHttpClient91);
        org.junit.Assert.assertNotNull(okHttpClient94);
        org.junit.Assert.assertNotNull(okHttpClient95);
        org.junit.Assert.assertNull(okAuthenticator96);
        org.junit.Assert.assertNotNull(hostnameVerifier97);
        org.junit.Assert.assertNotNull(okHttpClient98);
        org.junit.Assert.assertNull(cookieHandler99);
    }

    @Test
    public void test12421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12421");
        com.squareup.okhttp.ConnectionPool connectionPool2 = new com.squareup.okhttp.ConnectionPool((-1), (long) ' ');
        int int3 = connectionPool2.getHttpConnectionCount();
        int int4 = connectionPool2.getConnectionCount();
        com.squareup.okhttp.Connection connection5 = null;
        // The following exception was thrown during execution in test generation
        try {
            connectionPool2.recycle(connection5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    }

    @Test
    public void test12422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12422");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient0.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.copyWithDefaults();
        java.net.ResponseCache responseCache12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setResponseCache(responseCache12);
        java.net.ProxySelector proxySelector14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient11.setProxySelector(proxySelector14);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory16 = okHttpClient15.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient(okHttpClient15);
        com.squareup.okhttp.ConnectionPool connectionPool18 = okHttpClient15.getConnectionPool();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache19 = okHttpClient15.okResponseCache();
        java.lang.Class<?> wildcardClass20 = okHttpClient15.getClass();
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNotNull(sSLSocketFactory16);
        org.junit.Assert.assertNotNull(connectionPool18);
        org.junit.Assert.assertNull(okResponseCache19);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test12423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12423");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient0.connectionPool = connectionPool9;
        java.util.List<java.lang.String> strList11 = okHttpClient0.getTransports();
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient0.setHostnameVerifier(hostnameVerifier12);
        com.squareup.okhttp.ConnectionPool connectionPool14 = okHttpClient13.connectionPool;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory15 = okHttpClient13.sslSocketFactory;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory16 = okHttpClient13.getSslSocketFactory();
        java.net.ResponseCache responseCache17 = null;
        okHttpClient13.responseCache = responseCache17;
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNotNull(connectionPool14);
        org.junit.Assert.assertNull(sSLSocketFactory15);
        org.junit.Assert.assertNull(sSLSocketFactory16);
    }

    @Test
    public void test12424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12424");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.OkHttpClient okHttpClient1 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        com.squareup.okhttp.ConnectionPool connectionPool4 = new com.squareup.okhttp.ConnectionPool((int) (short) -1, (long) '#');
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient1.setConnectionPool(connectionPool4);
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = null;
        okHttpClient6.hostnameVerifier = hostnameVerifier7;
        java.net.ResponseCache responseCache9 = null;
        okHttpClient6.responseCache = responseCache9;
        javax.net.ssl.HostnameVerifier hostnameVerifier11 = okHttpClient6.hostnameVerifier;
        java.net.Proxy proxy12 = okHttpClient6.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool15 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient6.connectionPool = connectionPool15;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient6.copyWithDefaults();
        java.net.ResponseCache responseCache18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient17.setResponseCache(responseCache18);
        java.net.ProxySelector proxySelector20 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient17.setProxySelector(proxySelector20);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory22 = okHttpClient21.getSslSocketFactory();
        com.squareup.okhttp.OkAuthenticator okAuthenticator23 = okHttpClient21.getAuthenticator();
        com.squareup.okhttp.OkAuthenticator okAuthenticator24 = okHttpClient21.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient1.setAuthenticator(okAuthenticator24);
        java.util.List<java.lang.String> strList26 = okHttpClient1.transports;
        java.net.ResponseCache responseCache27 = null;
        okHttpClient1.responseCache = responseCache27;
        java.net.CookieHandler cookieHandler29 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient30 = okHttpClient1.setCookieHandler(cookieHandler29);
        java.net.CookieHandler cookieHandler31 = null;
        okHttpClient1.cookieHandler = cookieHandler31;
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(hostnameVerifier11);
        org.junit.Assert.assertNull(proxy12);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNotNull(sSLSocketFactory22);
        org.junit.Assert.assertNotNull(okAuthenticator23);
        org.junit.Assert.assertNotNull(okAuthenticator24);
        org.junit.Assert.assertNotNull(okHttpClient25);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNotNull(okHttpClient30);
    }

    @Test
    public void test12425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12425");
        com.squareup.okhttp.ConnectionPool connectionPool2 = new com.squareup.okhttp.ConnectionPool((int) '#', (long) (byte) 100);
        com.squareup.okhttp.Connection connection3 = null;
        // The following exception was thrown during execution in test generation
        try {
            connectionPool2.maybeShare(connection3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test12426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12426");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.CookieHandler cookieHandler8 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache9 = okHttpClient0.okResponseCache();
        java.net.CookieHandler cookieHandler10 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = null;
        okHttpClient11.hostnameVerifier = hostnameVerifier12;
        java.net.ResponseCache responseCache14 = null;
        okHttpClient11.responseCache = responseCache14;
        java.util.List<java.lang.String> strList16 = okHttpClient11.transports;
        com.squareup.okhttp.ConnectionPool connectionPool17 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient11.connectionPool = connectionPool17;
        java.net.CookieHandler cookieHandler19 = okHttpClient11.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache20 = okHttpClient11.okResponseCache();
        java.net.CookieHandler cookieHandler21 = okHttpClient11.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient(okHttpClient11);
        java.net.Proxy proxy23 = java.net.Proxy.NO_PROXY;
        boolean boolean25 = proxy23.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type26 = proxy23.type();
        java.net.SocketAddress socketAddress27 = proxy23.address();
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient11.setProxy(proxy23);
        com.squareup.okhttp.OkHttpClient okHttpClient29 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = null;
        okHttpClient29.hostnameVerifier = hostnameVerifier30;
        java.net.ResponseCache responseCache32 = null;
        okHttpClient29.responseCache = responseCache32;
        java.util.List<java.lang.String> strList34 = okHttpClient29.transports;
        com.squareup.okhttp.ConnectionPool connectionPool35 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient29.connectionPool = connectionPool35;
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient29.copyWithDefaults();
        java.net.ProxySelector proxySelector38 = okHttpClient37.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory39 = okHttpClient37.getSslSocketFactory();
        okHttpClient28.sslSocketFactory = sSLSocketFactory39;
        java.lang.String[] strArray41 = sSLSocketFactory39.getDefaultCipherSuites();
        java.lang.String[] strArray42 = sSLSocketFactory39.getSupportedCipherSuites();
        java.lang.String[] strArray43 = sSLSocketFactory39.getDefaultCipherSuites();
        java.lang.String[] strArray44 = sSLSocketFactory39.getDefaultCipherSuites();
        java.lang.String[] strArray45 = sSLSocketFactory39.getDefaultCipherSuites();
        java.net.Socket socket46 = sSLSocketFactory39.createSocket();
        okHttpClient0.sslSocketFactory = sSLSocketFactory39;
        com.squareup.okhttp.OkHttpClient okHttpClient48 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        java.net.ProxySelector proxySelector49 = okHttpClient48.proxySelector;
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNull(cookieHandler8);
        org.junit.Assert.assertNull(okResponseCache9);
        org.junit.Assert.assertNull(cookieHandler10);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNotNull(connectionPool17);
        org.junit.Assert.assertNull(cookieHandler19);
        org.junit.Assert.assertNull(okResponseCache20);
        org.junit.Assert.assertNull(cookieHandler21);
        org.junit.Assert.assertNotNull(proxy23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + type26 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type26.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress27);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(connectionPool35);
        org.junit.Assert.assertNotNull(okHttpClient37);
// flaky:         org.junit.Assert.assertNull(proxySelector38);
        org.junit.Assert.assertNotNull(sSLSocketFactory39);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(socket46);
        org.junit.Assert.assertEquals(socket46.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNull(proxySelector49);
    }

    @Test
    public void test12427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12427");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.OkAuthenticator okAuthenticator12 = okHttpClient11.getAuthenticator();
        java.net.ProxySelector proxySelector13 = okHttpClient11.getProxySelector();
        java.net.ResponseCache responseCache14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient11.setResponseCache(responseCache14);
        javax.net.ssl.HostnameVerifier hostnameVerifier16 = okHttpClient15.hostnameVerifier;
        java.net.ProxySelector proxySelector17 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient15.setProxySelector(proxySelector17);
        com.squareup.okhttp.ConnectionPool connectionPool21 = new com.squareup.okhttp.ConnectionPool((int) (byte) 0, (long) 1);
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient18.setConnectionPool(connectionPool21);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory23 = okHttpClient22.sslSocketFactory;
        java.net.CookieHandler cookieHandler24 = okHttpClient22.getCookieHandler();
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(okAuthenticator12);
        org.junit.Assert.assertNull(proxySelector13);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNull(hostnameVerifier16);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNull(sSLSocketFactory23);
        org.junit.Assert.assertNull(cookieHandler24);
    }

    @Test
    public void test12428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12428");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory6 = okHttpClient0.sslSocketFactory;
        java.net.CookieHandler cookieHandler7 = okHttpClient0.cookieHandler;
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = okHttpClient0.hostnameVerifier;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache9 = okHttpClient0.okResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient10 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool11 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient10.connectionPool = connectionPool11;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = null;
        okHttpClient13.hostnameVerifier = hostnameVerifier14;
        java.net.ResponseCache responseCache16 = null;
        okHttpClient13.responseCache = responseCache16;
        java.util.List<java.lang.String> strList18 = okHttpClient13.transports;
        com.squareup.okhttp.ConnectionPool connectionPool19 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient13.connectionPool = connectionPool19;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient10.setConnectionPool(connectionPool19);
        com.squareup.okhttp.ConnectionPool connectionPool22 = okHttpClient21.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator23 = okHttpClient21.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool26 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient21.connectionPool = connectionPool26;
        java.net.ResponseCache responseCache28 = okHttpClient21.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory29 = okHttpClient21.sslSocketFactory;
        java.net.Proxy proxy30 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress31 = proxy30.address();
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient21.setProxy(proxy30);
        com.squareup.okhttp.OkHttpClient okHttpClient33 = new com.squareup.okhttp.OkHttpClient(okHttpClient32);
        com.squareup.okhttp.OkHttpClient okHttpClient34 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier35 = null;
        okHttpClient34.hostnameVerifier = hostnameVerifier35;
        boolean boolean37 = okHttpClient34.getFollowProtocolRedirects();
        java.net.CookieHandler cookieHandler38 = okHttpClient34.cookieHandler;
        com.squareup.okhttp.OkHttpClient okHttpClient39 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier40 = null;
        okHttpClient39.hostnameVerifier = hostnameVerifier40;
        java.net.ResponseCache responseCache42 = null;
        okHttpClient39.responseCache = responseCache42;
        javax.net.ssl.HostnameVerifier hostnameVerifier44 = okHttpClient39.hostnameVerifier;
        java.net.Proxy proxy45 = okHttpClient39.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool48 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient39.connectionPool = connectionPool48;
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient39.copyWithDefaults();
        java.net.ResponseCache responseCache51 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient52 = okHttpClient50.setResponseCache(responseCache51);
        com.squareup.okhttp.OkAuthenticator okAuthenticator53 = okHttpClient50.authenticator;
        okHttpClient34.authenticator = okAuthenticator53;
        okHttpClient33.authenticator = okAuthenticator53;
        com.squareup.okhttp.OkHttpClient okHttpClient56 = okHttpClient0.setAuthenticator(okAuthenticator53);
        com.squareup.okhttp.ConnectionPool connectionPool57 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient58 = okHttpClient0.setConnectionPool(connectionPool57);
        java.util.List<java.lang.String> strList59 = okHttpClient0.getTransports();
        java.net.ResponseCache responseCache60 = okHttpClient0.getResponseCache();
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(sSLSocketFactory6);
        org.junit.Assert.assertNull(cookieHandler7);
        org.junit.Assert.assertNull(hostnameVerifier8);
        org.junit.Assert.assertNull(okResponseCache9);
        org.junit.Assert.assertNotNull(connectionPool11);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(connectionPool19);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNotNull(connectionPool22);
        org.junit.Assert.assertNull(okAuthenticator23);
        org.junit.Assert.assertNull(responseCache28);
        org.junit.Assert.assertNull(sSLSocketFactory29);
        org.junit.Assert.assertNotNull(proxy30);
        org.junit.Assert.assertNull(socketAddress31);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(cookieHandler38);
        org.junit.Assert.assertNull(hostnameVerifier44);
        org.junit.Assert.assertNull(proxy45);
        org.junit.Assert.assertNotNull(okHttpClient50);
        org.junit.Assert.assertNotNull(okHttpClient52);
        org.junit.Assert.assertNotNull(okAuthenticator53);
        org.junit.Assert.assertNotNull(okHttpClient56);
        org.junit.Assert.assertNotNull(okHttpClient58);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNull(responseCache60);
    }

    @Test
    public void test12429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12429");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory6 = okHttpClient0.sslSocketFactory;
        java.net.CookieHandler cookieHandler7 = okHttpClient0.cookieHandler;
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = okHttpClient0.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool10 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient9.connectionPool = connectionPool10;
        com.squareup.okhttp.OkAuthenticator okAuthenticator12 = null;
        okHttpClient9.authenticator = okAuthenticator12;
        java.util.List<java.lang.String> strList14 = okHttpClient9.transports;
        java.net.ResponseCache responseCache15 = null;
        okHttpClient9.responseCache = responseCache15;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = null;
        okHttpClient17.hostnameVerifier = hostnameVerifier18;
        java.net.ResponseCache responseCache20 = null;
        okHttpClient17.responseCache = responseCache20;
        javax.net.ssl.HostnameVerifier hostnameVerifier22 = okHttpClient17.hostnameVerifier;
        java.net.Proxy proxy23 = okHttpClient17.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool26 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient17.connectionPool = connectionPool26;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient17.copyWithDefaults();
        java.net.Proxy proxy29 = okHttpClient28.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = okHttpClient28.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient9.setHostnameVerifier(hostnameVerifier30);
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient0.setHostnameVerifier(hostnameVerifier30);
        okHttpClient32.followProtocolRedirects = false;
        java.net.ProxySelector proxySelector35 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient32.setProxySelector(proxySelector35);
        boolean boolean37 = okHttpClient36.getFollowProtocolRedirects();
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(sSLSocketFactory6);
        org.junit.Assert.assertNull(cookieHandler7);
        org.junit.Assert.assertNull(hostnameVerifier8);
        org.junit.Assert.assertNotNull(connectionPool10);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(hostnameVerifier22);
        org.junit.Assert.assertNull(proxy23);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNull(proxy29);
        org.junit.Assert.assertNotNull(hostnameVerifier30);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test12430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12430");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.CookieHandler cookieHandler8 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache9 = okHttpClient0.okResponseCache();
        java.net.CookieHandler cookieHandler10 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        java.net.Proxy proxy12 = java.net.Proxy.NO_PROXY;
        boolean boolean14 = proxy12.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type15 = proxy12.type();
        java.net.SocketAddress socketAddress16 = proxy12.address();
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient0.setProxy(proxy12);
        java.lang.String[] strArray19 = new java.lang.String[] { "DIRECT" };
        java.util.ArrayList<java.lang.String> strList20 = new java.util.ArrayList<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList20, strArray19);
        okHttpClient0.transports = strList20;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient0.setFollowProtocolRedirects(false);
        com.squareup.okhttp.ConnectionPool connectionPool27 = new com.squareup.okhttp.ConnectionPool((int) '#', (long) (short) 100);
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient24.setConnectionPool(connectionPool27);
        java.net.CookieHandler cookieHandler29 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient30 = okHttpClient28.setCookieHandler(cookieHandler29);
        javax.net.ssl.HostnameVerifier hostnameVerifier31 = okHttpClient28.hostnameVerifier;
        com.squareup.okhttp.OkAuthenticator okAuthenticator32 = okHttpClient28.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient28.copyWithDefaults();
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNull(cookieHandler8);
        org.junit.Assert.assertNull(okResponseCache9);
        org.junit.Assert.assertNull(cookieHandler10);
        org.junit.Assert.assertNotNull(proxy12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + type15 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type15.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress16);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNotNull(okHttpClient30);
        org.junit.Assert.assertNull(hostnameVerifier31);
        org.junit.Assert.assertNull(okAuthenticator32);
        org.junit.Assert.assertNotNull(okHttpClient33);
    }

    @Test
    public void test12431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12431");
        com.squareup.okhttp.ConnectionPool connectionPool2 = new com.squareup.okhttp.ConnectionPool((int) (byte) 0, 0L);
        int int3 = connectionPool2.getSpdyConnectionCount();
        int int4 = connectionPool2.getSpdyConnectionCount();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    }

    @Test
    public void test12432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12432");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.CookieHandler cookieHandler8 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache9 = okHttpClient0.okResponseCache();
        java.net.CookieHandler cookieHandler10 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        java.net.Proxy proxy12 = java.net.Proxy.NO_PROXY;
        boolean boolean14 = proxy12.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type15 = proxy12.type();
        java.net.SocketAddress socketAddress16 = proxy12.address();
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient0.setProxy(proxy12);
        java.lang.String[] strArray19 = new java.lang.String[] { "DIRECT" };
        java.util.ArrayList<java.lang.String> strList20 = new java.util.ArrayList<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList20, strArray19);
        okHttpClient0.transports = strList20;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient0.setFollowProtocolRedirects(false);
        com.squareup.okhttp.ConnectionPool connectionPool27 = new com.squareup.okhttp.ConnectionPool((int) '#', (long) (short) 100);
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient24.setConnectionPool(connectionPool27);
        java.net.CookieHandler cookieHandler29 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient30 = okHttpClient28.setCookieHandler(cookieHandler29);
        java.net.ProxySelector proxySelector31 = null;
        okHttpClient28.proxySelector = proxySelector31;
        com.squareup.okhttp.OkHttpClient okHttpClient33 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool34 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient33.connectionPool = connectionPool34;
        com.squareup.okhttp.OkHttpClient okHttpClient36 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier37 = null;
        okHttpClient36.hostnameVerifier = hostnameVerifier37;
        java.net.ResponseCache responseCache39 = null;
        okHttpClient36.responseCache = responseCache39;
        java.util.List<java.lang.String> strList41 = okHttpClient36.transports;
        com.squareup.okhttp.ConnectionPool connectionPool42 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient36.connectionPool = connectionPool42;
        com.squareup.okhttp.OkHttpClient okHttpClient44 = okHttpClient33.setConnectionPool(connectionPool42);
        com.squareup.okhttp.ConnectionPool connectionPool45 = okHttpClient44.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator46 = okHttpClient44.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool49 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient44.connectionPool = connectionPool49;
        java.net.ResponseCache responseCache51 = okHttpClient44.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory52 = okHttpClient44.sslSocketFactory;
        java.net.Proxy proxy53 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress54 = proxy53.address();
        com.squareup.okhttp.OkHttpClient okHttpClient55 = okHttpClient44.setProxy(proxy53);
        com.squareup.okhttp.OkHttpClient okHttpClient56 = new com.squareup.okhttp.OkHttpClient(okHttpClient55);
        com.squareup.okhttp.OkHttpClient okHttpClient57 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier58 = null;
        okHttpClient57.hostnameVerifier = hostnameVerifier58;
        java.net.ResponseCache responseCache60 = null;
        okHttpClient57.responseCache = responseCache60;
        java.util.List<java.lang.String> strList62 = okHttpClient57.transports;
        com.squareup.okhttp.ConnectionPool connectionPool63 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient57.connectionPool = connectionPool63;
        com.squareup.okhttp.OkHttpClient okHttpClient65 = okHttpClient57.copyWithDefaults();
        java.net.ProxySelector proxySelector66 = okHttpClient65.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory67 = okHttpClient65.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient68 = okHttpClient55.setSSLSocketFactory(sSLSocketFactory67);
        java.net.Socket socket69 = sSLSocketFactory67.createSocket();
        okHttpClient28.sslSocketFactory = sSLSocketFactory67;
        java.lang.String[] strArray71 = sSLSocketFactory67.getSupportedCipherSuites();
        java.net.Socket socket72 = sSLSocketFactory67.createSocket();
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNull(cookieHandler8);
        org.junit.Assert.assertNull(okResponseCache9);
        org.junit.Assert.assertNull(cookieHandler10);
        org.junit.Assert.assertNotNull(proxy12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + type15 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type15.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress16);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNotNull(okHttpClient30);
        org.junit.Assert.assertNotNull(connectionPool34);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(connectionPool42);
        org.junit.Assert.assertNotNull(okHttpClient44);
        org.junit.Assert.assertNotNull(connectionPool45);
        org.junit.Assert.assertNull(okAuthenticator46);
        org.junit.Assert.assertNull(responseCache51);
        org.junit.Assert.assertNull(sSLSocketFactory52);
        org.junit.Assert.assertNotNull(proxy53);
        org.junit.Assert.assertNull(socketAddress54);
        org.junit.Assert.assertNotNull(okHttpClient55);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertNotNull(connectionPool63);
        org.junit.Assert.assertNotNull(okHttpClient65);
// flaky:         org.junit.Assert.assertNull(proxySelector66);
        org.junit.Assert.assertNotNull(sSLSocketFactory67);
        org.junit.Assert.assertNotNull(okHttpClient68);
        org.junit.Assert.assertNotNull(socket69);
        org.junit.Assert.assertEquals(socket69.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertNotNull(socket72);
        org.junit.Assert.assertEquals(socket72.toString(), "Socket[unconnected]");
    }

    @Test
    public void test12433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12433");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient0.setFollowProtocolRedirects(false);
        java.net.Proxy proxy8 = okHttpClient0.getProxy();
        boolean boolean9 = okHttpClient0.followProtocolRedirects;
        java.net.ResponseCache responseCache10 = okHttpClient0.getResponseCache();
        java.net.ResponseCache responseCache11 = okHttpClient0.responseCache;
        java.util.List<java.lang.String> strList12 = okHttpClient0.getTransports();
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        com.squareup.okhttp.OkHttpClient okHttpClient14 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        java.net.URL uRL16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.HttpURLConnection httpURLConnection17 = okHttpClient15.open(uRL16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNotNull(okHttpClient7);
        org.junit.Assert.assertNull(proxy8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(responseCache10);
        org.junit.Assert.assertNull(responseCache11);
        org.junit.Assert.assertNull(strList12);
    }

    @Test
    public void test12434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12434");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient0.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.copyWithDefaults();
        java.net.Proxy proxy12 = okHttpClient11.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier13 = okHttpClient11.getHostnameVerifier();
        com.squareup.okhttp.ConnectionPool connectionPool14 = null;
        okHttpClient11.connectionPool = connectionPool14;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier17 = null;
        okHttpClient16.hostnameVerifier = hostnameVerifier17;
        java.net.ResponseCache responseCache19 = null;
        okHttpClient16.responseCache = responseCache19;
        java.util.List<java.lang.String> strList21 = okHttpClient16.transports;
        com.squareup.okhttp.ConnectionPool connectionPool22 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient16.connectionPool = connectionPool22;
        java.net.CookieHandler cookieHandler24 = okHttpClient16.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache25 = okHttpClient16.okResponseCache();
        java.net.CookieHandler cookieHandler26 = okHttpClient16.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient27 = new com.squareup.okhttp.OkHttpClient(okHttpClient16);
        com.squareup.okhttp.OkHttpClient okHttpClient28 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier29 = null;
        okHttpClient28.hostnameVerifier = hostnameVerifier29;
        java.net.ProxySelector proxySelector31 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = okHttpClient28.setProxySelector(proxySelector31);
        java.net.CookieHandler cookieHandler33 = okHttpClient28.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient34 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier35 = null;
        okHttpClient34.hostnameVerifier = hostnameVerifier35;
        java.net.ResponseCache responseCache37 = null;
        okHttpClient34.responseCache = responseCache37;
        java.util.List<java.lang.String> strList39 = okHttpClient34.transports;
        com.squareup.okhttp.ConnectionPool connectionPool40 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient34.connectionPool = connectionPool40;
        java.net.Proxy proxy42 = null;
        okHttpClient34.proxy = proxy42;
        java.util.Set<com.squareup.okhttp.Route> routeSet44 = okHttpClient34.failedRoutes;
        okHttpClient28.failedRoutes = routeSet44;
        okHttpClient27.failedRoutes = routeSet44;
        java.util.List<java.lang.String> strList47 = okHttpClient27.getTransports();
        java.net.ResponseCache responseCache48 = null;
        okHttpClient27.responseCache = responseCache48;
        java.net.Proxy proxy50 = java.net.Proxy.NO_PROXY;
        boolean boolean52 = proxy50.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type53 = proxy50.type();
        java.net.Proxy.Type type54 = proxy50.type();
        okHttpClient27.proxy = proxy50;
        okHttpClient11.proxy = proxy50;
        java.net.CookieHandler cookieHandler57 = okHttpClient11.cookieHandler;
        java.net.Proxy proxy58 = java.net.Proxy.NO_PROXY;
        com.squareup.okhttp.OkHttpClient okHttpClient59 = okHttpClient11.setProxy(proxy58);
        com.squareup.okhttp.OkHttpClient okHttpClient60 = new com.squareup.okhttp.OkHttpClient(okHttpClient11);
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(proxy12);
        org.junit.Assert.assertNotNull(hostnameVerifier13);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(connectionPool22);
        org.junit.Assert.assertNull(cookieHandler24);
        org.junit.Assert.assertNull(okResponseCache25);
        org.junit.Assert.assertNull(cookieHandler26);
        org.junit.Assert.assertNotNull(okHttpClient32);
        org.junit.Assert.assertNull(cookieHandler33);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNotNull(connectionPool40);
        org.junit.Assert.assertNotNull(routeSet44);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNotNull(proxy50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + type53 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type53.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertTrue("'" + type54 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type54.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(cookieHandler57);
        org.junit.Assert.assertNotNull(proxy58);
        org.junit.Assert.assertNotNull(okHttpClient59);
    }

    @Test
    public void test12435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12435");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient0.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.copyWithDefaults();
        java.net.ResponseCache responseCache12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setResponseCache(responseCache12);
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = okHttpClient13.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient13.copyWithDefaults();
        boolean boolean16 = okHttpClient15.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool18 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient17.connectionPool = connectionPool18;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier21 = null;
        okHttpClient20.hostnameVerifier = hostnameVerifier21;
        java.net.ResponseCache responseCache23 = null;
        okHttpClient20.responseCache = responseCache23;
        java.util.List<java.lang.String> strList25 = okHttpClient20.transports;
        com.squareup.okhttp.ConnectionPool connectionPool26 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient20.connectionPool = connectionPool26;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient17.setConnectionPool(connectionPool26);
        java.net.ProxySelector proxySelector29 = null;
        okHttpClient17.proxySelector = proxySelector29;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool32 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient31.connectionPool = connectionPool32;
        com.squareup.okhttp.OkAuthenticator okAuthenticator34 = null;
        okHttpClient31.authenticator = okAuthenticator34;
        java.net.CookieHandler cookieHandler36 = null;
        okHttpClient31.cookieHandler = cookieHandler36;
        java.net.Proxy proxy38 = java.net.Proxy.NO_PROXY;
        boolean boolean40 = proxy38.equals((java.lang.Object) 1L);
        com.squareup.okhttp.OkHttpClient okHttpClient41 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache42 = okHttpClient41.okResponseCache();
        java.net.ResponseCache responseCache43 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient44 = okHttpClient41.setResponseCache(responseCache43);
        java.lang.String[] strArray46 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList47 = new java.util.ArrayList<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        okHttpClient41.transports = strList47;
        boolean boolean50 = proxy38.equals((java.lang.Object) strList47);
        com.squareup.okhttp.OkHttpClient okHttpClient51 = okHttpClient31.setProxy(proxy38);
        com.squareup.okhttp.OkHttpClient okHttpClient52 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier53 = null;
        okHttpClient52.hostnameVerifier = hostnameVerifier53;
        java.net.ProxySelector proxySelector55 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient56 = okHttpClient52.setProxySelector(proxySelector55);
        java.net.CookieHandler cookieHandler57 = okHttpClient52.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient58 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier59 = null;
        okHttpClient58.hostnameVerifier = hostnameVerifier59;
        java.net.ResponseCache responseCache61 = null;
        okHttpClient58.responseCache = responseCache61;
        java.util.List<java.lang.String> strList63 = okHttpClient58.transports;
        com.squareup.okhttp.ConnectionPool connectionPool64 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient58.connectionPool = connectionPool64;
        java.net.Proxy proxy66 = null;
        okHttpClient58.proxy = proxy66;
        java.util.Set<com.squareup.okhttp.Route> routeSet68 = okHttpClient58.failedRoutes;
        okHttpClient52.failedRoutes = routeSet68;
        javax.net.ssl.HostnameVerifier hostnameVerifier70 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient71 = okHttpClient52.setHostnameVerifier(hostnameVerifier70);
        boolean boolean72 = proxy38.equals((java.lang.Object) okHttpClient71);
        okHttpClient17.proxy = proxy38;
        java.net.Proxy proxy74 = java.net.Proxy.NO_PROXY;
        boolean boolean76 = proxy74.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type77 = proxy74.type();
        java.lang.String str78 = proxy74.toString();
        com.squareup.okhttp.OkHttpClient okHttpClient79 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier80 = null;
        okHttpClient79.hostnameVerifier = hostnameVerifier80;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory82 = okHttpClient79.getSslSocketFactory();
        boolean boolean83 = proxy74.equals((java.lang.Object) okHttpClient79);
        java.lang.String str84 = proxy74.toString();
        java.net.Proxy.Type type85 = proxy74.type();
        okHttpClient17.proxy = proxy74;
        java.lang.String str87 = proxy74.toString();
        java.net.Proxy.Type type88 = proxy74.type();
        okHttpClient15.proxy = proxy74;
        java.net.Proxy.Type type90 = proxy74.type();
        java.net.SocketAddress socketAddress91 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Proxy proxy92 = new java.net.Proxy(type90, socketAddress91);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: type DIRECT is not compatible with address null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNotNull(hostnameVerifier14);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(connectionPool18);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNotNull(connectionPool26);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNotNull(connectionPool32);
        org.junit.Assert.assertNotNull(proxy38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(okResponseCache42);
        org.junit.Assert.assertNotNull(okHttpClient44);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(okHttpClient51);
        org.junit.Assert.assertNotNull(okHttpClient56);
        org.junit.Assert.assertNull(cookieHandler57);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNotNull(connectionPool64);
        org.junit.Assert.assertNotNull(routeSet68);
        org.junit.Assert.assertNotNull(okHttpClient71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(proxy74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + type77 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type77.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "DIRECT" + "'", str78, "DIRECT");
        org.junit.Assert.assertNull(sSLSocketFactory82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "DIRECT" + "'", str84, "DIRECT");
        org.junit.Assert.assertTrue("'" + type85 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type85.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "DIRECT" + "'", str87, "DIRECT");
        org.junit.Assert.assertTrue("'" + type88 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type88.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertTrue("'" + type90 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type90.equals(java.net.Proxy.Type.DIRECT));
    }

    @Test
    public void test12436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12436");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache8 = okHttpClient7.okResponseCache();
        java.net.ResponseCache responseCache9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient7.setResponseCache(responseCache9);
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        okHttpClient7.transports = strList13;
        okHttpClient0.transports = strList13;
        javax.net.ssl.HostnameVerifier hostnameVerifier17 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier17;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory20 = okHttpClient0.sslSocketFactory;
        java.net.ProxySelector proxySelector21 = okHttpClient0.getProxySelector();
        java.net.ResponseCache responseCache22 = okHttpClient0.getResponseCache();
        java.net.ResponseCache responseCache23 = null;
        okHttpClient0.responseCache = responseCache23;
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNull(okResponseCache8);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(sSLSocketFactory20);
        org.junit.Assert.assertNull(proxySelector21);
        org.junit.Assert.assertNull(responseCache22);
    }

    @Test
    public void test12437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12437");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.CookieHandler cookieHandler5 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = null;
        okHttpClient6.hostnameVerifier = hostnameVerifier7;
        java.net.ResponseCache responseCache9 = null;
        okHttpClient6.responseCache = responseCache9;
        java.util.List<java.lang.String> strList11 = okHttpClient6.transports;
        com.squareup.okhttp.ConnectionPool connectionPool12 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient6.connectionPool = connectionPool12;
        java.net.Proxy proxy14 = null;
        okHttpClient6.proxy = proxy14;
        java.util.Set<com.squareup.okhttp.Route> routeSet16 = okHttpClient6.failedRoutes;
        okHttpClient0.failedRoutes = routeSet16;
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient0.setHostnameVerifier(hostnameVerifier18);
        java.net.ProxySelector proxySelector20 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient19.setProxySelector(proxySelector20);
        java.net.ResponseCache responseCache22 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient19.setResponseCache(responseCache22);
        java.net.Proxy proxy24 = okHttpClient19.proxy;
        com.squareup.okhttp.OkAuthenticator okAuthenticator25 = okHttpClient19.getAuthenticator();
        javax.net.ssl.HostnameVerifier hostnameVerifier26 = okHttpClient19.getHostnameVerifier();
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNotNull(routeSet16);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertNull(proxy24);
        org.junit.Assert.assertNull(okAuthenticator25);
        org.junit.Assert.assertNull(hostnameVerifier26);
    }

    @Test
    public void test12438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12438");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.CookieHandler cookieHandler8 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache9 = okHttpClient0.okResponseCache();
        java.net.CookieHandler cookieHandler10 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        java.net.ResponseCache responseCache12 = okHttpClient0.responseCache;
        java.net.CookieHandler cookieHandler13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient0.setCookieHandler(cookieHandler13);
        java.net.Proxy proxy15 = java.net.Proxy.NO_PROXY;
        boolean boolean17 = proxy15.equals((java.lang.Object) 1L);
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache19 = okHttpClient18.okResponseCache();
        java.net.ResponseCache responseCache20 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient18.setResponseCache(responseCache20);
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        okHttpClient18.transports = strList24;
        boolean boolean27 = proxy15.equals((java.lang.Object) strList24);
        com.squareup.okhttp.OkHttpClient.DEFAULT_TRANSPORTS = strList24;
        okHttpClient14.transports = strList24;
        java.net.ProxySelector proxySelector30 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient14.setProxySelector(proxySelector30);
        javax.net.ssl.HostnameVerifier hostnameVerifier32 = okHttpClient31.hostnameVerifier;
        java.net.ProxySelector proxySelector33 = null;
        okHttpClient31.proxySelector = proxySelector33;
        java.net.ProxySelector proxySelector35 = okHttpClient31.getProxySelector();
        java.net.ProxySelector proxySelector36 = null;
        okHttpClient31.proxySelector = proxySelector36;
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient31.copyWithDefaults();
        javax.net.ssl.HostnameVerifier hostnameVerifier39 = okHttpClient38.getHostnameVerifier();
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNull(cookieHandler8);
        org.junit.Assert.assertNull(okResponseCache9);
        org.junit.Assert.assertNull(cookieHandler10);
        org.junit.Assert.assertNull(responseCache12);
        org.junit.Assert.assertNotNull(okHttpClient14);
        org.junit.Assert.assertNotNull(proxy15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(okResponseCache19);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNull(hostnameVerifier32);
        org.junit.Assert.assertNull(proxySelector35);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNotNull(hostnameVerifier39);
    }

    @Test
    public void test12439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12439");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache8 = okHttpClient7.okResponseCache();
        java.net.ResponseCache responseCache9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient7.setResponseCache(responseCache9);
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        okHttpClient7.transports = strList13;
        okHttpClient0.transports = strList13;
        javax.net.ssl.HostnameVerifier hostnameVerifier17 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier17;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory20 = okHttpClient0.sslSocketFactory;
        java.util.List<java.lang.String> strList21 = okHttpClient0.transports;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache22 = okHttpClient0.okResponseCache();
        com.squareup.okhttp.OkAuthenticator okAuthenticator23 = okHttpClient0.getAuthenticator();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory24 = okHttpClient0.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient25 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        java.net.CookieHandler cookieHandler26 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient0.setCookieHandler(cookieHandler26);
        com.squareup.okhttp.OkHttpClient okHttpClient28 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        java.net.ResponseCache responseCache29 = null;
        okHttpClient0.responseCache = responseCache29;
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNull(okResponseCache8);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(sSLSocketFactory20);
        org.junit.Assert.assertNotNull(strList21);
        org.junit.Assert.assertNull(okResponseCache22);
        org.junit.Assert.assertNull(okAuthenticator23);
        org.junit.Assert.assertNull(sSLSocketFactory24);
        org.junit.Assert.assertNotNull(okHttpClient27);
    }

    @Test
    public void test12440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12440");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient0.connectionPool = connectionPool9;
        java.util.List<java.lang.String> strList11 = okHttpClient0.getTransports();
        com.squareup.okhttp.OkHttpClient okHttpClient12 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        java.net.ResponseCache responseCache13 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient12.setResponseCache(responseCache13);
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool16 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient15.connectionPool = connectionPool16;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier19 = null;
        okHttpClient18.hostnameVerifier = hostnameVerifier19;
        java.net.ResponseCache responseCache21 = null;
        okHttpClient18.responseCache = responseCache21;
        java.util.List<java.lang.String> strList23 = okHttpClient18.transports;
        com.squareup.okhttp.ConnectionPool connectionPool24 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient18.connectionPool = connectionPool24;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient15.setConnectionPool(connectionPool24);
        com.squareup.okhttp.OkAuthenticator okAuthenticator27 = okHttpClient26.getAuthenticator();
        java.net.ProxySelector proxySelector28 = okHttpClient26.getProxySelector();
        java.net.ResponseCache responseCache29 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient30 = okHttpClient26.setResponseCache(responseCache29);
        java.net.CookieHandler cookieHandler31 = null;
        okHttpClient30.cookieHandler = cookieHandler31;
        javax.net.ssl.HostnameVerifier hostnameVerifier33 = okHttpClient30.getHostnameVerifier();
        java.net.ResponseCache responseCache34 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient30.setResponseCache(responseCache34);
        javax.net.ssl.HostnameVerifier hostnameVerifier36 = okHttpClient35.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient37 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier38 = null;
        okHttpClient37.hostnameVerifier = hostnameVerifier38;
        java.net.ResponseCache responseCache40 = null;
        okHttpClient37.responseCache = responseCache40;
        javax.net.ssl.HostnameVerifier hostnameVerifier42 = okHttpClient37.hostnameVerifier;
        java.net.Proxy proxy43 = null;
        okHttpClient37.proxy = proxy43;
        com.squareup.okhttp.ConnectionPool connectionPool45 = null;
        okHttpClient37.connectionPool = connectionPool45;
        com.squareup.okhttp.OkAuthenticator okAuthenticator47 = okHttpClient37.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient48 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool49 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient48.connectionPool = connectionPool49;
        com.squareup.okhttp.OkHttpClient okHttpClient51 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier52 = null;
        okHttpClient51.hostnameVerifier = hostnameVerifier52;
        java.net.ResponseCache responseCache54 = null;
        okHttpClient51.responseCache = responseCache54;
        java.util.List<java.lang.String> strList56 = okHttpClient51.transports;
        com.squareup.okhttp.ConnectionPool connectionPool57 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient51.connectionPool = connectionPool57;
        com.squareup.okhttp.OkHttpClient okHttpClient59 = okHttpClient48.setConnectionPool(connectionPool57);
        java.net.ResponseCache responseCache60 = okHttpClient48.responseCache;
        com.squareup.okhttp.OkHttpClient okHttpClient61 = okHttpClient48.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient62 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier63 = null;
        okHttpClient62.hostnameVerifier = hostnameVerifier63;
        java.net.ResponseCache responseCache65 = null;
        okHttpClient62.responseCache = responseCache65;
        java.util.List<java.lang.String> strList67 = okHttpClient62.transports;
        com.squareup.okhttp.ConnectionPool connectionPool68 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient62.connectionPool = connectionPool68;
        com.squareup.okhttp.OkHttpClient okHttpClient70 = okHttpClient62.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient71 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier72 = null;
        okHttpClient71.hostnameVerifier = hostnameVerifier72;
        java.net.ResponseCache responseCache74 = null;
        okHttpClient71.responseCache = responseCache74;
        java.util.List<java.lang.String> strList76 = okHttpClient71.transports;
        com.squareup.okhttp.ConnectionPool connectionPool77 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient71.connectionPool = connectionPool77;
        com.squareup.okhttp.OkHttpClient okHttpClient79 = okHttpClient71.copyWithDefaults();
        java.net.ProxySelector proxySelector80 = okHttpClient79.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory81 = okHttpClient79.getSslSocketFactory();
        okHttpClient62.sslSocketFactory = sSLSocketFactory81;
        okHttpClient61.sslSocketFactory = sSLSocketFactory81;
        java.net.ProxySelector proxySelector84 = okHttpClient61.getProxySelector();
        javax.net.ssl.HostnameVerifier hostnameVerifier85 = okHttpClient61.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient86 = okHttpClient37.setHostnameVerifier(hostnameVerifier85);
        com.squareup.okhttp.OkHttpClient okHttpClient87 = okHttpClient35.setHostnameVerifier(hostnameVerifier85);
        okHttpClient12.hostnameVerifier = hostnameVerifier85;
        com.squareup.okhttp.ConnectionPool connectionPool91 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) '#');
        int int92 = connectionPool91.getHttpConnectionCount();
        int int93 = connectionPool91.getConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient94 = okHttpClient12.setConnectionPool(connectionPool91);
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(okHttpClient14);
        org.junit.Assert.assertNotNull(connectionPool16);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNotNull(connectionPool24);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNull(okAuthenticator27);
        org.junit.Assert.assertNull(proxySelector28);
        org.junit.Assert.assertNotNull(okHttpClient30);
        org.junit.Assert.assertNull(hostnameVerifier33);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNull(hostnameVerifier36);
        org.junit.Assert.assertNull(hostnameVerifier42);
        org.junit.Assert.assertNull(okAuthenticator47);
        org.junit.Assert.assertNotNull(connectionPool49);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNotNull(connectionPool57);
        org.junit.Assert.assertNotNull(okHttpClient59);
        org.junit.Assert.assertNull(responseCache60);
        org.junit.Assert.assertNotNull(okHttpClient61);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNotNull(connectionPool68);
        org.junit.Assert.assertNotNull(okHttpClient70);
        org.junit.Assert.assertNull(strList76);
        org.junit.Assert.assertNotNull(connectionPool77);
        org.junit.Assert.assertNotNull(okHttpClient79);
// flaky:         org.junit.Assert.assertNull(proxySelector80);
        org.junit.Assert.assertNotNull(sSLSocketFactory81);
// flaky:         org.junit.Assert.assertNull(proxySelector84);
        org.junit.Assert.assertNotNull(hostnameVerifier85);
        org.junit.Assert.assertNotNull(okHttpClient86);
        org.junit.Assert.assertNotNull(okHttpClient87);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 0 + "'", int92 == 0);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 0 + "'", int93 == 0);
        org.junit.Assert.assertNotNull(okHttpClient94);
    }

    @Test
    public void test12441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12441");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient0.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.copyWithDefaults();
        java.net.Proxy proxy12 = okHttpClient11.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier13 = okHttpClient11.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient14 = new com.squareup.okhttp.OkHttpClient(okHttpClient11);
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient14.copyWithDefaults();
        java.net.ResponseCache responseCache16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient15.setResponseCache(responseCache16);
        java.util.List<java.lang.String> strList18 = okHttpClient17.getTransports();
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(proxy12);
        org.junit.Assert.assertNotNull(hostnameVerifier13);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNotNull(strList18);
    }

    @Test
    public void test12442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12442");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient0.connectionPool = connectionPool9;
        java.util.List<java.lang.String> strList11 = okHttpClient0.getTransports();
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient0.setHostnameVerifier(hostnameVerifier12);
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient13.copyWithDefaults();
        okHttpClient14.followProtocolRedirects = false;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = null;
        okHttpClient17.hostnameVerifier = hostnameVerifier18;
        java.net.ResponseCache responseCache20 = null;
        okHttpClient17.responseCache = responseCache20;
        java.util.List<java.lang.String> strList22 = okHttpClient17.transports;
        com.squareup.okhttp.ConnectionPool connectionPool23 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient17.connectionPool = connectionPool23;
        java.net.Proxy proxy25 = null;
        okHttpClient17.proxy = proxy25;
        boolean boolean27 = okHttpClient17.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient17.setFollowProtocolRedirects(true);
        com.squareup.okhttp.OkHttpClient okHttpClient30 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier31 = null;
        okHttpClient30.hostnameVerifier = hostnameVerifier31;
        java.net.ResponseCache responseCache33 = null;
        okHttpClient30.responseCache = responseCache33;
        java.util.List<java.lang.String> strList35 = okHttpClient30.transports;
        javax.net.ssl.HostnameVerifier hostnameVerifier36 = null;
        okHttpClient30.hostnameVerifier = hostnameVerifier36;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache38 = okHttpClient30.okResponseCache();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory39 = okHttpClient30.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient40 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier41 = null;
        okHttpClient40.hostnameVerifier = hostnameVerifier41;
        java.net.ResponseCache responseCache43 = null;
        okHttpClient40.responseCache = responseCache43;
        javax.net.ssl.HostnameVerifier hostnameVerifier45 = okHttpClient40.hostnameVerifier;
        java.net.Proxy proxy46 = okHttpClient40.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool49 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient40.connectionPool = connectionPool49;
        com.squareup.okhttp.OkHttpClient okHttpClient51 = okHttpClient40.copyWithDefaults();
        java.net.Proxy proxy52 = okHttpClient51.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier53 = okHttpClient51.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient54 = okHttpClient30.setHostnameVerifier(hostnameVerifier53);
        com.squareup.okhttp.OkHttpClient okHttpClient55 = okHttpClient29.setHostnameVerifier(hostnameVerifier53);
        com.squareup.okhttp.OkHttpClient okHttpClient56 = okHttpClient14.setHostnameVerifier(hostnameVerifier53);
        java.net.CookieHandler cookieHandler57 = okHttpClient56.getCookieHandler();
        java.net.CookieHandler cookieHandler58 = okHttpClient56.getCookieHandler();
        javax.net.ssl.HostnameVerifier hostnameVerifier59 = okHttpClient56.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient61 = okHttpClient56.setFollowProtocolRedirects(true);
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNotNull(okHttpClient14);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNotNull(connectionPool23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(okHttpClient29);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(okResponseCache38);
        org.junit.Assert.assertNull(sSLSocketFactory39);
        org.junit.Assert.assertNull(hostnameVerifier45);
        org.junit.Assert.assertNull(proxy46);
        org.junit.Assert.assertNotNull(okHttpClient51);
        org.junit.Assert.assertNull(proxy52);
        org.junit.Assert.assertNotNull(hostnameVerifier53);
        org.junit.Assert.assertNotNull(okHttpClient54);
        org.junit.Assert.assertNotNull(okHttpClient55);
        org.junit.Assert.assertNotNull(okHttpClient56);
        org.junit.Assert.assertNull(cookieHandler57);
        org.junit.Assert.assertNull(cookieHandler58);
        org.junit.Assert.assertNotNull(hostnameVerifier59);
        org.junit.Assert.assertNotNull(okHttpClient61);
    }

    @Test
    public void test12443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12443");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.CookieHandler cookieHandler5 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = null;
        okHttpClient6.hostnameVerifier = hostnameVerifier7;
        java.net.ResponseCache responseCache9 = null;
        okHttpClient6.responseCache = responseCache9;
        java.util.List<java.lang.String> strList11 = okHttpClient6.transports;
        com.squareup.okhttp.ConnectionPool connectionPool12 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient6.connectionPool = connectionPool12;
        java.net.Proxy proxy14 = null;
        okHttpClient6.proxy = proxy14;
        java.util.Set<com.squareup.okhttp.Route> routeSet16 = okHttpClient6.failedRoutes;
        okHttpClient0.failedRoutes = routeSet16;
        java.net.ProxySelector proxySelector18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient0.setProxySelector(proxySelector18);
        com.squareup.okhttp.ConnectionPool connectionPool22 = new com.squareup.okhttp.ConnectionPool((int) (short) 10, (long) '4');
        okHttpClient0.connectionPool = connectionPool22;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory24 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory24);
        java.util.List<java.lang.String> strList26 = okHttpClient0.transports;
        java.net.ResponseCache responseCache27 = okHttpClient0.getResponseCache();
        java.util.Set<com.squareup.okhttp.Route> routeSet28 = okHttpClient0.failedRoutes;
        java.net.ProxySelector proxySelector29 = null;
        okHttpClient0.proxySelector = proxySelector29;
        javax.net.ssl.HostnameVerifier hostnameVerifier31 = okHttpClient0.hostnameVerifier;
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNotNull(routeSet16);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNotNull(okHttpClient25);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNull(responseCache27);
        org.junit.Assert.assertNotNull(routeSet28);
        org.junit.Assert.assertNull(hostnameVerifier31);
    }

    @Test
    public void test12444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12444");
        com.squareup.okhttp.ConnectionPool connectionPool2 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, 0L);
        com.squareup.okhttp.Address address3 = null;
        com.squareup.okhttp.Connection connection4 = connectionPool2.get(address3);
        int int5 = connectionPool2.getHttpConnectionCount();
        org.junit.Assert.assertNull(connection4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test12445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12445");
        com.squareup.okhttp.ConnectionPool connectionPool2 = new com.squareup.okhttp.ConnectionPool((int) '#', 0L);
        int int3 = connectionPool2.getConnectionCount();
        com.squareup.okhttp.Address address4 = null;
        com.squareup.okhttp.Connection connection5 = connectionPool2.get(address4);
        int int6 = connectionPool2.getSpdyConnectionCount();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(connection5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }

    @Test
    public void test12446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12446");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = okHttpClient0.proxySelector;
        java.net.Proxy proxy4 = okHttpClient0.proxy;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        boolean boolean6 = okHttpClient0.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool8 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient7.connectionPool = connectionPool8;
        java.net.ResponseCache responseCache10 = null;
        okHttpClient7.responseCache = responseCache10;
        java.net.Proxy proxy12 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress13 = proxy12.address();
        java.net.SocketAddress socketAddress14 = proxy12.address();
        okHttpClient7.proxy = proxy12;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient0.setProxy(proxy12);
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient0.setFollowProtocolRedirects(false);
        com.squareup.okhttp.ConnectionPool connectionPool20 = okHttpClient0.getConnectionPool();
        org.junit.Assert.assertNull(proxySelector3);
        org.junit.Assert.assertNull(proxy4);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(connectionPool8);
        org.junit.Assert.assertNotNull(proxy12);
        org.junit.Assert.assertNull(socketAddress13);
        org.junit.Assert.assertNull(socketAddress14);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNull(connectionPool20);
    }

    @Test
    public void test12447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12447");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache1 = okHttpClient0.okResponseCache();
        java.net.ResponseCache responseCache2 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.setResponseCache(responseCache2);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory4 = okHttpClient0.sslSocketFactory;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory5 = okHttpClient0.sslSocketFactory;
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = null;
        okHttpClient6.hostnameVerifier = hostnameVerifier7;
        boolean boolean9 = okHttpClient6.getFollowProtocolRedirects();
        java.net.CookieHandler cookieHandler10 = okHttpClient6.cookieHandler;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = null;
        okHttpClient11.hostnameVerifier = hostnameVerifier12;
        java.net.ResponseCache responseCache14 = null;
        okHttpClient11.responseCache = responseCache14;
        javax.net.ssl.HostnameVerifier hostnameVerifier16 = okHttpClient11.hostnameVerifier;
        java.net.Proxy proxy17 = okHttpClient11.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool20 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient11.connectionPool = connectionPool20;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient11.copyWithDefaults();
        java.net.ResponseCache responseCache23 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient22.setResponseCache(responseCache23);
        com.squareup.okhttp.OkAuthenticator okAuthenticator25 = okHttpClient22.authenticator;
        okHttpClient6.authenticator = okAuthenticator25;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient0.setAuthenticator(okAuthenticator25);
        java.net.ResponseCache responseCache28 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient27.setResponseCache(responseCache28);
        com.squareup.okhttp.ConnectionPool connectionPool30 = okHttpClient27.getConnectionPool();
        com.squareup.okhttp.OkHttpClient okHttpClient31 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool32 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient31.connectionPool = connectionPool32;
        com.squareup.okhttp.OkHttpClient okHttpClient34 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier35 = null;
        okHttpClient34.hostnameVerifier = hostnameVerifier35;
        java.net.ResponseCache responseCache37 = null;
        okHttpClient34.responseCache = responseCache37;
        java.util.List<java.lang.String> strList39 = okHttpClient34.transports;
        com.squareup.okhttp.ConnectionPool connectionPool40 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient34.connectionPool = connectionPool40;
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient31.setConnectionPool(connectionPool40);
        java.net.Proxy proxy43 = okHttpClient42.proxy;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory44 = null;
        okHttpClient42.sslSocketFactory = sSLSocketFactory44;
        com.squareup.okhttp.OkHttpClient okHttpClient46 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier47 = null;
        okHttpClient46.hostnameVerifier = hostnameVerifier47;
        java.net.ResponseCache responseCache49 = null;
        okHttpClient46.responseCache = responseCache49;
        java.util.List<java.lang.String> strList51 = okHttpClient46.transports;
        com.squareup.okhttp.ConnectionPool connectionPool52 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient46.connectionPool = connectionPool52;
        com.squareup.okhttp.ConnectionPool connectionPool54 = okHttpClient46.connectionPool;
        int int55 = connectionPool54.getHttpConnectionCount();
        com.squareup.okhttp.Address address56 = null;
        com.squareup.okhttp.Connection connection57 = connectionPool54.get(address56);
        okHttpClient42.connectionPool = connectionPool54;
        java.net.ProxySelector proxySelector59 = okHttpClient42.proxySelector;
        java.net.Proxy proxy60 = java.net.Proxy.NO_PROXY;
        boolean boolean62 = proxy60.equals((java.lang.Object) 1L);
        com.squareup.okhttp.OkHttpClient okHttpClient63 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache64 = okHttpClient63.okResponseCache();
        java.net.ResponseCache responseCache65 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient66 = okHttpClient63.setResponseCache(responseCache65);
        java.lang.String[] strArray68 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList69 = new java.util.ArrayList<java.lang.String>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList69, strArray68);
        okHttpClient63.transports = strList69;
        boolean boolean72 = proxy60.equals((java.lang.Object) strList69);
        okHttpClient42.proxy = proxy60;
        java.lang.String str74 = proxy60.toString();
        okHttpClient27.proxy = proxy60;
        com.squareup.okhttp.OkHttpClient okHttpClient76 = new com.squareup.okhttp.OkHttpClient(okHttpClient27);
        java.net.ProxySelector proxySelector77 = okHttpClient27.proxySelector;
        org.junit.Assert.assertNull(okResponseCache1);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertNull(sSLSocketFactory4);
        org.junit.Assert.assertNull(sSLSocketFactory5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(cookieHandler10);
        org.junit.Assert.assertNull(hostnameVerifier16);
        org.junit.Assert.assertNull(proxy17);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNotNull(okAuthenticator25);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNotNull(okHttpClient29);
        org.junit.Assert.assertNull(connectionPool30);
        org.junit.Assert.assertNotNull(connectionPool32);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNotNull(connectionPool40);
        org.junit.Assert.assertNotNull(okHttpClient42);
        org.junit.Assert.assertNull(proxy43);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNotNull(connectionPool52);
        org.junit.Assert.assertNotNull(connectionPool54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNull(connection57);
        org.junit.Assert.assertNull(proxySelector59);
        org.junit.Assert.assertNotNull(proxy60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(okResponseCache64);
        org.junit.Assert.assertNotNull(okHttpClient66);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "DIRECT" + "'", str74, "DIRECT");
        org.junit.Assert.assertNull(proxySelector77);
    }

    @Test
    public void test12448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12448");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient0.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.copyWithDefaults();
        java.net.ResponseCache responseCache12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setResponseCache(responseCache12);
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient13.setFollowProtocolRedirects(false);
        java.net.CookieHandler cookieHandler16 = okHttpClient15.cookieHandler;
        boolean boolean17 = okHttpClient15.getFollowProtocolRedirects();
        java.net.CookieHandler cookieHandler18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient15.setCookieHandler(cookieHandler18);
        com.squareup.okhttp.ConnectionPool connectionPool20 = okHttpClient15.getConnectionPool();
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNull(cookieHandler16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNotNull(connectionPool20);
    }

    @Test
    public void test12449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12449");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.CookieHandler cookieHandler5 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = null;
        okHttpClient6.hostnameVerifier = hostnameVerifier7;
        java.net.ResponseCache responseCache9 = null;
        okHttpClient6.responseCache = responseCache9;
        java.util.List<java.lang.String> strList11 = okHttpClient6.transports;
        com.squareup.okhttp.ConnectionPool connectionPool12 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient6.connectionPool = connectionPool12;
        java.net.Proxy proxy14 = null;
        okHttpClient6.proxy = proxy14;
        java.util.Set<com.squareup.okhttp.Route> routeSet16 = okHttpClient6.failedRoutes;
        okHttpClient0.failedRoutes = routeSet16;
        java.net.ProxySelector proxySelector18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient0.setProxySelector(proxySelector18);
        com.squareup.okhttp.ConnectionPool connectionPool22 = new com.squareup.okhttp.ConnectionPool((int) '4', 10L);
        int int23 = connectionPool22.getConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient19.setConnectionPool(connectionPool22);
        boolean boolean25 = okHttpClient24.getFollowProtocolRedirects();
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNotNull(routeSet16);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test12450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12450");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache1 = okHttpClient0.okResponseCache();
        java.net.ResponseCache responseCache2 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.setResponseCache(responseCache2);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        okHttpClient0.transports = strList6;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory9 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory9);
        java.net.Proxy proxy11 = okHttpClient10.proxy;
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = okHttpClient10.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool14 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient13.connectionPool = connectionPool14;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier17 = null;
        okHttpClient16.hostnameVerifier = hostnameVerifier17;
        java.net.ResponseCache responseCache19 = null;
        okHttpClient16.responseCache = responseCache19;
        java.util.List<java.lang.String> strList21 = okHttpClient16.transports;
        com.squareup.okhttp.ConnectionPool connectionPool22 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient16.connectionPool = connectionPool22;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient13.setConnectionPool(connectionPool22);
        com.squareup.okhttp.ConnectionPool connectionPool25 = okHttpClient13.connectionPool;
        connectionPool25.evictAll();
        com.squareup.okhttp.Address address27 = null;
        com.squareup.okhttp.Connection connection28 = connectionPool25.get(address27);
        int int29 = connectionPool25.getSpdyConnectionCount();
        connectionPool25.evictAll();
        int int31 = connectionPool25.getSpdyConnectionCount();
        okHttpClient10.connectionPool = connectionPool25;
        java.util.Set<com.squareup.okhttp.Route> routeSet33 = okHttpClient10.failedRoutes;
        org.junit.Assert.assertNull(okResponseCache1);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertNull(proxy11);
        org.junit.Assert.assertNull(hostnameVerifier12);
        org.junit.Assert.assertNotNull(connectionPool14);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(connectionPool22);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNotNull(connectionPool25);
        org.junit.Assert.assertNull(connection28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(routeSet33);
    }

    @Test
    public void test12451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12451");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient0.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.copyWithDefaults();
        java.net.ResponseCache responseCache12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setResponseCache(responseCache12);
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient13.setFollowProtocolRedirects(false);
        java.net.ResponseCache responseCache16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient13.setResponseCache(responseCache16);
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient17.setFollowProtocolRedirects(true);
        java.net.CookieHandler cookieHandler20 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient19.setCookieHandler(cookieHandler20);
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier23 = null;
        okHttpClient22.hostnameVerifier = hostnameVerifier23;
        java.net.ProxySelector proxySelector25 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient22.setProxySelector(proxySelector25);
        java.net.CookieHandler cookieHandler27 = okHttpClient22.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient28 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier29 = null;
        okHttpClient28.hostnameVerifier = hostnameVerifier29;
        java.net.ResponseCache responseCache31 = null;
        okHttpClient28.responseCache = responseCache31;
        java.util.List<java.lang.String> strList33 = okHttpClient28.transports;
        com.squareup.okhttp.ConnectionPool connectionPool34 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient28.connectionPool = connectionPool34;
        java.net.Proxy proxy36 = null;
        okHttpClient28.proxy = proxy36;
        java.util.Set<com.squareup.okhttp.Route> routeSet38 = okHttpClient28.failedRoutes;
        okHttpClient22.failedRoutes = routeSet38;
        java.net.ProxySelector proxySelector40 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient41 = okHttpClient22.setProxySelector(proxySelector40);
        java.net.CookieHandler cookieHandler42 = okHttpClient22.cookieHandler;
        com.squareup.okhttp.OkHttpClient okHttpClient43 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool44 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient43.connectionPool = connectionPool44;
        com.squareup.okhttp.OkHttpClient okHttpClient46 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier47 = null;
        okHttpClient46.hostnameVerifier = hostnameVerifier47;
        java.net.ResponseCache responseCache49 = null;
        okHttpClient46.responseCache = responseCache49;
        java.util.List<java.lang.String> strList51 = okHttpClient46.transports;
        com.squareup.okhttp.ConnectionPool connectionPool52 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient46.connectionPool = connectionPool52;
        com.squareup.okhttp.OkHttpClient okHttpClient54 = okHttpClient43.setConnectionPool(connectionPool52);
        java.net.Proxy proxy55 = okHttpClient54.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient56 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool57 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient56.connectionPool = connectionPool57;
        int int59 = connectionPool57.getSpdyConnectionCount();
        okHttpClient54.connectionPool = connectionPool57;
        int int61 = connectionPool57.getSpdyConnectionCount();
        int int62 = connectionPool57.getHttpConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient63 = okHttpClient22.setConnectionPool(connectionPool57);
        com.squareup.okhttp.OkHttpClient okHttpClient64 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier65 = null;
        okHttpClient64.hostnameVerifier = hostnameVerifier65;
        java.net.ResponseCache responseCache67 = null;
        okHttpClient64.responseCache = responseCache67;
        java.util.List<java.lang.String> strList69 = okHttpClient64.transports;
        com.squareup.okhttp.ConnectionPool connectionPool70 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient64.connectionPool = connectionPool70;
        com.squareup.okhttp.OkHttpClient okHttpClient72 = okHttpClient64.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient73 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier74 = null;
        okHttpClient73.hostnameVerifier = hostnameVerifier74;
        java.net.ResponseCache responseCache76 = null;
        okHttpClient73.responseCache = responseCache76;
        java.util.List<java.lang.String> strList78 = okHttpClient73.transports;
        com.squareup.okhttp.ConnectionPool connectionPool79 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient73.connectionPool = connectionPool79;
        com.squareup.okhttp.OkHttpClient okHttpClient81 = okHttpClient73.copyWithDefaults();
        java.net.ProxySelector proxySelector82 = okHttpClient81.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory83 = okHttpClient81.getSslSocketFactory();
        okHttpClient64.sslSocketFactory = sSLSocketFactory83;
        okHttpClient22.sslSocketFactory = sSLSocketFactory83;
        java.lang.String[] strArray86 = sSLSocketFactory83.getDefaultCipherSuites();
        java.net.Socket socket87 = sSLSocketFactory83.createSocket();
        com.squareup.okhttp.OkHttpClient okHttpClient88 = okHttpClient19.setSSLSocketFactory(sSLSocketFactory83);
        java.net.InetAddress inetAddress91 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket93 = sSLSocketFactory83.createSocket("hi!", (int) (short) -1, inetAddress91, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.net.BindException; message: Permission denied (Bind failed)");
        } catch (java.net.BindException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNull(cookieHandler27);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNotNull(connectionPool34);
        org.junit.Assert.assertNotNull(routeSet38);
        org.junit.Assert.assertNotNull(okHttpClient41);
        org.junit.Assert.assertNull(cookieHandler42);
        org.junit.Assert.assertNotNull(connectionPool44);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNotNull(connectionPool52);
        org.junit.Assert.assertNotNull(okHttpClient54);
        org.junit.Assert.assertNull(proxy55);
        org.junit.Assert.assertNotNull(connectionPool57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(okHttpClient63);
        org.junit.Assert.assertNull(strList69);
        org.junit.Assert.assertNotNull(connectionPool70);
        org.junit.Assert.assertNotNull(okHttpClient72);
        org.junit.Assert.assertNull(strList78);
        org.junit.Assert.assertNotNull(connectionPool79);
        org.junit.Assert.assertNotNull(okHttpClient81);
// flaky:         org.junit.Assert.assertNull(proxySelector82);
        org.junit.Assert.assertNotNull(sSLSocketFactory83);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertNotNull(socket87);
        org.junit.Assert.assertEquals(socket87.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(okHttpClient88);
    }

    @Test
    public void test12452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12452");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory8 = okHttpClient0.getSslSocketFactory();
        java.net.CookieHandler cookieHandler9 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = null;
        okHttpClient11.hostnameVerifier = hostnameVerifier12;
        java.net.ProxySelector proxySelector14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient11.setProxySelector(proxySelector14);
        java.net.ResponseCache responseCache16 = null;
        okHttpClient15.responseCache = responseCache16;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier19 = null;
        okHttpClient18.hostnameVerifier = hostnameVerifier19;
        java.net.ResponseCache responseCache21 = null;
        okHttpClient18.responseCache = responseCache21;
        java.util.List<java.lang.String> strList23 = okHttpClient18.transports;
        com.squareup.okhttp.ConnectionPool connectionPool24 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient18.connectionPool = connectionPool24;
        java.net.CookieHandler cookieHandler26 = okHttpClient18.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache27 = okHttpClient18.okResponseCache();
        java.net.CookieHandler cookieHandler28 = okHttpClient18.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient29 = new com.squareup.okhttp.OkHttpClient(okHttpClient18);
        java.net.Proxy proxy30 = java.net.Proxy.NO_PROXY;
        boolean boolean32 = proxy30.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type33 = proxy30.type();
        java.net.SocketAddress socketAddress34 = proxy30.address();
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient18.setProxy(proxy30);
        com.squareup.okhttp.OkHttpClient okHttpClient36 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier37 = null;
        okHttpClient36.hostnameVerifier = hostnameVerifier37;
        java.net.ResponseCache responseCache39 = null;
        okHttpClient36.responseCache = responseCache39;
        java.util.List<java.lang.String> strList41 = okHttpClient36.transports;
        com.squareup.okhttp.ConnectionPool connectionPool42 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient36.connectionPool = connectionPool42;
        com.squareup.okhttp.OkHttpClient okHttpClient44 = okHttpClient36.copyWithDefaults();
        java.net.ProxySelector proxySelector45 = okHttpClient44.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory46 = okHttpClient44.getSslSocketFactory();
        okHttpClient35.sslSocketFactory = sSLSocketFactory46;
        java.lang.String[] strArray48 = sSLSocketFactory46.getDefaultCipherSuites();
        java.lang.String[] strArray49 = sSLSocketFactory46.getSupportedCipherSuites();
        java.net.Socket socket50 = sSLSocketFactory46.createSocket();
        okHttpClient15.sslSocketFactory = sSLSocketFactory46;
        com.squareup.okhttp.OkHttpClient okHttpClient52 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool53 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient52.connectionPool = connectionPool53;
        com.squareup.okhttp.OkHttpClient okHttpClient55 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier56 = null;
        okHttpClient55.hostnameVerifier = hostnameVerifier56;
        java.net.ResponseCache responseCache58 = null;
        okHttpClient55.responseCache = responseCache58;
        java.util.List<java.lang.String> strList60 = okHttpClient55.transports;
        com.squareup.okhttp.ConnectionPool connectionPool61 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient55.connectionPool = connectionPool61;
        com.squareup.okhttp.OkHttpClient okHttpClient63 = okHttpClient52.setConnectionPool(connectionPool61);
        com.squareup.okhttp.ConnectionPool connectionPool64 = okHttpClient63.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator65 = okHttpClient63.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool68 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient63.connectionPool = connectionPool68;
        java.net.ResponseCache responseCache70 = okHttpClient63.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory71 = okHttpClient63.sslSocketFactory;
        java.net.Proxy proxy72 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress73 = proxy72.address();
        com.squareup.okhttp.OkHttpClient okHttpClient74 = okHttpClient63.setProxy(proxy72);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory75 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient76 = okHttpClient63.setSSLSocketFactory(sSLSocketFactory75);
        com.squareup.okhttp.OkHttpClient okHttpClient77 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier78 = null;
        okHttpClient77.hostnameVerifier = hostnameVerifier78;
        java.net.ResponseCache responseCache80 = null;
        okHttpClient77.responseCache = responseCache80;
        javax.net.ssl.HostnameVerifier hostnameVerifier82 = okHttpClient77.hostnameVerifier;
        java.net.Proxy proxy83 = okHttpClient77.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool86 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient77.connectionPool = connectionPool86;
        com.squareup.okhttp.OkHttpClient okHttpClient88 = okHttpClient77.copyWithDefaults();
        java.net.ResponseCache responseCache89 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient90 = okHttpClient88.setResponseCache(responseCache89);
        com.squareup.okhttp.OkAuthenticator okAuthenticator91 = okHttpClient88.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient92 = okHttpClient63.setAuthenticator(okAuthenticator91);
        java.net.Proxy proxy93 = okHttpClient92.getProxy();
        okHttpClient15.proxy = proxy93;
        java.net.SocketAddress socketAddress95 = proxy93.address();
        okHttpClient0.proxy = proxy93;
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNull(sSLSocketFactory8);
        org.junit.Assert.assertNull(cookieHandler9);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNotNull(connectionPool24);
        org.junit.Assert.assertNull(cookieHandler26);
        org.junit.Assert.assertNull(okResponseCache27);
        org.junit.Assert.assertNull(cookieHandler28);
        org.junit.Assert.assertNotNull(proxy30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + type33 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type33.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress34);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(connectionPool42);
        org.junit.Assert.assertNotNull(okHttpClient44);
// flaky:         org.junit.Assert.assertNull(proxySelector45);
        org.junit.Assert.assertNotNull(sSLSocketFactory46);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(socket50);
        org.junit.Assert.assertEquals(socket50.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(connectionPool53);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNotNull(connectionPool61);
        org.junit.Assert.assertNotNull(okHttpClient63);
        org.junit.Assert.assertNotNull(connectionPool64);
        org.junit.Assert.assertNull(okAuthenticator65);
        org.junit.Assert.assertNull(responseCache70);
        org.junit.Assert.assertNull(sSLSocketFactory71);
        org.junit.Assert.assertNotNull(proxy72);
        org.junit.Assert.assertNull(socketAddress73);
        org.junit.Assert.assertNotNull(okHttpClient74);
        org.junit.Assert.assertNotNull(okHttpClient76);
        org.junit.Assert.assertNull(hostnameVerifier82);
        org.junit.Assert.assertNull(proxy83);
        org.junit.Assert.assertNotNull(okHttpClient88);
        org.junit.Assert.assertNotNull(okHttpClient90);
        org.junit.Assert.assertNotNull(okAuthenticator91);
        org.junit.Assert.assertNotNull(okHttpClient92);
        org.junit.Assert.assertNotNull(proxy93);
        org.junit.Assert.assertNull(socketAddress95);
    }

    @Test
    public void test12453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12453");
        com.squareup.okhttp.ConnectionPool connectionPool2 = new com.squareup.okhttp.ConnectionPool(0, (long) 'a');
        int int3 = connectionPool2.getConnectionCount();
        com.squareup.okhttp.Connection connection4 = null;
        // The following exception was thrown during execution in test generation
        try {
            connectionPool2.recycle(connection4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test12454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12454");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory5 = null;
        okHttpClient0.sslSocketFactory = sSLSocketFactory5;
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = okHttpClient0.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient0.copyWithDefaults();
        java.net.CookieHandler cookieHandler9 = okHttpClient8.getCookieHandler();
        java.net.Proxy proxy10 = okHttpClient8.proxy;
        org.junit.Assert.assertNull(hostnameVerifier7);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertNull(cookieHandler9);
        org.junit.Assert.assertNull(proxy10);
    }

    @Test
    public void test12455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12455");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        boolean boolean3 = okHttpClient0.getFollowProtocolRedirects();
        java.net.CookieHandler cookieHandler4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setCookieHandler(cookieHandler4);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory6 = null;
        okHttpClient5.sslSocketFactory = sSLSocketFactory6;
        java.net.ResponseCache responseCache8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient5.setResponseCache(responseCache8);
        java.net.ProxySelector proxySelector10 = okHttpClient9.getProxySelector();
        com.squareup.okhttp.ConnectionPool connectionPool11 = okHttpClient9.connectionPool;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier13 = null;
        okHttpClient12.hostnameVerifier = hostnameVerifier13;
        java.net.ResponseCache responseCache15 = null;
        okHttpClient12.responseCache = responseCache15;
        java.util.List<java.lang.String> strList17 = okHttpClient12.transports;
        com.squareup.okhttp.ConnectionPool connectionPool18 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient12.connectionPool = connectionPool18;
        java.net.CookieHandler cookieHandler20 = okHttpClient12.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache21 = okHttpClient12.okResponseCache();
        java.net.CookieHandler cookieHandler22 = okHttpClient12.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient23 = new com.squareup.okhttp.OkHttpClient(okHttpClient12);
        javax.net.ssl.HostnameVerifier hostnameVerifier24 = okHttpClient23.hostnameVerifier;
        java.util.List<java.lang.String> strList25 = okHttpClient23.transports;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory26 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient23.setSSLSocketFactory(sSLSocketFactory26);
        javax.net.ssl.HostnameVerifier hostnameVerifier28 = okHttpClient23.getHostnameVerifier();
        java.net.ResponseCache responseCache29 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient30 = okHttpClient23.setResponseCache(responseCache29);
        com.squareup.okhttp.OkHttpClient okHttpClient31 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier32 = null;
        okHttpClient31.hostnameVerifier = hostnameVerifier32;
        java.net.ProxySelector proxySelector34 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient31.setProxySelector(proxySelector34);
        java.net.CookieHandler cookieHandler36 = okHttpClient31.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient37 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier38 = null;
        okHttpClient37.hostnameVerifier = hostnameVerifier38;
        java.net.ResponseCache responseCache40 = null;
        okHttpClient37.responseCache = responseCache40;
        java.util.List<java.lang.String> strList42 = okHttpClient37.transports;
        com.squareup.okhttp.ConnectionPool connectionPool43 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient37.connectionPool = connectionPool43;
        java.net.Proxy proxy45 = null;
        okHttpClient37.proxy = proxy45;
        java.util.Set<com.squareup.okhttp.Route> routeSet47 = okHttpClient37.failedRoutes;
        okHttpClient31.failedRoutes = routeSet47;
        java.net.ProxySelector proxySelector49 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient31.setProxySelector(proxySelector49);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory51 = null;
        okHttpClient50.sslSocketFactory = sSLSocketFactory51;
        com.squareup.okhttp.OkHttpClient okHttpClient53 = okHttpClient50.copyWithDefaults();
        java.net.CookieHandler cookieHandler54 = okHttpClient53.getCookieHandler();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache55 = okHttpClient53.okResponseCache();
        com.squareup.okhttp.OkHttpClient okHttpClient56 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool57 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient56.connectionPool = connectionPool57;
        com.squareup.okhttp.OkHttpClient okHttpClient59 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier60 = null;
        okHttpClient59.hostnameVerifier = hostnameVerifier60;
        java.net.ResponseCache responseCache62 = null;
        okHttpClient59.responseCache = responseCache62;
        java.util.List<java.lang.String> strList64 = okHttpClient59.transports;
        com.squareup.okhttp.ConnectionPool connectionPool65 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient59.connectionPool = connectionPool65;
        com.squareup.okhttp.OkHttpClient okHttpClient67 = okHttpClient56.setConnectionPool(connectionPool65);
        java.net.ResponseCache responseCache68 = okHttpClient56.responseCache;
        com.squareup.okhttp.OkHttpClient okHttpClient69 = okHttpClient56.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient70 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier71 = null;
        okHttpClient70.hostnameVerifier = hostnameVerifier71;
        java.net.ResponseCache responseCache73 = null;
        okHttpClient70.responseCache = responseCache73;
        java.util.List<java.lang.String> strList75 = okHttpClient70.transports;
        com.squareup.okhttp.ConnectionPool connectionPool76 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient70.connectionPool = connectionPool76;
        com.squareup.okhttp.OkHttpClient okHttpClient78 = okHttpClient70.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient79 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier80 = null;
        okHttpClient79.hostnameVerifier = hostnameVerifier80;
        java.net.ResponseCache responseCache82 = null;
        okHttpClient79.responseCache = responseCache82;
        java.util.List<java.lang.String> strList84 = okHttpClient79.transports;
        com.squareup.okhttp.ConnectionPool connectionPool85 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient79.connectionPool = connectionPool85;
        com.squareup.okhttp.OkHttpClient okHttpClient87 = okHttpClient79.copyWithDefaults();
        java.net.ProxySelector proxySelector88 = okHttpClient87.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory89 = okHttpClient87.getSslSocketFactory();
        okHttpClient70.sslSocketFactory = sSLSocketFactory89;
        okHttpClient69.sslSocketFactory = sSLSocketFactory89;
        java.net.ProxySelector proxySelector92 = okHttpClient69.getProxySelector();
        javax.net.ssl.HostnameVerifier hostnameVerifier93 = okHttpClient69.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient94 = okHttpClient53.setHostnameVerifier(hostnameVerifier93);
        com.squareup.okhttp.OkHttpClient okHttpClient95 = okHttpClient23.setHostnameVerifier(hostnameVerifier93);
        com.squareup.okhttp.OkHttpClient okHttpClient96 = okHttpClient9.setHostnameVerifier(hostnameVerifier93);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory97 = okHttpClient9.getSslSocketFactory();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNull(proxySelector10);
        org.junit.Assert.assertNull(connectionPool11);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNotNull(connectionPool18);
        org.junit.Assert.assertNull(cookieHandler20);
        org.junit.Assert.assertNull(okResponseCache21);
        org.junit.Assert.assertNull(cookieHandler22);
        org.junit.Assert.assertNull(hostnameVerifier24);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNull(hostnameVerifier28);
        org.junit.Assert.assertNotNull(okHttpClient30);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNull(cookieHandler36);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNotNull(connectionPool43);
        org.junit.Assert.assertNotNull(routeSet47);
        org.junit.Assert.assertNotNull(okHttpClient50);
        org.junit.Assert.assertNotNull(okHttpClient53);
        org.junit.Assert.assertNull(cookieHandler54);
        org.junit.Assert.assertNull(okResponseCache55);
        org.junit.Assert.assertNotNull(connectionPool57);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNotNull(connectionPool65);
        org.junit.Assert.assertNotNull(okHttpClient67);
        org.junit.Assert.assertNull(responseCache68);
        org.junit.Assert.assertNotNull(okHttpClient69);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNotNull(connectionPool76);
        org.junit.Assert.assertNotNull(okHttpClient78);
        org.junit.Assert.assertNull(strList84);
        org.junit.Assert.assertNotNull(connectionPool85);
        org.junit.Assert.assertNotNull(okHttpClient87);
// flaky:         org.junit.Assert.assertNull(proxySelector88);
        org.junit.Assert.assertNotNull(sSLSocketFactory89);
// flaky:         org.junit.Assert.assertNull(proxySelector92);
        org.junit.Assert.assertNotNull(hostnameVerifier93);
        org.junit.Assert.assertNotNull(okHttpClient94);
        org.junit.Assert.assertNotNull(okHttpClient95);
        org.junit.Assert.assertNotNull(okHttpClient96);
        org.junit.Assert.assertNull(sSLSocketFactory97);
    }

    @Test
    public void test12456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12456");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        boolean boolean6 = okHttpClient0.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        com.squareup.okhttp.OkHttpClient okHttpClient8 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        com.squareup.okhttp.OkHttpClient okHttpClient9 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier10 = null;
        okHttpClient9.hostnameVerifier = hostnameVerifier10;
        java.net.ResponseCache responseCache12 = null;
        okHttpClient9.responseCache = responseCache12;
        javax.net.ssl.HostnameVerifier hostnameVerifier14 = okHttpClient9.hostnameVerifier;
        java.net.Proxy proxy15 = okHttpClient9.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool18 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient9.connectionPool = connectionPool18;
        java.util.List<java.lang.String> strList20 = okHttpClient9.getTransports();
        javax.net.ssl.HostnameVerifier hostnameVerifier21 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient9.setHostnameVerifier(hostnameVerifier21);
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient22.copyWithDefaults();
        okHttpClient23.followProtocolRedirects = false;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier27 = null;
        okHttpClient26.hostnameVerifier = hostnameVerifier27;
        java.net.ResponseCache responseCache29 = null;
        okHttpClient26.responseCache = responseCache29;
        java.util.List<java.lang.String> strList31 = okHttpClient26.transports;
        com.squareup.okhttp.ConnectionPool connectionPool32 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient26.connectionPool = connectionPool32;
        java.net.Proxy proxy34 = null;
        okHttpClient26.proxy = proxy34;
        boolean boolean36 = okHttpClient26.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient26.setFollowProtocolRedirects(true);
        com.squareup.okhttp.OkHttpClient okHttpClient39 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier40 = null;
        okHttpClient39.hostnameVerifier = hostnameVerifier40;
        java.net.ResponseCache responseCache42 = null;
        okHttpClient39.responseCache = responseCache42;
        java.util.List<java.lang.String> strList44 = okHttpClient39.transports;
        javax.net.ssl.HostnameVerifier hostnameVerifier45 = null;
        okHttpClient39.hostnameVerifier = hostnameVerifier45;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache47 = okHttpClient39.okResponseCache();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory48 = okHttpClient39.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient49 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier50 = null;
        okHttpClient49.hostnameVerifier = hostnameVerifier50;
        java.net.ResponseCache responseCache52 = null;
        okHttpClient49.responseCache = responseCache52;
        javax.net.ssl.HostnameVerifier hostnameVerifier54 = okHttpClient49.hostnameVerifier;
        java.net.Proxy proxy55 = okHttpClient49.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool58 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient49.connectionPool = connectionPool58;
        com.squareup.okhttp.OkHttpClient okHttpClient60 = okHttpClient49.copyWithDefaults();
        java.net.Proxy proxy61 = okHttpClient60.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier62 = okHttpClient60.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient63 = okHttpClient39.setHostnameVerifier(hostnameVerifier62);
        com.squareup.okhttp.OkHttpClient okHttpClient64 = okHttpClient38.setHostnameVerifier(hostnameVerifier62);
        com.squareup.okhttp.OkHttpClient okHttpClient65 = okHttpClient23.setHostnameVerifier(hostnameVerifier62);
        com.squareup.okhttp.OkHttpClient okHttpClient66 = okHttpClient8.setHostnameVerifier(hostnameVerifier62);
        java.net.ProxySelector proxySelector67 = okHttpClient66.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier68 = okHttpClient66.getHostnameVerifier();
        java.net.CookieHandler cookieHandler69 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient70 = okHttpClient66.setCookieHandler(cookieHandler69);
        com.squareup.okhttp.OkHttpClient okHttpClient71 = new com.squareup.okhttp.OkHttpClient(okHttpClient70);
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(hostnameVerifier14);
        org.junit.Assert.assertNull(proxy15);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNotNull(connectionPool32);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNull(okResponseCache47);
        org.junit.Assert.assertNull(sSLSocketFactory48);
        org.junit.Assert.assertNull(hostnameVerifier54);
        org.junit.Assert.assertNull(proxy55);
        org.junit.Assert.assertNotNull(okHttpClient60);
        org.junit.Assert.assertNull(proxy61);
        org.junit.Assert.assertNotNull(hostnameVerifier62);
        org.junit.Assert.assertNotNull(okHttpClient63);
        org.junit.Assert.assertNotNull(okHttpClient64);
        org.junit.Assert.assertNotNull(okHttpClient65);
        org.junit.Assert.assertNotNull(okHttpClient66);
        org.junit.Assert.assertNull(proxySelector67);
        org.junit.Assert.assertNotNull(hostnameVerifier68);
        org.junit.Assert.assertNotNull(okHttpClient70);
    }

    @Test
    public void test12457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12457");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient0.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.copyWithDefaults();
        java.net.ResponseCache responseCache12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient11.setResponseCache(responseCache12);
        okHttpClient13.followProtocolRedirects = true;
        java.util.List<java.lang.String> strList16 = okHttpClient13.getTransports();
        java.net.ResponseCache responseCache17 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient13.setResponseCache(responseCache17);
        java.net.ProxySelector proxySelector19 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient18.setProxySelector(proxySelector19);
        java.net.ResponseCache responseCache21 = okHttpClient18.getResponseCache();
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNull(responseCache21);
    }

    @Test
    public void test12458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12458");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.ConnectionPool connectionPool12 = okHttpClient11.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator13 = okHttpClient11.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool16 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient11.connectionPool = connectionPool16;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier19 = null;
        okHttpClient18.hostnameVerifier = hostnameVerifier19;
        java.net.ResponseCache responseCache21 = null;
        okHttpClient18.responseCache = responseCache21;
        java.util.List<java.lang.String> strList23 = okHttpClient18.transports;
        com.squareup.okhttp.ConnectionPool connectionPool24 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient18.connectionPool = connectionPool24;
        java.net.CookieHandler cookieHandler26 = okHttpClient18.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache27 = okHttpClient18.okResponseCache();
        java.net.CookieHandler cookieHandler28 = okHttpClient18.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient29 = new com.squareup.okhttp.OkHttpClient(okHttpClient18);
        java.net.Proxy proxy30 = java.net.Proxy.NO_PROXY;
        boolean boolean32 = proxy30.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type33 = proxy30.type();
        java.net.SocketAddress socketAddress34 = proxy30.address();
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient18.setProxy(proxy30);
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient11.setProxy(proxy30);
        java.net.ResponseCache responseCache37 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient36.setResponseCache(responseCache37);
        java.util.List<java.lang.String> strList39 = okHttpClient36.transports;
        com.squareup.okhttp.OkHttpClient okHttpClient40 = new com.squareup.okhttp.OkHttpClient(okHttpClient36);
        com.squareup.okhttp.OkHttpClient okHttpClient41 = new com.squareup.okhttp.OkHttpClient(okHttpClient36);
        java.util.Set<com.squareup.okhttp.Route> routeSet42 = okHttpClient41.failedRoutes;
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNull(okAuthenticator13);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNotNull(connectionPool24);
        org.junit.Assert.assertNull(cookieHandler26);
        org.junit.Assert.assertNull(okResponseCache27);
        org.junit.Assert.assertNull(cookieHandler28);
        org.junit.Assert.assertNotNull(proxy30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + type33 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type33.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress34);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNotNull(routeSet42);
    }

    @Test
    public void test12459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12459");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.CookieHandler cookieHandler5 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = null;
        okHttpClient6.hostnameVerifier = hostnameVerifier7;
        java.net.ResponseCache responseCache9 = null;
        okHttpClient6.responseCache = responseCache9;
        java.util.List<java.lang.String> strList11 = okHttpClient6.transports;
        com.squareup.okhttp.ConnectionPool connectionPool12 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient6.connectionPool = connectionPool12;
        java.net.Proxy proxy14 = null;
        okHttpClient6.proxy = proxy14;
        java.util.Set<com.squareup.okhttp.Route> routeSet16 = okHttpClient6.failedRoutes;
        okHttpClient0.failedRoutes = routeSet16;
        java.net.ProxySelector proxySelector18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient0.setProxySelector(proxySelector18);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory20 = null;
        okHttpClient19.sslSocketFactory = sSLSocketFactory20;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient19.copyWithDefaults();
        java.net.CookieHandler cookieHandler23 = okHttpClient22.getCookieHandler();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache24 = okHttpClient22.okResponseCache();
        com.squareup.okhttp.ConnectionPool connectionPool25 = okHttpClient22.getConnectionPool();
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNotNull(routeSet16);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNull(cookieHandler23);
        org.junit.Assert.assertNull(okResponseCache24);
        org.junit.Assert.assertNotNull(connectionPool25);
    }

    @Test
    public void test12460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12460");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        java.net.Proxy proxy6 = java.net.Proxy.NO_PROXY;
        boolean boolean8 = proxy6.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type9 = proxy6.type();
        java.net.SocketAddress socketAddress10 = proxy6.address();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setProxy(proxy6);
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = okHttpClient11.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient(okHttpClient11);
        java.util.Set<com.squareup.okhttp.Route> routeSet14 = okHttpClient13.failedRoutes;
        java.net.CookieHandler cookieHandler15 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient13.setCookieHandler(cookieHandler15);
        java.net.CookieHandler cookieHandler17 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient13.setCookieHandler(cookieHandler17);
        java.net.CookieHandler cookieHandler19 = okHttpClient18.cookieHandler;
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(proxy6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + type9 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type9.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress10);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(hostnameVerifier12);
        org.junit.Assert.assertNotNull(routeSet14);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNull(cookieHandler19);
    }

    @Test
    public void test12461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12461");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.Proxy proxy8 = null;
        okHttpClient0.proxy = proxy8;
        boolean boolean10 = okHttpClient0.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        java.net.ProxySelector proxySelector12 = okHttpClient11.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier13 = okHttpClient11.hostnameVerifier;
        java.net.Proxy proxy14 = java.net.Proxy.NO_PROXY;
        boolean boolean16 = proxy14.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type17 = proxy14.type();
        java.net.Proxy.Type type18 = proxy14.type();
        okHttpClient11.proxy = proxy14;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier21 = null;
        okHttpClient20.hostnameVerifier = hostnameVerifier21;
        java.net.ResponseCache responseCache23 = null;
        okHttpClient20.responseCache = responseCache23;
        java.util.List<java.lang.String> strList25 = okHttpClient20.transports;
        com.squareup.okhttp.ConnectionPool connectionPool26 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient20.connectionPool = connectionPool26;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = okHttpClient20.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient29 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = null;
        okHttpClient29.hostnameVerifier = hostnameVerifier30;
        java.net.ResponseCache responseCache32 = null;
        okHttpClient29.responseCache = responseCache32;
        java.util.List<java.lang.String> strList34 = okHttpClient29.transports;
        com.squareup.okhttp.ConnectionPool connectionPool35 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient29.connectionPool = connectionPool35;
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient29.copyWithDefaults();
        java.net.ProxySelector proxySelector38 = okHttpClient37.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory39 = okHttpClient37.getSslSocketFactory();
        okHttpClient20.sslSocketFactory = sSLSocketFactory39;
        okHttpClient11.sslSocketFactory = sSLSocketFactory39;
        com.squareup.okhttp.OkHttpClient okHttpClient42 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier43 = null;
        okHttpClient42.hostnameVerifier = hostnameVerifier43;
        java.net.ResponseCache responseCache45 = null;
        okHttpClient42.responseCache = responseCache45;
        java.util.List<java.lang.String> strList47 = okHttpClient42.transports;
        java.net.Proxy proxy48 = java.net.Proxy.NO_PROXY;
        boolean boolean50 = proxy48.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type51 = proxy48.type();
        java.net.SocketAddress socketAddress52 = proxy48.address();
        com.squareup.okhttp.OkHttpClient okHttpClient53 = okHttpClient42.setProxy(proxy48);
        java.net.SocketAddress socketAddress54 = proxy48.address();
        java.net.Proxy.Type type55 = proxy48.type();
        java.net.SocketAddress socketAddress56 = proxy48.address();
        com.squareup.okhttp.OkHttpClient okHttpClient57 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier58 = null;
        okHttpClient57.hostnameVerifier = hostnameVerifier58;
        java.net.ResponseCache responseCache60 = null;
        okHttpClient57.responseCache = responseCache60;
        javax.net.ssl.HostnameVerifier hostnameVerifier62 = okHttpClient57.hostnameVerifier;
        java.net.Proxy proxy63 = okHttpClient57.getProxy();
        java.net.CookieHandler cookieHandler64 = null;
        okHttpClient57.cookieHandler = cookieHandler64;
        okHttpClient57.followProtocolRedirects = true;
        java.net.CookieHandler cookieHandler68 = okHttpClient57.getCookieHandler();
        boolean boolean69 = proxy48.equals((java.lang.Object) okHttpClient57);
        okHttpClient11.proxy = proxy48;
        java.net.CookieHandler cookieHandler71 = okHttpClient11.cookieHandler;
        java.net.ProxySelector proxySelector72 = null;
        okHttpClient11.proxySelector = proxySelector72;
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(proxySelector12);
        org.junit.Assert.assertNull(hostnameVerifier13);
        org.junit.Assert.assertNotNull(proxy14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + type17 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type17.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertTrue("'" + type18 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type18.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNotNull(connectionPool26);
        org.junit.Assert.assertNotNull(okHttpClient28);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(connectionPool35);
        org.junit.Assert.assertNotNull(okHttpClient37);
// flaky:         org.junit.Assert.assertNull(proxySelector38);
        org.junit.Assert.assertNotNull(sSLSocketFactory39);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNotNull(proxy48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + type51 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type51.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress52);
        org.junit.Assert.assertNotNull(okHttpClient53);
        org.junit.Assert.assertNull(socketAddress54);
        org.junit.Assert.assertTrue("'" + type55 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type55.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress56);
        org.junit.Assert.assertNull(hostnameVerifier62);
        org.junit.Assert.assertNull(proxy63);
        org.junit.Assert.assertNull(cookieHandler68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(cookieHandler71);
    }

    @Test
    public void test12462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12462");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory8 = okHttpClient0.getSslSocketFactory();
        java.net.CookieHandler cookieHandler9 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.ConnectionPool connectionPool12 = new com.squareup.okhttp.ConnectionPool(10, 1L);
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient0.setConnectionPool(connectionPool12);
        com.squareup.okhttp.OkHttpClient okHttpClient14 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier15 = null;
        okHttpClient14.hostnameVerifier = hostnameVerifier15;
        java.net.ResponseCache responseCache17 = null;
        okHttpClient14.responseCache = responseCache17;
        java.util.List<java.lang.String> strList19 = okHttpClient14.transports;
        com.squareup.okhttp.ConnectionPool connectionPool20 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient14.connectionPool = connectionPool20;
        com.squareup.okhttp.ConnectionPool connectionPool22 = okHttpClient14.connectionPool;
        int int23 = connectionPool22.getHttpConnectionCount();
        com.squareup.okhttp.Address address24 = null;
        com.squareup.okhttp.Connection connection25 = connectionPool22.get(address24);
        okHttpClient13.connectionPool = connectionPool22;
        java.net.Proxy proxy27 = okHttpClient13.getProxy();
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNull(sSLSocketFactory8);
        org.junit.Assert.assertNull(cookieHandler9);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNotNull(connectionPool20);
        org.junit.Assert.assertNotNull(connectionPool22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNull(connection25);
        org.junit.Assert.assertNull(proxy27);
    }

    @Test
    public void test12463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12463");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.CookieHandler cookieHandler5 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = null;
        okHttpClient6.hostnameVerifier = hostnameVerifier7;
        java.net.ResponseCache responseCache9 = null;
        okHttpClient6.responseCache = responseCache9;
        java.util.List<java.lang.String> strList11 = okHttpClient6.transports;
        com.squareup.okhttp.ConnectionPool connectionPool12 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient6.connectionPool = connectionPool12;
        java.net.Proxy proxy14 = null;
        okHttpClient6.proxy = proxy14;
        java.util.Set<com.squareup.okhttp.Route> routeSet16 = okHttpClient6.failedRoutes;
        okHttpClient0.failedRoutes = routeSet16;
        java.net.ProxySelector proxySelector18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient0.setProxySelector(proxySelector18);
        java.net.ResponseCache responseCache20 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient0.setResponseCache(responseCache20);
        com.squareup.okhttp.OkAuthenticator okAuthenticator22 = okHttpClient21.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool23 = okHttpClient21.getConnectionPool();
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNotNull(routeSet16);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNull(okAuthenticator22);
        org.junit.Assert.assertNull(connectionPool23);
    }

    @Test
    public void test12464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12464");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache1 = okHttpClient0.okResponseCache();
        java.net.ResponseCache responseCache2 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.setResponseCache(responseCache2);
        java.net.CookieHandler cookieHandler4 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier6 = null;
        okHttpClient5.hostnameVerifier = hostnameVerifier6;
        java.net.ResponseCache responseCache8 = null;
        okHttpClient5.responseCache = responseCache8;
        javax.net.ssl.HostnameVerifier hostnameVerifier10 = okHttpClient5.hostnameVerifier;
        java.net.Proxy proxy11 = okHttpClient5.getProxy();
        java.net.CookieHandler cookieHandler12 = null;
        okHttpClient5.cookieHandler = cookieHandler12;
        okHttpClient5.followProtocolRedirects = true;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier17 = null;
        okHttpClient16.hostnameVerifier = hostnameVerifier17;
        java.net.ResponseCache responseCache19 = null;
        okHttpClient16.responseCache = responseCache19;
        javax.net.ssl.HostnameVerifier hostnameVerifier21 = okHttpClient16.hostnameVerifier;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory22 = okHttpClient16.sslSocketFactory;
        java.net.CookieHandler cookieHandler23 = okHttpClient16.cookieHandler;
        javax.net.ssl.HostnameVerifier hostnameVerifier24 = okHttpClient16.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient25 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool26 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient25.connectionPool = connectionPool26;
        com.squareup.okhttp.OkAuthenticator okAuthenticator28 = null;
        okHttpClient25.authenticator = okAuthenticator28;
        java.util.List<java.lang.String> strList30 = okHttpClient25.transports;
        java.net.ResponseCache responseCache31 = null;
        okHttpClient25.responseCache = responseCache31;
        com.squareup.okhttp.OkHttpClient okHttpClient33 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier34 = null;
        okHttpClient33.hostnameVerifier = hostnameVerifier34;
        java.net.ResponseCache responseCache36 = null;
        okHttpClient33.responseCache = responseCache36;
        javax.net.ssl.HostnameVerifier hostnameVerifier38 = okHttpClient33.hostnameVerifier;
        java.net.Proxy proxy39 = okHttpClient33.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool42 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient33.connectionPool = connectionPool42;
        com.squareup.okhttp.OkHttpClient okHttpClient44 = okHttpClient33.copyWithDefaults();
        java.net.Proxy proxy45 = okHttpClient44.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier46 = okHttpClient44.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient47 = okHttpClient25.setHostnameVerifier(hostnameVerifier46);
        com.squareup.okhttp.OkHttpClient okHttpClient48 = okHttpClient16.setHostnameVerifier(hostnameVerifier46);
        okHttpClient5.hostnameVerifier = hostnameVerifier46;
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient0.setHostnameVerifier(hostnameVerifier46);
        java.net.Proxy proxy51 = okHttpClient50.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient52 = new com.squareup.okhttp.OkHttpClient(okHttpClient50);
        java.util.Set<com.squareup.okhttp.Route> routeSet53 = okHttpClient52.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient54 = new com.squareup.okhttp.OkHttpClient(okHttpClient52);
        java.net.ProxySelector proxySelector55 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient56 = okHttpClient52.setProxySelector(proxySelector55);
        com.squareup.okhttp.OkHttpClient okHttpClient57 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier58 = null;
        okHttpClient57.hostnameVerifier = hostnameVerifier58;
        java.net.ProxySelector proxySelector60 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient61 = okHttpClient57.setProxySelector(proxySelector60);
        javax.net.ssl.HostnameVerifier hostnameVerifier62 = okHttpClient57.hostnameVerifier;
        java.net.CookieHandler cookieHandler63 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient64 = okHttpClient57.setCookieHandler(cookieHandler63);
        com.squareup.okhttp.OkAuthenticator okAuthenticator65 = okHttpClient64.authenticator;
        java.net.ProxySelector proxySelector66 = okHttpClient64.getProxySelector();
        com.squareup.okhttp.OkHttpClient okHttpClient67 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier68 = null;
        okHttpClient67.hostnameVerifier = hostnameVerifier68;
        java.net.ResponseCache responseCache70 = null;
        okHttpClient67.responseCache = responseCache70;
        java.util.List<java.lang.String> strList72 = okHttpClient67.transports;
        com.squareup.okhttp.ConnectionPool connectionPool73 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient67.connectionPool = connectionPool73;
        com.squareup.okhttp.OkHttpClient okHttpClient75 = okHttpClient67.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient76 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier77 = null;
        okHttpClient76.hostnameVerifier = hostnameVerifier77;
        java.net.ResponseCache responseCache79 = null;
        okHttpClient76.responseCache = responseCache79;
        java.util.List<java.lang.String> strList81 = okHttpClient76.transports;
        com.squareup.okhttp.ConnectionPool connectionPool82 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient76.connectionPool = connectionPool82;
        com.squareup.okhttp.OkHttpClient okHttpClient84 = okHttpClient76.copyWithDefaults();
        java.net.ProxySelector proxySelector85 = okHttpClient84.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory86 = okHttpClient84.getSslSocketFactory();
        okHttpClient67.sslSocketFactory = sSLSocketFactory86;
        java.net.Socket socket88 = sSLSocketFactory86.createSocket();
        java.net.Socket socket89 = sSLSocketFactory86.createSocket();
        okHttpClient64.sslSocketFactory = sSLSocketFactory86;
        com.squareup.okhttp.OkHttpClient okHttpClient91 = okHttpClient52.setSSLSocketFactory(sSLSocketFactory86);
        java.net.Proxy proxy92 = okHttpClient91.proxy;
        org.junit.Assert.assertNull(okResponseCache1);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertNull(cookieHandler4);
        org.junit.Assert.assertNull(hostnameVerifier10);
        org.junit.Assert.assertNull(proxy11);
        org.junit.Assert.assertNull(hostnameVerifier21);
        org.junit.Assert.assertNull(sSLSocketFactory22);
        org.junit.Assert.assertNull(cookieHandler23);
        org.junit.Assert.assertNull(hostnameVerifier24);
        org.junit.Assert.assertNotNull(connectionPool26);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNull(hostnameVerifier38);
        org.junit.Assert.assertNull(proxy39);
        org.junit.Assert.assertNotNull(okHttpClient44);
        org.junit.Assert.assertNull(proxy45);
        org.junit.Assert.assertNotNull(hostnameVerifier46);
        org.junit.Assert.assertNotNull(okHttpClient47);
        org.junit.Assert.assertNotNull(okHttpClient48);
        org.junit.Assert.assertNotNull(okHttpClient50);
        org.junit.Assert.assertNull(proxy51);
        org.junit.Assert.assertNotNull(routeSet53);
        org.junit.Assert.assertNotNull(okHttpClient56);
        org.junit.Assert.assertNotNull(okHttpClient61);
        org.junit.Assert.assertNull(hostnameVerifier62);
        org.junit.Assert.assertNotNull(okHttpClient64);
        org.junit.Assert.assertNull(okAuthenticator65);
        org.junit.Assert.assertNull(proxySelector66);
        org.junit.Assert.assertNull(strList72);
        org.junit.Assert.assertNotNull(connectionPool73);
        org.junit.Assert.assertNotNull(okHttpClient75);
        org.junit.Assert.assertNull(strList81);
        org.junit.Assert.assertNotNull(connectionPool82);
        org.junit.Assert.assertNotNull(okHttpClient84);
// flaky:         org.junit.Assert.assertNull(proxySelector85);
        org.junit.Assert.assertNotNull(sSLSocketFactory86);
        org.junit.Assert.assertNotNull(socket88);
        org.junit.Assert.assertEquals(socket88.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(socket89);
        org.junit.Assert.assertEquals(socket89.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(okHttpClient91);
        org.junit.Assert.assertNull(proxy92);
    }

    @Test
    public void test12465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12465");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache5 = okHttpClient0.okResponseCache();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory6);
        java.net.ResponseCache responseCache8 = null;
        okHttpClient7.responseCache = responseCache8;
        java.util.List<java.lang.String> strList10 = okHttpClient7.transports;
        org.junit.Assert.assertNull(okResponseCache5);
        org.junit.Assert.assertNotNull(okHttpClient7);
        org.junit.Assert.assertNull(strList10);
    }

    @Test
    public void test12466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12466");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.ResponseCache responseCache5 = null;
        okHttpClient4.responseCache = responseCache5;
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = okHttpClient4.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient4.copyWithDefaults();
        java.net.ResponseCache responseCache9 = okHttpClient8.responseCache;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = new com.squareup.okhttp.OkHttpClient(okHttpClient8);
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient8.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient11.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient(okHttpClient12);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(hostnameVerifier7);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertNull(responseCache9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(okHttpClient12);
    }

    @Test
    public void test12467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12467");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.ResponseCache responseCache5 = null;
        okHttpClient4.responseCache = responseCache5;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier8 = null;
        okHttpClient7.hostnameVerifier = hostnameVerifier8;
        java.net.ResponseCache responseCache10 = null;
        okHttpClient7.responseCache = responseCache10;
        java.util.List<java.lang.String> strList12 = okHttpClient7.transports;
        com.squareup.okhttp.ConnectionPool connectionPool13 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient7.connectionPool = connectionPool13;
        java.net.CookieHandler cookieHandler15 = okHttpClient7.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache16 = okHttpClient7.okResponseCache();
        java.net.CookieHandler cookieHandler17 = okHttpClient7.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient(okHttpClient7);
        java.net.Proxy proxy19 = java.net.Proxy.NO_PROXY;
        boolean boolean21 = proxy19.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type22 = proxy19.type();
        java.net.SocketAddress socketAddress23 = proxy19.address();
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient7.setProxy(proxy19);
        com.squareup.okhttp.OkHttpClient okHttpClient25 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier26 = null;
        okHttpClient25.hostnameVerifier = hostnameVerifier26;
        java.net.ResponseCache responseCache28 = null;
        okHttpClient25.responseCache = responseCache28;
        java.util.List<java.lang.String> strList30 = okHttpClient25.transports;
        com.squareup.okhttp.ConnectionPool connectionPool31 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient25.connectionPool = connectionPool31;
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient25.copyWithDefaults();
        java.net.ProxySelector proxySelector34 = okHttpClient33.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory35 = okHttpClient33.getSslSocketFactory();
        okHttpClient24.sslSocketFactory = sSLSocketFactory35;
        java.lang.String[] strArray37 = sSLSocketFactory35.getDefaultCipherSuites();
        java.lang.String[] strArray38 = sSLSocketFactory35.getSupportedCipherSuites();
        java.net.Socket socket39 = sSLSocketFactory35.createSocket();
        okHttpClient4.sslSocketFactory = sSLSocketFactory35;
        java.util.Set<com.squareup.okhttp.Route> routeSet41 = okHttpClient4.failedRoutes;
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(connectionPool13);
        org.junit.Assert.assertNull(cookieHandler15);
        org.junit.Assert.assertNull(okResponseCache16);
        org.junit.Assert.assertNull(cookieHandler17);
        org.junit.Assert.assertNotNull(proxy19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + type22 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type22.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress23);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNotNull(connectionPool31);
        org.junit.Assert.assertNotNull(okHttpClient33);
// flaky:         org.junit.Assert.assertNull(proxySelector34);
        org.junit.Assert.assertNotNull(sSLSocketFactory35);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(socket39);
        org.junit.Assert.assertEquals(socket39.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(routeSet41);
    }

    @Test
    public void test12468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12468");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.CookieHandler cookieHandler6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient0.setCookieHandler(cookieHandler6);
        java.net.ResponseCache responseCache8 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient9 = okHttpClient7.setResponseCache(responseCache8);
        com.squareup.okhttp.OkHttpClient okHttpClient10 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier11 = null;
        okHttpClient10.hostnameVerifier = hostnameVerifier11;
        java.net.ResponseCache responseCache13 = null;
        okHttpClient10.responseCache = responseCache13;
        java.util.List<java.lang.String> strList15 = okHttpClient10.transports;
        com.squareup.okhttp.ConnectionPool connectionPool16 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient10.connectionPool = connectionPool16;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient10.copyWithDefaults();
        java.net.ProxySelector proxySelector19 = okHttpClient18.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory20 = okHttpClient18.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient7.setSSLSocketFactory(sSLSocketFactory20);
        javax.net.ssl.HostnameVerifier hostnameVerifier22 = okHttpClient21.getHostnameVerifier();
        java.net.ProxySelector proxySelector23 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient21.setProxySelector(proxySelector23);
        com.squareup.okhttp.OkHttpClient okHttpClient25 = new com.squareup.okhttp.OkHttpClient(okHttpClient24);
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache26 = okHttpClient25.okResponseCache();
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNotNull(okHttpClient7);
        org.junit.Assert.assertNotNull(okHttpClient9);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(connectionPool16);
        org.junit.Assert.assertNotNull(okHttpClient18);
// flaky:         org.junit.Assert.assertNull(proxySelector19);
        org.junit.Assert.assertNotNull(sSLSocketFactory20);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNull(hostnameVerifier22);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNull(okResponseCache26);
    }

    @Test
    public void test12469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12469");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        java.net.Proxy proxy6 = java.net.Proxy.NO_PROXY;
        boolean boolean8 = proxy6.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type9 = proxy6.type();
        java.net.SocketAddress socketAddress10 = proxy6.address();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setProxy(proxy6);
        java.net.SocketAddress socketAddress12 = proxy6.address();
        java.net.Proxy.Type type13 = proxy6.type();
        java.net.Proxy.Type type14 = proxy6.type();
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool16 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient15.connectionPool = connectionPool16;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier19 = null;
        okHttpClient18.hostnameVerifier = hostnameVerifier19;
        java.net.ResponseCache responseCache21 = null;
        okHttpClient18.responseCache = responseCache21;
        java.util.List<java.lang.String> strList23 = okHttpClient18.transports;
        com.squareup.okhttp.ConnectionPool connectionPool24 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient18.connectionPool = connectionPool24;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient15.setConnectionPool(connectionPool24);
        com.squareup.okhttp.ConnectionPool connectionPool27 = okHttpClient26.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator28 = okHttpClient26.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool31 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient26.connectionPool = connectionPool31;
        java.net.ResponseCache responseCache33 = okHttpClient26.responseCache;
        java.util.List<java.lang.String> strList34 = okHttpClient26.getTransports();
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient26.copyWithDefaults();
        java.net.ResponseCache responseCache36 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient35.setResponseCache(responseCache36);
        com.squareup.okhttp.OkAuthenticator okAuthenticator38 = okHttpClient35.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool41 = new com.squareup.okhttp.ConnectionPool((int) (short) -1, (long) 'a');
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient35.setConnectionPool(connectionPool41);
        java.net.Proxy proxy43 = okHttpClient35.getProxy();
        boolean boolean44 = proxy6.equals((java.lang.Object) okHttpClient35);
        java.lang.String str45 = proxy6.toString();
        java.net.SocketAddress socketAddress46 = proxy6.address();
        com.squareup.okhttp.ConnectionPool connectionPool49 = new com.squareup.okhttp.ConnectionPool((int) (short) 10, (long) 1);
        int int50 = connectionPool49.getHttpConnectionCount();
        boolean boolean51 = proxy6.equals((java.lang.Object) int50);
        java.net.Proxy.Type type52 = proxy6.type();
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(proxy6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + type9 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type9.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress10);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(socketAddress12);
        org.junit.Assert.assertTrue("'" + type13 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type13.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertTrue("'" + type14 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type14.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNotNull(connectionPool16);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNotNull(connectionPool24);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNotNull(connectionPool27);
        org.junit.Assert.assertNull(okAuthenticator28);
        org.junit.Assert.assertNull(responseCache33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNotNull(okHttpClient37);
        org.junit.Assert.assertNotNull(okAuthenticator38);
        org.junit.Assert.assertNotNull(okHttpClient42);
        org.junit.Assert.assertNull(proxy43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "DIRECT" + "'", str45, "DIRECT");
        org.junit.Assert.assertNull(socketAddress46);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + type52 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type52.equals(java.net.Proxy.Type.DIRECT));
    }

    @Test
    public void test12470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12470");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.OkAuthenticator okAuthenticator12 = okHttpClient11.getAuthenticator();
        java.net.ProxySelector proxySelector13 = okHttpClient11.getProxySelector();
        java.net.ProxySelector proxySelector14 = null;
        okHttpClient11.proxySelector = proxySelector14;
        java.net.ProxySelector proxySelector16 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient11.setProxySelector(proxySelector16);
        com.squareup.okhttp.ConnectionPool connectionPool20 = new com.squareup.okhttp.ConnectionPool(10, 1L);
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient17.setConnectionPool(connectionPool20);
        java.util.Set<com.squareup.okhttp.Route> routeSet22 = okHttpClient21.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient23 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool24 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient23.connectionPool = connectionPool24;
        java.net.ResponseCache responseCache26 = null;
        okHttpClient23.responseCache = responseCache26;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = new com.squareup.okhttp.OkHttpClient(okHttpClient23);
        boolean boolean29 = okHttpClient23.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient30 = new com.squareup.okhttp.OkHttpClient(okHttpClient23);
        com.squareup.okhttp.OkHttpClient okHttpClient31 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier32 = null;
        okHttpClient31.hostnameVerifier = hostnameVerifier32;
        java.net.ProxySelector proxySelector34 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient31.setProxySelector(proxySelector34);
        java.net.ResponseCache responseCache36 = null;
        okHttpClient35.responseCache = responseCache36;
        javax.net.ssl.HostnameVerifier hostnameVerifier38 = okHttpClient35.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient35.copyWithDefaults();
        java.net.ResponseCache responseCache40 = okHttpClient39.responseCache;
        com.squareup.okhttp.OkHttpClient okHttpClient41 = new com.squareup.okhttp.OkHttpClient(okHttpClient39);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory42 = okHttpClient39.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient43 = okHttpClient23.setSSLSocketFactory(sSLSocketFactory42);
        java.net.Socket socket44 = sSLSocketFactory42.createSocket();
        okHttpClient21.sslSocketFactory = sSLSocketFactory42;
        java.lang.String[] strArray46 = sSLSocketFactory42.getSupportedCipherSuites();
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(okAuthenticator12);
        org.junit.Assert.assertNull(proxySelector13);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNotNull(routeSet22);
        org.junit.Assert.assertNotNull(connectionPool24);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNull(hostnameVerifier38);
        org.junit.Assert.assertNotNull(okHttpClient39);
        org.junit.Assert.assertNull(responseCache40);
        org.junit.Assert.assertNotNull(sSLSocketFactory42);
        org.junit.Assert.assertNotNull(okHttpClient43);
        org.junit.Assert.assertNotNull(socket44);
        org.junit.Assert.assertEquals(socket44.toString(), "Socket[unconnected]");
        org.junit.Assert.assertNotNull(strArray46);
    }

    @Test
    public void test12471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12471");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.ResponseCache responseCache5 = null;
        okHttpClient4.responseCache = responseCache5;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient4.setSSLSocketFactory(sSLSocketFactory7);
        com.squareup.okhttp.OkHttpClient okHttpClient9 = new com.squareup.okhttp.OkHttpClient(okHttpClient8);
        com.squareup.okhttp.ConnectionPool connectionPool12 = new com.squareup.okhttp.ConnectionPool((int) (short) 100, (long) (byte) -1);
        com.squareup.okhttp.Address address13 = null;
        com.squareup.okhttp.Connection connection14 = connectionPool12.get(address13);
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient9.setConnectionPool(connectionPool12);
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertNull(connection14);
        org.junit.Assert.assertNotNull(okHttpClient15);
    }

    @Test
    public void test12472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12472");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.ResponseCache responseCache5 = null;
        okHttpClient4.responseCache = responseCache5;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory7 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = okHttpClient4.setSSLSocketFactory(sSLSocketFactory7);
        java.util.List<java.lang.String> strList9 = okHttpClient4.transports;
        com.squareup.okhttp.OkHttpClient okHttpClient10 = okHttpClient4.copyWithDefaults();
        com.squareup.okhttp.ConnectionPool connectionPool11 = com.squareup.okhttp.ConnectionPool.getDefault();
        com.squareup.okhttp.Address address12 = null;
        com.squareup.okhttp.Connection connection13 = connectionPool11.get(address12);
        int int14 = connectionPool11.getSpdyConnectionCount();
        connectionPool11.evictAll();
        int int16 = connectionPool11.getSpdyConnectionCount();
        int int17 = connectionPool11.getConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient4.setConnectionPool(connectionPool11);
        com.squareup.okhttp.OkHttpClient okHttpClient19 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier20 = null;
        okHttpClient19.hostnameVerifier = hostnameVerifier20;
        java.net.ResponseCache responseCache22 = null;
        okHttpClient19.responseCache = responseCache22;
        java.util.List<java.lang.String> strList24 = okHttpClient19.transports;
        com.squareup.okhttp.ConnectionPool connectionPool25 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient19.connectionPool = connectionPool25;
        com.squareup.okhttp.ConnectionPool connectionPool27 = okHttpClient19.connectionPool;
        boolean boolean28 = okHttpClient19.getFollowProtocolRedirects();
        com.squareup.okhttp.ConnectionPool connectionPool29 = okHttpClient19.getConnectionPool();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory30 = okHttpClient19.getSslSocketFactory();
        java.net.CookieHandler cookieHandler31 = okHttpClient19.cookieHandler;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache33 = okHttpClient32.okResponseCache();
        java.net.ResponseCache responseCache34 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient32.setResponseCache(responseCache34);
        com.squareup.okhttp.OkHttpClient okHttpClient36 = new com.squareup.okhttp.OkHttpClient(okHttpClient35);
        com.squareup.okhttp.ConnectionPool connectionPool37 = okHttpClient35.connectionPool;
        com.squareup.okhttp.OkHttpClient okHttpClient38 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier39 = null;
        okHttpClient38.hostnameVerifier = hostnameVerifier39;
        java.net.ResponseCache responseCache41 = null;
        okHttpClient38.responseCache = responseCache41;
        javax.net.ssl.HostnameVerifier hostnameVerifier43 = okHttpClient38.hostnameVerifier;
        java.net.Proxy proxy44 = okHttpClient38.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool47 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient38.connectionPool = connectionPool47;
        com.squareup.okhttp.OkHttpClient okHttpClient49 = okHttpClient38.copyWithDefaults();
        java.util.List<java.lang.String> strList50 = okHttpClient38.getTransports();
        com.squareup.okhttp.OkHttpClient okHttpClient51 = okHttpClient38.copyWithDefaults();
        java.util.List<java.lang.String> strList52 = okHttpClient51.getTransports();
        okHttpClient35.transports = strList52;
        okHttpClient19.transports = strList52;
        okHttpClient4.transports = strList52;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache56 = okHttpClient4.okResponseCache();
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNotNull(okHttpClient8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(okHttpClient10);
        org.junit.Assert.assertNotNull(connectionPool11);
        org.junit.Assert.assertNull(connection13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNotNull(connectionPool25);
        org.junit.Assert.assertNotNull(connectionPool27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(connectionPool29);
        org.junit.Assert.assertNull(sSLSocketFactory30);
        org.junit.Assert.assertNull(cookieHandler31);
        org.junit.Assert.assertNull(okResponseCache33);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNull(connectionPool37);
        org.junit.Assert.assertNull(hostnameVerifier43);
        org.junit.Assert.assertNull(proxy44);
        org.junit.Assert.assertNotNull(okHttpClient49);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNotNull(okHttpClient51);
        org.junit.Assert.assertNotNull(strList52);
        org.junit.Assert.assertNull(okResponseCache56);
    }

    @Test
    public void test12473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12473");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.CookieHandler cookieHandler5 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = null;
        okHttpClient6.hostnameVerifier = hostnameVerifier7;
        java.net.ResponseCache responseCache9 = null;
        okHttpClient6.responseCache = responseCache9;
        java.util.List<java.lang.String> strList11 = okHttpClient6.transports;
        com.squareup.okhttp.ConnectionPool connectionPool12 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient6.connectionPool = connectionPool12;
        java.net.Proxy proxy14 = null;
        okHttpClient6.proxy = proxy14;
        java.util.Set<com.squareup.okhttp.Route> routeSet16 = okHttpClient6.failedRoutes;
        okHttpClient0.failedRoutes = routeSet16;
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient0.setHostnameVerifier(hostnameVerifier18);
        java.net.CookieHandler cookieHandler20 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient0.setFollowProtocolRedirects(true);
        java.net.ResponseCache responseCache23 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient22.setResponseCache(responseCache23);
        com.squareup.okhttp.OkHttpClient okHttpClient25 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier26 = null;
        okHttpClient25.hostnameVerifier = hostnameVerifier26;
        java.net.ProxySelector proxySelector28 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient25.setProxySelector(proxySelector28);
        java.net.ResponseCache responseCache30 = null;
        okHttpClient29.responseCache = responseCache30;
        javax.net.ssl.HostnameVerifier hostnameVerifier32 = okHttpClient29.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient29.setFollowProtocolRedirects(false);
        java.net.ProxySelector proxySelector35 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient34.setProxySelector(proxySelector35);
        okHttpClient36.followProtocolRedirects = true;
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient36.copyWithDefaults();
        java.util.List<java.lang.String> strList40 = okHttpClient39.getTransports();
        java.net.ResponseCache responseCache41 = null;
        okHttpClient39.responseCache = responseCache41;
        okHttpClient39.followProtocolRedirects = true;
        com.squareup.okhttp.OkHttpClient okHttpClient45 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier46 = null;
        okHttpClient45.hostnameVerifier = hostnameVerifier46;
        java.net.ResponseCache responseCache48 = null;
        okHttpClient45.responseCache = responseCache48;
        javax.net.ssl.HostnameVerifier hostnameVerifier50 = okHttpClient45.hostnameVerifier;
        java.net.Proxy proxy51 = okHttpClient45.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient52 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache53 = okHttpClient52.okResponseCache();
        java.net.ResponseCache responseCache54 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient55 = okHttpClient52.setResponseCache(responseCache54);
        java.lang.String[] strArray57 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList58 = new java.util.ArrayList<java.lang.String>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList58, strArray57);
        okHttpClient52.transports = strList58;
        okHttpClient45.transports = strList58;
        com.squareup.okhttp.OkHttpClient okHttpClient63 = okHttpClient45.setFollowProtocolRedirects(true);
        com.squareup.okhttp.OkHttpClient okHttpClient64 = new com.squareup.okhttp.OkHttpClient(okHttpClient63);
        java.net.CookieHandler cookieHandler65 = null;
        okHttpClient64.cookieHandler = cookieHandler65;
        java.net.ProxySelector proxySelector67 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient68 = okHttpClient64.setProxySelector(proxySelector67);
        com.squareup.okhttp.OkHttpClient okHttpClient69 = okHttpClient64.copyWithDefaults();
        java.net.CookieHandler cookieHandler70 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient71 = okHttpClient69.setCookieHandler(cookieHandler70);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory72 = okHttpClient69.sslSocketFactory;
        okHttpClient39.sslSocketFactory = sSLSocketFactory72;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory74 = okHttpClient39.sslSocketFactory;
        java.lang.String[] strArray75 = sSLSocketFactory74.getSupportedCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient76 = okHttpClient22.setSSLSocketFactory(sSLSocketFactory74);
        java.net.CookieHandler cookieHandler77 = null;
        okHttpClient22.cookieHandler = cookieHandler77;
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNotNull(routeSet16);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNull(cookieHandler20);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNotNull(okHttpClient29);
        org.junit.Assert.assertNull(hostnameVerifier32);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNotNull(okHttpClient39);
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertNull(hostnameVerifier50);
        org.junit.Assert.assertNull(proxy51);
        org.junit.Assert.assertNull(okResponseCache53);
        org.junit.Assert.assertNotNull(okHttpClient55);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(okHttpClient63);
        org.junit.Assert.assertNotNull(okHttpClient68);
        org.junit.Assert.assertNotNull(okHttpClient69);
        org.junit.Assert.assertNotNull(okHttpClient71);
        org.junit.Assert.assertNotNull(sSLSocketFactory72);
        org.junit.Assert.assertNotNull(sSLSocketFactory74);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(okHttpClient76);
    }

    @Test
    public void test12474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12474");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = null;
        okHttpClient0.authenticator = okAuthenticator3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient0.responseCache = responseCache6;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier9 = null;
        okHttpClient8.hostnameVerifier = hostnameVerifier9;
        java.net.ResponseCache responseCache11 = null;
        okHttpClient8.responseCache = responseCache11;
        javax.net.ssl.HostnameVerifier hostnameVerifier13 = okHttpClient8.hostnameVerifier;
        java.net.Proxy proxy14 = okHttpClient8.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool17 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient8.connectionPool = connectionPool17;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient8.copyWithDefaults();
        java.net.Proxy proxy20 = okHttpClient19.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier21 = okHttpClient19.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient0.setHostnameVerifier(hostnameVerifier21);
        java.net.CookieHandler cookieHandler23 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient22.setCookieHandler(cookieHandler23);
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient22.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient26 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache27 = okHttpClient26.okResponseCache();
        java.net.ResponseCache responseCache28 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient26.setResponseCache(responseCache28);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory30 = okHttpClient26.sslSocketFactory;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory31 = okHttpClient26.sslSocketFactory;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory32 = okHttpClient26.sslSocketFactory;
        com.squareup.okhttp.OkHttpClient okHttpClient33 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier34 = null;
        okHttpClient33.hostnameVerifier = hostnameVerifier34;
        java.net.ResponseCache responseCache36 = null;
        okHttpClient33.responseCache = responseCache36;
        java.util.List<java.lang.String> strList38 = okHttpClient33.transports;
        com.squareup.okhttp.ConnectionPool connectionPool39 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient33.connectionPool = connectionPool39;
        java.net.Proxy proxy41 = null;
        okHttpClient33.proxy = proxy41;
        boolean boolean43 = okHttpClient33.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient44 = new com.squareup.okhttp.OkHttpClient(okHttpClient33);
        java.net.ProxySelector proxySelector45 = okHttpClient44.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier46 = okHttpClient44.hostnameVerifier;
        java.net.Proxy proxy47 = java.net.Proxy.NO_PROXY;
        boolean boolean49 = proxy47.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type50 = proxy47.type();
        java.net.Proxy.Type type51 = proxy47.type();
        okHttpClient44.proxy = proxy47;
        com.squareup.okhttp.OkHttpClient okHttpClient53 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier54 = null;
        okHttpClient53.hostnameVerifier = hostnameVerifier54;
        java.net.ResponseCache responseCache56 = null;
        okHttpClient53.responseCache = responseCache56;
        java.util.List<java.lang.String> strList58 = okHttpClient53.transports;
        com.squareup.okhttp.ConnectionPool connectionPool59 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient53.connectionPool = connectionPool59;
        com.squareup.okhttp.OkHttpClient okHttpClient61 = okHttpClient53.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient62 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier63 = null;
        okHttpClient62.hostnameVerifier = hostnameVerifier63;
        java.net.ResponseCache responseCache65 = null;
        okHttpClient62.responseCache = responseCache65;
        java.util.List<java.lang.String> strList67 = okHttpClient62.transports;
        com.squareup.okhttp.ConnectionPool connectionPool68 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient62.connectionPool = connectionPool68;
        com.squareup.okhttp.OkHttpClient okHttpClient70 = okHttpClient62.copyWithDefaults();
        java.net.ProxySelector proxySelector71 = okHttpClient70.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory72 = okHttpClient70.getSslSocketFactory();
        okHttpClient53.sslSocketFactory = sSLSocketFactory72;
        okHttpClient44.sslSocketFactory = sSLSocketFactory72;
        com.squareup.okhttp.OkHttpClient okHttpClient75 = okHttpClient26.setSSLSocketFactory(sSLSocketFactory72);
        com.squareup.okhttp.OkHttpClient okHttpClient76 = okHttpClient25.setSSLSocketFactory(sSLSocketFactory72);
        java.util.List<java.lang.String> strList77 = okHttpClient25.transports;
        java.net.ProxySelector proxySelector78 = null;
        okHttpClient25.proxySelector = proxySelector78;
        java.net.ProxySelector proxySelector80 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient81 = okHttpClient25.setProxySelector(proxySelector80);
        com.squareup.okhttp.OkHttpClient okHttpClient82 = new com.squareup.okhttp.OkHttpClient(okHttpClient25);
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNull(hostnameVerifier13);
        org.junit.Assert.assertNull(proxy14);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNull(proxy20);
        org.junit.Assert.assertNotNull(hostnameVerifier21);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNotNull(okHttpClient25);
        org.junit.Assert.assertNull(okResponseCache27);
        org.junit.Assert.assertNotNull(okHttpClient29);
        org.junit.Assert.assertNull(sSLSocketFactory30);
        org.junit.Assert.assertNull(sSLSocketFactory31);
        org.junit.Assert.assertNull(sSLSocketFactory32);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNotNull(connectionPool39);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(proxySelector45);
        org.junit.Assert.assertNull(hostnameVerifier46);
        org.junit.Assert.assertNotNull(proxy47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + type50 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type50.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertTrue("'" + type51 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type51.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNotNull(connectionPool59);
        org.junit.Assert.assertNotNull(okHttpClient61);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNotNull(connectionPool68);
        org.junit.Assert.assertNotNull(okHttpClient70);
// flaky:         org.junit.Assert.assertNull(proxySelector71);
        org.junit.Assert.assertNotNull(sSLSocketFactory72);
        org.junit.Assert.assertNotNull(okHttpClient75);
        org.junit.Assert.assertNotNull(okHttpClient76);
        org.junit.Assert.assertNotNull(strList77);
        org.junit.Assert.assertNotNull(okHttpClient81);
    }

    @Test
    public void test12475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12475");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.OkAuthenticator okAuthenticator12 = okHttpClient11.getAuthenticator();
        java.net.ProxySelector proxySelector13 = okHttpClient11.getProxySelector();
        java.net.ResponseCache responseCache14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient11.setResponseCache(responseCache14);
        java.net.CookieHandler cookieHandler16 = null;
        okHttpClient15.cookieHandler = cookieHandler16;
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = okHttpClient15.getHostnameVerifier();
        java.net.ResponseCache responseCache19 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient15.setResponseCache(responseCache19);
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache21 = okHttpClient20.okResponseCache();
        com.squareup.okhttp.ConnectionPool connectionPool22 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient20.setConnectionPool(connectionPool22);
        java.net.Proxy proxy24 = okHttpClient23.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient25 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier26 = null;
        okHttpClient25.hostnameVerifier = hostnameVerifier26;
        java.net.ResponseCache responseCache28 = null;
        okHttpClient25.responseCache = responseCache28;
        java.util.List<java.lang.String> strList30 = okHttpClient25.transports;
        com.squareup.okhttp.ConnectionPool connectionPool31 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient25.connectionPool = connectionPool31;
        java.net.Proxy proxy33 = null;
        okHttpClient25.proxy = proxy33;
        boolean boolean35 = okHttpClient25.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient36 = new com.squareup.okhttp.OkHttpClient(okHttpClient25);
        java.net.ProxySelector proxySelector37 = okHttpClient36.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier38 = okHttpClient36.hostnameVerifier;
        javax.net.ssl.HostnameVerifier hostnameVerifier39 = okHttpClient36.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient40 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool41 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient40.connectionPool = connectionPool41;
        com.squareup.okhttp.OkAuthenticator okAuthenticator43 = null;
        okHttpClient40.authenticator = okAuthenticator43;
        java.net.CookieHandler cookieHandler45 = null;
        okHttpClient40.cookieHandler = cookieHandler45;
        java.net.Proxy proxy47 = java.net.Proxy.NO_PROXY;
        boolean boolean49 = proxy47.equals((java.lang.Object) 1L);
        com.squareup.okhttp.OkHttpClient okHttpClient50 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache51 = okHttpClient50.okResponseCache();
        java.net.ResponseCache responseCache52 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient53 = okHttpClient50.setResponseCache(responseCache52);
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList56 = new java.util.ArrayList<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        okHttpClient50.transports = strList56;
        boolean boolean59 = proxy47.equals((java.lang.Object) strList56);
        com.squareup.okhttp.OkHttpClient okHttpClient60 = okHttpClient40.setProxy(proxy47);
        com.squareup.okhttp.OkHttpClient okHttpClient61 = okHttpClient36.setProxy(proxy47);
        java.net.SocketAddress socketAddress62 = proxy47.address();
        com.squareup.okhttp.OkHttpClient okHttpClient63 = okHttpClient23.setProxy(proxy47);
        com.squareup.okhttp.OkAuthenticator okAuthenticator64 = okHttpClient23.authenticator;
        boolean boolean65 = okHttpClient23.followProtocolRedirects;
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(okAuthenticator12);
        org.junit.Assert.assertNull(proxySelector13);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNull(hostnameVerifier18);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNull(okResponseCache21);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertNull(proxy24);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNotNull(connectionPool31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(proxySelector37);
        org.junit.Assert.assertNull(hostnameVerifier38);
        org.junit.Assert.assertNull(hostnameVerifier39);
        org.junit.Assert.assertNotNull(connectionPool41);
        org.junit.Assert.assertNotNull(proxy47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(okResponseCache51);
        org.junit.Assert.assertNotNull(okHttpClient53);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(okHttpClient60);
        org.junit.Assert.assertNotNull(okHttpClient61);
        org.junit.Assert.assertNull(socketAddress62);
        org.junit.Assert.assertNotNull(okHttpClient63);
        org.junit.Assert.assertNull(okAuthenticator64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
    }

    @Test
    public void test12476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12476");
        com.squareup.okhttp.ConnectionPool connectionPool2 = new com.squareup.okhttp.ConnectionPool((int) '4', (long) 1);
        com.squareup.okhttp.Address address3 = null;
        com.squareup.okhttp.Connection connection4 = connectionPool2.get(address3);
        connectionPool2.evictAll();
        com.squareup.okhttp.Address address6 = null;
        com.squareup.okhttp.Connection connection7 = connectionPool2.get(address6);
        int int8 = connectionPool2.getSpdyConnectionCount();
        int int9 = connectionPool2.getSpdyConnectionCount();
        org.junit.Assert.assertNull(connection4);
        org.junit.Assert.assertNull(connection7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test12477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12477");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        boolean boolean3 = okHttpClient0.getFollowProtocolRedirects();
        java.net.ProxySelector proxySelector4 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = okHttpClient0.setProxySelector(proxySelector4);
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache6 = okHttpClient5.okResponseCache();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(okHttpClient5);
        org.junit.Assert.assertNull(okResponseCache6);
    }

    @Test
    public void test12478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12478");
        java.net.Proxy proxy0 = java.net.Proxy.NO_PROXY;
        boolean boolean2 = proxy0.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type3 = proxy0.type();
        java.net.SocketAddress socketAddress4 = proxy0.address();
        com.squareup.okhttp.OkHttpClient okHttpClient5 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier6 = null;
        okHttpClient5.hostnameVerifier = hostnameVerifier6;
        java.net.ResponseCache responseCache8 = null;
        okHttpClient5.responseCache = responseCache8;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache10 = okHttpClient5.okResponseCache();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory11 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient5.setSSLSocketFactory(sSLSocketFactory11);
        boolean boolean13 = proxy0.equals((java.lang.Object) okHttpClient5);
        com.squareup.okhttp.OkHttpClient okHttpClient14 = new com.squareup.okhttp.OkHttpClient(okHttpClient5);
        java.net.Proxy proxy15 = okHttpClient5.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient16 = new com.squareup.okhttp.OkHttpClient(okHttpClient5);
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient16.setFollowProtocolRedirects(true);
        java.net.CookieHandler cookieHandler19 = okHttpClient18.getCookieHandler();
        org.junit.Assert.assertNotNull(proxy0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + type3 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type3.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress4);
        org.junit.Assert.assertNull(okResponseCache10);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(proxy15);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNull(cookieHandler19);
    }

    @Test
    public void test12479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12479");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.Proxy proxy8 = null;
        okHttpClient0.proxy = proxy8;
        java.net.Proxy proxy10 = okHttpClient0.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = null;
        okHttpClient11.hostnameVerifier = hostnameVerifier12;
        java.net.ResponseCache responseCache14 = null;
        okHttpClient11.responseCache = responseCache14;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory16 = null;
        okHttpClient11.sslSocketFactory = sSLSocketFactory16;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier19 = null;
        okHttpClient18.hostnameVerifier = hostnameVerifier19;
        java.net.ResponseCache responseCache21 = null;
        okHttpClient18.responseCache = responseCache21;
        javax.net.ssl.HostnameVerifier hostnameVerifier23 = okHttpClient18.hostnameVerifier;
        java.net.Proxy proxy24 = okHttpClient18.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool27 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient18.connectionPool = connectionPool27;
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient18.copyWithDefaults();
        java.net.ResponseCache responseCache30 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient29.setResponseCache(responseCache30);
        com.squareup.okhttp.ConnectionPool connectionPool32 = okHttpClient29.connectionPool;
        okHttpClient11.connectionPool = connectionPool32;
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient0.setConnectionPool(connectionPool32);
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient34.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient36 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier37 = null;
        okHttpClient36.hostnameVerifier = hostnameVerifier37;
        java.net.ResponseCache responseCache39 = null;
        okHttpClient36.responseCache = responseCache39;
        java.util.List<java.lang.String> strList41 = okHttpClient36.transports;
        com.squareup.okhttp.ConnectionPool connectionPool42 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient36.connectionPool = connectionPool42;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory44 = okHttpClient36.getSslSocketFactory();
        java.net.CookieHandler cookieHandler45 = okHttpClient36.cookieHandler;
        com.squareup.okhttp.ConnectionPool connectionPool48 = new com.squareup.okhttp.ConnectionPool(10, 1L);
        com.squareup.okhttp.OkHttpClient okHttpClient49 = okHttpClient36.setConnectionPool(connectionPool48);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory50 = okHttpClient36.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient51 = okHttpClient36.copyWithDefaults();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory52 = okHttpClient51.getSslSocketFactory();
        java.net.CookieHandler cookieHandler53 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient54 = okHttpClient51.setCookieHandler(cookieHandler53);
        com.squareup.okhttp.ConnectionPool connectionPool57 = new com.squareup.okhttp.ConnectionPool((int) (short) -1, (long) (short) -1);
        com.squareup.okhttp.OkHttpClient okHttpClient58 = okHttpClient54.setConnectionPool(connectionPool57);
        java.util.List<java.lang.String> strList59 = okHttpClient54.getTransports();
        // The following exception was thrown during execution in test generation
        try {
            com.squareup.okhttp.OkHttpClient okHttpClient60 = okHttpClient35.setTransports(strList59);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: transports doesn't contain http/1.1: [hi!]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNull(proxy10);
        org.junit.Assert.assertNull(hostnameVerifier23);
        org.junit.Assert.assertNull(proxy24);
        org.junit.Assert.assertNotNull(okHttpClient29);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNotNull(connectionPool32);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(connectionPool42);
        org.junit.Assert.assertNull(sSLSocketFactory44);
        org.junit.Assert.assertNull(cookieHandler45);
        org.junit.Assert.assertNotNull(okHttpClient49);
        org.junit.Assert.assertNull(sSLSocketFactory50);
        org.junit.Assert.assertNotNull(okHttpClient51);
        org.junit.Assert.assertNotNull(sSLSocketFactory52);
        org.junit.Assert.assertNotNull(okHttpClient54);
        org.junit.Assert.assertNotNull(okHttpClient58);
        org.junit.Assert.assertNotNull(strList59);
    }

    @Test
    public void test12480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12480");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        boolean boolean3 = okHttpClient0.getFollowProtocolRedirects();
        java.net.Proxy proxy4 = okHttpClient0.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient5.connectionPool = connectionPool6;
        com.squareup.okhttp.OkHttpClient okHttpClient8 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier9 = null;
        okHttpClient8.hostnameVerifier = hostnameVerifier9;
        java.net.ResponseCache responseCache11 = null;
        okHttpClient8.responseCache = responseCache11;
        java.util.List<java.lang.String> strList13 = okHttpClient8.transports;
        com.squareup.okhttp.ConnectionPool connectionPool14 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient8.connectionPool = connectionPool14;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient5.setConnectionPool(connectionPool14);
        java.net.ResponseCache responseCache17 = okHttpClient5.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory18 = okHttpClient5.sslSocketFactory;
        java.net.ResponseCache responseCache19 = okHttpClient5.getResponseCache();
        com.squareup.okhttp.ConnectionPool connectionPool20 = okHttpClient5.connectionPool;
        java.net.ResponseCache responseCache21 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient5.setResponseCache(responseCache21);
        com.squareup.okhttp.OkHttpClient okHttpClient23 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier24 = null;
        okHttpClient23.hostnameVerifier = hostnameVerifier24;
        java.net.ProxySelector proxySelector26 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient23.setProxySelector(proxySelector26);
        java.net.CookieHandler cookieHandler28 = okHttpClient23.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient29 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = null;
        okHttpClient29.hostnameVerifier = hostnameVerifier30;
        java.net.ResponseCache responseCache32 = null;
        okHttpClient29.responseCache = responseCache32;
        java.util.List<java.lang.String> strList34 = okHttpClient29.transports;
        com.squareup.okhttp.ConnectionPool connectionPool35 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient29.connectionPool = connectionPool35;
        java.net.Proxy proxy37 = null;
        okHttpClient29.proxy = proxy37;
        java.util.Set<com.squareup.okhttp.Route> routeSet39 = okHttpClient29.failedRoutes;
        okHttpClient23.failedRoutes = routeSet39;
        javax.net.ssl.HostnameVerifier hostnameVerifier41 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient23.setHostnameVerifier(hostnameVerifier41);
        java.net.ProxySelector proxySelector43 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient44 = okHttpClient42.setProxySelector(proxySelector43);
        com.squareup.okhttp.OkHttpClient okHttpClient46 = okHttpClient42.setFollowProtocolRedirects(true);
        com.squareup.okhttp.OkHttpClient okHttpClient47 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool48 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient47.connectionPool = connectionPool48;
        com.squareup.okhttp.OkHttpClient okHttpClient50 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier51 = null;
        okHttpClient50.hostnameVerifier = hostnameVerifier51;
        java.net.ResponseCache responseCache53 = null;
        okHttpClient50.responseCache = responseCache53;
        java.util.List<java.lang.String> strList55 = okHttpClient50.transports;
        com.squareup.okhttp.ConnectionPool connectionPool56 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient50.connectionPool = connectionPool56;
        com.squareup.okhttp.OkHttpClient okHttpClient58 = okHttpClient47.setConnectionPool(connectionPool56);
        java.net.Proxy proxy59 = okHttpClient58.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient60 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool61 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient60.connectionPool = connectionPool61;
        int int63 = connectionPool61.getSpdyConnectionCount();
        okHttpClient58.connectionPool = connectionPool61;
        com.squareup.okhttp.OkHttpClient okHttpClient65 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier66 = null;
        okHttpClient65.hostnameVerifier = hostnameVerifier66;
        java.net.ResponseCache responseCache68 = null;
        okHttpClient65.responseCache = responseCache68;
        javax.net.ssl.HostnameVerifier hostnameVerifier70 = okHttpClient65.hostnameVerifier;
        java.net.Proxy proxy71 = okHttpClient65.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool74 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient65.connectionPool = connectionPool74;
        com.squareup.okhttp.OkHttpClient okHttpClient76 = okHttpClient65.copyWithDefaults();
        java.net.ResponseCache responseCache77 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient78 = okHttpClient76.setResponseCache(responseCache77);
        com.squareup.okhttp.OkAuthenticator okAuthenticator79 = okHttpClient76.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient80 = okHttpClient58.setAuthenticator(okAuthenticator79);
        com.squareup.okhttp.OkHttpClient okHttpClient81 = okHttpClient42.setAuthenticator(okAuthenticator79);
        okHttpClient22.authenticator = okAuthenticator79;
        com.squareup.okhttp.OkHttpClient okHttpClient83 = okHttpClient0.setAuthenticator(okAuthenticator79);
        com.squareup.okhttp.ConnectionPool connectionPool86 = new com.squareup.okhttp.ConnectionPool((-1), (long) (short) -1);
        okHttpClient0.connectionPool = connectionPool86;
        java.net.ResponseCache responseCache88 = null;
        okHttpClient0.responseCache = responseCache88;
        java.net.Proxy proxy90 = okHttpClient0.getProxy();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(proxy4);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNotNull(connectionPool14);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNull(responseCache17);
        org.junit.Assert.assertNull(sSLSocketFactory18);
        org.junit.Assert.assertNull(responseCache19);
        org.junit.Assert.assertNotNull(connectionPool20);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNull(cookieHandler28);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(connectionPool35);
        org.junit.Assert.assertNotNull(routeSet39);
        org.junit.Assert.assertNotNull(okHttpClient42);
        org.junit.Assert.assertNotNull(okHttpClient44);
        org.junit.Assert.assertNotNull(okHttpClient46);
        org.junit.Assert.assertNotNull(connectionPool48);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertNotNull(connectionPool56);
        org.junit.Assert.assertNotNull(okHttpClient58);
        org.junit.Assert.assertNull(proxy59);
        org.junit.Assert.assertNotNull(connectionPool61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNull(hostnameVerifier70);
        org.junit.Assert.assertNull(proxy71);
        org.junit.Assert.assertNotNull(okHttpClient76);
        org.junit.Assert.assertNotNull(okHttpClient78);
        org.junit.Assert.assertNotNull(okAuthenticator79);
        org.junit.Assert.assertNotNull(okHttpClient80);
        org.junit.Assert.assertNotNull(okHttpClient81);
        org.junit.Assert.assertNotNull(okHttpClient83);
        org.junit.Assert.assertNull(proxy90);
    }

    @Test
    public void test12481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12481");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ProxySelector proxySelector3 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient4 = okHttpClient0.setProxySelector(proxySelector3);
        java.net.CookieHandler cookieHandler5 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient6 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier7 = null;
        okHttpClient6.hostnameVerifier = hostnameVerifier7;
        java.net.ResponseCache responseCache9 = null;
        okHttpClient6.responseCache = responseCache9;
        java.util.List<java.lang.String> strList11 = okHttpClient6.transports;
        com.squareup.okhttp.ConnectionPool connectionPool12 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient6.connectionPool = connectionPool12;
        java.net.Proxy proxy14 = null;
        okHttpClient6.proxy = proxy14;
        java.util.Set<com.squareup.okhttp.Route> routeSet16 = okHttpClient6.failedRoutes;
        okHttpClient0.failedRoutes = routeSet16;
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient0.setHostnameVerifier(hostnameVerifier18);
        java.net.ResponseCache responseCache20 = okHttpClient0.responseCache;
        com.squareup.okhttp.OkAuthenticator okAuthenticator21 = okHttpClient0.authenticator;
        java.net.ProxySelector proxySelector22 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient23 = okHttpClient0.setProxySelector(proxySelector22);
        java.net.Proxy proxy24 = okHttpClient0.proxy;
        org.junit.Assert.assertNotNull(okHttpClient4);
        org.junit.Assert.assertNull(cookieHandler5);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNotNull(routeSet16);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNull(responseCache20);
        org.junit.Assert.assertNull(okAuthenticator21);
        org.junit.Assert.assertNotNull(okHttpClient23);
        org.junit.Assert.assertNull(proxy24);
    }

    @Test
    public void test12482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12482");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkAuthenticator okAuthenticator3 = okHttpClient0.authenticator;
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = okHttpClient0.hostnameVerifier;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(okAuthenticator3);
        org.junit.Assert.assertNull(hostnameVerifier4);
        org.junit.Assert.assertNull(hostnameVerifier5);
    }

    @Test
    public void test12483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12483");
        com.squareup.okhttp.ConnectionPool connectionPool2 = new com.squareup.okhttp.ConnectionPool(0, (long) (byte) 100);
        com.squareup.okhttp.Connection connection3 = null;
        // The following exception was thrown during execution in test generation
        try {
            connectionPool2.recycle(connection3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test12484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12484");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient0.connectionPool = connectionPool9;
        java.util.List<java.lang.String> strList11 = okHttpClient0.getTransports();
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient0.setHostnameVerifier(hostnameVerifier12);
        com.squareup.okhttp.ConnectionPool connectionPool14 = okHttpClient13.connectionPool;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory15 = okHttpClient13.sslSocketFactory;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache16 = okHttpClient13.okResponseCache();
        java.net.Proxy proxy17 = okHttpClient13.proxy;
        java.net.ResponseCache responseCache18 = null;
        okHttpClient13.responseCache = responseCache18;
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNotNull(connectionPool14);
        org.junit.Assert.assertNull(sSLSocketFactory15);
        org.junit.Assert.assertNull(okResponseCache16);
        org.junit.Assert.assertNull(proxy17);
    }

    @Test
    public void test12485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12485");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        java.net.ProxySelector proxySelector12 = null;
        okHttpClient0.proxySelector = proxySelector12;
        com.squareup.okhttp.OkHttpClient okHttpClient14 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool15 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient14.connectionPool = connectionPool15;
        com.squareup.okhttp.OkAuthenticator okAuthenticator17 = null;
        okHttpClient14.authenticator = okAuthenticator17;
        java.net.CookieHandler cookieHandler19 = null;
        okHttpClient14.cookieHandler = cookieHandler19;
        java.net.Proxy proxy21 = java.net.Proxy.NO_PROXY;
        boolean boolean23 = proxy21.equals((java.lang.Object) 1L);
        com.squareup.okhttp.OkHttpClient okHttpClient24 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache25 = okHttpClient24.okResponseCache();
        java.net.ResponseCache responseCache26 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient24.setResponseCache(responseCache26);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        okHttpClient24.transports = strList30;
        boolean boolean33 = proxy21.equals((java.lang.Object) strList30);
        com.squareup.okhttp.OkHttpClient okHttpClient34 = okHttpClient14.setProxy(proxy21);
        com.squareup.okhttp.OkHttpClient okHttpClient35 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier36 = null;
        okHttpClient35.hostnameVerifier = hostnameVerifier36;
        java.net.ProxySelector proxySelector38 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient35.setProxySelector(proxySelector38);
        java.net.CookieHandler cookieHandler40 = okHttpClient35.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient41 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier42 = null;
        okHttpClient41.hostnameVerifier = hostnameVerifier42;
        java.net.ResponseCache responseCache44 = null;
        okHttpClient41.responseCache = responseCache44;
        java.util.List<java.lang.String> strList46 = okHttpClient41.transports;
        com.squareup.okhttp.ConnectionPool connectionPool47 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient41.connectionPool = connectionPool47;
        java.net.Proxy proxy49 = null;
        okHttpClient41.proxy = proxy49;
        java.util.Set<com.squareup.okhttp.Route> routeSet51 = okHttpClient41.failedRoutes;
        okHttpClient35.failedRoutes = routeSet51;
        javax.net.ssl.HostnameVerifier hostnameVerifier53 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient54 = okHttpClient35.setHostnameVerifier(hostnameVerifier53);
        boolean boolean55 = proxy21.equals((java.lang.Object) okHttpClient54);
        okHttpClient0.proxy = proxy21;
        com.squareup.okhttp.OkHttpClient okHttpClient57 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool58 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient57.connectionPool = connectionPool58;
        com.squareup.okhttp.OkHttpClient okHttpClient60 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier61 = null;
        okHttpClient60.hostnameVerifier = hostnameVerifier61;
        java.net.ResponseCache responseCache63 = null;
        okHttpClient60.responseCache = responseCache63;
        java.util.List<java.lang.String> strList65 = okHttpClient60.transports;
        com.squareup.okhttp.ConnectionPool connectionPool66 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient60.connectionPool = connectionPool66;
        com.squareup.okhttp.OkHttpClient okHttpClient68 = okHttpClient57.setConnectionPool(connectionPool66);
        java.net.Proxy proxy69 = okHttpClient68.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient70 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool71 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient70.connectionPool = connectionPool71;
        int int73 = connectionPool71.getSpdyConnectionCount();
        okHttpClient68.connectionPool = connectionPool71;
        com.squareup.okhttp.OkHttpClient okHttpClient75 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier76 = null;
        okHttpClient75.hostnameVerifier = hostnameVerifier76;
        java.net.ResponseCache responseCache78 = null;
        okHttpClient75.responseCache = responseCache78;
        javax.net.ssl.HostnameVerifier hostnameVerifier80 = okHttpClient75.hostnameVerifier;
        java.net.Proxy proxy81 = okHttpClient75.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool84 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient75.connectionPool = connectionPool84;
        com.squareup.okhttp.OkHttpClient okHttpClient86 = okHttpClient75.copyWithDefaults();
        java.net.ResponseCache responseCache87 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient88 = okHttpClient86.setResponseCache(responseCache87);
        com.squareup.okhttp.OkAuthenticator okAuthenticator89 = okHttpClient86.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient90 = okHttpClient68.setAuthenticator(okAuthenticator89);
        java.net.CookieHandler cookieHandler91 = null;
        okHttpClient90.cookieHandler = cookieHandler91;
        boolean boolean93 = proxy21.equals((java.lang.Object) cookieHandler91);
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(connectionPool15);
        org.junit.Assert.assertNotNull(proxy21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(okResponseCache25);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(okHttpClient34);
        org.junit.Assert.assertNotNull(okHttpClient39);
        org.junit.Assert.assertNull(cookieHandler40);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNotNull(connectionPool47);
        org.junit.Assert.assertNotNull(routeSet51);
        org.junit.Assert.assertNotNull(okHttpClient54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(connectionPool58);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNotNull(connectionPool66);
        org.junit.Assert.assertNotNull(okHttpClient68);
        org.junit.Assert.assertNull(proxy69);
        org.junit.Assert.assertNotNull(connectionPool71);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertNull(hostnameVerifier80);
        org.junit.Assert.assertNull(proxy81);
        org.junit.Assert.assertNotNull(okHttpClient86);
        org.junit.Assert.assertNotNull(okHttpClient88);
        org.junit.Assert.assertNotNull(okAuthenticator89);
        org.junit.Assert.assertNotNull(okHttpClient90);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test12486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12486");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.Proxy proxy8 = null;
        okHttpClient0.proxy = proxy8;
        boolean boolean10 = okHttpClient0.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.copyWithDefaults();
        java.net.Proxy proxy12 = java.net.Proxy.NO_PROXY;
        boolean boolean14 = proxy12.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type15 = proxy12.type();
        java.lang.String str16 = proxy12.toString();
        java.net.Proxy.Type type17 = proxy12.type();
        okHttpClient0.proxy = proxy12;
        com.squareup.okhttp.OkAuthenticator okAuthenticator19 = okHttpClient0.getAuthenticator();
        com.squareup.okhttp.OkAuthenticator okAuthenticator20 = okHttpClient0.getAuthenticator();
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.OkAuthenticator okAuthenticator22 = okHttpClient0.getAuthenticator();
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(proxy12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + type15 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type15.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "DIRECT" + "'", str16, "DIRECT");
        org.junit.Assert.assertTrue("'" + type17 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type17.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(okAuthenticator19);
        org.junit.Assert.assertNull(okAuthenticator20);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNull(okAuthenticator22);
    }

    @Test
    public void test12487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12487");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.Proxy proxy8 = null;
        okHttpClient0.proxy = proxy8;
        boolean boolean10 = okHttpClient0.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient12 = okHttpClient0.setFollowProtocolRedirects(true);
        javax.net.ssl.HostnameVerifier hostnameVerifier13 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier13;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier16 = null;
        okHttpClient15.hostnameVerifier = hostnameVerifier16;
        java.net.ResponseCache responseCache18 = null;
        okHttpClient15.responseCache = responseCache18;
        javax.net.ssl.HostnameVerifier hostnameVerifier20 = okHttpClient15.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient15.setFollowProtocolRedirects(false);
        java.net.Proxy proxy23 = okHttpClient15.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier24 = okHttpClient15.getHostnameVerifier();
        java.util.Set<com.squareup.okhttp.Route> routeSet25 = okHttpClient15.failedRoutes;
        okHttpClient15.followProtocolRedirects = true;
        com.squareup.okhttp.OkHttpClient okHttpClient28 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier29 = null;
        okHttpClient28.hostnameVerifier = hostnameVerifier29;
        java.net.ResponseCache responseCache31 = null;
        okHttpClient28.responseCache = responseCache31;
        java.util.List<java.lang.String> strList33 = okHttpClient28.transports;
        com.squareup.okhttp.ConnectionPool connectionPool34 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient28.connectionPool = connectionPool34;
        java.net.Proxy proxy36 = null;
        okHttpClient28.proxy = proxy36;
        boolean boolean38 = okHttpClient28.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient28.copyWithDefaults();
        java.net.Proxy proxy40 = java.net.Proxy.NO_PROXY;
        boolean boolean42 = proxy40.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type43 = proxy40.type();
        java.lang.String str44 = proxy40.toString();
        java.net.Proxy.Type type45 = proxy40.type();
        okHttpClient28.proxy = proxy40;
        com.squareup.okhttp.OkHttpClient okHttpClient47 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache48 = okHttpClient47.okResponseCache();
        java.net.ResponseCache responseCache49 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient47.setResponseCache(responseCache49);
        java.net.ProxySelector proxySelector51 = okHttpClient47.getProxySelector();
        com.squareup.okhttp.OkAuthenticator okAuthenticator52 = okHttpClient47.getAuthenticator();
        boolean boolean53 = proxy40.equals((java.lang.Object) okHttpClient47);
        com.squareup.okhttp.OkHttpClient okHttpClient54 = okHttpClient15.setProxy(proxy40);
        java.net.Proxy proxy55 = okHttpClient54.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient56 = okHttpClient0.setProxy(proxy55);
        java.util.Set<com.squareup.okhttp.Route> routeSet57 = okHttpClient0.failedRoutes;
        java.net.ResponseCache responseCache58 = okHttpClient0.getResponseCache();
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(okHttpClient12);
        org.junit.Assert.assertNull(hostnameVerifier20);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNull(proxy23);
        org.junit.Assert.assertNull(hostnameVerifier24);
        org.junit.Assert.assertNotNull(routeSet25);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNotNull(connectionPool34);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(okHttpClient39);
        org.junit.Assert.assertNotNull(proxy40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + type43 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type43.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "DIRECT" + "'", str44, "DIRECT");
        org.junit.Assert.assertTrue("'" + type45 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type45.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(okResponseCache48);
        org.junit.Assert.assertNotNull(okHttpClient50);
        org.junit.Assert.assertNull(proxySelector51);
        org.junit.Assert.assertNull(okAuthenticator52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(okHttpClient54);
        org.junit.Assert.assertNotNull(proxy55);
        org.junit.Assert.assertNotNull(okHttpClient56);
        org.junit.Assert.assertNotNull(routeSet57);
        org.junit.Assert.assertNull(responseCache58);
    }

    @Test
    public void test12488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12488");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory8 = okHttpClient0.getSslSocketFactory();
        java.net.CookieHandler cookieHandler9 = okHttpClient0.cookieHandler;
        java.net.ResponseCache responseCache10 = okHttpClient0.responseCache;
        com.squareup.okhttp.ConnectionPool connectionPool13 = new com.squareup.okhttp.ConnectionPool((-1), (long) '#');
        com.squareup.okhttp.Address address14 = null;
        com.squareup.okhttp.Connection connection15 = connectionPool13.get(address14);
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient0.setConnectionPool(connectionPool13);
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = null;
        okHttpClient17.hostnameVerifier = hostnameVerifier18;
        java.net.ResponseCache responseCache20 = null;
        okHttpClient17.responseCache = responseCache20;
        java.util.List<java.lang.String> strList22 = okHttpClient17.transports;
        com.squareup.okhttp.ConnectionPool connectionPool23 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient17.connectionPool = connectionPool23;
        java.net.Proxy proxy25 = null;
        okHttpClient17.proxy = proxy25;
        java.net.Proxy proxy27 = okHttpClient17.getProxy();
        java.net.ProxySelector proxySelector28 = null;
        okHttpClient17.proxySelector = proxySelector28;
        java.net.Proxy proxy30 = okHttpClient17.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient17.copyWithDefaults();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory32 = okHttpClient31.sslSocketFactory;
        java.util.List<java.lang.String> strList33 = okHttpClient31.transports;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory34 = okHttpClient31.sslSocketFactory;
        java.net.Socket socket35 = sSLSocketFactory34.createSocket();
        okHttpClient16.sslSocketFactory = sSLSocketFactory34;
        java.net.InetAddress inetAddress37 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.Socket socket39 = sSLSocketFactory34.createSocket(inetAddress37, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.net.ConnectException; message: Connection refused (Connection refused)");
        } catch (java.net.ConnectException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNull(sSLSocketFactory8);
        org.junit.Assert.assertNull(cookieHandler9);
        org.junit.Assert.assertNull(responseCache10);
        org.junit.Assert.assertNull(connection15);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNotNull(connectionPool23);
        org.junit.Assert.assertNull(proxy27);
        org.junit.Assert.assertNull(proxy30);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNotNull(sSLSocketFactory32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNotNull(sSLSocketFactory34);
        org.junit.Assert.assertNotNull(socket35);
        org.junit.Assert.assertEquals(socket35.toString(), "Socket[unconnected]");
    }

    @Test
    public void test12489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12489");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient0.connectionPool = connectionPool9;
        java.util.List<java.lang.String> strList11 = okHttpClient0.getTransports();
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient0.setHostnameVerifier(hostnameVerifier12);
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient13.copyWithDefaults();
        java.net.ResponseCache responseCache15 = okHttpClient13.responseCache;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier17 = null;
        okHttpClient16.hostnameVerifier = hostnameVerifier17;
        java.net.ProxySelector proxySelector19 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient16.setProxySelector(proxySelector19);
        java.net.ResponseCache responseCache21 = null;
        okHttpClient20.responseCache = responseCache21;
        javax.net.ssl.HostnameVerifier hostnameVerifier23 = okHttpClient20.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient25 = okHttpClient20.setFollowProtocolRedirects(false);
        java.net.ProxySelector proxySelector26 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient27 = okHttpClient25.setProxySelector(proxySelector26);
        java.net.ProxySelector proxySelector28 = okHttpClient27.proxySelector;
        com.squareup.okhttp.OkAuthenticator okAuthenticator29 = okHttpClient27.authenticator;
        java.net.ProxySelector proxySelector30 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = okHttpClient27.setProxySelector(proxySelector30);
        com.squareup.okhttp.OkHttpClient okHttpClient32 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool33 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient32.connectionPool = connectionPool33;
        java.net.ResponseCache responseCache35 = null;
        okHttpClient32.responseCache = responseCache35;
        java.net.Proxy proxy37 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress38 = proxy37.address();
        java.net.SocketAddress socketAddress39 = proxy37.address();
        okHttpClient32.proxy = proxy37;
        com.squareup.okhttp.ConnectionPool connectionPool43 = new com.squareup.okhttp.ConnectionPool((-1), (long) '#');
        com.squareup.okhttp.Address address44 = null;
        com.squareup.okhttp.Connection connection45 = connectionPool43.get(address44);
        int int46 = connectionPool43.getSpdyConnectionCount();
        connectionPool43.evictAll();
        com.squareup.okhttp.OkHttpClient okHttpClient48 = okHttpClient32.setConnectionPool(connectionPool43);
        com.squareup.okhttp.OkHttpClient okHttpClient49 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier50 = null;
        okHttpClient49.hostnameVerifier = hostnameVerifier50;
        java.net.ProxySelector proxySelector52 = okHttpClient49.proxySelector;
        java.net.ProxySelector proxySelector53 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient54 = okHttpClient49.setProxySelector(proxySelector53);
        com.squareup.okhttp.OkHttpClient okHttpClient55 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier56 = null;
        okHttpClient55.hostnameVerifier = hostnameVerifier56;
        java.net.ResponseCache responseCache58 = null;
        okHttpClient55.responseCache = responseCache58;
        java.util.List<java.lang.String> strList60 = okHttpClient55.transports;
        com.squareup.okhttp.ConnectionPool connectionPool61 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient55.connectionPool = connectionPool61;
        com.squareup.okhttp.OkHttpClient okHttpClient63 = okHttpClient55.copyWithDefaults();
        java.net.ProxySelector proxySelector64 = okHttpClient63.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory65 = okHttpClient63.getSslSocketFactory();
        okHttpClient49.sslSocketFactory = sSLSocketFactory65;
        okHttpClient32.sslSocketFactory = sSLSocketFactory65;
        okHttpClient27.sslSocketFactory = sSLSocketFactory65;
        java.lang.String[] strArray69 = sSLSocketFactory65.getSupportedCipherSuites();
        com.squareup.okhttp.OkHttpClient okHttpClient70 = okHttpClient13.setSSLSocketFactory(sSLSocketFactory65);
        com.squareup.okhttp.ConnectionPool connectionPool71 = okHttpClient70.connectionPool;
        com.squareup.okhttp.ConnectionPool connectionPool74 = new com.squareup.okhttp.ConnectionPool((int) (byte) -1, (long) (byte) 0);
        int int75 = connectionPool74.getConnectionCount();
        okHttpClient70.connectionPool = connectionPool74;
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNotNull(okHttpClient14);
        org.junit.Assert.assertNull(responseCache15);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNull(hostnameVerifier23);
        org.junit.Assert.assertNotNull(okHttpClient25);
        org.junit.Assert.assertNotNull(okHttpClient27);
        org.junit.Assert.assertNull(proxySelector28);
        org.junit.Assert.assertNull(okAuthenticator29);
        org.junit.Assert.assertNotNull(okHttpClient31);
        org.junit.Assert.assertNotNull(connectionPool33);
        org.junit.Assert.assertNotNull(proxy37);
        org.junit.Assert.assertNull(socketAddress38);
        org.junit.Assert.assertNull(socketAddress39);
        org.junit.Assert.assertNull(connection45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(okHttpClient48);
        org.junit.Assert.assertNull(proxySelector52);
        org.junit.Assert.assertNotNull(okHttpClient54);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNotNull(connectionPool61);
        org.junit.Assert.assertNotNull(okHttpClient63);
// flaky:         org.junit.Assert.assertNull(proxySelector64);
        org.junit.Assert.assertNotNull(sSLSocketFactory65);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNotNull(okHttpClient70);
        org.junit.Assert.assertNotNull(connectionPool71);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
    }

    @Test
    public void test12490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12490");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory8 = okHttpClient0.getSslSocketFactory();
        java.net.CookieHandler cookieHandler9 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.ConnectionPool connectionPool12 = new com.squareup.okhttp.ConnectionPool(10, 1L);
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient0.setConnectionPool(connectionPool12);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory14 = okHttpClient0.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient0.copyWithDefaults();
        java.net.CookieHandler cookieHandler16 = null;
        okHttpClient0.cookieHandler = cookieHandler16;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient0.copyWithDefaults();
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNull(sSLSocketFactory8);
        org.junit.Assert.assertNull(cookieHandler9);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNull(sSLSocketFactory14);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNotNull(okHttpClient18);
    }

    @Test
    public void test12491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12491");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.CookieHandler cookieHandler8 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache9 = okHttpClient0.okResponseCache();
        java.net.CookieHandler cookieHandler10 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = okHttpClient11.hostnameVerifier;
        java.util.List<java.lang.String> strList13 = okHttpClient11.transports;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory14 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient15 = okHttpClient11.setSSLSocketFactory(sSLSocketFactory14);
        com.squareup.okhttp.OkHttpClient okHttpClient16 = new com.squareup.okhttp.OkHttpClient(okHttpClient11);
        javax.net.ssl.HostnameVerifier hostnameVerifier17 = okHttpClient16.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient16.copyWithDefaults();
        java.net.CookieHandler cookieHandler19 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient16.setCookieHandler(cookieHandler19);
        okHttpClient20.followProtocolRedirects = true;
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNull(cookieHandler8);
        org.junit.Assert.assertNull(okResponseCache9);
        org.junit.Assert.assertNull(cookieHandler10);
        org.junit.Assert.assertNull(hostnameVerifier12);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNotNull(okHttpClient15);
        org.junit.Assert.assertNull(hostnameVerifier17);
        org.junit.Assert.assertNotNull(okHttpClient18);
        org.junit.Assert.assertNotNull(okHttpClient20);
    }

    @Test
    public void test12492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12492");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        java.net.CookieHandler cookieHandler8 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache9 = okHttpClient0.okResponseCache();
        java.net.CookieHandler cookieHandler10 = okHttpClient0.getCookieHandler();
        com.squareup.okhttp.OkHttpClient okHttpClient11 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        java.net.Proxy proxy12 = java.net.Proxy.NO_PROXY;
        boolean boolean14 = proxy12.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type15 = proxy12.type();
        java.net.SocketAddress socketAddress16 = proxy12.address();
        com.squareup.okhttp.OkHttpClient okHttpClient17 = okHttpClient0.setProxy(proxy12);
        boolean boolean18 = okHttpClient17.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = okHttpClient17.setFollowProtocolRedirects(false);
        com.squareup.okhttp.OkHttpClient okHttpClient21 = okHttpClient20.copyWithDefaults();
        java.util.Set<com.squareup.okhttp.Route> routeSet22 = okHttpClient21.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient23 = new com.squareup.okhttp.OkHttpClient(okHttpClient21);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNull(cookieHandler8);
        org.junit.Assert.assertNull(okResponseCache9);
        org.junit.Assert.assertNull(cookieHandler10);
        org.junit.Assert.assertNotNull(proxy12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + type15 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type15.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress16);
        org.junit.Assert.assertNotNull(okHttpClient17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(okHttpClient20);
        org.junit.Assert.assertNotNull(okHttpClient21);
        org.junit.Assert.assertNotNull(routeSet22);
    }

    @Test
    public void test12493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12493");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache1 = okHttpClient0.okResponseCache();
        java.net.ResponseCache responseCache2 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.setResponseCache(responseCache2);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory4 = okHttpClient0.sslSocketFactory;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory5 = okHttpClient0.sslSocketFactory;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory6 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient7 = okHttpClient0.setSSLSocketFactory(sSLSocketFactory6);
        com.squareup.okhttp.OkHttpClient okHttpClient8 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier9 = null;
        okHttpClient8.hostnameVerifier = hostnameVerifier9;
        java.net.ResponseCache responseCache11 = null;
        okHttpClient8.responseCache = responseCache11;
        java.util.List<java.lang.String> strList13 = okHttpClient8.transports;
        com.squareup.okhttp.ConnectionPool connectionPool14 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient8.connectionPool = connectionPool14;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = okHttpClient0.setConnectionPool(connectionPool14);
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        com.squareup.okhttp.OkHttpClient okHttpClient18 = new com.squareup.okhttp.OkHttpClient(okHttpClient0);
        java.util.List<java.lang.String> strList19 = okHttpClient0.transports;
        com.squareup.okhttp.OkHttpClient okHttpClient20 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier21 = null;
        okHttpClient20.hostnameVerifier = hostnameVerifier21;
        java.net.ResponseCache responseCache23 = null;
        okHttpClient20.responseCache = responseCache23;
        java.util.List<java.lang.String> strList25 = okHttpClient20.transports;
        com.squareup.okhttp.ConnectionPool connectionPool26 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient20.connectionPool = connectionPool26;
        java.net.Proxy proxy28 = null;
        okHttpClient20.proxy = proxy28;
        boolean boolean30 = okHttpClient20.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient31 = new com.squareup.okhttp.OkHttpClient(okHttpClient20);
        java.net.ProxySelector proxySelector32 = okHttpClient31.proxySelector;
        javax.net.ssl.HostnameVerifier hostnameVerifier33 = okHttpClient31.hostnameVerifier;
        java.net.Proxy proxy34 = java.net.Proxy.NO_PROXY;
        boolean boolean36 = proxy34.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type37 = proxy34.type();
        java.net.Proxy.Type type38 = proxy34.type();
        okHttpClient31.proxy = proxy34;
        com.squareup.okhttp.OkHttpClient okHttpClient40 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier41 = null;
        okHttpClient40.hostnameVerifier = hostnameVerifier41;
        java.net.ResponseCache responseCache43 = null;
        okHttpClient40.responseCache = responseCache43;
        java.util.List<java.lang.String> strList45 = okHttpClient40.transports;
        com.squareup.okhttp.ConnectionPool connectionPool46 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient40.connectionPool = connectionPool46;
        com.squareup.okhttp.OkHttpClient okHttpClient48 = okHttpClient40.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient49 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier50 = null;
        okHttpClient49.hostnameVerifier = hostnameVerifier50;
        java.net.ResponseCache responseCache52 = null;
        okHttpClient49.responseCache = responseCache52;
        java.util.List<java.lang.String> strList54 = okHttpClient49.transports;
        com.squareup.okhttp.ConnectionPool connectionPool55 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient49.connectionPool = connectionPool55;
        com.squareup.okhttp.OkHttpClient okHttpClient57 = okHttpClient49.copyWithDefaults();
        java.net.ProxySelector proxySelector58 = okHttpClient57.proxySelector;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory59 = okHttpClient57.getSslSocketFactory();
        okHttpClient40.sslSocketFactory = sSLSocketFactory59;
        okHttpClient31.sslSocketFactory = sSLSocketFactory59;
        com.squareup.okhttp.OkHttpClient okHttpClient62 = new com.squareup.okhttp.OkHttpClient(okHttpClient31);
        java.net.Proxy proxy63 = java.net.Proxy.NO_PROXY;
        boolean boolean65 = proxy63.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type66 = proxy63.type();
        java.lang.String str67 = proxy63.toString();
        java.net.Proxy.Type type68 = proxy63.type();
        java.net.Proxy.Type type69 = proxy63.type();
        java.net.SocketAddress socketAddress70 = proxy63.address();
        okHttpClient62.proxy = proxy63;
        java.lang.String str72 = proxy63.toString();
        okHttpClient0.proxy = proxy63;
        com.squareup.okhttp.OkHttpClient okHttpClient74 = okHttpClient0.copyWithDefaults();
        org.junit.Assert.assertNull(okResponseCache1);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertNull(sSLSocketFactory4);
        org.junit.Assert.assertNull(sSLSocketFactory5);
        org.junit.Assert.assertNotNull(okHttpClient7);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNotNull(connectionPool14);
        org.junit.Assert.assertNotNull(okHttpClient16);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNotNull(connectionPool26);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(proxySelector32);
        org.junit.Assert.assertNull(hostnameVerifier33);
        org.junit.Assert.assertNotNull(proxy34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + type37 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type37.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertTrue("'" + type38 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type38.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNotNull(connectionPool46);
        org.junit.Assert.assertNotNull(okHttpClient48);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNotNull(connectionPool55);
        org.junit.Assert.assertNotNull(okHttpClient57);
// flaky:         org.junit.Assert.assertNull(proxySelector58);
        org.junit.Assert.assertNotNull(sSLSocketFactory59);
        org.junit.Assert.assertNotNull(proxy63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + type66 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type66.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "DIRECT" + "'", str67, "DIRECT");
        org.junit.Assert.assertTrue("'" + type68 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type68.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertTrue("'" + type69 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type69.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress70);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "DIRECT" + "'", str72, "DIRECT");
        org.junit.Assert.assertNotNull(okHttpClient74);
    }

    @Test
    public void test12494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12494");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.ConnectionPool connectionPool12 = okHttpClient11.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator13 = okHttpClient11.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool16 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient11.connectionPool = connectionPool16;
        java.net.ResponseCache responseCache18 = okHttpClient11.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory19 = okHttpClient11.sslSocketFactory;
        java.net.URL uRL20 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.HttpURLConnection httpURLConnection21 = okHttpClient11.open(uRL20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNull(okAuthenticator13);
        org.junit.Assert.assertNull(responseCache18);
        org.junit.Assert.assertNull(sSLSocketFactory19);
    }

    @Test
    public void test12495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12495");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        com.squareup.okhttp.ConnectionPool connectionPool12 = okHttpClient11.getConnectionPool();
        com.squareup.okhttp.OkAuthenticator okAuthenticator13 = okHttpClient11.getAuthenticator();
        com.squareup.okhttp.ConnectionPool connectionPool16 = new com.squareup.okhttp.ConnectionPool((int) (byte) 1, (long) (short) 0);
        okHttpClient11.connectionPool = connectionPool16;
        java.net.ResponseCache responseCache18 = okHttpClient11.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory19 = okHttpClient11.sslSocketFactory;
        java.net.Proxy proxy20 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress21 = proxy20.address();
        com.squareup.okhttp.OkHttpClient okHttpClient22 = okHttpClient11.setProxy(proxy20);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory23 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient11.setSSLSocketFactory(sSLSocketFactory23);
        com.squareup.okhttp.OkHttpClient okHttpClient25 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier26 = null;
        okHttpClient25.hostnameVerifier = hostnameVerifier26;
        java.net.ResponseCache responseCache28 = null;
        okHttpClient25.responseCache = responseCache28;
        javax.net.ssl.HostnameVerifier hostnameVerifier30 = okHttpClient25.hostnameVerifier;
        java.net.Proxy proxy31 = okHttpClient25.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool34 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient25.connectionPool = connectionPool34;
        com.squareup.okhttp.OkHttpClient okHttpClient36 = okHttpClient25.copyWithDefaults();
        java.net.ResponseCache responseCache37 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient38 = okHttpClient36.setResponseCache(responseCache37);
        com.squareup.okhttp.OkAuthenticator okAuthenticator39 = okHttpClient36.authenticator;
        com.squareup.okhttp.OkHttpClient okHttpClient40 = okHttpClient11.setAuthenticator(okAuthenticator39);
        java.net.ProxySelector proxySelector41 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient42 = okHttpClient40.setProxySelector(proxySelector41);
        com.squareup.okhttp.OkHttpClient okHttpClient43 = new com.squareup.okhttp.OkHttpClient(okHttpClient40);
        okHttpClient40.followProtocolRedirects = false;
        com.squareup.okhttp.OkHttpClient okHttpClient46 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool47 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient46.connectionPool = connectionPool47;
        java.net.ResponseCache responseCache49 = null;
        okHttpClient46.responseCache = responseCache49;
        com.squareup.okhttp.OkHttpClient okHttpClient51 = new com.squareup.okhttp.OkHttpClient(okHttpClient46);
        com.squareup.okhttp.OkHttpClient okHttpClient52 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier53 = null;
        okHttpClient52.hostnameVerifier = hostnameVerifier53;
        java.net.ResponseCache responseCache55 = null;
        okHttpClient52.responseCache = responseCache55;
        java.util.List<java.lang.String> strList57 = okHttpClient52.transports;
        java.net.Proxy proxy58 = java.net.Proxy.NO_PROXY;
        boolean boolean60 = proxy58.equals((java.lang.Object) 1L);
        java.net.Proxy.Type type61 = proxy58.type();
        java.net.SocketAddress socketAddress62 = proxy58.address();
        com.squareup.okhttp.OkHttpClient okHttpClient63 = okHttpClient52.setProxy(proxy58);
        javax.net.ssl.SSLSocketFactory sSLSocketFactory64 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient65 = okHttpClient63.setSSLSocketFactory(sSLSocketFactory64);
        javax.net.ssl.HostnameVerifier hostnameVerifier66 = okHttpClient63.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient67 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool68 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient67.connectionPool = connectionPool68;
        com.squareup.okhttp.OkHttpClient okHttpClient70 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier71 = null;
        okHttpClient70.hostnameVerifier = hostnameVerifier71;
        java.net.ResponseCache responseCache73 = null;
        okHttpClient70.responseCache = responseCache73;
        java.util.List<java.lang.String> strList75 = okHttpClient70.transports;
        com.squareup.okhttp.ConnectionPool connectionPool76 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient70.connectionPool = connectionPool76;
        com.squareup.okhttp.OkHttpClient okHttpClient78 = okHttpClient67.setConnectionPool(connectionPool76);
        com.squareup.okhttp.ConnectionPool connectionPool79 = okHttpClient67.connectionPool;
        int int80 = connectionPool79.getHttpConnectionCount();
        int int81 = connectionPool79.getHttpConnectionCount();
        okHttpClient63.connectionPool = connectionPool79;
        com.squareup.okhttp.ConnectionPool connectionPool83 = okHttpClient63.connectionPool;
        int int84 = connectionPool83.getHttpConnectionCount();
        okHttpClient51.connectionPool = connectionPool83;
        okHttpClient40.connectionPool = connectionPool83;
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNotNull(connectionPool12);
        org.junit.Assert.assertNull(okAuthenticator13);
        org.junit.Assert.assertNull(responseCache18);
        org.junit.Assert.assertNull(sSLSocketFactory19);
        org.junit.Assert.assertNotNull(proxy20);
        org.junit.Assert.assertNull(socketAddress21);
        org.junit.Assert.assertNotNull(okHttpClient22);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNull(hostnameVerifier30);
        org.junit.Assert.assertNull(proxy31);
        org.junit.Assert.assertNotNull(okHttpClient36);
        org.junit.Assert.assertNotNull(okHttpClient38);
        org.junit.Assert.assertNotNull(okAuthenticator39);
        org.junit.Assert.assertNotNull(okHttpClient40);
        org.junit.Assert.assertNotNull(okHttpClient42);
        org.junit.Assert.assertNotNull(connectionPool47);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNotNull(proxy58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + type61 + "' != '" + java.net.Proxy.Type.DIRECT + "'", type61.equals(java.net.Proxy.Type.DIRECT));
        org.junit.Assert.assertNull(socketAddress62);
        org.junit.Assert.assertNotNull(okHttpClient63);
        org.junit.Assert.assertNotNull(okHttpClient65);
        org.junit.Assert.assertNull(hostnameVerifier66);
        org.junit.Assert.assertNotNull(connectionPool68);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNotNull(connectionPool76);
        org.junit.Assert.assertNotNull(okHttpClient78);
        org.junit.Assert.assertNotNull(connectionPool79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertNotNull(connectionPool83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
    }

    @Test
    public void test12496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12496");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient0.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.copyWithDefaults();
        java.util.List<java.lang.String> strList12 = okHttpClient0.getTransports();
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient0.copyWithDefaults();
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient13.copyWithDefaults();
        java.net.CookieHandler cookieHandler15 = null;
        okHttpClient13.cookieHandler = cookieHandler15;
        boolean boolean17 = okHttpClient13.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient18 = okHttpClient13.copyWithDefaults();
        okHttpClient13.followProtocolRedirects = false;
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNotNull(okHttpClient14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(okHttpClient18);
    }

    @Test
    public void test12497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12497");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache1 = okHttpClient0.okResponseCache();
        java.net.ResponseCache responseCache2 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = okHttpClient0.setResponseCache(responseCache2);
        java.net.CookieHandler cookieHandler4 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.OkHttpClient okHttpClient5 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier6 = null;
        okHttpClient5.hostnameVerifier = hostnameVerifier6;
        java.net.ResponseCache responseCache8 = null;
        okHttpClient5.responseCache = responseCache8;
        javax.net.ssl.HostnameVerifier hostnameVerifier10 = okHttpClient5.hostnameVerifier;
        java.net.Proxy proxy11 = okHttpClient5.getProxy();
        java.net.CookieHandler cookieHandler12 = null;
        okHttpClient5.cookieHandler = cookieHandler12;
        okHttpClient5.followProtocolRedirects = true;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier17 = null;
        okHttpClient16.hostnameVerifier = hostnameVerifier17;
        java.net.ResponseCache responseCache19 = null;
        okHttpClient16.responseCache = responseCache19;
        javax.net.ssl.HostnameVerifier hostnameVerifier21 = okHttpClient16.hostnameVerifier;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory22 = okHttpClient16.sslSocketFactory;
        java.net.CookieHandler cookieHandler23 = okHttpClient16.cookieHandler;
        javax.net.ssl.HostnameVerifier hostnameVerifier24 = okHttpClient16.hostnameVerifier;
        com.squareup.okhttp.OkHttpClient okHttpClient25 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool26 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient25.connectionPool = connectionPool26;
        com.squareup.okhttp.OkAuthenticator okAuthenticator28 = null;
        okHttpClient25.authenticator = okAuthenticator28;
        java.util.List<java.lang.String> strList30 = okHttpClient25.transports;
        java.net.ResponseCache responseCache31 = null;
        okHttpClient25.responseCache = responseCache31;
        com.squareup.okhttp.OkHttpClient okHttpClient33 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier34 = null;
        okHttpClient33.hostnameVerifier = hostnameVerifier34;
        java.net.ResponseCache responseCache36 = null;
        okHttpClient33.responseCache = responseCache36;
        javax.net.ssl.HostnameVerifier hostnameVerifier38 = okHttpClient33.hostnameVerifier;
        java.net.Proxy proxy39 = okHttpClient33.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool42 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient33.connectionPool = connectionPool42;
        com.squareup.okhttp.OkHttpClient okHttpClient44 = okHttpClient33.copyWithDefaults();
        java.net.Proxy proxy45 = okHttpClient44.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier46 = okHttpClient44.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient47 = okHttpClient25.setHostnameVerifier(hostnameVerifier46);
        com.squareup.okhttp.OkHttpClient okHttpClient48 = okHttpClient16.setHostnameVerifier(hostnameVerifier46);
        okHttpClient5.hostnameVerifier = hostnameVerifier46;
        com.squareup.okhttp.OkHttpClient okHttpClient50 = okHttpClient0.setHostnameVerifier(hostnameVerifier46);
        java.net.Proxy proxy51 = okHttpClient50.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient52 = new com.squareup.okhttp.OkHttpClient(okHttpClient50);
        java.net.ProxySelector proxySelector53 = okHttpClient52.getProxySelector();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory54 = okHttpClient52.sslSocketFactory;
        org.junit.Assert.assertNull(okResponseCache1);
        org.junit.Assert.assertNotNull(okHttpClient3);
        org.junit.Assert.assertNull(cookieHandler4);
        org.junit.Assert.assertNull(hostnameVerifier10);
        org.junit.Assert.assertNull(proxy11);
        org.junit.Assert.assertNull(hostnameVerifier21);
        org.junit.Assert.assertNull(sSLSocketFactory22);
        org.junit.Assert.assertNull(cookieHandler23);
        org.junit.Assert.assertNull(hostnameVerifier24);
        org.junit.Assert.assertNotNull(connectionPool26);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNull(hostnameVerifier38);
        org.junit.Assert.assertNull(proxy39);
        org.junit.Assert.assertNotNull(okHttpClient44);
        org.junit.Assert.assertNull(proxy45);
        org.junit.Assert.assertNotNull(hostnameVerifier46);
        org.junit.Assert.assertNotNull(okHttpClient47);
        org.junit.Assert.assertNotNull(okHttpClient48);
        org.junit.Assert.assertNotNull(okHttpClient50);
        org.junit.Assert.assertNull(proxy51);
        org.junit.Assert.assertNull(proxySelector53);
        org.junit.Assert.assertNull(sSLSocketFactory54);
    }

    @Test
    public void test12498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12498");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        javax.net.ssl.HostnameVerifier hostnameVerifier5 = okHttpClient0.hostnameVerifier;
        java.net.Proxy proxy6 = okHttpClient0.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool9 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient0.connectionPool = connectionPool9;
        java.util.List<java.lang.String> strList11 = okHttpClient0.getTransports();
        javax.net.ssl.HostnameVerifier hostnameVerifier12 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient0.setHostnameVerifier(hostnameVerifier12);
        com.squareup.okhttp.OkHttpClient okHttpClient14 = okHttpClient13.copyWithDefaults();
        okHttpClient14.followProtocolRedirects = false;
        com.squareup.okhttp.OkHttpClient okHttpClient17 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier18 = null;
        okHttpClient17.hostnameVerifier = hostnameVerifier18;
        java.net.ResponseCache responseCache20 = null;
        okHttpClient17.responseCache = responseCache20;
        java.util.List<java.lang.String> strList22 = okHttpClient17.transports;
        com.squareup.okhttp.ConnectionPool connectionPool23 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient17.connectionPool = connectionPool23;
        java.net.Proxy proxy25 = null;
        okHttpClient17.proxy = proxy25;
        boolean boolean27 = okHttpClient17.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient29 = okHttpClient17.setFollowProtocolRedirects(true);
        com.squareup.okhttp.OkHttpClient okHttpClient30 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier31 = null;
        okHttpClient30.hostnameVerifier = hostnameVerifier31;
        java.net.ResponseCache responseCache33 = null;
        okHttpClient30.responseCache = responseCache33;
        java.util.List<java.lang.String> strList35 = okHttpClient30.transports;
        javax.net.ssl.HostnameVerifier hostnameVerifier36 = null;
        okHttpClient30.hostnameVerifier = hostnameVerifier36;
        com.squareup.okhttp.internal.http.OkResponseCache okResponseCache38 = okHttpClient30.okResponseCache();
        javax.net.ssl.SSLSocketFactory sSLSocketFactory39 = okHttpClient30.getSslSocketFactory();
        com.squareup.okhttp.OkHttpClient okHttpClient40 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier41 = null;
        okHttpClient40.hostnameVerifier = hostnameVerifier41;
        java.net.ResponseCache responseCache43 = null;
        okHttpClient40.responseCache = responseCache43;
        javax.net.ssl.HostnameVerifier hostnameVerifier45 = okHttpClient40.hostnameVerifier;
        java.net.Proxy proxy46 = okHttpClient40.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool49 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient40.connectionPool = connectionPool49;
        com.squareup.okhttp.OkHttpClient okHttpClient51 = okHttpClient40.copyWithDefaults();
        java.net.Proxy proxy52 = okHttpClient51.getProxy();
        javax.net.ssl.HostnameVerifier hostnameVerifier53 = okHttpClient51.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient54 = okHttpClient30.setHostnameVerifier(hostnameVerifier53);
        com.squareup.okhttp.OkHttpClient okHttpClient55 = okHttpClient29.setHostnameVerifier(hostnameVerifier53);
        com.squareup.okhttp.OkHttpClient okHttpClient56 = okHttpClient14.setHostnameVerifier(hostnameVerifier53);
        com.squareup.okhttp.OkHttpClient okHttpClient57 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier58 = null;
        okHttpClient57.hostnameVerifier = hostnameVerifier58;
        java.net.ProxySelector proxySelector60 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient61 = okHttpClient57.setProxySelector(proxySelector60);
        java.net.ResponseCache responseCache62 = null;
        okHttpClient61.responseCache = responseCache62;
        javax.net.ssl.HostnameVerifier hostnameVerifier64 = okHttpClient61.hostnameVerifier;
        java.util.Set<com.squareup.okhttp.Route> routeSet65 = okHttpClient61.failedRoutes;
        okHttpClient56.failedRoutes = routeSet65;
        com.squareup.okhttp.OkHttpClient okHttpClient67 = new com.squareup.okhttp.OkHttpClient(okHttpClient56);
        java.net.CookieHandler cookieHandler68 = okHttpClient67.cookieHandler;
        org.junit.Assert.assertNull(hostnameVerifier5);
        org.junit.Assert.assertNull(proxy6);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNotNull(okHttpClient14);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNotNull(connectionPool23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(okHttpClient29);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(okResponseCache38);
        org.junit.Assert.assertNull(sSLSocketFactory39);
        org.junit.Assert.assertNull(hostnameVerifier45);
        org.junit.Assert.assertNull(proxy46);
        org.junit.Assert.assertNotNull(okHttpClient51);
        org.junit.Assert.assertNull(proxy52);
        org.junit.Assert.assertNotNull(hostnameVerifier53);
        org.junit.Assert.assertNotNull(okHttpClient54);
        org.junit.Assert.assertNotNull(okHttpClient55);
        org.junit.Assert.assertNotNull(okHttpClient56);
        org.junit.Assert.assertNotNull(okHttpClient61);
        org.junit.Assert.assertNull(hostnameVerifier64);
        org.junit.Assert.assertNotNull(routeSet65);
        org.junit.Assert.assertNull(cookieHandler68);
    }

    @Test
    public void test12499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12499");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier1 = null;
        okHttpClient0.hostnameVerifier = hostnameVerifier1;
        java.net.ResponseCache responseCache3 = null;
        okHttpClient0.responseCache = responseCache3;
        java.util.List<java.lang.String> strList5 = okHttpClient0.transports;
        com.squareup.okhttp.ConnectionPool connectionPool6 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool6;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory8 = okHttpClient0.getSslSocketFactory();
        java.net.CookieHandler cookieHandler9 = okHttpClient0.cookieHandler;
        com.squareup.okhttp.ConnectionPool connectionPool12 = new com.squareup.okhttp.ConnectionPool(10, 1L);
        com.squareup.okhttp.OkHttpClient okHttpClient13 = okHttpClient0.setConnectionPool(connectionPool12);
        java.net.Proxy proxy14 = okHttpClient0.proxy;
        com.squareup.okhttp.ConnectionPool connectionPool15 = okHttpClient0.getConnectionPool();
        java.net.CookieHandler cookieHandler16 = null;
        okHttpClient0.cookieHandler = cookieHandler16;
        java.net.ResponseCache responseCache18 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient19 = okHttpClient0.setResponseCache(responseCache18);
        okHttpClient19.followProtocolRedirects = false;
        com.squareup.okhttp.OkHttpClient okHttpClient22 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier23 = null;
        okHttpClient22.hostnameVerifier = hostnameVerifier23;
        java.net.ResponseCache responseCache25 = null;
        okHttpClient22.responseCache = responseCache25;
        javax.net.ssl.HostnameVerifier hostnameVerifier27 = okHttpClient22.hostnameVerifier;
        java.net.Proxy proxy28 = okHttpClient22.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool31 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient22.connectionPool = connectionPool31;
        com.squareup.okhttp.OkHttpClient okHttpClient33 = okHttpClient22.copyWithDefaults();
        java.net.ResponseCache responseCache34 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient35 = okHttpClient33.setResponseCache(responseCache34);
        java.net.ProxySelector proxySelector36 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient37 = okHttpClient33.setProxySelector(proxySelector36);
        javax.net.ssl.HostnameVerifier hostnameVerifier38 = okHttpClient37.getHostnameVerifier();
        com.squareup.okhttp.OkHttpClient okHttpClient39 = okHttpClient19.setHostnameVerifier(hostnameVerifier38);
        okHttpClient19.followProtocolRedirects = false;
        boolean boolean42 = okHttpClient19.getFollowProtocolRedirects();
        java.net.CookieHandler cookieHandler43 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient44 = okHttpClient19.setCookieHandler(cookieHandler43);
        com.squareup.okhttp.OkHttpClient okHttpClient45 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier46 = null;
        okHttpClient45.hostnameVerifier = hostnameVerifier46;
        java.net.ResponseCache responseCache48 = null;
        okHttpClient45.responseCache = responseCache48;
        java.util.List<java.lang.String> strList50 = okHttpClient45.transports;
        com.squareup.okhttp.ConnectionPool connectionPool51 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient45.connectionPool = connectionPool51;
        java.net.Proxy proxy53 = null;
        okHttpClient45.proxy = proxy53;
        boolean boolean55 = okHttpClient45.followProtocolRedirects;
        com.squareup.okhttp.OkHttpClient okHttpClient56 = okHttpClient45.copyWithDefaults();
        java.net.CookieHandler cookieHandler57 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient58 = okHttpClient56.setCookieHandler(cookieHandler57);
        java.util.List<java.lang.String> strList59 = okHttpClient58.transports;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory60 = okHttpClient58.sslSocketFactory;
        com.squareup.okhttp.OkAuthenticator okAuthenticator61 = okHttpClient58.getAuthenticator();
        com.squareup.okhttp.OkHttpClient okHttpClient62 = okHttpClient44.setAuthenticator(okAuthenticator61);
        com.squareup.okhttp.OkHttpClient okHttpClient63 = okHttpClient62.copyWithDefaults();
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(connectionPool6);
        org.junit.Assert.assertNull(sSLSocketFactory8);
        org.junit.Assert.assertNull(cookieHandler9);
        org.junit.Assert.assertNotNull(okHttpClient13);
        org.junit.Assert.assertNull(proxy14);
        org.junit.Assert.assertNotNull(connectionPool15);
        org.junit.Assert.assertNotNull(okHttpClient19);
        org.junit.Assert.assertNull(hostnameVerifier27);
        org.junit.Assert.assertNull(proxy28);
        org.junit.Assert.assertNotNull(okHttpClient33);
        org.junit.Assert.assertNotNull(okHttpClient35);
        org.junit.Assert.assertNotNull(okHttpClient37);
        org.junit.Assert.assertNotNull(hostnameVerifier38);
        org.junit.Assert.assertNotNull(okHttpClient39);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(okHttpClient44);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNotNull(connectionPool51);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(okHttpClient56);
        org.junit.Assert.assertNotNull(okHttpClient58);
        org.junit.Assert.assertNotNull(strList59);
        org.junit.Assert.assertNotNull(sSLSocketFactory60);
        org.junit.Assert.assertNotNull(okAuthenticator61);
        org.junit.Assert.assertNotNull(okHttpClient62);
        org.junit.Assert.assertNotNull(okHttpClient63);
    }

    @Test
    public void test12500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12500");
        com.squareup.okhttp.OkHttpClient okHttpClient0 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool1 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient0.connectionPool = connectionPool1;
        com.squareup.okhttp.OkHttpClient okHttpClient3 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier4 = null;
        okHttpClient3.hostnameVerifier = hostnameVerifier4;
        java.net.ResponseCache responseCache6 = null;
        okHttpClient3.responseCache = responseCache6;
        java.util.List<java.lang.String> strList8 = okHttpClient3.transports;
        com.squareup.okhttp.ConnectionPool connectionPool9 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient3.connectionPool = connectionPool9;
        com.squareup.okhttp.OkHttpClient okHttpClient11 = okHttpClient0.setConnectionPool(connectionPool9);
        java.net.Proxy proxy12 = okHttpClient11.proxy;
        com.squareup.okhttp.OkHttpClient okHttpClient13 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool14 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient13.connectionPool = connectionPool14;
        com.squareup.okhttp.OkHttpClient okHttpClient16 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier17 = null;
        okHttpClient16.hostnameVerifier = hostnameVerifier17;
        java.net.ResponseCache responseCache19 = null;
        okHttpClient16.responseCache = responseCache19;
        java.util.List<java.lang.String> strList21 = okHttpClient16.transports;
        com.squareup.okhttp.ConnectionPool connectionPool22 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient16.connectionPool = connectionPool22;
        com.squareup.okhttp.OkHttpClient okHttpClient24 = okHttpClient13.setConnectionPool(connectionPool22);
        com.squareup.okhttp.ConnectionPool connectionPool25 = okHttpClient13.connectionPool;
        com.squareup.okhttp.OkHttpClient okHttpClient26 = okHttpClient11.setConnectionPool(connectionPool25);
        okHttpClient11.followProtocolRedirects = false;
        com.squareup.okhttp.OkHttpClient okHttpClient29 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool30 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient29.connectionPool = connectionPool30;
        com.squareup.okhttp.OkHttpClient okHttpClient32 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier33 = null;
        okHttpClient32.hostnameVerifier = hostnameVerifier33;
        java.net.ResponseCache responseCache35 = null;
        okHttpClient32.responseCache = responseCache35;
        java.util.List<java.lang.String> strList37 = okHttpClient32.transports;
        com.squareup.okhttp.ConnectionPool connectionPool38 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient32.connectionPool = connectionPool38;
        com.squareup.okhttp.OkHttpClient okHttpClient40 = okHttpClient29.setConnectionPool(connectionPool38);
        java.net.ResponseCache responseCache41 = okHttpClient29.responseCache;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory42 = okHttpClient29.sslSocketFactory;
        java.net.CookieHandler cookieHandler43 = okHttpClient29.getCookieHandler();
        com.squareup.okhttp.OkAuthenticator okAuthenticator44 = okHttpClient29.authenticator;
        java.util.Set<com.squareup.okhttp.Route> routeSet45 = okHttpClient29.failedRoutes;
        com.squareup.okhttp.OkHttpClient okHttpClient46 = new com.squareup.okhttp.OkHttpClient(okHttpClient29);
        com.squareup.okhttp.OkHttpClient okHttpClient47 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier48 = null;
        okHttpClient47.hostnameVerifier = hostnameVerifier48;
        java.net.ResponseCache responseCache50 = null;
        okHttpClient47.responseCache = responseCache50;
        javax.net.ssl.HostnameVerifier hostnameVerifier52 = okHttpClient47.hostnameVerifier;
        java.net.Proxy proxy53 = okHttpClient47.getProxy();
        com.squareup.okhttp.ConnectionPool connectionPool56 = new com.squareup.okhttp.ConnectionPool(1, (long) (short) 1);
        okHttpClient47.connectionPool = connectionPool56;
        com.squareup.okhttp.OkHttpClient okHttpClient58 = okHttpClient47.copyWithDefaults();
        java.net.ResponseCache responseCache59 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient60 = okHttpClient58.setResponseCache(responseCache59);
        javax.net.ssl.HostnameVerifier hostnameVerifier61 = okHttpClient60.hostnameVerifier;
        okHttpClient46.hostnameVerifier = hostnameVerifier61;
        com.squareup.okhttp.OkHttpClient okHttpClient63 = okHttpClient11.setHostnameVerifier(hostnameVerifier61);
        java.net.Proxy proxy64 = okHttpClient63.getProxy();
        com.squareup.okhttp.OkHttpClient okHttpClient66 = okHttpClient63.setFollowProtocolRedirects(true);
        com.squareup.okhttp.ConnectionPool connectionPool69 = new com.squareup.okhttp.ConnectionPool((-1), (long) (byte) -1);
        int int70 = connectionPool69.getSpdyConnectionCount();
        com.squareup.okhttp.OkHttpClient okHttpClient71 = okHttpClient63.setConnectionPool(connectionPool69);
        java.util.Set<com.squareup.okhttp.Route> routeSet72 = okHttpClient63.failedRoutes;
        java.net.Proxy proxy73 = java.net.Proxy.NO_PROXY;
        java.net.SocketAddress socketAddress74 = proxy73.address();
        java.net.SocketAddress socketAddress75 = proxy73.address();
        com.squareup.okhttp.OkHttpClient okHttpClient76 = new com.squareup.okhttp.OkHttpClient();
        com.squareup.okhttp.ConnectionPool connectionPool77 = com.squareup.okhttp.ConnectionPool.getDefault();
        okHttpClient76.connectionPool = connectionPool77;
        java.net.ResponseCache responseCache79 = null;
        okHttpClient76.responseCache = responseCache79;
        com.squareup.okhttp.OkAuthenticator okAuthenticator81 = null;
        okHttpClient76.authenticator = okAuthenticator81;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory83 = okHttpClient76.getSslSocketFactory();
        boolean boolean84 = proxy73.equals((java.lang.Object) okHttpClient76);
        com.squareup.okhttp.OkHttpClient okHttpClient85 = new com.squareup.okhttp.OkHttpClient();
        javax.net.ssl.HostnameVerifier hostnameVerifier86 = null;
        okHttpClient85.hostnameVerifier = hostnameVerifier86;
        java.net.ResponseCache responseCache88 = null;
        okHttpClient85.responseCache = responseCache88;
        javax.net.ssl.HostnameVerifier hostnameVerifier90 = okHttpClient85.hostnameVerifier;
        javax.net.ssl.SSLSocketFactory sSLSocketFactory91 = null;
        com.squareup.okhttp.OkHttpClient okHttpClient92 = okHttpClient85.setSSLSocketFactory(sSLSocketFactory91);
        java.util.List<java.lang.String> strList93 = okHttpClient85.getTransports();
        boolean boolean94 = proxy73.equals((java.lang.Object) strList93);
        com.squareup.okhttp.OkHttpClient okHttpClient95 = okHttpClient63.setProxy(proxy73);
        java.lang.String str96 = proxy73.toString();
        java.lang.Class<?> wildcardClass97 = proxy73.getClass();
        org.junit.Assert.assertNotNull(connectionPool1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(connectionPool9);
        org.junit.Assert.assertNotNull(okHttpClient11);
        org.junit.Assert.assertNull(proxy12);
        org.junit.Assert.assertNotNull(connectionPool14);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(connectionPool22);
        org.junit.Assert.assertNotNull(okHttpClient24);
        org.junit.Assert.assertNotNull(connectionPool25);
        org.junit.Assert.assertNotNull(okHttpClient26);
        org.junit.Assert.assertNotNull(connectionPool30);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(connectionPool38);
        org.junit.Assert.assertNotNull(okHttpClient40);
        org.junit.Assert.assertNull(responseCache41);
        org.junit.Assert.assertNull(sSLSocketFactory42);
        org.junit.Assert.assertNull(cookieHandler43);
        org.junit.Assert.assertNull(okAuthenticator44);
        org.junit.Assert.assertNotNull(routeSet45);
        org.junit.Assert.assertNull(hostnameVerifier52);
        org.junit.Assert.assertNull(proxy53);
        org.junit.Assert.assertNotNull(okHttpClient58);
        org.junit.Assert.assertNotNull(okHttpClient60);
        org.junit.Assert.assertNotNull(hostnameVerifier61);
        org.junit.Assert.assertNotNull(okHttpClient63);
        org.junit.Assert.assertNull(proxy64);
        org.junit.Assert.assertNotNull(okHttpClient66);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(okHttpClient71);
        org.junit.Assert.assertNotNull(routeSet72);
        org.junit.Assert.assertNotNull(proxy73);
        org.junit.Assert.assertNull(socketAddress74);
        org.junit.Assert.assertNull(socketAddress75);
        org.junit.Assert.assertNotNull(connectionPool77);
        org.junit.Assert.assertNull(sSLSocketFactory83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNull(hostnameVerifier90);
        org.junit.Assert.assertNotNull(okHttpClient92);
        org.junit.Assert.assertNull(strList93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(okHttpClient95);
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "DIRECT" + "'", str96, "DIRECT");
        org.junit.Assert.assertNotNull(wildcardClass97);
    }
}
