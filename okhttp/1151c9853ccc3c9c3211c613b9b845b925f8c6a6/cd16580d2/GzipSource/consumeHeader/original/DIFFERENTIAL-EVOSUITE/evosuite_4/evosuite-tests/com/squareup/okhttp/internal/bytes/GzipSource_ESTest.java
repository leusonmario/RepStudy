/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 06 13:44:02 GMT 2021
 */

package com.squareup.okhttp.internal.bytes;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.squareup.okhttp.internal.bytes.Deadline;
import com.squareup.okhttp.internal.bytes.GzipSource;
import com.squareup.okhttp.internal.bytes.OkBuffer;
import java.io.IOException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class GzipSource_ESTest extends GzipSource_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      OkBuffer okBuffer1 = okBuffer0.writeInt(2);
      OkBuffer okBuffer2 = okBuffer1.writeShort(2);
      GzipSource gzipSource0 = new GzipSource(okBuffer2);
      Deadline deadline0 = new Deadline();
      okBuffer0.writeInt(2);
      // EXCEPTION DIFF:
      // Different Exceptions were thrown:
      // Original Version:
      //     org.evosuite.runtime.mock.java.io.MockIOException : ID1ID2: actual 0x00000000 != expected 0x00001f8b
      // Modified Version:
      //     org.evosuite.runtime.mock.java.io.MockIOException : ID1ID2: actual 0x000000 != expected 0x001f8b
      try { 
        gzipSource0.read((OkBuffer) null, 1048576L, deadline0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // ID1ID2: actual 0x00000000 != expected 0x00001f8b
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
         assertTrue(e.getMessage().equals("ID1ID2: actual 0x00000000 != expected 0x00001f8b"));   
      }
  }
}
