/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 07 07:00:21 GMT 2021
 */

package com.relayrides.pushy.apns;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.relayrides.pushy.apns.ApnsConnection;
import com.relayrides.pushy.apns.ApnsEnvironment;
import com.relayrides.pushy.apns.FailedConnectionListener;
import com.relayrides.pushy.apns.KnownBadPushNotification;
import com.relayrides.pushy.apns.PushManager;
import com.relayrides.pushy.apns.RejectedNotificationReason;
import io.netty.channel.nio.NioEventLoopGroup;
import java.util.concurrent.BlockingQueue;
import java.util.concurrent.LinkedBlockingDeque;
import java.util.concurrent.LinkedBlockingQueue;
import java.util.concurrent.LinkedTransferQueue;
import java.util.concurrent.TimeUnit;
import javax.net.ssl.SSLContext;
import javax.net.ssl.SSLEngine;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PushManager_ESTest extends PushManager_ESTest_scaffolding {

  @Test(timeout = 11000)
  public void test0()  throws Throwable  {
      SSLContext sSLContext0 = null;
      NioEventLoopGroup nioEventLoopGroup0 = null;
      ApnsEnvironment apnsEnvironment0 = ApnsEnvironment.getProductionEnvironment();
      assertNotNull(apnsEnvironment0);
      assertEquals(2196, apnsEnvironment0.getFeedbackPort());
      assertEquals("gateway.push.apple.com", apnsEnvironment0.getApnsGatewayHost());
      assertEquals(2195, apnsEnvironment0.getApnsGatewayPort());
      assertEquals("feedback.push.apple.com", apnsEnvironment0.getFeedbackHost());
      
      int int0 = (-19);
      LinkedBlockingQueue<KnownBadPushNotification> linkedBlockingQueue0 = new LinkedBlockingQueue<KnownBadPushNotification>();
      assertNotNull(linkedBlockingQueue0);
      
      PushManager<KnownBadPushNotification> pushManager0 = null;
      try {
        pushManager0 = new PushManager<KnownBadPushNotification>(apnsEnvironment0, sSLContext0, int0, nioEventLoopGroup0, nioEventLoopGroup0, linkedBlockingQueue0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class io.netty.util.concurrent.DefaultPromise
         //
         verifyException("io.netty.util.concurrent.MultithreadEventExecutorGroup", e);
      }
  }

  @Test(timeout = 11000)
  public void test1()  throws Throwable  {
      ApnsEnvironment apnsEnvironment0 = ApnsEnvironment.getProductionEnvironment();
      assertNotNull(apnsEnvironment0);
      assertEquals(2195, apnsEnvironment0.getApnsGatewayPort());
      assertEquals("feedback.push.apple.com", apnsEnvironment0.getFeedbackHost());
      assertEquals(2196, apnsEnvironment0.getFeedbackPort());
      assertEquals("gateway.push.apple.com", apnsEnvironment0.getApnsGatewayHost());
      
      SSLContext sSLContext0 = null;
      NioEventLoopGroup nioEventLoopGroup0 = null;
      BlockingQueue<KnownBadPushNotification> blockingQueue0 = null;
      int int0 = (-3048);
      PushManager<KnownBadPushNotification> pushManager0 = null;
      try {
        pushManager0 = new PushManager<KnownBadPushNotification>(apnsEnvironment0, sSLContext0, int0, nioEventLoopGroup0, nioEventLoopGroup0, blockingQueue0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class io.netty.util.concurrent.DefaultPromise
         //
         verifyException("io.netty.util.concurrent.MultithreadEventExecutorGroup", e);
      }
  }

  @Test(timeout = 11000)
  public void test2()  throws Throwable  {
      ApnsEnvironment apnsEnvironment0 = ApnsEnvironment.getSandboxEnvironment();
      assertNotNull(apnsEnvironment0);
      assertEquals("gateway.sandbox.push.apple.com", apnsEnvironment0.getApnsGatewayHost());
      assertEquals("feedback.sandbox.push.apple.com", apnsEnvironment0.getFeedbackHost());
      assertEquals(2196, apnsEnvironment0.getFeedbackPort());
      assertEquals(2195, apnsEnvironment0.getApnsGatewayPort());
      
      SSLContext sSLContext0 = SSLContext.getDefault();
      assertNotNull(sSLContext0);
      
      int int0 = (-4790);
      NioEventLoopGroup nioEventLoopGroup0 = null;
      LinkedTransferQueue<KnownBadPushNotification> linkedTransferQueue0 = new LinkedTransferQueue<KnownBadPushNotification>();
      assertNotNull(linkedTransferQueue0);
      
      PushManager<KnownBadPushNotification> pushManager0 = null;
      try {
        pushManager0 = new PushManager<KnownBadPushNotification>(apnsEnvironment0, sSLContext0, int0, nioEventLoopGroup0, nioEventLoopGroup0, linkedTransferQueue0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class io.netty.util.concurrent.DefaultPromise
         //
         verifyException("io.netty.util.concurrent.MultithreadEventExecutorGroup", e);
      }
  }

  @Test(timeout = 11000)
  public void test3()  throws Throwable  {
      ApnsEnvironment apnsEnvironment0 = ApnsEnvironment.getProductionEnvironment();
      assertNotNull(apnsEnvironment0);
      assertEquals("gateway.push.apple.com", apnsEnvironment0.getApnsGatewayHost());
      assertEquals(2196, apnsEnvironment0.getFeedbackPort());
      assertEquals(2195, apnsEnvironment0.getApnsGatewayPort());
      assertEquals("feedback.push.apple.com", apnsEnvironment0.getFeedbackHost());
      
      SSLContext sSLContext0 = null;
      ApnsEnvironment apnsEnvironment1 = ApnsEnvironment.getProductionEnvironment();
      assertFalse(apnsEnvironment1.equals((Object)apnsEnvironment0));
      assertNotNull(apnsEnvironment1);
      assertNotSame(apnsEnvironment1, apnsEnvironment0);
      assertEquals(2195, apnsEnvironment1.getApnsGatewayPort());
      assertEquals("feedback.push.apple.com", apnsEnvironment1.getFeedbackHost());
      assertEquals("gateway.push.apple.com", apnsEnvironment1.getApnsGatewayHost());
      assertEquals(2196, apnsEnvironment1.getFeedbackPort());
      
      int int0 = 256;
      ApnsEnvironment apnsEnvironment2 = ApnsEnvironment.getSandboxEnvironment();
      assertFalse(apnsEnvironment2.equals((Object)apnsEnvironment1));
      assertFalse(apnsEnvironment2.equals((Object)apnsEnvironment0));
      assertNotNull(apnsEnvironment2);
      assertNotSame(apnsEnvironment2, apnsEnvironment1);
      assertNotSame(apnsEnvironment2, apnsEnvironment0);
      assertEquals(2196, apnsEnvironment2.getFeedbackPort());
      assertEquals("gateway.sandbox.push.apple.com", apnsEnvironment2.getApnsGatewayHost());
      assertEquals("feedback.sandbox.push.apple.com", apnsEnvironment2.getFeedbackHost());
      assertEquals(2195, apnsEnvironment2.getApnsGatewayPort());
      
      NioEventLoopGroup nioEventLoopGroup0 = null;
      LinkedBlockingDeque<KnownBadPushNotification> linkedBlockingDeque0 = new LinkedBlockingDeque<KnownBadPushNotification>();
      assertNotNull(linkedBlockingDeque0);
      
      String string0 = linkedBlockingDeque0.toString();
      assertEquals("[]", string0);
      assertNotNull(string0);
      
      ApnsEnvironment apnsEnvironment3 = ApnsEnvironment.getSandboxEnvironment();
      assertFalse(apnsEnvironment3.equals((Object)apnsEnvironment1));
      assertFalse(apnsEnvironment3.equals((Object)apnsEnvironment2));
      assertFalse(apnsEnvironment3.equals((Object)apnsEnvironment0));
      assertNotNull(apnsEnvironment3);
      assertNotSame(apnsEnvironment3, apnsEnvironment1);
      assertNotSame(apnsEnvironment3, apnsEnvironment2);
      assertNotSame(apnsEnvironment3, apnsEnvironment0);
      assertEquals("gateway.sandbox.push.apple.com", apnsEnvironment3.getApnsGatewayHost());
      assertEquals(2196, apnsEnvironment3.getFeedbackPort());
      assertEquals("feedback.sandbox.push.apple.com", apnsEnvironment3.getFeedbackHost());
      assertEquals(2195, apnsEnvironment3.getApnsGatewayPort());
      
      KnownBadPushNotification knownBadPushNotification0 = new KnownBadPushNotification();
      assertNotNull(knownBadPushNotification0);
      assertEquals("", knownBadPushNotification0.getPayload());
      
      boolean boolean0 = linkedBlockingDeque0.add(knownBadPushNotification0);
      assertTrue(linkedBlockingDeque0.contains(knownBadPushNotification0));
      assertTrue(boolean0);
      assertEquals("", knownBadPushNotification0.getPayload());
      
      PushManager<KnownBadPushNotification> pushManager0 = null;
      try {
        pushManager0 = new PushManager<KnownBadPushNotification>(apnsEnvironment0, sSLContext0, int0, nioEventLoopGroup0, nioEventLoopGroup0, linkedBlockingDeque0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class io.netty.util.concurrent.DefaultPromise
         //
         verifyException("io.netty.util.concurrent.MultithreadEventExecutorGroup", e);
      }
  }

  @Test(timeout = 11000)
  public void test4()  throws Throwable  {
      ApnsEnvironment apnsEnvironment0 = ApnsEnvironment.getSandboxEnvironment();
      assertNotNull(apnsEnvironment0);
      assertEquals("feedback.sandbox.push.apple.com", apnsEnvironment0.getFeedbackHost());
      assertEquals(2196, apnsEnvironment0.getFeedbackPort());
      assertEquals("gateway.sandbox.push.apple.com", apnsEnvironment0.getApnsGatewayHost());
      assertEquals(2195, apnsEnvironment0.getApnsGatewayPort());
      
      SSLContext sSLContext0 = null;
      int int0 = 0;
      NioEventLoopGroup nioEventLoopGroup0 = null;
      BlockingQueue<KnownBadPushNotification> blockingQueue0 = null;
      PushManager<KnownBadPushNotification> pushManager0 = null;
      try {
        pushManager0 = new PushManager<KnownBadPushNotification>(apnsEnvironment0, sSLContext0, int0, nioEventLoopGroup0, nioEventLoopGroup0, blockingQueue0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class io.netty.util.concurrent.DefaultPromise
         //
         verifyException("io.netty.util.concurrent.MultithreadEventExecutorGroup", e);
      }
  }

  @Test(timeout = 11000)
  public void test5()  throws Throwable  {
      int int0 = 4983;
      String string0 = "";
      SSLContext sSLContext0 = SSLContext.getDefault();
      assertNotNull(sSLContext0);
      
      NioEventLoopGroup nioEventLoopGroup0 = null;
      String string1 = "Failed to close a selector.";
      int int1 = (-1304);
      SSLEngine sSLEngine0 = sSLContext0.createSSLEngine(string1, int1);
      assertFalse(string1.equals((Object)string0));
      assertFalse(int1 == int0);
      assertNotNull(sSLEngine0);
      assertNotSame(string1, string0);
      
      ApnsEnvironment apnsEnvironment0 = new ApnsEnvironment(string1, int1, string1, int0);
      assertFalse(int0 == int1);
      assertFalse(string1.equals((Object)string0));
      assertFalse(int1 == int0);
      assertNotNull(apnsEnvironment0);
      assertEquals("Failed to close a selector.", apnsEnvironment0.getFeedbackHost());
      assertEquals("Failed to close a selector.", apnsEnvironment0.getApnsGatewayHost());
      assertEquals((-1304), apnsEnvironment0.getApnsGatewayPort());
      assertEquals(4983, apnsEnvironment0.getFeedbackPort());
      
      int int2 = 123;
      LinkedTransferQueue<KnownBadPushNotification> linkedTransferQueue0 = new LinkedTransferQueue<KnownBadPushNotification>();
      assertNotNull(linkedTransferQueue0);
      
      PushManager<KnownBadPushNotification> pushManager0 = null;
      try {
        pushManager0 = new PushManager<KnownBadPushNotification>(apnsEnvironment0, sSLContext0, int2, nioEventLoopGroup0, nioEventLoopGroup0, linkedTransferQueue0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class io.netty.util.concurrent.DefaultPromise
         //
         verifyException("io.netty.util.concurrent.MultithreadEventExecutorGroup", e);
      }
  }
}
